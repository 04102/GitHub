###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:22 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_UserData.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\WM_UserData.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _UserData.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    UserData.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_UserData.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_UserData.c
     19          Purpose     : Implementation of WM_xxxUserData
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          #include <string.h>           /* for memcpy, memset */
     25          
     26          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     27          
     28          /*********************************************************************
     29          *
     30          *       Static code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       _Min
     37          */
     38          static int Min(int v0, int v1) {
     39            return (v0 < v1) ? v0 : v1;
     40          }
     41          
     42          /*********************************************************************
     43          *
     44          *       _CalcNumBytes
     45          */
     46          static int _CalcNumBytes(WM_HWIN hWin, int NumBytes) {
     47            return Min(GUI_ALLOC_GetSize(hWin) - sizeof(WM_Obj), NumBytes);
     48          }
     49          
     50          /*********************************************************************
     51          *
     52          *       Public code
     53          *
     54          **********************************************************************
     55          */
     56          /*********************************************************************
     57          *
     58          *       WM_GetUserData
     59          *
     60          *  Purpose
     61          *    Get the User data (extra bytes) associated with a window
     62          *    These bytes have typically been set using WM_SetUserData first.
     63          *    (If not, they are 0)
     64          *  Return value:
     65          *    Number of bytes fetched. (<= SizeofBuffer)
     66          */

   \                                 In section .text, align 4, keep-with-next
     67          int WM_GetUserData(WM_HWIN hWin, void* pDest, int NumBytes) {
   \                     WM_GetUserData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     68            if (hWin) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0B00000A           BEQ      ??WM_GetUserData_0
     69              WM_Obj *pWin;
     70              NumBytes = _CalcNumBytes(hWin, NumBytes);
   \   00000018   ........           BL       GUI_ALLOC_GetSize
   \   0000001C   2C0040E2           SUB      R0,R0,#+44
   \   00000020   060050E1           CMP      R0,R6
   \   00000024   0060A0D1           MOVLE    R6,R0
     71              WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
     72              pWin = WM_H2P(hWin);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       GUI_ALLOC_h2p
     73              GUI_MEMCPY(pDest, pWin + 1, NumBytes);
   \   00000034   2C1080E2           ADD      R1,R0,#+44
   \   00000038   0620A0E1           MOV      R2,R6
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           BL       __aeabi_memcpy
     74              WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
     75            }
     76            return NumBytes;
   \                     ??WM_GetUserData_0:
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7080BDE8           POP      {R4-R6,PC}       ;; return
     77          }
     78          
     79          /*********************************************************************
     80          *
     81          *       WM_SetUserData
     82          *
     83          *  Purpose
     84          *    Set the User data (extra bytes) associated with a window
     85          *  Return value:
     86          *    Number of bytes fetched. (<= SizeofBuffer)
     87          */

   \                                 In section .text, align 4, keep-with-next
     88          int WM_SetUserData(WM_HWIN hWin, const void* pSrc, int NumBytes) {
   \                     WM_SetUserData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     89            if (hWin) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0B00000A           BEQ      ??WM_SetUserData_0
     90              WM_Obj *pWin;
     91              NumBytes = _CalcNumBytes(hWin, NumBytes);
   \   00000018   ........           BL       GUI_ALLOC_GetSize
   \   0000001C   2C0040E2           SUB      R0,R0,#+44
   \   00000020   060050E1           CMP      R0,R6
   \   00000024   0060A0D1           MOVLE    R6,R0
     92              WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
     93              pWin = WM_H2P(hWin);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       GUI_ALLOC_h2p
     94              GUI_MEMCPY(pWin + 1, pSrc, NumBytes);
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   2C0080E2           ADD      R0,R0,#+44
   \   00000040   ........           BL       __aeabi_memcpy
     95              WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
     96            }
     97            return NumBytes;
   \                     ??WM_SetUserData_0:
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   7080BDE8           POP      {R4-R6,PC}       ;; return
     98          }
     99          
    100          #else
    101            void WM_UserData_C(void) {} /* avoid empty object files */
    102          #endif
    103          
    104          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     WM_GetUserData     16
     WM_SetUserData     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     WM_GetUserData   80
     WM_SetUserData   80

 
 160 bytes in section .text
 
 160 bytes of CODE memory

Errors: none
Warnings: none
