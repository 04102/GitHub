###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:50 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\Alarm.cpp                                   #
#    Command line =  C:\DUII\DUII\Alarm.cpp -D DEBUG=1 -D SDRAM_TARGET=1 -D   #
#                    USB_IS_HIGH_SPEED -D XIGNORE_TEMPERATURE -D              #
#                    BUILD_DEBUG_PORT -D PROFILER -lCN                        #
#                    C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\   #
#                    -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\ #
#                     --debug --endian=little --cpu=ARM926EJ-S -e --fpu=None  #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --eec++                              #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Al #
#                    arm.lst                                                  #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Ala #
#                    rm.o                                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\Alarm.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: Alarm.cpp
      5          Description: Alarm class
      6          -----------------------------------------------------------------
      7          */
      8          
      9          #include "Alarm.hpp"
     10          

   \                                 In section .text, align 4, keep-with-next
     11          Alarm::Alarm(bool bEnabled, float fMinValue, float fMaxValue, GUI_COLOR cColor)
     12          {
     13          	Alarm(bEnabled, fMinValue, fMaxValue, cColor, cColor, NORMAL, NULL, NULL);
     14          }
   \                     _ZN5AlarmC1Ebffm:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     15          

   \                                 In section .text, align 4, keep-with-next
     16          Alarm::Alarm(bool bEnabled, float fMinValue, float fMaxValue, GUI_COLOR cColor, GUI_COLOR cDarkColor, AlarmType tType, Alarm *pNext, Alarm *pPrev)
     17          {
   \                     _ZN5AlarmC1Ebffmm9AlarmTypePS_S1_:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10C09DE5           LDR      R12,[SP, #+16]
   \   00000008   14E09DE5           LDR      LR,[SP, #+20]
   \   0000000C   1840DDE5           LDRB     R4,[SP, #+24]
   \   00000010   1C509DE5           LDR      R5,[SP, #+28]
   \   00000014   20609DE5           LDR      R6,[SP, #+32]
     18          	Enabled = bEnabled;
   \   00000018   0010C0E5           STRB     R1,[R0, #+0]
     19          	MinValue = fMinValue;
   \   0000001C   042080E5           STR      R2,[R0, #+4]
     20          	MaxValue = fMaxValue;
   \   00000020   083080E5           STR      R3,[R0, #+8]
     21          	Color = cColor;
   \   00000024   0CC080E5           STR      R12,[R0, #+12]
     22          	DarkColor = cDarkColor;
   \   00000028   10E080E5           STR      LR,[R0, #+16]
     23          	Next = pNext;
   \   0000002C   185080E5           STR      R5,[R0, #+24]
     24          	Prev = pPrev;
   \   00000030   1C6080E5           STR      R6,[R0, #+28]
     25          	Type = tType;
   \   00000034   1440C0E5           STRB     R4,[R0, #+20]
     26          }
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp Alarm::subobject Alarm(bool, float, float, GUI_COLOR)
   \                     _ZN5AlarmC2Ebffm:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp Alarm::subobject Alarm(bool, float, float, GUI_COLOR, GUI_COLOR, AlarmType, Alarm *, Alarm *)
   \                     _ZN5AlarmC2Ebffmm9AlarmTypePS_S1_:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10C09DE5           LDR      R12,[SP, #+16]
   \   00000008   14E09DE5           LDR      LR,[SP, #+20]
   \   0000000C   1840DDE5           LDRB     R4,[SP, #+24]
   \   00000010   1C509DE5           LDR      R5,[SP, #+28]
   \   00000014   20609DE5           LDR      R6,[SP, #+32]
   \   00000018   0010C0E5           STRB     R1,[R0, #+0]
   \   0000001C   042080E5           STR      R2,[R0, #+4]
   \   00000020   083080E5           STR      R3,[R0, #+8]
   \   00000024   0CC080E5           STR      R12,[R0, #+12]
   \   00000028   10E080E5           STR      LR,[R0, #+16]
   \   0000002C   185080E5           STR      R5,[R0, #+24]
   \   00000030   1C6080E5           STR      R6,[R0, #+28]
   \   00000034   1440C0E5           STRB     R4,[R0, #+20]
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     Alarm::Alarm(bool, float, float, GUI_COLOR)
                                         0
     Alarm::Alarm(bool, float, float, GUI_COLOR, GUI_COLOR, AlarmType, Alarm *, Alarm *)
                                        16
     Alarm::subobject Alarm(bool, float, float, GUI_COLOR)
                                         0
     Alarm::subobject Alarm(bool, float, float, GUI_COLOR, GUI_COLOR, AlarmType, Alarm *, Alarm *)
                                        16


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     Alarm::Alarm(bool, float, float, GUI_COLOR)
                                       4
     Alarm::Alarm(bool, float, float, GUI_COLOR, GUI_COLOR, AlarmType, Alarm *, Alarm *)
                                      60
     Alarm::subobject Alarm(bool, float, float, GUI_COLOR)
                                       4
     Alarm::subobject Alarm(bool, float, float, GUI_COLOR, GUI_COLOR, AlarmType, Alarm *, Alarm *)
                                      60

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
