###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:19 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_MoveChildTo.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\WM_MoveChildTo.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _MoveChildTo.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    MoveChildTo.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_MoveChildTo.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_MoveChildTo.C
     19          Purpose     : Windows manager, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public API code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_MoveChildTo
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void WM_MoveChildTo(WM_HWIN hWin, int x, int y) {
   \                     WM_MoveChildTo:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0270A0E1           MOV      R7,R2
     38            if (hWin) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   1300000A           BEQ      ??WM_MoveChildTo_0
     39              WM_HWIN hParent;
     40              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     41              hParent = WM_GetParent(hWin);
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       WM_GetParent
     42              if (hParent) {
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0D00000A           BEQ      ??WM_MoveChildTo_1
     43                WM_Obj * pParent, * pWin;
     44                pParent = WM_HANDLE2PTR(hParent);
   \   00000030   ........           BL       GUI_ALLOC_h2p
   \   00000034   0060A0E1           MOV      R6,R0
     45                pWin    = WM_HANDLE2PTR(hWin);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       GUI_ALLOC_h2p
     46                x -= pWin->Rect.x0 - pParent->Rect.x0;
     47                y -= pWin->Rect.y0 - pParent->Rect.y0;
     48                WM__MoveWindow(hWin, x, y);
   \   00000040   F210D0E1           LDRSH    R1,[R0, #+2]
   \   00000044   F220D6E1           LDRSH    R2,[R6, #+2]
   \   00000048   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000004C   011047E0           SUB      R1,R7,R1
   \   00000050   012082E0           ADD      R2,R2,R1
   \   00000054   F010D6E1           LDRSH    R1,[R6, #+0]
   \   00000058   000045E0           SUB      R0,R5,R0
   \   0000005C   001081E0           ADD      R1,R1,R0
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WM__MoveWindow
     49              }
     50              WM_UNLOCK();
   \                     ??WM_MoveChildTo_1:
   \   00000068   ........           BL       GUI_Unlock
     51            }
     52          }
   \                     ??WM_MoveChildTo_0:
   \   0000006C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000070   F080BDE8           POP      {R4-R7,PC}       ;; return
     53          
     54          #else
     55            void WM_MoveChildTo_c(void) {} /* avoid empty object files */
     56          #endif   /* GUI_WINSUPPORT */
     57          
     58          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     WM_MoveChildTo     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     WM_MoveChildTo  116

 
 116 bytes in section .text
 
 116 bytes of CODE memory

Errors: none
Warnings: none
