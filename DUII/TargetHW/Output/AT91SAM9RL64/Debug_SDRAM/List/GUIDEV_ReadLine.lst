###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:30 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIDEV_ReadLine.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\GUIDEV_ReadLine.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    IDEV_ReadLine.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    DEV_ReadLine.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIDEV_ReadLine.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIDEV_WriteAlpha.C
     19          Purpose     : Implementation of memory devices
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /* Memory device capabilities are compiled only if support for them is enabled.*/ 
     26          #if GUI_SUPPORT_MEMDEV
     27          
     28          /*********************************************************************
     29          *
     30          *       GUI_MEMDEV__ReadLine
     31          */

   \                                 In section .text, align 4, keep-with-next
     32          void GUI_MEMDEV__ReadLine(int x0, int y, int x1, LCD_PIXELINDEX * pBuffer) {
   \                     GUI_MEMDEV__ReadLine:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     33            LCD_RECT r;
     34            GUI_DEVICE * pDevice;
     35            pDevice = GUI_Context.apDevice[GUI_Context.SelLayer];
   \   00000008   8C009FE5           LDR      R0,??GUI_MEMDEV__ReadLine_0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   1110D0E5           LDRB     R1,[R0, #+17]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   10D04DE2           SUB      SP,SP,#+16
   \   0000001C   010180E0           ADD      R0,R0,R1, LSL #+2
   \   00000020   488090E5           LDR      R8,[R0, #+72]
   \   00000024   0370A0E1           MOV      R7,R3
     36          
     37            pDevice->pDeviceAPI->pfGetRect(pDevice, &r);
   \   00000028   0C2098E5           LDR      R2,[R8, #+12]
   \   0000002C   08108DE2           ADD      R1,SP,#+8
   \   00000030   0800A0E1           MOV      R0,R8
   \   00000034   302092E5           LDR      R2,[R2, #+48]
   \   00000038   32FF2FE1           BLX      R2
     38            if (x0 > r.x1) {
   \   0000003C   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000040   040050E1           CMP      R0,R4
     39              return;
     40            }
     41            if (x1 < r.x0) {
   \   00000044   F810DDA1           LDRSHGE  R1,[SP, #+8]
   \   00000048   010056A1           CMPGE    R6,R1
     42              return;
     43            }
     44            if (y > r.y1) {
   \   0000004C   FE20DDA1           LDRSHGE  R2,[SP, #+14]
   \   00000050   050052A1           CMPGE    R2,R5
     45              return;
     46            }
     47            if (y < r.y0) {
   \   00000054   FA20DDA1           LDRSHGE  R2,[SP, #+10]
   \   00000058   020055A1           CMPGE    R5,R2
   \   0000005C   0C0000BA           BLT      ??GUI_MEMDEV__ReadLine_1
     48              return;
     49            }
     50            if (x0 < r.x0) {
   \   00000060   010054E1           CMP      R4,R1
     51              pBuffer += r.x0 - x0;
   \   00000064   042041B0           SUBLT    R2,R1,R4
   \   00000068   027187B0           ADDLT    R7,R7,R2, LSL #+2
     52              x0 = r.x0;
   \   0000006C   0140A0B1           MOVLT    R4,R1
     53            }
     54            if (x1 > r.x1) {
   \   00000070   060050E1           CMP      R0,R6
     55              x1 = r.x1;
   \   00000074   0060A0B1           MOVLT    R6,R0
     56            }
     57            GUI_ReadRect(x0, y, x1, y, pBuffer, pDevice);
   \   00000078   04808DE5           STR      R8,[SP, #+4]
   \   0000007C   00708DE5           STR      R7,[SP, #+0]
   \   00000080   0530A0E1           MOV      R3,R5
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       GUI_ReadRect
     58          }
   \                     ??GUI_MEMDEV__ReadLine_1:
   \   00000094   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000098   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??GUI_MEMDEV__ReadLine_0:
   \   0000009C   ........           DC32     GUI_Context
     59          
     60          #else
     61          
     62          void GUI_MEMDEV__ReadLine_C(void);
     63          void GUI_MEMDEV__ReadLine_C(void) {}
     64          
     65          #endif /* GUI_SUPPORT_MEMDEV */
     66          
     67          /*************************** end of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_MEMDEV__ReadLine     40


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     GUI_MEMDEV__ReadLine  160

 
 160 bytes in section .text
 
 160 bytes of CODE memory

Errors: none
Warnings: none
