###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:55 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\GeneralConfig.c                             #
#    Command line =  C:\DUII\DUII\GeneralConfig.c -D DEBUG=1 -D               #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Ge #
#                    neralConfig.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Gen #
#                    eralConfig.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\GeneralConfig.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          #include <stdio.h>
     23          #include <stdlib.h>
     24          #include "DUII.h"
     25          #include "GUI.h"
     26          #include "GeneralConfig.h"
     27          #include "commondefs.h"
     28          #include "ConfigScreens.h"
     29          #include "DataHandler.h"
     30          #include "RaceSetupScreens.h"
     31          
     32          /*********************************************************************
     33          *
     34          *       External data and code
     35          *
     36          **********************************************************************
     37          */
     38          extern GUI_CONST_STORAGE GUI_BITMAP bmSystemSetup;
     39          extern GUI_CONST_STORAGE GUI_BITMAP bmGoRacing;
     40          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceSetup;
     41          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceReview;
     42          extern GUI_CONST_STORAGE GUI_BITMAP bmBackground;
     43          extern GUI_CONST_STORAGE GUI_BITMAP bmTraqmateLogo;
     44          #ifdef	WITH_BANNER
     45          extern GUI_CONST_STORAGE GUI_BITMAP bmBannerBack;
     46          #endif
     47          extern int suspendForHelp;
     48          
     49          
     50          /*********************************************************************
     51          *
     52          *       Public code
     53          *
     54          **********************************************************************
     55          */
     56          
     57          /*********************************************************************
     58          *
     59          *       Local Prototypes
     60          *
     61          **********************************************************************
     62          */
     63          
     64          /*********************************************************************
     65          *
     66          *       Local Defines
     67          *
     68          **********************************************************************
     69          */
     70          #define	GORACING_BUTTON		GUI_ID_USER + 1
     71          #define	RACEREVIEW_BUTTON	GUI_ID_USER + 2
     72          #define	SETUP_BUTTON		GUI_ID_USER + 3
     73          #define	SYSTEMSETUP_BUTTON	GUI_ID_USER + 4
     74          
     75          /*********************************************************************
     76          *
     77          *       Local Valiables
     78          *
     79          **********************************************************************
     80          */

   \                                 In section .bss, align 4
     81          static WM_HWIN hWnd;
   \                     hWnd:
   \   00000000                      DS8 4
     82          int glbErrorFlag = 0;
   \                     glbErrorFlag:
   \   00000004                      DS8 4
   \   00000008                      DS8 4
     83          static int clickedOnThisScreen;
     84          

   \                                 In section .text, align 4, keep-with-next
     85          const GUI_RECT BannerRect = { 0, 0, XSIZE_PHYS, 35 };
   \                     BannerRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   00000000E001       DC16 0, 0, 480, 35
   \              2300        

   \                                 In section .rodata, align 4, keep-with-next
     86          const GUI_RECT InfoTimeRect = { 0, 0, 80, 35 };
   \                     InfoTimeRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   000000005000       DC16 0, 0, 80, 35
   \              2300        

   \                                 In section .rodata, align 4, keep-with-next
     87          const GUI_RECT BannerTimeRect = { 42, 9, 42+80, 9+22 };
   \                     BannerTimeRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2A0009007A00       DC16 42, 9, 122, 31
   \              1F00        
     88          
     89          
     90          //int ButtonIDs[] = {GO_RACING, REVIEW_SESSIONS, RACE_SETUP, SYSTEM_SETUP};
     91          

   \                                 In section .text, align 4, keep-with-next
     92          WM_HWIN GetGeneralConfinScreenWindowHandle(void)
     93          {
     94          	return hWnd;
   \                     GetGeneralConfinScreenWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     95          }
     96          

   \                                 In section .text, align 4, keep-with-next
     97          static void _cbGeneralConfigCallback(WM_MESSAGE * pMsg) {
   \                     _cbGeneralConfigCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     98          	int NCode, Id;
     99          	//int Sel;
    100          
    101          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0B0050E2           SUBS     R0,R0,#+11
   \   00000014   5B00000A           BEQ      ??_cbGeneralConfigCallback_1
   \   00000018   040050E2           SUBS     R0,R0,#+4
   \   0000001C   1200000A           BEQ      ??_cbGeneralConfigCallback_2
   \   00000020   170050E2           SUBS     R0,R0,#+23
   \   00000024   1E00000A           BEQ      ??_cbGeneralConfigCallback_3
   \   00000028   ED0050E2           SUBS     R0,R0,#+237
   \   0000002C   5900001A           BNE      ??_cbGeneralConfigCallback_4
    102          	{
    103          	case WM_TIMER:
    104          		if (!suspendForHelp)
   \   00000030   ........           LDR      R0,??DataTable7_1
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   5700001A           BNE      ??_cbGeneralConfigCallback_5
    105          			if (pMsg->Data.v == hScreenTimer)
   \   00000040   ........           LDR      R0,??DataTable7_2
   \   00000044   0C1094E5           LDR      R1,[R4, #+12]
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   000051E1           CMP      R1,R0
   \   00000050   5200001A           BNE      ??_cbGeneralConfigCallback_5
    106          			{
    107          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000054   7D10A0E3           MOV      R1,#+125
   \   00000058   ........           BL       WM_RestartTimer
    108          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   0000005C   ........           ADR      R1,BannerRect
   \   00000060   040094E5           LDR      R0,[R4, #+4]
   \   00000064   ........           BL       WM_InvalidateRect
   \   00000068   4C0000EA           B        ??_cbGeneralConfigCallback_5
    109          			}
    110          		break;
    111          
    112          	case WM_PAINT:
    113          		if (!suspendForHelp)
   \                     ??_cbGeneralConfigCallback_2:
   \   0000006C   ........           LDR      R0,??DataTable7_1
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   4800001A           BNE      ??_cbGeneralConfigCallback_5
    114          		{
    115          			/* Paint the background window */
    116          			GUI_DrawBitmap(&bmBackground, 0, 0);
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   ........           LDR      R0,??DataTable7_3
   \   00000088   ........           BL       GUI_DrawBitmap
    117          #ifdef	WITH_BANNER
    118          			GUI_DrawBitmap(&bmBannerBack, 0, 0);
    119          #endif
    120          			GUI_DrawBitmap(&bmTraqmateLogo, 148, 6);
   \   0000008C   0620A0E3           MOV      R2,#+6
   \   00000090   9410A0E3           MOV      R1,#+148
   \   00000094   ........           LDR      R0,??DataTable7_4
   \   00000098   ........           BL       GUI_DrawBitmap
    121          			DrawSignalStrength();
   \   0000009C   ........           BL       DrawSignalStrength
   \   000000A0   3E0000EA           B        ??_cbGeneralConfigCallback_5
    122          		}
    123          		break;
    124          
    125          	case WM_NOTIFY_PARENT:
    126                Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??_cbGeneralConfigCallback_3:
   \   000000A4   080094E5           LDR      R0,[R4, #+8]
   \   000000A8   ........           BL       WM_GetId
    127                NCode = pMsg->Data.v;                 // Notification code
    128          	   switch(NCode)
   \   000000AC   0C1094E5           LDR      R1,[R4, #+12]
   \   000000B0   010051E3           CMP      R1,#+1
   \   000000B4   0300000A           BEQ      ??_cbGeneralConfigCallback_6
   \   000000B8   3800003A           BCC      ??_cbGeneralConfigCallback_5
   \   000000BC   020051E3           CMP      R1,#+2
   \   000000C0   0300000A           BEQ      ??_cbGeneralConfigCallback_7
   \   000000C4   350000EA           B        ??_cbGeneralConfigCallback_5
    129          		{
    130          			case WM_NOTIFICATION_CLICKED:
    131          				clickedOnThisScreen = TRUE;
   \                     ??_cbGeneralConfigCallback_6:
   \   000000C8   ........           LDR      R0,??DataTable7
   \   000000CC   081080E5           STR      R1,[R0, #+8]
    132          				break;
   \   000000D0   320000EA           B        ??_cbGeneralConfigCallback_5
    133          
    134          			case WM_NOTIFICATION_RELEASED:
    135          				if (clickedOnThisScreen && !processingScreenTransition)
   \                     ??_cbGeneralConfigCallback_7:
   \   000000D4   ........           LDR      R5,??DataTable7
   \   000000D8   081095E5           LDR      R1,[R5, #+8]
   \   000000DC   000051E3           CMP      R1,#+0
   \   000000E0   2E00000A           BEQ      ??_cbGeneralConfigCallback_5
   \   000000E4   ........           LDR      R4,??DataTable7_5
   \   000000E8   0010D4E5           LDRB     R1,[R4, #+0]
   \   000000EC   000051E3           CMP      R1,#+0
   \   000000F0   2A00001A           BNE      ??_cbGeneralConfigCallback_5
    136          					switch (Id)
   \   000000F4   010040E2           SUB      R0,R0,#+1
   \   000000F8   800E40E2           SUB      R0,R0,#+2048
   \   000000FC   030050E3           CMP      R0,#+3
   \   00000100   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??_cbGeneralConfigCallback_0:
   \   00000104   2500008A           BHI      ??_cbGeneralConfigCallback_5
   \   00000108   020000EA           B        ??_cbGeneralConfigCallback_8
   \   0000010C   060000EA           B        ??_cbGeneralConfigCallback_9
   \   00000110   120000EA           B        ??_cbGeneralConfigCallback_10
   \   00000114   160000EA           B        ??_cbGeneralConfigCallback_11
    137          					{
    138          						case GORACING_BUTTON:
    139          							processingScreenTransition = true;		// This will be moved into DisplayNewScreenList when it is proven to work
   \                     ??_cbGeneralConfigCallback_8:
   \   00000118   0100A0E3           MOV      R0,#+1
   \   0000011C   0000C4E5           STRB     R0,[R4, #+0]
    140          							DisplayNewScreenList(CONFIG_SCREEN_TYPE, GO_RACING, hWnd);
   \   00000120   002095E5           LDR      R2,[R5, #+0]
   \                     ??_cbGeneralConfigCallback_12:
   \   00000124   ........           BL       DisplayNewScreenList
    141          							break;
   \   00000128   1C0000EA           B        ??_cbGeneralConfigCallback_5
    142          
    143          						case RACEREVIEW_BUTTON:
    144          							// Always initially display default screen (timing) when coming in "from the top"
    145          							InitReviewDisplayTypes();
   \                     ??_cbGeneralConfigCallback_9:
   \   0000012C   ........           BL       InitReviewDisplayTypes
    146          #ifdef _WINDOWS
    147          							processingScreenTransition = true;
    148          							DisplayNewScreenList(CONFIG_SCREEN_TYPE, REVIEW_SESSIONS, hWnd);
    149          #else
    150          							if (unsavedSysData.sdCardInserted)
   \   00000130   ........           LDR      R0,??DataTable7_6
   \   00000134   002095E5           LDR      R2,[R5, #+0]
   \   00000138   C00090E5           LDR      R0,[R0, #+192]
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   0300000A           BEQ      ??_cbGeneralConfigCallback_13
    151          							{
    152          								processingScreenTransition = true;
   \   00000144   0100A0E3           MOV      R0,#+1
   \   00000148   0000C4E5           STRB     R0,[R4, #+0]
    153          								DisplayNewScreenList(CONFIG_SCREEN_TYPE, REVIEW_SESSIONS, hWnd);
   \   0000014C   0210A0E3           MOV      R1,#+2
   \   00000150   F3FFFFEA           B        ??_cbGeneralConfigCallback_12
    154          							}
    155          							else NotSupportedPopup(hWnd);
   \                     ??_cbGeneralConfigCallback_13:
   \   00000154   0200A0E1           MOV      R0,R2
   \   00000158   ........           BL       NotSupportedPopup
   \   0000015C   0F0000EA           B        ??_cbGeneralConfigCallback_5
    156          #endif							
    157          							break;
    158          
    159          						case SETUP_BUTTON:
    160          							processingScreenTransition = true;
   \                     ??_cbGeneralConfigCallback_10:
   \   00000160   0100A0E3           MOV      R0,#+1
   \   00000164   0000C4E5           STRB     R0,[R4, #+0]
    161          							DisplayNewScreenList(CONFIG_SCREEN_TYPE, RACE_SETUP, hWnd);
   \   00000168   002095E5           LDR      R2,[R5, #+0]
   \   0000016C   0110A0E3           MOV      R1,#+1
   \   00000170   EBFFFFEA           B        ??_cbGeneralConfigCallback_12
    162          							break;
    163          
    164          						case SYSTEMSETUP_BUTTON:
    165          							processingScreenTransition = true;
   \                     ??_cbGeneralConfigCallback_11:
   \   00000174   0100A0E3           MOV      R0,#+1
   \   00000178   0000C4E5           STRB     R0,[R4, #+0]
    166          							DisplayNewScreenList(CONFIG_SCREEN_TYPE, SYSTEM_SETUP, hWnd);
   \   0000017C   002095E5           LDR      R2,[R5, #+0]
   \   00000180   0310A0E3           MOV      R1,#+3
   \   00000184   E6FFFFEA           B        ??_cbGeneralConfigCallback_12
    167          							break;
    168          					}
    169          				break;
    170          	  };
    171          	  break;
    172          
    173          	case WM_DELETE:
    174          		processingScreenTransition = false;
   \                     ??_cbGeneralConfigCallback_1:
   \   00000188   ........           LDR      R0,??DataTable7_5
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   0010C0E5           STRB     R1,[R0, #+0]
    175          		break;
   \   00000194   010000EA           B        ??_cbGeneralConfigCallback_5
    176          
    177          	default:
    178          		  WM_DefaultProc(pMsg);
   \                     ??_cbGeneralConfigCallback_4:
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   ........           BL       WM_DefaultProc
    179          	};
    180          }
   \                     ??_cbGeneralConfigCallback_5:
   \   000001A0   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000001A4   3080BDE8           POP      {R4,R5,PC}       ;; return
    181          
    182          /*********************************************************************
    183          *
    184          *       General Config Screen
    185          */
    186          

   \                                 In section .text, align 4, keep-with-next
    187          void Display_GeneralConfig(WM_HWIN hPrev)
    188          {
   \                     Display_GeneralConfig:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
    189          BUTTON_Handle hButton;
    190          
    191          	if (hPrev)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??Display_GeneralConfig_0
    192          	{
    193          		WM_DeleteWindow(hPrev);
   \   00000010   ........           BL       WM_DeleteWindow
    194          	}
    195          
    196          	screen_scrolling = HORIZONTAL_ONLY;
   \                     ??Display_GeneralConfig_0:
   \   00000014   ........           LDR      R0,??DataTable7_7
   \   00000018   0210A0E3           MOV      R1,#+2
   \   0000001C   001080E5           STR      R1,[R0, #+0]
    197          
    198          	GeneralConfigIgnoreNextKeyRelease();
   \   00000020   ........           LDR      R4,??DataTable7
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   080084E5           STR      R0,[R4, #+8]
    199          
    200          	SetScreenType(GENERAL_CONFIG_SCREEN_TYPE);
   \   0000002C   ........           BL       SetScreenType
    201          
    202          	if ((hWnd = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, _cbGeneralConfigCallback, 0)) <= 0)
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   08008DE5           STR      R0,[SP, #+8]
   \   00000038   ........           LDR      R0,??DataTable7_8
   \   0000003C   443FA0E3           MOV      R3,#+272
   \   00000040   04008DE5           STR      R0,[SP, #+4]
   \   00000044   0200A0E3           MOV      R0,#+2
   \   00000048   800D80E3           ORR      R0,R0,#0x2000
   \   0000004C   00008DE5           STR      R0,[SP, #+0]
   \   00000050   782FA0E3           MOV      R2,#+480
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   ........           BL       WM_CreateWindow
   \   00000060   010050E3           CMP      R0,#+1
    203          		SystemError();
   \   00000064   0110A0B3           MOVLT    R1,#+1
   \   00000068   041084B5           STRLT    R1,[R4, #+4]
    204          
    205          	hButton = BUTTON_CreateEx(41, 38, 178, 115, hWnd, WM_CF_SHOW, 0, GORACING_BUTTON);
   \   0000006C   0110A0E3           MOV      R1,#+1
   \   00000070   801E81E3           ORR      R1,R1,#0x800
   \   00000074   0C108DE5           STR      R1,[SP, #+12]
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   08108DE5           STR      R1,[SP, #+8]
   \   00000080   0210A0E3           MOV      R1,#+2
   \   00000084   000084E5           STR      R0,[R4, #+0]
   \   00000088   04108DE5           STR      R1,[SP, #+4]
   \   0000008C   00008DE5           STR      R0,[SP, #+0]
   \   00000090   7330A0E3           MOV      R3,#+115
   \   00000094   B220A0E3           MOV      R2,#+178
   \   00000098   2610A0E3           MOV      R1,#+38
   \   0000009C   2900A0E3           MOV      R0,#+41
   \   000000A0   ........           BL       BUTTON_CreateEx
    206          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmGoRacing);
   \   000000A4   ........           LDR      R2,??DataTable7_9
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   ........           BL       BUTTON_SetBitmap
    207          
    208          	hButton = BUTTON_CreateEx(261, 38, 178, 114, hWnd, WM_CF_SHOW, 0, RACEREVIEW_BUTTON);
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   800E80E3           ORR      R0,R0,#0x800
   \   000000B8   0C008DE5           STR      R0,[SP, #+12]
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   08008DE5           STR      R0,[SP, #+8]
   \   000000C4   0200A0E3           MOV      R0,#+2
   \   000000C8   04008DE5           STR      R0,[SP, #+4]
   \   000000CC   000094E5           LDR      R0,[R4, #+0]
   \   000000D0   0550A0E3           MOV      R5,#+5
   \   000000D4   405F85E3           ORR      R5,R5,#0x100
   \   000000D8   00008DE5           STR      R0,[SP, #+0]
   \   000000DC   7230A0E3           MOV      R3,#+114
   \   000000E0   B220A0E3           MOV      R2,#+178
   \   000000E4   2610A0E3           MOV      R1,#+38
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   ........           BL       BUTTON_CreateEx
    209          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRaceReview);
   \   000000F0   ........           LDR      R2,??DataTable7_10
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   ........           BL       BUTTON_SetBitmap
    210          
    211          	hButton = BUTTON_CreateEx(41, 156, 178, 115, hWnd, WM_CF_SHOW, 0, SETUP_BUTTON);
   \   000000FC   0300A0E3           MOV      R0,#+3
   \   00000100   800E80E3           ORR      R0,R0,#0x800
   \   00000104   0C008DE5           STR      R0,[SP, #+12]
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   08008DE5           STR      R0,[SP, #+8]
   \   00000110   0200A0E3           MOV      R0,#+2
   \   00000114   04008DE5           STR      R0,[SP, #+4]
   \   00000118   000094E5           LDR      R0,[R4, #+0]
   \   0000011C   7330A0E3           MOV      R3,#+115
   \   00000120   00008DE5           STR      R0,[SP, #+0]
   \   00000124   B220A0E3           MOV      R2,#+178
   \   00000128   9C10A0E3           MOV      R1,#+156
   \   0000012C   2900A0E3           MOV      R0,#+41
   \   00000130   ........           BL       BUTTON_CreateEx
    212          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRaceSetup);
   \   00000134   ........           LDR      R2,??DataTable7_11
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   ........           BL       BUTTON_SetBitmap
    213          
    214          	hButton = BUTTON_CreateEx(261, 156, 178, 115, hWnd, WM_CF_SHOW, 0, SYSTEMSETUP_BUTTON);
   \   00000140   0400A0E3           MOV      R0,#+4
   \   00000144   800E80E3           ORR      R0,R0,#0x800
   \   00000148   0C008DE5           STR      R0,[SP, #+12]
   \   0000014C   0000A0E3           MOV      R0,#+0
   \   00000150   08008DE5           STR      R0,[SP, #+8]
   \   00000154   0200A0E3           MOV      R0,#+2
   \   00000158   04008DE5           STR      R0,[SP, #+4]
   \   0000015C   000094E5           LDR      R0,[R4, #+0]
   \   00000160   7330A0E3           MOV      R3,#+115
   \   00000164   00008DE5           STR      R0,[SP, #+0]
   \   00000168   B220A0E3           MOV      R2,#+178
   \   0000016C   9C10A0E3           MOV      R1,#+156
   \   00000170   0500A0E1           MOV      R0,R5
   \   00000174   ........           BL       BUTTON_CreateEx
    215          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmSystemSetup);
   \   00000178   ........           LDR      R2,??DataTable7_12
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   ........           BL       BUTTON_SetBitmap
    216          
    217          	hScreenTimer = WM_CreateTimer(hWnd, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   00000184   0030A0E3           MOV      R3,#+0
   \   00000188   7D20A0E3           MOV      R2,#+125
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   000094E5           LDR      R0,[R4, #+0]
   \   00000194   ........           BL       WM_CreateTimer
   \   00000198   ........           LDR      R1,??DataTable7_2
    218          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   0000019C   14D08DE2           ADD      SP,SP,#+20
   \   000001A0   000081E5           STR      R0,[R1, #+0]
   \   000001A4   3040BDE8           POP      {R4,R5,LR}
   \   000001A8   ........           B        ResetNewScreen   ;; tailcall
    219          }
    220          

   \                                 In section .text, align 4, keep-with-next
    221          void SystemError(void)
    222          {
    223          	glbErrorFlag = true;
   \                     SystemError:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   0110A0E3           MOV      R1,#+1
   \   00000008   041080E5           STR      R1,[R0, #+4]
    224          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    225          

   \                                 In section .text, align 4, keep-with-next
    226          void GeneralConfigIgnoreNextKeyRelease(void)
    227          {
    228          	clickedOnThisScreen = false;
   \                     GeneralConfigIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   081080E5           STR      R1,[R0, #+8]
    229          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     hWnd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   ........           DC32     suspendForHelp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   ........           DC32     bmTraqmateLogo

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   ........           DC32     processingScreenTransition

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_8:
   \   00000000   ........           DC32     _cbGeneralConfigCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_9:
   \   00000000   ........           DC32     bmGoRacing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_10:
   \   00000000   ........           DC32     bmRaceReview

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_11:
   \   00000000   ........           DC32     bmRaceSetup

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_12:
   \   00000000   ........           DC32     bmSystemSetup
    230          
    231          
    232          /*************************** End of file ****************************/
    233          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     Display_GeneralConfig              32
     GeneralConfigIgnoreNextKeyRelease
                                         0
     GetGeneralConfinScreenWindowHandle
                                         0
     SystemError                         0
     _cbGeneralConfigCallback           16


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     hWnd                             12
     glbErrorFlag
     clickedOnThisScreen
     BannerRect                        8
     InfoTimeRect                      8
     BannerTimeRect                    8
     GetGeneralConfinScreenWindowHandle
                                      12
     _cbGeneralConfigCallback        424
     Display_GeneralConfig           428
     SystemError                      16
     GeneralConfigIgnoreNextKeyRelease
                                      16
     ??DataTable7                      4
     ??DataTable7_1                    4
     ??DataTable7_2                    4
     ??DataTable7_3                    4
     ??DataTable7_4                    4
     ??DataTable7_5                    4
     ??DataTable7_6                    4
     ??DataTable7_7                    4
     ??DataTable7_8                    4
     ??DataTable7_9                    4
     ??DataTable7_10                   4
     ??DataTable7_11                   4
     ??DataTable7_12                   4

 
  12 bytes in section .bss
  16 bytes in section .rodata
 956 bytes in section .text
 
 956 bytes of CODE  memory
  16 bytes of CONST memory
  12 bytes of DATA  memory

Errors: none
Warnings: none
