###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:30 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\Graphics\scrollarrow2.c                     #
#    Command line =  C:\DUII\DUII\Graphics\scrollarrow2.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\sc #
#                    rollarrow2.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\scr #
#                    ollarrow2.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\Graphics\scrollarrow2.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER SYSTEME GmbH                 *
      3          *        Solutions for real time microcontroller applications        *
      4          *                           www.segger.com                           *
      5          **********************************************************************
      6          *
      7          * C-file generated by
      8          *
      9          *        Bitmap converter for emWin V5.04.
     10          *        Compiled Jan  8 2010, 16:37:17
     11          *        (C) 1998 - 2005 Segger Microcontroller Systeme GmbH
     12          *
     13          **********************************************************************
     14          *
     15          * Source file: scrollarrow2
     16          * Dimensions:  15 * 24
     17          * NumColors:   2
     18          *
     19          **********************************************************************
     20          */
     21          
     22          #include <stdlib.h>
     23          
     24          #include "GUI.h"
     25          
     26          #ifndef GUI_CONST_STORAGE
     27            #define GUI_CONST_STORAGE const
     28          #endif
     29          
     30          /*   Palette
     31          The following are the entries of the palette table.
     32          Every entry is a 32-bit value (of which 24 bits are actually used)
     33          the lower   8 bits represent the Red component,
     34          the middle  8 bits represent the Green component,
     35          the highest 8 bits (of the 24 bits used) represent the Blue component
     36          as follows:   0xBBGGRR
     37          */
     38          

   \                                 In section .rodata, align 4, keep-with-next
     39          static GUI_CONST_STORAGE GUI_COLOR Colorsscrollarrow2[] = {
   \                     Colorsscrollarrow2:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   FF0000000000       DC32 255, 0
   \              0000        
     40               0x0000FF,0x000000
     41          };
     42          

   \                                 In section .rodata, align 4, keep-with-next
     43          static GUI_CONST_STORAGE GUI_LOGPALETTE Palscrollarrow2 = {
   \                     Palscrollarrow2:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   00000000           DC8 0, 0, 0, 0
   \   00000008   ........           DC32 Colorsscrollarrow2
     44            2,	/* number of entries */
     45            0, 	/* No transparency */
     46            &Colorsscrollarrow2[0]
     47          };
     48          

   \                                 In section .rodata, align 4, keep-with-next
     49          static GUI_CONST_STORAGE unsigned char acscrollarrow2[] = {
   \                     acscrollarrow2:
   \   00000000                      ; Initializer data, 48 bytes
   \   00000000   FEFEFC7EF83E       DC8 254, 254, 252, 126, 248, 62, 240, 30, 224, 14
   \              F01EE00E    
   \   0000000A   C00680020000       DC8 192, 6, 128, 2, 0, 0, 240, 30, 240, 30
   \              F01EF01E    
   \   00000014   F01EF01EF01E       DC8 240, 30, 240, 30, 240, 30, 240, 30, 240, 30
   \              F01EF01E    
   \   0000001E   F01E00008002       DC8 240, 30, 0, 0, 128, 2, 192, 6, 224, 14
   \              C006E00E    
   \   00000028   F01EF83EFC7E       DC8 240, 30, 248, 62, 252, 126, 254, 254
   \              FEFE        
     50            XXXXXXX_, XXXXXXX_,
     51            XXXXXX__, _XXXXXX_,
     52            XXXXX___, __XXXXX_,
     53            XXXX____, ___XXXX_,
     54            XXX_____, ____XXX_,
     55            XX______, _____XX_,
     56            X_______, ______X_,
     57            ________, ________,
     58            XXXX____, ___XXXX_,
     59            XXXX____, ___XXXX_,
     60            XXXX____, ___XXXX_,
     61            XXXX____, ___XXXX_,
     62            XXXX____, ___XXXX_,
     63            XXXX____, ___XXXX_,
     64            XXXX____, ___XXXX_,
     65            XXXX____, ___XXXX_,
     66            ________, ________,
     67            X_______, ______X_,
     68            XX______, _____XX_,
     69            XXX_____, ____XXX_,
     70            XXXX____, ___XXXX_,
     71            XXXXX___, __XXXXX_,
     72            XXXXXX__, _XXXXXX_,
     73            XXXXXXX_, XXXXXXX_
     74          };
     75          

   \                                 In section .rodata, align 4, keep-with-next
     76          GUI_CONST_STORAGE GUI_BITMAP bmscrollarrow2 = {
   \                     bmscrollarrow2:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   0F0018000200       DC16 15, 24, 2, 1
   \              0100        
   \   00000008   ............       DC32 acscrollarrow2, Palscrollarrow2
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
     77            15, /* XSize */
     78            24, /* YSize */
     79            2, /* BytesPerLine */
     80            1, /* BitsPerPixel */
     81            acscrollarrow2,  /* Pointer to picture data (indices) */
     82            &Palscrollarrow2  /* Pointer to palette */
     83          };
     84          
     85          /* *** End of file *** */


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     Colorsscrollarrow2    8
     Palscrollarrow2      12
     acscrollarrow2       48
     bmscrollarrow2       20

 
 88 bytes in section .rodata
 
 88 bytes of CONST memory

Errors: none
Warnings: none
