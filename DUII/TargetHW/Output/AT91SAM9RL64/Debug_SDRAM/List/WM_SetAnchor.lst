###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:20 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetAnchor.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetAnchor.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _SetAnchor.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    SetAnchor.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetAnchor.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetAnchor.c
     19          Purpose     : Windows manager, implementation of said function
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_SetAnchor
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void WM_SetAnchor(WM_HWIN hWin, U16 AnchorFlags) {
   \                     WM_SetAnchor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     38            if (hWin) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0800000A           BEQ      ??WM_SetAnchor_0
     39              WM_Obj* pWin;
     40              U16 Mask;
     41              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     42              pWin = WM_H2P(hWin);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_h2p
     43              Mask = (WM_SF_ANCHOR_LEFT | WM_SF_ANCHOR_RIGHT | WM_SF_ANCHOR_TOP | WM_SF_ANCHOR_BOTTOM);
     44          
     45              GUI_DEBUG_WARN_IF(AnchorFlags & ~(Mask), "WM_SetAnchor.c: Wrong anchor flags");
     46              #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_PARA
     47                AnchorFlags &= Mask;
     48              #endif
     49          
     50              pWin->Status &= ~(int)Mask;
     51              pWin->Status |= AnchorFlags;
   \   00000024   281090E5           LDR      R1,[R0, #+40]
   \   00000028   782E05E2           AND      R2,R5,#0x780
   \   0000002C   781EC1E3           BIC      R1,R1,#0x780
   \   00000030   011082E1           ORR      R1,R2,R1
   \   00000034   281080E5           STR      R1,[R0, #+40]
     52              WM_UNLOCK();
   \   00000038   ........           BL       GUI_Unlock
     53            }
     54          }
   \                     ??WM_SetAnchor_0:
   \   0000003C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     55          
     56          #else
     57            void WM_SetAnchor_C(void) {} /* avoid empty object files */
     58          #endif
     59          
     60          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function     .cstack
     --------     -------
     WM_SetAnchor     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     WM_SetAnchor     68

 
 68 bytes in section .text
 
 68 bytes of CODE memory

Errors: none
Warnings: none
