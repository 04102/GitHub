###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:50 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapHWAlpha.c             #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapHWAlpha.c -D DEBUG=1  #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DrawBitmapHWAlpha.lst                                  #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DrawBitmapHWAlpha.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawBitmapHWAlpha.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawBitmap.C
     19          Purpose     : Implementation of GUI_DrawBitmap
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _DrawBitmapHWAlpha
     34          */
     35          static void _DrawBitmapHWAlpha(const GUI_BITMAP GUI_UNI_PTR * pBM, int x0, int y0) {
     36            if (pBM->pMethods) {
     37              if (pBM->pMethods->pfDrawHW) {
     38                pBM->pMethods->pfDrawHW(x0, y0, pBM->XSize ,pBM->YSize, (U8 const *)pBM->pData, pBM->pPal, 1, 1);
     39              }
     40            }
     41          }
     42          
     43          /*********************************************************************
     44          *
     45          *       Public code
     46          *
     47          **********************************************************************
     48          */
     49          /*********************************************************************
     50          *
     51          *       GUI_DrawBitmapHWAlpha
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          void GUI_DrawBitmapHWAlpha(const GUI_BITMAP GUI_UNI_PTR * pBM, int x0, int y0) {
   \                     GUI_DrawBitmapHWAlpha:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
     54            #if (GUI_WINSUPPORT)
     55              GUI_RECT r;
     56            #endif
     57            GUI_LOCK();
   \   00000014   ........           BL       GUI_Lock
     58            #if (GUI_WINSUPPORT)
     59              WM_ADDORG(x0,y0);
   \   00000018   AC009FE5           LDR      R0,??GUI_DrawBitmapHWAlpha_0
   \   0000001C   401090E5           LDR      R1,[R0, #+64]
   \   00000020   440090E5           LDR      R0,[R0, #+68]
   \   00000024   055081E0           ADD      R5,R1,R5
   \   00000028   066080E0           ADD      R6,R0,R6
     60              r.x1 = (r.x0 = x0) + pBM->XSize-1;
   \   0000002C   B051CDE1           STRH     R5,[SP, #+16]
   \   00000030   F001DDE1           LDRSH    R0,[SP, #+16]
   \   00000034   F010D4E1           LDRSH    R1,[R4, #+0]
     61              r.y1 = (r.y0 = y0) + pBM->YSize-1;
   \   00000038   B261CDE1           STRH     R6,[SP, #+18]
   \   0000003C   000081E0           ADD      R0,R1,R0
   \   00000040   010040E2           SUB      R0,R0,#+1
   \   00000044   B401CDE1           STRH     R0,[SP, #+20]
   \   00000048   F201DDE1           LDRSH    R0,[SP, #+18]
   \   0000004C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000050   000081E0           ADD      R0,R1,R0
   \   00000054   010040E2           SUB      R0,R0,#+1
   \   00000058   B601CDE1           STRH     R0,[SP, #+22]
     62              WM_ITERATE_START(&r) {
   \   0000005C   10008DE2           ADD      R0,SP,#+16
   \   00000060   ........           BL       WM__InitIVRSearch
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   1400000A           BEQ      ??GUI_DrawBitmapHWAlpha_1
     63            #endif
     64            _DrawBitmapHWAlpha(pBM, x0, y0);
   \                     ??GUI_DrawBitmapHWAlpha_2:
   \   0000006C   10C094E5           LDR      R12,[R4, #+16]
   \   00000070   00005CE3           CMP      R12,#+0
   \   00000074   08009C15           LDRNE    R0,[R12, #+8]
   \   00000078   00005013           CMPNE    R0,#+0
   \   0000007C   0C00000A           BEQ      ??GUI_DrawBitmapHWAlpha_3
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   0C008DE5           STR      R0,[SP, #+12]
   \   00000088   08008DE5           STR      R0,[SP, #+8]
   \   0000008C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000090   0610A0E1           MOV      R1,R6
   \   00000094   04008DE5           STR      R0,[SP, #+4]
   \   00000098   080094E5           LDR      R0,[R4, #+8]
   \   0000009C   00008DE5           STR      R0,[SP, #+0]
   \   000000A0   B230D4E1           LDRH     R3,[R4, #+2]
   \   000000A4   B020D4E1           LDRH     R2,[R4, #+0]
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   08C09CE5           LDR      R12,[R12, #+8]
   \   000000B0   3CFF2FE1           BLX      R12
     65            #if (GUI_WINSUPPORT)
     66              } WM_ITERATE_END();
   \                     ??GUI_DrawBitmapHWAlpha_3:
   \   000000B4   ........           BL       WM__GetNextIVR
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   EAFFFF1A           BNE      ??GUI_DrawBitmapHWAlpha_2
     67            #endif
     68            GUI_UNLOCK();
   \                     ??GUI_DrawBitmapHWAlpha_1:
   \   000000C0   ........           BL       GUI_Unlock
     69          }
   \   000000C4   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000C8   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??GUI_DrawBitmapHWAlpha_0:
   \   000000CC   ........           DC32     GUI_Context
     70          
     71          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function              .cstack
     --------              -------
     GUI_DrawBitmapHWAlpha     40


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     GUI_DrawBitmapHWAlpha  208

 
 208 bytes in section .text
 
 208 bytes of CODE memory

Errors: none
Warnings: none
