###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:15 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_GetFileSize.c                     #
#    Command line =  C:\DUII\TargetHW\FS\FS_GetFileSize.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FS #
#                    _GetFileSize.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FS_ #
#                    GetFileSize.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_GetFileSize.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_GetFileSize.c
     19          Purpose     : Implementation of FS_GetFileSize
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *             #include Section
     26          *
     27          **********************************************************************
     28          */
     29          #include "FS_Int.h"
     30          
     31          
     32          
     33          /*********************************************************************
     34          *
     35          *       Public code, internal
     36          *
     37          **********************************************************************
     38          */
     39          
     40          /*********************************************************************
     41          *
     42          *       FS__GetFileSize
     43          *
     44          *  Function description:
     45          *    Internal version of FS_GetFileSize.
     46          *    Returns the size of a file
     47          *
     48          *  Parameters:
     49          *    pFile       - Pointer to a FS_FILE data structure.
     50          *                  The file must have been opened with read or write access.
     51          *  
     52          *  Return value:
     53          *    0xFFFFFFFF     - Indicates failure
     54          *    0 - 0xFFFFFFFE - File size of the given file
     55          *    
     56          */

   \                                 In section .text, align 4, keep-with-next
     57          U32 FS__GetFileSize(FS_FILE *pFile) {
     58            U32 r;
     59          
     60            r = 0xFFFFFFFFUL;                      /* Error value */
     61            if (pFile) {
   \                     FS__GetFileSize:
   \   00000000   000050E3           CMP      R0,#+0
     62              FS_LOCK_SYS();
     63              r = pFile->pFileObj->Size;
   \   00000004   00009015           LDRNE    R0,[R0, #+0]
   \   00000008   0010E0E3           MVN      R1,#+0
   \   0000000C   04109015           LDRNE    R1,[R0, #+4]
     64              FS_UNLOCK_SYS();
     65            }
     66            return r;
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   1EFF2FE1           BX       LR               ;; return
     67          }
     68          
     69          /*********************************************************************
     70          *
     71          *       Public code
     72          *
     73          **********************************************************************
     74          */
     75          /*********************************************************************
     76          *
     77          *       FS_GetFileSize
     78          *
     79          *  Function description:
     80          *    Returns the size of a file
     81          *
     82          *  Parameters:
     83          *    pFile       - Pointer to a FS_FILE data structure.
     84          *                  The file must have been opened with read or write access.
     85          *  
     86          *  Return value:
     87          *    0xFFFFFFFF     - Indicates failure
     88          *    0 - 0xFFFFFFFE - File size of the given file
     89          *    
     90          */

   \                                 In section .text, align 4, keep-with-next
     91          U32 FS_GetFileSize(FS_FILE *pFile) {
   \                     FS_GetFileSize:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
     92            U32 r;
     93          
     94            FS_LOCK();
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       FS_OS_Lock
     95            r = FS__GetFileSize(pFile);
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   00009415           LDRNE    R0,[R4, #+0]
   \   0000001C   0050E0E3           MVN      R5,#+0
   \   00000020   04509015           LDRNE    R5,[R0, #+4]
     96            FS_UNLOCK();
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   ........           BL       FS_OS_Unlock
     97            return r;
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     98          }
     99          
    100          
    101          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     FS_GetFileSize      16
     FS__GetFileSize      0


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     FS__GetFileSize   24
     FS_GetFileSize    56

 
 80 bytes in section .text
 
 80 bytes of CODE memory

Errors: none
Warnings: none
