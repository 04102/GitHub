###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:07 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__Arabic.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__Arabic.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I__Arabic.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    __Arabic.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__Arabic.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI__Arabic.c
     19          Purpose     : Implementation of arabic routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Types
     30          *
     31          **********************************************************************
     32          */
     33          typedef struct {
     34            U16 Isolated;
     35            U16 Final;
     36            U16 Initial;
     37            U16 Medial;
     38          } KEY_INFO;
     39          
     40          /*********************************************************************
     41          *
     42          *       Static data
     43          *
     44          **********************************************************************
     45          */

   \                                 In section .text, align 4, keep-with-next
     46          static const KEY_INFO _aKeyInfo[] = {
   \                     _aKeyInfo:
   \   00000000                      ; Initializer data, 336 bytes
   \   00000000   80FE00000000       DC16 65152, 0, 0, 0, 65153, 65154, 0, 0, 65155, 65156
   \              000081FE82FE
   \              0000000083FE
   \              84FE        
   \   00000014   0000000085FE       DC16 0, 0, 65157, 65158, 0, 0, 65159, 65160, 0, 0
   \              86FE00000000
   \              87FE88FE0000
   \              0000        
   \   00000028   89FE8AFE8BFE       DC16 65161, 65162, 65163, 65164, 65165, 65166, 0, 0, 65167, 65168
   \              8CFE8DFE8EFE
   \              000000008FFE
   \              90FE        
   \   0000003C   91FE92FE93FE       DC16 65169, 65170, 65171, 65172, 0, 0, 65173, 65174, 65175, 65176
   \              94FE00000000
   \              95FE96FE97FE
   \              98FE        
   \   00000050   99FE9AFE9BFE       DC16 65177, 65178, 65179, 65180, 65181, 65182, 65183, 65184, 65185, 65186
   \              9CFE9DFE9EFE
   \              9FFEA0FEA1FE
   \              A2FE        
   \   00000064   A3FEA4FEA5FE       DC16 65187, 65188, 65189, 65190, 65191, 65192, 65193, 65194, 0, 0
   \              A6FEA7FEA8FE
   \              A9FEAAFE0000
   \              0000        
   \   00000078   ABFEACFE0000       DC16 65195, 65196, 0, 0, 65197, 65198, 0, 0, 65199, 65200
   \              0000ADFEAEFE
   \              00000000AFFE
   \              B0FE        
   \   0000008C   00000000B1FE       DC16 0, 0, 65201, 65202, 65203, 65204, 65205, 65206, 65207, 65208
   \              B2FEB3FEB4FE
   \              B5FEB6FEB7FE
   \              B8FE        
   \   000000A0   B9FEBAFEBBFE       DC16 65209, 65210, 65211, 65212, 65213, 65214, 65215, 65216, 65217, 65218
   \              BCFEBDFEBEFE
   \              BFFEC0FEC1FE
   \              C2FE        
   \   000000B4   C3FEC4FEC5FE       DC16 65219, 65220, 65221, 65222, 65223, 65224, 65225, 65226, 65227, 65228
   \              C6FEC7FEC8FE
   \              C9FECAFECBFE
   \              CCFE        
   \   000000C8   CDFECEFECFFE       DC16 65229, 65230, 65231, 65232, 65233, 65234, 65235, 65236, 65237, 65238
   \              D0FED1FED2FE
   \              D3FED4FED5FE
   \              D6FE        
   \   000000DC   D7FED8FED9FE       DC16 65239, 65240, 65241, 65242, 65243, 65244, 65245, 65246, 65247, 65248
   \              DAFEDBFEDCFE
   \              DDFEDEFEDFFE
   \              E0FE        
   \   000000F0   E1FEE2FEE3FE       DC16 65249, 65250, 65251, 65252, 65253, 65254, 65255, 65256, 65257, 65258
   \              E4FEE5FEE6FE
   \              E7FEE8FEE9FE
   \              EAFE        
   \   00000104   EBFEECFEEDFE       DC16 65259, 65260, 65261, 65262, 0, 0, 65263, 65264, 0, 0
   \              EEFE00000000
   \              EFFEF0FE0000
   \              0000        
   \   00000118   F1FEF2FEF3FE       DC16 65265, 65266, 65267, 65268, 64342, 64343, 64344, 64345, 64378, 64379
   \              F4FE56FB57FB
   \              58FB59FB7AFB
   \              7BFB        
   \   0000012C   7CFB7DFB8AFB       DC16 64380, 64381, 64394, 64395, 0, 0, 64398, 64399, 64400, 64401
   \              8BFB00000000
   \              8EFB8FFB90FB
   \              91FB        
   \   00000140   92FB93FB94FB       DC16 64402, 64403, 64404, 64405, 64508, 64509, 64510, 64511
   \              95FBFCFBFDFB
   \              FEFBFFFB    
     47          
     48          /*        Base      Isol.   Final   Initial Medial */
     49          
     50            { /* 0  0x0621 */ 0xFE80, 0x0000, 0x0000, 0x0000 /* Arabic letter Hamza                 */ },
     51            { /* 1  0x0622 */ 0xFE81, 0xFE82, 0x0000, 0x0000 /* Arabic letter Alef with Madda above */ },
     52            { /* 2  0x0623 */ 0xFE83, 0xFE84, 0x0000, 0x0000 /* Arabic letter Alef with Hamza above */ },
     53            { /* 3  0x0624 */ 0xFE85, 0xFE86, 0x0000, 0x0000 /* Arabic letter Waw with Hamza above  */ },
     54            { /* 4  0x0625 */ 0xFE87, 0xFE88, 0x0000, 0x0000 /* Arabic letter Alef with Hamza below */ },
     55            { /* 5  0x0626 */ 0xFE89, 0xFE8A, 0xFE8B, 0xFE8C /* Arabic letter Yeh with Hamza above  */ },
     56            { /* 6  0x0627 */ 0xFE8D, 0xFE8E, 0x0000, 0x0000 /* Arabic letter Alef                  */ },
     57            { /* 7  0x0628 */ 0xFE8F, 0xFE90, 0xFE91, 0xFE92 /* Arabic letter Beh                   */ },
     58            { /* 8  0x0629 */ 0xFE93, 0xFE94, 0x0000, 0x0000 /* Arabic letter Teh Marbuta           */ },
     59            { /* 9  0x062A */ 0xFE95, 0xFE96, 0xFE97, 0xFE98 /* Arabic letter Teh                   */ },
     60            { /* 10 0x062B */ 0xFE99, 0xFE9A, 0xFE9B, 0xFE9C /* Arabic letter Theh                  */ },
     61            { /* 11 0x062C */ 0xFE9D, 0xFE9E, 0xFE9F, 0xFEA0 /* Arabic letter Jeem                  */ },
     62            { /* 12 0x062D */ 0xFEA1, 0xFEA2, 0xFEA3, 0xFEA4 /* Arabic letter Hah                   */ },
     63            { /* 13 0x062E */ 0xFEA5, 0xFEA6, 0xFEA7, 0xFEA8 /* Arabic letter Khah                  */ },
     64            { /* 14 0x062F */ 0xFEA9, 0xFEAA, 0x0000, 0x0000 /* Arabic letter Dal                   */ },
     65            { /* 15 0x0630 */ 0xFEAB, 0xFEAC, 0x0000, 0x0000 /* Arabic letter Thal                  */ },
     66            { /* 16 0x0631 */ 0xFEAD, 0xFEAE, 0x0000, 0x0000 /* Arabic letter Reh                   */ },
     67            { /* 17 0x0632 */ 0xFEAF, 0xFEB0, 0x0000, 0x0000 /* Arabic letter Zain                  */ },
     68            { /* 18 0x0633 */ 0xFEB1, 0xFEB2, 0xFEB3, 0xFEB4 /* Arabic letter Seen                  */ },
     69            { /* 19 0x0634 */ 0xFEB5, 0xFEB6, 0xFEB7, 0xFEB8 /* Arabic letter Sheen                 */ },
     70            { /* 20 0x0635 */ 0xFEB9, 0xFEBA, 0xFEBB, 0xFEBC /* Arabic letter Sad                   */ },
     71            { /* 21 0x0636 */ 0xFEBD, 0xFEBE, 0xFEBF, 0xFEC0 /* Arabic letter Dad                   */ },
     72            { /* 22 0x0637 */ 0xFEC1, 0xFEC2, 0xFEC3, 0xFEC4 /* Arabic letter Tah                   */ },
     73            { /* 23 0x0638 */ 0xFEC5, 0xFEC6, 0xFEC7, 0xFEC8 /* Arabic letter Zah                   */ },
     74            { /* 24 0x0639 */ 0xFEC9, 0xFECA, 0xFECB, 0xFECC /* Arabic letter Ain                   */ },
     75            { /* 25 0x063A */ 0xFECD, 0xFECE, 0xFECF, 0xFED0 /* Arabic letter Ghain                 */ },
     76            { /* 26 0x0641 */ 0xFED1, 0xFED2, 0xFED3, 0xFED4 /* Arabic letter Feh                   */ },
     77            { /* 27 0x0642 */ 0xFED5, 0xFED6, 0xFED7, 0xFED8 /* Arabic letter Qaf                   */ },
     78            { /* 28 0x0643 */ 0xFED9, 0xFEDA, 0xFEDB, 0xFEDC /* Arabic letter Kaf                   */ },
     79            { /* 29 0x0644 */ 0xFEDD, 0xFEDE, 0xFEDF, 0xFEE0 /* Arabic letter Lam                   */ },
     80            { /* 30 0x0645 */ 0xFEE1, 0xFEE2, 0xFEE3, 0xFEE4 /* Arabic letter Meem                  */ },
     81            { /* 31 0x0646 */ 0xFEE5, 0xFEE6, 0xFEE7, 0xFEE8 /* Arabic letter Noon                  */ },
     82            { /* 32 0x0647 */ 0xFEE9, 0xFEEA, 0xFEEB, 0xFEEC /* Arabic letter Heh                   */ },
     83            { /* 33 0x0648 */ 0xFEED, 0xFEEE, 0x0000, 0x0000 /* Arabic letter Waw                   */ },
     84            { /* 34 0x0649 */ 0xFEEF, 0xFEF0, 0x0000, 0x0000 /* Arabic letter Alef Maksura          */ },
     85            { /* 35 0x064A */ 0xFEF1, 0xFEF2, 0xFEF3, 0xFEF4 /* Arabic letter Yeh                   */ },
     86            { /* 36 0x067E */ 0xFB56, 0xFB57, 0xFB58, 0xFB59 /* Eastern arabic letter Peh           */ },
     87            { /* 37 0x0686 */ 0xFB7A, 0xFB7B, 0xFB7C, 0xFB7D /* Eastern arabic letter Tcheh         */ },
     88            { /* 38 0x0698 */ 0xFB8A, 0xFB8B, 0x0000, 0x0000 /* Eastern arabic letter Jeh           */ },
     89            { /* 39 0x06A9 */ 0xFB8E, 0xFB8F, 0xFB90, 0xFB91 /* Eastern arabic letter Keheh         */ },
     90            { /* 40 0x06AF */ 0xFB92, 0xFB93, 0xFB94, 0xFB95 /* Eastern arabic letter Gaf           */ },
     91            { /* 41 0x06CC */ 0xFBFC, 0xFBFD, 0xFBFE, 0xFBFF /* Eastern arabic letter Farsi Yeh     */ },
     92          };
     93          
     94          /*********************************************************************
     95          *
     96          *       _GetTableIndex
     97          */
     98          static int _GetTableIndex(U16 c) {
     99            if (c < 0x621) {
    100              return 0;
    101            }
    102            if (c > 0x6cc) {
    103              return 0;
    104            }
    105            if ((c >= 0x621) && (c <= 0x63a)) {
    106              return c - 0x621;
    107            }
    108            if ((c >= 0x641) && (c <= 0x64a)) {
    109              return c - 0x641 + 26;
    110            }
    111            if (c == 0x67e) {
    112              return 36;
    113            }
    114            if (c == 0x686) {
    115              return 37;
    116            }
    117            if (c == 0x698) {
    118              return 38;
    119            }
    120            if (c == 0x6a9) {
    121              return 39;
    122            }
    123            if (c == 0x6af) {
    124              return 40;
    125            }
    126            if (c == 0x6cc) {
    127              return 41;
    128            }
    129            return 0;
    130          }
    131          
    132          /*********************************************************************
    133          *
    134          *       _GetLigature
    135          */
    136          static int _GetLigature(U16 Char, U16 Next, int PrevAffectsJoining) {
    137            if (((Next != 0x622) && (Next != 0x623) && (Next != 0x625) && (Next != 0x627)) || (Char != 0x644)) {
    138              return 0;
    139            }
    140            if (PrevAffectsJoining) {
    141              switch (Next) {
    142              case 0x622:
    143                return 0xfef6;
    144              case 0x623:
    145                return 0xfef8;
    146              case 0x625:
    147                return 0xfefa;
    148              case 0x627:
    149                return 0xfefc;
    150              }
    151            } else {
    152              switch (Next) {
    153              case 0x622:
    154                return 0xfef5;
    155              case 0x623:
    156                return 0xfef7;
    157              case 0x625:
    158                return 0xfef9;
    159              case 0x627:
    160                return 0xfefb;
    161              }
    162            }
    163            return 0;
    164          }
    165          
    166          /*********************************************************************
    167          *
    168          *       Public code
    169          *
    170          **********************************************************************
    171          */
    172          /*********************************************************************
    173          *
    174          *       GUI__IsArabicCharacter
    175          */

   \                                 In section .text, align 4, keep-with-next
    176          int GUI__IsArabicCharacter(U16 c) {
    177            return ((c >= 0x600) && (c <= 0x6ff)) ? 1 : 0;
   \                     GUI__IsArabicCharacter:
   \   00000000   600E40E2           SUB      R0,R0,#+1536
   \   00000004   0008A0E1           LSL      R0,R0,#+16
   \   00000008   2008A0E1           LSR      R0,R0,#+16
   \   0000000C   400F50E3           CMP      R0,#+256
   \   00000010   0100002A           BCS      ??GUI__IsArabicCharacter_0
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1EFF2FE1           BX       LR
   \                     ??GUI__IsArabicCharacter_0:
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   1EFF2FE1           BX       LR               ;; return
    178          }
    179          
    180          /*********************************************************************
    181          *
    182          *       GUI__GetPresentationForm
    183          *
    184          * Purpose:
    185          *   Returns the Arabic presentation form of the given character(s).
    186          *   Depending on their position in the text the presentation form of
    187          *   Arabic characters differr from their character codes. So the function
    188          *   needs the previous and the next character code to calculate the right
    189          *   representation form.
    190          *   Some sequences of 2 characters are formed to one ligature. In this
    191          *   case the routine uses the pointer pIgnoreNextCharacter to inform the
    192          *   calling routine that the next character should be ignored.
    193          *
    194          * Parameters:
    195          *   Char                 - Current character
    196          *   Next                 - Previous character
    197          *   Prev                 - Next character following the current character
    198          *   pIgnoreNextCharacter - Pointer to inform calling routine that the
    199          *                          next character should be ignored.
    200          *   s                    - Pointer for decoding text data. Need if 'Next' is a Non Spacing Mark.
    201          */

   \                                 In section .text, align 4, keep-with-next
    202          U16 GUI__GetPresentationForm(U16 Char, U16 Next, U16 Prev, int * pIgnoreNext, const char GUI_UNI_PTR * s) {
   \                     GUI__GetPresentationForm:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    203            int CharIndex, NextAffectsJoining, PrevAffectsJoining, Final, Initial, Medial, Ligature;
    204            static int PrevAffectsNextJoining;
    205            CharIndex = _GetTableIndex(Char);
   \   00000004   2160A0E3           MOV      R6,#+33
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   606E86E3           ORR      R6,R6,#0x600
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0150A0E1           MOV      R5,R1
   \   00000018   060054E1           CMP      R4,R6
   \   0000001C   0D00003A           BCC      ??GUI__GetPresentationForm_4
   \   00000020   AC7086E2           ADD      R7,R6,#+172
   \   00000024   070054E1           CMP      R4,R7
   \   00000028   0A00002A           BCS      ??GUI__GetPresentationForm_4
   \   0000002C   DF80A0E3           MOV      R8,#+223
   \   00000030   F98C88E3           ORR      R8,R8,#0xF900
   \   00000034   040088E0           ADD      R0,R8,R4
   \   00000038   0008A0E1           LSL      R0,R0,#+16
   \   0000003C   2008A0E1           LSR      R0,R0,#+16
   \   00000040   1A0050E3           CMP      R0,#+26
   \   00000044   0C00002A           BCS      ??GUI__GetPresentationForm_5
   \   00000048   001066E2           RSB      R1,R6,#+0
   \                     ??GUI__GetPresentationForm_6:
   \   0000004C   049081E0           ADD      R9,R1,R4
    206            if (!CharIndex) {
   \   00000050   000059E3           CMP      R9,#+0
   \   00000054   2D00001A           BNE      ??GUI__GetPresentationForm_7
    207              if (!GUI__BIDI_IsNSM(Char)) {
   \                     ??GUI__GetPresentationForm_4:
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       GUI__BIDI_IsNSM
   \   00000060   000050E3           CMP      R0,#+0
    208                PrevAffectsNextJoining = 0;
   \   00000064   ........           LDREQ    R0,??DataTable1
   \   00000068   0010A003           MOVEQ    R1,#+0
   \   0000006C   00108005           STREQ    R1,[R0, #+0]
    209              }
    210              return Char;
   \                     ??GUI__GetPresentationForm_8:
   \   00000070   0400A0E1           MOV      R0,R4
   \                     ??GUI__GetPresentationForm_9:
   \   00000074   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000078   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GUI__GetPresentationForm_5:
   \   0000007C   200086E2           ADD      R0,R6,#+32
   \   00000080   000044E0           SUB      R0,R4,R0
   \   00000084   0008A0E1           LSL      R0,R0,#+16
   \   00000088   2008A0E1           LSR      R0,R0,#+16
   \   0000008C   0A0050E3           CMP      R0,#+10
   \   00000090   2610E033           MVNCC    R1,#+38
   \   00000094   601EC133           BICCC    R1,R1,#0x600
   \   00000098   EBFFFF3A           BCC      ??GUI__GetPresentationForm_6
   \   0000009C   5D0086E2           ADD      R0,R6,#+93
   \   000000A0   000054E1           CMP      R4,R0
   \   000000A4   1800000A           BEQ      ??GUI__GetPresentationForm_10
   \   000000A8   080080E2           ADD      R0,R0,#+8
   \   000000AC   000054E1           CMP      R4,R0
   \   000000B0   1300000A           BEQ      ??GUI__GetPresentationForm_11
   \   000000B4   120080E2           ADD      R0,R0,#+18
   \   000000B8   000054E1           CMP      R4,R0
   \   000000BC   0E00000A           BEQ      ??GUI__GetPresentationForm_12
   \   000000C0   110080E2           ADD      R0,R0,#+17
   \   000000C4   000054E1           CMP      R4,R0
   \   000000C8   0900000A           BEQ      ??GUI__GetPresentationForm_13
   \   000000CC   060080E3           ORR      R0,R0,#0x6
   \   000000D0   000054E1           CMP      R4,R0
   \   000000D4   0400000A           BEQ      ??GUI__GetPresentationForm_14
   \   000000D8   1D0080E2           ADD      R0,R0,#+29
   \   000000DC   000054E1           CMP      R4,R0
   \   000000E0   DCFFFF1A           BNE      ??GUI__GetPresentationForm_4
   \   000000E4   2990A0E3           MOV      R9,#+41
   \   000000E8   080000EA           B        ??GUI__GetPresentationForm_7
   \                     ??GUI__GetPresentationForm_14:
   \   000000EC   2890A0E3           MOV      R9,#+40
   \   000000F0   060000EA           B        ??GUI__GetPresentationForm_7
   \                     ??GUI__GetPresentationForm_13:
   \   000000F4   2790A0E3           MOV      R9,#+39
   \   000000F8   040000EA           B        ??GUI__GetPresentationForm_7
   \                     ??GUI__GetPresentationForm_12:
   \   000000FC   2690A0E3           MOV      R9,#+38
   \   00000100   020000EA           B        ??GUI__GetPresentationForm_7
   \                     ??GUI__GetPresentationForm_11:
   \   00000104   2590A0E3           MOV      R9,#+37
   \   00000108   000000EA           B        ??GUI__GetPresentationForm_7
   \                     ??GUI__GetPresentationForm_10:
   \   0000010C   2490A0E3           MOV      R9,#+36
    211            }
    212            PrevAffectsJoining = PrevAffectsNextJoining;
    213            Ligature = _GetLigature(Char, Next, PrevAffectsJoining);
   \                     ??GUI__GetPresentationForm_7:
   \   00000110   010086E2           ADD      R0,R6,#+1
   \   00000114   000055E1           CMP      R5,R0
   \   00000118   01108013           ORRNE    R1,R0,#0x1
   \   0000011C   01005511           CMPNE    R5,R1
   \   00000120   03108012           ADDNE    R1,R0,#+3
   \   00000124   01005511           CMPNE    R5,R1
   \   00000128   05108013           ORRNE    R1,R0,#0x5
   \   0000012C   ........           LDR      R10,??DataTable1
   \   00000130   01005511           CMPNE    R5,R1
   \   00000134   22108002           ADDEQ    R1,R0,#+34
   \   00000138   00B09AE5           LDR      R11,[R10, #+0]
   \   0000013C   01005401           CMPEQ    R4,R1
   \   00000140   1700001A           BNE      ??GUI__GetPresentationForm_15
   \   00000144   221045E2           SUB      R1,R5,#+34
   \   00000148   00005BE3           CMP      R11,#+0
   \   0000014C   601E41E2           SUB      R1,R1,#+1536
   \   00000150   0A00000A           BEQ      ??GUI__GetPresentationForm_16
   \   00000154   050051E3           CMP      R1,#+5
   \   00000158   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??GUI__GetPresentationForm_0:
   \   0000015C   1000008A           BHI      ??GUI__GetPresentationForm_15
   \   00000160   040000EA           B        ??GUI__GetPresentationForm_17
   \   00000164   290000EA           B        ??GUI__GetPresentationForm_18
   \   00000168   0D0000EA           B        ??GUI__GetPresentationForm_15
   \   0000016C   250000EA           B        ??GUI__GetPresentationForm_19
   \   00000170   0B0000EA           B        ??GUI__GetPresentationForm_15
   \   00000174   210000EA           B        ??GUI__GetPresentationForm_20
   \                     ??GUI__GetPresentationForm_17:
   \   00000178   F600A0E3           MOV      R0,#+246
   \   0000017C   350000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_16:
   \   00000180   050051E3           CMP      R1,#+5
   \   00000184   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??GUI__GetPresentationForm_1:
   \   00000188   0500008A           BHI      ??GUI__GetPresentationForm_15
   \   0000018C   300000EA           B        ??GUI__GetPresentationForm_22
   \   00000190   2D0000EA           B        ??GUI__GetPresentationForm_23
   \   00000194   020000EA           B        ??GUI__GetPresentationForm_15
   \   00000198   290000EA           B        ??GUI__GetPresentationForm_24
   \   0000019C   000000EA           B        ??GUI__GetPresentationForm_15
   \   000001A0   250000EA           B        ??GUI__GetPresentationForm_25
    214            if (!Ligature) {
    215              Ligature = _GetLigature(Prev, Char, PrevAffectsJoining);
   \                     ??GUI__GetPresentationForm_15:
   \   000001A4   000054E1           CMP      R4,R0
   \   000001A8   01008013           ORRNE    R0,R0,#0x1
   \   000001AC   00005411           CMPNE    R4,R0
   \   000001B0   02008012           ADDNE    R0,R0,#+2
   \   000001B4   00005411           CMPNE    R4,R0
   \   000001B8   02008013           ORRNE    R0,R0,#0x2
   \   000001BC   00005411           CMPNE    R4,R0
   \   000001C0   23008602           ADDEQ    R0,R6,#+35
   \   000001C4   00005201           CMPEQ    R2,R0
   \   000001C8   2900001A           BNE      ??GUI__GetPresentationForm_26
   \   000001CC   220044E2           SUB      R0,R4,#+34
   \   000001D0   00005BE3           CMP      R11,#+0
   \   000001D4   600E40E2           SUB      R0,R0,#+1536
   \   000001D8   0E00000A           BEQ      ??GUI__GetPresentationForm_27
   \   000001DC   050050E3           CMP      R0,#+5
   \   000001E0   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GUI__GetPresentationForm_2:
   \   000001E4   2200008A           BHI      ??GUI__GetPresentationForm_26
   \   000001E8   E2FFFFEA           B        ??GUI__GetPresentationForm_17
   \   000001EC   070000EA           B        ??GUI__GetPresentationForm_18
   \   000001F0   1F0000EA           B        ??GUI__GetPresentationForm_26
   \   000001F4   030000EA           B        ??GUI__GetPresentationForm_19
   \   000001F8   1D0000EA           B        ??GUI__GetPresentationForm_26
   \   000001FC   FFFFFFEA           B        ??GUI__GetPresentationForm_20
   \                     ??GUI__GetPresentationForm_20:
   \   00000200   FC00A0E3           MOV      R0,#+252
   \   00000204   130000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_19:
   \   00000208   FA00A0E3           MOV      R0,#+250
   \   0000020C   110000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_18:
   \   00000210   F800A0E3           MOV      R0,#+248
   \   00000214   0F0000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_27:
   \   00000218   050050E3           CMP      R0,#+5
   \   0000021C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GUI__GetPresentationForm_3:
   \   00000220   1300008A           BHI      ??GUI__GetPresentationForm_26
   \   00000224   0A0000EA           B        ??GUI__GetPresentationForm_22
   \   00000228   070000EA           B        ??GUI__GetPresentationForm_23
   \   0000022C   100000EA           B        ??GUI__GetPresentationForm_26
   \   00000230   030000EA           B        ??GUI__GetPresentationForm_24
   \   00000234   0E0000EA           B        ??GUI__GetPresentationForm_26
   \   00000238   FFFFFFEA           B        ??GUI__GetPresentationForm_25
   \                     ??GUI__GetPresentationForm_25:
   \   0000023C   FB00A0E3           MOV      R0,#+251
   \   00000240   040000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_24:
   \   00000244   F900A0E3           MOV      R0,#+249
   \   00000248   020000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_23:
   \   0000024C   F700A0E3           MOV      R0,#+247
   \   00000250   000000EA           B        ??GUI__GetPresentationForm_21
   \                     ??GUI__GetPresentationForm_22:
   \   00000254   F500A0E3           MOV      R0,#+245
    216            }
    217            if (Ligature) {
    218              if (pIgnoreNext) {
   \                     ??GUI__GetPresentationForm_21:
   \   00000258   000053E3           CMP      R3,#+0
    219                *pIgnoreNext = 1;
   \   0000025C   0110A013           MOVNE    R1,#+1
   \   00000260   00108315           STRNE    R1,[R3, #+0]
    220              }
    221              PrevAffectsNextJoining = 0;
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   FE0C80E3           ORR      R0,R0,#0xFE00
   \   0000026C   00108AE5           STR      R1,[R10, #+0]
    222              return Ligature;
   \   00000270   7FFFFFEA           B        ??GUI__GetPresentationForm_9
    223            } else {
    224              if (pIgnoreNext) {
   \                     ??GUI__GetPresentationForm_26:
   \   00000274   000053E3           CMP      R3,#+0
    225               *pIgnoreNext = 0;
   \   00000278   0000A013           MOVNE    R0,#+0
   \   0000027C   00008315           STRNE    R0,[R3, #+0]
    226              }
    227            }
    228            if (GUI__BIDI_IsNSM(Next)) {
   \   00000280   0500A0E1           MOV      R0,R5
   \   00000284   ........           BL       GUI__BIDI_IsNSM
   \   00000288   000050E3           CMP      R0,#+0
   \   0000028C   0200000A           BEQ      ??GUI__GetPresentationForm_28
    229              if (Char) {
    230                Next = GUI_UC_GetCharCode(s);
   \   00000290   28009DE5           LDR      R0,[SP, #+40]
   \   00000294   ........           BL       GUI_UC_GetCharCode
   \   00000298   0050A0E1           MOV      R5,R0
    231              }
    232            }
    233            NextAffectsJoining = _GetTableIndex(Next) && (_aKeyInfo[CharIndex].Medial);
   \                     ??GUI__GetPresentationForm_28:
   \   0000029C   060055E1           CMP      R5,R6
   \   000002A0   2600003A           BCC      ??GUI__GetPresentationForm_29
   \   000002A4   070055E1           CMP      R5,R7
   \   000002A8   2400002A           BCS      ??GUI__GetPresentationForm_29
   \   000002AC   050088E0           ADD      R0,R8,R5
   \   000002B0   0008A0E1           LSL      R0,R0,#+16
   \   000002B4   2008A0E1           LSR      R0,R0,#+16
   \   000002B8   1A0050E3           CMP      R0,#+26
   \   000002BC   0A00002A           BCS      ??GUI__GetPresentationForm_30
   \   000002C0   000066E2           RSB      R0,R6,#+0
   \                     ??GUI__GetPresentationForm_31:
   \   000002C4   050080E0           ADD      R0,R0,R5
   \   000002C8   000050E3           CMP      R0,#+0
   \   000002CC   1C00000A           BEQ      ??GUI__GetPresentationForm_32
   \                     ??GUI__GetPresentationForm_33:
   \   000002D0   ........           ADR      R0,_aKeyInfo
   \   000002D4   890180E0           ADD      R0,R0,R9, LSL #+3
   \   000002D8   B600D0E1           LDRH     R0,[R0, #+6]
   \   000002DC   000050E3           CMP      R0,#+0
   \   000002E0   1700000A           BEQ      ??GUI__GetPresentationForm_32
   \   000002E4   0100A0E3           MOV      R0,#+1
   \   000002E8   150000EA           B        ??GUI__GetPresentationForm_32
   \                     ??GUI__GetPresentationForm_30:
   \   000002EC   200086E2           ADD      R0,R6,#+32
   \   000002F0   000045E0           SUB      R0,R5,R0
   \   000002F4   0008A0E1           LSL      R0,R0,#+16
   \   000002F8   2008A0E1           LSR      R0,R0,#+16
   \   000002FC   0A0050E3           CMP      R0,#+10
   \   00000300   2600E033           MVNCC    R0,#+38
   \   00000304   600EC033           BICCC    R0,R0,#0x600
   \   00000308   EDFFFF3A           BCC      ??GUI__GetPresentationForm_31
   \   0000030C   5D0086E2           ADD      R0,R6,#+93
   \   00000310   000055E1           CMP      R5,R0
   \   00000314   08008012           ADDNE    R0,R0,#+8
   \   00000318   00005511           CMPNE    R5,R0
   \   0000031C   12008012           ADDNE    R0,R0,#+18
   \   00000320   00005511           CMPNE    R5,R0
   \   00000324   11008012           ADDNE    R0,R0,#+17
   \   00000328   00005511           CMPNE    R5,R0
   \   0000032C   06008013           ORRNE    R0,R0,#0x6
   \   00000330   00005511           CMPNE    R5,R0
   \   00000334   1D008012           ADDNE    R0,R0,#+29
   \   00000338   00005511           CMPNE    R5,R0
   \   0000033C   E3FFFF0A           BEQ      ??GUI__GetPresentationForm_33
   \                     ??GUI__GetPresentationForm_29:
   \   00000340   0000A0E3           MOV      R0,#+0
    234            if ((!PrevAffectsJoining) && (!NextAffectsJoining)) {
   \                     ??GUI__GetPresentationForm_32:
   \   00000344   0B1090E1           ORRS     R1,R0,R11
   \   00000348   0500001A           BNE      ??GUI__GetPresentationForm_34
    235              Char = _aKeyInfo[CharIndex].Isolated;
   \   0000034C   ........           ADR      R0,_aKeyInfo
   \   00000350   890180E0           ADD      R0,R0,R9, LSL #+3
   \   00000354   B040D0E1           LDRH     R4,[R0, #+0]
    236              PrevAffectsNextJoining = 0;
   \   00000358   0000A0E3           MOV      R0,#+0
   \   0000035C   00008AE5           STR      R0,[R10, #+0]
   \   00000360   42FFFFEA           B        ??GUI__GetPresentationForm_8
    237            } else if ((!PrevAffectsJoining) && (NextAffectsJoining)) {
   \                     ??GUI__GetPresentationForm_34:
   \   00000364   00005BE3           CMP      R11,#+0
   \   00000368   0B00001A           BNE      ??GUI__GetPresentationForm_35
   \   0000036C   000050E3           CMP      R0,#+0
   \   00000370   3EFFFF0A           BEQ      ??GUI__GetPresentationForm_8
    238              Initial = _aKeyInfo[CharIndex].Initial;
   \   00000374   ........           ADR      R1,_aKeyInfo
   \   00000378   890181E0           ADD      R0,R1,R9, LSL #+3
   \   0000037C   B440D0E1           LDRH     R4,[R0, #+4]
    239              PrevAffectsNextJoining = 1;
   \                     ??GUI__GetPresentationForm_36:
   \   00000380   0100A0E3           MOV      R0,#+1
   \                     ??GUI__GetPresentationForm_37:
   \   00000384   00008AE5           STR      R0,[R10, #+0]
    240              if (Initial) {
   \   00000388   000054E3           CMP      R4,#+0
   \   0000038C   37FFFF1A           BNE      ??GUI__GetPresentationForm_8
    241                Char = Initial;
    242              } else {
    243                Char = _aKeyInfo[CharIndex].Isolated;
   \   00000390   890181E0           ADD      R0,R1,R9, LSL #+3
   \   00000394   B040D0E1           LDRH     R4,[R0, #+0]
   \   00000398   34FFFFEA           B        ??GUI__GetPresentationForm_8
    244              }
    245            } else if ((PrevAffectsJoining) && (NextAffectsJoining)) {
   \                     ??GUI__GetPresentationForm_35:
   \   0000039C   ........           ADR      R1,_aKeyInfo
   \   000003A0   000050E3           CMP      R0,#+0
   \   000003A4   892181E0           ADD      R2,R1,R9, LSL #+3
    246              Medial = _aKeyInfo[CharIndex].Medial;
   \   000003A8   B640D211           LDRHNE   R4,[R2, #+6]
    247              PrevAffectsNextJoining = 1;
   \   000003AC   F3FFFF1A           BNE      ??GUI__GetPresentationForm_36
    248              if (Medial) {
    249                Char = Medial;
    250              } else {
    251                Char = _aKeyInfo[CharIndex].Isolated;
    252              }
    253            } else if ((PrevAffectsJoining) && (!NextAffectsJoining)) {
    254              Final = _aKeyInfo[CharIndex].Final;
   \   000003B0   B240D2E1           LDRH     R4,[R2, #+2]
    255              PrevAffectsNextJoining = 0;
   \   000003B4   F2FFFFEA           B        ??GUI__GetPresentationForm_37
    256              if (Final) {
    257                Char = Final;
    258              } else {
    259                Char = _aKeyInfo[CharIndex].Isolated;
    260              }
    261            }
    262            return Char;
    263          }

   \                                 In section .bss, align 4
   \                     ??PrevAffectsNextJoining:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??PrevAffectsNextJoining
    264          
    265          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GUI__GetPresentationForm     40
     GUI__IsArabicCharacter        0


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _aKeyInfo                 336
     GUI__IsArabicCharacter     36
     GUI__GetPresentationForm  952
     PrevAffectsNextJoining      4
     ??DataTable1                4

 
     4 bytes in section .bss
 1 328 bytes in section .text
 
 1 328 bytes of CODE memory
     4 bytes of DATA memory

Errors: none
Warnings: none
