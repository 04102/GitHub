###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:30 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIDEV_SetOrg.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\GUIDEV_SetOrg.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    IDEV_SetOrg.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    DEV_SetOrg.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIDEV_SetOrg.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIDEV_SetOrg.c
     19          Purpose     : Implementation of memory devices, add. module
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GUI_Private.h"
     26          #include "GUI_Debug.h"
     27          
     28          /* Memory device capabilities are compiled only if support for them is enabled. */ 
     29          #if GUI_SUPPORT_MEMDEV
     30          
     31          /*********************************************************************
     32          *
     33          *       public code
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       GUI_MEMDEV_SetOrg
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          void GUI_MEMDEV_SetOrg(GUI_MEMDEV_Handle hMem, int x0, int y0) {
   \                     GUI_MEMDEV_SetOrg:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     42            /* Make sure memory handle is valid */
     43            if (!hMem) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0300001A           BNE      ??GUI_MEMDEV_SetOrg_0
     44              if ((hMem = GUI_Context.hDevData) ==0) {
   \   00000018   60009FE5           LDR      R0,??GUI_MEMDEV_SetOrg_1
   \   0000001C   884090E5           LDR      R4,[R0, #+136]
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   1400000A           BEQ      ??GUI_MEMDEV_SetOrg_2
     45                return;
     46              }
     47            }
     48            GUI_LOCK();
   \                     ??GUI_MEMDEV_SetOrg_0:
   \   00000028   ........           BL       GUI_Lock
     49            {
     50              GUI_MEMDEV* pDev = GUI_MEMDEV_H2P(hMem);  /* Convert to pointer */
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       GUI_ALLOC_h2p
   \   00000034   0040A0E1           MOV      R4,R0
     51              pDev->y0 = y0;
   \   00000038   B660C4E1           STRH     R6,[R4, #+6]
     52              pDev->x0 = x0;
   \   0000003C   B450C4E1           STRH     R5,[R4, #+4]
     53              LCD_SetClipRectMax();
   \   00000040   ........           BL       LCD_SetClipRectMax
     54              /* Move usage along */
     55              if (pDev->hUsage) {
   \   00000044   140094E5           LDR      R0,[R4, #+20]
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0900000A           BEQ      ??GUI_MEMDEV_SetOrg_3
     56                GUI_USAGE* pUsage = GUI_USAGE_H2P(pDev->hUsage);
   \   00000050   ........           BL       GUI_ALLOC_h2p
     57                if (((pUsage->XSize = pDev->XSize) != 0) && ((pUsage->YSize = pDev->YSize) != 0)) {
   \   00000054   F810D4E1           LDRSH    R1,[R4, #+8]
   \   00000058   B410C0E1           STRH     R1,[R0, #+4]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0400000A           BEQ      ??GUI_MEMDEV_SetOrg_3
   \   00000064   FA10D4E1           LDRSH    R1,[R4, #+10]
   \   00000068   B610C0E1           STRH     R1,[R0, #+6]
   \   0000006C   000051E3           CMP      R1,#+0
     58                  pUsage->x0 = x0;
   \   00000070   B050C011           STRHNE   R5,[R0, #+0]
     59                  pUsage->y0 = y0;
   \   00000074   B260C011           STRHNE   R6,[R0, #+2]
     60                }
     61              }
     62            }
     63            GUI_UNLOCK();
   \                     ??GUI_MEMDEV_SetOrg_3:
   \   00000078   ........           BL       GUI_Unlock
     64          }
   \                     ??GUI_MEMDEV_SetOrg_2:
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??GUI_MEMDEV_SetOrg_1:
   \   00000080   ........           DC32     GUI_Context
     65          
     66          #else
     67          
     68          void GUIDEV_SetOrg(void);
     69          void GUIDEV_SetOrg(void) {} /* avoid empty object files */
     70          
     71          #endif /* GUI_MEMDEV_SUPPORT */
     72          
     73          /*************************** end of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_MEMDEV_SetOrg     16


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_MEMDEV_SetOrg  132

 
 132 bytes in section .text
 
 132 bytes of CODE memory

Errors: none
Warnings: none
