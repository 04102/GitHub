###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:33 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\MENU_Default.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\MENU_Default.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\ME #
#                    NU_Default.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\MEN #
#                    U_Default.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\MENU_Default.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MENU_Default.c
     19          Purpose     : Implementation of menu widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "MENU.h"
     24          #include "MENU_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code, set defaults
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       MENU_SetDefaultTextColor
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void MENU_SetDefaultTextColor(unsigned ColorIndex, GUI_COLOR Color) {
     39            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aTextColor)) {
   \                     MENU_SetDefaultTextColor:
   \   00000000   060050E3           CMP      R0,#+6
     40              MENU__DefaultProps.aTextColor[ColorIndex] = Color;
   \   00000004   ........           LDRCC    R2,??DataTable9
   \   00000008   00118237           STRCC    R1,[R2, +R0, LSL #+2]
     41            }
     42          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
     43          
     44          /*********************************************************************
     45          *
     46          *       MENU_SetDefaultBkColor
     47          */

   \                                 In section .text, align 4, keep-with-next
     48          void MENU_SetDefaultBkColor(unsigned ColorIndex, GUI_COLOR Color) {
     49            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aBkColor)) {
   \                     MENU_SetDefaultBkColor:
   \   00000000   060050E3           CMP      R0,#+6
     50              MENU__DefaultProps.aBkColor[ColorIndex] = Color;
   \   00000004   ........           LDRCC    R2,??DataTable9
   \   00000008   00018230           ADDCC    R0,R2,R0, LSL #+2
   \   0000000C   14108035           STRCC    R1,[R0, #+20]
     51            }
     52          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     53          
     54          /*********************************************************************
     55          *
     56          *       MENU_SetDefaultBorderSize
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          void MENU_SetDefaultBorderSize(unsigned BorderIndex, U8 BorderSize) {
     59            if (BorderIndex <= GUI_COUNTOF(MENU__DefaultProps.aBorder)) {
   \                     MENU_SetDefaultBorderSize:
   \   00000000   050050E3           CMP      R0,#+5
     60              MENU__DefaultProps.aBorder[BorderIndex] = BorderSize;
   \   00000004   ........           LDRCC    R2,??DataTable9
   \   00000008   02008030           ADDCC    R0,R0,R2
   \   0000000C   2810C035           STRBCC   R1,[R0, #+40]
     61            }
     62          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     63          
     64          /*********************************************************************
     65          *
     66          *       MENU_SetDefaultEffect
     67          */

   \                                 In section .text, align 4, keep-with-next
     68          void MENU_SetDefaultEffect(const WIDGET_EFFECT* pEffect) {
     69            MENU__pDefaultEffect = pEffect;
   \                     MENU_SetDefaultEffect:
   \   00000000   ........           LDR      R1,??DataTable9_1
   \   00000004   000081E5           STR      R0,[R1, #+0]
     70          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     71          
     72          /*********************************************************************
     73          *
     74          *       MENU_SetDefaultFont
     75          */

   \                                 In section .text, align 4, keep-with-next
     76          void MENU_SetDefaultFont(const GUI_FONT GUI_UNI_PTR* pFont) {
     77            MENU__DefaultProps.pFont = pFont;
   \                     MENU_SetDefaultFont:
   \   00000000   ........           LDR      R1,??DataTable9
   \   00000004   2C0081E5           STR      R0,[R1, #+44]
     78          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     79          
     80          /*********************************************************************
     81          *
     82          *       Public code, get defaults
     83          *
     84          **********************************************************************
     85          */
     86          /*********************************************************************
     87          *
     88          *       MENU_GetDefaultTextColor
     89          */

   \                                 In section .text, align 4, keep-with-next
     90          GUI_COLOR MENU_GetDefaultTextColor(unsigned ColorIndex) {
     91            GUI_COLOR Color = GUI_INVALID_COLOR;
   \                     MENU_GetDefaultTextColor:
   \   00000000   F014E0E3           MVN      R1,#-268435456
     92            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aTextColor)) {
   \   00000004   060050E3           CMP      R0,#+6
     93              Color = MENU__DefaultProps.aTextColor[ColorIndex];
   \   00000008   ........           LDRCC    R1,??DataTable9
   \   0000000C   00119137           LDRCC    R1,[R1, +R0, LSL #+2]
     94            }
     95            return Color;
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   1EFF2FE1           BX       LR               ;; return
     96          }
     97          
     98          /*********************************************************************
     99          *
    100          *       MENU_GetDefaultBkColor
    101          */

   \                                 In section .text, align 4, keep-with-next
    102          GUI_COLOR MENU_GetDefaultBkColor(unsigned ColorIndex) {
    103            GUI_COLOR Color = GUI_INVALID_COLOR;
   \                     MENU_GetDefaultBkColor:
   \   00000000   F014E0E3           MVN      R1,#-268435456
    104            if (ColorIndex <= GUI_COUNTOF(MENU__DefaultProps.aBkColor)) {
   \   00000004   060050E3           CMP      R0,#+6
    105              Color = MENU__DefaultProps.aBkColor[ColorIndex];
   \   00000008   ........           LDRCC    R1,??DataTable9
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   14109035           LDRCC    R1,[R0, #+20]
    106            }
    107            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
    108          }
    109          
    110          /*********************************************************************
    111          *
    112          *       MENU_GetDefaultBorderSize
    113          */

   \                                 In section .text, align 4, keep-with-next
    114          U8 MENU_GetDefaultBorderSize(unsigned BorderIndex) {
    115            U8 BorderSize = 0;
   \                     MENU_GetDefaultBorderSize:
   \   00000000   0010A0E3           MOV      R1,#+0
    116            if (BorderIndex <= GUI_COUNTOF(MENU__DefaultProps.aBorder)) {
   \   00000004   050050E3           CMP      R0,#+5
    117              BorderSize = MENU__DefaultProps.aBorder[BorderIndex];
   \   00000008   ........           LDRCC    R1,??DataTable9
   \   0000000C   01008030           ADDCC    R0,R0,R1
   \   00000010   2810D035           LDRBCC   R1,[R0, #+40]
    118            }
    119            return BorderSize;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
    120          }
    121          
    122          /*********************************************************************
    123          *
    124          *       MENU_GetDefaultEffect
    125          */

   \                                 In section .text, align 4, keep-with-next
    126          const WIDGET_EFFECT* MENU_GetDefaultEffect(void) {
    127            return MENU__pDefaultEffect;
   \                     MENU_GetDefaultEffect:
   \   00000000   ........           LDR      R0,??DataTable9_1
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    128          }
    129          
    130          /*********************************************************************
    131          *
    132          *       MENU_GetDefaultFont
    133          */

   \                                 In section .text, align 4, keep-with-next
    134          const GUI_FONT GUI_UNI_PTR* MENU_GetDefaultFont(void) {
    135            return MENU__DefaultProps.pFont;
   \                     MENU_GetDefaultFont:
   \   00000000   ........           LDR      R0,??DataTable9
   \   00000004   2C0090E5           LDR      R0,[R0, #+44]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    136          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     MENU__DefaultProps

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   ........           DC32     MENU__pDefaultEffect
    137          
    138          #else  /* avoid empty object files */
    139            void MENU_Default_C(void) {}
    140          #endif
    141          
    142          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     MENU_GetDefaultBkColor         0
     MENU_GetDefaultBorderSize      0
     MENU_GetDefaultEffect          0
     MENU_GetDefaultFont            0
     MENU_GetDefaultTextColor       0
     MENU_SetDefaultBkColor         0
     MENU_SetDefaultBorderSize      0
     MENU_SetDefaultEffect          0
     MENU_SetDefaultFont            0
     MENU_SetDefaultTextColor       0


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     MENU_SetDefaultTextColor    16
     MENU_SetDefaultBkColor      20
     MENU_SetDefaultBorderSize   20
     MENU_SetDefaultEffect       12
     MENU_SetDefaultFont         12
     MENU_GetDefaultTextColor    24
     MENU_GetDefaultBkColor      28
     MENU_GetDefaultBorderSize   28
     MENU_GetDefaultEffect       12
     MENU_GetDefaultFont         12
     ??DataTable9                 4
     ??DataTable9_1               4

 
 192 bytes in section .text
 
 192 bytes of CODE memory

Errors: none
Warnings: none
