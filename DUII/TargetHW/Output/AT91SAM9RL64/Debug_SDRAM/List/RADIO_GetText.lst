###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:45 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\RADIO_GetText.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\RADIO_GetText.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\RA #
#                    DIO_GetText.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\RAD #
#                    IO_GetText.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\RADIO_GetText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : RADIO_GetText.c
     19          Purpose     : Implementation of RADIO_GetText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "RADIO_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       RADIO_GetText
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          int RADIO_GetText(RADIO_Handle hObj, unsigned Index, char * pBuffer, int MaxLen) {
   \                     RADIO_GetText:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0170A0E1           MOV      R7,R1
   \   0000000C   0240A0E1           MOV      R4,R2
   \   00000010   0380A0E1           MOV      R8,R3
     39            int Len = 0;
   \   00000014   0050A0E3           MOV      R5,#+0
     40            if (hObj) {
   \   00000018   000056E3           CMP      R6,#+0
   \   0000001C   1800000A           BEQ      ??RADIO_GetText_0
     41              const char * pText;
     42              RADIO_Obj  * pObj;
     43              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
     44              pObj = RADIO_LOCK_H(hObj);
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           BL       GUI_ALLOC_LockH
     45              if (Index < (unsigned)pObj->NumItems) {
   \   0000002C   B416D0E1           LDRH     R1,[R0, #+100]
   \   00000030   010057E1           CMP      R7,R1
   \   00000034   1000002A           BCS      ??RADIO_GetText_1
     46                pText = (const char *)GUI_ARRAY_GetpItemLocked(pObj->TextArray, Index);
   \   00000038   0710A0E1           MOV      R1,R7
   \   0000003C   5C0090E5           LDR      R0,[R0, #+92]
   \   00000040   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000044   0060B0E1           MOVS     R6,R0
     47                if (pText) {
   \   00000048   0B00000A           BEQ      ??RADIO_GetText_1
     48                  Len = strlen(pText);
   \   0000004C   ........           BL       strlen
   \   00000050   0050A0E1           MOV      R5,R0
     49                  if (Len > (MaxLen - 1)) {
   \   00000054   010048E2           SUB      R0,R8,#+1
   \   00000058   050050E1           CMP      R0,R5
     50                    Len = MaxLen - 1;
   \   0000005C   0050A0B1           MOVLT    R5,R0
     51                  }
     52                  GUI_MEMCPY(pBuffer, pText, Len);
   \   00000060   0520A0E1           MOV      R2,R5
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       __aeabi_memcpy
     53                  *(pBuffer + Len) = 0;
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   0400C5E7           STRB     R0,[R5, +R4]
     54                  GUI_UNLOCK_H(pText);
   \   00000078   ........           BL       GUI_ALLOC_UnlockH
     55                }
     56              }
     57              GUI_UNLOCK_H(pObj);
   \                     ??RADIO_GetText_1:
   \   0000007C   ........           BL       GUI_ALLOC_UnlockH
     58              WM_UNLOCK();
   \   00000080   ........           BL       GUI_Unlock
     59            }
     60            return Len;
   \                     ??RADIO_GetText_0:
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   F081BDE8           POP      {R4-R8,PC}       ;; return
     61          }
     62          
     63          #else  /* avoid empty object files */
     64          
     65          void RADIO_GetText_c(void);
     66          void RADIO_GetText_c(void) {}
     67          
     68          #endif  /* #if GUI_WINSUPPORT */
     69          
     70          /************************* end of file ******************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     RADIO_GetText     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     RADIO_GetText   140

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
