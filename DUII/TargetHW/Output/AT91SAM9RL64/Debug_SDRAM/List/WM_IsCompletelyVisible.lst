###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:18 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_IsCompletelyVisible.c            #
#    Command line =  C:\DUII\TargetHW\GUI\WM_IsCompletelyVisible.c -D         #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _IsCompletelyVisible.lst                                 #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    IsCompletelyVisible.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_IsCompletelyVisible.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_IsCompletelyVisible.c
     19          Purpose     : Windows manager, implementation of said function
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          
     34          
     35          /*********************************************************************
     36          *
     37          *       _IsEqualRect
     38          *
     39          */
     40          static char _CompareRect(const GUI_RECT * pRect0, const GUI_RECT * pRect1 ) {
     41            if (pRect0->x0 != pRect1->x0) {
     42              return 1;                          /* Not equal */
     43            }
     44            if (pRect0->x1 != pRect1->x1) {
     45              return 1;                          /* Not equal */
     46            }
     47            if (pRect0->y0 != pRect1->y0) {
     48              return 1;                          /* Not equal */
     49            }
     50            if (pRect0->y1 != pRect1->y1) {
     51              return 1;                          /* Not equal */
     52            }
     53            return 0;                            /* Equal */
     54          }
     55          
     56          /*********************************************************************
     57          *
     58          *        _WindowSiblingsOverlapRect
     59          *
     60          */
     61          static char _WindowSiblingsOverlapRect(WM_HWIN iWin, GUI_RECT* pRect) {
     62            WM_Obj* pWin;
     63            for (; iWin; iWin = pWin->hNext) { 
     64              int Status = (pWin = WM_H2P(iWin))->Status;
     65              /* Check if this window affects us at all */    
     66              if (Status & WM_SF_ISVIS) {
     67                /* Check if this window affects us at all */    
     68                if (GUI_RectsIntersect(pRect, &pWin->Rect)) {
     69                  return 1;
     70                }
     71              }
     72            }
     73            return 0;
     74          }
     75          
     76          
     77          /*********************************************************************
     78          *
     79          *       _HasOverlap
     80          */
     81          static int _HasOverlap(WM_Obj * pWin, GUI_RECT * pRect) {
     82            WM_Obj * pParent;
     83            WM_HMEM hParent;
     84            /* Step 1:
     85             Check if there are any visible children. If this is so, then the
     86             window has an overlap.
     87             */
     88            /* Check all children */
     89            if (_WindowSiblingsOverlapRect(pWin->hFirstChild, pRect)) {
     90              return 1;
     91            }
     92          
     93            /* STEP 2:
     94                 Find out the max. height (r.y1) if we are at the left border.
     95                 Since we are using the same height for all IVRs at the same y0,
     96                 we do this only for the leftmost one.
     97            */
     98          
     99            /* Iterate over all windows which are above */
    100            /* Check all siblings above (Iterate over Parents and top siblings (hNext) */
    101            for (hParent = pWin->hParent; hParent; hParent = pParent->hParent) {
    102              pParent = WM_H2P(hParent);
    103              if (_WindowSiblingsOverlapRect(pParent->hNext, pRect)) {
    104                return 1;
    105              }
    106            }
    107            return 0;
    108          }
    109          
    110          /*********************************************************************
    111          *
    112          *       _IsCompletelyVisible
    113          *
    114          */

   \                                 In section .text, align 4, keep-with-next
    115          static char _IsCompletelyVisible(WM_HWIN hWin) {
   \                     _IsCompletelyVisible:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0050A0E1           MOV      R5,R0
    116            WM_Obj * pWin;
    117            GUI_RECT Rect;
    118          
    119            pWin = WM_H2P(hWin);
   \   0000000C   ........           BL       GUI_ALLOC_h2p
   \   00000010   0040A0E1           MOV      R4,R0
    120            Rect = pWin->Rect;
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   0820A0E3           MOV      R2,#+8
   \   00000020   ........           BL       __aeabi_memcpy
    121            if (WM__ClipAtParentBorders(&Rect, hWin) == 0) {
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       WM__ClipAtParentBorders
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0100001A           BNE      ??_IsCompletelyVisible_0
    122              return 0;                 /* Nothing is left */
   \                     ??_IsCompletelyVisible_1:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   360000EA           B        ??_IsCompletelyVisible_2
    123            }
    124            /* Check if the window is still the original one */
    125            if (_CompareRect(&Rect, &pWin->Rect)) {
   \                     ??_IsCompletelyVisible_0:
   \   00000040   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000044   F010D4E1           LDRSH    R1,[R4, #+0]
   \   00000048   010050E1           CMP      R0,R1
   \   0000004C   F9FFFF1A           BNE      ??_IsCompletelyVisible_1
   \   00000050   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000054   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000058   010050E1           CMP      R0,R1
   \   0000005C   F5FFFF1A           BNE      ??_IsCompletelyVisible_1
   \   00000060   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000064   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000068   010050E1           CMP      R0,R1
   \   0000006C   F1FFFF1A           BNE      ??_IsCompletelyVisible_1
   \   00000070   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000074   F610D4E1           LDRSH    R1,[R4, #+6]
   \   00000078   010050E1           CMP      R0,R1
   \   0000007C   EDFFFF1A           BNE      ??_IsCompletelyVisible_1
    126              return 0;                 /* Not completely visible */
    127            }
    128            /* Now the difficult part ...
    129               Find the rectangles.
    130            */
    131            if (_HasOverlap(pWin, &Rect)) {
   \   00000080   1C0094E5           LDR      R0,[R4, #+28]
   \   00000084   0A0000EA           B        ??_IsCompletelyVisible_3
   \                     ??_IsCompletelyVisible_4:
   \   00000088   ........           BL       GUI_ALLOC_h2p
   \   0000008C   0050A0E1           MOV      R5,R0
   \   00000090   2800D5E5           LDRB     R0,[R5, #+40]
   \   00000094   020010E3           TST      R0,#0x2
   \   00000098   0400000A           BEQ      ??_IsCompletelyVisible_5
   \   0000009C   0510A0E1           MOV      R1,R5
   \   000000A0   0D00A0E1           MOV      R0,SP
   \   000000A4   ........           BL       GUI_RectsIntersect
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   E1FFFF1A           BNE      ??_IsCompletelyVisible_1
   \                     ??_IsCompletelyVisible_5:
   \   000000B0   200095E5           LDR      R0,[R5, #+32]
   \                     ??_IsCompletelyVisible_3:
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   F2FFFF1A           BNE      ??_IsCompletelyVisible_4
   \   000000BC   180094E5           LDR      R0,[R4, #+24]
   \   000000C0   030000EA           B        ??_IsCompletelyVisible_6
   \                     ??_IsCompletelyVisible_7:
   \   000000C4   200094E5           LDR      R0,[R4, #+32]
   \                     ??_IsCompletelyVisible_8:
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0600001A           BNE      ??_IsCompletelyVisible_9
   \   000000D0   180095E5           LDR      R0,[R5, #+24]
   \                     ??_IsCompletelyVisible_6:
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   0E00000A           BEQ      ??_IsCompletelyVisible_10
   \   000000DC   ........           BL       GUI_ALLOC_h2p
   \   000000E0   0050A0E1           MOV      R5,R0
   \   000000E4   200095E5           LDR      R0,[R5, #+32]
   \   000000E8   F6FFFFEA           B        ??_IsCompletelyVisible_8
   \                     ??_IsCompletelyVisible_9:
   \   000000EC   ........           BL       GUI_ALLOC_h2p
   \   000000F0   0040A0E1           MOV      R4,R0
   \   000000F4   2800D4E5           LDRB     R0,[R4, #+40]
   \   000000F8   020010E3           TST      R0,#0x2
   \   000000FC   F0FFFF0A           BEQ      ??_IsCompletelyVisible_7
   \   00000100   0410A0E1           MOV      R1,R4
   \   00000104   0D00A0E1           MOV      R0,SP
   \   00000108   ........           BL       GUI_RectsIntersect
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   EBFFFF0A           BEQ      ??_IsCompletelyVisible_7
    132              return 0;
   \   00000114   C7FFFFEA           B        ??_IsCompletelyVisible_1
    133            }
    134            return 1;                   /* Is completely visible */
   \                     ??_IsCompletelyVisible_10:
   \   00000118   0100A0E3           MOV      R0,#+1
   \                     ??_IsCompletelyVisible_2:
   \   0000011C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000120   3080BDE8           POP      {R4,R5,PC}       ;; return
    135          }
    136          
    137          
    138          /*********************************************************************
    139          *
    140          *       Public code
    141          *
    142          **********************************************************************
    143          */
    144          /*********************************************************************
    145          *
    146          *       WM_IsCompletelyVisible
    147          *
    148          */

   \                                 In section .text, align 4, keep-with-next
    149          char WM_IsCompletelyVisible(WM_HWIN hWin) {
   \                     WM_IsCompletelyVisible:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    150            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    151            if (hWin) {
   \   00000010   0400000A           BEQ      ??WM_IsCompletelyVisible_0
    152              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    153              r = _IsCompletelyVisible(hWin);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       _IsCompletelyVisible
   \   00000020   0050A0E1           MOV      R5,R0
    154              WM_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
    155            }
    156            return r;
   \                     ??WM_IsCompletelyVisible_0:
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   04D08DE2           ADD      SP,SP,#+4
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
    157          }
    158          
    159          #else
    160            void WM_IsCompletelyVisible_C(void) {} /* avoid empty object files */
    161          #endif
    162          
    163          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     WM_IsCompletelyVisible     16
     _IsCompletelyVisible       24


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     _IsCompletelyVisible    292
     WM_IsCompletelyVisible   52

 
 344 bytes in section .text
 
 344 bytes of CODE memory

Errors: none
Warnings: none
