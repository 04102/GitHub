###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:52 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_EditHex.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_EditHex.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_EditHex.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _EditHex.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_EditHex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_EditHex.c
     19          Purpose     : Widget, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "EDIT.h"
     24          #include "GUI_Private.h"
     25          #include "EDIT_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *             Exported routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_EditHex
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          U32 GUI_EditHex(U32 Value, U32 Min, U32 Max, int Len, int xsize) {
   \                     GUI_EditHex:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0380A0E1           MOV      R8,R3
   \   00000014   38B09DE5           LDR      R11,[SP, #+56]
     40            U32 Ret = Value;
   \   00000018   0540A0E1           MOV      R4,R5
     41            int Key, x, y, ysize, Id;
     42            EDIT_Handle hEdit;
     43            EDIT_Obj* pObj;
     44            const GUI_FONT GUI_UNI_PTR * pOldFont;
     45            WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     46            pOldFont = GUI_SetFont(EDIT_GetDefaultFont());
   \   00000020   ........           BL       EDIT_GetDefaultFont
   \   00000024   ........           BL       GUI_SetFont
   \   00000028   0070A0E1           MOV      R7,R0
     47            x = GUI_GetDispPosX();
   \   0000002C   ........           BL       GUI_GetDispPosX
   \   00000030   0090A0E1           MOV      R9,R0
     48            y = GUI_GetDispPosY();
   \   00000034   ........           BL       GUI_GetDispPosY
   \   00000038   00A0A0E1           MOV      R10,R0
     49            if (xsize == 0)
   \   0000003C   00005BE3           CMP      R11,#+0
   \   00000040   0300001A           BNE      ??GUI_EditHex_0
     50              xsize = GUI_GetCharDistX('X') * Len + 6;
   \   00000044   5800A0E3           MOV      R0,#+88
   \   00000048   ........           BL       GUI_GetCharDistX
   \   0000004C   980000E0           MUL      R0,R8,R0
   \   00000050   06B080E2           ADD      R11,R0,#+6
     51            ysize = GUI_GetFontSizeY();
   \                     ??GUI_EditHex_0:
   \   00000054   ........           BL       GUI_GetFontSizeY
   \   00000058   0030A0E1           MOV      R3,R0
     52            Id = 0x1234;
     53            hEdit = EDIT_Create(x, y, xsize, ysize, Id, Len, 0);
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   08008DE5           STR      R0,[SP, #+8]
   \   00000064   3400A0E3           MOV      R0,#+52
   \   00000068   480D80E3           ORR      R0,R0,#0x1200
   \   0000006C   00008DE5           STR      R0,[SP, #+0]
   \   00000070   04808DE5           STR      R8,[SP, #+4]
   \   00000074   0B20A0E1           MOV      R2,R11
   \   00000078   0A10A0E1           MOV      R1,R10
   \   0000007C   0900A0E1           MOV      R0,R9
   \   00000080   ........           BL       EDIT_Create
   \   00000084   0080A0E1           MOV      R8,R0
     54            EDIT_SetHexMode(hEdit, Value, Min, Max);
   \   00000088   0630A0E1           MOV      R3,R6
   \   0000008C   10209DE5           LDR      R2,[SP, #+16]
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   ........           BL       EDIT_SetHexMode
     55            WM_SetFocus(hEdit);
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   ........           BL       WM_SetFocus
     56            do {
     57              Key = GUI_WaitKey();
   \                     ??GUI_EditHex_1:
   \   000000A0   ........           BL       GUI_WaitKey
   \   000000A4   0050A0E1           MOV      R5,R0
     58            } while ((Key != GUI_KEY_ESCAPE) && (Key != GUI_KEY_ENTER) && (Key != 0));
   \   000000A8   1B0055E3           CMP      R5,#+27
   \   000000AC   0D005513           CMPNE    R5,#+13
   \   000000B0   00005513           CMPNE    R5,#+0
   \   000000B4   F9FFFF1A           BNE      ??GUI_EditHex_1
     59            GUI_SetFont(pOldFont);
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           BL       GUI_SetFont
     60            pObj = EDIT_LOCK_H(hEdit);
   \   000000C0   0800A0E1           MOV      R0,R8
   \   000000C4   ........           BL       GUI_ALLOC_LockH
     61            if (Key == GUI_KEY_ENTER) {
   \   000000C8   0D0055E3           CMP      R5,#+13
     62              Ret = pObj->CurrentValue;
   \   000000CC   48409005           LDREQ    R4,[R0, #+72]
     63            }
     64            GUI_UNLOCK_H(pObj);
   \   000000D0   ........           BL       GUI_ALLOC_UnlockH
     65            EDIT_Delete(hEdit);
   \   000000D4   0800A0E1           MOV      R0,R8
   \   000000D8   ........           BL       WM_DeleteWindow
     66            WM_UNLOCK();
   \   000000DC   ........           BL       GUI_Unlock
     67            return Ret;
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   14D08DE2           ADD      SP,SP,#+20
   \   000000E8   F08FBDE8           POP      {R4-R11,PC}      ;; return
     68          }
     69          
     70          #else /* avoid empty object files */
     71          
     72          void GUI_EditHex_C(void);
     73          void GUI_EditHex_C(void){}
     74          
     75          #endif

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     GUI_EditHex     56


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_EditHex     236

 
 236 bytes in section .text
 
 236 bytes of CODE memory

Errors: none
Warnings: none
