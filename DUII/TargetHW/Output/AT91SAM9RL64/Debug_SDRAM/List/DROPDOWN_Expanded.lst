###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:43 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\DROPDOWN_Expanded.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\DROPDOWN_Expanded.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\DR #
#                    OPDOWN_Expanded.lst                                      #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\DRO #
#                    PDOWN_Expanded.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\DROPDOWN_Expanded.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : DROPDOWN_Expanded.c
     19          Purpose     : Implementation of dropdown widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "DROPDOWN_Private.h"
     25          #include "LISTBOX.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Public routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       DROPDOWN_IncSelExp
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          void DROPDOWN_IncSelExp(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_IncSelExp:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     40            if (hObj) {
   \   00000008   0900000A           BEQ      ??DROPDOWN_IncSelExp_0
     41              WM_HWIN hListWin;
     42              DROPDOWN_Obj * pObj;
     43              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     44              pObj = DROPDOWN_LOCK_H(hObj);
     45              hListWin = pObj->hListWin;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   884090E5           LDR      R4,[R0, #+136]
     46              GUI_UNLOCK_H(pObj);
   \   0000001C   ........           BL       GUI_ALLOC_UnlockH
     47              if (hListWin) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0100000A           BEQ      ??DROPDOWN_IncSelExp_1
     48                LISTBOX_IncSel(hListWin);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       LISTBOX_IncSel
     49              }
     50              WM_UNLOCK();
   \                     ??DROPDOWN_IncSelExp_1:
   \   00000030   ........           BL       GUI_Unlock
     51            }
     52          }
   \                     ??DROPDOWN_IncSelExp_0:
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
     53          
     54          /*********************************************************************
     55          *
     56          *       DROPDOWN_DecSelExp
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          void DROPDOWN_DecSelExp(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_DecSelExp:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
     59            if (hObj) {
   \   00000008   0900000A           BEQ      ??DROPDOWN_DecSelExp_0
     60              WM_HWIN hListWin;
     61              DROPDOWN_Obj * pObj;
     62              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     63              pObj = DROPDOWN_LOCK_H(hObj);
     64              hListWin = pObj->hListWin;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   884090E5           LDR      R4,[R0, #+136]
     65              GUI_UNLOCK_H(pObj);
   \   0000001C   ........           BL       GUI_ALLOC_UnlockH
     66              if (hListWin) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0100000A           BEQ      ??DROPDOWN_DecSelExp_1
     67                LISTBOX_DecSel(hListWin);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       LISTBOX_DecSel
     68              }
     69              WM_UNLOCK();
   \                     ??DROPDOWN_DecSelExp_1:
   \   00000030   ........           BL       GUI_Unlock
     70            }
     71          }
   \                     ??DROPDOWN_DecSelExp_0:
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
     72          
     73          /*********************************************************************
     74          *
     75          *       DROPDOWN_GetSelExp
     76          */

   \                                 In section .text, align 4, keep-with-next
     77          int  DROPDOWN_GetSelExp(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_GetSelExp:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     78            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     79            if (hObj) {
   \   00000010   0A00000A           BEQ      ??DROPDOWN_GetSelExp_0
     80              WM_HWIN hListWin;
     81              DROPDOWN_Obj * pObj;
     82              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     83              pObj = DROPDOWN_LOCK_H(hObj);
     84              hListWin = pObj->hListWin;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   884090E5           LDR      R4,[R0, #+136]
     85              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     86              if (hListWin) {
   \   00000028   000054E3           CMP      R4,#+0
   \   0000002C   0200000A           BEQ      ??DROPDOWN_GetSelExp_1
     87                r = LISTBOX_GetSel(hListWin);
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       LISTBOX_GetSel
   \   00000038   0050A0E1           MOV      R5,R0
     88              }
     89              WM_UNLOCK();
   \                     ??DROPDOWN_GetSelExp_1:
   \   0000003C   ........           BL       GUI_Unlock
     90            }
     91            return r;
   \                     ??DROPDOWN_GetSelExp_0:
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   04D08DE2           ADD      SP,SP,#+4
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
     92          }
     93          
     94          /*********************************************************************
     95          *
     96          *       DROPDOWN_SetSelExp
     97          */

   \                                 In section .text, align 4, keep-with-next
     98          void DROPDOWN_SetSelExp(DROPDOWN_Handle hObj, int Sel) {
   \                     DROPDOWN_SetSelExp:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     99            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??DROPDOWN_SetSelExp_0
    100              WM_HWIN hListWin;
    101              DROPDOWN_Obj * pObj;
    102              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    103              pObj = DROPDOWN_LOCK_H(hObj);
    104              hListWin = pObj->hListWin;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   884090E5           LDR      R4,[R0, #+136]
    105              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    106              if (hListWin) {
   \   0000002C   000054E3           CMP      R4,#+0
   \   00000030   0200000A           BEQ      ??DROPDOWN_SetSelExp_1
    107                LISTBOX_SetSel(hListWin, Sel);
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       LISTBOX_SetSel
    108              }
    109              WM_UNLOCK();
   \                     ??DROPDOWN_SetSelExp_1:
   \   00000040   ........           BL       GUI_Unlock
    110            }
    111          }
   \                     ??DROPDOWN_SetSelExp_0:
   \   00000044   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
    112          
    113          /*********************************************************************
    114          *
    115          *       DROPDOWN_GetListbox
    116          */

   \                                 In section .text, align 4, keep-with-next
    117          LISTBOX_Handle DROPDOWN_GetListbox(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_GetListbox:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    118            LISTBOX_Handle hListWin = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    119            if (hObj) {
   \   00000010   0500000A           BEQ      ??DROPDOWN_GetListbox_0
    120              DROPDOWN_Obj * pObj;
    121              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    122              pObj = DROPDOWN_LOCK_H(hObj);
    123              hListWin = pObj->hListWin;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   885090E5           LDR      R5,[R0, #+136]
    124              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    125              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    126            }
    127            return hListWin;
   \                     ??DROPDOWN_GetListbox_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    128          }
    129          
    130          #else                            /* Avoid problems with empty object modules */
    131            void DROPDOWN_Expanded_C(void);
    132            void DROPDOWN_Expanded_C(void) {}
    133          #endif
    134          
    135          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     DROPDOWN_DecSelExp       8
     DROPDOWN_GetListbox     16
     DROPDOWN_GetSelExp      16
     DROPDOWN_IncSelExp       8
     DROPDOWN_SetSelExp      16


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     DROPDOWN_IncSelExp    56
     DROPDOWN_DecSelExp    56
     DROPDOWN_GetSelExp    76
     DROPDOWN_SetSelExp    76
     DROPDOWN_GetListbox   56

 
 320 bytes in section .text
 
 320 bytes of CODE memory

Errors: none
Warnings: none
