###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:54 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\FlashReadWrite.c                            #
#    Command line =  C:\DUII\DUII\FlashReadWrite.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Fl #
#                    ashReadWrite.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Fla #
#                    shReadWrite.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\FlashReadWrite.c
      1          #ifndef _WINDOWS
      2          #ifdef PROFILER
      3          #include "profiler.h"
      4          #define THIS_TASK	MAINTASK_NUM		// functions in FlashReadWrite.c are primarily called by DUIIMain
      5          #endif
      6          #endif
      7          
      8          #include <stdio.h>
      9          #include <string.h>
     10          #include <ctype.h>
     11          
     12          #include "commondefs.h"
     13          #include "GUI.h"
     14          #include "FlashReadWrite.h"
     15          #include "InterTask.h"
     16          #include "ConfigScreens.h"
     17          #include "DUII.h"
     18          #include "LEDHandler.h"
     19          #include "RunningGauges.h"
     20          #include "DataHandler.h"
     21          
     22          #ifdef _WINDOWS
     23          #include <direct.h>
     24          #include "..\Application\dirent.h"
     25          #else
     26          #include "RTOS.H"
     27          #include "FS.h"
     28          #include "SPI_API.h"
     29          #include "dbgu.h"
     30          #include "adc.h"
     31          
     32          #ifdef PROFILER
     33          #include "profiler.h"
     34          #endif
     35          
     36          #endif
     37          #include "LEDHandler.h"
     38          #include "InterTask.h"
     39          #include "RaceSetupScreens.h"
     40          #include "ConfigurableGaugeCommon.h"
     41          
     42          //
     43          // External Data and Code references
     44          //
     45          extern void reset( void );
     46          extern int ReFlashYorN( int, int );
     47          #ifndef _WINDOWS
     48          extern char OkToUseSDCard(void);
     49          #endif
     50          extern void DisplaySplashScreen3(void);
     51          extern void ValidateCameraData(void);
     52          
     53          extern int systemSettingsPopupScreen;
     54          
     55          //
     56          // Constants
     57          //
     58          #define	SIZE_OF_VER_00_00_SYS_DATA_STRUCTURE	220
     59          #define	SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE	220
     60          // Note: as of 9/18/12 sizeof(sysData) = 244
     61          #define	SIZE_OF_VER_00_02_SYS_DATA_STRUCTURE	244
     62          
     63          #define	SIZE_OF_VER_00_00_VEHICLE_DATA_STRUCTURE	100
     64          #define	SIZE_OF_VER_00_01_VEHICLE_DATA_STRUCTURE	108
     65          

   \                                 In section .rodata, align 4, keep-with-next
     66          const char SOFTWARE_VERSION[] = "00.00";
   \                     SOFTWARE_VERSION:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303000       DC8 48, 48, 46, 48, 48, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
     67          const char SYSTEM_VERSION[] = "00.02";
   \                     SYSTEM_VERSION:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303200       DC8 48, 48, 46, 48, 50, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
     68          const char VEHICLE_VERSION[] = "00.01";
   \                     VEHICLE_VERSION:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303100       DC8 48, 48, 46, 48, 49, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
     69          const char DRIVER_VERSION[] = "00.00";
   \                     DRIVER_VERSION:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303000       DC8 48, 48, 46, 48, 48, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
     70          const char TRACK_VERSION[] = "00.00";
   \                     TRACK_VERSION:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303000       DC8 48, 48, 46, 48, 48, 0, 0, 0
   \              0000        
     71          

   \                                 In section .text, align 4, keep-with-next
     72          const char SYSTEM_FILE_NAME[] = "SystemConfig";
   \                     SYSTEM_FILE_NAME:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53797374656D       DC8 83, 121, 115, 116, 101, 109, 67, 111, 110, 102
   \              436F6E66    
   \   0000000A   696700000000       DC8 105, 103, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
     73          const char BACKUP_SYSTEM_FILE_NAME[] = "BackupSystemConfig";
   \                     BACKUP_SYSTEM_FILE_NAME:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4261636B7570       DC8 66, 97, 99, 107, 117, 112, 83, 121, 115, 116
   \              53797374    
   \   0000000A   656D436F6E66       DC8 101, 109, 67, 111, 110, 102, 105, 103, 0, 0
   \              69670000    

   \                                 In section .text, align 4, keep-with-next
     74          const char DEFAULT_DRIVER[] = "Driver A";
   \                     DEFAULT_DRIVER:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 65, 0, 0
   \              20410000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
     75          const char DEFAULT_VEHICLE[] = "Spec Miata 99-05";
   \                     DEFAULT_VEHICLE:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53706563204D       DC8 83, 112, 101, 99, 32, 77, 105, 97, 116, 97
   \              69617461    
   \   0000000A   2039392D3035       DC8 32, 57, 57, 45, 48, 53, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 1, keep-with-next
     76          const char DEFAULT_TRACK[] = "";
   \                     DEFAULT_TRACK:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0
     77          

   \                                 In section .text, align 4, keep-with-next
     78          const char SYSTEM_PATH[] = { LEADING_PATH CFG_PATH };
   \                     SYSTEM_PATH:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5C436F6E6669       DC8 92, 67, 111, 110, 102, 105, 103, 70, 105, 108
   \              6746696C    
   \   0000000A   657300000000       DC8 101, 115, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
     79          const char DRIVER_PATH[] = { LEADING_PATH CFG_PATH "\\Drivers" };
   \                     DRIVER_PATH:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   5C436F6E6669       DC8 92, 67, 111, 110, 102, 105, 103, 70, 105, 108
   \              6746696C    
   \   0000000A   65735C447269       DC8 101, 115, 92, 68, 114, 105, 118, 101, 114, 115
   \              76657273    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
     80          const char VEHICLE_PATH[] = { LEADING_PATH CFG_PATH "\\Vehicles" };
   \                     VEHICLE_PATH:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   5C436F6E6669       DC8 92, 67, 111, 110, 102, 105, 103, 70, 105, 108
   \              6746696C    
   \   0000000A   65735C566568       DC8 101, 115, 92, 86, 101, 104, 105, 99, 108, 101
   \              69636C65    
   \   00000014   73000000           DC8 115, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
     81          const char TRACK_PATH[] = { LEADING_PATH CFG_PATH "\\Tracks" };
   \                     TRACK_PATH:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5C436F6E6669       DC8 92, 67, 111, 110, 102, 105, 103, 70, 105, 108
   \              6746696C    
   \   0000000A   65735C547261       DC8 101, 115, 92, 84, 114, 97, 99, 107, 115, 0
   \              636B7300    

   \                                 In section .text, align 4, keep-with-next
     82          const char MY_SESSIONS_PATH[] = "MySessions";
   \                     MY_SESSIONS_PATH:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D7953657373       DC8 77, 121, 83, 101, 115, 115, 105, 111, 110, 115
   \              696F6E73    
   \   0000000A   0000               DC8 0, 0
     83          
     84          //
     85          // Global Memory allocations for working data structures
     86          //

   \                                 In section .bss, align 8
     87          SYS_DATA_STRUCTURE sysData;
     88          VEHICLE_DATA_STRUCTURE vehicleData;
   \                     vehicleData:
   \   00000000                      DS8 476
   \                     sysData:
   \   000001DC                      DS8 244
     89          DRIVER_DATA_STRUCTURE driverData;
     90          TRACK_DATA_STRUCTURE trackData;
     91          SENSOR_UNIT_STATUS_STRUCTURE suData;
     92          UNSAVED_SYS_DATA_STRUCTURE unsavedSysData;
   \                     unsavedSysData:
   \   000002D0                      DS8 224
   \                     trackData:
   \   000003B0                      DS8 5280
   \                     driverData:
   \   00001850                      DS8 16

   \                                 In section .bss, align 4
   \                     suData:
   \   00000000                      DS8 36

   \                                 In section .bss, align 4
     93          SECTOR_COMPARISON_TYPE sectors[NUMBER_OF_SECTORS];
   \                     sectors:
   \   00000000                      DS8 10400
     94          #ifdef PROFILER

   \                                 In section .data, align 4
     95          PROFILESTRUCT taskProfile[NUMBER_OF_TASKS] = {
   \                     taskProfile:
   \   00000000   447549494D61       DC8 "DuIIMain"
   \              696E00      
   \   00000009   000000             DC8 0, 0, 0
   \   0000000C   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000001C   534443617264       DC8 "SDCardRW"
   \              525700      
   \   00000025   000000             DC8 0, 0, 0
   \   00000028   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000038   436F6D6D00         DC8 "Comm"
   \   0000003D   000000000000       DC8 0, 0, 0, 0, 0, 0, 0
   \              00          
   \   00000044   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000054   4C617054696D       DC8 "LapTimer"
   \              657200      
   \   0000005D   000000             DC8 0, 0, 0
   \   00000060   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000070   54514D577269       DC8 "TQMWrite"
   \              746500      
   \   00000079   000000             DC8 0, 0, 0
   \   0000007C   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000008C   4C454448616E       DC8 4CH, 45H, 44H, 48H, 61H, 6EH, 64H, 6CH
   \              646C        
   \   00000094   6572               DC8 65H, 72H
   \   00000096   0000               DC8 0, 0
   \   00000098   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000A8   534443617264       DC8 "SDCardMgr"
   \              4D677200    
   \   000000B2   0000               DC8 0, 0
   \   000000B4   000000000000       DC32 0, 0, 0, 0
   \              000000000000
   \              00000000    
     96          	{ "DuIIMain", 0, 0, 0, 0},
     97          	{ "SDCardRW", 0, 0, 0, 0},
     98          	{ "Comm", 0, 0, 0, 0},
     99          	{ "LapTimer", 0, 0, 0, 0},
    100          	{ "TQMWrite", 0, 0, 0, 0},
    101          	{ "LEDHandler", 0, 0, 0, 0},
    102          	{ "SDCardMgr", 0, 0, 0, 0}
    103          } ;
    104          #endif
    105          
    106          //
    107          // Local Prototypes
    108          //
    109          int ReadSDCardData(void);
    110          void SetDefaultAnalogInputData(int i);
    111          void SetDefaultDigitalInputData(int i);
    112          signed int FRWWriteFile(char *pNewData, char *fileName, int size);
    113          char FRWReadFile(ALL_DATA_UNION *dataunion, char *filename, int size, enum DATATYPES type);
    114          char UpgradeSysData00_01(void *pNewData);
    115          char UpgradeSysData01_02(void *pNewData);
    116          char UpgradeVehicleData00_01(void *pNewData);
    117          void SetDefaultTempCalData(void);
    118          void UpdateAnalogInputData(V0_VEHICLE_DATA_STRUCTURE *pNewData, int i);
    119          void DisplayUpdatedVehicleDataPopup(void);
    120          
    121          //
    122          // Default vehicle definitions
    123          // Sort these into alphabetical order
    124          //
    125          //   NOTE: FIRST ENTRY IS DEFAULT VEHICLE PATTERN
    126          //
    127          

   \                                 In section .data, align 4
    128          DEFAULT_VEHICLE_STRUCTURE defaultVehicles[] = {
   \                     defaultVehicles:
   \   00000000   ........           DC32 `?<Constant "350Z">`
   \   00000004   A8060000           DC8 168, 6, 0, 0
   \   00000008   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 4072D0E5H, 4014BC6AH, 3FCFDF3BH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              0000E5D07240
   \              6ABC14403BDF
   \              CF3F        
   \   00000034   21B0A23F0000       DC32 3FA2B021H, 3F800000H, 3F4B4396H, 0H, 0H, 40628F5CH, 42A7A45AH, 245
   \              803F96434B3F
   \              000000000000
   \              00005C8F6240
   \              5AA4A742F500
   \              0000        
   \   00000054   120000002D00       DC32 18, 45
   \              0000        
   \   0000005C   01000000           DC8 1, 0, 0, 0
   \   00000060   990C00009A99       DC32 3225, 3E99999AH, 3F000000H, `?<Constant "370Z">`
   \              993E0000003F
   \              ........    
   \   00000070   A8060000           DC8 168, 6, 0, 0
   \   00000074   00000000401F       DC32 0, 8000, 0, 0, 7000, 7500, 0, 0, 4072D0E5H, 4014BC6AH, 3FCFDF3BH
   \              000000000000
   \              00000000581B
   \              00004C1D0000
   \              000000000000
   \              0000E5D07240
   \              6ABC14403BDF
   \              CF3F        
   \   000000A0   21B0A23F0000       DC32 3FA2B021H, 3F800000H, 3F4B4396H, 0H, 0H, 406C49BAH, 42A0322DH, 275
   \              803F96434B3F
   \              000000000000
   \              0000BA496C40
   \              2D32A0421301
   \              0000        
   \   000000C0   130000002300       DC32 19, 35
   \              0000        
   \   000000C8   01000000           DC8 1, 0, 0, 0
   \   000000CC   A00C00009A99       DC32 3232, 3E99999AH, 3F000000H, `?<Constant "BMW 135i">`
   \              993E0000003F
   \              ........    
   \   000000DC   A8060000           DC8 168, 6, 0, 0
   \   000000E0   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 4081EB85H, 4019999AH, 3FCA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000085EB8140
   \              9A991940713D
   \              CA3F        
   \   0000010C   EC51983F0000       DC32 3F9851ECH, 3F800000H, 3F5EB852H, 0H, 0H, 40451EB8H, 429B85A2H, 245
   \              803F52B85E3F
   \              000000000000
   \              0000B81E4540
   \              A2859B42F500
   \              0000        
   \   0000012C   230000001200       DC32 35, 18
   \              0000        
   \   00000134   01000000           DC8 1, 0, 0, 0
   \   00000138   800C0000A470       DC32 3200, 3EBD70A4H, 3F000000H, `?<Constant "BMW 1M">`
   \              BD3E0000003F
   \              ........    
   \   00000148   A8060000           DC8 168, 6, 0, 0
   \   0000014C   00000000581B       DC32 0, 7000, 0, 0, 6200, 7000, 0, 0, 4083851FH, 401428F6H, 3FC56042H
   \              000000000000
   \              000000003818
   \              0000581B0000
   \              000000000000
   \              00001F858340
   \              F62814404260
   \              C53F        
   \   00000178   79E9963FCDCC       DC32 3F96E979H, 3F8CCCCDH, 3F589375H, 0H, 0H, 4049DB23H, 42A54419H, 265
   \              8C3F7593583F
   \              000000000000
   \              000023DB4940
   \              1944A5420901
   \              0000        
   \   00000198   230000001300       DC32 35, 19
   \              0000        
   \   000001A0   01000000           DC8 1, 0, 0, 0
   \   000001A4   E40C0000A470       DC32 3300, 3EBD70A4H, 3F000000H, `?<Constant "BMW 2002">`
   \              BD3E0000003F
   \              ........    
   \   000001B4   A8040000           DC8 168, 4, 0, 0
   \   000001B8   00000000581B       DC32 0, 7000, 0, 0, 6000, 6300, 0, 0, 4070A3D7H, 400147AEH, 3FA8F5C3H
   \              000000000000
   \              000000007017
   \              00009C180000
   \              000000000000
   \              0000D7A37040
   \              AE470140C3F5
   \              A83F        
   \   000001E4   0000803F0000       DC32 3F800000H, 0H, 0H, 0H, 0H, 4079999AH, 4291BD71H, 185, 13, 70
   \              000000000000
   \              000000000000
   \              00009A997940
   \              71BD9142B900
   \              00000D000000
   \              46000000    
   \   0000020C   01000000           DC8 1, 0, 0, 0
   \   00000210   B1080000CDCC       DC32 2225, 3ECCCCCDH, 3F000000H, `?<Constant "BMW E30">`
   \              CC3E0000003F
   \              ........    
   \   00000220   A8060000           DC8 168, 6, 0, 0
   \   00000224   00000000581B       DC32 0, 7000, 0, 0, 5800, 6200, 0, 0, 40751EB8H, 400CCCCDH, 3FB33333H
   \              000000000000
   \              00000000A816
   \              000038180000
   \              000000000000
   \              0000B81E7540
   \              CDCC0C403333
   \              B33F        
   \   00000250   0000803F295C       DC32 3F800000H, 3F4F5C29H, 0H, 0H, 0H, 407A3D71H, 4291D70AH, 195, 14
   \              4F3F00000000
   \              000000000000
   \              0000713D7A40
   \              0AD79142C300
   \              00000E000000
   \   00000274   3C000000           DC32 60
   \   00000278   01000000           DC8 1, 0, 0, 0
   \   0000027C   F00A00009A99       DC32 2800, 3E99999AH, 3F000000H, `?<Constant "BMW E30 M3">`
   \              993E0000003F
   \              ........    
   \   0000028C   A8040000           DC8 168, 4, 0, 0
   \   00000290   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 40751EB8H, 400CCCCDH, 3FB33333H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              0000B81E7540
   \              CDCC0C403333
   \              B33F        
   \   000002BC   0000803F295C       DC32 3F800000H, 3F4F5C29H, 0H, 0H, 0H, 40833333H, 4290F5C3H, 205, 15
   \              4F3F00000000
   \              000000000000
   \              000033338340
   \              C3F59042CD00
   \              00000F000000
   \   000002E0   37000000           DC32 55
   \   000002E4   01000000           DC8 1, 0, 0, 0
   \   000002E8   F00A00009A99       DC32 2800, 3E99999AH, 3F000000H, `?<Constant "BMW E36 325">`
   \              993E0000003F
   \              ........    
   \   000002F8   A8060000           DC8 168, 6, 0, 0
   \   000002FC   00000000581B       DC32 0, 7000, 0, 0, 6200, 6500, 0, 0, 40875C29H, 402147AEH, 3FD47AE1H
   \              000000000000
   \              000000003818
   \              000064190000
   \              000000000000
   \              0000295C8740
   \              AE472140E17A
   \              D43F        
   \   00000328   F6289C3F0000       DC32 3F9C28F6H, 3F800000H, 0H, 0H, 0H, 4049999AH, 429C4FDFH, 205, 16
   \              803F00000000
   \              000000000000
   \              00009A994940
   \              DF4F9C42CD00
   \              000010000000
   \   0000034C   37000000           DC32 55
   \   00000350   01000000           DC8 1, 0, 0, 0
   \   00000354   800C0000C3F5       DC32 3200, 3EA8F5C3H, 3F000000H, `?<Constant "BMW E36 M3">`
   \              A83E0000003F
   \              ........    
   \   00000364   A8060000           DC8 168, 6, 0, 0
   \   00000368   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40866666H, 401F5C29H, 3FD47AE1H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000066668640
   \              295C1F40E17A
   \              D43F        
   \   00000394   52B89E3F0000       DC32 3F9EB852H, 3F800000H, 0H, 0H, 0H, 404EB852H, 429B4D50H, 245, 17
   \              803F00000000
   \              000000000000
   \              000052B84E40
   \              504D9B42F500
   \              000011000000
   \   000003B8   28000000           DC32 40
   \   000003BC   01000000           DC8 1, 0, 0, 0
   \   000003C0   800C0000C3F5       DC32 3200, 3EA8F5C3H, 3F000000H, `?<Constant "BMW E39 M5">`
   \              A83E0000003F
   \              ........    
   \   000003D0   A8080000           DC8 168, 8, 0, 0
   \   000003D4   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 40874396H, 4021CAC1H, 3FD5A1CBH
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000096438740
   \              C1CA2140CBA1
   \              D53F        
   \   00000400   91ED9C3F0000       DC32 3F9CED91H, 3F800000H, 3F53B646H, 0H, 0H, 4049999AH, 4299E979H, 275
   \              803F46B6533F
   \              000000000000
   \              00009A994940
   \              79E999421301
   \              0000        
   \   00000420   1E0000001200       DC32 30, 18
   \              0000        
   \   00000428   01000000           DC8 1, 0, 0, 0
   \   0000042C   130F0000E17A       DC32 3859, 3E947AE1H, 3F000000H, `?<Constant "BMW E46 325">`
   \              943E0000003F
   \              ........    
   \   0000043C   A8060000           DC8 168, 6, 0, 0
   \   00000440   00000000581B       DC32 0, 7000, 0, 0, 6200, 6500, 0, 0, 40875C29H, 402147AEH, 3FD47AE1H
   \              000000000000
   \              000000003818
   \              000064190000
   \              000000000000
   \              0000295C8740
   \              AE472140E17A
   \              D43F        
   \   0000046C   F6289C3F0000       DC32 3F9C28F6H, 3F800000H, 0H, 0H, 0H, 4049999AH, 429CE76DH, 225, 17
   \              803F00000000
   \              000000000000
   \              00009A994940
   \              6DE79C42E100
   \              000011000000
   \   00000490   2D000000           DC32 45
   \   00000494   01000000           DC8 1, 0, 0, 0
   \   00000498   800C0000C3F5       DC32 3200, 3EA8F5C3H, 3F000000H, `?<Constant "BMW E46 M3">`
   \              A83E0000003F
   \              ........    
   \   000004A8   A8060000           DC8 168, 6, 0, 0
   \   000004AC   00000000401F       DC32 0, 8000, 0, 0, 7500, 7900, 0, 0, 40875C29H, 4021EB85H, 3FD5C28FH
   \              000000000000
   \              000000004C1D
   \              0000DC1E0000
   \              000000000000
   \              0000295C8740
   \              85EB21408FC2
   \              D53F        
   \   000004D8   A4709D3FCDCC       DC32 3F9D70A4H, 3F8CCCCDH, 3F547AE1H, 0H, 0H, 4068F5C3H, 42A389BAH, 255
   \              8C3FE17A543F
   \              000000000000
   \              0000C3F56840
   \              BA89A342FF00
   \              0000        
   \   000004F8   130000002300       DC32 19, 35
   \              0000        
   \   00000500   01000000           DC8 1, 0, 0, 0
   \   00000504   570D00000AD7       DC32 3415, 3EA3D70AH, 3F000000H, `?<Constant "BMW E60 M5">`
   \              A33E0000003F
   \              ........    
   \   00000514   A80A0000           DC8 168, 10, 0, 0
   \   00000518   00000000401F       DC32 0, 8000, 0, 0, 7700, 8000, 0, 0, 407F5C29H, 4029999AH, 3FE7AE14H
   \              000000000000
   \              00000000141E
   \              0000401F0000
   \              000000000000
   \              0000295C7F40
   \              9A99294014AE
   \              E73F        
   \   00000544   85EBB13FE17A       DC32 3FB1EB85H, 3F947AE1H, 3F800000H, 0H, 0H, 4067AE14H, 42A9D70AH, 255
   \              943F0000803F
   \              000000000000
   \              000014AE6740
   \              0AD7A942FF00
   \              0000        
   \   00000564   280000001300       DC32 40, 19
   \              0000        
   \   0000056C   01000000           DC8 1, 0, 0, 0
   \   00000570   AC0F00009A99       DC32 4012, 3E99999AH, 3F000000H, `?<Constant "BMW E90 325">`
   \              993E0000003F
   \              ........    
   \   00000580   A8060000           DC8 168, 6, 0, 0
   \   00000584   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 408A3D71H, 401D70A4H, 3FD47AE1H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              0000713D8A40
   \              A4701D40E17A
   \              D43F        
   \   000005B0   A4709D3F0000       DC32 3F9D70A4H, 3F800000H, 3F59999AH, 0H, 0H, 404EB852H, 429D4625H, 255
   \              803F9A99593F
   \              000000000000
   \              000052B84E40
   \              25469D42FF00
   \              0000        
   \   000005D0   280000001100       DC32 40, 17
   \              0000        
   \   000005D8   01000000           DC8 1, 0, 0, 0
   \   000005DC   480D000052B8       DC32 3400, 3E9EB852H, 3F000000H, `?<Constant "BMW E92 M3">`
   \              9E3E0000003F
   \              ........    
   \   000005EC   A8080000           DC8 168, 8, 0, 0
   \   000005F0   000000002823       DC32 0, 9000, 0, 0, 7500, 8200, 0, 0, 4081EB85H, 4019999AH, 3FCA3D71H
   \              000000000000
   \              000000004C1D
   \              000008200000
   \              000000000000
   \              000085EB8140
   \              9A991940713D
   \              CA3F        
   \   0000061C   EC51983F0000       DC32 3F9851ECH, 3F800000H, 3F5EB852H, 0H, 0H, 40766666H, 42A54419H, 265
   \              803F52B85E3F
   \              000000000000
   \              000066667640
   \              1944A5420901
   \              0000        
   \   0000063C   130000002300       DC32 19, 35
   \              0000        
   \   00000644   01000000           DC8 1, 0, 0, 0
   \   00000648   410E00009A99       DC32 3649, 3E99999AH, 3F000000H, `?<Constant "BMW F10 M5">`
   \              993E0000003F
   \              ........    
   \   00000658   A8080000           DC8 168, 8, 0, 0
   \   0000065C   00000000901A       DC32 0, 6800, 0, 0, 6000, 6800, 0, 0, 4099999AH, 4025C28FH, 3FD9999AH
   \              000000000000
   \              000000007017
   \              0000901A0000
   \              000000000000
   \              00009A999940
   \              8FC225409A99
   \              D93F        
   \   00000688   0AD7A33F0000       DC32 3FA3D70AH, 3F800000H, 3F5EB852H, 0H, 0H, 4049999AH, 42A973B6H, 295
   \              803F52B85E3F
   \              000000000000
   \              00009A994940
   \              B673A9422701
   \              0000        
   \   000006A8   1E0000001400       DC32 30, 20
   \              0000        
   \   000006B0   01000000           DC8 1, 0, 0, 0
   \   000006B4   23110000C3F5       DC32 4387, 3EA8F5C3H, 3F000000H, `?<Constant "BMW Z4 3L">`
   \              A83E0000003F
   \              ........    
   \   000006C4   A8060000           DC8 168, 6, 0, 0
   \   000006C8   000000006419       DC32 0, 6500, 0, 0, 6200, 6500, 0, 0, 408B3333H, 40200000H, 3FD47AE1H
   \              000000000000
   \              000000003818
   \              000064190000
   \              000000000000
   \              000033338B40
   \              00002040E17A
   \              D43F        
   \   000006F4   A4709D3F0000       DC32 3F9D70A4H, 3F800000H, 3F59999AH, 0H, 0H, 40447AE1H, 429D4625H, 255
   \              803F9A99593F
   \              000000000000
   \              0000E17A4440
   \              25469D42FF00
   \              0000        
   \   00000714   280000001100       DC32 40, 17
   \              0000        
   \   0000071C   01000000           DC8 1, 0, 0, 0
   \   00000720   1C0C00000AD7       DC32 3100, 3EA3D70AH, 3F000000H, `?<Constant "BMW Z4 M">`
   \              A33E0000003F
   \              ........    
   \   00000730   A8060000           DC8 168, 6, 0, 0
   \   00000734   00000000401F       DC32 0, 8000, 0, 0, 7500, 8000, 0, 0, 408B3333H, 4021EB85H, 3FD47AE1H
   \              000000000000
   \              000000004C1D
   \              0000401F0000
   \              000000000000
   \              000033338B40
   \              85EB2140E17A
   \              D43F        
   \   00000760   A4709D3F0000       DC32 3F9D70A4H, 3F800000H, 3F59999AH, 0H, 0H, 4067AE14H, 42A38ED9H, 255
   \              803F9A99593F
   \              000000000000
   \              000014AE6740
   \              D98EA342FF00
   \              0000        
   \   00000780   280000001200       DC32 40, 18
   \              0000        
   \   00000788   01000000           DC8 1, 0, 0, 0
   \   0000078C   4E0C00000AD7       DC32 3150, 3EA3D70AH, 3F000000H, `?<Constant "Boxster 01">`
   \              A33E0000003F
   \              ........    
   \   0000079C   A8060000           DC8 168, 6, 0, 0
   \   000007A0   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40600000H, 4007AE14H, 3FB70A3DH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000000006040
   \              14AE07403D0A
   \              B73F        
   \   000007CC   1F858B3F3D0A       DC32 3F8B851FH, 3F570A3DH, 0H, 0H, 0H, 4063D70AH, 429C3021H, 225, 16
   \              573F00000000
   \              000000000000
   \              00000AD76340
   \              21309C42E100
   \              000010000000
   \   000007F0   32000000           DC32 50
   \   000007F4   01000000           DC8 1, 0, 0, 0
   \   000007F8   DA0A0000E17A       DC32 2778, 3E947AE1H, 3F000000H, `?<Constant "Boxster 03">`
   \              943E0000003F
   \              ........    
   \   00000808   A8060000           DC8 168, 6, 0, 0
   \   0000080C   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40600000H, 4007AE14H, 3FB70A3DH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000000006040
   \              14AE07403D0A
   \              B73F        
   \   00000838   1F858B3F3D0A       DC32 3F8B851FH, 3F570A3DH, 0H, 0H, 0H, 4063D70AH, 429D4625H, 255, 17
   \              573F00000000
   \              000000000000
   \              00000AD76340
   \              25469D42FF00
   \              000011000000
   \   0000085C   28000000           DC32 40
   \   00000860   01000000           DC8 1, 0, 0, 0
   \   00000864   FB0A0000E17A       DC32 2811, 3E947AE1H, 3F000000H, `?<Constant "Boxster 04">`
   \              943E0000003F
   \              ........    
   \   00000874   A8060000           DC8 168, 6, 0, 0
   \   00000878   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 406AE148H, 40033333H, 3FB47AE1H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000048E16A40
   \              33330340E17A
   \              B43F        
   \   000008A4   D7A3903FEC51       DC32 3F90A3D7H, 3F7851ECH, 3F51EB85H, 0H, 0H, 4077AE14H, 429D4625H, 255
   \              783F85EB513F
   \              000000000000
   \              000014AE7740
   \              25469D42FF00
   \              0000        
   \   000008C4   110000002800       DC32 17, 40
   \              0000        
   \   000008CC   01000000           DC8 1, 0, 0, 0
   \   000008D0   270B0000E17A       DC32 2855, 3E947AE1H, 3F000000H, `?<Constant "BoxsterS 00">`
   \              943E0000003F
   \              ........    
   \   000008E0   A8060000           DC8 168, 6, 0, 0
   \   000008E4   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40747AE1H, 400CCCCDH, 3FC28F5CH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              0000E17A7440
   \              CDCC0C405C8F
   \              C23F        
   \   00000910   F6289C3F5C8F       DC32 3F9C28F6H, 3F828F5CH, 3F570A3DH, 0H, 0H, 405C28F6H, 429EFBE7H, 265
   \              823F3D0A573F
   \              000000000000
   \              0000F6285C40
   \              E7FB9E420901
   \              0000        
   \   00000930   120000002300       DC32 18, 35
   \              0000        
   \   00000938   01000000           DC8 1, 0, 0, 0
   \   0000093C   270B0000E17A       DC32 2855, 3E947AE1H, 3F000000H, `?<Constant "BoxsterS 03">`
   \              943E0000003F
   \              ........    
   \   0000094C   A8060000           DC8 168, 6, 0, 0
   \   00000950   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40747AE1H, 400CCCCDH, 3FC28F5CH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              0000E17A7440
   \              CDCC0C405C8F
   \              C23F        
   \   0000097C   F6289C3F5C8F       DC32 3F9C28F6H, 3F828F5CH, 3F570A3DH, 0H, 0H, 405C28F6H, 429EFBE7H, 265
   \              823F3D0A573F
   \              000000000000
   \              0000F6285C40
   \              E7FB9E420901
   \              0000        
   \   0000099C   120000002300       DC32 18, 35
   \              0000        
   \   000009A4   01000000           DC8 1, 0, 0, 0
   \   000009A8   5E0B0000E17A       DC32 2910, 3E947AE1H, 3F000000H, `?<Constant "BoxsterS 04">`
   \              943E0000003F
   \              ........    
   \   000009B8   A8060000           DC8 168, 6, 0, 0
   \   000009BC   000000004C1D       DC32 0, 7500, 0, 0, 6800, 7200, 0, 0, 406AE148H, 40033333H, 3FB47AE1H
   \              000000000000
   \              00000000901A
   \              0000201C0000
   \              000000000000
   \              000048E16A40
   \              33330340E17A
   \              B43F        
   \   000009E8   D7A3903FEC51       DC32 3F90A3D7H, 3F7851ECH, 3F51EB85H, 0H, 0H, 4077AE14H, 429EFBE7H, 265
   \              783F85EB513F
   \              000000000000
   \              000014AE7740
   \              E7FB9E420901
   \              0000        
   \   00000A08   120000002300       DC32 18, 35
   \              0000        
   \   00000A10   01000000           DC8 1, 0, 0, 0
   \   00000A14   950B0000E17A       DC32 2965, 3E947AE1H, 3F000000H, `?<Constant "BoxsterS DSG 14">`
   \              943E0000003F
   \              ........    
   \   00000A24   A8060000           DC8 168, 6, 0, 0
   \   00000A28   00000000401F       DC32 0, 8000, 0, 0, 7000, 7500, 0, 0, 407A3D71H, 40128F5CH, 3FD33333H
   \              000000000000
   \              00000000581B
   \              00004C1D0000
   \              000000000000
   \              0000713D7A40
   \              5C8F12403333
   \              D33F        
   \   00000A54   6666A63F713D       DC32 3FA66666H, 3F8A3D71H, 3F6147AEH, 0H, 0H, 40500000H, 42AB8CCDH, 265
   \              8A3FAE47613F
   \              000000000000
   \              000000005040
   \              CD8CAB420901
   \              0000        
   \   00000A74   140000002300       DC32 20, 35
   \              0000        
   \   00000A7C   01000000           DC8 1, 0, 0, 0
   \   00000A80   B80B0000E17A       DC32 3000, 3E947AE1H, 3F000000H, `?<Constant "BR-Z">`
   \              943E0000003F
   \              ........    
   \   00000A90   A8040000           DC8 168, 4, 0, 0
   \   00000A94   00000000401F       DC32 0, 8000, 0, 0, 7000, 7400, 0, 0, 40681062H, 400C0831H, 3FC53F7DH
   \              000000000000
   \              00000000581B
   \              0000E81C0000
   \              000000000000
   \              000062106840
   \              31080C407D3F
   \              C53F        
   \   00000AC0   96439B3F0000       DC32 3F9B4396H, 3F800000H, 3F445A1DH, 0H, 0H, 40833333H, 429AAE14H, 215
   \              803F1D5A443F
   \              000000000000
   \              000033338340
   \              14AE9A42D700
   \              0000        
   \   00000AE0   110000002D00       DC32 17, 45
   \              0000        
   \   00000AE8   01000000           DC8 1, 0, 0, 0
   \   00000AEC   B90A0000713D       DC32 2745, 3E8A3D71H, 3F000000H, `?<Constant "CaymanS 04">`
   \              8A3E0000003F
   \              ........    
   \   00000AFC   A8060000           DC8 168, 6, 0, 0
   \   00000B00   00000000401F       DC32 0, 8000, 0, 0, 6800, 7200, 0, 0, 406AE148H, 40033333H, 3FB47AE1H
   \              000000000000
   \              00000000901A
   \              0000201C0000
   \              000000000000
   \              000048E16A40
   \              33330340E17A
   \              B43F        
   \   00000B2C   D7A3903FEC51       DC32 3F90A3D7H, 3F7851ECH, 3F51EB85H, 0H, 0H, 4077AE14H, 429EFBE7H, 265
   \              783F85EB513F
   \              000000000000
   \              000014AE7740
   \              E7FB9E420901
   \              0000        
   \   00000B4C   120000002300       DC32 18, 35
   \              0000        
   \   00000B54   01000000           DC8 1, 0, 0, 0
   \   00000B58   B30B0000E17A       DC32 2995, 3E947AE1H, 3F000000H, `?<Constant "CaymanS DSG 14">`
   \              943E0000003F
   \              ........    
   \   00000B68   A8060000           DC8 168, 6, 0, 0
   \   00000B6C   00000000401F       DC32 0, 8000, 0, 0, 7000, 7500, 0, 0, 407A3D71H, 40128F5CH, 3FD33333H
   \              000000000000
   \              00000000581B
   \              00004C1D0000
   \              000000000000
   \              0000713D7A40
   \              5C8F12403333
   \              D33F        
   \   00000B98   6666A63F713D       DC32 3FA66666H, 3F8A3D71H, 3F6147AEH, 0H, 0H, 40500000H, 42AB8CCDH, 265
   \              8A3FAE47613F
   \              000000000000
   \              000000005040
   \              CD8CAB420901
   \              0000        
   \   00000BB8   140000002300       DC32 20, 35
   \              0000        
   \   00000BC0   01000000           DC8 1, 0, 0, 0
   \   00000BC4   B80B0000E17A       DC32 3000, 3E947AE1H, 3F000000H, `?<Constant "Civic 92-95">`
   \              943E0000003F
   \              ........    
   \   00000BD4   A8040000           DC8 168, 4, 0, 0
   \   00000BD8   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 40500000H, 3FE16873H, 3F960419H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000000005040
   \              7368E13F1904
   \              963F        
   \   00000C04   39B4683F46B6       DC32 3F68B439H, 3F33B646H, 0H, 0H, 0H, 4081DB23H, 428EE148H, 185, 14
   \              333F00000000
   \              000000000000
   \              000023DB8140
   \              48E18E42B900
   \              00000E000000
   \   00000C28   3C000000           DC32 60
   \   00000C2C   01000000           DC8 1, 0, 0, 0
   \   00000C30   9808000052B8       DC32 2200, 3E9EB852H, 3F000000H, `?<Constant "Elise">`
   \              9E3E0000003F
   \              ........    
   \   00000C40   A8040000           DC8 168, 4, 0, 0
   \   00000C44   00000000401F       DC32 0, 8000, 0, 0, 7500, 8000, 0, 0, 404AE148H, 40033333H, 3FBD70A4H
   \              000000000000
   \              000000004C1D
   \              0000401F0000
   \              000000000000
   \              000048E14A40
   \              33330340A470
   \              BD3F        
   \   00000C70   8FC2953F1F85       DC32 3F95C28FH, 3F6B851FH, 3F4F5C29H, 0H, 0H, 4090F5C3H, 429CE7F0H, 225
   \              6B3F295C4F3F
   \              000000000000
   \              0000C3F59040
   \              F0E79C42E100
   \              0000        
   \   00000C90   110000002D00       DC32 17, 45
   \              0000        
   \   00000C98   01000000           DC8 1, 0, 0, 0
   \   00000C9C   B7070000CDCC       DC32 1975, 3ECCCCCDH, 3F000000H, `?<Constant "EVO 04">`
   \              CC3E0000003F
   \              ........    
   \   00000CAC   A8040000           DC8 168, 4, 0, 0
   \   00000CB0   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 403B645AH, 3FF9999AH, 3FB41893H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              00005A643B40
   \              9A99F93F9318
   \              B43F        
   \   00000CDC   CFF7833FEC51       DC32 3F83F7CFH, 3F3851ECH, 0H, 0H, 0H, 405A9FBEH, 429F224EH, 235, 17
   \              383F00000000
   \              000000000000
   \              0000BE9F5A40
   \              4E229F42EB00
   \              000011000000
   \   00000D00   2D000000           DC32 45
   \   00000D04   01000000           DC8 1, 0, 0, 0
   \   00000D08   1C0C00003333       DC32 3100, 3EB33333H, 3F000000H, `?<Constant "EVO MR 05">`
   \              B33E0000003F
   \              ........    
   \   00000D18   A8040000           DC8 168, 4, 0, 0
   \   00000D1C   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 403A2D0EH, 3FF8D4FEH, 3FB78D50H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              00000E2D3A40
   \              FED4F83F508D
   \              B73F        
   \   00000D48   CDCC8C3F3F35       DC32 3F8CCCCDH, 3F5E353FH, 3F316873H, 0H, 0H, 40928F5CH, 429F224EH, 235
   \              5E3F7368313F
   \              000000000000
   \              00005C8F9240
   \              4E229F42EB00
   \              0000        
   \   00000D68   110000002D00       DC32 17, 45
   \              0000        
   \   00000D70   01000000           DC8 1, 0, 0, 0
   \   00000D74   D50C00003333       DC32 3285, 3EB33333H, 3F000000H, `?<Constant "EVO TWIN 08">`
   \              B33E0000003F
   \              ........    
   \   00000D84   A8040000           DC8 168, 4, 0, 0
   \   00000D88   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 4069EB85H, 40178D50H, 3FE08312H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              000085EB6940
   \              508D17401283
   \              E03F        
   \   00000DB4   4C37A93F2506       DC32 3FA9374CH, 3F810625H, 3F466666H, 0H, 0H, 40805A1DH, 42A19581H, 245
   \              813F6666463F
   \              000000000000
   \              00001D5A8040
   \              8195A142F500
   \              0000        
   \   00000DD4   120000002800       DC32 18, 40
   \              0000        
   \   00000DDC   01000000           DC8 1, 0, 0, 0
   \   00000DE0   AC0D00003333       DC32 3500, 3EB33333H, 3F000000H, `?<Constant "Evora">`
   \              B33E0000003F
   \              ........    
   \   00000DF0   A8060000           DC8 168, 6, 0, 0
   \   00000DF4   00000000581B       DC32 0, 7000, 0, 0, 6200, 6800, 0, 0, 40626E98H, 3FF4DD2FH, 3FB41893H
   \              000000000000
   \              000000003818
   \              0000901A0000
   \              000000000000
   \              0000986E6240
   \              2FDDF43F9318
   \              B43F        
   \   00000E20   E3A58B3F8FC2       DC32 3F8BA5E3H, 3F75C28FH, 3F5C28F6H, 0H, 0H, 407147AEH, 42A389BAH, 255
   \              753FF6285C3F
   \              000000000000
   \              0000AE477140
   \              BA89A342FF00
   \              0000        
   \   00000E40   130000002300       DC32 19, 35
   \              0000        
   \   00000E48   01000000           DC8 1, 0, 0, 0
   \   00000E4C   B80B0000C3F5       DC32 3000, 3EA8F5C3H, 3F000000H, `?<Constant "Exige">`
   \              A83E0000003F
   \              ........    
   \   00000E5C   A8040000           DC8 168, 4, 0, 0
   \   00000E60   00000000401F       DC32 0, 8000, 0, 0, 7500, 8000, 0, 0, 404AE148H, 40033333H, 3FBD70A4H
   \              000000000000
   \              000000004C1D
   \              0000401F0000
   \              000000000000
   \              000048E14A40
   \              33330340A470
   \              BD3F        
   \   00000E8C   8FC2953F1F85       DC32 3F95C28FH, 3F6B851FH, 3F4F5C29H, 0H, 0H, 4090F5C3H, 429CE7F0H, 255
   \              6B3F295C4F3F
   \              000000000000
   \              0000C3F59040
   \              F0E79C42FF00
   \              0000        
   \   00000EAC   110000002D00       DC32 17, 45
   \              0000        
   \   00000EB4   01000000           DC8 1, 0, 0, 0
   \   00000EB8   090800006666       DC32 2057, 3EE66666H, 3F000000H, `?<Constant "Ferrari 360">`
   \              E63E0000003F
   \              ........    
   \   00000EC8   A8080000           DC8 168, 8, 0, 0
   \   00000ECC   00000000401F       DC32 0, 8000, 0, 0, 7500, 7900, 0, 0, 40528F5CH, 400A3D71H, 3FCE147BH
   \              000000000000
   \              000000004C1D
   \              0000DC1E0000
   \              000000000000
   \              00005C8F5240
   \              713D0A407B14
   \              CE3F        
   \   00000EF8   5C8FA23F0AD7       DC32 3FA28F5CH, 3F83D70AH, 3F59999AH, 0H, 0H, 408E147BH, 42A1AD91H, 285
   \              833F9A99593F
   \              000000000000
   \              00007B148E40
   \              91ADA1421D01
   \              0000        
   \   00000F18   130000002300       DC32 19, 35
   \              0000        
   \   00000F20   01000000           DC8 1, 0, 0, 0
   \   00000F24   F80B00007B14       DC32 3064, 3EAE147BH, 3F000000H, `?<Constant "Ferrari 430">`
   \              AE3E0000003F
   \              ........    
   \   00000F34   A8080000           DC8 168, 8, 0, 0
   \   00000F38   00000000D020       DC32 0, 8400, 0, 0, 7800, 8200, 0, 0, 40528F5CH, 400A3D71H, 3FCE147BH
   \              000000000000
   \              00000000781E
   \              000008200000
   \              000000000000
   \              00005C8F5240
   \              713D0A407B14
   \              CE3F        
   \   00000F64   5C8FA23F0AD7       DC32 3FA28F5CH, 3F83D70AH, 3F51EB85H, 0H, 0H, 4089999AH, 42A1AD91H, 285
   \              833F85EB513F
   \              000000000000
   \              00009A998940
   \              91ADA1421D01
   \              0000        
   \   00000F84   130000002300       DC32 19, 35
   \              0000        
   \   00000F8C   01000000           DC8 1, 0, 0, 0
   \   00000F90   7D0C00007B14       DC32 3197, 3EAE147BH, 3F000000H, `?<Constant "Ferrari 458">`
   \              AE3E0000003F
   \              ........    
   \   00000FA0   A8080000           DC8 168, 8, 0, 0
   \   00000FA4   000000002823       DC32 0, 9000, 0, 0, 8500, 9000, 0, 0, 40451EB8H, 400C28F6H, 3FD0A3D7H
   \              000000000000
   \              000000003421
   \              000028230000
   \              000000000000
   \              0000B81E4540
   \              F6280C40D7A3
   \              D03F        
   \   00000FD0   B81EA53F0AD7       DC32 3FA51EB8H, 3F83D70AH, 3F570A3DH, 0H, 0H, 40A47AE1H, 42B0BEFAH, 295
   \              833F3D0A573F
   \              000000000000
   \              0000E17AA440
   \              FABEB0422701
   \              0000        
   \   00000FF0   230000001400       DC32 35, 20
   \              0000        
   \   00000FF8   01000000           DC8 1, 0, 0, 0
   \   00000FFC   800C0000C3F5       DC32 3200, 3EA8F5C3H, 3F000000H, `?<Constant "Fiat 500 Abarth">`
   \              A83E0000003F
   \              ........    
   \   0000100C   A8040000           DC8 168, 4, 0, 0
   \   00001010   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 407A2D0EH, 400F3B64H, 3FC28F5CH
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              00000E2D7A40
   \              643B0F405C8F
   \              C23F        
   \   0000103C   CFF7933FFED4       DC32 3F93F7CFH, 3F58D4FEH, 0H, 0H, 0H, 4056978DH, 429875C3H, 205, 17
   \              583F00000000
   \              000000000000
   \              00008D975640
   \              C3759842CD00
   \              000011000000
   \   00001060   28000000           DC32 40
   \   00001064   01000000           DC8 1, 0, 0, 0
   \   00001068   C40900006666       DC32 2500, 3EA66666H, 3F000000H, `?<Constant "FR-S">`
   \              A63E0000003F
   \              ........    
   \   00001078   A8040000           DC8 168, 4, 0, 0
   \   0000107C   00000000401F       DC32 0, 8000, 0, 0, 7000, 7400, 0, 0, 40681062H, 400C0831H, 3FC53F7DH
   \              000000000000
   \              00000000581B
   \              0000E81C0000
   \              000000000000
   \              000062106840
   \              31080C407D3F
   \              C53F        
   \   000010A8   96439B3F0000       DC32 3F9B4396H, 3F800000H, 3F445A1DH, 0H, 0H, 40833333H, 429AAE14H, 215
   \              803F1D5A443F
   \              000000000000
   \              000033338340
   \              14AE9A42D700
   \              0000        
   \   000010C8   110000002D00       DC32 17, 45
   \              0000        
   \   000010D0   01000000           DC8 1, 0, 0, 0
   \   000010D4   B90A0000713D       DC32 2745, 3E8A3D71H, 3F000000H, `?<Constant "Genesis Turbo">`
   \              8A3E0000003F
   \              ........    
   \   000010E4   A8040000           DC8 168, 4, 0, 0
   \   000010E8   00000000581B       DC32 0, 7000, 0, 0, 5800, 6000, 0, 0, 408570A4H, 401E147BH, 3FC28F5CH
   \              000000000000
   \              00000000A816
   \              000070170000
   \              000000000000
   \              0000A4708540
   \              7B141E405C8F
   \              C23F        
   \   00001114   A4709D3F52B8       DC32 3F9D70A4H, 3F5EB852H, 0H, 0H, 0H, 406E872BH, 42A7DE35H, 245, 19
   \              5E3F00000000
   \              000000000000
   \              00002B876E40
   \              35DEA742F500
   \              000013000000
   \   00001138   28000000           DC32 40
   \   0000113C   01000000           DC8 1, 0, 0, 0
   \   00001140   160D000052B8       DC32 3350, 3E9EB852H, 3F000000H, `?<Constant "Genesis V6">`
   \              9E3E0000003F
   \              ........    
   \   00001150   A8060000           DC8 168, 6, 0, 0
   \   00001154   00000000581B       DC32 0, 7000, 0, 0, 5500, 6200, 0, 0, 408570A4H, 401E147BH, 3FC28F5CH
   \              000000000000
   \              000000007C15
   \              000038180000
   \              000000000000
   \              0000A4708540
   \              7B141E405C8F
   \              C23F        
   \   00001180   A4709D3F52B8       DC32 3F9D70A4H, 3F5EB852H, 0H, 0H, 0H, 406EB852H, 42A7DE35H, 245, 19
   \              5E3F00000000
   \              000000000000
   \              000052B86E40
   \              35DEA742F500
   \              000013000000
   \   000011A4   28000000           DC32 40
   \   000011A8   01000000           DC8 1, 0, 0, 0
   \   000011AC   DE0D000052B8       DC32 3550, 3E9EB852H, 3F000000H, `?<Constant "GT3 996 03">`
   \              9E3E0000003F
   \              ........    
   \   000011BC   A8060000           DC8 168, 6, 0, 0
   \   000011C0   00000000401F       DC32 0, 8000, 0, 0, 7000, 7400, 0, 0, 40747AE1H, 4009999AH, 3FC7AE14H
   \              000000000000
   \              00000000581B
   \              0000E81C0000
   \              000000000000
   \              0000E17A7440
   \              9A99094014AE
   \              C73F        
   \   000011EC   48E19A3FCDCC       DC32 3F9AE148H, 3F8CCCCDH, 3F59999AH, 0H, 0H, 405C28F6H, 429CE24EH, 295
   \              8C3F9A99593F
   \              000000000000
   \              0000F6285C40
   \              4EE29C422701
   \              0000        
   \   0000120C   120000001E00       DC32 18, 30
   \              0000        
   \   00001214   01000000           DC8 1, 0, 0, 0
   \   00001218   E20B000052B8       DC32 3042, 3E9EB852H, 3F000000H, `?<Constant "GT3 996 99">`
   \              9E3E0000003F
   \              ........    
   \   00001228   A8060000           DC8 168, 6, 0, 0
   \   0000122C   00000000401F       DC32 0, 8000, 0, 0, 7000, 7400, 0, 0, 40747AE1H, 4009999AH, 3FC7AE14H
   \              000000000000
   \              00000000581B
   \              0000E81C0000
   \              000000000000
   \              0000E17A7440
   \              9A99094014AE
   \              C73F        
   \   00001258   48E19A3FEC51       DC32 3F9AE148H, 3F7851ECH, 3F51EB85H, 0H, 0H, 405C28F6H, 429B6560H, 285
   \              783F85EB513F
   \              000000000000
   \              0000F6285C40
   \              60659B421D01
   \              0000        
   \   00001278   120000001E00       DC32 18, 30
   \              0000        
   \   00001280   01000000           DC8 1, 0, 0, 0
   \   00001284   A00B000052B8       DC32 2976, 3E9EB852H, 3F000000H, `?<Constant "GT3 997 06">`
   \              9E3E0000003F
   \              ........    
   \   00001294   A8060000           DC8 168, 6, 0, 0
   \   00001298   000000002823       DC32 0, 9000, 0, 0, 8000, 8400, 0, 0, 40747AE1H, 4010A3D7H, 3FD1EB85H
   \              000000000000
   \              00000000401F
   \              0000D0200000
   \              000000000000
   \              0000E17A7440
   \              D7A3104085EB
   \              D13F        
   \   000012C4   B81EA53F14AE       DC32 3FA51EB8H, 3F87AE14H, 3F6B851FH, 0H, 0H, 405C28F6H, 429CE24EH, 295
   \              873F1F856B3F
   \              000000000000
   \              0000F6285C40
   \              4EE29C422701
   \              0000        
   \   000012E4   120000001E00       DC32 18, 30
   \              0000        
   \   000012EC   01000000           DC8 1, 0, 0, 0
   \   000012F0   030C000052B8       DC32 3075, 3E9EB852H, 3F000000H, `?<Constant "GT3 RS 996 03">`
   \              9E3E0000003F
   \              ........    
   \   00001300   A8060000           DC8 168, 6, 0, 0
   \   00001304   00000000401F       DC32 0, 8000, 0, 0, 7000, 7400, 0, 0, 40747AE1H, 4009999AH, 3FC7AE14H
   \              000000000000
   \              00000000581B
   \              0000E81C0000
   \              000000000000
   \              0000E17A7440
   \              9A99094014AE
   \              C73F        
   \   00001330   48E19A3FCDCC       DC32 3F9AE148H, 3F8CCCCDH, 3F59999AH, 0H, 0H, 405C28F6H, 42A4A666H, 305
   \              8C3F9A99593F
   \              000000000000
   \              0000F6285C40
   \              66A6A4423101
   \              0000        
   \   00001350   130000001E00       DC32 19, 30
   \              0000        
   \   00001358   01000000           DC8 1, 0, 0, 0
   \   0000135C   B60B000052B8       DC32 2998, 3E9EB852H, 3F000000H, `?<Constant "GT3 RS 997 10">`
   \              9E3E0000003F
   \              ........    
   \   0000136C   A8060000           DC8 168, 6, 0, 0
   \   00001370   000000002823       DC32 0, 9000, 0, 0, 8000, 8500, 0, 0, 40747AE1H, 4010A3D7H, 3FD1EB85H
   \              000000000000
   \              00000000401F
   \              000034210000
   \              000000000000
   \              0000E17A7440
   \              D7A3104085EB
   \              D13F        
   \   0000139C   B81EA53F14AE       DC32 3FA51EB8H, 3F87AE14H, 3F6147AEH, 0H, 0H, 4078F5C3H, 42A79DB2H, 325
   \              873FAE47613F
   \              000000000000
   \              0000C3F57840
   \              B29DA7424501
   \              0000        
   \   000013BC   130000001E00       DC32 19, 30
   \              0000        
   \   000013C4   01000000           DC8 1, 0, 0, 0
   \   000013C8   CF0B000052B8       DC32 3023, 3E9EB852H, 3F000000H, `?<Constant "GTR">`
   \              9E3E0000003F
   \              ........    
   \   000013D8   A8060000           DC8 168, 6, 0, 0
   \   000013DC   00000000401F       DC32 0, 8000, 0, 0, 6800, 7200, 0, 0, 4081CAC1H, 40134396H, 3FCC28F6H
   \              000000000000
   \              00000000901A
   \              0000201C0000
   \              000000000000
   \              0000C1CA8140
   \              96431340F628
   \              CC3F        
   \   00001408   77BE9F3FC520       DC32 3F9FBE77H, 3F8020C5H, 3F4BC6A8H, 0H, 0H, 406CCCCDH, 42A7F646H, 285
   \              803FA8C64B3F
   \              000000000000
   \              0000CDCC6C40
   \              46F6A7421D01
   \              0000        
   \   00001428   140000002300       DC32 20, 35
   \              0000        
   \   00001430   01000000           DC8 1, 0, 0, 0
   \   00001434   D80E0000B81E       DC32 3800, 3E851EB8H, 3F000000H, `?<Constant "Integra GSR 94">`
   \              853E0000003F
   \              ........    
   \   00001444   A8040000           DC8 168, 4, 0, 0
   \   00001448   00000000401F       DC32 0, 8000, 0, 0, 7500, 7900, 0, 0, 404EB852H, 3FF33333H, 3FAE147BH
   \              000000000000
   \              000000004C1D
   \              0000DC1E0000
   \              000000000000
   \              000052B84E40
   \              3333F33F7B14
   \              AE3F        
   \   00001474   1D5A843FD578       DC32 3F845A1DH, 3F4978D5H, 0H, 0H, 0H, 408CCCCDH, 4291DA1DH, 195, 14
   \              493F00000000
   \              000000000000
   \              0000CDCC8C40
   \              1DDA9142C300
   \              00000E000000
   \   00001498   3C000000           DC32 60
   \   0000149C   01000000           DC8 1, 0, 0, 0
   \   000014A0   530A0000C3F5       DC32 2643, 3EA8F5C3H, 3F000000H, `?<Constant "Integra LS 02">`
   \              A83E0000003F
   \              ........    
   \   000014B0   A8040000           DC8 168, 4, 0, 0
   \   000014B4   00000000581B       DC32 0, 7000, 0, 0, 5700, 6000, 0, 0, 404A9FBEH, 3FEDB22DH, 3FA126E9H
   \              000000000000
   \              000000004416
   \              000070170000
   \              000000000000
   \              0000BE9F4A40
   \              2DB2ED3FE926
   \              A13F        
   \   000014E0   295C6F3FB6F3       DC32 3F6F5C29H, 3F3DF3B6H, 0H, 0H, 0H, 408CCCCDH, 4291DA1DH, 195, 14
   \              3D3F00000000
   \              000000000000
   \              0000CDCC8C40
   \              1DDA9142C300
   \              00000E000000
   \   00001504   3C000000           DC32 60
   \   00001508   01000000           DC8 1, 0, 0, 0
   \   0000150C   000A0000C3F5       DC32 2560, 3EA8F5C3H, 3F000000H, `?<Constant "Integra R 99">`
   \              A83E0000003F
   \              ........    
   \   0000151C   A8040000           DC8 168, 4, 0, 0
   \   00001520   00000000401F       DC32 0, 8000, 0, 0, 7500, 7900, 0, 0, 404EB852H, 4006B852H, 3FBA9FBEH
   \              000000000000
   \              000000004C1D
   \              0000DC1E0000
   \              000000000000
   \              000052B84E40
   \              52B80640BE9F
   \              BA3F        
   \   0000154C   2DB28D3F8716       DC32 3F8DB22DH, 3F591687H, 0H, 0H, 0H, 408CCCCDH, 428E7BE7H, 195, 15
   \              593F00000000
   \              000000000000
   \              0000CDCC8C40
   \              E77B8E42C300
   \              00000F000000
   \   00001570   37000000           DC32 55
   \   00001574   01000000           DC8 1, 0, 0, 0
   \   00001578   4F0A0000C3F5       DC32 2639, 3EA8F5C3H, 3F000000H, `?<Constant "Miata 90-93">`
   \              A83E0000003F
   \              ........    
   \   00001588   A8040000           DC8 168, 4, 0, 0
   \   0000158C   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   000015B8   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 4089999AH, 428EE148H, 185, 14
   \              503F00000000
   \              000000000000
   \              00009A998940
   \              48E18E42B900
   \              00000E000000
   \   000015DC   3C000000           DC32 60
   \   000015E0   01000000           DC8 1, 0, 0, 0
   \   000015E4   FC0800005C8F       DC32 2300, 3EC28F5CH, 3F000000H, `?<Constant "Miata 94-97">`
   \              C23E0000003F
   \              ........    
   \   000015F4   A8040000           DC8 168, 4, 0, 0
   \   000015F8   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   00001624   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 40833333H, 428EE148H, 185, 14
   \              503F00000000
   \              000000000000
   \              000033338340
   \              48E18E42B900
   \              00000E000000
   \   00001648   3C000000           DC32 60
   \   0000164C   01000000           DC8 1, 0, 0, 0
   \   00001650   2E0900005C8F       DC32 2350, 3EC28F5CH, 3F000000H, `?<Constant "Miata 99-05 5spd">`
   \              C23E0000003F
   \              ........    
   \   00001660   A8040000           DC8 168, 4, 0, 0
   \   00001664   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   00001690   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 4089999AH, 42922C08H, 205, 16
   \              503F00000000
   \              000000000000
   \              00009A998940
   \              082C9242CD00
   \              000010000000
   \   000016B4   2D000000           DC32 45
   \   000016B8   01000000           DC8 1, 0, 0, 0
   \   000016BC   60090000A470       DC32 2400, 3EBD70A4H, 3F000000H, `?<Constant "Miata 99-05 6spd">`
   \              BD3E0000003F
   \              ........    
   \   000016CC   A8040000           DC8 168, 4, 0, 0
   \   000016D0   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4070A3D7H, 4011374CH, 3FD28F5CH
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              0000D7A37040
   \              4C3711405C8F
   \              D23F        
   \   000016FC   60E5A03F0000       DC32 3FA0E560H, 3F800000H, 3F57CED9H, 0H, 0H, 4079999AH, 42922C08H, 205
   \              803FD9CE573F
   \              000000000000
   \              00009A997940
   \              082C9242CD00
   \              0000        
   \   0000171C   100000002D00       DC32 16, 45
   \              0000        
   \   00001724   01000000           DC8 1, 0, 0, 0
   \   00001728   2E090000A470       DC32 2350, 3EBD70A4H, 3F000000H, `?<Constant "Miata MX5 06+">`
   \              BD3E0000003F
   \              ........    
   \   00001738   A8040000           DC8 168, 4, 0, 0
   \   0000173C   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 407428F6H, 4010A3D7H, 3FD1EB85H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              0000F6287440
   \              D7A3104085EB
   \              D13F        
   \   00001768   F0A7963FCDCC       DC32 3F96A7F0H, 3F8CCCCDH, 3F54FDF4H, 0H, 0H, 40833333H, 429874BCH, 205
   \              8C3FF4FD543F
   \              000000000000
   \              000033338340
   \              BC749842CD00
   \              0000        
   \   00001788   110000002D00       DC32 17, 45
   \              0000        
   \   00001790   01000000           DC8 1, 0, 0, 0
   \   00001794   C20900000AD7       DC32 2498, 3EA3D70AH, 3F000000H, `?<Constant "Mini CooperS 03">`
   \              A33E0000003F
   \              ........    
   \   000017A4   A8040000           DC8 168, 4, 0, 0
   \   000017A8   00000000581B       DC32 0, 7000, 0, 0, 6000, 6200, 0, 0, 4053B646H, 400851ECH, 3FBDD2F2H
   \              000000000000
   \              000000007017
   \              000038180000
   \              000000000000
   \              000046B65340
   \              EC510840F2D2
   \              BD3F        
   \   000017D4   C1CA913FAAF1       DC32 3F91CAC1H, 3F72F1AAH, 3F50E560H, 0H, 0H, 4069999AH, 429875C3H, 205
   \              723F60E5503F
   \              000000000000
   \              00009A996940
   \              C3759842CD00
   \              0000        
   \   000017F4   110000002D00       DC32 17, 45
   \              0000        
   \   000017FC   01000000           DC8 1, 0, 0, 0
   \   00001800   760A00003333       DC32 2678, 3EB33333H, 3F000000H, `?<Constant "MR2 Spyder 00">`
   \              B33E0000003F
   \              ........    
   \   00001810   A8040000           DC8 168, 4, 0, 0
   \   00001814   00000000581B       DC32 0, 7000, 0, 0, 6700, 7000, 0, 0, 404A9FBEH, 3FF33333H, 3FB1EB85H
   \              000000000000
   \              000000002C1A
   \              0000581B0000
   \              000000000000
   \              0000BE9F4A40
   \              3333F33F85EB
   \              B13F        
   \   00001840   CFF7833FD7A3       DC32 3F83F7CFH, 3F50A3D7H, 3F39999AH, 0H, 0H, 4090ED91H, 4295E76DH, 205
   \              503F9A99393F
   \              000000000000
   \              000091ED9040
   \              6DE79542CD00
   \              0000        
   \   00001860   0F0000003200       DC32 15, 50
   \              0000        
   \   00001868   01000000           DC8 1, 0, 0, 0
   \   0000186C   930800003333       DC32 2195, 3EB33333H, 3F000000H, `?<Constant "MR2 Turbo 94">`
   \              B33E0000003F
   \              ........    
   \   0000187C   A8040000           DC8 168, 4, 0, 0
   \   00001880   00000000581B       DC32 0, 7000, 0, 0, 5800, 6200, 0, 0, 404EB852H, 3FF47AE1H, 3FA8F5C3H
   \              000000000000
   \              00000000A816
   \              000038180000
   \              000000000000
   \              000052B84E40
   \              E17AF43FC3F5
   \              A83F        
   \   000018AC   1F856B3F48E1       DC32 3F6B851FH, 3F3AE148H, 0H, 0H, 0H, 408947AEH, 4295E76DH, 225, 15
   \              3A3F00000000
   \              000000000000
   \              0000AE478940
   \              6DE79542E100
   \              00000F000000
   \   000018D0   32000000           DC32 50
   \   000018D4   01000000           DC8 1, 0, 0, 0
   \   000018D8   8C0A000052B8       DC32 2700, 3E9EB852H, 3F000000H, `?<Constant "Mustang GT 01">`
   \              9E3E0000003F
   \              ........    
   \   000018E8   A8080000           DC8 168, 8, 0, 0
   \   000018EC   00000000581B       DC32 0, 7000, 0, 0, 5200, 5700, 0, 0, 4057AE14H, 3FFEB852H, 3FAA3D71H
   \              000000000000
   \              000000005014
   \              000044160000
   \              000000000000
   \              000014AE5740
   \              52B8FE3F713D
   \              AA3F        
   \   00001918   CDCC8C3F1F85       DC32 3F8CCCCDH, 3F2B851FH, 0H, 0H, 0H, 405147AEH, 42A15BA6H, 245, 17
   \              2B3F00000000
   \              000000000000
   \              0000AE475140
   \              A65BA142F500
   \              000011000000
   \   0000193C   2D000000           DC32 45
   \   00001940   01000000           DC8 1, 0, 0, 0
   \   00001944   CA0C0000EC51       DC32 3274, 3EB851ECH, 3F000000H, `?<Constant "Mustang GT 11">`
   \              B83E0000003F
   \              ........    
   \   00001954   A8080000           DC8 168, 8, 0, 0
   \   00001958   00000000581B       DC32 0, 7000, 0, 0, 6500, 6800, 0, 0, 406A3D71H, 401B851FH, 3FD851ECH
   \              000000000000
   \              000000006419
   \              0000901A0000
   \              000000000000
   \              0000713D6A40
   \              1F851B40EC51
   \              D83F        
   \   00001984   C3F5A83F0000       DC32 3FA8F5C3H, 3F800000H, 3F266666H, 0H, 0H, 406EB852H, 42AB3AE1H, 235
   \              803F6666263F
   \              000000000000
   \              000052B86E40
   \              E13AAB42EB00
   \              0000        
   \   000019A4   120000003200       DC32 18, 50
   \              0000        
   \   000019AC   01000000           DC8 1, 0, 0, 0
   \   000019B0   100E00005C8F       DC32 3600, 3EC28F5CH, 3F000000H, `?<Constant "NSX 02">`
   \              C23E0000003F
   \              ........    
   \   000019C0   A8060000           DC8 168, 6, 0, 0
   \   000019C4   00000000401F       DC32 0, 8000, 0, 0, 7000, 7600, 0, 0, 40447AE1H, 3FFAE148H, 3FB70A3DH
   \              000000000000
   \              00000000581B
   \              0000B01D0000
   \              000000000000
   \              0000E17A4440
   \              48E1FA3F3D0A
   \              B73F        
   \   000019F0   D7A3903FC3F5       DC32 3F90A3D7H, 3F68F5C3H, 3F3851ECH, 0H, 0H, 4081EB85H, 429D4625H, 255
   \              683FEC51383F
   \              000000000000
   \              000085EB8140
   \              25469D42FF00
   \              0000        
   \   00001A10   110000002800       DC32 17, 40
   \              0000        
   \   00001A18   01000000           DC8 1, 0, 0, 0
   \   00001A1C   510C00009A99       DC32 3153, 3E99999AH, 3F000000H, `?<Constant "NSX 94">`
   \              993E0000003F
   \              ........    
   \   00001A2C   A8060000           DC8 168, 6, 0, 0
   \   00001A30   00000000401F       DC32 0, 8000, 0, 0, 7000, 7600, 0, 0, 40447AE1H, 3FDD70A4H, 3F9D70A4H
   \              000000000000
   \              00000000581B
   \              0000B01D0000
   \              000000000000
   \              0000E17A4440
   \              A470DD3FA470
   \              9D3F        
   \   00001A5C   EC51783FB81E       DC32 3F7851ECH, 3F451EB8H, 0H, 0H, 0H, 4081EB85H, 429B4D50H, 245, 17
   \              453F00000000
   \              000000000000
   \              000085EB8140
   \              504D9B42F500
   \              000011000000
   \   00001A80   28000000           DC32 40
   \   00001A84   01000000           DC8 1, 0, 0, 0
   \   00001A88   1C0C000052B8       DC32 3100, 3E9EB852H, 3F000000H, `?<Constant "RSX">`
   \              9E3E0000003F
   \              ........    
   \   00001A98   A8040000           DC8 168, 4, 0, 0
   \   00001A9C   00000000401F       DC32 0, 8000, 0, 0, 7000, 7700, 0, 0, 40511687H, 400851ECH, 3FC22D0EH
   \              000000000000
   \              00000000581B
   \              0000141E0000
   \              000000000000
   \              000087165140
   \              EC5108400E2D
   \              C23F        
   \   00001AC8   E5D0923FA8C6       DC32 3F92D0E5H, 3F6BC6A8H, 3F3CED91H, 0H, 0H, 408C72B0H, 429B199AH, 205
   \              6B3F91ED3C3F
   \              000000000000
   \              0000B0728C40
   \              9A199B42CD00
   \              0000        
   \   00001AE8   0F0000003C00       DC32 15, 60
   \              0000        
   \   00001AF0   01000000           DC8 1, 0, 0, 0
   \   00001AF4   DA0A00000AD7       DC32 2778, 3EA3D70AH, 3F000000H, `?<Constant "RX7 78-85 4spd">`
   \              A33E0000003F
   \              ........    
   \   00001B04   A8020000           DC8 168, 2, 0, 0
   \   00001B08   000000004C1D       DC32 0, 7500, 0, 0, 7000, 8000, 0, 0, 406B22D1H, 400DE354H, 3FB74BC7H
   \              000000000000
   \              00000000581B
   \              0000401F0000
   \              000000000000
   \              0000D1226B40
   \              54E30D40C74B
   \              B73F        
   \   00001B34   0000803F0000       DC32 3F800000H, 0H, 0H, 0H, 0H, 407A2D0EH, 4291BD71H, 185, 70, 13
   \              000000000000
   \              000000000000
   \              00000E2D7A40
   \              71BD9142B900
   \              000046000000
   \              0D000000    
   \   00001B5C   01000000           DC8 1, 0, 0, 0
   \   00001B60   2E09000052B8       DC32 2350, 3E9EB852H, 3F000000H, `?<Constant "RX7 78-85 5spd">`
   \              9E3E0000003F
   \              ........    
   \   00001B70   A8020000           DC8 168, 2, 0, 0
   \   00001B74   000000004C1D       DC32 0, 7500, 0, 0, 7000, 8000, 0, 0, 406B22D1H, 400DE354H, 3FB74BC7H
   \              000000000000
   \              00000000581B
   \              0000401F0000
   \              000000000000
   \              0000D1226B40
   \              54E30D40C74B
   \              B73F        
   \   00001BA0   0000803F3333       DC32 3F800000H, 3F533333H, 0H, 0H, 0H, 407A2D0EH, 4291BD71H, 185, 70
   \              533F00000000
   \              000000000000
   \              00000E2D7A40
   \              71BD9142B900
   \              000046000000
   \   00001BC4   0D000000           DC32 13
   \   00001BC8   01000000           DC8 1, 0, 0, 0
   \   00001BCC   5109000052B8       DC32 2385, 3E9EB852H, 3F000000H, `?<Constant "RX7 84-85 GSL-SE">`
   \              9E3E0000003F
   \              ........    
   \   00001BDC   A8020000           DC8 168, 2, 0, 0
   \   00001BE0   000000004C1D       DC32 0, 7500, 0, 0, 7000, 8000, 0, 0, 4067CED9H, 400BE76DH, 3FB5A1CBH
   \              000000000000
   \              00000000581B
   \              0000401F0000
   \              000000000000
   \              0000D9CE6740
   \              6DE70B40CBA1
   \              B53F        
   \   00001C0C   0000803F4A0C       DC32 3F800000H, 3F420C4AH, 0H, 0H, 0H, 407A2D0EH, 4291BD71H, 185, 70
   \              423F00000000
   \              000000000000
   \              00000E2D7A40
   \              71BD9142B900
   \              000046000000
   \   00001C30   0D000000           DC32 13
   \   00001C34   01000000           DC8 1, 0, 0, 0
   \   00001C38   1E0A000052B8       DC32 2590, 3E9EB852H, 3F000000H, `?<Constant "RX7 FC 86-91">`
   \              9E3E0000003F
   \              ........    
   \   00001C48   A8020000           DC8 168, 2, 0, 0
   \   00001C4C   000000004C1D       DC32 0, 7500, 0, 0, 7000, 7500, 0, 0, 405EE979H, 400147AEH, 3FB20C4AH
   \              000000000000
   \              00000000581B
   \              00004C1D0000
   \              000000000000
   \              000079E95E40
   \              AE4701404A0C
   \              B23F        
   \   00001C78   0000803F5C8F       DC32 3F800000H, 3F428F5CH, 0H, 0H, 0H, 40833333H, 42973D71H, 205, 50
   \              423F00000000
   \              000000000000
   \              000033338340
   \              713D9742CD00
   \              000032000000
   \   00001C9C   10000000           DC32 16
   \   00001CA0   01000000           DC8 1, 0, 0, 0
   \   00001CA4   FC08000052B8       DC32 2300, 3E9EB852H, 3F000000H, `?<Constant "RX7 FD 91-02">`
   \              9E3E0000003F
   \              ........    
   \   00001CB4   A8020000           DC8 168, 2, 0, 0
   \   00001CB8   00000000781E       DC32 0, 7800, 0, 0, 7000, 7800, 0, 0, 405EE979H, 4000F5C3H, 3FB20C4AH
   \              000000000000
   \              00000000581B
   \              0000781E0000
   \              000000000000
   \              000079E95E40
   \              C3F500404A0C
   \              B23F        
   \   00001CE4   0000803F6210       DC32 3F800000H, 3F381062H, 0H, 0H, 0H, 40833333H, 429C3021H, 225, 50
   \              383F00000000
   \              000000000000
   \              000033338340
   \              21309C42E100
   \              000032000000
   \   00001D08   10000000           DC32 16
   \   00001D0C   01000000           DC8 1, 0, 0, 0
   \   00001D10   F00A000052B8       DC32 2800, 3E9EB852H, 3F000000H, `?<Constant "RX8">`
   \              9E3E0000003F
   \              ........    
   \   00001D20   A8020000           DC8 168, 2, 0, 0
   \   00001D24   000000002823       DC32 0, 9000, 0, 0, 8000, 8700, 0, 0, 4070A3D7H, 4011374CH, 3FD28F5CH
   \              000000000000
   \              00000000401F
   \              0000FC210000
   \              000000000000
   \              0000D7A37040
   \              4C3711405C8F
   \              D23F        
   \   00001D50   9EEF973F0000       DC32 3F97EF9EH, 3F800000H, 3F57CED9H, 0H, 0H, 408CCCCDH, 42A32F9EH, 225
   \              803FD9CE573F
   \              000000000000
   \              0000CDCC8C40
   \              9E2FA342E100
   \              0000        
   \   00001D70   120000002D00       DC32 18, 45
   \              0000        
   \   00001D78   01000000           DC8 1, 0, 0, 0
   \   00001D7C   F40B000052B8       DC32 3060, 3E9EB852H, 3F000000H, `?<Constant "S2000 00-03">`
   \              9E3E0000003F
   \              ........    
   \   00001D8C   A8040000           DC8 168, 4, 0, 0
   \   00001D90   000000002823       DC32 0, 9000, 0, 0, 8500, 8900, 0, 0, 404851ECH, 40033333H, 3FBD70A4H
   \              000000000000
   \              000000003421
   \              0000C4220000
   \              000000000000
   \              0000EC514840
   \              33330340A470
   \              BD3F        
   \   00001DBC   E17A943FEC51       DC32 3F947AE1H, 3F7851ECH, 3F4F5C29H, 0H, 0H, 40833333H, 429C3021H, 225
   \              783F295C4F3F
   \              000000000000
   \              000033338340
   \              21309C42E100
   \              0000        
   \   00001DDC   100000003200       DC32 16, 50
   \              0000        
   \   00001DE4   01000000           DC8 1, 0, 0, 0
   \   00001DE8   F90A000052B8       DC32 2809, 3E9EB852H, 3F000000H, `?<Constant "S2000 04-09">`
   \              9E3E0000003F
   \              ........    
   \   00001DF8   A8040000           DC8 168, 4, 0, 0
   \   00001DFC   00000000401F       DC32 0, 8000, 0, 0, 7500, 7900, 0, 0, 404851ECH, 40033333H, 3FBD70A4H
   \              000000000000
   \              000000004C1D
   \              0000DC1E0000
   \              000000000000
   \              0000EC514840
   \              33330340A470
   \              BD3F        
   \   00001E28   E17A943F7368       DC32 3F947AE1H, 3F716873H, 3F4353F8H, 0H, 0H, 40833333H, 429CE76DH, 225
   \              713FF853433F
   \              000000000000
   \              000033338340
   \              6DE79C42E100
   \              0000        
   \   00001E48   110000002800       DC32 17, 40
   \              0000        
   \   00001E50   01000000           DC8 1, 0, 0, 0
   \   00001E54   F90A000052B8       DC32 2809, 3E9EB852H, 3F000000H, `?<Constant "Spec Miata 90-93">`
   \              9E3E0000003F
   \              ........    
   \   00001E64   A8040000           DC8 168, 4, 0, 0
   \   00001E68   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   00001E94   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 4089999AH, 4290F5C3H, 205, 15
   \              503F00000000
   \              000000000000
   \              00009A998940
   \              C3F59042CD00
   \              00000F000000
   \   00001EB8   32000000           DC32 50
   \   00001EBC   01000000           DC8 1, 0, 0, 0
   \   00001EC0   FC0800005C8F       DC32 2300, 3EC28F5CH, 3F000000H, `?<Constant "Spec Miata 94-97">`
   \              C23E0000003F
   \              ........    
   \   00001ED0   A8040000           DC8 168, 4, 0, 0
   \   00001ED4   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   00001F00   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 40833333H, 4290F5C3H, 205, 15
   \              503F00000000
   \              000000000000
   \              000033338340
   \              C3F59042CD00
   \              00000F000000
   \   00001F24   32000000           DC32 50
   \   00001F28   01000000           DC8 1, 0, 0, 0
   \   00001F2C   2E0900005C8F       DC32 2350, 3EC28F5CH, 3F000000H, `?<Constant "Spec Miata 99-05">`
   \              C23E0000003F
   \              ........    
   \   00001F3C   A8040000           DC8 168, 4, 0, 0
   \   00001F40   00000000841C       DC32 0, 7300, 0, 0, 6500, 7000, 0, 0, 4048B439H, 3FF1A9FCH, 3FAA3D71H
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              000039B44840
   \              FCA9F13F713D
   \              AA3F        
   \   00001F6C   0000803F4E62       DC32 3F800000H, 3F50624EH, 0H, 0H, 0H, 4089999AH, 4290F5C3H, 205, 15
   \              503F00000000
   \              000000000000
   \              00009A998940
   \              C3F59042CD00
   \              00000F000000
   \   00001F90   32000000           DC32 50
   \   00001F94   01000000           DC8 1, 0, 0, 0
   \   00001F98   60090000A470       DC32 2400, 3EBD70A4H, 3F000000H, `?<Constant "Supra 98">`
   \              BD3E0000003F
   \              ........    
   \   00001FA8   A8060000           DC8 168, 6, 0, 0
   \   00001FAC   00000000581B       DC32 0, 7000, 0, 0, 6200, 6500, 0, 0, 40751EB8H, 40170A3DH, 3FD851ECH
   \              000000000000
   \              000000003818
   \              000064190000
   \              000000000000
   \              0000B81E7540
   \              3D0A1740EC51
   \              D83F        
   \   00001FD8   14AEA73FCDCC       DC32 3FA7AE14H, 3F8CCCCDH, 3F4A3D71H, 0H, 0H, 405147AEH, 429D4625H, 255
   \              8C3F713D4A3F
   \              000000000000
   \              0000AE475140
   \              25469D42FF00
   \              0000        
   \   00001FF8   110000002800       DC32 17, 40
   \              0000        
   \   00002000   01000000           DC8 1, 0, 0, 0
   \   00002004   7A0D00000AD7       DC32 3450, 3EA3D70AH, 3F000000H, `?<Constant "Viper 05">`
   \              A33E0000003F
   \              ........    
   \   00002014   A80A0000           DC8 168, 10, 0, 0
   \   00002018   00000000581B       DC32 0, 7000, 0, 0, 5500, 6000, 0, 0, 402A3D71H, 3FE3D70AH, 3FA66666H
   \              000000000000
   \              000000007C15
   \              000070170000
   \              000000000000
   \              0000713D2A40
   \              0AD7E33F6666
   \              A63F        
   \   00002044   CDCC8C3FA470       DC32 3F8CCCCDH, 3F3D70A4H, 3F000000H, 0H, 0H, 40447AE1H, 42AA9687H, 345
   \              3D3F0000003F
   \              000000000000
   \              0000E17A4440
   \              8796AA425901
   \              0000        
   \   00002064   130000001E00       DC32 19, 30
   \              0000        
   \   0000206C   01000000           DC8 1, 0, 0, 0
   \   00002070   340D00003333       DC32 3380, 3EB33333H, 3F000000H, `?<Constant "Viper 12">`
   \              B33E0000003F
   \              ........    
   \   00002080   A80A0000           DC8 168, 10, 0, 0
   \   00002084   00000000581B       DC32 0, 7000, 0, 0, 5500, 6000, 0, 0, 4010A3D7H, 3FCA3D71H, 3F9851ECH
   \              000000000000
   \              000000007C15
   \              000070170000
   \              000000000000
   \              0000D7A31040
   \              713DCA3FEC51
   \              983F        
   \   000020B0   0000803FB81E       DC32 3F800000H, 3F451EB8H, 3F2147AEH, 0H, 0H, 40633333H, 42AA9687H, 345
   \              453FAE47213F
   \              000000000000
   \              000033336340
   \              8796AA425901
   \              0000        
   \   000020D0   130000001E00       DC32 19, 30
   \              0000        
   \   000020D8   01000000           DC8 1, 0, 0, 0
   \   000020DC   E10C0000EC51       DC32 3297, 3EB851ECH, 3F000000H, `?<Constant "WRX STI 04">`
   \              B83E0000003F
   \              ........    
   \   000020EC   A8040000           DC8 168, 4, 0, 0
   \   000020F0   00000000581B       DC32 0, 7000, 0, 0, 6200, 6800, 0, 0, 4068B439H, 40180000H, 3FE16873H
   \              000000000000
   \              000000003818
   \              0000901A0000
   \              000000000000
   \              000039B46840
   \              000018407368
   \              E13F        
   \   0000211C   BA49AC3F7593       DC32 3FAC49BAH, 3F789375H, 3F418937H, 0H, 0H, 4079999AH, 429CE76DH, 225
   \              783F3789413F
   \              000000000000
   \              00009A997940
   \              6DE79C42E100
   \              0000        
   \   0000213C   110000002D00       DC32 17, 45
   \              0000        
   \   00002144   01000000           DC8 1, 0, 0, 0
   \   00002148   BF0C0000C3F5       DC32 3263, 3EA8F5C3H, 3F000000H, `?<Constant "WRX STI 08">`
   \              A83E0000003F
   \              ........    
   \   00002158   A8040000           DC8 168, 4, 0, 0
   \   0000215C   00000000581B       DC32 0, 7000, 0, 0, 6000, 6300, 0, 0, 4068B439H, 400F0A3DH, 3FC2B021H
   \              000000000000
   \              000000007017
   \              00009C180000
   \              000000000000
   \              000039B46840
   \              3D0A0F4021B0
   \              C23F        
   \   00002188   3789913F7593       DC32 3F918937H, 3F789375H, 3F418937H, 0H, 0H, 4079999AH, 42A19581H, 245
   \              783F3789413F
   \              000000000000
   \              00009A997940
   \              8195A142F500
   \              0000        
   \   000021A8   120000002800       DC32 18, 40
   \              0000        
   \   000021B0   01000000           DC8 1, 0, 0, 0
   \   000021B4   430D0000EC51       DC32 3395, 3EB851ECH, 3F000000H, `?<Constant "WRX STI 11">`
   \              B83E0000003F
   \              ........    
   \   000021C4   A8040000           DC8 168, 4, 0, 0
   \   000021C8   00000000581B       DC32 0, 7000, 0, 0, 6000, 6300, 0, 0, 4068B439H, 400F0A3DH, 3FC2B021H
   \              000000000000
   \              000000007017
   \              00009C180000
   \              000000000000
   \              000039B46840
   \              3D0A0F4021B0
   \              C23F        
   \   000021F4   3789913F7593       DC32 3F918937H, 3F789375H, 3F418937H, 0H, 0H, 40628F5CH, 42A19581H, 245
   \              783F3789413F
   \              000000000000
   \              00005C8F6240
   \              8195A142F500
   \              0000        
   \   00002214   120000002800       DC32 18, 40
   \              0000        
   \   0000221C   01000000           DC8 1, 0, 0, 0
   \   00002220   2D0D0000EC51       DC32 3373, 3EB851ECH, 3F000000H, `?<Constant "Z06 C5">`
   \              B83E0000003F
   \              ........    
   \   00002230   A8080000           DC8 168, 8, 0, 0
   \   00002234   00000000581B       DC32 0, 7000, 0, 0, 6000, 6500, 0, 0, 402A3D71H, 3FE3D70AH, 3FA66666H
   \              000000000000
   \              000000007017
   \              000064190000
   \              000000000000
   \              0000713D2A40
   \              0AD7E33F6666
   \              A63F        
   \   00002260   0000803FA470       DC32 3F800000H, 3F3D70A4H, 3F000000H, 0H, 0H, 405AE148H, 42A32B02H, 295
   \              3D3F0000003F
   \              000000000000
   \              000048E15A40
   \              022BA3422701
   \              0000        
   \   00002280   130000002300       DC32 19, 35
   \              0000        
   \   00002288   01000000           DC8 1, 0, 0, 0
   \   0000228C   2B0C00007B14       DC32 3115, 3EAE147BH, 3F000000H, `?<Constant "Z06 C6">`
   \              AE3E0000003F
   \              ........    
   \   0000229C   A8080000           DC8 168, 8, 0, 0
   \   000022A0   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 403E147BH, 40047AE1H, 3FB70A3DH
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              00007B143E40
   \              E17A04403D0A
   \              B73F        
   \   000022CC   0000803F3D0A       DC32 3F800000H, 3F570A3DH, 3F0F5C29H, 0H, 0H, 405AE148H, 42A79DB2H, 325
   \              573F295C0F3F
   \              000000000000
   \              000048E15A40
   \              B29DA7424501
   \              0000        
   \   000022EC   130000001E00       DC32 19, 30
   \              0000        
   \   000022F4   01000000           DC8 1, 0, 0, 0
   \   000022F8   6C0C00007B14       DC32 3180, 3EAE147BH, 3F000000H, `?<Constant "">`
   \              AE3E0000003F
   \              ........    
   \   00002308   A8080000           DC8 168, 8, 0, 0
   \   0000230C   00000000581B       DC32 0, 7000, 0, 0, 6500, 7000, 0, 0, 403E147BH, 40047AE1H, 3FB70A3DH
   \              000000000000
   \              000000006419
   \              0000581B0000
   \              000000000000
   \              00007B143E40
   \              E17A04403D0A
   \              B73F        
   \   00002338   0000803F3D0A       DC32 3F800000H, 3F570A3DH, 3F0F5C29H, 0H, 0H, 405AE148H, 42A79DB2H, 325
   \              573F295C0F3F
   \              000000000000
   \              000048E15A40
   \              B29DA7424501
   \              0000        
   \   00002358   130000001E00       DC32 19, 30
   \              0000        
   \   00002360   01000000           DC8 1, 0, 0, 0
   \   00002364   6C0C00007B14       DC32 3180, 3EAE147BH, 3F000000H
   \              AE3E0000003F
    129          	{	
    130          		"350Z",
    131          		{		// MINI_VEHICLE_STRUCTURE
    132          			MOBIUS_DELAY,			// usbCameraDelay
    133          			6,			// engineCylinders
    134          			0,			// tach scaleStart
    135          			7000,		// tach scaleEnd
    136          			0,			// tach greenStart
    137          			0,			// tach greenEnd
    138          			6000,		// tach Warning
    139          			6500,		// tach Redline
    140          			0,			// tach lowerYellow
    141          			0,			// tach lowerRed
    142          			3.794,		// gear1
    143          			2.324,		// gear2
    144          			1.624,		// gear3
    145          			1.271,		// gear4
    146          			1.000,		// gear5
    147          			0.794,		// gear6
    148          			0.0,		// gear7
    149          			0.0,		// gear8
    150          			3.54,		// diff
    151          			83.821,		// tire circumference
    152          			245,		// tire width
    153          			18,			// wheel size
    154          			45,			// tire aspect
    155          			1,			// user entered tire data
    156          			3225,		// weight
    157          			0.3,		// wind drag
    158          			0.5			// rolling resistance
    159          		}
    160          	},
    161          	{	
    162          		"370Z",
    163          		{		// MINI_VEHICLE_STRUCTURE
    164          			MOBIUS_DELAY,			// usbCameraDelay
    165          			6,			// engineCylinders
    166          			0,			// tach scaleStart
    167          			8000,		// tach scaleEnd
    168          			0,			// tach greenStart
    169          			0,			// tach greenEnd
    170          			7000,		// tach Warning
    171          			7500,		// tach Redline
    172          			0,			// tach lowerYellow
    173          			0,			// tach lowerRed
    174          			3.794,		// gear1
    175          			2.324,		// gear2
    176          			1.624,		// gear3
    177          			1.271,		// gear4
    178          			1.0,		// gear5
    179          			0.794,		// gear6
    180          			0.0,		// gear7
    181          			0.0,		// gear8
    182          			3.692,		// diff
    183          			80.098,		// tire circumference
    184          			275,		// tire width
    185          			19,			// wheel size
    186          			35,			// tire aspect
    187          			1,			// user entered tire data
    188          			3232,		// weight
    189          			0.3,		// wind drag
    190          			0.5			// rolling resistance
    191          		}
    192          	},
    193          	{
    194          		"BMW 135i",
    195          		{
    196          			MOBIUS_DELAY,			// usbCameraDelay
    197          		6,
    198          		0,
    199          		7000,
    200          		0,
    201          		0,
    202          		6500,
    203          		7000,
    204          		0,
    205          		0,
    206          		4.06,
    207          		2.4,
    208          		1.58,
    209          		1.19,
    210          		1,
    211          		0.87,
    212          		0,
    213          		0,
    214          		3.08,
    215          		77.761,
    216          		245,
    217          		35,
    218          		18,
    219          		1,
    220          		3200,
    221          		0.37,
    222          		0.5
    223          		}
    224          	},
    225          	{
    226          		"BMW 1M",
    227          		{
    228          			MOBIUS_DELAY,			// usbCameraDelay
    229          		6,
    230          		0,
    231          		7000,
    232          		0,
    233          		0,
    234          		6200,
    235          		7000,
    236          		0,
    237          		0,
    238          		4.11,
    239          		2.315,
    240          		1.542,
    241          		1.179,
    242          		1.1,
    243          		0.846,
    244          		0,
    245          		0,
    246          		3.154,
    247          		82.633,
    248          		265,
    249          		35,
    250          		19,
    251          		1,
    252          		3300,
    253          		0.37,
    254          		0.5
    255          		}
    256          	},
    257          	{	
    258          		"BMW 2002",
    259          		{		// MINI_VEHICLE_STRUCTURE
    260          			MOBIUS_DELAY,			// usbCameraDelay
    261          			4,			// engineCylinders
    262          			0,			// tach scaleStart
    263          			7000,		// tach scaleEnd
    264          			0,			// tach greenStart
    265          			0,			// tach greenEnd
    266          			6000,		// tach Warning
    267          			6300,		// tach Redline
    268          			0,			// tach lowerYellow
    269          			0,			// tach lowerRed
    270          			3.76,		// gear1
    271          			2.02,		// gear2
    272          			1.32,		// gear3
    273          			1.0,		// gear4
    274          			0.0,		// gear5
    275          			0.0,		// gear6
    276          			0.0,		// gear7
    277          			0.0,		// gear8
    278          			3.90,		// diff
    279          			72.87,		// tire circumference
    280          			185,		// tire width
    281          			13,			// wheel size
    282          			70,			// tire aspect
    283          			1,			// user entered tire data
    284          			2225,		// weight
    285          			0.4,		// wind drag
    286          			0.5			// rolling resistance
    287          		}
    288          	},
    289          	{	
    290          		"BMW E30",
    291          		{		// MINI_VEHICLE_STRUCTURE
    292          			MOBIUS_DELAY,			// usbCameraDelay
    293          			6,			// engineCylinders
    294          			0,			// tach scaleStart
    295          			7000,		// tach scaleEnd
    296          			0,			// tach greenStart
    297          			0,			// tach greenEnd
    298          			5800,		// tach Warning
    299          			6200,		// tach Redline
    300          			0,			// tach lowerYellow
    301          			0,			// tach lowerRed
    302          			3.83,		// gear1
    303          			2.2,		// gear2
    304          			1.4,		// gear3
    305          			1.0,		// gear4
    306          			0.81,		// gear5
    307          			0.0,		// gear6
    308          			0.0,		// gear7
    309          			0.0,		// gear8
    310          			3.91,		// diff
    311          			72.92,		// tire circumference
    312          			195,		// tire width
    313          			14,			// wheel size
    314          			60,			// tire aspect
    315          			1,			// user entered tire data
    316          			2800,		// weight
    317          			0.3,		// wind drag
    318          			0.5			// rolling resistance
    319          		}
    320          	},
    321          	{	
    322          		"BMW E30 M3",
    323          		{		// MINI_VEHICLE_STRUCTURE
    324          			MOBIUS_DELAY,			// usbCameraDelay
    325          			4,			// engineCylinders
    326          			0,			// tach scaleStart
    327          			7000,		// tach scaleEnd
    328          			0,			// tach greenStart
    329          			0,			// tach greenEnd
    330          			6500,		// tach Warning
    331          			7000,		// tach Redline
    332          			0,			// tach lowerYellow
    333          			0,			// tach lowerRed
    334          			3.83,		// gear1
    335          			2.2,		// gear2
    336          			1.4,		// gear3
    337          			1.0,		// gear4
    338          			0.81,		// gear5
    339          			0.0,		// gear6
    340          			0.0,		// gear7
    341          			0.0,		// gear8
    342          			4.10,		// diff
    343          			72.48,		// tire circumference
    344          			205,		// tire width
    345          			15,			// wheel size
    346          			55,			// tire aspect
    347          			1,			// user entered tire data
    348          			2800,		// weight
    349          			0.3,		// wind drag
    350          			0.5			// rolling resistance
    351          		}
    352          	},
    353          	{	
    354          		"BMW E36 325",
    355          		{		// MINI_VEHICLE_STRUCTURE
    356          			MOBIUS_DELAY,			// usbCameraDelay
    357          			6,			// engineCylinders
    358          			0,			// tach scaleStart
    359          			7000,		// tach scaleEnd
    360          			0,			// tach greenStart
    361          			0,			// tach greenEnd
    362          			6200,		// tach Warning
    363          			6500,		// tach Redline
    364          			0,			// tach lowerYellow
    365          			0,			// tach lowerRed
    366          			4.23,		// gear1
    367          			2.52,		// gear2
    368          			1.66,		// gear3
    369          			1.22,		// gear4
    370          			1.0,		// gear5
    371          			0.0,		// gear6
    372          			0.0,		// gear7
    373          			0.0,		// gear8
    374          			3.15,		// diff
    375          			78.156,		// tire circumference
    376          			205,		// tire width
    377          			16,			// wheel size
    378          			55,			// tire aspect
    379          			1,			// user entered tire data
    380          			3200,		// weight
    381          			0.33,		// wind drag
    382          			0.5			// rolling resistance
    383          		}
    384          	},
    385          	{	
    386          		"BMW E36 M3",
    387          		{		// MINI_VEHICLE_STRUCTURE
    388          			MOBIUS_DELAY,			// usbCameraDelay
    389          			6,			// engineCylinders
    390          			0,			// tach scaleStart
    391          			7000,		// tach scaleEnd
    392          			0,			// tach greenStart
    393          			0,			// tach greenEnd
    394          			6000,		// tach Warning
    395          			6500,		// tach Redline
    396          			0,			// tach lowerYellow
    397          			0,			// tach lowerRed
    398          			4.2,		// gear1
    399          			2.49,		// gear2
    400          			1.66,		// gear3
    401          			1.24,		// gear4
    402          			1.0,		// gear5
    403          			0.0,		// gear6
    404          			0.0,		// gear7
    405          			0.0,		// gear8
    406          			3.23,		// diff
    407          			77.651,		// tire circumference
    408          			245,		// tire width
    409          			17,			// wheel size
    410          			40,			// tire aspect
    411          			1,			// user entered tire data
    412          			3200,		// weight
    413          			0.33,		// wind drag
    414          			0.5			// rolling resistance
    415          		}
    416          	},
    417          	{
    418          		"BMW E39 M5",
    419          		{
    420          			MOBIUS_DELAY,			// usbCameraDelay
    421          		8,
    422          		0,
    423          		7000,
    424          		0,
    425          		0,
    426          		6500,
    427          		7000,
    428          		0,
    429          		0,
    430          		4.227,
    431          		2.528,
    432          		1.669,
    433          		1.226,
    434          		1,
    435          		0.827,
    436          		0,
    437          		0,
    438          		3.15,
    439          		76.956,
    440          		275,
    441          		30,
    442          		18,
    443          		1,
    444          		3859,
    445          		0.29,
    446          		0.5
    447          		}
    448          	},
    449          	{	
    450          		"BMW E46 325",
    451          		{		// MINI_VEHICLE_STRUCTURE
    452          			MOBIUS_DELAY,			// usbCameraDelay
    453          			6,			// engineCylinders
    454          			0,			// tach scaleStart
    455          			7000,		// tach scaleEnd
    456          			0,			// tach greenStart
    457          			0,			// tach greenEnd
    458          			6200,		// tach Warning
    459          			6500,		// tach Redline
    460          			0,			// tach lowerYellow
    461          			0,			// tach lowerRed
    462          			4.23,		// gear1
    463          			2.52,		// gear2
    464          			1.66,		// gear3
    465          			1.22,		// gear4
    466          			1.0,		// gear5
    467          			0.0,		// gear6
    468          			0.0,		// gear7
    469          			0.0,		// gear8
    470          			3.15,		// diff
    471          			78.452,		// tire circumference
    472          			225,		// tire width
    473          			17,			// wheel size
    474          			45,			// tire aspect
    475          			1,			// user entered tire data
    476          			3200,		// weight
    477          			0.33,		// wind drag
    478          			0.5			// rolling resistance
    479          		}
    480          	},
    481          	{	
    482          		"BMW E46 M3",
    483          		{		// MINI_VEHICLE_STRUCTURE
    484          			MOBIUS_DELAY,			// usbCameraDelay
    485          			6,			// engineCylinders
    486          			0,			// tach scaleStart
    487          			8000,		// tach scaleEnd
    488          			0,			// tach greenStart
    489          			0,			// tach greenEnd
    490          			7500,		// tach Warning
    491          			7900,		// tach Redline
    492          			0,			// tach lowerYellow
    493          			0,			// tach lowerRed
    494          			4.23,		// gear1
    495          			2.53,		// gear2
    496          			1.67,		// gear3
    497          			1.23,		// gear4
    498          			1.1,		// gear5
    499          			0.83,		// gear6
    500          			0.0,		// gear7
    501          			0.0,		// gear8
    502          			3.64,		// diff
    503          			81.769,		// tire circumference
    504          			255,		// tire width
    505          			19,			// wheel size
    506          			35,			// tire aspect
    507          			1,			// user entered tire data
    508          			3415,		// weight
    509          			0.32,		// wind drag
    510          			0.5			// rolling resistance
    511          		}
    512          	},
    513          	{
    514          		"BMW E60 M5",
    515          		{
    516          			MOBIUS_DELAY,			// usbCameraDelay
    517          		10,
    518          		0,
    519          		8000,
    520          		0,
    521          		0,
    522          		7700,
    523          		8000,
    524          		0,
    525          		0,
    526          		3.99,
    527          		2.65,
    528          		1.81,
    529          		1.39,
    530          		1.16,
    531          		1,
    532          		0,
    533          		0,
    534          		3.62,
    535          		84.92,
    536          		255,
    537          		40,
    538          		19,
    539          		1,
    540          		4012,
    541          		0.3,
    542          		0.5
    543          		}
    544          	},
    545          	{
    546          		"BMW E90 325",
    547          		{
    548          			MOBIUS_DELAY,			// usbCameraDelay
    549          		6,
    550          		0,
    551          		7000,
    552          		0,
    553          		0,
    554          		6500,
    555          		7000,
    556          		0,
    557          		0,
    558          		4.32,
    559          		2.46,
    560          		1.66,
    561          		1.23,
    562          		1,
    563          		0.85,
    564          		0,
    565          		0,
    566          		3.23,
    567          		78.637,
    568          		255,
    569          		40,
    570          		17,
    571          		1,
    572          		3400,
    573          		0.31,
    574          		0.5
    575          		}
    576          	},
    577          	{	
    578          		"BMW E92 M3",
    579          		{		// MINI_VEHICLE_STRUCTURE
    580          			MOBIUS_DELAY,			// usbCameraDelay
    581          			8,			// engineCylinders
    582          			0,			// tach scaleStart
    583          			9000,		// tach scaleEnd
    584          			0,			// tach greenStart
    585          			0,			// tach greenEnd
    586          			7500,		// tach Warning
    587          			8200,		// tach Redline
    588          			0,			// tach lowerYellow
    589          			0,			// tach lowerRed
    590          			4.06,		// gear1
    591          			2.4,		// gear2
    592          			1.58,		// gear3
    593          			1.19,		// gear4
    594          			1.0,		// gear5
    595          			0.87,		// gear6
    596          			0.0,		// gear7
    597          			0.0,		// gear8
    598          			3.85,		// diff
    599          			82.633,		// tire circumference
    600          			265,		// tire width
    601          			19,			// wheel size
    602          			35,			// tire aspect
    603          			1,			// user entered tire data
    604          			3649,		// weight
    605          			0.3,		// wind drag
    606          			0.5			// rolling resistance
    607          		}
    608          	},
    609          	{
    610          		"BMW F10 M5",
    611          		{
    612          			MOBIUS_DELAY,			// usbCameraDelay
    613          		8,
    614          		0,
    615          		6800,
    616          		0,
    617          		0,
    618          		6000,
    619          		6800,
    620          		0,
    621          		0,
    622          		4.80,
    623          		2.59,
    624          		1.7,
    625          		1.28,
    626          		1,
    627          		0.87,
    628          		0,
    629          		0,
    630          		3.15,
    631          		84.726,
    632          		295,
    633          		30,
    634          		20,
    635          		1,
    636          		4387,
    637          		0.33,
    638          		0.5
    639          		}
    640          	},
    641          	{
    642          		"BMW Z4 3L",
    643          		{
    644          			MOBIUS_DELAY,			// usbCameraDelay
    645          		6,
    646          		0,
    647          		6500,
    648          		0,
    649          		0,
    650          		6200,
    651          		6500,
    652          		0,
    653          		0,
    654          		4.35,
    655          		2.5,
    656          		1.66,
    657          		1.23,
    658          		1,
    659          		0.85,
    660          		0,
    661          		0,
    662          		3.07,
    663          		78.637,
    664          		255,
    665          		40,
    666          		17,
    667          		1,
    668          		3100,
    669          		0.32,
    670          		0.5
    671          		}
    672          	},
    673          	{
    674          		"BMW Z4 M",
    675          		{
    676          			MOBIUS_DELAY,			// usbCameraDelay
    677          		6,
    678          		0,
    679          		8000,
    680          		0,
    681          		0,
    682          		7500,
    683          		8000,
    684          		0,
    685          		0,
    686          		4.35,
    687          		2.53,
    688          		1.66,
    689          		1.23,
    690          		1,
    691          		0.85,
    692          		0,
    693          		0,
    694          		3.62,
    695          		81.779,
    696          		255,
    697          		40,
    698          		18,
    699          		1,
    700          		3150,
    701          		0.32,
    702          		0.5
    703          		}
    704          	},
    705          	{	
    706          		"Boxster 01",
    707          		{		// MINI_VEHICLE_STRUCTURE
    708          			MOBIUS_DELAY,			// usbCameraDelay
    709          			6,			// engineCylinders
    710          			0,			// tach scaleStart
    711          			7000,		// tach scaleEnd
    712          			0,			// tach greenStart
    713          			0,			// tach greenEnd
    714          			6000,		// tach Warning
    715          			6500,		// tach Redline
    716          			0,			// tach lowerYellow
    717          			0,			// tach lowerRed
    718          			3.5,		// gear1
    719          			2.12,		// gear2
    720          			1.43,		// gear3
    721          			1.09,		// gear4
    722          			0.84,		// gear5
    723          			0.0,		// gear6
    724          			0.0,		// gear7
    725          			0.0,		// gear8
    726          			3.56,		// diff
    727          			78.094,		// tire circumference
    728          			225,		// tire width
    729          			16,			// wheel size
    730          			50,			// tire aspect
    731          			1,			// user entered tire data
    732          			2778,		// weight
    733          			0.29,		// wind drag
    734          			0.5			// rolling resistance
    735          		}
    736          	},
    737          	{	
    738          		"Boxster 03",
    739          		{		// MINI_VEHICLE_STRUCTURE
    740          			MOBIUS_DELAY,			// usbCameraDelay
    741          			6,			// engineCylinders
    742          			0,			// tach scaleStart
    743          			7000,		// tach scaleEnd
    744          			0,			// tach greenStart
    745          			0,			// tach greenEnd
    746          			6000,		// tach Warning
    747          			6500,		// tach Redline
    748          			0,			// tach lowerYellow
    749          			0,			// tach lowerRed
    750          			3.5,		// gear1
    751          			2.12,		// gear2
    752          			1.43,		// gear3
    753          			1.09,		// gear4
    754          			0.84,		// gear5
    755          			0.0,		// gear6
    756          			0.0,		// gear7
    757          			0.0,		// gear8
    758          			3.56,		// diff
    759          			78.637,		// tire circumference
    760          			255,		// tire width
    761          			17,			// wheel size
    762          			40,			// tire aspect
    763          			1,			// user entered tire data
    764          			2811,		// weight
    765          			0.29,		// wind drag
    766          			0.5			// rolling resistance
    767          		}
    768          	},
    769          	{	
    770          		"Boxster 04",
    771          		{		// MINI_VEHICLE_STRUCTURE
    772          			MOBIUS_DELAY,			// usbCameraDelay
    773          			6,			// engineCylinders
    774          			0,			// tach scaleStart
    775          			7000,		// tach scaleEnd
    776          			0,			// tach greenStart
    777          			0,			// tach greenEnd
    778          			6000,		// tach Warning
    779          			6500,		// tach Redline
    780          			0,			// tach lowerYellow
    781          			0,			// tach lowerRed
    782          			3.67,		// gear1
    783          			2.05,		// gear2
    784          			1.41,		// gear3
    785          			1.13,		// gear4
    786          			0.97,		// gear5
    787          			0.82,		// gear6
    788          			0.0,		// gear7
    789          			0.0,		// gear8
    790          			3.87,		// diff
    791          			78.637,		// tire circumference
    792          			255,		// tire width
    793          			17,			// wheel size
    794          			40,			// tire aspect
    795          			1,			// user entered tire data
    796          			2855,		// weight
    797          			0.29,		// wind drag
    798          			0.5			// rolling resistance
    799          		}
    800          	},
    801          	{	
    802          		"BoxsterS 00",
    803          		{		// MINI_VEHICLE_STRUCTURE
    804          			MOBIUS_DELAY,			// usbCameraDelay
    805          			6,			// engineCylinders
    806          			0,			// tach scaleStart
    807          			7000,		// tach scaleEnd
    808          			0,			// tach greenStart
    809          			0,			// tach greenEnd
    810          			6000,		// tach Warning
    811          			6500,		// tach Redline
    812          			0,			// tach lowerYellow
    813          			0,			// tach lowerRed
    814          			3.82,		// gear1
    815          			2.2,		// gear2
    816          			1.52,		// gear3
    817          			1.22,		// gear4
    818          			1.02,		// gear5
    819          			0.84,		// gear6
    820          			0.0,		// gear7
    821          			0.0,		// gear8
    822          			3.44,		// diff
    823          			79.492,		// tire circumference
    824          			265,		// tire width
    825          			18,			// wheel size
    826          			35,			// tire aspect
    827          			1,			// user entered tire data
    828          			2855,		// weight
    829          			0.29,		// wind drag
    830          			0.5			// rolling resistance
    831          		}
    832          	},
    833          	{	
    834          		"BoxsterS 03",
    835          		{		// MINI_VEHICLE_STRUCTURE
    836          			MOBIUS_DELAY,			// usbCameraDelay
    837          			6,			// engineCylinders
    838          			0,			// tach scaleStart
    839          			7000,		// tach scaleEnd
    840          			0,			// tach greenStart
    841          			0,			// tach greenEnd
    842          			6000,		// tach Warning
    843          			6500,		// tach Redline
    844          			0,			// tach lowerYellow
    845          			0,			// tach lowerRed
    846          			3.82,		// gear1
    847          			2.2,		// gear2
    848          			1.52,		// gear3
    849          			1.22,		// gear4
    850          			1.02,		// gear5
    851          			0.84,		// gear6
    852          			0.0,		// gear7
    853          			0.0,		// gear8
    854          			3.44,		// diff
    855          			79.492,		// tire circumference
    856          			265,		// tire width
    857          			18,			// wheel size
    858          			35,			// tire aspect
    859          			1,			// user entered tire data
    860          			2910,		// weight
    861          			0.29,		// wind drag
    862          			0.5			// rolling resistance
    863          		}
    864          	},
    865          	{	
    866          		"BoxsterS 04",
    867          		{		// MINI_VEHICLE_STRUCTURE
    868          			MOBIUS_DELAY,			// usbCameraDelay
    869          			6,			// engineCylinders
    870          			0,			// tach scaleStart
    871          			7500,		// tach scaleEnd
    872          			0,			// tach greenStart
    873          			0,			// tach greenEnd
    874          			6800,		// tach Warning
    875          			7200,		// tach Redline
    876          			0,			// tach lowerYellow
    877          			0,			// tach lowerRed
    878          			3.67,		// gear1
    879          			2.05,		// gear2
    880          			1.41,		// gear3
    881          			1.13,		// gear4
    882          			0.97,		// gear5
    883          			0.82,		// gear6
    884          			0.0,		// gear7
    885          			0.0,		// gear8
    886          			3.87,		// diff
    887          			79.492,		// tire circumference
    888          			265,		// tire width
    889          			18,			// wheel size
    890          			35,			// tire aspect
    891          			1,			// user entered tire data
    892          			2965,		// weight
    893          			0.29,		// wind drag
    894          			0.5			// rolling resistance
    895          		}
    896          	},
    897          	{	
    898          		"BoxsterS DSG 14",
    899          		{		// MINI_VEHICLE_STRUCTURE
    900          			MOBIUS_DELAY,			// usbCameraDelay
    901          			6,			// engineCylinders
    902          			0,			// tach scaleStart
    903          			8000,		// tach scaleEnd
    904          			0,			// tach greenStart
    905          			0,			// tach greenEnd
    906          			7000,		// tach Warning
    907          			7500,		// tach Redline
    908          			0,			// tach lowerYellow
    909          			0,			// tach lowerRed
    910          			3.91,		// gear1
    911          			2.29,		// gear2
    912          			1.65,		// gear3
    913          			1.3,		// gear4
    914          			1.08,		// gear5
    915          			0.88,		// gear6
    916          			0.0,		// gear7
    917          			0.0,		// gear8
    918          			3.25,		// diff
    919          			85.775,		// tire circumference
    920          			265,		// tire width
    921          			20,			// wheel size
    922          			35,			// tire aspect
    923          			1,			// user entered tire data
    924          			3000,		// weight
    925          			0.29,		// wind drag
    926          			0.5			// rolling resistance
    927          		}
    928          	},
    929          	{	
    930          		"BR-Z",
    931          		{		// MINI_VEHICLE_STRUCTURE
    932          			MOBIUS_DELAY,			// usbCameraDelay
    933          			4,			// engineCylinders
    934          			0,			// tach scaleStart
    935          			8000,		// tach scaleEnd
    936          			0,			// tach greenStart
    937          			0,			// tach greenEnd
    938          			7000,		// tach Warning
    939          			7400,		// tach Redline
    940          			0,			// tach lowerYellow
    941          			0,			// tach lowerRed
    942          			3.626,		// gear1
    943          			2.188,		// gear2
    944          			1.541,		// gear3
    945          			1.213,		// gear4
    946          			1.0,		// gear5
    947          			0.767,		// gear6
    948          			0.0,		// gear7
    949          			0.0,		// gear8
    950          			4.1,		// diff
    951          			77.34,		// tire circumference
    952          			215,		// tire width
    953          			17,			// wheel size
    954          			45,			// tire aspect
    955          			1,			// user entered tire data
    956          			2745,		// weight
    957          			0.27,		// wind drag
    958          			0.5			// rolling resistance
    959          		}
    960          	},
    961          	{	
    962          		"CaymanS 04",
    963          		{		// MINI_VEHICLE_STRUCTURE
    964          			MOBIUS_DELAY,			// usbCameraDelay
    965          			6,			// engineCylinders
    966          			0,			// tach scaleStart
    967          			8000,		// tach scaleEnd
    968          			0,			// tach greenStart
    969          			0,			// tach greenEnd
    970          			6800,		// tach Warning
    971          			7200,		// tach Redline
    972          			0,			// tach lowerYellow
    973          			0,			// tach lowerRed
    974          			3.67,		// gear1
    975          			2.05,		// gear2
    976          			1.41,		// gear3
    977          			1.13,		// gear4
    978          			0.97,		// gear5
    979          			0.82,		// gear6
    980          			0.0,		// gear7
    981          			0.0,		// gear8
    982          			3.87,		// diff
    983          			79.492,		// tire circumference
    984          			265,		// tire width
    985          			18,			// wheel size
    986          			35,			// tire aspect
    987          			1,			// user entered tire data
    988          			2995,		// weight
    989          			0.29,		// wind drag
    990          			0.5			// rolling resistance
    991          		}
    992          	},
    993          	{	
    994          		"CaymanS DSG 14",
    995          		{		// MINI_VEHICLE_STRUCTURE
    996          			MOBIUS_DELAY,			// usbCameraDelay
    997          			6,			// engineCylinders
    998          			0,			// tach scaleStart
    999          			8000,		// tach scaleEnd
   1000          			0,			// tach greenStart
   1001          			0,			// tach greenEnd
   1002          			7000,		// tach Warning
   1003          			7500,		// tach Redline
   1004          			0,			// tach lowerYellow
   1005          			0,			// tach lowerRed
   1006          			3.91,		// gear1
   1007          			2.29,		// gear2
   1008          			1.65,		// gear3
   1009          			1.3,		// gear4
   1010          			1.08,		// gear5
   1011          			0.88,		// gear6
   1012          			0.0,		// gear7
   1013          			0.0,		// gear8
   1014          			3.25,		// diff
   1015          			85.775,		// tire circumference
   1016          			265,		// tire width
   1017          			20,			// wheel size
   1018          			35,			// tire aspect
   1019          			1,			// user entered tire data
   1020          			3000,		// weight
   1021          			0.29,		// wind drag
   1022          			0.5			// rolling resistance
   1023          		}
   1024          	},
   1025          	{	
   1026          		"Civic 92-95",
   1027          		{		// MINI_VEHICLE_STRUCTURE
   1028          			MOBIUS_DELAY,			// usbCameraDelay
   1029          			4,			// engineCylinders
   1030          			0,			// tach scaleStart
   1031          			7000,		// tach scaleEnd
   1032          			0,			// tach greenStart
   1033          			0,			// tach greenEnd
   1034          			6000,		// tach Warning
   1035          			6500,		// tach Redline
   1036          			0,			// tach lowerYellow
   1037          			0,			// tach lowerRed
   1038          			3.25,		// gear1
   1039          			1.761,		// gear2
   1040          			1.172,		// gear3
   1041          			0.909,		// gear4
   1042          			0.702,		// gear5
   1043          			0.0,		// gear6
   1044          			0.0,		// gear7
   1045          			0.0,		// gear8
   1046          			4.058,		// diff
   1047          			71.44,		// tire circumference
   1048          			185,		// tire width
   1049          			14,			// wheel size
   1050          			60,			// tire aspect
   1051          			1,			// user entered tire data
   1052          			2200,		// weight
   1053          			0.31,		// wind drag
   1054          			0.5			// rolling resistance
   1055          		}
   1056          	},
   1057          	{	
   1058          		"Elise",
   1059          		{		// MINI_VEHICLE_STRUCTURE
   1060          			MOBIUS_DELAY,			// usbCameraDelay
   1061          			4,			// engineCylinders
   1062          			0,			// tach scaleStart
   1063          			8000,		// tach scaleEnd
   1064          			0,			// tach greenStart
   1065          			0,			// tach greenEnd
   1066          			7500,		// tach Warning
   1067          			8000,		// tach Redline
   1068          			0,			// tach lowerYellow
   1069          			0,			// tach lowerRed
   1070          			3.17,		// gear1
   1071          			2.05,		// gear2
   1072          			1.48,		// gear3
   1073          			1.17,		// gear4
   1074          			0.92,		// gear5
   1075          			0.81,		// gear6
   1076          			0.0,		// gear7
   1077          			0.0,		// gear8
   1078          			4.53,		// diff
   1079          			78.453,		// tire circumference
   1080          			225,		// tire width
   1081          			17,			// wheel size
   1082          			45,			// tire aspect
   1083          			1,			// user entered tire data
   1084          			1975,		// weight
   1085          			0.4,		// wind drag
   1086          			0.5			// rolling resistance
   1087          		}
   1088          	},
   1089          	{	
   1090          		"EVO 04",
   1091          		{		// MINI_VEHICLE_STRUCTURE
   1092          			MOBIUS_DELAY,			// usbCameraDelay
   1093          			4,			// engineCylinders
   1094          			0,			// tach scaleStart
   1095          			7000,		// tach scaleEnd
   1096          			0,			// tach greenStart
   1097          			0,			// tach greenEnd
   1098          			6000,		// tach Warning
   1099          			6500,		// tach Redline
   1100          			0,			// tach lowerYellow
   1101          			0,			// tach lowerRed
   1102          			2.928,		// gear1
   1103          			1.95,		// gear2
   1104          			1.407,		// gear3
   1105          			1.031,		// gear4
   1106          			0.72,		// gear5
   1107          			0.0,		// gear6
   1108          			0.0,		// gear7
   1109          			0.0,		// gear8
   1110          			3.416,		// diff
   1111          			79.567,		// tire circumference
   1112          			235,		// tire width
   1113          			17,			// wheel size
   1114          			45,			// tire aspect
   1115          			1,			// user entered tire data
   1116          			3100,		// weight
   1117          			0.35,		// wind drag
   1118          			0.5			// rolling resistance
   1119          		}
   1120          	},
   1121          	{	
   1122          		"EVO MR 05",
   1123          		{		// MINI_VEHICLE_STRUCTURE
   1124          			MOBIUS_DELAY,			// usbCameraDelay
   1125          			4,			// engineCylinders
   1126          			0,			// tach scaleStart
   1127          			7000,		// tach scaleEnd
   1128          			0,			// tach greenStart
   1129          			0,			// tach greenEnd
   1130          			6000,		// tach Warning
   1131          			6500,		// tach Redline
   1132          			0,			// tach lowerYellow
   1133          			0,			// tach lowerRed
   1134          			2.909,		// gear1
   1135          			1.944,		// gear2
   1136          			1.434,		// gear3
   1137          			1.1,		// gear4
   1138          			0.868,		// gear5
   1139          			0.693,		// gear6
   1140          			0.0,		// gear7
   1141          			0.0,		// gear8
   1142          			4.58,		// diff
   1143          			79.567,		// tire circumference
   1144          			235,		// tire width
   1145          			17,			// wheel size
   1146          			45,			// tire aspect
   1147          			1,			// user entered tire data
   1148          			3285,		// weight
   1149          			0.35,		// wind drag
   1150          			0.5			// rolling resistance
   1151          		}
   1152          	},
   1153          	{	
   1154          		"EVO TWIN 08",
   1155          		{		// MINI_VEHICLE_STRUCTURE
   1156          			MOBIUS_DELAY,			// usbCameraDelay
   1157          			4,			// engineCylinders
   1158          			0,			// tach scaleStart
   1159          			7000,		// tach scaleEnd
   1160          			0,			// tach greenStart
   1161          			0,			// tach greenEnd
   1162          			6000,		// tach Warning
   1163          			6500,		// tach Redline
   1164          			0,			// tach lowerYellow
   1165          			0,			// tach lowerRed
   1166          			3.655,		// gear1
   1167          			2.368,		// gear2
   1168          			1.754,		// gear3
   1169          			1.322,		// gear4
   1170          			1.008,		// gear5
   1171          			0.775,		// gear6
   1172          			0.0,		// gear7
   1173          			0.0,		// gear8
   1174          			4.011,		// diff
   1175          			80.792,		// tire circumference
   1176          			245,		// tire width
   1177          			18,			// wheel size
   1178          			40,			// tire aspect
   1179          			1,			// user entered tire data
   1180          			3500,		// weight
   1181          			0.35,		// wind drag
   1182          			0.5			// rolling resistance
   1183          		}
   1184          	},
   1185          	{	
   1186          		"Evora",
   1187          		{		// MINI_VEHICLE_STRUCTURE
   1188          			MOBIUS_DELAY,			// usbCameraDelay
   1189          			6,			// engineCylinders
   1190          			0,			// tach scaleStart
   1191          			7000,		// tach scaleEnd
   1192          			0,			// tach greenStart
   1193          			0,			// tach greenEnd
   1194          			6200,		// tach Warning
   1195          			6800,		// tach Redline
   1196          			0,			// tach lowerYellow
   1197          			0,			// tach lowerRed
   1198          			3.538,		// gear1
   1199          			1.913,		// gear2
   1200          			1.407,		// gear3
   1201          			1.091,		// gear4
   1202          			0.96,		// gear5
   1203          			0.86,		// gear6
   1204          			0.0,		// gear7
   1205          			0.0,		// gear8
   1206          			3.77,		// diff
   1207          			81.769,		// tire circumference
   1208          			255,		// tire width
   1209          			19,			// wheel size
   1210          			35,			// tire aspect
   1211          			1,			// user entered tire data
   1212          			3000,		// weight
   1213          			0.33,		// wind drag
   1214          			0.5			// rolling resistance
   1215          		}
   1216          	},
   1217          	{	
   1218          		"Exige",
   1219          		{		// MINI_VEHICLE_STRUCTURE
   1220          			MOBIUS_DELAY,			// usbCameraDelay
   1221          			4,			// engineCylinders
   1222          			0,			// tach scaleStart
   1223          			8000,		// tach scaleEnd
   1224          			0,			// tach greenStart
   1225          			0,			// tach greenEnd
   1226          			7500,		// tach Warning
   1227          			8000,		// tach Redline
   1228          			0,			// tach lowerYellow
   1229          			0,			// tach lowerRed
   1230          			3.17,		// gear1
   1231          			2.05,		// gear2
   1232          			1.48,		// gear3
   1233          			1.17,		// gear4
   1234          			0.92,		// gear5
   1235          			0.81,		// gear6
   1236          			0.0,		// gear7
   1237          			0.0,		// gear8
   1238          			4.53,		// diff
   1239          			78.453,		// tire circumference
   1240          			255,		// tire width
   1241          			17,			// wheel size
   1242          			45,			// tire aspect
   1243          			1,			// user entered tire data
   1244          			2057,		// weight
   1245          			0.45,		// wind drag
   1246          			0.5			// rolling resistance
   1247          		}
   1248          	},
   1249          	{	
   1250          		"Ferrari 360",
   1251          		{		// MINI_VEHICLE_STRUCTURE
   1252          			MOBIUS_DELAY,			// usbCameraDelay
   1253          			8,			// engineCylinders
   1254          			0,			// tach scaleStart
   1255          			8000,		// tach scaleEnd
   1256          			0,			// tach greenStart
   1257          			0,			// tach greenEnd
   1258          			7500,		// tach Warning
   1259          			7900,		// tach Redline
   1260          			0,			// tach lowerYellow
   1261          			0,			// tach lowerRed
   1262          			3.29,		// gear1
   1263          			2.16,		// gear2
   1264          			1.61,		// gear3
   1265          			1.27,		// gear4
   1266          			1.03,		// gear5
   1267          			0.85,			// gear6
   1268          			0.0,		// gear7
   1269          			0.0,		// gear8
   1270          			4.44,		// diff
   1271          			80.839,		// tire circumference
   1272          			285,		// tire width
   1273          			19,			// wheel size
   1274          			35,			// tire aspect
   1275          			1,			// user entered tire data
   1276          			3064,		// weight
   1277          			0.34,		// wind drag
   1278          			0.5			// rolling resistance
   1279          		}
   1280          	},
   1281          	{	
   1282          		"Ferrari 430",
   1283          		{		// MINI_VEHICLE_STRUCTURE
   1284          			MOBIUS_DELAY,			// usbCameraDelay
   1285          			8,			// engineCylinders
   1286          			0,			// tach scaleStart
   1287          			8400,		// tach scaleEnd
   1288          			0,			// tach greenStart
   1289          			0,			// tach greenEnd
   1290          			7800,		// tach Warning
   1291          			8200,		// tach Redline
   1292          			0,			// tach lowerYellow
   1293          			0,			// tach lowerRed
   1294          			3.29,		// gear1
   1295          			2.16,		// gear2
   1296          			1.61,		// gear3
   1297          			1.27,		// gear4
   1298          			1.03,		// gear5
   1299          			0.82,		// gear6
   1300          			0.0,		// gear7
   1301          			0.0,		// gear8
   1302          			4.3,		// diff
   1303          			80.839,		// tire circumference
   1304          			285,		// tire width
   1305          			19,			// wheel size
   1306          			35,			// tire aspect
   1307          			1,			// user entered tire data
   1308          			3197,		// weight
   1309          			0.34,		// wind drag
   1310          			0.5			// rolling resistance
   1311          		}
   1312          	},
   1313          	{
   1314          		"Ferrari 458",
   1315          		{
   1316          			MOBIUS_DELAY,			// usbCameraDelay
   1317          		8,
   1318          		0,
   1319          		9000,
   1320          		0,
   1321          		0,
   1322          		8500,
   1323          		9000,
   1324          		0,
   1325          		0,
   1326          		3.08,
   1327          		2.19,
   1328          		1.63,
   1329          		1.29,
   1330          		1.03,
   1331          		0.84,
   1332          		0,
   1333          		0,
   1334          		5.14,
   1335          		88.373,
   1336          		295,
   1337          		35,
   1338          		20,
   1339          		1,
   1340          		3200,
   1341          		0.33,
   1342          		0.5
   1343          		}
   1344          	},
   1345          	{	
   1346          		"Fiat 500 Abarth",
   1347          		{		// MINI_VEHICLE_STRUCTURE
   1348          			MOBIUS_DELAY,			// usbCameraDelay
   1349          			4,			// engineCylinders
   1350          			0,			// tach scaleStart
   1351          			7000,		// tach scaleEnd
   1352          			0,			// tach greenStart
   1353          			0,			// tach greenEnd
   1354          			6000,		// tach Warning
   1355          			6500,		// tach Redline
   1356          			0,			// tach lowerYellow
   1357          			0,			// tach lowerRed
   1358          			3.909,		// gear1
   1359          			2.238,		// gear2
   1360          			1.52,		// gear3
   1361          			1.156,		// gear4
   1362          			0.847,		// gear5
   1363          			0.0,		// gear6
   1364          			0.0,		// gear7
   1365          			0.0,		// gear8
   1366          			3.353,		// diff
   1367          			76.23,		// tire circumference
   1368          			205,		// tire width
   1369          			17,			// wheel size
   1370          			40,			// tire aspect
   1371          			1,			// user entered tire data
   1372          			2500,		// weight
   1373          			0.325,		// wind drag
   1374          			0.5			// rolling resistance
   1375          		}
   1376          	},
   1377          	{	
   1378          		"FR-S",
   1379          		{		// MINI_VEHICLE_STRUCTURE
   1380          			MOBIUS_DELAY,			// usbCameraDelay
   1381          			4,			// engineCylinders
   1382          			0,			// tach scaleStart
   1383          			8000,		// tach scaleEnd
   1384          			0,			// tach greenStart
   1385          			0,			// tach greenEnd
   1386          			7000,		// tach Warning
   1387          			7400,		// tach Redline
   1388          			0,			// tach lowerYellow
   1389          			0,			// tach lowerRed
   1390          			3.626,		// gear1
   1391          			2.188,		// gear2
   1392          			1.541,		// gear3
   1393          			1.213,		// gear4
   1394          			1.0,		// gear5
   1395          			0.767,		// gear6
   1396          			0.0,		// gear7
   1397          			0.0,		// gear8
   1398          			4.1,		// diff
   1399          			77.34,		// tire circumference
   1400          			215,		// tire width
   1401          			17,			// wheel size
   1402          			45,			// tire aspect
   1403          			1,			// user entered tire data
   1404          			2745,		// weight
   1405          			0.27,		// wind drag
   1406          			0.5			// rolling resistance
   1407          		}
   1408          	},
   1409          	{	
   1410          		"Genesis Turbo",
   1411          		{		// MINI_VEHICLE_STRUCTURE
   1412          			MOBIUS_DELAY,			// usbCameraDelay
   1413          			4,			// engineCylinders
   1414          			0,			// tach scaleStart
   1415          			7000,		// tach scaleEnd
   1416          			0,			// tach greenStart
   1417          			0,			// tach greenEnd
   1418          			5800,		// tach Warning
   1419          			6000,		// tach Redline
   1420          			0,			// tach lowerYellow
   1421          			0,			// tach lowerRed
   1422          			4.17,		// gear1
   1423          			2.47,		// gear2
   1424          			1.52,		// gear3
   1425          			1.23,		// gear4
   1426          			0.87,		// gear5
   1427          			0.0,		// gear6
   1428          			0.0,		// gear7
   1429          			0.0,		// gear8
   1430          			3.727,		// diff
   1431          			83.934,		// tire circumference
   1432          			245,		// tire width
   1433          			19,			// wheel size
   1434          			40,			// tire aspect
   1435          			1,			// user entered tire data
   1436          			3350,		// weight
   1437          			0.31,		// wind drag
   1438          			0.5			// rolling resistance
   1439          		}
   1440          	},
   1441          	{	
   1442          		"Genesis V6",
   1443          		{		// MINI_VEHICLE_STRUCTURE
   1444          			MOBIUS_DELAY,			// usbCameraDelay
   1445          			6,			// engineCylinders
   1446          			0,			// tach scaleStart
   1447          			7000,		// tach scaleEnd
   1448          			0,			// tach greenStart
   1449          			0,			// tach greenEnd
   1450          			5500,		// tach Warning
   1451          			6200,		// tach Redline
   1452          			0,			// tach lowerYellow
   1453          			0,			// tach lowerRed
   1454          			4.17,		// gear1
   1455          			2.47,		// gear2
   1456          			1.52,		// gear3
   1457          			1.23,		// gear4
   1458          			0.87,		// gear5
   1459          			0.0,		// gear6
   1460          			0.0,		// gear7
   1461          			0.0,		// gear8
   1462          			3.73,		// diff
   1463          			83.934,		// tire circumference
   1464          			245,		// tire width
   1465          			19,			// wheel size
   1466          			40,			// tire aspect
   1467          			1,			// user entered tire data
   1468          			3550,		// weight
   1469          			0.31,		// wind drag
   1470          			0.5			// rolling resistance
   1471          		}
   1472          	},
   1473          	{	
   1474          		"GT3 996 03",
   1475          		{		// MINI_VEHICLE_STRUCTURE
   1476          			MOBIUS_DELAY,			// usbCameraDelay
   1477          			6,			// engineCylinders
   1478          			0,			// tach scaleStart
   1479          			8000,		// tach scaleEnd
   1480          			0,			// tach greenStart
   1481          			0,			// tach greenEnd
   1482          			7000,		// tach Warning
   1483          			7400,		// tach Redline
   1484          			0,			// tach lowerYellow
   1485          			0,			// tach lowerRed
   1486          			3.82,		// gear1
   1487          			2.15,		// gear2
   1488          			1.56,		// gear3
   1489          			1.21,		// gear4
   1490          			1.1,		// gear5
   1491          			0.85,		// gear6
   1492          			0.0,		// gear7
   1493          			0.0,		// gear8
   1494          			3.44,		// diff
   1495          			78.442,		// tire circumference
   1496          			295,		// tire width
   1497          			18,			// wheel size
   1498          			30,			// tire aspect
   1499          			1,			// user entered tire data
   1500          			3042,		// weight
   1501          			0.31,		// wind drag
   1502          			0.5			// rolling resistance
   1503          		}
   1504          	},
   1505          	{	
   1506          		"GT3 996 99",
   1507          		{		// MINI_VEHICLE_STRUCTURE
   1508          			MOBIUS_DELAY,			// usbCameraDelay
   1509          			6,			// engineCylinders
   1510          			0,			// tach scaleStart
   1511          			8000,		// tach scaleEnd
   1512          			0,			// tach greenStart
   1513          			0,			// tach greenEnd
   1514          			7000,		// tach Warning
   1515          			7400,		// tach Redline
   1516          			0,			// tach lowerYellow
   1517          			0,			// tach lowerRed
   1518          			3.82,		// gear1
   1519          			2.15,		// gear2
   1520          			1.56,		// gear3
   1521          			1.21,		// gear4
   1522          			0.97,		// gear5
   1523          			0.82,		// gear6
   1524          			0.0,		// gear7
   1525          			0.0,		// gear8
   1526          			3.44,		// diff
   1527          			77.698,		// tire circumference
   1528          			285,		// tire width
   1529          			18,			// wheel size
   1530          			30,			// tire aspect
   1531          			1,			// user entered tire data
   1532          			2976,		// weight
   1533          			0.31,		// wind drag
   1534          			0.5			// rolling resistance
   1535          		}
   1536          	},
   1537          	{	
   1538          		"GT3 997 06",
   1539          		{		// MINI_VEHICLE_STRUCTURE
   1540          			MOBIUS_DELAY,			// usbCameraDelay
   1541          			6,			// engineCylinders
   1542          			0,			// tach scaleStart
   1543          			9000,		// tach scaleEnd
   1544          			0,			// tach greenStart
   1545          			0,			// tach greenEnd
   1546          			8000,		// tach Warning
   1547          			8400,		// tach Redline
   1548          			0,			// tach lowerYellow
   1549          			0,			// tach lowerRed
   1550          			3.82,		// gear1
   1551          			2.26,		// gear2
   1552          			1.64,		// gear3
   1553          			1.29,		// gear4
   1554          			1.06,		// gear5
   1555          			0.92,		// gear6
   1556          			0.0,		// gear7
   1557          			0.0,		// gear8
   1558          			3.44,		// diff
   1559          			78.442,		// tire circumference
   1560          			295,		// tire width
   1561          			18,			// wheel size
   1562          			30,			// tire aspect
   1563          			1,			// user entered tire data
   1564          			3075,		// weight
   1565          			0.31,		// wind drag
   1566          			0.5			// rolling resistance
   1567          		}
   1568          	},
   1569          	{	
   1570          		"GT3 RS 996 03",
   1571          		{		// MINI_VEHICLE_STRUCTURE
   1572          			MOBIUS_DELAY,			// usbCameraDelay
   1573          			6,			// engineCylinders
   1574          			0,			// tach scaleStart
   1575          			8000,		// tach scaleEnd
   1576          			0,			// tach greenStart
   1577          			0,			// tach greenEnd
   1578          			7000,		// tach Warning
   1579          			7400,		// tach Redline
   1580          			0,			// tach lowerYellow
   1581          			0,			// tach lowerRed
   1582          			3.82,		// gear1
   1583          			2.15,		// gear2
   1584          			1.56,		// gear3
   1585          			1.21,		// gear4
   1586          			1.1,		// gear5
   1587          			0.85,		// gear6
   1588          			0.0,		// gear7
   1589          			0.0,		// gear8
   1590          			3.44,		// diff
   1591          			82.325,		// tire circumference
   1592          			305,		// tire width
   1593          			19,			// wheel size
   1594          			30,			// tire aspect
   1595          			1,			// user entered tire data
   1596          			2998,		// weight
   1597          			0.31,		// wind drag
   1598          			0.5			// rolling resistance
   1599          		}
   1600          	},
   1601          	{	
   1602          		"GT3 RS 997 10",
   1603          		{		// MINI_VEHICLE_STRUCTURE
   1604          			MOBIUS_DELAY,			// usbCameraDelay
   1605          			6,			// engineCylinders
   1606          			0,			// tach scaleStart
   1607          			9000,		// tach scaleEnd
   1608          			0,			// tach greenStart
   1609          			0,			// tach greenEnd
   1610          			8000,		// tach Warning
   1611          			8500,		// tach Redline
   1612          			0,			// tach lowerYellow
   1613          			0,			// tach lowerRed
   1614          			3.82,		// gear1
   1615          			2.26,		// gear2
   1616          			1.64,		// gear3
   1617          			1.29,		// gear4
   1618          			1.06,		// gear5
   1619          			0.88,		// gear6
   1620          			0.0,		// gear7
   1621          			0.0,		// gear8
   1622          			3.89,		// diff
   1623          			83.808,		// tire circumference
   1624          			325,		// tire width
   1625          			19,			// wheel size
   1626          			30,			// tire aspect
   1627          			1,			// user entered tire data
   1628          			3023,		// weight
   1629          			0.31,		// wind drag
   1630          			0.5			// rolling resistance
   1631          		}
   1632          	},
   1633          	{	
   1634          		"GTR",
   1635          		{		// MINI_VEHICLE_STRUCTURE
   1636          			MOBIUS_DELAY,			// usbCameraDelay
   1637          			6,			// engineCylinders
   1638          			0,			// tach scaleStart
   1639          			8000,		// tach scaleEnd
   1640          			0,			// tach greenStart
   1641          			0,			// tach greenEnd
   1642          			6800,		// tach Warning
   1643          			7200,		// tach Redline
   1644          			0,			// tach lowerYellow
   1645          			0,			// tach lowerRed
   1646          			4.056,		// gear1
   1647          			2.301,		// gear2
   1648          			1.595,		// gear3
   1649          			1.248,		// gear4
   1650          			1.001,		// gear5
   1651          			0.796,		// gear6
   1652          			0.0,		// gear7
   1653          			0.0,		// gear8
   1654          			3.7,		// diff
   1655          			83.981,		// tire circumference
   1656          			285,		// tire width
   1657          			20,			// wheel size
   1658          			35,			// tire aspect
   1659          			1,			// user entered tire data
   1660          			3800,		// weight
   1661          			0.26,		// wind drag
   1662          			0.5			// rolling resistance
   1663          		}
   1664          	},
   1665          	{	
   1666          		"Integra GSR 94",
   1667          		{		// MINI_VEHICLE_STRUCTURE
   1668          			MOBIUS_DELAY,			// usbCameraDelay
   1669          			4,			// engineCylinders
   1670          			0,			// tach scaleStart
   1671          			8000,		// tach scaleEnd
   1672          			0,			// tach greenStart
   1673          			0,			// tach greenEnd
   1674          			7500,		// tach Warning
   1675          			7900,		// tach Redline
   1676          			0,			// tach lowerYellow
   1677          			0,			// tach lowerRed
   1678          			3.23,		// gear1
   1679          			1.9,		// gear2
   1680          			1.36,		// gear3
   1681          			1.034,		// gear4
   1682          			0.787,		// gear5
   1683          			0.0,		// gear6
   1684          			0.0,		// gear7
   1685          			0.0,		// gear8
   1686          			4.4,		// diff
   1687          			72.926,		// tire circumference
   1688          			195,		// tire width
   1689          			14,			// wheel size
   1690          			60,			// tire aspect
   1691          			1,			// user entered tire data
   1692          			2643,		// weight
   1693          			0.33,		// wind drag
   1694          			0.5			// rolling resistance
   1695          		}
   1696          	},
   1697          	{	
   1698          		"Integra LS 02",
   1699          		{		// MINI_VEHICLE_STRUCTURE
   1700          			MOBIUS_DELAY,			// usbCameraDelay
   1701          			4,			// engineCylinders
   1702          			0,			// tach scaleStart
   1703          			7000,		// tach scaleEnd
   1704          			0,			// tach greenStart
   1705          			0,			// tach greenEnd
   1706          			5700,		// tach Warning
   1707          			6000,		// tach Redline
   1708          			0,			// tach lowerYellow
   1709          			0,			// tach lowerRed
   1710          			3.166,		// gear1
   1711          			1.857,		// gear2
   1712          			1.259,		// gear3
   1713          			0.935,		// gear4
   1714          			0.742,		// gear5
   1715          			0.0,		// gear6
   1716          			0.0,		// gear7
   1717          			0.0,		// gear8
   1718          			4.4,		// diff
   1719          			72.926,		// tire circumference
   1720          			195,		// tire width
   1721          			14,			// wheel size
   1722          			60,			// tire aspect
   1723          			1,			// user entered tire data
   1724          			2560,		// weight
   1725          			0.33,		// wind drag
   1726          			0.5			// rolling resistance
   1727          		}
   1728          	},
   1729          	{	
   1730          		"Integra R 99",
   1731          		{		// MINI_VEHICLE_STRUCTURE
   1732          			MOBIUS_DELAY,			// usbCameraDelay
   1733          			4,			// engineCylinders
   1734          			0,			// tach scaleStart
   1735          			8000,		// tach scaleEnd
   1736          			0,			// tach greenStart
   1737          			0,			// tach greenEnd
   1738          			7500,		// tach Warning
   1739          			7900,		// tach Redline
   1740          			0,			// tach lowerYellow
   1741          			0,			// tach lowerRed
   1742          			3.23,		// gear1
   1743          			2.105,		// gear2
   1744          			1.458,		// gear3
   1745          			1.107,		// gear4
   1746          			0.848,		// gear5
   1747          			0.0,		// gear6
   1748          			0.0,		// gear7
   1749          			0.0,		// gear8
   1750          			4.4,		// diff
   1751          			71.242,		// tire circumference
   1752          			195,		// tire width
   1753          			15,			// wheel size
   1754          			55,			// tire aspect
   1755          			1,			// user entered tire data
   1756          			2639,		// weight
   1757          			0.33,		// wind drag
   1758          			0.5			// rolling resistance
   1759          		}
   1760          	},
   1761          	{	
   1762          		"Miata 90-93",
   1763          		{		// MINI_VEHICLE_STRUCTURE
   1764          			MOBIUS_DELAY,			// usbCameraDelay
   1765          			4,			// engineCylinders
   1766          			0,			// tach scaleStart
   1767          			7300,		// tach scaleEnd
   1768          			0,			// tach greenStart
   1769          			0,			// tach greenEnd
   1770          			6500,		// tach Warning
   1771          			7000,		// tach Redline
   1772          			0,			// tach lowerYellow
   1773          			0,			// tach lowerRed
   1774          			3.136,		// gear1
   1775          			1.888,		// gear2
   1776          			1.33,		// gear3
   1777          			1,			// gear4
   1778          			0.814,		// gear5
   1779          			0.0,		// gear6
   1780          			0.0,		// gear7
   1781          			0.0,		// gear8
   1782          			4.3,		// diff
   1783          			71.44,		// tire circumference
   1784          			185,		// tire width
   1785          			14,			// wheel size
   1786          			60,			// tire aspect
   1787          			1,			// user entered tire data
   1788          			2300,		// weight
   1789          			0.38,		// wind drag
   1790          			0.5			// rolling resistance
   1791          		}
   1792          	},
   1793          	{	
   1794          		"Miata 94-97",
   1795          		{		// MINI_VEHICLE_STRUCTURE
   1796          			MOBIUS_DELAY,			// usbCameraDelay
   1797          			4,			// engineCylinders
   1798          			0,			// tach scaleStart
   1799          			7300,		// tach scaleEnd
   1800          			0,			// tach greenStart
   1801          			0,			// tach greenEnd
   1802          			6500,		// tach Warning
   1803          			7000,		// tach Redline
   1804          			0,			// tach lowerYellow
   1805          			0,			// tach lowerRed
   1806          			3.136,		// gear1
   1807          			1.888,		// gear2
   1808          			1.33,		// gear3
   1809          			1,			// gear4
   1810          			0.814,		// gear5
   1811          			0.0,		// gear6
   1812          			0.0,		// gear7
   1813          			0.0,		// gear8
   1814          			4.1,		// diff
   1815          			71.44,		// tire circumference
   1816          			185,		// tire width
   1817          			14,			// wheel size
   1818          			60,			// tire aspect
   1819          			1,			// user entered tire data
   1820          			2350,		// weight
   1821          			0.38,		// wind drag
   1822          			0.5			// rolling resistance
   1823          		}
   1824          	},
   1825          	{	
   1826          		"Miata 99-05 5spd",
   1827          		{		// MINI_VEHICLE_STRUCTURE
   1828          			MOBIUS_DELAY,			// usbCameraDelay
   1829          			4,			// engineCylinders
   1830          			0,			// tach scaleStart
   1831          			7300,		// tach scaleEnd
   1832          			0,			// tach greenStart
   1833          			0,			// tach greenEnd
   1834          			6500,		// tach Warning
   1835          			7000,		// tach Redline
   1836          			0,			// tach lowerYellow
   1837          			0,			// tach lowerRed
   1838          			3.136,		// gear1
   1839          			1.888,		// gear2
   1840          			1.33,		// gear3
   1841          			1,			// gear4
   1842          			0.814,		// gear5
   1843          			0.0,		// gear6
   1844          			0.0,		// gear7
   1845          			0.0,		// gear8
   1846          			4.3,		// diff
   1847          			73.086,		// tire circumference
   1848          			205,		// tire width
   1849          			16,			// wheel size
   1850          			45,			// tire aspect
   1851          			1,			// user entered tire data
   1852          			2400,		// weight
   1853          			0.37,		// wind drag
   1854          			0.5			// rolling resistance
   1855          		}
   1856          	},
   1857          	{	
   1858          		"Miata 99-05 6spd",
   1859          		{		// MINI_VEHICLE_STRUCTURE
   1860          			MOBIUS_DELAY,			// usbCameraDelay
   1861          			4,			// engineCylinders
   1862          			0,			// tach scaleStart
   1863          			7300,		// tach scaleEnd
   1864          			0,			// tach greenStart
   1865          			0,			// tach greenEnd
   1866          			6500,		// tach Warning
   1867          			7000,		// tach Redline
   1868          			0,			// tach lowerYellow
   1869          			0,			// tach lowerRed
   1870          			3.76,		// gear1
   1871          			2.269,		// gear2
   1872          			1.645,		// gear3
   1873          			1.257,		// gear4
   1874          			1.0,		// gear5
   1875          			0.843,		// gear6
   1876          			0.0,		// gear7
   1877          			0.0,		// gear8
   1878          			3.9,		// diff
   1879          			73.086,		// tire circumference
   1880          			205,		// tire width
   1881          			16,			// wheel size
   1882          			45,			// tire aspect
   1883          			1,			// user entered tire data
   1884          			2350,		// weight
   1885          			0.37,		// wind drag
   1886          			0.5			// rolling resistance
   1887          		}
   1888          	},
   1889          	{	
   1890          		"Miata MX5 06+",
   1891          		{		// MINI_VEHICLE_STRUCTURE
   1892          			MOBIUS_DELAY,			// usbCameraDelay
   1893          			4,			// engineCylinders
   1894          			0,			// tach scaleStart
   1895          			7000,		// tach scaleEnd
   1896          			0,			// tach greenStart
   1897          			0,			// tach greenEnd
   1898          			6500,		// tach Warning
   1899          			7000,		// tach Redline
   1900          			0,			// tach lowerYellow
   1901          			0,			// tach lowerRed
   1902          			3.815,		// gear1
   1903          			2.26,		// gear2
   1904          			1.64,		// gear3
   1905          			1.177,		// gear4
   1906          			1.1,		// gear5
   1907          			0.832,		// gear6
   1908          			0.0,		// gear7
   1909          			0.0,		// gear8
   1910          			4.1,		// diff
   1911          			76.228,		// tire circumference
   1912          			205,		// tire width
   1913          			17,			// wheel size
   1914          			45,			// tire aspect
   1915          			1,			// user entered tire data
   1916          			2498,		// weight
   1917          			0.32,		// wind drag
   1918          			0.5			// rolling resistance
   1919          		}
   1920          	},
   1921          	{	
   1922          		"Mini CooperS 03",
   1923          		{		// MINI_VEHICLE_STRUCTURE
   1924          			MOBIUS_DELAY,			// usbCameraDelay
   1925          			4,			// engineCylinders
   1926          			0,			// tach scaleStart
   1927          			7000,		// tach scaleEnd
   1928          			0,			// tach greenStart
   1929          			0,			// tach greenEnd
   1930          			6000,		// tach Warning
   1931          			6200,		// tach Redline
   1932          			0,			// tach lowerYellow
   1933          			0,			// tach lowerRed1
   1934          			3.308,		// gear1
   1935          			2.130,		// gear2
   1936          			1.483,		// gear3
   1937          			1.139,		// gear4
   1938          			0.949,		// gear5
   1939          			0.816,		// gear6
   1940          			0.0,		// gear7
   1941          			0.0,		// gear8
   1942          			3.65,		// diff
   1943          			76.23,		// tire circumference
   1944          			205,		// tire width
   1945          			17,			// wheel size
   1946          			45,			// tire aspect
   1947          			1,			// user entered tire data
   1948          			2678,		// weight
   1949          			0.35,		// wind drag
   1950          			0.5			// rolling resistance
   1951          		}
   1952          	},
   1953          	{	
   1954          		"MR2 Spyder 00",
   1955          		{		// MINI_VEHICLE_STRUCTURE
   1956          			MOBIUS_DELAY,			// usbCameraDelay
   1957          			4,			// engineCylinders
   1958          			0,			// tach scaleStart
   1959          			7000,		// tach scaleEnd
   1960          			0,			// tach greenStart
   1961          			0,			// tach greenEnd
   1962          			6700,		// tach Warning
   1963          			7000,		// tach Redline
   1964          			0,			// tach lowerYellow
   1965          			0,			// tach lowerRed
   1966          			3.166,		// gear1
   1967          			1.9,		// gear2
   1968          			1.39,		// gear3
   1969          			1.031,		// gear4
   1970          			0.815,		// gear5
   1971          			0.725,		// gear6
   1972          			0.0,		// gear7
   1973          			0.0,		// gear8
   1974          			4.529,		// diff
   1975          			74.952,		// tire circumference
   1976          			205,		// tire width
   1977          			15,			// wheel size
   1978          			50,			// tire aspect
   1979          			1,			// user entered tire data
   1980          			2195,		// weight
   1981          			0.35,		// wind drag
   1982          			0.5			// rolling resistance
   1983          		}
   1984          	},
   1985          	{	
   1986          		"MR2 Turbo 94",
   1987          		{		// MINI_VEHICLE_STRUCTURE
   1988          			MOBIUS_DELAY,			// usbCameraDelay
   1989          			4,			// engineCylinders
   1990          			0,			// tach scaleStart
   1991          			7000,		// tach scaleEnd
   1992          			0,			// tach greenStart
   1993          			0,			// tach greenEnd
   1994          			5800,		// tach Warning
   1995          			6200,		// tach Redline
   1996          			0,			// tach lowerYellow
   1997          			0,			// tach lowerRed
   1998          			3.23,		// gear1
   1999          			1.91,		// gear2
   2000          			1.32,		// gear3
   2001          			0.92,		// gear4
   2002          			0.73,		// gear5
   2003          			0.0,		// gear6
   2004          			0.0,		// gear7
   2005          			0.0,		// gear8
   2006          			4.29,		// diff
   2007          			74.952,		// tire circumference
   2008          			225,		// tire width
   2009          			15,			// wheel size
   2010          			50,			// tire aspect
   2011          			1,			// user entered tire data
   2012          			2700,		// weight
   2013          			0.31,		// wind drag
   2014          			0.5			// rolling resistance
   2015          		}
   2016          	},
   2017          	{	
   2018          		"Mustang GT 01",
   2019          		{		// MINI_VEHICLE_STRUCTURE
   2020          			MOBIUS_DELAY,			// usbCameraDelay
   2021          			8,			// engineCylinders
   2022          			0,			// tach scaleStart
   2023          			7000,		// tach scaleEnd
   2024          			0,			// tach greenStart
   2025          			0,			// tach greenEnd
   2026          			5200,		// tach Warning
   2027          			5700,		// tach Redline
   2028          			0,			// tach lowerYellow
   2029          			0,			// tach lowerRed
   2030          			3.37,		// gear1
   2031          			1.99,		// gear2
   2032          			1.33,		// gear3
   2033          			1.1,		// gear4
   2034          			0.67,		// gear5
   2035          			0.0,		// gear6
   2036          			0.0,		// gear7
   2037          			0.0,		// gear8
   2038          			3.27,		// diff
   2039          			80.679,		// tire circumference
   2040          			245,		// tire width
   2041          			17,			// wheel size
   2042          			45,			// tire aspect
   2043          			1,			// user entered tire data
   2044          			3274,		// weight
   2045          			0.36,		// wind drag
   2046          			0.5			// rolling resistance
   2047          		}
   2048          	},
   2049          	{	
   2050          		"Mustang GT 11",
   2051          		{		// MINI_VEHICLE_STRUCTURE
   2052          			MOBIUS_DELAY,			// usbCameraDelay
   2053          			8,			// engineCylinders
   2054          			0,			// tach scaleStart
   2055          			7000,		// tach scaleEnd
   2056          			0,			// tach greenStart
   2057          			0,			// tach greenEnd
   2058          			6500,		// tach Warning
   2059          			6800,		// tach Redline
   2060          			0,			// tach lowerYellow
   2061          			0,			// tach lowerRed
   2062          			3.66,		// gear1
   2063          			2.43,		// gear2
   2064          			1.69,		// gear3
   2065          			1.32,		// gear4
   2066          			1.0,		// gear5
   2067          			0.65,		// gear6
   2068          			0.0,		// gear7
   2069          			0.0,		// gear8
   2070          			3.73,		// diff
   2071          			85.615,		// tire circumference
   2072          			235,		// tire width
   2073          			18,			// wheel size
   2074          			50,			// tire aspect
   2075          			1,			// user entered tire data
   2076          			3600,		// weight
   2077          			0.38,		// wind drag
   2078          			0.5			// rolling resistance
   2079          		}
   2080          	},
   2081          	{	
   2082          		"NSX 02",
   2083          		{		// MINI_VEHICLE_STRUCTURE
   2084          			MOBIUS_DELAY,			// usbCameraDelay
   2085          			6,			// engineCylinders
   2086          			0,			// tach scaleStart
   2087          			8000,		// tach scaleEnd
   2088          			0,			// tach greenStart
   2089          			0,			// tach greenEnd
   2090          			7000,		// tach Warning
   2091          			7600,		// tach Redline
   2092          			0,			// tach lowerYellow
   2093          			0,			// tach lowerRed
   2094          			3.07,		// gear1
   2095          			1.96,		// gear2
   2096          			1.43,		// gear3
   2097          			1.13,		// gear4
   2098          			0.91,		// gear5
   2099          			0.72,		// gear6
   2100          			0.0,		// gear7
   2101          			0.0,		// gear8
   2102          			4.06,		// diff
   2103          			78.637,		// tire circumference
   2104          			255,		// tire width
   2105          			17,			// wheel size
   2106          			40,			// tire aspect
   2107          			1,			// user entered tire data
   2108          			3153,		// weight
   2109          			0.3,		// wind drag
   2110          			0.5			// rolling resistance
   2111          		}
   2112          	},
   2113          	{	
   2114          		"NSX 94",
   2115          		{		// MINI_VEHICLE_STRUCTURE
   2116          			MOBIUS_DELAY,			// usbCameraDelay
   2117          			6,			// engineCylinders
   2118          			0,			// tach scaleStart
   2119          			8000,		// tach scaleEnd
   2120          			0,			// tach greenStart
   2121          			0,			// tach greenEnd
   2122          			7000,		// tach Warning
   2123          			7600,		// tach Redline
   2124          			0,			// tach lowerYellow
   2125          			0,			// tach lowerRed
   2126          			3.07,		// gear1
   2127          			1.73,		// gear2
   2128          			1.23,		// gear3
   2129          			0.97,		// gear4
   2130          			0.77,		// gear5
   2131          			0.0,		// gear6
   2132          			0.0,		// gear7
   2133          			0.0,		// gear8
   2134          			4.06,		// diff
   2135          			77.651,		// tire circumference
   2136          			245,		// tire width
   2137          			17,			// wheel size
   2138          			40,			// tire aspect
   2139          			1,			// user entered tire data
   2140          			3100,		// weight
   2141          			0.31,		// wind drag
   2142          			0.5			// rolling resistance
   2143          		}
   2144          	},
   2145          	{	
   2146          		"RSX",
   2147          		{		// MINI_VEHICLE_STRUCTURE
   2148          			MOBIUS_DELAY,			// usbCameraDelay
   2149          			4,			// engineCylinders
   2150          			0,			// tach scaleStart
   2151          			8000,		// tach scaleEnd
   2152          			0,			// tach greenStart
   2153          			0,			// tach greenEnd
   2154          			7000,		// tach Warning
   2155          			7700,		// tach Redline
   2156          			0,			// tach lowerYellow
   2157          			0,			// tach lowerRed
   2158          			3.267,		// gear1
   2159          			2.13,		// gear2
   2160          			1.517,		// gear3
   2161          			1.147,		// gear4
   2162          			0.921,		// gear5
   2163          			0.738,		// gear6
   2164          			0.0,		// gear7
   2165          			0.0,		// gear8
   2166          			4.389,		// diff
   2167          			77.55,		// tire circumference
   2168          			205,		// tire width
   2169          			15,			// wheel size
   2170          			60,			// tire aspect
   2171          			1,			// user entered tire data
   2172          			2778,		// weight
   2173          			0.32,		// wind drag
   2174          			0.5			// rolling resistance
   2175          		}
   2176          	},
   2177          	{
   2178          		"RX7 78-85 4spd",
   2179          		{
   2180          			MOBIUS_DELAY,			// usbCameraDelay
   2181          		2,
   2182          		0,
   2183          		7500,
   2184          		0,
   2185          		0,
   2186          		7000,
   2187          		8000,
   2188          		0,
   2189          		0,
   2190          		3.674,
   2191          		2.217,
   2192          		1.432,
   2193          		1,
   2194          		0,
   2195          		0,
   2196          		0,
   2197          		0,
   2198          		3.909,
   2199          		72.87,
   2200          		185,
   2201          		70,
   2202          		13,
   2203          		1,
   2204          		2350,
   2205          		0.31,
   2206          		0.5
   2207          		}
   2208          	},
   2209          	{
   2210          		"RX7 78-85 5spd",
   2211          		{
   2212          			MOBIUS_DELAY,			// usbCameraDelay
   2213          		2,
   2214          		0,
   2215          		7500,
   2216          		0,
   2217          		0,
   2218          		7000,
   2219          		8000,
   2220          		0,
   2221          		0,
   2222          		3.674,
   2223          		2.217,
   2224          		1.432,
   2225          		1,
   2226          		0.825,
   2227          		0,
   2228          		0,
   2229          		0,
   2230          		3.909,
   2231          		72.87,
   2232          		185,
   2233          		70,
   2234          		13,
   2235          		1,
   2236          		2385,
   2237          		0.31,
   2238          		0.5
   2239          		}
   2240          	},
   2241          	{
   2242          		"RX7 84-85 GSL-SE",
   2243          		{
   2244          			MOBIUS_DELAY,			// usbCameraDelay
   2245          		2,
   2246          		0,
   2247          		7500,
   2248          		0,
   2249          		0,
   2250          		7000,
   2251          		8000,
   2252          		0,
   2253          		0,
   2254          		3.622,
   2255          		2.186,
   2256          		1.419,
   2257          		1,
   2258          		0.758,
   2259          		0,
   2260          		0,
   2261          		0,
   2262          		3.909,
   2263          		72.87,
   2264          		185,
   2265          		70,
   2266          		13,
   2267          		1,
   2268          		2590,
   2269          		0.31,
   2270          		0.5
   2271          		}
   2272          	},
   2273          	{
   2274          		"RX7 FC 86-91",
   2275          		{
   2276          			MOBIUS_DELAY,			// usbCameraDelay
   2277          		2,
   2278          		0,
   2279          		7500,
   2280          		0,
   2281          		0,
   2282          		7000,
   2283          		7500,
   2284          		0,
   2285          		0,
   2286          		3.483,
   2287          		2.02,
   2288          		1.391,
   2289          		1,
   2290          		0.76,
   2291          		0,
   2292          		0,
   2293          		0,
   2294          		4.1,
   2295          		75.62,
   2296          		205,
   2297          		50,
   2298          		16,
   2299          		1,
   2300          		2300,
   2301          		0.31,
   2302          		0.5
   2303          		}
   2304          	},
   2305          	{
   2306          		"RX7 FD 91-02",
   2307          		{
   2308          			MOBIUS_DELAY,			// usbCameraDelay
   2309          		2,
   2310          		0,
   2311          		7800,
   2312          		0,
   2313          		0,
   2314          		7000,
   2315          		7800,
   2316          		0,
   2317          		0,
   2318          		3.483,
   2319          		2.015,
   2320          		1.391,
   2321          		1.00,
   2322          		0.719,
   2323          		0,
   2324          		0,
   2325          		0,
   2326          		4.100,
   2327          		78.094,
   2328          		225,
   2329          		50,
   2330          		16,
   2331          		1,
   2332          		2800,
   2333          		0.31,
   2334          		0.5
   2335          		}
   2336          	},
   2337          	{	
   2338          		"RX8",
   2339          		{		// MINI_VEHICLE_STRUCTURE
   2340          			MOBIUS_DELAY,			// usbCameraDelay
   2341          			2,			// engineCylinders
   2342          			0,			// tach scaleStart
   2343          			9000,		// tach scaleEnd
   2344          			0,			// tach greenStart
   2345          			0,			// tach greenEnd
   2346          			8000,		// tach Warning
   2347          			8700,		// tach Redline
   2348          			0,			// tach lowerYellow
   2349          			0,			// tach lowerRed
   2350          			3.76,		// gear1
   2351          			2.269,		// gear2
   2352          			1.645,		// gear3
   2353          			1.187,		// gear4
   2354          			1.0,		// gear5
   2355          			0.843,		// gear6
   2356          			0.0,		// gear7
   2357          			0.0,		// gear8
   2358          			4.4,		// diff
   2359          			81.593,		// tire circumference
   2360          			225,		// tire width
   2361          			18,			// wheel size
   2362          			45,			// tire aspect
   2363          			1,			// user entered tire data
   2364          			3060,		// weight
   2365          			0.31,		// wind drag
   2366          			0.5			// rolling resistance
   2367          		}
   2368          	},
   2369          	{	
   2370          		"S2000 00-03",
   2371          		{		// MINI_VEHICLE_STRUCTURE
   2372          			MOBIUS_DELAY,			// usbCameraDelay
   2373          			4,			// engineCylinders
   2374          			0,			// tach scaleStart
   2375          			9000,		// tach scaleEnd
   2376          			0,			// tach greenStart
   2377          			0,			// tach greenEnd
   2378          			8500,		// tach Warning
   2379          			8900,		// tach Redline
   2380          			0,			// tach lowerYellow
   2381          			0,			// tach lowerRed
   2382          			3.13,		// gear1
   2383          			2.05,		// gear2
   2384          			1.48,		// gear3
   2385          			1.16,		// gear4
   2386          			0.97,		// gear5
   2387          			0.81,		// gear6
   2388          			0.0,		// gear7
   2389          			0.0,		// gear8
   2390          			4.1,		// diff
   2391          			78.094,		// tire circumference
   2392          			225,		// tire width
   2393          			16,			// wheel size
   2394          			50,			// tire aspect
   2395          			1,			// user entered tire data
   2396          			2809,		// weight
   2397          			0.31,		// wind dragS2000
   2398          			0.5			// rolling resistance
   2399          		}
   2400          	},
   2401          	{	
   2402          		"S2000 04-09",
   2403          		{		// MINI_VEHICLE_STRUCTURE1
   2404          			MOBIUS_DELAY,			// usbCameraDelay
   2405          			4,			// engineCylinders
   2406          			0,			// tach scaleStart
   2407          			8000,		// tach scaleEnd
   2408          			0,			// tach greenStart
   2409          			0,			// tach greenEnd
   2410          			7500,		// tach Warning
   2411          			7900,		// tach Redline
   2412          			0,			// tach lowerYellow
   2413          			0,			// tach lowerRed
   2414          			3.13,		// gear1
   2415          			2.05,		// gear2
   2416          			1.48,		// gear3
   2417          			1.16,		// gear4
   2418          			0.943,		// gear5
   2419          			0.763,		// gear6
   2420          			0.0,		// gear7
   2421          			0.0,		// gear8
   2422          			4.1,		// diff
   2423          			78.452,		// tire circumference
   2424          			225,		// tire width
   2425          			17,			// wheel size
   2426          			40,			// tire aspect
   2427          			1,			// user entered tire data
   2428          			2809,		// weight
   2429          			0.31,		// wind drag
   2430          			0.5			// rolling resistance
   2431          		}
   2432          	},
   2433          	{
   2434          		"Spec Miata 90-93",
   2435          		{		// MINI_VEHICLE_STRUCTURE
   2436          			MOBIUS_DELAY,			// usbCameraDelay
   2437          			4,			// engineCylinders
   2438          			0,			// tach scaleStart
   2439          			7300,		// tach scaleEnd
   2440          			0,			// tach greenStart
   2441          			0,			// tach greenEnd
   2442          			6500,		// tach Warning
   2443          			7000,		// tach Redline
   2444          			0,			// tach lowerYellow
   2445          			0,			// tach lowerRed
   2446          			3.136,		// gear1
   2447          			1.888,		// gear2
   2448          			1.33,		// gear3
   2449          			1,			// gear4
   2450          			0.814,		// gear5
   2451          			0.0,		// gear6
   2452          			0.0,		// gear7
   2453          			0.0,		// gear8
   2454          			4.3,		// diff
   2455          			72.48,		// tire circumference
   2456          			205,		// tire width
   2457          			15,			// wheel size
   2458          			50,			// tire aspect
   2459          			1,			// user entered tire data
   2460          			2300,		// weight
   2461          			0.38,		// wind drag
   2462          			0.5			// rolling resistance
   2463          		}
   2464          	},
   2465          	{	
   2466          		"Spec Miata 94-97",
   2467          		{		// MINI_VEHICLE_STRUCTURE
   2468          			MOBIUS_DELAY,			// usbCameraDelay
   2469          			4,			// engineCylinders
   2470          			0,			// tach scaleStart
   2471          			7300,		// tach scaleEnd
   2472          			0,			// tach greenStart
   2473          			0,			// tach greenEnd
   2474          			6500,		// tach Warning
   2475          			7000,		// tach Redline
   2476          			0,			// tach lowerYellow
   2477          			0,			// tach lowerRed
   2478          			3.136,		// gear1
   2479          			1.888,		// gear2
   2480          			1.33,		// gear3
   2481          			1,			// gear4
   2482          			0.814,		// gear5
   2483          			0.0,		// gear6
   2484          			0.0,		// gear7
   2485          			0.0,		// gear8
   2486          			4.1,		// diff
   2487          			72.48,		// tire circumference
   2488          			205,		// tire width
   2489          			15,			// wheel size
   2490          			50,			// tire aspect
   2491          			1,			// user entered tire data
   2492          			2350,		// weight
   2493          			0.38,		// wind drag
   2494          			0.5			// rolling resistance
   2495          		}
   2496          	},
   2497          	{	
   2498          		"Spec Miata 99-05",				// DEFAULT VEHICLE -- Do not change name!!!
   2499          		{		// MINI_VEHICLE_STRUCTURE
   2500          			MOBIUS_DELAY,			// usbCameraDelay
   2501          			4,			// engineCylinders
   2502          			0,			// tach scaleStart
   2503          			7300,		// tach scaleEnd
   2504          			0,			// tach greenStart
   2505          			0,			// tach greenEnd
   2506          			6500,		// tach Warning
   2507          			7000,		// tach Redline
   2508          			0,			// tach lowerYellow
   2509          			0,			// tach lowerRed
   2510          			3.136,		// gear1
   2511          			1.888,		// gear2
   2512          			1.33,		// gear3
   2513          			1,			// gear4
   2514          			0.814,		// gear5
   2515          			0.0,		// gear6
   2516          			0.0,		// gear7
   2517          			0.0,		// gear8
   2518          			4.3,		// diff
   2519          			72.48,		// tire circumference
   2520          			205,		// tire width
   2521          			15,			// wheel size
   2522          			50,			// tire aspect
   2523          			1,			// user entered tire data
   2524          			2400,		// weight
   2525          			0.37,		// wind drag
   2526          			0.5			// rolling resistance
   2527          		}
   2528          	},
   2529          	{	
   2530          		"Supra 98",
   2531          		{		// MINI_VEHICLE_STRUCTURE
   2532          			MOBIUS_DELAY,			// usbCameraDelay
   2533          			6,			// engineCylinders
   2534          			0,			// tach scaleStart
   2535          			7000,		// tach scaleEnd
   2536          			0,			// tach greenStart
   2537          			0,			// tach greenEnd
   2538          			6200,		// tach Warning
   2539          			6500,		// tach Redline
   2540          			0,			// tach lowerYellow
   2541          			0,			// tach lowerRed
   2542          			3.83,		// gear1
   2543          			2.36,		// gear2
   2544          			1.69,		// gear3
   2545          			1.31,		// gear4
   2546          			1.1,		// gear5
   2547          			0.79,		// gear6
   2548          			0.0,		// gear7
   2549          			0.0,		// gear8
   2550          			3.27,		// diff
   2551          			78.637,		// tire circumference
   2552          			255,		// tire width
   2553          			17,			// wheel size
   2554          			40,			// tire aspect
   2555          			1,			// user entered tire data
   2556          			3450,		// weight
   2557          			0.32,		// wind drag
   2558          			0.5			// rolling resistance
   2559          		}
   2560          	},
   2561          	{	
   2562          		"Viper 05",
   2563          		{		// MINI_VEHICLE_STRUCTURE
   2564          			MOBIUS_DELAY,			// usbCameraDelay
   2565          			10,			// engineCylinders
   2566          			0,			// tach scaleStart
   2567          			7000,		// tach scaleEnd
   2568          			0,			// tach greenStart
   2569          			0,			// tach greenEnd
   2570          			5500,		// tach Warning
   2571          			6000,		// tach Redline
   2572          			0,			// tach lowerYellow
   2573          			0,			// tach lowerRed
   2574          			2.66,		// gear1
   2575          			1.78,		// gear2
   2576          			1.3,		// gear3
   2577          			1.1,		// gear4
   2578          			0.74,		// gear5
   2579          			0.5,		// gear6
   2580          			0.0,		// gear7
   2581          			0.0,		// gear8
   2582          			3.07,		// diff
   2583          			85.294,		// tire circumference
   2584          			345,		// tire width
   2585          			19,			// wheel size
   2586          			30,			// tire aspect
   2587          			1,			// user entered tire data
   2588          			3380,		// weight
   2589          			0.35,		// wind drag
   2590          			0.5			// rolling resistance
   2591          		}
   2592          	},
   2593          	{	
   2594          		"Viper 12",
   2595          		{		// MINI_VEHICLE_STRUCTURE
   2596          			MOBIUS_DELAY,			// usbCameraDelay
   2597          			10,			// engineCylinders
   2598          			0,			// tach scaleStart
   2599          			7000,		// tach scaleEnd
   2600          			0,			// tach greenStart
   2601          			0,			// tach greenEnd
   2602          			5500,		// tach Warning
   2603          			6000,		// tach Redline
   2604          			0,			// tach lowerYellow
   2605          			0,			// tach lowerRed
   2606          			2.26,		// gear1
   2607          			1.58,		// gear2
   2608          			1.19,		// gear3
   2609          			1,			// gear4
   2610          			0.77,		// gear5
   2611          			0.63,		// gear6
   2612          			0.0,		// gear7
   2613          			0.0,		// gear8
   2614          			3.55,		// diff
   2615          			85.294,		// tire circumference
   2616          			345,		// tire width
   2617          			19,			// wheel size
   2618          			30,			// tire aspect
   2619          			1,			// user entered tire data
   2620          			3297,		// weight
   2621          			0.36,		// wind drag
   2622          			0.5			// rolling resistance
   2623          		}
   2624          	},
   2625          	{	
   2626          		"WRX STI 04",
   2627          		{		// MINI_VEHICLE_STRUCTURE
   2628          			MOBIUS_DELAY,			// usbCameraDelay
   2629          			4,			// engineCylinders
   2630          			0,			// tach scaleStart
   2631          			7000,		// tach scaleEnd
   2632          			0,			// tach greenStart
   2633          			0,			// tach greenEnd
   2634          			6200,		// tach Warning
   2635          			6800,		// tach Redline
   2636          			0,			// tach lowerYellow
   2637          			0,			// tach lowerRed
   2638          			3.636,		// gear1
   2639          			2.375,		// gear2
   2640          			1.761,		// gear3
   2641          			1.346,		// gear4
   2642          			0.971,		// gear5
   2643          			0.756,		// gear6
   2644          			0.0,		// gear7
   2645          			0.0,		// gear8
   2646          			3.9,		// diff
   2647          			78.452,		// tire circumference
   2648          			225,		// tire width
   2649          			17,			// wheel size
   2650          			45,			// tire aspect
   2651          			1,			// user entered tire data
   2652          			3263,		// weight
   2653          			0.33,		// wind drag
   2654          			0.5			// rolling resistance
   2655          		}
   2656          	},
   2657          	{	
   2658          		"WRX STI 08",
   2659          		{		// MINI_VEHICLE_STRUCTURE
   2660          			MOBIUS_DELAY,			// usbCameraDelay
   2661          			4,			// engineCylinders
   2662          			0,			// tach scaleStart
   2663          			7000,		// tach scaleEnd
   2664          			0,			// tach greenStart
   2665          			0,			// tach greenEnd
   2666          			6000,		// tach Warning
   2667          			6300,		// tach Redline
   2668          			0,			// tach lowerYellow
   2669          			0,			// tach lowerRed
   2670          			3.636,		// gear1
   2671          			2.235,		// gear2
   2672          			1.521,		// gear3
   2673          			1.137,		// gear4
   2674          			0.971,		// gear5
   2675          			0.756,		// gear6
   2676          			0.0,		// gear7
   2677          			0.0,		// gear8
   2678          			3.9,		// diff
   2679          			80.792,		// tire circumference
   2680          			245,		// tire width
   2681          			18,			// wheel size
   2682          			40,			// tire aspect
   2683          			1,			// user entered tire data
   2684          			3395,		// weight
   2685          			0.36,		// wind drag
   2686          			0.5			// rolling resistance
   2687          		}
   2688          	},
   2689          	{	
   2690          		"WRX STI 11",
   2691          		{		// MINI_VEHICLE_STRUCTURE
   2692          			MOBIUS_DELAY,			// usbCameraDelay
   2693          			4,			// engineCylinders
   2694          			0,			// tach scaleStart
   2695          			7000,		// tach scaleEnd
   2696          			0,			// tach greenStart
   2697          			0,			// tach greenEnd
   2698          			6000,		// tach Warning
   2699          			6300,		// tach Redline
   2700          			0,			// tach lowerYellow
   2701          			0,			// tach lowerRed
   2702          			3.636,		// gear1
   2703          			2.235,		// gear2
   2704          			1.521,		// gear3
   2705          			1.137,		// gear4
   2706          			0.971,		// gear5
   2707          			0.756,		// gear6
   2708          			0.0,		// gear7
   2709          			0.0,		// gear8
   2710          			3.54,		// diff
   2711          			80.792,		// tire circumference
   2712          			245,		// tire width
   2713          			18,			// wheel size
   2714          			40,			// tire aspect
   2715          			1,			// user entered tire data
   2716          			3373,		// weight
   2717          			0.36,		// wind drag
   2718          			0.5			// rolling resistance
   2719          		}
   2720          	},
   2721          	{	
   2722          		"Z06 C5",
   2723          		{		// MINI_VEHICLE_STRUCTURE
   2724          			MOBIUS_DELAY,			// usbCameraDelay
   2725          			8,			// engineCylinders
   2726          			0,			// tach scaleStart
   2727          			7000,		// tach scaleEnd
   2728          			0,			// tach greenStart
   2729          			0,			// tach greenEnd
   2730          			6000,		// tach Warning
   2731          			6500,		// tach Redline
   2732          			0,			// tach lowerYellow
   2733          			0,			// tach lowerRed
   2734          			2.66,		// gear1
   2735          			1.78,		// gear2
   2736          			1.3,		// gear3
   2737          			1,			// gear4
   2738          			0.74,		// gear5
   2739          			0.5,		// gear6
   2740          			0.0,		// gear7
   2741          			0.0,		// gear8
   2742          			3.42,		// diff
   2743          			81.584,		// tire circumference
   2744          			295,		// tire width
   2745          			19,			// wheel size
   2746          			35,			// tire aspect
   2747          			1,			// user entered tire data
   2748          			3115,		// weight
   2749          			0.34,		// wind drag
   2750          			0.5			// rolling resistance
   2751          		}
   2752          	},
   2753          	{	
   2754          		"Z06 C6",
   2755          		{		// MINI_VEHICLE_STRUCTURE
   2756          			MOBIUS_DELAY,			// usbCameraDelay
   2757          			8,			// engineCylinders
   2758          			0,			// tach scaleStart
   2759          			7000,		// tach scaleEnd
   2760          			0,			// tach greenStart
   2761          			0,			// tach greenEnd
   2762          			6500,		// tach Warning
   2763          			7000,		// tach Redline
   2764          			0,			// tach lowerYellow
   2765          			0,			// tach lowerRed
   2766          			2.97,		// gear1
   2767          			2.07,		// gear2
   2768          			1.43,		// gear3
   2769          			1,			// gear4
   2770          			0.84,		// gear5
   2771          			0.56,		// gear6
   2772          			0.0,		// gear7
   2773          			0.0,		// gear8
   2774          			3.42,		// diff
   2775          			83.808,		// tire circumference
   2776          			325,		// tire width
   2777          			19,			// wheel size
   2778          			30,			// tire aspect
   2779          			1,			// user entered tire data
   2780          			3180,		// weight
   2781          			0.34,		// wind drag
   2782          			0.5			// rolling resistance
   2783          		}
   2784          	},
   2785          	{	
   2786          		"",		// NULL VEHICLE MARKS END OF LIST
   2787          		{		// MINI_VEHICLE_STRUCTURE
   2788          			MOBIUS_DELAY,			// usbCameraDelay
   2789          			8,			// engineCylinders
   2790          			0,			// tach scaleStart
   2791          			7000,		// tach scaleEnd
   2792          			0,			// tach greenStart
   2793          			0,			// tach greenEnd
   2794          			6500,		// tach Warning
   2795          			7000,		// tach Redline
   2796          			0,			// tach lowerYellow
   2797          			0,			// tach lowerRed
   2798          			2.97,		// gear1
   2799          			2.07,		// gear2
   2800          			1.43,		// gear3
   2801          			1,			// gear4
   2802          			0.84,		// gear5
   2803          			0.56,		// gear6
   2804          			0.0,		// gear7
   2805          			0.0,		// gear8
   2806          			3.42,		// diff
   2807          			83.808,		// tire circumference
   2808          			325,		// tire width
   2809          			19,			// wheel size
   2810          			30,			// tire aspect
   2811          			1,			// user entered tire data
   2812          			3180,		// weight
   2813          			0.34,		// wind drag
   2814          			0.5			// rolling resistance
   2815          		}
   2816          	}
   2817          }; // defaultVehicles
   2818          
   2819          //
   2820          // Read the user data out of memory
   2821          //
   2822          // Attempt to read the data off the SD card.  If that read fails then
   2823          // use the data stored in serial flash.  If that fails load the structures
   2824          // with default data.
   2825          //
   2826          // Return values:
   2827          //		0 = user values read from SD card
   2828          //		Not equal 0 = Error code (bit mask)
   2829          //

   \                                 In section .text, align 4, keep-with-next
   2830          int ReadDataStructures(void)
   2831          {
   \                     ReadDataStructures:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2832          	return ReadSDCardData();
   \   00000004   0040A0E3           MOV      R4,#+0
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           BL       ReloadData
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0140A003           MOVEQ    R4,#+1
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   ........           BL       ReloadData
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   02408403           ORREQ    R4,R4,#0x2
   \   00000028   ........           BL       ValidateCameraData
   \   0000002C   ........           BL       DisplaySplashScreen3
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   ........           BL       ReloadData
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   04408403           ORREQ    R4,R4,#0x4
   \   00000040   0300A0E3           MOV      R0,#+3
   \   00000044   ........           BL       ReloadData
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   08408403           ORREQ    R4,R4,#0x8
   \   00000050   ........           ADR      R0,??DataTable133  ;; ""
   \   00000054   ........           BL       FS_Sync
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
   2833          }
   2834          

   \                                 In section .text, align 4, keep-with-next
   2835          int ReadSDCardData(void)
   2836          {
   \                     ReadSDCardData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2837          	int retval;
   2838          
   2839          	retval = 0;
   \   00000004   0040A0E3           MOV      R4,#+0
   2840          // Read system data
   2841          	if (ReloadData(SYSTEM_DATA) == false)
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   ........           BL       ReloadData
   \   00000010   000050E3           CMP      R0,#+0
   2842          		retval = INVALID_SYSTEM_DATA;
   \   00000014   0140A003           MOVEQ    R4,#+1
   2843          
   2844          // Read vehicle data
   2845          	if (ReloadData(VEHICLE_DATA) == false)
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   ........           BL       ReloadData
   \   00000020   000050E3           CMP      R0,#+0
   2846          		retval |= INVALID_VEHICLE_DATA;
   \   00000024   02408403           ORREQ    R4,R4,#0x2
   2847          
   2848          // See if an old camera type is selected (in VehicleSettingsScreens.c), reset and tell user if necessary
   2849          	ValidateCameraData();
   \   00000028   ........           BL       ValidateCameraData
   2850          
   2851          // Update splash screen with info
   2852          	DisplaySplashScreen3();
   \   0000002C   ........           BL       DisplaySplashScreen3
   2853          
   2854          // Read track data
   2855          	if (ReloadData(TRACK_DATA) == false)
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   ........           BL       ReloadData
   \   00000038   000050E3           CMP      R0,#+0
   2856          		retval |= INVALID_TRACK_DATA;
   \   0000003C   04408403           ORREQ    R4,R4,#0x4
   2857          
   2858          // Read driver data
   2859          	if (ReloadData(DRIVER_DATA) == false)
   \   00000040   0300A0E3           MOV      R0,#+3
   \   00000044   ........           BL       ReloadData
   \   00000048   000050E3           CMP      R0,#+0
   2860          		retval |= INVALID_DRIVER_DATA;
   \   0000004C   08408403           ORREQ    R4,R4,#0x8
   2861          
   2862          #ifndef _WINDOWS
   2863          	FS_Sync("");		// Flush cache to be sure all files written to disk
   \   00000050   ........           ADR      R0,??DataTable133  ;; ""
   \   00000054   ........           BL       FS_Sync
   2864          #endif
   2865          
   2866          // return the results of the load
   2867          	return retval;
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
   2868          }
   2869          
   2870          //
   2871          // Verify that this data is valid for the appropriate file type.
   2872          //
   2873          // Input:	type of file
   2874          //			pointer to data to be verified
   2875          //			flag telling to copy data to primary structures if true
   2876          //
   2877          //  Note that if data type is system or vehicle will check to see if this file
   2878          //  is an older version.  If so it will upgrade to the newer format.
   2879          //

   \                                 In section .text, align 4, keep-with-next
   2880          char verifyData(enum DATATYPES data, void *pNewData, int copyData)
   2881          {
   \                     verifyData:
   \   00000000   B0432DE9           PUSH     {R4,R5,R7-R9,LR}
   \   00000004   0090A0E1           MOV      R9,R0
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   2882          	const char *pVersion;
   2883          	int originalChecksum;
   2884          	long size;
   2885          
   2886          	switch (data)
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??verifyData_0:
   \   00000018   7100008A           BHI      ??verifyData_2
   \   0000001C   020000EA           B        ??verifyData_3
   \   00000020   2D0000EA           B        ??verifyData_4
   \   00000024   310000EA           B        ??verifyData_5
   \   00000028   340000EA           B        ??verifyData_6
   2887          	{
   2888          	case SYSTEM_DATA:
   2889          		pVersion = SYSTEM_VERSION;
   \                     ??verifyData_3:
   \   0000002C   ............       ADRL     R1,SYSTEM_VERSION
   \              ....        
   2890          		size = sizeof(SYS_DATA_STRUCTURE);
   \   00000034   F470A0E3           MOV      R7,#+244
   2891          		break;
   2892          	case TRACK_DATA:
   2893          		pVersion = TRACK_VERSION;
   2894          		size = sizeof(TRACK_DATA_STRUCTURE);
   2895          		break;
   2896          	case VEHICLE_DATA:
   2897          		pVersion = VEHICLE_VERSION;
   2898          		size = sizeof(VEHICLE_DATA_STRUCTURE);
   2899          		break;
   2900          	case DRIVER_DATA:
   2901          		pVersion = DRIVER_VERSION;
   2902          		size = sizeof(DRIVER_DATA_STRUCTURE);
   2903          		break;
   2904          	default:
   2905          		return false;
   2906          	}
   2907          	
   2908          	// checksum is always last 4 bytes in structure stored as int
   2909          	originalChecksum = *((int *) ((unsigned char *) pNewData + size - sizeof(int)));
   \                     ??verifyData_7:
   \   00000038   040087E0           ADD      R0,R7,R4
   \   0000003C   048010E5           LDR      R8,[R0, #-4]
   2910          
   2911          	if (!strcmp(pNewData, pVersion))			// Version string always the first element in the structure
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       strcmp
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   3B00001A           BNE      ??verifyData_8
   2912          	{
   2913          		int checksum;
   2914          		int i;
   2915          		unsigned char *pData;
   2916          
   2917          		// Verify the checksum of the data read
   2918          		checksum = 0;
   2919          		pData = pNewData;
   2920          		for (i = size - sizeof(int); i > 0; i--)
   \   00000050   042047E2           SUB      R2,R7,#+4
   \   00000054   0410A0E1           MOV      R1,R4
   \   00000058   010052E3           CMP      R2,#+1
   \   0000005C   0D0000BA           BLT      ??verifyData_9
   \   00000060   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000064   012042E2           SUB      R2,R2,#+1
   \   00000068   010012E3           TST      R2,#0x1
   2921          			checksum += *pData++;
   \   0000006C   0300A011           MOVNE    R0,R3
   \   00000070   0130F115           LDRBNE   R3,[R1, #+1]!
   \   00000074   A220B0E1           LSRS     R2,R2,#+1
   \   00000078   0500000A           BEQ      ??verifyData_10
   \                     ??verifyData_11:
   \   0000007C   01C0F1E5           LDRB     R12,[R1, #+1]!
   \   00000080   012052E2           SUBS     R2,R2,#+1
   \   00000084   03308CE0           ADD      R3,R12,R3
   \   00000088   000083E0           ADD      R0,R3,R0
   \   0000008C   0130F1E5           LDRB     R3,[R1, #+1]!
   \   00000090   F9FFFF1A           BNE      ??verifyData_11
   \                     ??verifyData_10:
   \   00000094   000083E0           ADD      R0,R3,R0
   2922          
   2923          		if (originalChecksum == checksum)
   \                     ??verifyData_9:
   \   00000098   000058E1           CMP      R8,R0
   \   0000009C   5000001A           BNE      ??verifyData_2
   2924          		{	// data good so copy into globals if requested
   2925          			if (copyData)
   \   000000A0   000055E3           CMP      R5,#+0
   \   000000A4   0A00000A           BEQ      ??verifyData_12
   2926          			{
   2927          				// This is what it should have been doing all along
   2928          				// If requested by the caller copy data into the primary data structures
   2929          				// otherwise just validate the data and return.
   2930          				switch (data)
   \   000000A8   030059E3           CMP      R9,#+3
   \   000000AC   09F18F90           ADDLS    PC,PC,R9, LSL #+2
   \                     ??verifyData_1:
   \   000000B0   4B00008A           BHI      ??verifyData_2
   \   000000B4   020000EA           B        ??verifyData_13
   \   000000B8   140000EA           B        ??verifyData_14
   \   000000BC   170000EA           B        ??verifyData_15
   \   000000C0   1A0000EA           B        ??verifyData_16
   2931          				{
   2932          				case SYSTEM_DATA:
   2933          					memcpy(&sysData, pNewData, size);
   \                     ??verifyData_13:
   \   000000C4   0720A0E1           MOV      R2,R7
   \   000000C8   0410A0E1           MOV      R1,R4
   \   000000CC   ........           LDR      R0,??DataTable147
   \                     ??verifyData_17:
   \   000000D0   ........           BL       __aeabi_memcpy
   2934          					break;
   2935          				case TRACK_DATA:
   2936          					memcpy(&trackData, pNewData, size);
   2937          					break;
   2938          				case VEHICLE_DATA:
   2939          					memcpy(&vehicleData, pNewData, size);
   2940          					break;
   2941          				case DRIVER_DATA:
   2942          					memcpy(&driverData, pNewData, size);
   2943          					break;
   2944          				default:
   2945          					return false;
   2946          				}
   2947          			}
   2948          			
   2949          			return true;
   \                     ??verifyData_12:
   \   000000D4   0100A0E3           MOV      R0,#+1
   \   000000D8   B083BDE8           POP      {R4,R5,R7-R9,PC}
   \                     ??verifyData_4:
   \   000000DC   A070A0E3           MOV      R7,#+160
   \   000000E0   ............       ADRL     R1,TRACK_VERSION
   \              ....        
   \   000000E8   507D87E3           ORR      R7,R7,#0x1400
   \   000000EC   D1FFFFEA           B        ??verifyData_7
   \                     ??verifyData_5:
   \   000000F0   ............       ADRL     R1,VEHICLE_VERSION
   \              ....        
   \   000000F8   777FA0E3           MOV      R7,#+476
   \   000000FC   CDFFFFEA           B        ??verifyData_7
   \                     ??verifyData_6:
   \   00000100   ............       ADRL     R1,DRIVER_VERSION
   \              ....        
   \   00000108   1070A0E3           MOV      R7,#+16
   \   0000010C   C9FFFFEA           B        ??verifyData_7
   \                     ??verifyData_14:
   \   00000110   0720A0E1           MOV      R2,R7
   \   00000114   0410A0E1           MOV      R1,R4
   \   00000118   ........           LDR      R0,??DataTable148
   \   0000011C   EBFFFFEA           B        ??verifyData_17
   \                     ??verifyData_15:
   \   00000120   0720A0E1           MOV      R2,R7
   \   00000124   0410A0E1           MOV      R1,R4
   \   00000128   ........           LDR      R0,??DataTable148_1
   \   0000012C   E7FFFFEA           B        ??verifyData_17
   \                     ??verifyData_16:
   \   00000130   0720A0E1           MOV      R2,R7
   \   00000134   0410A0E1           MOV      R1,R4
   \   00000138   ........           LDR      R0,??DataTable148_2
   \   0000013C   E3FFFFEA           B        ??verifyData_17
   2950          		}
   2951          	}
   2952          	else
   2953          	{
   2954          		// Version numbers do not match - see if a valid older version
   2955          		if (data == SYSTEM_DATA)
   \                     ??verifyData_8:
   \   00000140   000059E3           CMP      R9,#+0
   \   00000144   1600001A           BNE      ??verifyData_18
   2956          		{
   2957          			if (!(strcmp(pNewData, "00.00")))
   \   00000148   ............       ADRL     R1,`?<Constant "00.00">`
   \              ....        
   \   00000150   0400A0E1           MOV      R0,R4
   \   00000154   ........           BL       strcmp
   \   00000158   000050E3           CMP      R0,#+0
   \   0000015C   0300001A           BNE      ??verifyData_19
   2958          				if (UpgradeSysData00_01(pNewData) == false)
   \   00000160   0400A0E1           MOV      R0,R4
   \   00000164   ........           BL       UpgradeSysData00_01
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   1D00000A           BEQ      ??verifyData_20
   2959          					return false;
   2960          				// if return true fall through to the upgrade from 01 to 02
   2961          
   2962          			if (!(strcmp(pNewData, "00.01")))
   \                     ??verifyData_19:
   \   00000170   ............       ADRL     R1,`?<Constant "00.01">`
   \              ....        
   \   00000178   0400A0E1           MOV      R0,R4
   \   0000017C   ........           BL       strcmp
   \   00000180   000050E3           CMP      R0,#+0
   \   00000184   1600001A           BNE      ??verifyData_2
   2963          			{
   2964          				if (UpgradeSysData01_02(pNewData) == false)
   \   00000188   0400A0E1           MOV      R0,R4
   \   0000018C   ........           BL       UpgradeSysData01_02
   \   00000190   000050E3           CMP      R0,#+0
   \   00000194   0000A0E3           MOV      R0,#+0
   \   00000198   1200000A           BEQ      ??verifyData_20
   2965          					return false;
   2966          				else
   2967          				{
   2968          					// Updated system data - be sure the new image is written to disk
   2969          					WriteUserDataEvent(SYSTEM_DATA);
   \   0000019C   ........           BL       WriteUserDataEvent
   2970          					return true;
   \   000001A0   CBFFFFEA           B        ??verifyData_12
   2971          				}
   2972          			}
   2973          		}
   2974          		else if (data == VEHICLE_DATA)
   \                     ??verifyData_18:
   \   000001A4   020059E3           CMP      R9,#+2
   \   000001A8   0D00001A           BNE      ??verifyData_2
   2975          		{
   2976          			if (!(strcmp(pNewData, "00.00")))
   \   000001AC   ............       ADRL     R1,`?<Constant "00.00">`
   \              ....        
   \   000001B4   0400A0E1           MOV      R0,R4
   \   000001B8   ........           BL       strcmp
   \   000001BC   000050E3           CMP      R0,#+0
   \   000001C0   0700001A           BNE      ??verifyData_2
   2977          			{
   2978          				if (UpgradeVehicleData00_01(pNewData) == false)
   \   000001C4   0400A0E1           MOV      R0,R4
   \   000001C8   ........           BL       UpgradeVehicleData00_01
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   0400000A           BEQ      ??verifyData_20
   2979          					return false;
   2980          				else
   2981          				{
   2982          					// Updated vehicle data - be sure the new image is written to disk
   2983          					WriteUserDataEvent(VEHICLE_DATA);
   \   000001D4   0200A0E3           MOV      R0,#+2
   \   000001D8   ........           BL       WriteUserDataEvent
   2984          					DisplayUpdatedVehicleDataPopup();
   \   000001DC   ........           BL       DisplayUpdatedVehicleDataPopup
   2985          					return true;
   \   000001E0   BBFFFFEA           B        ??verifyData_12
   2986          				}
   2987          			}
   2988          		}
   2989          		else return false;
   2990          	}
   2991          	return false;
   \                     ??verifyData_2:
   \   000001E4   0000A0E3           MOV      R0,#+0
   \                     ??verifyData_20:
   \   000001E8   B083BDE8           POP      {R4,R5,R7-R9,PC}  ;; return
   2992          }
   2993          
   2994          //
   2995          // Check to see if the NewData image is a valid previous version of sysData
   2996          // If so, upgrade to the next version and return true
   2997          // otherwise return false (bad data)
   2998          //
   2999          // Note: this routine only upgrades from version 00.00 to 00.01
   3000          //

   \                                 In section .text, align 4, keep-with-next
   3001          char UpgradeSysData00_01(void *pNewData)
   3002          {
   \                     UpgradeSysData00_01:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3003          	int checksum;
   3004          	int i;
   3005          	char *pData;
   3006          	int originalChecksum;
   3007          
   3008          	// checksum is always last 4 bytes in structure stored as int
   3009          	originalChecksum = *((int *) ((unsigned char *) pNewData + SIZE_OF_VER_00_00_SYS_DATA_STRUCTURE - sizeof(int)));
   3010          
   3011          	// Verify the checksum of the data read
   3012          	checksum = 0;
   3013          	pData = pNewData;
   \   00000008   0410A0E1           MOV      R1,R4
   3014          	for (i = SIZE_OF_VER_00_00_SYS_DATA_STRUCTURE - sizeof(int); i > 0; i--)
   \   0000000C   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000010   D80094E5           LDR      R0,[R4, #+216]
   3015          		checksum += *pData++;
   \   00000014   0120F1E5           LDRB     R2,[R1, #+1]!
   \   00000018   6BC0A0E3           MOV      R12,#+107
   \                     ??UpgradeSysData00_01_0:
   \   0000001C   01E0F1E5           LDRB     LR,[R1, #+1]!
   \   00000020   01C05CE2           SUBS     R12,R12,#+1
   \   00000024   02208EE0           ADD      R2,LR,R2
   \   00000028   033082E0           ADD      R3,R2,R3
   \   0000002C   0120F1E5           LDRB     R2,[R1, #+1]!
   \   00000030   F9FFFF1A           BNE      ??UpgradeSysData00_01_0
   3016          
   3017          	if (originalChecksum == checksum)
   \   00000034   031082E0           ADD      R1,R2,R3
   \   00000038   010050E1           CMP      R0,R1
   \   0000003C   2100001A           BNE      ??UpgradeSysData00_01_1
   3018          	{
   3019          		// data good so copy into globals
   3020          	//	sysData = (* (ALL_DATA_UNION *) pNewData).sysdata;
   3021          		memcpy((void *)&sysData, (void const *)pNewData, SIZE_OF_VER_00_00_SYS_DATA_STRUCTURE);
   \   00000040   ........           LDR      R5,??DataTable148_1
   \   00000044   DC20A0E3           MOV      R2,#+220
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   770F85E2           ADD      R0,R5,#+476
   \   00000050   ........           BL       __aeabi_memcpy
   3022          		
   3023          
   3024          		// Initialize new version 1 data variables
   3025          		sysData.dragDistance = DD_1_4;			// Last seleted drag race distance = 1/4 mile
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   B202C5E5           STRB     R0,[R5, #+690]
   3026          		sysData.disableDriveRecordMode = 0;		// Record mode during DRIVE MODE
   \   0000005C   B302C5E5           STRB     R0,[R5, #+691]
   3027          		sysData.checksum = 0;
   \   00000060   CC0285E5           STR      R0,[R5, #+716]
   3028          		strcpy(sysData.version, "00.01");		// Mark data as valid version 01
   \   00000064   0620A0E3           MOV      R2,#+6
   \   00000068   ............       ADRL     R1,`?<Constant "00.01">`
   \              ....        
   \   00000070   770F85E2           ADD      R0,R5,#+476
   \   00000074   ........           BL       __aeabi_memcpy4
   3029          
   3030          		// Calculate new checksum for a VERSION 1 data structure!
   3031          		pData = (char *)&sysData;
   3032          		checksum = 0;
   3033          		for (i = SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE - sizeof(int); i > 0; i--)
   3034          			checksum += *pData++;
   \   00000078   DD00A0E3           MOV      R0,#+221
   \   0000007C   400F80E3           ORR      R0,R0,#0x100
   \   00000080   051080E0           ADD      R1,R0,R5
   \   00000084   DC31D5E5           LDRB     R3,[R5, #+476]
   \   00000088   DD01D5E5           LDRB     R0,[R5, #+477]
   \   0000008C   6B20A0E3           MOV      R2,#+107
   \                     ??UpgradeSysData00_01_2:
   \   00000090   01C0F1E5           LDRB     R12,[R1, #+1]!
   \   00000094   012052E2           SUBS     R2,R2,#+1
   \   00000098   00008CE0           ADD      R0,R12,R0
   \   0000009C   033080E0           ADD      R3,R0,R3
   \   000000A0   0100F1E5           LDRB     R0,[R1, #+1]!
   \   000000A4   F9FFFF1A           BNE      ??UpgradeSysData00_01_2
   3035          		// Write new checksum
   3036          		// checksum is always last 4 bytes in structure stored as int
   3037          		*(int *)pData = checksum;
   \   000000A8   030080E0           ADD      R0,R0,R3
   \   000000AC   010081E5           STR      R0,[R1, #+1]
   3038          
   3039          		// Copy sysData back to pNewData for possible follow-up tests
   3040          		memcpy(pNewData, (void const *)&sysData, SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE);
   \   000000B0   DC20A0E3           MOV      R2,#+220
   \   000000B4   771F85E2           ADD      R1,R5,#+476
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   ........           BL       __aeabi_memcpy
   3041          		
   3042          		return true;
   \   000000C0   0100A0E3           MOV      R0,#+1
   \   000000C4   3080BDE8           POP      {R4,R5,PC}
   3043          	}
   3044          	else return false;
   \                     ??UpgradeSysData00_01_1:
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   3080BDE8           POP      {R4,R5,PC}       ;; return
   3045          }
   3046          
   3047          //
   3048          // Check to see if the NewData image is a valid previous version of sysData
   3049          // If so, upgrade to the next version and return true
   3050          // otherwise return false (bad data)
   3051          //
   3052          // Note: this routine only upgrades from version 00.01 to 00.02
   3053          //

   \                                 In section .text, align 4, keep-with-next
   3054          char UpgradeSysData01_02(void *pNewData)
   3055          {
   \                     UpgradeSysData01_02:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3056          	int checksum;
   3057          	int i;
   3058          	char *pData;
   3059          	int originalChecksum;
   3060          
   3061          	// checksum is always last 4 bytes in structure stored as int
   3062          	originalChecksum = *((int *) ((unsigned char *) pNewData + SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE - sizeof(int)));
   3063          
   3064          	// Verify the checksum of the data read
   3065          	checksum = 0;
   3066          	pData = pNewData;
   \   00000008   0410A0E1           MOV      R1,R4
   3067          	for (i = SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE - sizeof(int); i > 0; i--)
   \   0000000C   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   D80094E5           LDR      R0,[R4, #+216]
   3068          		checksum += *pData++;
   \   00000018   0120F1E5           LDRB     R2,[R1, #+1]!
   \   0000001C   6BC0A0E3           MOV      R12,#+107
   \                     ??UpgradeSysData01_02_0:
   \   00000020   01E0F1E5           LDRB     LR,[R1, #+1]!
   \   00000024   01C05CE2           SUBS     R12,R12,#+1
   \   00000028   02208EE0           ADD      R2,LR,R2
   \   0000002C   033082E0           ADD      R3,R2,R3
   \   00000030   0120F1E5           LDRB     R2,[R1, #+1]!
   \   00000034   F9FFFF1A           BNE      ??UpgradeSysData01_02_0
   3069          
   3070          	if (originalChecksum == checksum)
   \   00000038   031082E0           ADD      R1,R2,R3
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   2600001A           BNE      ??UpgradeSysData01_02_1
   3071          	{
   3072          		// data good so copy into globals
   3073          	//	sysData = (* (ALL_DATA_UNION *) pNewData).sysdata;
   3074          		memcpy((void *)&sysData, (void const *)pNewData, SIZE_OF_VER_00_01_SYS_DATA_STRUCTURE);
   \   00000044   ........           LDR      R5,??DataTable148_1
   \   00000048   DC20A0E3           MOV      R2,#+220
   \   0000004C   0410A0E1           MOV      R1,R4
   \   00000050   770F85E2           ADD      R0,R5,#+476
   \   00000054   ........           BL       __aeabi_memcpy
   3075          
   3076          		// Initialize new version 2 data variables
   3077          		SetDefaultTempCalData();
   \   00000058   1800A0E3           MOV      R0,#+24
   \   0000005C   B40285E5           STR      R0,[R5, #+692]
   \   00000060   0500A0E3           MOV      R0,#+5
   \   00000064   ........           BL       GetADC
   \   00000068   B80285E5           STR      R0,[R5, #+696]
   \   0000006C   ........           BL       CalculateTempCorrection
   \   00000070   BC0285E5           STR      R0,[R5, #+700]
   3078          		sysData.checksum = 0;
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   CC0285E5           STR      R0,[R5, #+716]
   3079          		strcpy(sysData.version, "00.02");		// Mark data as valid version 02
   \   0000007C   0620A0E3           MOV      R2,#+6
   \   00000080   ............       ADRL     R1,`?<Constant "00.02">`
   \              ....        
   \   00000088   770F85E2           ADD      R0,R5,#+476
   \   0000008C   ........           BL       __aeabi_memcpy4
   3080          
   3081          		// Calculate new checksum for a VERSION 2 data structure!
   3082          		pData = (char *)&sysData;
   3083          		checksum = 0;
   3084          		for (i = sizeof(SYS_DATA_STRUCTURE) - sizeof(int); i > 0; i--)	// SYS_DATA_STRUCTURE = size of CURRENT sysData structure
   3085          			checksum += *pData++;
   \   00000090   DD00A0E3           MOV      R0,#+221
   \   00000094   400F80E3           ORR      R0,R0,#0x100
   \   00000098   051080E0           ADD      R1,R0,R5
   \   0000009C   DC31D5E5           LDRB     R3,[R5, #+476]
   \   000000A0   DD01D5E5           LDRB     R0,[R5, #+477]
   \   000000A4   7720A0E3           MOV      R2,#+119
   \                     ??UpgradeSysData01_02_2:
   \   000000A8   01C0F1E5           LDRB     R12,[R1, #+1]!
   \   000000AC   012052E2           SUBS     R2,R2,#+1
   \   000000B0   00008CE0           ADD      R0,R12,R0
   \   000000B4   033080E0           ADD      R3,R0,R3
   \   000000B8   0100F1E5           LDRB     R0,[R1, #+1]!
   \   000000BC   F9FFFF1A           BNE      ??UpgradeSysData01_02_2
   3086          		// Write new checksum
   3087          		// checksum is always last 4 bytes in structure stored as int
   3088          		*(int *)pData = checksum;
   \   000000C0   030080E0           ADD      R0,R0,R3
   \   000000C4   010081E5           STR      R0,[R1, #+1]
   3089          
   3090          		// Copy sysData back to pNewData for possible follow-up tests
   3091          		memcpy(pNewData, (void const *)&sysData, sizeof(SYS_DATA_STRUCTURE));
   \   000000C8   F420A0E3           MOV      R2,#+244
   \   000000CC   771F85E2           ADD      R1,R5,#+476
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           BL       __aeabi_memcpy
   3092          		
   3093          		return true;
   \   000000D8   0100A0E3           MOV      R0,#+1
   \   000000DC   000000EA           B        ??UpgradeSysData01_02_3
   3094          	}
   3095          	else return false;
   \                     ??UpgradeSysData01_02_1:
   \   000000E0   0000A0E3           MOV      R0,#+0
   \                     ??UpgradeSysData01_02_3:
   \   000000E4   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000E8   3080BDE8           POP      {R4,R5,PC}       ;; return
   3096          }
   3097          
   3098          
   3099          //
   3100          // Check to see if the NewData image is a valid previous version of Vehicle Data.
   3101          // If so, upgrade to the next version and return true
   3102          // otherwise return false (bad data)
   3103          //
   3104          // Note: this routine only upgrades from version 00.00 to 00.01
   3105          //

   \                                 In section .text, align 4, keep-with-next
   3106          char UpgradeVehicleData00_01(void *pNewData)
   3107          {
   \                     UpgradeVehicleData00_01:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3108          	int checksum;
   3109          	int i;
   3110          	char *pData;
   3111          	int originalChecksum;
   3112          
   3113          	// Index into the data structure using the previous template to get the checksum word
   3114          	originalChecksum = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->checksum;
   3115          
   3116          	// Verify the checksum of the data read
   3117          	checksum = 0;
   3118          	pData = pNewData;
   \   00000008   0410A0E1           MOV      R1,R4
   3119          	for (i = sizeof(V0_VEHICLE_DATA_STRUCTURE) - sizeof(int); i > 0; i--)
   \   0000000C   0030D1E5           LDRB     R3,[R1, #+0]
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   C80194E5           LDR      R0,[R4, #+456]
   3120          		checksum += *pData++;
   \   00000018   0120F1E5           LDRB     R2,[R1, #+1]!
   \   0000001C   E3C0A0E3           MOV      R12,#+227
   \                     ??UpgradeVehicleData00_01_0:
   \   00000020   01E0F1E5           LDRB     LR,[R1, #+1]!
   \   00000024   01C05CE2           SUBS     R12,R12,#+1
   \   00000028   02208EE0           ADD      R2,LR,R2
   \   0000002C   033082E0           ADD      R3,R2,R3
   \   00000030   0120F1E5           LDRB     R2,[R1, #+1]!
   \   00000034   F9FFFF1A           BNE      ??UpgradeVehicleData00_01_0
   3121          
   3122          	if (originalChecksum == checksum)
   \   00000038   031082E0           ADD      R1,R2,R3
   \   0000003C   010050E1           CMP      R0,R1
   \   00000040   4E00001A           BNE      ??UpgradeVehicleData00_01_1
   3123          	{
   3124          		// data good so copy into globals
   3125          		memset((void *)&vehicleData, 0, sizeof(VEHICLE_DATA_STRUCTURE));
   \   00000044   ........           LDR      R5,??DataTable148_1
   \   00000048   771FA0E3           MOV      R1,#+476
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       __aeabi_memclr4
   3126          		// Copy everything from the old buffer up to the start of the vehicle data structures into the new buffer
   3127          		memcpy(&vehicleData.version, VEHICLE_VERSION, sizeof(VEHICLE_VERSION));
   \   00000054   0620A0E3           MOV      R2,#+6
   \   00000058   ............       ADRL     R1,VEHICLE_VERSION
   \              ....        
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   ........           BL       __aeabi_memcpy4
   3128          		vehicleData.usbCameraDelay = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->usbCameraDelay;
   \   00000068   0C00D4E5           LDRB     R0,[R4, #+12]
   3129          		vehicleData.engineCylinders = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->engineCylinders;
   3130          		vehicleData.tach = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->tach;
   \   0000006C   101084E2           ADD      R1,R4,#+16
   \   00000070   0C00C5E5           STRB     R0,[R5, #+12]
   \   00000074   0D00D4E5           LDRB     R0,[R4, #+13]
   \   00000078   0D00C5E5           STRB     R0,[R5, #+13]
   \   0000007C   CC53B1E8           LDM      R1!,{R2,R3,R6-R9,R12,LR}
   \   00000080   100085E2           ADD      R0,R5,#+16
   \   00000084   CC53A0E8           STM      R0!,{R2,R3,R6-R9,R12,LR}
   3131          		vehicleData.gearRatios[0] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[0];
   \   00000088   300094E5           LDR      R0,[R4, #+48]
   3132          		vehicleData.gearRatios[1] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[1];
   3133          		vehicleData.gearRatios[2] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[2];
   3134          		vehicleData.gearRatios[3] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[3];
   3135          		vehicleData.gearRatios[4] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[4];
   3136          		vehicleData.gearRatios[5] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[5];
   3137          		vehicleData.gearRatios[6] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[6];
   3138          		vehicleData.gearRatios[7] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->gearRatios[7];
   3139          		vehicleData.diffRatio = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->diffRatio;
   3140          		vehicleData.tireCircumference = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->tireCircumference;
   3141          		vehicleData.treadWidth = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->treadWidth;
   3142          		vehicleData.wheelDiameter = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->wheelDiameter;
   3143          		vehicleData.aspectRatio = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->aspectRatio;
   3144          		vehicleData.userEnteredTireDimensions = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->userEnteredTireDimensions;
   3145          		vehicleData.weight = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->weight;
   3146          		vehicleData.windDrag = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->windDrag;
   3147          		vehicleData.rollingResistance = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->rollingResistance;
   3148          		vehicleData.camera = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->camera;
   3149          		for (i = 0; i < 4; i++)
   3150          			UpdateAnalogInputData(pNewData, i);
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   300085E5           STR      R0,[R5, #+48]
   \   00000094   340094E5           LDR      R0,[R4, #+52]
   \   00000098   340085E5           STR      R0,[R5, #+52]
   \   0000009C   380094E5           LDR      R0,[R4, #+56]
   \   000000A0   380085E5           STR      R0,[R5, #+56]
   \   000000A4   3C0094E5           LDR      R0,[R4, #+60]
   \   000000A8   3C0085E5           STR      R0,[R5, #+60]
   \   000000AC   400094E5           LDR      R0,[R4, #+64]
   \   000000B0   400085E5           STR      R0,[R5, #+64]
   \   000000B4   440094E5           LDR      R0,[R4, #+68]
   \   000000B8   440085E5           STR      R0,[R5, #+68]
   \   000000BC   480094E5           LDR      R0,[R4, #+72]
   \   000000C0   480085E5           STR      R0,[R5, #+72]
   \   000000C4   4C0094E5           LDR      R0,[R4, #+76]
   \   000000C8   4C0085E5           STR      R0,[R5, #+76]
   \   000000CC   500094E5           LDR      R0,[R4, #+80]
   \   000000D0   500085E5           STR      R0,[R5, #+80]
   \   000000D4   540094E5           LDR      R0,[R4, #+84]
   \   000000D8   540085E5           STR      R0,[R5, #+84]
   \   000000DC   580094E5           LDR      R0,[R4, #+88]
   \   000000E0   580085E5           STR      R0,[R5, #+88]
   \   000000E4   5C0094E5           LDR      R0,[R4, #+92]
   \   000000E8   5C0085E5           STR      R0,[R5, #+92]
   \   000000EC   600094E5           LDR      R0,[R4, #+96]
   \   000000F0   600085E5           STR      R0,[R5, #+96]
   \   000000F4   6400D4E5           LDRB     R0,[R4, #+100]
   \   000000F8   6400C5E5           STRB     R0,[R5, #+100]
   \   000000FC   680094E5           LDR      R0,[R4, #+104]
   \   00000100   680085E5           STR      R0,[R5, #+104]
   \   00000104   6C0094E5           LDR      R0,[R4, #+108]
   \   00000108   6C0085E5           STR      R0,[R5, #+108]
   \   0000010C   700094E5           LDR      R0,[R4, #+112]
   \   00000110   700085E5           STR      R0,[R5, #+112]
   \   00000114   7400D4E5           LDRB     R0,[R4, #+116]
   \   00000118   7400C5E5           STRB     R0,[R5, #+116]
   \   0000011C   0400A0E1           MOV      R0,R4
   \   00000120   ........           BL       UpdateAnalogInputData
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   0400A0E1           MOV      R0,R4
   \   0000012C   ........           BL       UpdateAnalogInputData
   \   00000130   0210A0E3           MOV      R1,#+2
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   ........           BL       UpdateAnalogInputData
   \   0000013C   0310A0E3           MOV      R1,#+3
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   ........           BL       UpdateAnalogInputData
   3151          		vehicleData.digitalInput[0] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->digitalInput[0];
   \   00000148   5E0F85E2           ADD      R0,R5,#+376
   \   0000014C   5A1F84E2           ADD      R1,R4,#+360
   \   00000150   2F20A0E3           MOV      R2,#+47
   \   00000154   ........           BL       __aeabi_memcpy
   3152          		vehicleData.digitalInput[1] = ((V0_VEHICLE_DATA_STRUCTURE *)(pNewData))->digitalInput[1];
   \   00000158   A700A0E3           MOV      R0,#+167
   \   0000015C   9710A0E3           MOV      R1,#+151
   \   00000160   400F80E3           ORR      R0,R0,#0x100
   \   00000164   401F81E3           ORR      R1,R1,#0x100
   \   00000168   050080E0           ADD      R0,R0,R5
   \   0000016C   041081E0           ADD      R1,R1,R4
   \   00000170   2F20A0E3           MOV      R2,#+47
   \   00000174   ........           BL       __aeabi_memcpy
   3153          
   3154          		// The following is not required if no follow-on update to the next version is
   3155          		// required as the checksum will be calculated when the file is written to disk.
   3156          		////// Calculate new checksum for a VERSION 1 data structure!
   3157          		////pData = (char *)&vehicleData;
   3158          		////checksum = 0;
   3159          		////for (i = SIZE_OF_VER_00_01_VEHICLE_DATA_STRUCTURE - sizeof(int); i > 0; i--)
   3160          		////	checksum += *pData++;
   3161          		////// Write new checksum
   3162          		////// checksum is always last 4 bytes in structure stored as int
   3163          		////*(int *)pData = checksum;
   3164          
   3165          		////// Copy sysData back to pNewData for possible follow-up tests
   3166          		////memcpy(pNewData, (void const *)&vehicleData, SIZE_OF_VER_00_01_VEHICLE_DATA_STRUCTURE);
   3167          		
   3168          		return true;
   \   00000178   0100A0E3           MOV      R0,#+1
   \   0000017C   000000EA           B        ??UpgradeVehicleData00_01_2
   3169          	}
   3170          	else return false;
   \                     ??UpgradeVehicleData00_01_1:
   \   00000180   0000A0E3           MOV      R0,#+0
   \                     ??UpgradeVehicleData00_01_2:
   \   00000184   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000188   F083BDE8           POP      {R4-R9,PC}       ;; return
   3171          }
   3172          

   \                                 In section .text, align 4, keep-with-next
   3173          void UpdateAnalogInputData(V0_VEHICLE_DATA_STRUCTURE *pNewData, int i)
   3174          {
   \                     UpdateAnalogInputData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3175          	memcpy((void *)&vehicleData.analogInput[i].Name, (void *)pNewData->analogInput[i].Name, NAMELEN + 1);
   \   00000004   ........           LDR      R2,??DataTable148_1
   \   00000008   014382E0           ADD      R4,R2,R1, LSL #+6
   \   0000000C   3C20A0E3           MOV      R2,#+60
   \   00000010   920125E0           MLA      R5,R2,R1,R0
   \   00000014   1120A0E3           MOV      R2,#+17
   \   00000018   781085E2           ADD      R1,R5,#+120
   \   0000001C   780084E2           ADD      R0,R4,#+120
   \   00000020   ........           BL       __aeabi_memcpy
   3176          	memcpy((void *)&vehicleData.analogInput[i].Units, (void *)pNewData->analogInput[i].Units, MAX_UNITS);
   \   00000024   0A20A0E3           MOV      R2,#+10
   \   00000028   891085E2           ADD      R1,R5,#+137
   \   0000002C   890084E2           ADD      R0,R4,#+137
   \   00000030   ........           BL       __aeabi_memcpy
   3177          	vehicleData.analogInput[i].enabled = pNewData->analogInput[i].enabled;
   \   00000034   9300D5E5           LDRB     R0,[R5, #+147]
   3178          	if (pNewData->analogInput[i].alarmTriggerLevel == BELOW)
   \   00000038   4014A0E3           MOV      R1,#+1073741824
   \   0000003C   9300C4E5           STRB     R0,[R4, #+147]
   \   00000040   980095E5           LDR      R0,[R5, #+152]
   \   00000044   ........           BL       __aeabi_cfcmpeq
   \   00000048   0600001A           BNE      ??UpdateAnalogInputData_0
   3179          	{
   3180          		vehicleData.analogInput[i].lowerAlarmTriggerLevel = pNewData->analogInput[i].alarmTriggerLevel;
   \   0000004C   980084E5           STR      R0,[R4, #+152]
   3181          		vehicleData.analogInput[i].lowerAlarmTriggerComparison = pNewData->analogInput[i].alarmTriggerComparison;
   \   00000050   9400D5E5           LDRB     R0,[R5, #+148]
   \   00000054   9400C4E5           STRB     R0,[R4, #+148]
   3182          		vehicleData.analogInput[i].upperAlarmTriggerComparison = OFF;
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   9500C4E5           STRB     R0,[R4, #+149]
   3183          		vehicleData.analogInput[i].upperAlarmTriggerLevel = 0.0;
   \   00000060   9C0084E5           STR      R0,[R4, #+156]
   \   00000064   0E0000EA           B        ??UpdateAnalogInputData_1
   3184          	}
   3185          	else if ((pNewData->analogInput[i].alarmTriggerComparison == ABOVE) || (pNewData->analogInput[i].alarmTriggerComparison == EQUAL_TO))
   \                     ??UpdateAnalogInputData_0:
   \   00000068   9400D5E5           LDRB     R0,[R5, #+148]
   \   0000006C   010050E3           CMP      R0,#+1
   \   00000070   03005013           CMPNE    R0,#+3
   \   00000074   0500001A           BNE      ??UpdateAnalogInputData_2
   3186          	{
   3187          		vehicleData.analogInput[i].upperAlarmTriggerLevel = pNewData->analogInput[i].alarmTriggerLevel;
   \   00000078   980095E5           LDR      R0,[R5, #+152]
   \   0000007C   9C0084E5           STR      R0,[R4, #+156]
   3188          		vehicleData.analogInput[i].upperAlarmTriggerComparison = pNewData->analogInput[i].alarmTriggerComparison;
   \   00000080   9400D5E5           LDRB     R0,[R5, #+148]
   \   00000084   9500C4E5           STRB     R0,[R4, #+149]
   3189          		vehicleData.analogInput[i].lowerAlarmTriggerComparison = OFF;
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   020000EA           B        ??UpdateAnalogInputData_3
   3190          		vehicleData.analogInput[i].lowerAlarmTriggerLevel = 0.0;
   3191          	}
   3192          	else
   3193          	{
   3194          		vehicleData.analogInput[i].upperAlarmTriggerLevel = 0.0;
   \                     ??UpdateAnalogInputData_2:
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   9C0084E5           STR      R0,[R4, #+156]
   3195          		vehicleData.analogInput[i].upperAlarmTriggerComparison = OFF;
   \   00000098   9500C4E5           STRB     R0,[R4, #+149]
   3196          		vehicleData.analogInput[i].lowerAlarmTriggerComparison = OFF;
   \                     ??UpdateAnalogInputData_3:
   \   0000009C   9400C4E5           STRB     R0,[R4, #+148]
   3197          		vehicleData.analogInput[i].lowerAlarmTriggerLevel = 0.0;
   \   000000A0   980084E5           STR      R0,[R4, #+152]
   3198          	}
   3199          	vehicleData.analogInput[i].inputRange = pNewData->analogInput[i].inputRange;
   \                     ??UpdateAnalogInputData_1:
   \   000000A4   9C00D5E5           LDRB     R0,[R5, #+156]
   \   000000A8   A000C4E5           STRB     R0,[R4, #+160]
   3200          	vehicleData.analogInput[i].lowVoltagePoint = pNewData->analogInput[i].lowVoltagePoint;
   \   000000AC   A00095E5           LDR      R0,[R5, #+160]
   \   000000B0   A40084E5           STR      R0,[R4, #+164]
   3201          	vehicleData.analogInput[i].highVoltagePoint = pNewData->analogInput[i].highVoltagePoint;
   \   000000B4   A40095E5           LDR      R0,[R5, #+164]
   \   000000B8   A80084E5           STR      R0,[R4, #+168]
   3202          	vehicleData.analogInput[i].lowValuePoint = pNewData->analogInput[i].lowValuePoint;
   \   000000BC   A80095E5           LDR      R0,[R5, #+168]
   \   000000C0   AC0084E5           STR      R0,[R4, #+172]
   3203          	vehicleData.analogInput[i].highValuePoint = pNewData->analogInput[i].highValuePoint;
   \   000000C4   AC0095E5           LDR      R0,[R5, #+172]
   \   000000C8   B00084E5           STR      R0,[R4, #+176]
   3204          	vehicleData.analogInput[i].EnableLED1 = pNewData->analogInput[i].EnableLED1;
   \   000000CC   B000D5E5           LDRB     R0,[R5, #+176]
   \   000000D0   B400C4E5           STRB     R0,[R4, #+180]
   3205          	vehicleData.analogInput[i].EnableLED2 = pNewData->analogInput[i].EnableLED2;
   \   000000D4   B100D5E5           LDRB     R0,[R5, #+177]
   \   000000D8   B500C4E5           STRB     R0,[R4, #+181]
   3206          }
   \   000000DC   3080BDE8           POP      {R4,R5,PC}       ;; return
   3207          

   \                                 In section .text, align 4, keep-with-next
   3208          void SetDefaultTempCalData(void)
   3209          {
   \                     SetDefaultTempCalData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3210          	sysData.calibrationTemperature = ROOM_TEMPERATURE;		// Default calibration temp assumed to be 24C = 75F, units always stored in metric
   \   00000004   ........           LDR      R4,??DataTable154_3
   \   00000008   1800A0E3           MOV      R0,#+24
   \   0000000C   B40284E5           STR      R0,[R4, #+692]
   3211          #ifdef _WINDOWS
   3212          	sysData.calibrationTempReading = ROOM_TEMP_READING;		// Simulate current board reading and set temp correction offset
   3213          #else
   3214          	sysData.calibrationTempReading = GetADC(ADC_LED_BOARD_TEMP);	// Take current board reading and set temp correction offset
   \   00000010   0500A0E3           MOV      R0,#+5
   \   00000014   ........           BL       GetADC
   \   00000018   B80284E5           STR      R0,[R4, #+696]
   3215          #endif
   3216          	sysData.LEDtempOffset = CalculateTempCorrection();
   \   0000001C   ........           BL       CalculateTempCorrection
   \   00000020   BC0284E5           STR      R0,[R4, #+700]
   3217          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
   3218          
   3219          
   3220          //
   3221          // Write the selected data structure to permanent storage
   3222          //
   3223          // Write the selected data structure to the SD card and to internal serial flash
   3224          //
   3225          // Input: SYSTEM_DATA, TRACK_DATA, VEHICLE_DATA, DRIVER_DATA
   3226          // Return values:
   3227          //		0 = user values written to both SD card and serial data flash
   3228          //		-1 = failed one of the writes
   3229          //		-2 = failed both of the writes
   3230          //

   \                                 In section .text, align 4, keep-with-next
   3231          int WriteDataStructures(enum DATATYPES data)
   3232          {
   \                     WriteDataStructures:
   \   00000000   01402DE9           PUSH     {R0,LR}
   3233          #ifdef	_WINDOWS
   3234          	WriteUserDataEvent(data);
   3235          #else
   3236          	if (data == TRACK_DATA)
   \   00000004   010050E3           CMP      R0,#+1
   \   00000008   0400001A           BNE      ??WriteDataStructures_0
   3237          		OS_PutMail(&MB_SDcardRW, &data);
   \   0000000C   0D20A0E1           MOV      R2,SP
   \   00000010   ........           LDR      R1,??DataTable154_4
   \   00000014   0000A0E3           MOV      R0,#+0
   \   00000018   ........           BL       PF_OS_PutMail
   \   0000001C   000000EA           B        ??WriteDataStructures_1
   3238          	else WriteUserDataEvent(data);
   \                     ??WriteDataStructures_0:
   \   00000020   ........           BL       WriteUserDataEvent
   3239          #endif
   3240          	return 0;
   \                     ??WriteDataStructures_1:
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   0080BDE8           POP      {PC}             ;; return
   3241          }
   3242          
   3243          

   \                                 In section .text, align 4, keep-with-next
   3244          int WriteUserDataEvent(enum DATATYPES data)
   3245          {
   \                     WriteUserDataEvent:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   81DF4DE2           SUB      SP,SP,#+516
   \   00000008   0070A0E1           MOV      R7,R0
   3246          int size;
   3247          int checksum;
   3248          int checksumSave;
   3249          int i;
   3250          char *pData, *pNewData;
   3251          char fileName[256];
   3252          
   3253          	switch (data)
   \   0000000C   030050E3           CMP      R0,#+3
   \   00000010   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??WriteUserDataEvent_0:
   \   00000014   E000008A           BHI      ??WriteUserDataEvent_1
   \   00000018   020000EA           B        ??WriteUserDataEvent_2
   \   0000001C   330000EA           B        ??WriteUserDataEvent_3
   \   00000020   3F0000EA           B        ??WriteUserDataEvent_4
   \   00000024   4B0000EA           B        ??WriteUserDataEvent_5
   3254          	{		
   3255          	case SYSTEM_DATA:
   3256          		pNewData = (char *)&sysData;
   \                     ??WriteUserDataEvent_2:
   \   00000028   ........           LDR      R4,??DataTable147
   3257          		size = sizeof(SYS_DATA_STRUCTURE);
   \   0000002C   F450A0E3           MOV      R5,#+244
   3258          		ConvertToFilename(fileName, (char *)SYSTEM_FILE_NAME, SYSTEM_DATA);
   \   00000030   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \   00000038   400F8DE2           ADD      R0,SP,#+256
   \   0000003C   ........           BL       strcpy
   \   00000040   ........           ADR      R1,??DataTable139  ;; "\\"
   \   00000044   400F8DE2           ADD      R0,SP,#+256
   \   00000048   ........           BL       strcat
   \   0000004C   ............       ADRL     R1,SYSTEM_FILE_NAME
   \              ....        
   \                     ??WriteUserDataEvent_6:
   \   00000054   400F8DE2           ADD      R0,SP,#+256
   \   00000058   ........           BL       strcat
   \   0000005C   ............       ADRL     R1,`?<Constant ".dat">`
   \              ....        
   \   00000064   400F8DE2           ADD      R0,SP,#+256
   \   00000068   ........           BL       strcat
   3259          		break;
   3260          	case TRACK_DATA:
   3261          		pNewData = (char *)&trackData;
   3262          		size = sizeof(TRACK_DATA_STRUCTURE);
   3263          		ConvertToFilename(fileName, sysData.track, TRACK_DATA);
   3264          		break;
   3265          	case VEHICLE_DATA:
   3266          		pNewData = (char *)&vehicleData;
   3267          		size = sizeof(VEHICLE_DATA_STRUCTURE);
   3268          		ConvertToFilename(fileName, sysData.vehicle, VEHICLE_DATA);
   3269          		break;
   3270          	case DRIVER_DATA:
   3271          		pNewData = (char *)&driverData;
   3272          		size = sizeof(DRIVER_DATA_STRUCTURE);
   3273          		ConvertToFilename(fileName, sysData.driver, DRIVER_DATA);
   3274          		break;
   3275          	default:
   3276          		return -1;
   3277          	}
   3278          
   3279          	// Calculate the checksum before writing
   3280          	checksum = 0;
   3281          	pData = pNewData;
   3282          	for (i = size -  sizeof(int); i > 0; i--)
   \   0000006C   046045E2           SUB      R6,R5,#+4
   \   00000070   0010A0E3           MOV      R1,#+0
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   010056E3           CMP      R6,#+1
   \   0000007C   0E0000BA           BLT      ??WriteUserDataEvent_7
   \   00000080   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000084   013046E2           SUB      R3,R6,#+1
   \   00000088   010013E3           TST      R3,#0x1
   3283          		checksum += *pData++;
   \   0000008C   0210A011           MOVNE    R1,R2
   \   00000090   0120F015           LDRBNE   R2,[R0, #+1]!
   \   00000094   A330B0E1           LSRS     R3,R3,#+1
   \   00000098   0500000A           BEQ      ??WriteUserDataEvent_8
   \                     ??WriteUserDataEvent_9:
   \   0000009C   01C0F0E5           LDRB     R12,[R0, #+1]!
   \   000000A0   013053E2           SUBS     R3,R3,#+1
   \   000000A4   02208CE0           ADD      R2,R12,R2
   \   000000A8   011082E0           ADD      R1,R2,R1
   \   000000AC   0120F0E5           LDRB     R2,[R0, #+1]!
   \   000000B0   F9FFFF1A           BNE      ??WriteUserDataEvent_9
   \                     ??WriteUserDataEvent_8:
   \   000000B4   011082E0           ADD      R1,R2,R1
   \   000000B8   010080E2           ADD      R0,R0,#+1
   3284          	*(int *)pData = checksumSave = checksum;
   \                     ??WriteUserDataEvent_7:
   \   000000BC   0180A0E1           MOV      R8,R1
   \   000000C0   008080E5           STR      R8,[R0, #+0]
   3285          
   3286          	if (data == SYSTEM_DATA)
   \   000000C4   000057E3           CMP      R7,#+0
   \   000000C8   9E00001A           BNE      ??WriteUserDataEvent_10
   3287          	{
   3288          		signed int retval;
   3289          		char backupFileName[256];
   3290          
   3291          		retval = FRWWriteFile(pNewData, fileName, size);	// Write primary file
   \   000000CC   ........           BL       OkToUseSDCard
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   3B00000A           BEQ      ??WriteUserDataEvent_11
   \   000000D8   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   000000DC   400F8DE2           ADD      R0,SP,#+256
   \   000000E0   ........           BL       FS_FOpen
   \   000000E4   0070B0E1           MOVS     R7,R0
   \   000000E8   2900001A           BNE      ??WriteUserDataEvent_12
   \   000000EC   350000EA           B        ??WriteUserDataEvent_11
   \                     ??WriteUserDataEvent_3:
   \   000000F0   ........           LDR      R6,??DataTable148_1
   \   000000F4   A050A0E3           MOV      R5,#+160
   \   000000F8   EC4F86E2           ADD      R4,R6,#+944
   \   000000FC   505D85E3           ORR      R5,R5,#0x1400
   \   00000100   ............       ADRL     R1,TRACK_PATH
   \              ....        
   \   00000108   400F8DE2           ADD      R0,SP,#+256
   \   0000010C   ........           BL       strcpy
   \   00000110   ........           ADR      R1,??DataTable139  ;; "\\"
   \   00000114   400F8DE2           ADD      R0,SP,#+256
   \   00000118   ........           BL       strcat
   \   0000011C   9F1F86E2           ADD      R1,R6,#+636
   \   00000120   CBFFFFEA           B        ??WriteUserDataEvent_6
   \                     ??WriteUserDataEvent_4:
   \   00000124   ........           LDR      R6,??DataTable148_1
   \   00000128   775FA0E3           MOV      R5,#+476
   \   0000012C   0640A0E1           MOV      R4,R6
   \   00000130   ............       ADRL     R1,VEHICLE_PATH
   \              ....        
   \   00000138   400F8DE2           ADD      R0,SP,#+256
   \   0000013C   ........           BL       strcpy
   \   00000140   ........           ADR      R1,??DataTable139  ;; "\\"
   \   00000144   400F8DE2           ADD      R0,SP,#+256
   \   00000148   ........           BL       strcat
   \   0000014C   8F0085E2           ADD      R0,R5,#+143
   \                     ??WriteUserDataEvent_13:
   \   00000150   061080E0           ADD      R1,R0,R6
   \   00000154   BEFFFFEA           B        ??WriteUserDataEvent_6
   \                     ??WriteUserDataEvent_5:
   \   00000158   ........           LDR      R6,??DataTable148_1
   \   0000015C   5000A0E3           MOV      R0,#+80
   \   00000160   600D80E3           ORR      R0,R0,#0x1800
   \   00000164   064080E0           ADD      R4,R0,R6
   \   00000168   1050A0E3           MOV      R5,#+16
   \   0000016C   ............       ADRL     R1,DRIVER_PATH
   \              ....        
   \   00000174   400F8DE2           ADD      R0,SP,#+256
   \   00000178   ........           BL       strcpy
   \   0000017C   ........           ADR      R1,??DataTable139  ;; "\\"
   \   00000180   400F8DE2           ADD      R0,SP,#+256
   \   00000184   ........           BL       strcat
   \   00000188   5A00A0E3           MOV      R0,#+90
   \   0000018C   800F80E3           ORR      R0,R0,#0x200
   \   00000190   EEFFFFEA           B        ??WriteUserDataEvent_13
   \                     ??WriteUserDataEvent_12:
   \   00000194   0730A0E1           MOV      R3,R7
   \   00000198   0120A0E3           MOV      R2,#+1
   \   0000019C   0510A0E1           MOV      R1,R5
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   ........           BL       FS_FWrite
   \   000001A8   0090A0E1           MOV      R9,R0
   \   000001AC   0700A0E1           MOV      R0,R7
   \   000001B0   ........           BL       FS_FClose
   \   000001B4   ........           ADR      R0,??DataTable142  ;; ""
   \   000001B8   ........           BL       FS_Sync
   \   000001BC   010059E3           CMP      R9,#+1
   \   000001C0   0070A003           MOVEQ    R7,#+0
   \   000001C4   0000000A           BEQ      ??WriteUserDataEvent_14
   \                     ??WriteUserDataEvent_11:
   \   000001C8   0070E0E3           MVN      R7,#+0
   3292          		ConvertToFilename(backupFileName, (char *)BACKUP_SYSTEM_FILE_NAME, SYSTEM_DATA);
   \                     ??WriteUserDataEvent_14:
   \   000001CC   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \   000001D4   0D00A0E1           MOV      R0,SP
   \   000001D8   ........           BL       strcpy
   \   000001DC   ........           ADR      R1,??DataTable139  ;; "\\"
   \   000001E0   0D00A0E1           MOV      R0,SP
   \   000001E4   ........           BL       strcat
   \   000001E8   ............       ADRL     R1,BACKUP_SYSTEM_FILE_NAME
   \              ....        
   \   000001F0   0D00A0E1           MOV      R0,SP
   \   000001F4   ........           BL       strcat
   \   000001F8   ............       ADRL     R1,`?<Constant ".dat">`
   \              ....        
   \   00000200   0D00A0E1           MOV      R0,SP
   \   00000204   ........           BL       strcat
   3293          		FRWWriteFile(pNewData, backupFileName, size);				// Write backup file
   \   00000208   ........           BL       OkToUseSDCard
   \   0000020C   000050E3           CMP      R0,#+0
   \   00000210   0D00000A           BEQ      ??WriteUserDataEvent_15
   \   00000214   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   00000218   0D00A0E1           MOV      R0,SP
   \   0000021C   ........           BL       FS_FOpen
   \   00000220   0090B0E1           MOVS     R9,R0
   \   00000224   0800000A           BEQ      ??WriteUserDataEvent_15
   \   00000228   0930A0E1           MOV      R3,R9
   \   0000022C   0120A0E3           MOV      R2,#+1
   \   00000230   0510A0E1           MOV      R1,R5
   \   00000234   0400A0E1           MOV      R0,R4
   \   00000238   ........           BL       FS_FWrite
   \   0000023C   0900A0E1           MOV      R0,R9
   \   00000240   ........           BL       FS_FClose
   \   00000244   ........           ADR      R0,??DataTable142  ;; ""
   \   00000248   ........           BL       FS_Sync
   3294          		
   3295          		// Verify write!
   3296          		// Calculate the checksum before writing
   3297          		checksum = 0;
   \                     ??WriteUserDataEvent_15:
   \   0000024C   0010A0E3           MOV      R1,#+0
   3298          		pData = pNewData;
   \   00000250   0400A0E1           MOV      R0,R4
   3299          		for (i = size -  sizeof(int); i > 0; i--)
   \   00000254   010056E3           CMP      R6,#+1
   \   00000258   0E0000BA           BLT      ??WriteUserDataEvent_16
   \   0000025C   0020D0E5           LDRB     R2,[R0, #+0]
   \   00000260   013046E2           SUB      R3,R6,#+1
   \   00000264   010013E3           TST      R3,#0x1
   3300          			checksum += *pData++;
   \   00000268   0210A011           MOVNE    R1,R2
   \   0000026C   0120F015           LDRBNE   R2,[R0, #+1]!
   \   00000270   A330B0E1           LSRS     R3,R3,#+1
   \   00000274   0500000A           BEQ      ??WriteUserDataEvent_17
   \                     ??WriteUserDataEvent_18:
   \   00000278   01C0F0E5           LDRB     R12,[R0, #+1]!
   \   0000027C   013053E2           SUBS     R3,R3,#+1
   \   00000280   02208CE0           ADD      R2,R12,R2
   \   00000284   011082E0           ADD      R1,R2,R1
   \   00000288   0120F0E5           LDRB     R2,[R0, #+1]!
   \   0000028C   F9FFFF1A           BNE      ??WriteUserDataEvent_18
   \                     ??WriteUserDataEvent_17:
   \   00000290   011082E0           ADD      R1,R2,R1
   \   00000294   010080E2           ADD      R0,R0,#+1
   3301          		if (checksumSave != checksum)
   \                     ??WriteUserDataEvent_16:
   \   00000298   010058E1           CMP      R8,R1
   \   0000029C   2700000A           BEQ      ??WriteUserDataEvent_19
   3302          		{
   3303          			// Someone overwrote the data structure while we were writing it,
   3304          			// reset the new checksum and try one more time to save the data
   3305          			// Note that this should never happen, but since I created the test
   3306          			// I might as well add the safety measure.
   3307          			*(int *)pData = checksum;
   \   000002A0   001080E5           STR      R1,[R0, #+0]
   3308          			retval = FRWWriteFile(pNewData, fileName, size);		// Write primary file
   \   000002A4   ........           BL       OkToUseSDCard
   \   000002A8   000050E3           CMP      R0,#+0
   \   000002AC   1100000A           BEQ      ??WriteUserDataEvent_20
   \   000002B0   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   000002B4   400F8DE2           ADD      R0,SP,#+256
   \   000002B8   ........           BL       FS_FOpen
   \   000002BC   0060B0E1           MOVS     R6,R0
   \   000002C0   0C00000A           BEQ      ??WriteUserDataEvent_20
   \   000002C4   0630A0E1           MOV      R3,R6
   \   000002C8   0120A0E3           MOV      R2,#+1
   \   000002CC   0510A0E1           MOV      R1,R5
   \   000002D0   0400A0E1           MOV      R0,R4
   \   000002D4   ........           BL       FS_FWrite
   \   000002D8   0070A0E1           MOV      R7,R0
   \   000002DC   0600A0E1           MOV      R0,R6
   \   000002E0   ........           BL       FS_FClose
   \   000002E4   ........           ADR      R0,??DataTable142  ;; ""
   \   000002E8   ........           BL       FS_Sync
   \   000002EC   010057E3           CMP      R7,#+1
   \   000002F0   0070A003           MOVEQ    R7,#+0
   \   000002F4   0000000A           BEQ      ??WriteUserDataEvent_21
   \                     ??WriteUserDataEvent_20:
   \   000002F8   0070E0E3           MVN      R7,#+0
   3309          			FRWWriteFile(pNewData, backupFileName, size);			// Write backup file
   \                     ??WriteUserDataEvent_21:
   \   000002FC   ........           BL       OkToUseSDCard
   \   00000300   000050E3           CMP      R0,#+0
   \   00000304   0D00000A           BEQ      ??WriteUserDataEvent_19
   \   00000308   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   0000030C   0D00A0E1           MOV      R0,SP
   \   00000310   ........           BL       FS_FOpen
   \   00000314   0060B0E1           MOVS     R6,R0
   \   00000318   0800000A           BEQ      ??WriteUserDataEvent_19
   \   0000031C   0630A0E1           MOV      R3,R6
   \   00000320   0120A0E3           MOV      R2,#+1
   \   00000324   0510A0E1           MOV      R1,R5
   \   00000328   0400A0E1           MOV      R0,R4
   \   0000032C   ........           BL       FS_FWrite
   \   00000330   0600A0E1           MOV      R0,R6
   \   00000334   ........           BL       FS_FClose
   \   00000338   ........           ADR      R0,??DataTable142  ;; ""
   \   0000033C   ........           BL       FS_Sync
   3310          		}
   3311          		
   3312          		return retval;
   \                     ??WriteUserDataEvent_19:
   \   00000340   0700A0E1           MOV      R0,R7
   \   00000344   150000EA           B        ??WriteUserDataEvent_22
   3313          	}
   3314          	else return FRWWriteFile(pNewData, fileName, size);
   \                     ??WriteUserDataEvent_10:
   \   00000348   ........           BL       OkToUseSDCard
   \   0000034C   000050E3           CMP      R0,#+0
   \   00000350   1100000A           BEQ      ??WriteUserDataEvent_1
   \   00000354   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   00000358   400F8DE2           ADD      R0,SP,#+256
   \   0000035C   ........           BL       FS_FOpen
   \   00000360   0060B0E1           MOVS     R6,R0
   \   00000364   0C00000A           BEQ      ??WriteUserDataEvent_1
   \   00000368   0630A0E1           MOV      R3,R6
   \   0000036C   0120A0E3           MOV      R2,#+1
   \   00000370   0510A0E1           MOV      R1,R5
   \   00000374   0400A0E1           MOV      R0,R4
   \   00000378   ........           BL       FS_FWrite
   \   0000037C   0040A0E1           MOV      R4,R0
   \   00000380   0600A0E1           MOV      R0,R6
   \   00000384   ........           BL       FS_FClose
   \   00000388   ........           ADR      R0,??DataTable142  ;; ""
   \   0000038C   ........           BL       FS_Sync
   \   00000390   010054E3           CMP      R4,#+1
   \   00000394   0000A003           MOVEQ    R0,#+0
   \   00000398   0000000A           BEQ      ??WriteUserDataEvent_22
   \                     ??WriteUserDataEvent_1:
   \   0000039C   0000E0E3           MVN      R0,#+0
   \                     ??WriteUserDataEvent_22:
   \   000003A0   81DF8DE2           ADD      SP,SP,#+516      ;; stack cleaning
   \   000003A4   F083BDE8           POP      {R4-R9,PC}       ;; return
   3315          }
   3316          

   \                                 In section .text, align 4, keep-with-next
   3317          signed int FRWWriteFile(char *pNewData, char *fileName, int size)
   3318          {
   \                     FRWWriteFile:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   3319          #ifdef _WINDOWS
   3320          FILE *pFile;
   3321          unsigned long byteswritten;
   3322          
   3323          	// Attempt to open SD card configuration file
   3324          	if ((pFile = fopen(fileName, "wb")) != 0)
   3325          	{
   3326          		// file opened - read the data and be sure it's the right version
   3327          		byteswritten = fwrite(pNewData, size, 1, pFile);
   3328          		fclose(pFile);
   3329          		if (byteswritten != 1)
   3330          			return -1;			// failed writing to SD card
   3331          	}
   3332          	else return -1;			// failed writing to SD card
   3333          
   3334          #else
   3335          FS_FILE *pFile;
   3336          unsigned long byteswritten;
   3337          
   3338          	if (!OkToUseSDCard())
   \   00000010   ........           BL       OkToUseSDCard
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   1200000A           BEQ      ??FRWWriteFile_0
   3339          		return -1;
   3340          	
   3341          	// Attempt to open SD card configuration file
   3342          	if (pFile = FS_FOpen(fileName, "wb"))
   \   0000001C   ........           ADR      R1,??DataTable140  ;; 0x77, 0x62, 0x00, 0x00
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       FS_FOpen
   \   00000028   0050B0E1           MOVS     R5,R0
   \   0000002C   0D00000A           BEQ      ??FRWWriteFile_0
   3343          	{
   3344          		// file opened - read the data and be sure it's the right version
   3345          		byteswritten = FS_FWrite(pNewData, size, 1, pFile);
   \   00000030   0530A0E1           MOV      R3,R5
   \   00000034   0120A0E3           MOV      R2,#+1
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       FS_FWrite
   \   00000044   0040A0E1           MOV      R4,R0
   3346          		FS_FClose(pFile);
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           BL       FS_FClose
   3347          		FS_Sync("");			// added to ensure caches and buffers flushed -- gas 4/29/11
   \   00000050   ........           ADR      R0,??DataTable142  ;; ""
   \   00000054   ........           BL       FS_Sync
   3348          		if (byteswritten != 1)
   \   00000058   010054E3           CMP      R4,#+1
   \   0000005C   0100001A           BNE      ??FRWWriteFile_0
   3349          			return -1;			// failed writing to SD card
   3350          	}
   3351          	else return -1;			// failed writing to SD card
   3352          
   3353          #endif
   3354          
   3355          	return 0;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   7080BDE8           POP      {R4-R6,PC}
   \                     ??FRWWriteFile_0:
   \   00000068   0000E0E3           MVN      R0,#+0
   \   0000006C   7080BDE8           POP      {R4-R6,PC}       ;; return
   3356          }
   3357          
   3358          
   3359          #ifdef _WINDOWS
   3360          
   3361          //
   3362          // Determine if we are running on a hard disk or a removable media and then
   3363          // build the required executable directory structure and move is there so that
   3364          // all subsequent file access can work relative to our current location.
   3365          //
   3366          void ConfigureHomeDirectory(void)
   3367          {
   3368          	char* pPathInit;
   3369          
   3370          // If running on removable media then run here, done
   3371          	if (GetDriveType(NULL) == DRIVE_REMOVABLE)	// See if the current drive is a removable media
   3372          		return;
   3373          
   3374          // If ConfigFiles folder is in the current directory then run here, done
   3375          	if (SetCurrentDirectory("ConfigFiles"))
   3376          		return;
   3377          
   3378          // If we get here we are going to run in the My Documents folder, whether it exists or not
   3379          // so just proceed to make it and go there.
   3380          	pPathInit = getenv("USERPROFILE");			// Get 'user path' (c:\Documents and Settings\USERNAME)
   3381          	SetCurrentDirectory(pPathInit);
   3382          
   3383          	SetCurrentDirectory("My Documents");
   3384          
   3385          	CreateDirectory("Traqmate Data", NULL);
   3386          	SetCurrentDirectory("Traqmate Data");
   3387          
   3388          	CreateDirectory("Traqdash PC", NULL);
   3389          	SetCurrentDirectory("Traqdash PC");
   3390          }
   3391          
   3392          // reference utilities
   3393          	//_getcwd(directory, 255);			// Get current working drive and directory
   3394          	//if (directory[0] == 'c')
   3395          	//	removableMedia = false;
   3396          	//else removableMedia = true;
   3397          
   3398          	//if (_getdrive() == 3)				// Get drive letter enumeration (a = 1, b = 2, c = 3,...)
   3399          	//	removableMedia = false;
   3400          	//else removableMedia = true;
   3401          
   3402          	//if (!strcmp(directory + 1, ":"))
   3403          	//	runningInRoot = true;
   3404          	//else runningInRoot = false;
   3405          #endif
   3406          
   3407          
   3408          //
   3409          // Make sure target directory structure exists, build them if they don't
   3410          // Note, this builds from the 'application root directory' in a downward direction.
   3411          // If we are running on the PC ConfigureHomeDirectory must be called first
   3412          // to create the proper root directory and move us there.
   3413          //
   3414          // Note: the directories must be built in logical order - from top to bottom
   3415          // If a directory already exisits that call will fail and decrement the return counter.
   3416          //

   \                                 In section .text, align 4, keep-with-next
   3417          int InitializeDirectoryStructure(void)
   3418          {
   \                     InitializeDirectoryStructure:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3419          	int retval;
   3420          
   3421          #ifdef _WINDOWS
   3422          	retval = CreateDirectory(SYSTEM_PATH, NULL);
   3423          	retval += CreateDirectory(DRIVER_PATH, NULL);
   3424          	retval += CreateDirectory(VEHICLE_PATH, NULL);
   3425          	retval += CreateDirectory(TRACK_PATH, NULL);
   3426          	retval += CreateDirectory(MY_SESSIONS_PATH, NULL);
   3427          
   3428          	return retval;
   3429          #else
   3430          	if (unsavedSysData.sdCardInserted)
   \   00000004   ........           LDR      R0,??DataTable154_3
   \   00000008   900390E5           LDR      R0,[R0, #+912]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1600000A           BEQ      ??InitializeDirectoryStructure_0
   3431          	{
   3432          		retval = FS_MkDir(SYSTEM_PATH);
   \   00000014   ............       ADRL     R0,SYSTEM_PATH
   \              ....        
   \   0000001C   ........           BL       FS_MkDir
   \   00000020   0040A0E1           MOV      R4,R0
   3433          		retval += FS_MkDir(DRIVER_PATH);
   \   00000024   ............       ADRL     R0,DRIVER_PATH
   \              ....        
   \   0000002C   ........           BL       FS_MkDir
   \   00000030   0050A0E1           MOV      R5,R0
   3434          		retval += FS_MkDir(VEHICLE_PATH);
   \   00000034   ............       ADRL     R0,VEHICLE_PATH
   \              ....        
   \   0000003C   ........           BL       FS_MkDir
   \   00000040   0060A0E1           MOV      R6,R0
   3435          		retval += FS_MkDir(TRACK_PATH);
   \   00000044   ............       ADRL     R0,TRACK_PATH
   \              ....        
   \   0000004C   ........           BL       FS_MkDir
   3436          		retval += FS_MkDir(MY_SESSIONS_PATH);
   3437          
   3438          		return retval;
   \   00000050   041085E0           ADD      R1,R5,R4
   \   00000054   011086E0           ADD      R1,R6,R1
   \   00000058   014080E0           ADD      R4,R0,R1
   \   0000005C   ............       ADRL     R0,MY_SESSIONS_PATH
   \              ....        
   \   00000064   ........           BL       FS_MkDir
   \   00000068   040080E0           ADD      R0,R0,R4
   \   0000006C   7080BDE8           POP      {R4-R6,PC}
   3439          	}
   3440          	else return -1;
   \                     ??InitializeDirectoryStructure_0:
   \   00000070   0000E0E3           MVN      R0,#+0
   \   00000074   7080BDE8           POP      {R4-R6,PC}       ;; return
   3441          #endif
   3442          }
   3443          

   \                                 In section .text, align 4, keep-with-next
   3444          void InitializeData(void)
   3445          {
   \                     InitializeData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3446          	SetDefaultSystemData(false);
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   ........           BL       SetDefaultSystemData
   3447          	SetDefaultVehicleData(false);
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       SetDefaultVehicleData
   3448          	SetDefaultTrackData();
   \   00000014   ........           LDR      R4,??DataTable148_1
   \   00000018   A010A0E3           MOV      R1,#+160
   \   0000001C   501D81E3           ORR      R1,R1,#0x1400
   \   00000020   EC0F84E2           ADD      R0,R4,#+944
   \   00000024   ........           BL       __aeabi_memclr4
   \   00000028   ............       ADRL     R1,TRACK_VERSION
   \              ....        
   \   00000030   EC0F84E2           ADD      R0,R4,#+944
   \   00000034   ........           BL       strcpy
   \   00000038   3C00A0E3           MOV      R0,#+60
   \   0000003C   F103C4E5           STRB     R0,[R4, #+1009]
   3449          	SetDefaultDriverData();
   \   00000040   5000A0E3           MOV      R0,#+80
   \   00000044   600D80E3           ORR      R0,R0,#0x1800
   \   00000048   040080E0           ADD      R0,R0,R4
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   0030A0E3           MOV      R3,#+0
   \   00000058   00C0A0E3           MOV      R12,#+0
   \   0000005C   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   00000060   1040BDE8           POP      {R4,LR}
   \   00000064   100040E2           SUB      R0,R0,#+16
   \   00000068   ............       ADRL     R1,DRIVER_VERSION
   \              ....        
   \   00000070   ........           B        strcpy           ;; tailcall
   3450          }
   3451          

   \                                 In section .text, align 4, keep-with-next
   3452          void SetDefaultSystemData(char full)
   3453          {
   \                     SetDefaultSystemData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3454          	if (full)
   \   00000004   ........           LDR      R4,??DataTable148_1
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0300000A           BEQ      ??SetDefaultSystemData_0
   3455          	{
   3456          		memset(&sysData, 0, sizeof(sysData));
   \   00000010   F410A0E3           MOV      R1,#+244
   \   00000014   770F84E2           ADD      R0,R4,#+476
   \   00000018   ........           BL       __aeabi_memclr4
   3457          		InitializeCriticalVariables();
   \   0000001C   ........           BL       InitializeCriticalVariables
   3458          	}
   3459          
   3460          	strcpy(sysData.version, SYSTEM_VERSION);
   \                     ??SetDefaultSystemData_0:
   \   00000020   ............       ADRL     R1,SYSTEM_VERSION
   \              ....        
   \   00000028   770F84E2           ADD      R0,R4,#+476
   \   0000002C   ........           BL       strcpy
   3461          	sysData.lappingMode = true;
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   8E02C4E5           STRB     R0,[R4, #+654]
   3462          	sysData.lastGaugeScreen = DEFAULT_RACE_MODE_SCREEN_INDEX;				// Set to default screen (note: lastXxxScreen is an Index, not an ID
   \   00000038   F80184E5           STR      R0,[R4, #+504]
   3463          	sysData.lastInstrumentsScreen = DEFAULT_INSTRUMENTS_MODE_SCREEN_INDEX;	// See GAUGE_SCREEN_LISTs in RunningGauges.c
   \   0000003C   000284E5           STR      R0,[R4, #+512]
   3464          	sysData.lastDriveScreen = DEFAULT_DRIVE_MODE_SCREEN_INDEX;
   3465          	sysData.launchGForce = 3;				// 3 = 0.3G launch force
   3466          	sysData.lapMeter = 1;					// +- 1.0 predictive lap meter scale
   \   00000040   5502C4E5           STRB     R0,[R4, #+597]
   3467          	sysData.timeZone = -5;					// -5 = Eastern
   \   00000044   0400E0E3           MVN      R0,#+4
   \   00000048   5602C4E5           STRB     R0,[R4, #+598]
   3468          	sysData.dstOn = false;
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   5702C4E5           STRB     R0,[R4, #+599]
   3469          	sysData.autoOn = false;
   \   00000054   5802C4E5           STRB     R0,[R4, #+600]
   3470          	sysData.autoRecord = false;
   \   00000058   5902C4E5           STRB     R0,[R4, #+601]
   \   0000005C   0210A0E3           MOV      R1,#+2
   3471          	sysData.radius = DEFAULT_RADIUS;
   \   00000060   A100A0E3           MOV      R0,#+161
   \   00000064   FC1184E5           STR      R1,[R4, #+508]
   \   00000068   900284E5           STR      R0,[R4, #+656]
   \   0000006C   0310A0E3           MOV      R1,#+3
   3472          	SetMandatoryDefaultSelections();
   \   00000070   5A00A0E3           MOV      R0,#+90
   \   00000074   5412C4E5           STRB     R1,[R4, #+596]
   \   00000078   800F80E3           ORR      R0,R0,#0x200
   \   0000007C   ............       ADRL     R1,DEFAULT_DRIVER
   \              ....        
   \   00000084   040080E0           ADD      R0,R0,R4
   \   00000088   ........           BL       strcpy
   \   0000008C   6B00A0E3           MOV      R0,#+107
   \   00000090   800F80E3           ORR      R0,R0,#0x200
   \   00000094   ............       ADRL     R1,DEFAULT_VEHICLE
   \              ....        
   \   0000009C   040080E0           ADD      R0,R0,R4
   \   000000A0   ........           BL       strcpy
   \   000000A4   ............       ADRL     R1,DEFAULT_TRACK
   \              ....        
   \   000000AC   9F0F84E2           ADD      R0,R4,#+636
   \   000000B0   ........           BL       strcpy
   3473          	sysData.selectedSessionType = ROADRACE_TYPE;
   \   000000B4   5200A0E3           MOV      R0,#+82
   \   000000B8   AC02C4E5           STRB     R0,[R4, #+684]
   3474          	SetConfigurableItem( VMIN );			// Provide default to dummy value of VMIN input monitor
   \   000000BC   2500A0E3           MOV      R0,#+37
   \   000000C0   ........           BL       SetConfigurableItem
   3475          	SetDefaultTempCalData();
   \   000000C4   1800A0E3           MOV      R0,#+24
   \   000000C8   B40284E5           STR      R0,[R4, #+692]
   \   000000CC   0500A0E3           MOV      R0,#+5
   \   000000D0   ........           BL       GetADC
   \   000000D4   B80284E5           STR      R0,[R4, #+696]
   \   000000D8   ........           BL       CalculateTempCorrection
   \   000000DC   BC0284E5           STR      R0,[R4, #+700]
   3476          }
   \   000000E0   1080BDE8           POP      {R4,PC}          ;; return
   3477          
   3478          //
   3479          // These selections MUST be made at initial power up AND when the SD car is reformatted!
   3480          //

   \                                 In section .text, align 4, keep-with-next
   3481          void SetMandatoryDefaultSelections(void)
   3482          {
   \                     SetMandatoryDefaultSelections:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3483          	strcpy(sysData.driver, DEFAULT_DRIVER);
   \   00000004   ........           LDR      R4,??DataTable148_1
   \   00000008   5A00A0E3           MOV      R0,#+90
   \   0000000C   800F80E3           ORR      R0,R0,#0x200
   \   00000010   ............       ADRL     R1,DEFAULT_DRIVER
   \              ....        
   \   00000018   040080E0           ADD      R0,R0,R4
   \   0000001C   ........           BL       strcpy
   3484          	strcpy(sysData.vehicle, DEFAULT_VEHICLE);
   \   00000020   6B00A0E3           MOV      R0,#+107
   \   00000024   800F80E3           ORR      R0,R0,#0x200
   \   00000028   ............       ADRL     R1,DEFAULT_VEHICLE
   \              ....        
   \   00000030   040080E0           ADD      R0,R0,R4
   \   00000034   ........           BL       strcpy
   3485          	strcpy(sysData.track, DEFAULT_TRACK);
   \   00000038   9F0F84E2           ADD      R0,R4,#+636
   \   0000003C   1040BDE8           POP      {R4,LR}
   \   00000040   ............       ADRL     R1,DEFAULT_TRACK
   \              ....        
   \   00000048   ........           B        strcpy           ;; tailcall
   3486          }
   3487          

   \                                 In section .text, align 4, keep-with-next
   3488          void SetDefaultDriverData(void)
   3489          {
   3490          	memset(&driverData, 0, sizeof(driverData));
   \                     SetDefaultDriverData:
   \   00000000   ........           LDR      R0,??DataTable148_2
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   00C0A0E3           MOV      R12,#+0
   \   00000014   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   00000018   100040E2           SUB      R0,R0,#+16
   3491          	strcpy(driverData.version, DRIVER_VERSION);
   \   0000001C   ............       ADRL     R1,DRIVER_VERSION
   \              ....        
   \   00000024   ........           B        strcpy           ;; tailcall
   3492          }
   3493          

   \                                 In section .text, align 4, keep-with-next
   3494          void SetDefaultTrackData(void)
   3495          {
   \                     SetDefaultTrackData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3496          	memset(&trackData, 0, sizeof(trackData));
   \   00000004   ........           LDR      R4,??DataTable148_1
   \   00000008   A010A0E3           MOV      R1,#+160
   \   0000000C   501D81E3           ORR      R1,R1,#0x1400
   \   00000010   EC0F84E2           ADD      R0,R4,#+944
   \   00000014   ........           BL       __aeabi_memclr4
   3497          	strcpy(trackData.version, TRACK_VERSION);
   \   00000018   ............       ADRL     R1,TRACK_VERSION
   \              ....        
   \   00000020   EC0F84E2           ADD      R0,R4,#+944
   \   00000024   ........           BL       strcpy
   3498          	trackData.laptimeHold = 60;
   \   00000028   3C00A0E3           MOV      R0,#+60
   \   0000002C   F103C4E5           STRB     R0,[R4, #+1009]
   3499          }
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return
   3500          
   3501          //
   3502          // SetDefaultVehicleData
   3503          //
   3504          // Input: true = look up in default vehicle table to find this vehicle and use
   3505          //				that data if available, otherwise use "default default" data
   3506          //		  false = just use plain default data (= 99 Mazda Miata)
   3507          // Returns:	nothing
   3508          //

   \                                 In section .text, align 4, keep-with-next
   3509          void SetDefaultVehicleData(int how)
   3510          {
   \                     SetDefaultVehicleData:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   3511          	int i, j;
   3512          
   3513          	memset(&vehicleData, 0, sizeof(vehicleData));
   \   00000004   ........           LDR      R4,??DataTable148_1
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   771FA0E3           MOV      R1,#+476
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       __aeabi_memclr4
   3514          	strcpy(vehicleData.version, VEHICLE_VERSION);
   \   00000018   ............       ADRL     R1,VEHICLE_VERSION
   \              ....        
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       strcpy
   3515          	vehicleData.camera = TD_CAM_MOBIUS;			// Set default TraqDash camera to Mobius and SU camera to none
   \   00000028   2000A0E3           MOV      R0,#+32
   \   0000002C   7400C4E5           STRB     R0,[R4, #+116]
   3516          	for (i = 0; i < 4; i++)
   3517          		SetDefaultAnalogInputData(i);
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   ........           BL       SetDefaultAnalogInputData
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   ........           BL       SetDefaultAnalogInputData
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   ........           BL       SetDefaultAnalogInputData
   \   00000048   0300A0E3           MOV      R0,#+3
   \   0000004C   ........           BL       SetDefaultAnalogInputData
   3518          
   3519          	for (i = 0; i < 2; i++)
   3520          		SetDefaultDigitalInputData(i);
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   ........           BL       SetDefaultDigitalInputData
   \   00000058   0100A0E3           MOV      R0,#+1
   \   0000005C   ........           BL       SetDefaultDigitalInputData
   3521          
   3522          	if (how == true)
   \   00000060   ........           LDR      R5,??DataTable160
   \   00000064   010056E3           CMP      R6,#+1
   \   00000068   1500001A           BNE      ??SetDefaultVehicleData_0
   3523          	{
   3524          		j = 0;
   \   0000006C   0060A0E3           MOV      R6,#+0
   \   00000070   0570A0E1           MOV      R7,R5
   \   00000074   000000EA           B        ??SetDefaultVehicleData_1
   3525          		// see if this vehicle can be found in the pre-defined vehicle table
   3526          		while ('\0' != defaultVehicles[j].vehicleName[0])
   3527          		{
   3528          			if (strcmp(sysData.vehicle, defaultVehicles[j].vehicleName) == 0)
   3529          			{
   3530          				// Found the vehicle!  Copy the data and exit
   3531          				memcpy(&vehicleData.usbCameraDelay, &(defaultVehicles[j].carData), sizeof(defaultVehicles[j].carData));
   3532          				return;
   3533          			}
   3534          			j++;
   \                     ??SetDefaultVehicleData_2:
   \   00000078   016086E2           ADD      R6,R6,#+1
   \                     ??SetDefaultVehicleData_1:
   \   0000007C   000097E5           LDR      R0,[R7, #+0]
   \   00000080   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0D00000A           BEQ      ??SetDefaultVehicleData_0
   \   0000008C   6B00A0E3           MOV      R0,#+107
   \   00000090   800F80E3           ORR      R0,R0,#0x200
   \   00000094   6C1097E4           LDR      R1,[R7], #+108
   \   00000098   040080E0           ADD      R0,R0,R4
   \   0000009C   ........           BL       strcmp
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   F3FFFF1A           BNE      ??SetDefaultVehicleData_2
   \                     ??SetDefaultVehicleData_3:
   \   000000A8   6C00A0E3           MOV      R0,#+108
   \   000000AC   905621E0           MLA      R1,R0,R6,R5
   \   000000B0   0C0084E2           ADD      R0,R4,#+12
   \   000000B4   F041BDE8           POP      {R4-R8,LR}
   \   000000B8   6820A0E3           MOV      R2,#+104
   \   000000BC   041081E2           ADD      R1,R1,#+4
   \   000000C0   ........           B        __aeabi_memcpy   ;; tailcall
   3535          		} // while
   3536          		// Did not find vehicle, use default data
   3537          	}
   3538          
   3539          	// otherwise use normal default data (Spec Miata 99-05)
   3540          	// Find DEFAULT_VEHICLE in list
   3541          	j = 0;
   \                     ??SetDefaultVehicleData_0:
   \   000000C4   0060A0E3           MOV      R6,#+0
   \   000000C8   0570A0E1           MOV      R7,R5
   \   000000CC   ............       ADRL     R8,DEFAULT_VEHICLE
   \              ....        
   \   000000D4   000000EA           B        ??SetDefaultVehicleData_4
   3542          	while ('\0' != defaultVehicles[j].vehicleName[0])
   3543          	{
   3544          		if (strcmp(DEFAULT_VEHICLE, defaultVehicles[j].vehicleName) == 0)
   3545          			break;
   3546          		else j++;
   \                     ??SetDefaultVehicleData_5:
   \   000000D8   016086E2           ADD      R6,R6,#+1
   \                     ??SetDefaultVehicleData_4:
   \   000000DC   000097E5           LDR      R0,[R7, #+0]
   \   000000E0   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   0400000A           BEQ      ??SetDefaultVehicleData_6
   \   000000EC   6C1097E4           LDR      R1,[R7], #+108
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   ........           BL       strcmp
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   F5FFFF1A           BNE      ??SetDefaultVehicleData_5
   3547          	}
   3548          	if ('\0' == defaultVehicles[j].vehicleName[0])
   \                     ??SetDefaultVehicleData_6:
   \   00000100   6C00A0E3           MOV      R0,#+108
   \   00000104   905621E0           MLA      R1,R0,R6,R5
   \   00000108   000091E5           LDR      R0,[R1, #+0]
   \   0000010C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   E3FFFF1A           BNE      ??SetDefaultVehicleData_3
   3549          		j = 0;			// In case search fails us first vehicle in list
   \   00000118   0060A0E3           MOV      R6,#+0
   \   0000011C   E1FFFFEA           B        ??SetDefaultVehicleData_3
   3550          
   3551          	memcpy(&vehicleData.usbCameraDelay, &(defaultVehicles[j].carData), sizeof(defaultVehicles[j].carData));
   3552          }
   3553          

   \                                 In section .text, align 4, keep-with-next
   3554          void SetDefaultAnalogInputData(int i)
   3555          {
   \                     SetDefaultAnalogInputData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3556          	switch (i) {	
   \   00000004   030050E3           CMP      R0,#+3
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SetDefaultAnalogInputData_0:
   \   0000000C   7F00008A           BHI      ??SetDefaultAnalogInputData_1
   \   00000010   020000EA           B        ??SetDefaultAnalogInputData_2
   \   00000014   1F0000EA           B        ??SetDefaultAnalogInputData_3
   \   00000018   3C0000EA           B        ??SetDefaultAnalogInputData_4
   \   0000001C   5C0000EA           B        ??SetDefaultAnalogInputData_5
   3557          		case 0:		// AEM Air/Fuel Meter
   3558          			vehicleData.analogInput[i].upperAlarmTriggerComparison = ABOVE;
   \                     ??SetDefaultAnalogInputData_2:
   \   00000020   ........           LDR      R4,??DataTable148_1
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   9500C4E5           STRB     R0,[R4, #+149]
   3559          			vehicleData.analogInput[i].upperAlarmTriggerLevel = 13.7;
   \   0000002C   ........           LDR      R0,??DataTable160_2  ;; 0x415b3333
   3560          			vehicleData.analogInput[i].enabled = false;
   3561          			vehicleData.analogInput[i].EnableLED1 = false;
   3562          			vehicleData.analogInput[i].EnableLED2 = false;
   3563          			vehicleData.analogInput[i].highValuePoint = 18.0;
   3564          			vehicleData.analogInput[i].lowValuePoint = 8.5;
   3565          			vehicleData.analogInput[i].highVoltagePoint = 5.0;
   3566          			vehicleData.analogInput[i].lowVoltagePoint = 0.0;
   3567          			strcpy(vehicleData.analogInput[i].Name, "AEM AirFuel");
   \   00000030   781084E2           ADD      R1,R4,#+120
   \   00000034   9C0084E5           STR      R0,[R4, #+156]
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   9300C4E5           STRB     R0,[R4, #+147]
   \   00000040   B40BC4E1           STRH     R0,[R4, #+180]
   \   00000044   4004A0E3           MOV      R0,#+1073741824
   \   00000048   640780E3           ORR      R0,R0,#0x1900000
   \   0000004C   B00084E5           STR      R0,[R4, #+176]
   \   00000050   880840E2           SUB      R0,R0,#+8912896
   \   00000054   AC0084E5           STR      R0,[R4, #+172]
   \   00000058   680840E2           SUB      R0,R0,#+6815744
   \   0000005C   A80084E5           STR      R0,[R4, #+168]
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   A40084E5           STR      R0,[R4, #+164]
   \   00000068   ............       ADRL     R0,`?<Constant "AEM AirFuel">`
   \              ....        
   \   00000070   0C10B0E8           LDM      R0!,{R2,R3,R12}
   3568          			strcpy(vehicleData.analogInput[i].Units, "Ratio");
   \   00000074   890084E2           ADD      R0,R4,#+137
   \   00000078   0C10A1E8           STM      R1!,{R2,R3,R12}
   \   0000007C   0620A0E3           MOV      R2,#+6
   \   00000080   ............       ADRL     R1,`?<Constant "Ratio">`
   \              ....        
   \   00000088   ........           BL       __aeabi_memcpy
   3569          			vehicleData.analogInput[i].inputRange = 5;
   \   0000008C   0500A0E3           MOV      R0,#+5
   \   00000090   A000C4E5           STRB     R0,[R4, #+160]
   3570          			break;
   \   00000094   1080BDE8           POP      {R4,PC}
   3571          		case 1:		// AEM Pressure
   3572          			vehicleData.analogInput[i].upperAlarmTriggerComparison = ABOVE;
   \                     ??SetDefaultAnalogInputData_3:
   \   00000098   ........           LDR      R4,??DataTable148_1
   \   0000009C   0100A0E3           MOV      R0,#+1
   \   000000A0   D500C4E5           STRB     R0,[R4, #+213]
   3573          			vehicleData.analogInput[i].upperAlarmTriggerLevel = 20.0;
   \   000000A4   4004A0E3           MOV      R0,#+1073741824
   \   000000A8   680780E3           ORR      R0,R0,#0x1A00000
   \   000000AC   DC0084E5           STR      R0,[R4, #+220]
   3574          			vehicleData.analogInput[i].enabled = false;
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   D300C4E5           STRB     R0,[R4, #+211]
   3575          			vehicleData.analogInput[i].EnableLED1 = false;
   \   000000B8   B40FC4E1           STRH     R0,[R4, #+244]
   3576          			vehicleData.analogInput[i].EnableLED2 = false;
   3577          			vehicleData.analogInput[i].highValuePoint = 35.3;
   \   000000BC   ........           LDR      R0,??DataTable160_3  ;; 0x420d3333
   3578          			vehicleData.analogInput[i].lowValuePoint = -14.7;
   3579          			vehicleData.analogInput[i].highVoltagePoint = 4.5;
   3580          			vehicleData.analogInput[i].lowVoltagePoint = 0.5;
   3581          			strcpy(vehicleData.analogInput[i].Name, "AEM MAP75");
   \   000000C0   0A20A0E3           MOV      R2,#+10
   \   000000C4   F00084E5           STR      R0,[R4, #+240]
   \   000000C8   ........           LDR      R0,??DataTable160_4  ;; 0xc16b3333
   \   000000CC   ............       ADRL     R1,`?<Constant "AEM MAP75">`
   \              ....        
   \   000000D4   EC0084E5           STR      R0,[R4, #+236]
   \   000000D8   4004A0E3           MOV      R0,#+1073741824
   \   000000DC   900880E3           ORR      R0,R0,#0x900000
   \   000000E0   E80084E5           STR      R0,[R4, #+232]
   \   000000E4   FC05A0E3           MOV      R0,#+1056964608
   \   000000E8   E40084E5           STR      R0,[R4, #+228]
   \   000000EC   B80084E2           ADD      R0,R4,#+184
   \   000000F0   ........           BL       __aeabi_memcpy4
   3582          			strcpy(vehicleData.analogInput[i].Units, "PSI");
   \   000000F4   0420A0E3           MOV      R2,#+4
   \   000000F8   ........           ADR      R1,??DataTable153  ;; "PSI"
   \   000000FC   C90084E2           ADD      R0,R4,#+201
   \   00000100   ........           BL       __aeabi_memcpy
   3583          			vehicleData.analogInput[i].inputRange = 5;
   \   00000104   0500A0E3           MOV      R0,#+5
   \   00000108   E000C4E5           STRB     R0,[R4, #+224]
   3584          			break;
   \   0000010C   1080BDE8           POP      {R4,PC}
   3585          #if 0		// switched to PLX
   3586          		case 2:		// AEM Temperature
   3587          			// v = iR, v=4.71V reference, assume 40k internal resistance
   3588          			// 0 deg c = 32 f
   3589          			// 0 deg c = 9.5k ohm = .904 volts
   3590          			// 110 deg c = 230 f
   3591          			// 110 deg c = 134.7 ohm = .0158 volts
   3592          			vehicleData.analogInput[i].upperAlarmTriggerComparison = ABOVE;
   3593          			vehicleData.analogInput[i].upperAlarmTriggerLevel = 210.0;
   3594          			vehicleData.analogInput[i].enabled = false;
   3595          			vehicleData.analogInput[i].EnableLED1 = false;
   3596          			vehicleData.analogInput[i].EnableLED2 = false;
   3597          			vehicleData.analogInput[i].highValuePoint = 32.0;
   3598          			vehicleData.analogInput[i].lowValuePoint = 230.0;
   3599          			vehicleData.analogInput[i].highVoltagePoint = 0.904;
   3600          			vehicleData.analogInput[i].lowVoltagePoint = 0.0158;
   3601          			strcpy(vehicleData.analogInput[i].Name, "AEM Temp");
   3602          			strcpy(vehicleData.analogInput[i].Units, "DegF");
   3603          			vehicleData.analogInput[i].inputRange = 5;
   3604          			break;
   3605          #endif
   3606          		case 2:		// PLX Temperature
   3607          			vehicleData.analogInput[i].upperAlarmTriggerComparison = ABOVE;
   \                     ??SetDefaultAnalogInputData_4:
   \   00000110   ........           LDR      R4,??DataTable148_1
   \   00000114   0100A0E3           MOV      R0,#+1
   \   00000118   1501C4E5           STRB     R0,[R4, #+277]
   3608          			vehicleData.analogInput[i].upperAlarmTriggerLevel = 210.0;
   \   0000011C   4304A0E3           MOV      R0,#+1124073472
   \   00000120   520880E3           ORR      R0,R0,#0x520000
   \   00000124   1C0184E5           STR      R0,[R4, #+284]
   3609          			vehicleData.analogInput[i].enabled = false;
   \   00000128   0000A0E3           MOV      R0,#+0
   \   0000012C   1301C4E5           STRB     R0,[R4, #+275]
   3610          			vehicleData.analogInput[i].EnableLED1 = false;
   \   00000130   3401C4E5           STRB     R0,[R4, #+308]
   3611          			vehicleData.analogInput[i].EnableLED2 = false;
   \   00000134   3501C4E5           STRB     R0,[R4, #+309]
   3612          			vehicleData.analogInput[i].highValuePoint = 302.0;
   \   00000138   4304A0E3           MOV      R0,#+1124073472
   \   0000013C   970880E3           ORR      R0,R0,#0x970000
   \   00000140   300184E5           STR      R0,[R4, #+304]
   3613          			vehicleData.analogInput[i].lowValuePoint = 32.0;
   \   00000144   4204A0E3           MOV      R0,#+1107296256
   \   00000148   2C0184E5           STR      R0,[R4, #+300]
   3614          			vehicleData.analogInput[i].highVoltagePoint = 5.0;
   \   0000014C   580740E2           SUB      R0,R0,#+23068672
   \   00000150   280184E5           STR      R0,[R4, #+296]
   3615          			vehicleData.analogInput[i].lowVoltagePoint = 0.0;
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   240184E5           STR      R0,[R4, #+292]
   3616          			strcpy(vehicleData.analogInput[i].Name, "PLX Temp");
   \   0000015C   0920A0E3           MOV      R2,#+9
   \   00000160   ............       ADRL     R1,`?<Constant "PLX Temp">`
   \              ....        
   \   00000168   F80084E2           ADD      R0,R4,#+248
   \   0000016C   ........           BL       __aeabi_memcpy4
   3617          			strcpy(vehicleData.analogInput[i].Units, "DegF");
   \   00000170   0520A0E3           MOV      R2,#+5
   \   00000174   410F82E2           ADD      R0,R2,#+260
   \   00000178   ............       ADRL     R1,`?<Constant "DegF">`
   \              ....        
   \   00000180   040080E0           ADD      R0,R0,R4
   \   00000184   ........           BL       __aeabi_memcpy
   3618          			vehicleData.analogInput[i].inputRange = 5;
   \   00000188   0500A0E3           MOV      R0,#+5
   \   0000018C   2001C4E5           STRB     R0,[R4, #+288]
   3619          			break;
   \   00000190   1080BDE8           POP      {R4,PC}
   3620          		case 3:		// Battery Voltage
   3621          			vehicleData.analogInput[i].lowerAlarmTriggerComparison = BELOW;
   \                     ??SetDefaultAnalogInputData_5:
   \   00000194   ........           LDR      R4,??DataTable148_1
   \   00000198   0200A0E3           MOV      R0,#+2
   \   0000019C   5401C4E5           STRB     R0,[R4, #+340]
   3622          			vehicleData.analogInput[i].lowerAlarmTriggerLevel = 11.5;
   \   000001A0   4004A0E3           MOV      R0,#+1073741824
   \   000001A4   4E0780E3           ORR      R0,R0,#0x1380000
   \   000001A8   580184E5           STR      R0,[R4, #+344]
   3623          			vehicleData.analogInput[i].enabled = false;
   \   000001AC   0000A0E3           MOV      R0,#+0
   \   000001B0   5301C4E5           STRB     R0,[R4, #+339]
   3624          			vehicleData.analogInput[i].EnableLED1 = false;
   \   000001B4   7401C4E5           STRB     R0,[R4, #+372]
   3625          			vehicleData.analogInput[i].EnableLED2 = false;
   \   000001B8   7501C4E5           STRB     R0,[R4, #+373]
   3626          			vehicleData.analogInput[i].highValuePoint = 20.0;
   \   000001BC   4004A0E3           MOV      R0,#+1073741824
   \   000001C0   680780E3           ORR      R0,R0,#0x1A00000
   \   000001C4   700184E5           STR      R0,[R4, #+368]
   3627          			vehicleData.analogInput[i].lowValuePoint = 0.0;
   3628          			vehicleData.analogInput[i].highVoltagePoint = 20.0;
   \   000001C8   680184E5           STR      R0,[R4, #+360]
   \   000001CC   0010A0E3           MOV      R1,#+0
   3629          			vehicleData.analogInput[i].lowVoltagePoint = 0.0;
   3630          			strcpy(vehicleData.analogInput[i].Name, "Battery");
   \   000001D0   ............       ADRL     R0,`?<Constant "Battery">`
   \              ....        
   \   000001D8   6C1184E5           STR      R1,[R4, #+364]
   \   000001DC   641184E5           STR      R1,[R4, #+356]
   \   000001E0   0C00B0E8           LDM      R0!,{R2,R3}
   \   000001E4   4E1F84E2           ADD      R1,R4,#+312
   \   000001E8   0C00A1E8           STM      R1!,{R2,R3}
   3631          			strcpy(vehicleData.analogInput[i].Units, "Volts");
   \   000001EC   4900A0E3           MOV      R0,#+73
   \   000001F0   400F80E3           ORR      R0,R0,#0x100
   \   000001F4   0620A0E3           MOV      R2,#+6
   \   000001F8   ............       ADRL     R1,`?<Constant "Volts">`
   \              ....        
   \   00000200   040080E0           ADD      R0,R0,R4
   \   00000204   ........           BL       __aeabi_memcpy
   3632          			vehicleData.analogInput[i].inputRange = 20;
   \   00000208   1400A0E3           MOV      R0,#+20
   \   0000020C   6001C4E5           STRB     R0,[R4, #+352]
   3633          			break;
   3634          	} // switch
   3635          }
   \                     ??SetDefaultAnalogInputData_1:
   \   00000210   1080BDE8           POP      {R4,PC}          ;; return
   3636          

   \                                 In section .text, align 4, keep-with-next
   3637          void SetDefaultDigitalInputData(int i)
   3638          {
   \                     SetDefaultDigitalInputData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3639          	char scratch[10];
   3640          
   3641          	switch (i) {	
   \   00000004   2F10A0E3           MOV      R1,#+47
   \   00000008   ........           LDR      R2,??DataTable160_5
   \   0000000C   912024E0           MLA      R4,R1,R0,R2
   \   00000010   9650A0E3           MOV      R5,#+150
   \   00000014   405F85E3           ORR      R5,R5,#0x100
   \   00000018   10D04DE2           SUB      SP,SP,#+16
   \   0000001C   0D6045E2           SUB      R6,R5,#+13
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   692FA0E3           MOV      R2,#+420
   \   00000028   010050E3           CMP      R0,#+1
   \   0000002C   1400001A           BNE      ??SetDefaultDigitalInputData_0
   3642          		case 1:		// Brake light
   3643          			vehicleData.digitalInput[i].alarmTriggerState = DI_OFF;
   \   00000030   0410C2E7           STRB     R1,[R2, +R4]
   3644          			vehicleData.digitalInput[i].enabled = false;
   \   00000034   A311C4E5           STRB     R1,[R4, #+419]
   3645          			vehicleData.digitalInput[i].EnableLED1 = false;
   \   00000038   A511C4E5           STRB     R1,[R4, #+421]
   3646          			vehicleData.digitalInput[i].EnableLED2 = false;
   \   0000003C   A611C4E5           STRB     R1,[R4, #+422]
   3647          			strcpy(vehicleData.digitalInput[i].Name, "Brake");
   \   00000040   0620A0E3           MOV      R2,#+6
   \   00000044   ............       ADRL     R1,`?<Constant "Brake">`
   \              ....        
   \   0000004C   5E0F84E2           ADD      R0,R4,#+376
   \   00000050   ........           BL       __aeabi_memcpy
   3648          			strcpy(vehicleData.digitalInput[i].HighName, "Go");
   \   00000054   ........           ADR      R0,??DataTable154  ;; 0x47, 0x6F, 0x00, 0x00
   \   00000058   0020D0E5           LDRB     R2,[R0, #0]
   \   0000005C   041086E0           ADD      R1,R6,R4
   \   00000060   0020C1E5           STRB     R2,[R1, #+0]
   \   00000064   0120D0E5           LDRB     R2,[R0, #+1]
   \   00000068   0120C1E5           STRB     R2,[R1, #+1]
   \   0000006C   0220D0E5           LDRB     R2,[R0, #+2]
   \   00000070   0220C1E5           STRB     R2,[R1, #+2]
   3649          			strcpy(vehicleData.digitalInput[i].LowName, "Stop");
   \   00000074   0520A0E3           MOV      R2,#+5
   \   00000078   ............       ADRL     R1,`?<Constant "Stop">`
   \              ....        
   \   00000080   160000EA           B        ??SetDefaultDigitalInputData_1
   3650          			break;
   3651          		default:
   3652          		case 0:		// Usually camera so set generic
   3653          			vehicleData.digitalInput[i].alarmTriggerState = DI_ON;
   \                     ??SetDefaultDigitalInputData_0:
   \   00000084   0130A0E3           MOV      R3,#+1
   \   00000088   0430C2E7           STRB     R3,[R2, +R4]
   3654          			vehicleData.digitalInput[i].enabled = false;
   \   0000008C   A311C4E5           STRB     R1,[R4, #+419]
   3655          			vehicleData.digitalInput[i].EnableLED1 = false;
   \   00000090   A511C4E5           STRB     R1,[R4, #+421]
   3656          			vehicleData.digitalInput[i].EnableLED2 = false;
   \   00000094   A611C4E5           STRB     R1,[R4, #+422]
   3657          			sprintf(scratch, "Digital %d", i + 4);
   \   00000098   042080E2           ADD      R2,R0,#+4
   \   0000009C   ............       ADRL     R1,`?<Constant "Digital %d">`
   \              ....        
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   ........           BL       sprintf
   3658          			strcpy(vehicleData.digitalInput[i].Name, scratch);
   \   000000AC   0D10A0E1           MOV      R1,SP
   \   000000B0   5E0F84E2           ADD      R0,R4,#+376
   \   000000B4   ........           BL       strcpy
   3659          			strcpy(vehicleData.digitalInput[i].HighName, "ON");
   \   000000B8   ........           ADR      R0,??DataTable154_1  ;; 0x4F, 0x4E, 0x00, 0x00
   \   000000BC   0020D0E5           LDRB     R2,[R0, #0]
   \   000000C0   041086E0           ADD      R1,R6,R4
   \   000000C4   0020C1E5           STRB     R2,[R1, #+0]
   \   000000C8   0120D0E5           LDRB     R2,[R0, #+1]
   \   000000CC   0120C1E5           STRB     R2,[R1, #+1]
   \   000000D0   0220D0E5           LDRB     R2,[R0, #+2]
   \   000000D4   0220C1E5           STRB     R2,[R1, #+2]
   3660          			strcpy(vehicleData.digitalInput[i].LowName, "OFF");
   \   000000D8   0420A0E3           MOV      R2,#+4
   \   000000DC   ........           ADR      R1,??DataTable154_2  ;; "OFF"
   \                     ??SetDefaultDigitalInputData_1:
   \   000000E0   040085E0           ADD      R0,R5,R4
   \   000000E4   ........           BL       __aeabi_memcpy
   3661          			break;
   3662          	} // switch
   3663          }
   \   000000E8   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
   3664          

   \                                 In section .text, align 4, keep-with-next
   3665          void SetDefaultTach(void)
   3666          {
   3667          	vehicleData.tach.upperRedStart = 7000;
   \                     SetDefaultTach:
   \   00000000   ........           LDR      R0,??DataTable160_5
   \   00000004   5810A0E3           MOV      R1,#+88
   \   00000008   6C1D81E3           ORR      R1,R1,#0x1B00
   \   0000000C   241080E5           STR      R1,[R0, #+36]
   3668          	vehicleData.tach.upperYellowStart = 5000;
   \   00000010   7D1E41E2           SUB      R1,R1,#+2000
   \   00000014   201080E5           STR      R1,[R0, #+32]
   3669          	vehicleData.tach.greenEnd = 5000;
   \   00000018   1C1080E5           STR      R1,[R0, #+28]
   3670          	vehicleData.tach.greenStart = 4000;
   \   0000001C   FA1EA0E3           MOV      R1,#+4000
   \   00000020   181080E5           STR      R1,[R0, #+24]
   3671          	vehicleData.tach.scaleEnd = 7300;
   \   00000024   8410A0E3           MOV      R1,#+132
   \   00000028   701D81E3           ORR      R1,R1,#0x1C00
   \   0000002C   141080E5           STR      R1,[R0, #+20]
   3672          }
   \   00000030   1EFF2FE1           BX       LR               ;; return
   3673          

   \                                 In section .text, align 4, keep-with-next
   3674          void SetDefaultGears(void)
   3675          {
   3676          	vehicleData.gearRatios[0] = 3.14;
   \                     SetDefaultGears:
   \   00000000   ........           LDR      R0,??DataTable160_5
   \   00000004   ........           LDR      R1,??DataTable160_6  ;; 0x4048f5c3
   \   00000008   301080E5           STR      R1,[R0, #+48]
   3677          	vehicleData.gearRatios[1] = 1.89;
   \   0000000C   ........           LDR      R1,??DataTable160_7  ;; 0x3ff1eb85
   \   00000010   341080E5           STR      R1,[R0, #+52]
   3678          	vehicleData.gearRatios[2] = 1.33;
   \   00000014   ........           LDR      R1,??DataTable160_8  ;; 0x3faa3d71
   \   00000018   381080E5           STR      R1,[R0, #+56]
   3679          	vehicleData.gearRatios[3] = 1.00;
   \   0000001C   FE15A0E3           MOV      R1,#+1065353216
   \   00000020   3C1080E5           STR      R1,[R0, #+60]
   3680          	vehicleData.gearRatios[4] = 0.81;
   \   00000024   ........           LDR      R1,??DataTable160_9  ;; 0x3f4f5c29
   \   00000028   401080E5           STR      R1,[R0, #+64]
   3681          	vehicleData.gearRatios[5] = 0.0;
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   441080E5           STR      R1,[R0, #+68]
   3682          	vehicleData.gearRatios[6] = 0.0;
   \   00000034   481080E5           STR      R1,[R0, #+72]
   3683          	vehicleData.gearRatios[7] = 0.0;
   \   00000038   4C1080E5           STR      R1,[R0, #+76]
   3684          }
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   3685          
   3686          //
   3687          // Initialize veriables required immediately at startup
   3688          //

   \                                 In section .text, align 4, keep-with-next
   3689          void InitializeCriticalVariables(void)
   3690          {
   3691          	unsavedSysData.systemMode = DU2_STARTUP;
   \                     InitializeCriticalVariables:
   \   00000000   ........           LDR      R1,??DataTable160_5
   3692          
   3693          	sysData.AccelerometerSampleRate = 40;
   \   00000004   2820A0E3           MOV      R2,#+40
   \   00000008   E82181E5           STR      R2,[R1, #+488]
   3694          	sysData.GPSSampleRate = 4;
   \   0000000C   0420A0E3           MOV      R2,#+4
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   EC2181E5           STR      R2,[R1, #+492]
   3695          	sysData.screentype = GENERAL_CONFIG_SCREEN_TYPE;
   3696          	sysData.lastConfigScreen = -1;		// -1 = screen not yet set
   \   00000018   0020E0E1           MVN      R2,R0
   \   0000001C   F42181E5           STR      R2,[R1, #+500]
   3697          	sysData.lastGaugeScreen = -1;		// -1 = screen not yet set
   \   00000020   F82181E5           STR      R2,[R1, #+504]
   3698          	sysData.touchScreenCalibrated = FALSE;
   3699          	sysData.units = STD;
   3700          	sysData.backlight = DEFAULT_BACKLIGHT_BRIGHTNESS;
   \   00000024   3220A0E3           MOV      R2,#+50
   \   00000028   442281E5           STR      R2,[R1, #+580]
   3701          	sysData.LEDBrightness = DEFAULT_LED_BRIGHTNESS;
   \   0000002C   4C2281E5           STR      R2,[R1, #+588]
   3702          	sysData.lightLevelWhenIntensitySet = DEFAULT_LIGHT_LEVEL_WHEN_LED_SET;
   \   00000030   502281E5           STR      R2,[R1, #+592]
   3703          	sysData.autoAdjustOn = true;
   \   00000034   0120A0E3           MOV      R2,#+1
   \   00000038   4822C1E5           STRB     R2,[R1, #+584]
   3704          	sysData.timeZone = -5;		// -5 = Eastern
   \   0000003C   0420E0E3           MVN      R2,#+4
   \   00000040   5803C1E5           STRB     R0,[R1, #+856]
   \   00000044   F001C1E5           STRB     R0,[R1, #+496]
   \   00000048   3C0281E5           STR      R0,[R1, #+572]
   \   0000004C   400281E5           STR      R0,[R1, #+576]
   \   00000050   5622C1E5           STRB     R2,[R1, #+598]
   3705          	sysData.dstOn = false;
   \   00000054   5702C1E5           STRB     R0,[R1, #+599]
   3706          	sysData.autoOn = false;
   \   00000058   5802C1E5           STRB     R0,[R1, #+600]
   3707          	sysData.autoRecord = false;
   \   0000005C   5902C1E5           STRB     R0,[R1, #+601]
   3708          // KMC - this variable is already in use!  Do not change!	unsavedSysData.sdCardInserted = false;
   3709          }
   \   00000060   1EFF2FE1           BX       LR               ;; return
   3710          
   3711          //
   3712          // Take simple file name with extension and make a complete file name with path (no file extension is added)
   3713          //
   3714          // Input:	pDest	pointer to empty array to contain new file name with path
   3715          //			pName	pointer to file name (without path)
   3716          //			type	data type of file
   3717          //
   3718          // Output:	pDest	file name with path
   3719          //

   \                                 In section .text, align 4, keep-with-next
   3720          void AddPath(char *pDest, char *pName, enum DATATYPES type)
   3721          {
   \                     AddPath:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   3722          	const char *pPath;
   3723          
   3724          	switch (type)
   \   00000010   010052E3           CMP      R2,#+1
   \   00000014   0C00000A           BEQ      ??AddPath_0
   \   00000018   0200003A           BCC      ??AddPath_1
   \   0000001C   030052E3           CMP      R2,#+3
   \   00000020   0300000A           BEQ      ??AddPath_2
   \   00000024   0500003A           BCC      ??AddPath_3
   3725          	{
   3726          	default:
   3727          	case SYSTEM_DATA:	pPath = SYSTEM_PATH;	break;
   \                     ??AddPath_1:
   \   00000028   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \   00000030   070000EA           B        ??AddPath_4
   3728          	case DRIVER_DATA:	pPath = DRIVER_PATH;	break;
   \                     ??AddPath_2:
   \   00000034   ............       ADRL     R1,DRIVER_PATH
   \              ....        
   \   0000003C   040000EA           B        ??AddPath_4
   3729          	case VEHICLE_DATA:	pPath = VEHICLE_PATH;	break;
   \                     ??AddPath_3:
   \   00000040   ............       ADRL     R1,VEHICLE_PATH
   \              ....        
   \   00000048   010000EA           B        ??AddPath_4
   3730          	case TRACK_DATA:	pPath = TRACK_PATH;		break;
   \                     ??AddPath_0:
   \   0000004C   ............       ADRL     R1,TRACK_PATH
   \              ....        
   3731          	}
   3732          
   3733          	strcpy(pDest, pPath);
   \                     ??AddPath_4:
   \   00000054   ........           BL       strcpy
   3734          	strcat(pDest, "\\");
   \   00000058   ........           ADR      R1,??DataTable154_5  ;; "\\"
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           BL       strcat
   3735          	strcat(pDest, pName);
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   04D08DE2           ADD      SP,SP,#+4
   \   00000070   3040BDE8           POP      {R4,R5,LR}
   \   00000074   ........           B        strcat           ;; tailcall
   3736          }
   3737          
   3738          
   3739          //
   3740          // Take simple file name and make a complete file name with path and file extension as required for this file type
   3741          //
   3742          // Input:	pDest	pointer to empty array to contain new destintation full file name
   3743          //			pName	pointer to simple file name (no extension or path)
   3744          //			type	data type of file
   3745          //
   3746          // Output:	pDest	contains fully qualified name
   3747          //

   \                                 In section .text, align 4, keep-with-next
   3748          void ConvertToFilename(char *pDest, char *pName, enum DATATYPES type)
   3749          {
   \                     ConvertToFilename:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   3750          	AddPath(pDest, pName, type);
   \   00000010   010052E3           CMP      R2,#+1
   \   00000014   0400000A           BEQ      ??ConvertToFilename_0
   \   00000018   0C00003A           BCC      ??ConvertToFilename_1
   \   0000001C   030052E3           CMP      R2,#+3
   \   00000020   0700000A           BEQ      ??ConvertToFilename_2
   \   00000024   0300003A           BCC      ??ConvertToFilename_3
   \   00000028   080000EA           B        ??ConvertToFilename_1
   \                     ??ConvertToFilename_0:
   \   0000002C   ............       ADRL     R1,TRACK_PATH
   \              ....        
   \   00000034   070000EA           B        ??ConvertToFilename_4
   \                     ??ConvertToFilename_3:
   \   00000038   ............       ADRL     R1,VEHICLE_PATH
   \              ....        
   \   00000040   040000EA           B        ??ConvertToFilename_4
   \                     ??ConvertToFilename_2:
   \   00000044   ............       ADRL     R1,DRIVER_PATH
   \              ....        
   \   0000004C   010000EA           B        ??ConvertToFilename_4
   \                     ??ConvertToFilename_1:
   \   00000050   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \                     ??ConvertToFilename_4:
   \   00000058   ........           BL       strcpy
   \   0000005C   ........           ADR      R1,??DataTable154_5  ;; "\\"
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       strcat
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       strcat
   3751          	strcat(pDest, DAT_EXT);
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   04D08DE2           ADD      SP,SP,#+4
   \   0000007C   3040BDE8           POP      {R4,R5,LR}
   \   00000080   ............       ADRL     R1,`?<Constant ".dat">`
   \              ....        
   \   00000088   ........           B        strcat           ;; tailcall
   3752          }
   3753          
   3754          //
   3755          // Will reload the selected data item.  If the file is not found or the load is corrupted or fails
   3756          // then this routine will initialize the data structure with default data.
   3757          //
   3758          // returns: true - successfully loaded data
   3759          //			false - loaded default data
   3760          //

   \                                 In section .text, align 4, keep-with-next
   3761          int ReloadData(enum DATATYPES type)
   3762          {
   \                     ReloadData:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   62DF4DE2           SUB      SP,SP,#+392
   \   00000008   50DD4DE2           SUB      SP,SP,#+5120
   \   0000000C   0040A0E1           MOV      R4,R0
   3763          	long size;
   3764          	char shortFileName[NORMAL_FILENAME_SIZE];
   3765          	char fileName[MAX_FILENAME_SIZE];
   3766          	ALL_DATA_UNION dataunion;
   3767          
   3768          
   3769          	switch (type)
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ReloadData_0:
   \   00000018   9900008A           BHI      ??ReloadData_2
   \   0000001C   020000EA           B        ??ReloadData_3
   \   00000020   230000EA           B        ??ReloadData_4
   \   00000024   1C0000EA           B        ??ReloadData_5
   \   00000028   150000EA           B        ??ReloadData_6
   3770          	{
   3771          		case SYSTEM_DATA:
   3772          			strcpy(shortFileName, SYSTEM_FILE_NAME);
   \                     ??ReloadData_3:
   \   0000002C   4E0F8DE2           ADD      R0,SP,#+312
   \   00000030   ............       ADRL     R1,SYSTEM_FILE_NAME
   \              ....        
   \   00000038   500D80E2           ADD      R0,R0,#+5120
   \   0000003C   ........           BL       strcpy
   3773          			size = sizeof(SYS_DATA_STRUCTURE);
   \   00000040   F460A0E3           MOV      R6,#+244
   3774          			break;
   3775          		case DRIVER_DATA:
   3776          			strcpy(shortFileName, sysData.driver);
   3777          			size = sizeof(DRIVER_DATA_STRUCTURE);
   3778          			break;
   3779          		case VEHICLE_DATA:
   3780          			strcpy(shortFileName, sysData.vehicle);
   3781          			size = sizeof(VEHICLE_DATA_STRUCTURE);
   3782          			break;
   3783          		case TRACK_DATA:
   3784          			strcpy(shortFileName, sysData.track);
   3785          			size = sizeof(TRACK_DATA_STRUCTURE);
   3786          			break;
   3787          	default:
   3788          		return false;
   3789          	}
   3790          
   3791          	// If we somehow reverted to default data then the track name might be blank!
   3792          	// Or if, for any other reason, the name of the file we are about to open is blank
   3793          	// then skip this and go directly to loading default data
   3794          	if (strcmp("", shortFileName) != 0)
   \                     ??ReloadData_7:
   \   00000044   4E1F8DE2           ADD      R1,SP,#+312
   \   00000048   501D81E2           ADD      R1,R1,#+5120
   \   0000004C   ........           ADR      R0,??DataTable156  ;; ""
   \   00000050   ........           BL       strcmp
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   7E00000A           BEQ      ??ReloadData_8
   3795          	{
   3796          		ConvertToFilename(fileName, shortFileName, type);
   \   0000005C   010054E3           CMP      R4,#+1
   \   00000060   0400000A           BEQ      ??ReloadData_9
   \   00000064   1F00003A           BCC      ??ReloadData_10
   \   00000068   030054E3           CMP      R4,#+3
   \   0000006C   1A00000A           BEQ      ??ReloadData_11
   \   00000070   1600003A           BCC      ??ReloadData_12
   \   00000074   1B0000EA           B        ??ReloadData_10
   \                     ??ReloadData_9:
   \   00000078   ............       ADRL     R1,TRACK_PATH
   \              ....        
   \   00000080   1A0000EA           B        ??ReloadData_13
   \                     ??ReloadData_6:
   \   00000084   4E0F8DE2           ADD      R0,SP,#+312
   \   00000088   ........           LDR      R1,??DataTable160_10
   \   0000008C   500D80E2           ADD      R0,R0,#+5120
   \   00000090   ........           BL       strcpy
   \   00000094   1060A0E3           MOV      R6,#+16
   \   00000098   E9FFFFEA           B        ??ReloadData_7
   \                     ??ReloadData_5:
   \   0000009C   4E0F8DE2           ADD      R0,SP,#+312
   \   000000A0   ........           LDR      R1,??DataTable160_11
   \   000000A4   500D80E2           ADD      R0,R0,#+5120
   \   000000A8   ........           BL       strcpy
   \   000000AC   776FA0E3           MOV      R6,#+476
   \   000000B0   E3FFFFEA           B        ??ReloadData_7
   \                     ??ReloadData_4:
   \   000000B4   4E0F8DE2           ADD      R0,SP,#+312
   \   000000B8   ........           LDR      R1,??DataTable160_12
   \   000000BC   500D80E2           ADD      R0,R0,#+5120
   \   000000C0   ........           BL       strcpy
   \   000000C4   A060A0E3           MOV      R6,#+160
   \   000000C8   506D86E3           ORR      R6,R6,#0x1400
   \   000000CC   DCFFFFEA           B        ??ReloadData_7
   \                     ??ReloadData_12:
   \   000000D0   ............       ADRL     R1,VEHICLE_PATH
   \              ....        
   \   000000D8   040000EA           B        ??ReloadData_13
   \                     ??ReloadData_11:
   \   000000DC   ............       ADRL     R1,DRIVER_PATH
   \              ....        
   \   000000E4   010000EA           B        ??ReloadData_13
   \                     ??ReloadData_10:
   \   000000E8   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \                     ??ReloadData_13:
   \   000000F0   4A0E8DE2           ADD      R0,SP,#+1184
   \   000000F4   400D80E2           ADD      R0,R0,#+4096
   \   000000F8   ........           BL       strcpy
   \   000000FC   ........           ADR      R7,??DataTable156_1  ;; "\\"
   \   00000100   4A0E8DE2           ADD      R0,SP,#+1184
   \   00000104   0710A0E1           MOV      R1,R7
   \   00000108   400D80E2           ADD      R0,R0,#+4096
   \   0000010C   ........           BL       strcat
   \   00000110   4E1F8DE2           ADD      R1,SP,#+312
   \   00000114   4A0E8DE2           ADD      R0,SP,#+1184
   \   00000118   501D81E2           ADD      R1,R1,#+5120
   \   0000011C   400D80E2           ADD      R0,R0,#+4096
   \   00000120   ........           BL       strcat
   \   00000124   ............       ADRL     R8,`?<Constant ".dat">`
   \              ....        
   \   0000012C   4A0E8DE2           ADD      R0,SP,#+1184
   \   00000130   0810A0E1           MOV      R1,R8
   \   00000134   400D80E2           ADD      R0,R0,#+4096
   \   00000138   ........           BL       strcat
   3797          	
   3798          		if (FRWReadFile(&dataunion, fileName, size, type))
   \   0000013C   ........           BL       OkToUseSDCard
   \   00000140   000050E3           CMP      R0,#+0
   \   00000144   1500000A           BEQ      ??ReloadData_14
   \   00000148   4A0E8DE2           ADD      R0,SP,#+1184
   \   0000014C   ........           ADR      R1,??DataTable156_2  ;; 0x72, 0x62, 0x00, 0x00
   \   00000150   400D80E2           ADD      R0,R0,#+4096
   \   00000154   ........           BL       FS_FOpen
   \   00000158   0090B0E1           MOVS     R9,R0
   \   0000015C   0F00000A           BEQ      ??ReloadData_14
   \   00000160   0630A0E1           MOV      R3,R6
   \   00000164   0D20A0E1           MOV      R2,SP
   \   00000168   0910A0E1           MOV      R1,R9
   \   0000016C   0000A0E3           MOV      R0,#+0
   \   00000170   ........           BL       PF_FS_Read
   \   00000174   00A0A0E1           MOV      R10,R0
   \   00000178   0900A0E1           MOV      R0,R9
   \   0000017C   ........           BL       FS_FClose
   \   00000180   00005AE3           CMP      R10,#+0
   \   00000184   0500000A           BEQ      ??ReloadData_14
   \   00000188   0120A0E3           MOV      R2,#+1
   \   0000018C   0D10A0E1           MOV      R1,SP
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   ........           BL       verifyData
   \   00000198   010050E3           CMP      R0,#+1
   \   0000019C   3900000A           BEQ      ??ReloadData_15
   3799          			return true;
   3800          		else if (type == SYSTEM_DATA)
   \                     ??ReloadData_14:
   \   000001A0   000054E3           CMP      R4,#+0
   \   000001A4   2B00001A           BNE      ??ReloadData_8
   3801          		{
   3802          			ConvertToFilename(fileName, (char *)BACKUP_SYSTEM_FILE_NAME, type);
   \   000001A8   4A0E8DE2           ADD      R0,SP,#+1184
   \   000001AC   ............       ADRL     R1,SYSTEM_PATH
   \              ....        
   \   000001B4   400D80E2           ADD      R0,R0,#+4096
   \   000001B8   ........           BL       strcpy
   \   000001BC   4A0E8DE2           ADD      R0,SP,#+1184
   \   000001C0   0710A0E1           MOV      R1,R7
   \   000001C4   400D80E2           ADD      R0,R0,#+4096
   \   000001C8   ........           BL       strcat
   \   000001CC   4A0E8DE2           ADD      R0,SP,#+1184
   \   000001D0   ............       ADRL     R1,BACKUP_SYSTEM_FILE_NAME
   \              ....        
   \   000001D8   400D80E2           ADD      R0,R0,#+4096
   \   000001DC   ........           BL       strcat
   \   000001E0   4A0E8DE2           ADD      R0,SP,#+1184
   \   000001E4   0810A0E1           MOV      R1,R8
   \   000001E8   400D80E2           ADD      R0,R0,#+4096
   \   000001EC   ........           BL       strcat
   3803          			if (FRWReadFile(&dataunion, fileName, size, type))
   \   000001F0   ........           BL       OkToUseSDCard
   \   000001F4   000050E3           CMP      R0,#+0
   \   000001F8   1D00000A           BEQ      ??ReloadData_16
   \   000001FC   4A0E8DE2           ADD      R0,SP,#+1184
   \   00000200   ........           ADR      R1,??DataTable156_2  ;; 0x72, 0x62, 0x00, 0x00
   \   00000204   400D80E2           ADD      R0,R0,#+4096
   \   00000208   ........           BL       FS_FOpen
   \   0000020C   0050B0E1           MOVS     R5,R0
   \   00000210   1700000A           BEQ      ??ReloadData_16
   \   00000214   0630A0E1           MOV      R3,R6
   \   00000218   0D20A0E1           MOV      R2,SP
   \   0000021C   0510A0E1           MOV      R1,R5
   \   00000220   0000A0E3           MOV      R0,#+0
   \   00000224   ........           BL       PF_FS_Read
   \   00000228   0060A0E1           MOV      R6,R0
   \   0000022C   0500A0E1           MOV      R0,R5
   \   00000230   ........           BL       FS_FClose
   \   00000234   000056E3           CMP      R6,#+0
   \   00000238   0D00000A           BEQ      ??ReloadData_16
   \   0000023C   0120A0E3           MOV      R2,#+1
   \   00000240   0D10A0E1           MOV      R1,SP
   \   00000244   0000A0E3           MOV      R0,#+0
   \   00000248   ........           BL       verifyData
   \   0000024C   010050E3           CMP      R0,#+1
   \   00000250   0700001A           BNE      ??ReloadData_16
   3804          				return true;
   3805          		}
   \   00000254   0B0000EA           B        ??ReloadData_15
   3806          	}
   3807          
   3808          	// Read or verify failed - load default data
   3809          	switch (type)
   \                     ??ReloadData_8:
   \   00000258   030054E3           CMP      R4,#+3
   \   0000025C   04F18F90           ADDLS    PC,PC,R4, LSL #+2
   \                     ??ReloadData_1:
   \   00000260   0500008A           BHI      ??ReloadData_17
   \   00000264   020000EA           B        ??ReloadData_16
   \   00000268   250000EA           B        ??ReloadData_18
   \   0000026C   1C0000EA           B        ??ReloadData_19
   \   00000270   070000EA           B        ??ReloadData_20
   3810          	{
   3811          		case SYSTEM_DATA:
   3812          			SetDefaultSystemData(true);
   \                     ??ReloadData_16:
   \   00000274   0100A0E3           MOV      R0,#+1
   \   00000278   ........           BL       SetDefaultSystemData
   3813          			break;
   3814          		case DRIVER_DATA:
   3815          			SetDefaultDriverData();
   3816          			if (!AnyFilesFound(type))
   3817          				CreateAllFiles(type);
   3818          			break;
   3819          		case VEHICLE_DATA:
   3820          			SetDefaultVehicleData(true);		// Attempt to find vehicle in default table and use that data
   3821          			if (!AnyFilesFound(type))
   3822          				CreateAllFiles(type);
   3823          			break;
   3824          		case TRACK_DATA:
   3825          			SetDefaultTrackData();
   3826          			SetTrackTableDefaultData();
   3827          			// This track only exists in the track table but there is not yet a disk file for this track.
   3828          			// Do not create the disk file yet - wait until after a session is performed or data is manually
   3829          			// changed in the track settings before creating a disk file.
   3830          			return true;
   3831          	}
   3832          	WriteUserDataEvent(type);			// Save newly restored/initialized data
   \                     ??ReloadData_17:
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   ........           BL       WriteUserDataEvent
   3833          
   3834          	return false;
   \                     ??ReloadData_2:
   \   00000284   0000A0E3           MOV      R0,#+0
   \                     ??ReloadData_15:
   \   00000288   62DF8DE2           ADD      SP,SP,#+392
   \   0000028C   50DD8DE2           ADD      SP,SP,#+5120
   \   00000290   F087BDE8           POP      {R4-R10,PC}      ;; return
   \                     ??ReloadData_20:
   \   00000294   ........           LDR      R5,??DataTable160_5
   \   00000298   5000A0E3           MOV      R0,#+80
   \   0000029C   600D80E3           ORR      R0,R0,#0x1800
   \   000002A0   050080E0           ADD      R0,R0,R5
   \   000002A4   0010A0E3           MOV      R1,#+0
   \   000002A8   0020A0E3           MOV      R2,#+0
   \   000002AC   0030A0E3           MOV      R3,#+0
   \   000002B0   00C0A0E3           MOV      R12,#+0
   \   000002B4   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   000002B8   100040E2           SUB      R0,R0,#+16
   \   000002BC   ............       ADRL     R1,DRIVER_VERSION
   \              ....        
   \   000002C4   ........           BL       strcpy
   \   000002C8   0300A0E3           MOV      R0,#+3
   \   000002CC   ........           BL       AnyFilesFound
   \   000002D0   000050E3           CMP      R0,#+0
   \   000002D4   E8FFFF1A           BNE      ??ReloadData_17
   \   000002D8   0300A0E3           MOV      R0,#+3
   \                     ??ReloadData_21:
   \   000002DC   ........           BL       CreateAllFiles
   \   000002E0   E5FFFFEA           B        ??ReloadData_17
   \                     ??ReloadData_19:
   \   000002E4   0100A0E3           MOV      R0,#+1
   \   000002E8   ........           BL       SetDefaultVehicleData
   \   000002EC   0200A0E3           MOV      R0,#+2
   \   000002F0   ........           BL       AnyFilesFound
   \   000002F4   000050E3           CMP      R0,#+0
   \   000002F8   DFFFFF1A           BNE      ??ReloadData_17
   \   000002FC   0200A0E3           MOV      R0,#+2
   \   00000300   F5FFFFEA           B        ??ReloadData_21
   \                     ??ReloadData_18:
   \   00000304   ........           LDR      R5,??DataTable160_5
   \   00000308   A010A0E3           MOV      R1,#+160
   \   0000030C   501D81E3           ORR      R1,R1,#0x1400
   \   00000310   EC0F85E2           ADD      R0,R5,#+944
   \   00000314   ........           BL       __aeabi_memclr4
   \   00000318   ............       ADRL     R1,TRACK_VERSION
   \              ....        
   \   00000320   EC0F85E2           ADD      R0,R5,#+944
   \   00000324   ........           BL       strcpy
   \   00000328   3C00A0E3           MOV      R0,#+60
   \   0000032C   F103C5E5           STRB     R0,[R5, #+1009]
   \   00000330   ........           BL       SetTrackTableDefaultData
   \   00000334   0100A0E3           MOV      R0,#+1
   \   00000338   D2FFFFEA           B        ??ReloadData_15
   3835          }
   3836          

   \                                 In section .text, align 4, keep-with-next
   3837          char FRWReadFile(ALL_DATA_UNION *dataunion, char *fileName, int size, enum DATATYPES type)
   3838          {
   \                     FRWReadFile:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
   3839          #ifdef _WINDOWS
   3840          	FILE *pFile;
   3841          
   3842          	if ((pFile = fopen(fileName, "rb")) != 0)
   3843          	{
   3844          		// file opened - read the data and be sure it's the right version
   3845          		////results = fread(dataunion, size, 1, pFile);
   3846          		fread(dataunion, size, 1, pFile);
   3847          		fclose(pFile);
   3848          
   3849          		// KMC NOTE - cannot test results for size of file here!  If we have upgraded versions we
   3850          		// might have asked to read more data than the file actually contained.  In which case
   3851          		// this call will return 0.  Instead allow to pass through and use my own checksum and version string
   3852          		// tests to determine the file validity and update if possible.
   3853          		////if (results != 0)
   3854          #else
   3855          	unsigned long results;
   3856          	FS_FILE *pFile;
   3857          	
   3858          	if (!OkToUseSDCard())
   \   00000018   ........           BL       OkToUseSDCard
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   1500000A           BEQ      ??FRWReadFile_0
   3859          		return false;
   3860          
   3861          	// Attempt to read SD card configuration file
   3862          	if (pFile = FS_FOpen(fileName, "rb"))
   \   00000024   ........           ADR      R1,??DataTable156_2  ;; 0x72, 0x62, 0x00, 0x00
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           BL       FS_FOpen
   \   00000030   0050B0E1           MOVS     R5,R0
   \   00000034   0F00000A           BEQ      ??FRWReadFile_1
   3863          	{
   3864          		// file opened - read the data and be sure it's the right version
   3865          		results = FS_Read(pFile, dataunion, size);
   \   00000038   0630A0E1           MOV      R3,R6
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       PF_FS_Read
   \   0000004C   0060A0E1           MOV      R6,R0
   3866          		FS_FClose(pFile);
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   ........           BL       FS_FClose
   3867          		
   3868          		// KMC NOTE - cannot test results for size of file here!  If we have upgraded versions we
   3869          		// might have asked to read more data than the file actually contained.  In which case
   3870          		// this call will return a value other than the size we asked for.  Instead only check
   3871          		// for non-zero and allow to pass through and use my own checksum and version string
   3872          		// tests to determine the file validity and update if possible.
   3873          		if (results != 0)
   \   00000058   000056E3           CMP      R6,#+0
   \   0000005C   0500000A           BEQ      ??FRWReadFile_1
   3874          #endif
   3875          			if (verifyData(type, dataunion, true) == true)
   \   00000060   0120A0E3           MOV      R2,#+1
   \   00000064   0410A0E1           MOV      R1,R4
   \   00000068   0700A0E1           MOV      R0,R7
   \   0000006C   ........           BL       verifyData
   \   00000070   010050E3           CMP      R0,#+1
   \   00000074   0000000A           BEQ      ??FRWReadFile_0
   3876          				return true;
   3877          			else return false;	// else initialize to default data
   3878          	}
   3879          	return false;
   \                     ??FRWReadFile_1:
   \   00000078   0000A0E3           MOV      R0,#+0
   \                     ??FRWReadFile_0:
   \   0000007C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000080   F080BDE8           POP      {R4-R7,PC}       ;; return
   3880          }
   3881          
   3882          
   3883          //
   3884          // See if any ".dat" files exist in this directory
   3885          // Return true if one or more files found, else return false
   3886          //

   \                                 In section .text, align 4, keep-with-next
   3887          char AnyFilesFound(enum DATATYPES type)
   3888          {
   \                     AnyFilesFound:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   8CD04DE2           SUB      SP,SP,#+140
   3889          	const char *pDirectory;
   3890          #ifdef _WINDOWS
   3891          	DIR *dir;
   3892          	struct dirent *ent;
   3893          #else
   3894          	FS_FIND_DATA fd;
   3895          	char acFilename[NORMAL_FILENAME_SIZE];
   3896          #endif
   3897          
   3898          	switch (type)
   \   00000008   010050E3           CMP      R0,#+1
   \   0000000C   0A00000A           BEQ      ??AnyFilesFound_0
   \   00000010   0C00003A           BCC      ??AnyFilesFound_1
   \   00000014   030050E3           CMP      R0,#+3
   \   00000018   0100000A           BEQ      ??AnyFilesFound_2
   \   0000001C   0300003A           BCC      ??AnyFilesFound_3
   \   00000020   080000EA           B        ??AnyFilesFound_1
   3899          	{
   3900          	case DRIVER_DATA:	pDirectory = DRIVER_PATH;		break;
   \                     ??AnyFilesFound_2:
   \   00000024   ............       ADRL     R1,DRIVER_PATH
   \              ....        
   \   0000002C   070000EA           B        ??AnyFilesFound_4
   3901          	case VEHICLE_DATA:	pDirectory = VEHICLE_PATH;		break;
   \                     ??AnyFilesFound_3:
   \   00000030   ............       ADRL     R1,VEHICLE_PATH
   \              ....        
   \   00000038   040000EA           B        ??AnyFilesFound_4
   3902          	case TRACK_DATA:	pDirectory = TRACK_PATH;		break;
   \                     ??AnyFilesFound_0:
   \   0000003C   ............       ADRL     R1,TRACK_PATH
   \              ....        
   \   00000044   010000EA           B        ??AnyFilesFound_4
   3903          	default:
   3904          	case SESSION_DATA:	pDirectory = MY_SESSIONS_PATH;	break;
   \                     ??AnyFilesFound_1:
   \   00000048   ............       ADRL     R1,MY_SESSIONS_PATH
   \              ....        
   3905          	}
   3906          
   3907          #ifdef _WINDOWS
   3908          	dir = opendir(pDirectory);
   3909          	if (dir != NULL)
   3910          	{
   3911          		while ((ent = readdir(dir)) != NULL) {
   3912          			if (ValidFileName(ent->d_name))
   3913          			{
   3914          				closedir(dir);
   3915          				return true;
   3916          			}
   3917          		}
   3918          		closedir(dir);
   3919          	}
   3920          #else
   3921          	if (FS_FindFirstFile(&fd, pDirectory, acFilename, sizeof(acFilename)) == 0) {
   \                     ??AnyFilesFound_4:
   \   00000050   5030A0E3           MOV      R3,#+80
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   50008DE2           ADD      R0,SP,#+80
   \   0000005C   ........           BL       FS_FindFirstFile
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0A00001A           BNE      ??AnyFilesFound_5
   3922          		do {
   3923          			if (ValidFileName(acFilename))
   \                     ??AnyFilesFound_6:
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           BL       ValidFileName
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   50008DE2           ADD      R0,SP,#+80
   \   00000078   0200000A           BEQ      ??AnyFilesFound_7
   3924          			{
   3925          				FS_FindClose(&fd);
   \   0000007C   ........           BL       FS_FindClose
   3926          				return true;
   \   00000080   0100A0E3           MOV      R0,#+1
   \   00000084   050000EA           B        ??AnyFilesFound_8
   3927          			}
   3928          		} while (FS_FindNextFile (&fd));
   \                     ??AnyFilesFound_7:
   \   00000088   ........           BL       FS_FindNextFile
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   F4FFFF1A           BNE      ??AnyFilesFound_6
   3929          	}
   3930          	FS_FindClose(&fd);
   \                     ??AnyFilesFound_5:
   \   00000094   50008DE2           ADD      R0,SP,#+80
   \   00000098   ........           BL       FS_FindClose
   3931          #endif
   3932          	return false;
   \   0000009C   0000A0E3           MOV      R0,#+0
   \                     ??AnyFilesFound_8:
   \   000000A0   8CD08DE2           ADD      SP,SP,#+140      ;; stack cleaning
   \   000000A4   0080BDE8           POP      {PC}             ;; return
   3933          }
   3934          
   3935          //
   3936          // Populate the specified directory with the standard file set
   3937          // Note: assumes the relivant data structure is initialized with default data
   3938          // Will return the the relivant data structure still containing the default data
   3939          //

   \                                 In section .text, align 4, keep-with-next
   3940          void CreateAllFiles(enum DATATYPES type)
   3941          {
   \                     CreateAllFiles:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   3942          	if (type == DRIVER_DATA)
   \   00000008   030050E3           CMP      R0,#+3
   \   0000000C   2B00001A           BNE      ??CreateAllFiles_0
   3943          	{
   3944          		strcpy(sysData.driver, "Driver B");
   \   00000010   ........           LDR      R4,??DataTable160_5
   \   00000014   5A00A0E3           MOV      R0,#+90
   \   00000018   800F80E3           ORR      R0,R0,#0x200
   \   0000001C   0920A0E3           MOV      R2,#+9
   \   00000020   ............       ADRL     R1,`?<Constant "Driver B">`
   \              ....        
   \   00000028   040080E0           ADD      R0,R0,R4
   \   0000002C   ........           BL       __aeabi_memcpy
   3945          		WriteUserDataEvent(DRIVER_DATA);
   \   00000030   0300A0E3           MOV      R0,#+3
   \   00000034   ........           BL       WriteUserDataEvent
   3946          		strcpy(sysData.driver, "Driver C");
   \   00000038   5A00A0E3           MOV      R0,#+90
   \   0000003C   800F80E3           ORR      R0,R0,#0x200
   \   00000040   0920A0E3           MOV      R2,#+9
   \   00000044   ............       ADRL     R1,`?<Constant "Driver C">`
   \              ....        
   \   0000004C   040080E0           ADD      R0,R0,R4
   \   00000050   ........           BL       __aeabi_memcpy
   3947          		WriteUserDataEvent(DRIVER_DATA);
   \   00000054   0300A0E3           MOV      R0,#+3
   \   00000058   ........           BL       WriteUserDataEvent
   3948          		strcpy(sysData.driver, "Driver D");
   \   0000005C   5A00A0E3           MOV      R0,#+90
   \   00000060   800F80E3           ORR      R0,R0,#0x200
   \   00000064   0920A0E3           MOV      R2,#+9
   \   00000068   ............       ADRL     R1,`?<Constant "Driver D">`
   \              ....        
   \   00000070   040080E0           ADD      R0,R0,R4
   \   00000074   ........           BL       __aeabi_memcpy
   3949          		WriteUserDataEvent(DRIVER_DATA);
   \   00000078   0300A0E3           MOV      R0,#+3
   \   0000007C   ........           BL       WriteUserDataEvent
   3950          		strcpy(sysData.driver, "Driver E");
   \   00000080   5A00A0E3           MOV      R0,#+90
   \   00000084   800F80E3           ORR      R0,R0,#0x200
   \   00000088   0920A0E3           MOV      R2,#+9
   \   0000008C   ............       ADRL     R1,`?<Constant "Driver E">`
   \              ....        
   \   00000094   040080E0           ADD      R0,R0,R4
   \   00000098   ........           BL       __aeabi_memcpy
   3951          		WriteUserDataEvent(DRIVER_DATA);
   \   0000009C   0300A0E3           MOV      R0,#+3
   \   000000A0   ........           BL       WriteUserDataEvent
   3952          		strcpy(sysData.driver, DEFAULT_DRIVER);
   \   000000A4   5A00A0E3           MOV      R0,#+90
   \   000000A8   800F80E3           ORR      R0,R0,#0x200
   \   000000AC   ............       ADRL     R1,DEFAULT_DRIVER
   \              ....        
   \   000000B4   040080E0           ADD      R0,R0,R4
   \   000000B8   ........           BL       strcpy
   \   000000BC   1B0000EA           B        ??CreateAllFiles_1
   3953          	}
   3954          	else if (type == VEHICLE_DATA)
   \                     ??CreateAllFiles_0:
   \   000000C0   020050E3           CMP      R0,#+2
   \   000000C4   1900001A           BNE      ??CreateAllFiles_1
   3955          	{
   3956          		
   3957          		// make up files for all the default vehicles
   3958          		int i=0;
   \   000000C8   ........           LDR      R5,??DataTable160
   \   000000CC   ........           LDR      R4,??DataTable160_5
   \   000000D0   0A0000EA           B        ??CreateAllFiles_2
   3959          		while ('\0' != defaultVehicles[i].vehicleName[0]) {
   3960          			
   3961          			strcpy(sysData.vehicle, defaultVehicles[i].vehicleName);
   \                     ??CreateAllFiles_3:
   \   000000D4   6B00A0E3           MOV      R0,#+107
   \   000000D8   800F80E3           ORR      R0,R0,#0x200
   \   000000DC   040080E0           ADD      R0,R0,R4
   \   000000E0   ........           BL       strcpy
   3962          			memcpy(&vehicleData.usbCameraDelay, &(defaultVehicles[i].carData), sizeof(defaultVehicles[i].carData));
   \   000000E4   6820A0E3           MOV      R2,#+104
   \   000000E8   041085E2           ADD      R1,R5,#+4
   \   000000EC   0C0084E2           ADD      R0,R4,#+12
   \   000000F0   ........           BL       __aeabi_memcpy4
   3963          			WriteUserDataEvent(VEHICLE_DATA);
   \   000000F4   0200A0E3           MOV      R0,#+2
   \   000000F8   ........           BL       WriteUserDataEvent
   3964          			
   3965          			i++;
   \   000000FC   6C5085E2           ADD      R5,R5,#+108
   3966          		} // while
   \                     ??CreateAllFiles_2:
   \   00000100   001095E5           LDR      R1,[R5, #+0]
   \   00000104   0000D1E5           LDRB     R0,[R1, #+0]
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   F0FFFF1A           BNE      ??CreateAllFiles_3
   3967          
   3968          	//	strcpy(sysData.vehicle, DEFAULT_VEHICLE);
   3969          	//	memcpy(&vehicleData.usbCameraDelay, &(defaultVehicles[0].carData), sizeof(defaultVehicles[i].carData));		// Restore data back to Miata (default)
   3970          	//	WriteUserDataEvent(VEHICLE_DATA);
   3971          
   3972          		strcpy(tempVehicleName, DEFAULT_VEHICLE);	// Set default vehicle name
   \   00000110   ............       ADRL     R1,DEFAULT_VEHICLE
   \              ....        
   \   00000118   ........           LDR      R0,??DataTable160_13
   \   0000011C   ........           BL       strcpy
   3973          		vehicleSelectionChanged = true;				// mark as new vehicle selection
   \   00000120   ........           LDR      R0,??DataTable160_14
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   0010C0E5           STRB     R1,[R0, #+0]
   3974          		ChangeVehicle();							// load the data for this vehicle
   \   0000012C   ........           BL       ChangeVehicle
   3975          	}
   3976          }
   \                     ??CreateAllFiles_1:
   \   00000130   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000134   3080BDE8           POP      {R4,R5,PC}       ;; return
   3977          
   3978          
   3979          //
   3980          // Delete all files in the indicated TraqDash standard folder
   3981          //

   \                                 In section .text, align 4, keep-with-next
   3982          void DeleteAllFiles(enum DATATYPES type)
   3983          {
   \                     DeleteAllFiles:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   4ADF4DE2           SUB      SP,SP,#+296
   3984          	const char *pDirectory;
   3985          	char fullName[MAX_FILENAME_SIZE];
   3986          #ifdef _WINDOWS
   3987          	DIR *dir;
   3988          	struct dirent *ent;
   3989          #else
   3990          	FS_FIND_DATA fd;
   3991          	char acFilename[NORMAL_FILENAME_SIZE];
   3992          #endif
   3993          
   3994          	switch (type)
   \   00000008   010050E3           CMP      R0,#+1
   \   0000000C   0A00000A           BEQ      ??DeleteAllFiles_0
   \   00000010   0C00003A           BCC      ??DeleteAllFiles_1
   \   00000014   030050E3           CMP      R0,#+3
   \   00000018   0100000A           BEQ      ??DeleteAllFiles_2
   \   0000001C   0300003A           BCC      ??DeleteAllFiles_3
   \   00000020   080000EA           B        ??DeleteAllFiles_1
   3995          	{
   3996          	case DRIVER_DATA:	pDirectory = DRIVER_PATH;		break;
   \                     ??DeleteAllFiles_2:
   \   00000024   ............       ADRL     R4,DRIVER_PATH
   \              ....        
   \   0000002C   070000EA           B        ??DeleteAllFiles_4
   3997          	case VEHICLE_DATA:	pDirectory = VEHICLE_PATH;		break;
   \                     ??DeleteAllFiles_3:
   \   00000030   ............       ADRL     R4,VEHICLE_PATH
   \              ....        
   \   00000038   040000EA           B        ??DeleteAllFiles_4
   3998          	case TRACK_DATA:	pDirectory = TRACK_PATH;		break;
   \                     ??DeleteAllFiles_0:
   \   0000003C   ............       ADRL     R4,TRACK_PATH
   \              ....        
   \   00000044   010000EA           B        ??DeleteAllFiles_4
   3999          	default:
   4000          	case SESSION_DATA:	pDirectory = MY_SESSIONS_PATH;	break;
   \                     ??DeleteAllFiles_1:
   \   00000048   ............       ADRL     R4,MY_SESSIONS_PATH
   \              ....        
   4001          	}
   4002          
   4003          #ifdef _WINDOWS
   4004          
   4005          	dir = opendir(pDirectory);
   4006          	if (dir != NULL)
   4007          	{
   4008          		while ((ent = readdir(dir)) != NULL) {
   4009          			if (ValidFileName(ent->d_name))
   4010          			{
   4011          				strcpy(fullName, pDirectory);
   4012          				strcat(fullName, "\\");
   4013          				strcat(fullName, ent->d_name);
   4014          				remove(fullName);
   4015          			}
   4016          		}
   4017          		closedir(dir);
   4018          	}
   4019          
   4020          #else
   4021          
   4022          	if (FS_FindFirstFile(&fd, pDirectory, acFilename, sizeof(acFilename)) == 0) {
   \                     ??DeleteAllFiles_4:
   \   00000050   5030A0E3           MOV      R3,#+80
   \   00000054   0D20A0E1           MOV      R2,SP
   \   00000058   0410A0E1           MOV      R1,R4
   \   0000005C   50008DE2           ADD      R0,SP,#+80
   \   00000060   ........           BL       FS_FindFirstFile
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   1200001A           BNE      ??DeleteAllFiles_5
   4023          		do {
   4024          			if (ValidFileName(acFilename))
   \                     ??DeleteAllFiles_6:
   \   0000006C   0D00A0E1           MOV      R0,SP
   \   00000070   ........           BL       ValidFileName
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0A00000A           BEQ      ??DeleteAllFiles_7
   4025          			{
   4026          				strcpy(fullName, pDirectory);
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   8C008DE2           ADD      R0,SP,#+140
   \   00000084   ........           BL       strcpy
   4027          				strcat(fullName, "\\");
   \   00000088   ........           ADR      R1,??DataTable160_1  ;; "\\"
   \   0000008C   8C008DE2           ADD      R0,SP,#+140
   \   00000090   ........           BL       strcat
   4028          				strcat(fullName, acFilename);
   \   00000094   0D10A0E1           MOV      R1,SP
   \   00000098   8C008DE2           ADD      R0,SP,#+140
   \   0000009C   ........           BL       strcat
   4029          				FS_Remove(fullName);
   \   000000A0   8C008DE2           ADD      R0,SP,#+140
   \   000000A4   ........           BL       FS_Remove
   4030          			}
   4031          		} while (FS_FindNextFile (&fd));
   \                     ??DeleteAllFiles_7:
   \   000000A8   50008DE2           ADD      R0,SP,#+80
   \   000000AC   ........           BL       FS_FindNextFile
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   ECFFFF1A           BNE      ??DeleteAllFiles_6
   4032          	}
   4033          	FS_FindClose(&fd);
   \                     ??DeleteAllFiles_5:
   \   000000B8   50008DE2           ADD      R0,SP,#+80
   \   000000BC   ........           BL       FS_FindClose
   4034          
   4035          #endif
   4036          }
   \   000000C0   4ADF8DE2           ADD      SP,SP,#+296      ;; stack cleaning
   \   000000C4   1080BDE8           POP      {R4,PC}          ;; return
   4037          
   4038          #ifndef _WINDOWS
   4039          //
   4040          // General utility that a folder and all files in the folder including subdirectories
   4041          // NOTE: Recursion !!
   4042          //

   \                                 In section .text, align 4, keep-with-next
   4043          void WipeFiles(char *folder) {
   \                     WipeFiles:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   49DF4DE2           SUB      SP,SP,#+292
   \   00000008   0040A0E1           MOV      R4,R0
   4044          	char fullName[MAX_FILENAME_SIZE];
   4045          	FS_FIND_DATA fd;		// file attributes
   4046          	char acFilename[NORMAL_FILENAME_SIZE];
   4047          	U8 attrib;				// file attributes
   4048          
   4049          	// make sure the selected folder is read/write
   4050          	FS_SetFileAttributes (folder, 0);
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           BL       FS_SetFileAttributes
   4051          				
   4052          	if (FS_FindFirstFile(&fd, folder, acFilename, sizeof(acFilename)) == 0) {
   \   00000014   5030A0E3           MOV      R3,#+80
   \   00000018   0D20A0E1           MOV      R2,SP
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   50008DE2           ADD      R0,SP,#+80
   \   00000024   ........           BL       FS_FindFirstFile
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   1D00001A           BNE      ??WipeFiles_0
   4053          		do {
   4054          			if ('.' != acFilename[0]) {		// screen out '.' and '..'
   \                     ??WipeFiles_1:
   \   00000030   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000034   2E0050E3           CMP      R0,#+46
   \   00000038   1600000A           BEQ      ??WipeFiles_2
   4055          				strcpy(fullName, folder);
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   8C008DE2           ADD      R0,SP,#+140
   \   00000044   ........           BL       strcpy
   4056          				strcat(fullName, "\\");
   \   00000048   ........           ADR      R1,??DataTable160_1  ;; "\\"
   \   0000004C   8C008DE2           ADD      R0,SP,#+140
   \   00000050   ........           BL       strcat
   4057          				strcat(fullName, acFilename);
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   8C008DE2           ADD      R0,SP,#+140
   \   0000005C   ........           BL       strcat
   4058          				
   4059          				attrib = FS_GetFileAttributes(fullName);
   \   00000060   8C008DE2           ADD      R0,SP,#+140
   \   00000064   ........           BL       FS_GetFileAttributes
   \   00000068   0050A0E1           MOV      R5,R0
   4060          				if (attrib & FS_ATTR_READ_ONLY)
   \   0000006C   010015E3           TST      R5,#0x1
   \   00000070   0200000A           BEQ      ??WipeFiles_3
   4061          					FS_SetFileAttributes(fullName, 0);
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   8C008DE2           ADD      R0,SP,#+140
   \   0000007C   ........           BL       FS_SetFileAttributes
   4062          				
   4063          				if (attrib & FS_ATTR_DIRECTORY) 
   \                     ??WipeFiles_3:
   \   00000080   100015E3           TST      R5,#0x10
   \   00000084   8C008DE2           ADD      R0,SP,#+140
   \   00000088   0100000A           BEQ      ??WipeFiles_4
   4064          					WipeFiles(fullName);			// call this routine recursively
   \   0000008C   ........           BL       WipeFiles
   \   00000090   000000EA           B        ??WipeFiles_2
   4065          				else 		// regular file			
   4066          					FS_Remove(fullName);
   \                     ??WipeFiles_4:
   \   00000094   ........           BL       FS_Remove
   4067          			} // if
   4068          
   4069          		} while (FS_FindNextFile (&fd));
   \                     ??WipeFiles_2:
   \   00000098   50008DE2           ADD      R0,SP,#+80
   \   0000009C   ........           BL       FS_FindNextFile
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   E1FFFF1A           BNE      ??WipeFiles_1
   4070          	} // if
   4071          	FS_FindClose(&fd);
   \                     ??WipeFiles_0:
   \   000000A8   50008DE2           ADD      R0,SP,#+80
   \   000000AC   ........           BL       FS_FindClose
   4072          	
   4073          	// now get rid of folder
   4074          	FS_RmDir(folder);
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       FS_RmDir
   4075          	
   4076          } // WipeFiles
   \   000000B8   49DF8DE2           ADD      SP,SP,#+292      ;; stack cleaning
   \   000000BC   3080BDE8           POP      {R4,R5,PC}       ;; return
   4077          #endif
   4078          

   \                                 In section .text, align 4, keep-with-next
   4079          static const GUI_WIDGET_CREATE_INFO UpdatedFileResources[] = {
   \                     UpdatedFileResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Check Your Settings">`
   \              ....        
   \   00000008   00001E001400       DC16 0, 30, 20, 400, 220, 0
   \              9001DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Vehicle data, includi...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 390, 30, 2
   \              86011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "updated to a new vers...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 390, 30, 2
   \              86011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "Check your alarm sett...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 390, 30, 2
   \              86011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000068   010091007300       DC16 1, 145, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   4080          	{ FRAMEWIN_CreateIndirect, "Check Your Settings", 0, 30, 20, 400, 220, 0, 0 },
   4081          	{ TEXT_CreateIndirect, "Vehicle data, including inputs,", 0, 0, 10, 390, 30, TEXT_CF_HCENTER },
   4082          	{ TEXT_CreateIndirect, "updated to a new version.",    0, 0, 40, 390, 30, TEXT_CF_HCENTER },
   4083          	{ TEXT_CreateIndirect, "Check your alarm settings.",    0, 0, 70, 390, 30, TEXT_CF_HCENTER },
   4084          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 145, 115, 100, 60 },
   4085          };
   4086          

   \                                 In section .text, align 4, keep-with-next
   4087          void DisplayUpdatedVehicleDataPopup(void)
   4088          {
   \                     DisplayUpdatedVehicleDataPopup:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   4089          	int x, y;
   4090          
   4091          	HideSprites();
   \   00000008   ........           BL       HideSprites
   4092          
   4093          	SetPopupDefaults(WARNING_POPUP);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   ........           BL       SetPopupDefaults
   4094          
   4095          	glbBlackoutFlag = true;			// Suspend gauge screen updates while the modal popup dialog box is diaplyed
   \   00000014   ........           LDR      R0,??DataTable160_15
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   001080E5           STR      R1,[R0, #+0]
   4096          
   4097          	systemSettingsPopupScreen = 0;
   \   00000020   ........           LDR      R0,??DataTable160_16
   \   00000024   0010A0E3           MOV      R1,#+0
   \   00000028   001080E5           STR      R1,[R0, #+0]
   4098          
   4099          	GUI_GetOrg(&x, &y);	
   \   0000002C   08108DE2           ADD      R1,SP,#+8
   \   00000030   0C008DE2           ADD      R0,SP,#+12
   \   00000034   ........           BL       GUI_GetOrg
   4100          	GUI_ExecDialogBox(UpdatedFileResources, GUI_COUNTOF(UpdatedFileResources), &popupCallback, WM_GetDesktopWindow(), 10, y + 10);
   \   00000038   ........           BL       WM_GetDesktopWindow
   \   0000003C   08109DE5           LDR      R1,[SP, #+8]
   \   00000040   0030A0E1           MOV      R3,R0
   \   00000044   0A1081E2           ADD      R1,R1,#+10
   \   00000048   04108DE5           STR      R1,[SP, #+4]
   \   0000004C   0A10A0E3           MOV      R1,#+10
   \   00000050   00108DE5           STR      R1,[SP, #+0]
   \   00000054   ........           LDR      R2,??DataTable160_17
   \   00000058   0510A0E3           MOV      R1,#+5
   \   0000005C   ............       ADRL     R0,UpdatedFileResources
   \              ....        
   \   00000064   ........           BL       GUI_ExecDialogBox
   4101          
   4102          	UnhideSprites();
   \   00000068   ........           BL       UnhideSprites
   4103          }
   \   0000006C   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000070   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable133:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable139:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable140:
   \   00000000   77620000           DC8      0x77, 0x62, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable142:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable147:
   \   00000000   ........           DC32     vehicleData+0x1DC

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable148:
   \   00000000   ........           DC32     vehicleData+0x3B0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable148_1:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable148_2:
   \   00000000   ........           DC32     vehicleData+0x1850

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   50534900           DC8      "PSI"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154:
   \   00000000   476F0000           DC8      0x47, 0x6F, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_1:
   \   00000000   4F4E0000           DC8      0x4F, 0x4E, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_2:
   \   00000000   4F464600           DC8      "OFF"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_3:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_4:
   \   00000000   ........           DC32     MB_SDcardRW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_5:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_1:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_2:
   \   00000000   72620000           DC8      0x72, 0x62, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160:
   \   00000000   ........           DC32     defaultVehicles

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_1:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_2:
   \   00000000   33335B41           DC32     0x415b3333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_3:
   \   00000000   33330D42           DC32     0x420d3333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_4:
   \   00000000   33336BC1           DC32     0xc16b3333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_5:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_6:
   \   00000000   C3F54840           DC32     0x4048f5c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_7:
   \   00000000   85EBF13F           DC32     0x3ff1eb85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_8:
   \   00000000   713DAA3F           DC32     0x3faa3d71

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_9:
   \   00000000   295C4F3F           DC32     0x3f4f5c29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_10:
   \   00000000   ........           DC32     vehicleData+0x25A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_11:
   \   00000000   ........           DC32     vehicleData+0x26B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_12:
   \   00000000   ........           DC32     vehicleData+0x27C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_13:
   \   00000000   ........           DC32     tempVehicleName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_14:
   \   00000000   ........           DC32     vehicleSelectionChanged

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_15:
   \   00000000   ........           DC32     glbBlackoutFlag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_16:
   \   00000000   ........           DC32     systemSettingsPopupScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160_17:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "00.00">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303000       DC8 48, 48, 46, 48, 48, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "00.01">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303100       DC8 48, 48, 46, 48, 49, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "00.02">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   30302E303200       DC8 48, 48, 46, 48, 50, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "350Z">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3335305A0000       DC8 51, 53, 48, 90, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "370Z">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3337305A0000       DC8 51, 55, 48, 90, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "AEM AirFuel">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   41454D204169       DC8 65, 69, 77, 32, 65, 105, 114, 70, 117, 101
   \              72467565    
   \   0000000A   6C00               DC8 108, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW 135i">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57203133       DC8 66, 77, 87, 32, 49, 51, 53, 105, 0, 0
   \              35690000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW 1M">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   424D5720314D       DC8 66, 77, 87, 32, 49, 77, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW 2002">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57203230       DC8 66, 77, 87, 32, 50, 48, 48, 50, 0, 0
   \              30320000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E30">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   424D57204533       DC8 66, 77, 87, 32, 69, 51, 48, 0
   \              3000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E30 M3">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204533       DC8 66, 77, 87, 32, 69, 51, 48, 32, 77, 51
   \              30204D33    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E36 325">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204533       DC8 66, 77, 87, 32, 69, 51, 54, 32, 51, 50
   \              36203332    
   \   0000000A   3500               DC8 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E36 M3">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204533       DC8 66, 77, 87, 32, 69, 51, 54, 32, 77, 51
   \              36204D33    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E39 M5">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204533       DC8 66, 77, 87, 32, 69, 51, 57, 32, 77, 53
   \              39204D35    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E46 325">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204534       DC8 66, 77, 87, 32, 69, 52, 54, 32, 51, 50
   \              36203332    
   \   0000000A   3500               DC8 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E46 M3">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204534       DC8 66, 77, 87, 32, 69, 52, 54, 32, 77, 51
   \              36204D33    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E60 M5">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204536       DC8 66, 77, 87, 32, 69, 54, 48, 32, 77, 53
   \              30204D35    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E90 325">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204539       DC8 66, 77, 87, 32, 69, 57, 48, 32, 51, 50
   \              30203332    
   \   0000000A   3500               DC8 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW E92 M3">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204539       DC8 66, 77, 87, 32, 69, 57, 50, 32, 77, 51
   \              32204D33    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW F10 M5">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57204631       DC8 66, 77, 87, 32, 70, 49, 48, 32, 77, 53
   \              30204D35    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW Z4 3L">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57205A34       DC8 66, 77, 87, 32, 90, 52, 32, 51, 76, 0
   \              20334C00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BMW Z4 M">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   424D57205A34       DC8 66, 77, 87, 32, 90, 52, 32, 77, 0, 0
   \              204D0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Boxster 01">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 32, 48, 49
   \              72203031    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Boxster 03">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 32, 48, 51
   \              72203033    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Boxster 04">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 32, 48, 52
   \              72203034    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BoxsterS 00">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 83, 32, 48
   \              72532030    
   \   0000000A   3000               DC8 48, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BoxsterS 03">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 83, 32, 48
   \              72532030    
   \   0000000A   3300               DC8 51, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BoxsterS 04">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 83, 32, 48
   \              72532030    
   \   0000000A   3400               DC8 52, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BoxsterS DSG 14">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   426F78737465       DC8 66, 111, 120, 115, 116, 101, 114, 83, 32, 68
   \              72532044    
   \   0000000A   534720313400       DC8 83, 71, 32, 49, 52, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "BR-Z">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   42522D5A0000       DC8 66, 82, 45, 90, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "CaymanS 04">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4361796D616E       DC8 67, 97, 121, 109, 97, 110, 83, 32, 48, 52
   \              53203034    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "CaymanS DSG 14">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4361796D616E       DC8 67, 97, 121, 109, 97, 110, 83, 32, 68, 83
   \              53204453    
   \   0000000A   472031340000       DC8 71, 32, 49, 52, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Civic 92-95">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   436976696320       DC8 67, 105, 118, 105, 99, 32, 57, 50, 45, 57
   \              39322D39    
   \   0000000A   3500               DC8 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Elise">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   456C69736500       DC8 69, 108, 105, 115, 101, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EVO 04">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   45564F203034       DC8 69, 86, 79, 32, 48, 52, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EVO MR 05">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   45564F204D52       DC8 69, 86, 79, 32, 77, 82, 32, 48, 53, 0
   \              20303500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "EVO TWIN 08">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   45564F205457       DC8 69, 86, 79, 32, 84, 87, 73, 78, 32, 48
   \              494E2030    
   \   0000000A   3800               DC8 56, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Evora">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   45766F726100       DC8 69, 118, 111, 114, 97, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Exige">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   457869676500       DC8 69, 120, 105, 103, 101, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ferrari 360">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466572726172       DC8 70, 101, 114, 114, 97, 114, 105, 32, 51, 54
   \              69203336    
   \   0000000A   3000               DC8 48, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ferrari 430">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466572726172       DC8 70, 101, 114, 114, 97, 114, 105, 32, 52, 51
   \              69203433    
   \   0000000A   3000               DC8 48, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Ferrari 458">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466572726172       DC8 70, 101, 114, 114, 97, 114, 105, 32, 52, 53
   \              69203435    
   \   0000000A   3800               DC8 56, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Fiat 500 Abarth">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   466961742035       DC8 70, 105, 97, 116, 32, 53, 48, 48, 32, 65
   \              30302041    
   \   0000000A   626172746800       DC8 98, 97, 114, 116, 104, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "FR-S">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   46522D530000       DC8 70, 82, 45, 83, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Genesis Turbo">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   47656E657369       DC8 71, 101, 110, 101, 115, 105, 115, 32, 84, 117
   \              73205475    
   \   0000000A   72626F000000       DC8 114, 98, 111, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Genesis V6">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   47656E657369       DC8 71, 101, 110, 101, 115, 105, 115, 32, 86, 54
   \              73205636    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GT3 996 03">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   475433203939       DC8 71, 84, 51, 32, 57, 57, 54, 32, 48, 51
   \              36203033    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GT3 996 99">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   475433203939       DC8 71, 84, 51, 32, 57, 57, 54, 32, 57, 57
   \              36203939    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GT3 997 06">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   475433203939       DC8 71, 84, 51, 32, 57, 57, 55, 32, 48, 54
   \              37203036    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GT3 RS 996 03">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   475433205253       DC8 71, 84, 51, 32, 82, 83, 32, 57, 57, 54
   \              20393936    
   \   0000000A   203033000000       DC8 32, 48, 51, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GT3 RS 997 10">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   475433205253       DC8 71, 84, 51, 32, 82, 83, 32, 57, 57, 55
   \              20393937    
   \   0000000A   203130000000       DC8 32, 49, 48, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GTR">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   47545200           DC8 71, 84, 82, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Integra GSR 94">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   496E74656772       DC8 73, 110, 116, 101, 103, 114, 97, 32, 71, 83
   \              61204753    
   \   0000000A   522039340000       DC8 82, 32, 57, 52, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Integra LS 02">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   496E74656772       DC8 73, 110, 116, 101, 103, 114, 97, 32, 76, 83
   \              61204C53    
   \   0000000A   203032000000       DC8 32, 48, 50, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Integra R 99">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   496E74656772       DC8 73, 110, 116, 101, 103, 114, 97, 32, 82, 32
   \              61205220    
   \   0000000A   393900000000       DC8 57, 57, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Miata 90-93">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D6961746120       DC8 77, 105, 97, 116, 97, 32, 57, 48, 45, 57
   \              39302D39    
   \   0000000A   3300               DC8 51, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Miata 94-97">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D6961746120       DC8 77, 105, 97, 116, 97, 32, 57, 52, 45, 57
   \              39342D39    
   \   0000000A   3700               DC8 55, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Miata 99-05 5spd">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4D6961746120       DC8 77, 105, 97, 116, 97, 32, 57, 57, 45, 48
   \              39392D30    
   \   0000000A   352035737064       DC8 53, 32, 53, 115, 112, 100, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Miata 99-05 6spd">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4D6961746120       DC8 77, 105, 97, 116, 97, 32, 57, 57, 45, 48
   \              39392D30    
   \   0000000A   352036737064       DC8 53, 32, 54, 115, 112, 100, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Miata MX5 06+">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D6961746120       DC8 77, 105, 97, 116, 97, 32, 77, 88, 53, 32
   \              4D583520    
   \   0000000A   30362B000000       DC8 48, 54, 43, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Mini CooperS 03">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D696E692043       DC8 77, 105, 110, 105, 32, 67, 111, 111, 112, 101
   \              6F6F7065    
   \   0000000A   725320303300       DC8 114, 83, 32, 48, 51, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "MR2 Spyder 00">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D5232205370       DC8 77, 82, 50, 32, 83, 112, 121, 100, 101, 114
   \              79646572    
   \   0000000A   203030000000       DC8 32, 48, 48, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "MR2 Turbo 94">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D5232205475       DC8 77, 82, 50, 32, 84, 117, 114, 98, 111, 32
   \              72626F20    
   \   0000000A   393400000000       DC8 57, 52, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Mustang GT 01">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D757374616E       DC8 77, 117, 115, 116, 97, 110, 103, 32, 71, 84
   \              67204754    
   \   0000000A   203031000000       DC8 32, 48, 49, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Mustang GT 11">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D757374616E       DC8 77, 117, 115, 116, 97, 110, 103, 32, 71, 84
   \              67204754    
   \   0000000A   203131000000       DC8 32, 49, 49, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NSX 02">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4E5358203032       DC8 78, 83, 88, 32, 48, 50, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NSX 94">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4E5358203934       DC8 78, 83, 88, 32, 57, 52, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RSX">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   52535800           DC8 82, 83, 88, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX7 78-85 4spd">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   525837203738       DC8 82, 88, 55, 32, 55, 56, 45, 56, 53, 32
   \              2D383520    
   \   0000000A   347370640000       DC8 52, 115, 112, 100, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX7 78-85 5spd">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   525837203738       DC8 82, 88, 55, 32, 55, 56, 45, 56, 53, 32
   \              2D383520    
   \   0000000A   357370640000       DC8 53, 115, 112, 100, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX7 84-85 GSL-SE">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   525837203834       DC8 82, 88, 55, 32, 56, 52, 45, 56, 53, 32
   \              2D383520    
   \   0000000A   47534C2D5345       DC8 71, 83, 76, 45, 83, 69, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX7 FC 86-91">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   525837204643       DC8 82, 88, 55, 32, 70, 67, 32, 56, 54, 45
   \              2038362D    
   \   0000000A   393100000000       DC8 57, 49, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX7 FD 91-02">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   525837204644       DC8 82, 88, 55, 32, 70, 68, 32, 57, 49, 45
   \              2039312D    
   \   0000000A   303200000000       DC8 48, 50, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RX8">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   52583800           DC8 82, 88, 56, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Ratio">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   526174696F00       DC8 82, 97, 116, 105, 111, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "AEM MAP75">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   41454D204D41       DC8 65, 69, 77, 32, 77, 65, 80, 55, 53, 0
   \              50373500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "PLX Temp">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   504C58205465       DC8 80, 76, 88, 32, 84, 101, 109, 112, 0, 0
   \              6D700000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "DegF">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   446567460000       DC8 68, 101, 103, 70, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Battery">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   426174746572       DC8 66, 97, 116, 116, 101, 114, 121, 0
   \              7900        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "S2000 00-03">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   533230303020       DC8 83, 50, 48, 48, 48, 32, 48, 48, 45, 48
   \              30302D30    
   \   0000000A   3300               DC8 51, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "S2000 04-09">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   533230303020       DC8 83, 50, 48, 48, 48, 32, 48, 52, 45, 48
   \              30342D30    
   \   0000000A   3900               DC8 57, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Spec Miata 90-93">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53706563204D       DC8 83, 112, 101, 99, 32, 77, 105, 97, 116, 97
   \              69617461    
   \   0000000A   2039302D3933       DC8 32, 57, 48, 45, 57, 51, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Spec Miata 94-97">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53706563204D       DC8 83, 112, 101, 99, 32, 77, 105, 97, 116, 97
   \              69617461    
   \   0000000A   2039342D3937       DC8 32, 57, 52, 45, 57, 55, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Spec Miata 99-05">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53706563204D       DC8 83, 112, 101, 99, 32, 77, 105, 97, 116, 97
   \              69617461    
   \   0000000A   2039392D3035       DC8 32, 57, 57, 45, 48, 53, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Supra 98">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   537570726120       DC8 83, 117, 112, 114, 97, 32, 57, 56, 0, 0
   \              39380000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Viper 05">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   566970657220       DC8 86, 105, 112, 101, 114, 32, 48, 53, 0, 0
   \              30350000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Viper 12">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   566970657220       DC8 86, 105, 112, 101, 114, 32, 49, 50, 0, 0
   \              31320000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Volts">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   566F6C747300       DC8 86, 111, 108, 116, 115, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Brake">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4272616B6500       DC8 66, 114, 97, 107, 101, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Stop">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   53746F700000       DC8 83, 116, 111, 112, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Digital %d">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   446967697461       DC8 68, 105, 103, 105, 116, 97, 108, 32, 37, 100
   \              6C202564    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ".dat">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2E6461740000       DC8 46, 100, 97, 116, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Driver B">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 66, 0, 0
   \              20420000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Driver C">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 67, 0, 0
   \              20430000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Driver D">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 68, 0, 0
   \              20440000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Driver E">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 69, 0, 0
   \              20450000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "WRX STI 04">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   575258205354       DC8 87, 82, 88, 32, 83, 84, 73, 32, 48, 52
   \              49203034    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "WRX STI 08">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   575258205354       DC8 87, 82, 88, 32, 83, 84, 73, 32, 48, 56
   \              49203038    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "WRX STI 11">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   575258205354       DC8 87, 82, 88, 32, 83, 84, 73, 32, 49, 49
   \              49203131    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Z06 C5">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5A3036204335       DC8 90, 48, 54, 32, 67, 53, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Z06 C6">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5A3036204336       DC8 90, 48, 54, 32, 67, 54, 0, 0
   \              0000        

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Check Your Settings">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436865636B20       DC8 67, 104, 101, 99, 107, 32, 89, 111, 117, 114
   \              596F7572    
   \   0000000A   205365747469       DC8 32, 83, 101, 116, 116, 105, 110, 103, 115, 0
   \              6E677300    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Vehicle data, includi...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 32, 100, 97
   \              65206461    
   \   0000000A   74612C20696E       DC8 116, 97, 44, 32, 105, 110, 99, 108, 117, 100
   \              636C7564    
   \   00000014   696E6720696E       DC8 105, 110, 103, 32, 105, 110, 112, 117, 116, 115
   \              70757473    
   \   0000001E   2C00               DC8 44, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "updated to a new vers...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   757064617465       DC8 117, 112, 100, 97, 116, 101, 100, 32, 116, 111
   \              6420746F    
   \   0000000A   2061206E6577       DC8 32, 97, 32, 110, 101, 119, 32, 118, 101, 114
   \              20766572    
   \   00000014   73696F6E2E00       DC8 115, 105, 111, 110, 46, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Check your alarm sett...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   436865636B20       DC8 67, 104, 101, 99, 107, 32, 121, 111, 117, 114
   \              796F7572    
   \   0000000A   20616C61726D       DC8 32, 97, 108, 97, 114, 109, 32, 115, 101, 116
   \              20736574    
   \   00000014   74696E67732E       DC8 116, 105, 110, 103, 115, 46, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OK">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4B0000           DC8 79, 75, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "wb">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   77620000           DC8 119, 98, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "PSI">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   50534900           DC8 80, 83, 73, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Go">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   476F0000           DC8 71, 111, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ON">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4E0000           DC8 79, 78, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OFF">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F464600           DC8 79, 70, 70, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "\\\\">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   5C00               DC8 92, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "rb">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   72620000           DC8 114, 98, 0, 0
   4104          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AddPath                            16
     AnyFilesFound                     144
     ConvertToFilename                  16
     CreateAllFiles                     16
     DeleteAllFiles                    304
     DisplayUpdatedVehicleDataPopup     24
     FRWReadFile                        24
     FRWWriteFile                       16
     InitializeCriticalVariables         0
     InitializeData                      8
     InitializeDirectoryStructure       16
     ReadDataStructures                  8
     ReadSDCardData                      8
     ReloadData                       5544
     SetDefaultAnalogInputData           8
     SetDefaultDigitalInputData         32
     SetDefaultDriverData                8
     SetDefaultGears                     0
     SetDefaultSystemData                8
     SetDefaultTach                      0
     SetDefaultTempCalData               8
     SetDefaultTrackData                 8
     SetDefaultVehicleData              24
     SetMandatoryDefaultSelections       8
     UpdateAnalogInputData              12
     UpgradeSysData00_01                12
     UpgradeSysData01_02                16
     UpgradeVehicleData00_01            32
     WipeFiles                         304
     WriteDataStructures                 8
     WriteUserDataEvent                544
     verifyData                         32


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     SOFTWARE_VERSION                           8
     SYSTEM_VERSION                             8
     VEHICLE_VERSION                            8
     DRIVER_VERSION                             8
     TRACK_VERSION                              8
     SYSTEM_FILE_NAME                          16
     BACKUP_SYSTEM_FILE_NAME                   20
     DEFAULT_DRIVER                            12
     DEFAULT_VEHICLE                           20
     DEFAULT_TRACK                              1
     SYSTEM_PATH                               16
     DRIVER_PATH                               24
     VEHICLE_PATH                              24
     TRACK_PATH                                20
     MY_SESSIONS_PATH                          12
     vehicleData                             6240
     sysData
     unsavedSysData
     trackData
     driverData
     suData                                    36
     sectors                                10400
     taskProfile                              196
     defaultVehicles                         9072
     ReadDataStructures                        96
     ReadSDCardData                            96
     verifyData                               492
     UpgradeSysData00_01                      208
     UpgradeSysData01_02                      236
     UpgradeVehicleData00_01                  396
     UpdateAnalogInputData                    224
     SetDefaultTempCalData                     40
     WriteDataStructures                       48
     WriteUserDataEvent                       936
     FRWWriteFile                             112
     InitializeDirectoryStructure             120
     InitializeData                           116
     SetDefaultSystemData                     228
     SetMandatoryDefaultSelections             76
     SetDefaultDriverData                      40
     SetDefaultTrackData                       52
     SetDefaultVehicleData                    288
     SetDefaultAnalogInputData                532
     SetDefaultDigitalInputData               240
     SetDefaultTach                            52
     SetDefaultGears                           64
     InitializeCriticalVariables              100
     AddPath                                  120
     ConvertToFilename                        140
     ReloadData                               828
     FRWReadFile                              132
     AnyFilesFound                            168
     CreateAllFiles                           312
     DeleteAllFiles                           200
     WipeFiles                                192
     UpdatedFileResources                     120
     DisplayUpdatedVehicleDataPopup           116
     ??DataTable133                             4
     ??DataTable139                             4
     ??DataTable140                             4
     ??DataTable142                             4
     ??DataTable147                             4
     ??DataTable148                             4
     ??DataTable148_1                           4
     ??DataTable148_2                           4
     ??DataTable153                             4
     ??DataTable154                             4
     ??DataTable154_1                           4
     ??DataTable154_2                           4
     ??DataTable154_3                           4
     ??DataTable154_4                           4
     ??DataTable154_5                           4
     ??DataTable156                             4
     ??DataTable156_1                           4
     ??DataTable156_2                           4
     ??DataTable160                             4
     ??DataTable160_1                           4
     ??DataTable160_2                           4
     ??DataTable160_3                           4
     ??DataTable160_4                           4
     ??DataTable160_5                           4
     ??DataTable160_6                           4
     ??DataTable160_7                           4
     ??DataTable160_8                           4
     ??DataTable160_9                           4
     ??DataTable160_10                          4
     ??DataTable160_11                          4
     ??DataTable160_12                          4
     ??DataTable160_13                          4
     ??DataTable160_14                          4
     ??DataTable160_15                          4
     ??DataTable160_16                          4
     ??DataTable160_17                          4
     ?<Constant "00.00">                        8
     ?<Constant "00.01">                        8
     ?<Constant "00.02">                        8
     ?<Constant "350Z">                         8
     ?<Constant "370Z">                         8
     ?<Constant "AEM AirFuel">                 12
     ?<Constant "BMW 135i">                    12
     ?<Constant "BMW 1M">                       8
     ?<Constant "BMW 2002">                    12
     ?<Constant "BMW E30">                      8
     ?<Constant "BMW E30 M3">                  12
     ?<Constant "BMW E36 325">                 12
     ?<Constant "BMW E36 M3">                  12
     ?<Constant "BMW E39 M5">                  12
     ?<Constant "BMW E46 325">                 12
     ?<Constant "BMW E46 M3">                  12
     ?<Constant "BMW E60 M5">                  12
     ?<Constant "BMW E90 325">                 12
     ?<Constant "BMW E92 M3">                  12
     ?<Constant "BMW F10 M5">                  12
     ?<Constant "BMW Z4 3L">                   12
     ?<Constant "BMW Z4 M">                    12
     ?<Constant "Boxster 01">                  12
     ?<Constant "Boxster 03">                  12
     ?<Constant "Boxster 04">                  12
     ?<Constant "BoxsterS 00">                 12
     ?<Constant "BoxsterS 03">                 12
     ?<Constant "BoxsterS 04">                 12
     ?<Constant "BoxsterS DSG 14">             16
     ?<Constant "BR-Z">                         8
     ?<Constant "CaymanS 04">                  12
     ?<Constant "CaymanS DSG 14">              16
     ?<Constant "Civic 92-95">                 12
     ?<Constant "Elise">                        8
     ?<Constant "EVO 04">                       8
     ?<Constant "EVO MR 05">                   12
     ?<Constant "EVO TWIN 08">                 12
     ?<Constant "Evora">                        8
     ?<Constant "Exige">                        8
     ?<Constant "Ferrari 360">                 12
     ?<Constant "Ferrari 430">                 12
     ?<Constant "Ferrari 458">                 12
     ?<Constant "Fiat 500 Abarth">             16
     ?<Constant "FR-S">                         8
     ?<Constant "Genesis Turbo">               16
     ?<Constant "Genesis V6">                  12
     ?<Constant "GT3 996 03">                  12
     ?<Constant "GT3 996 99">                  12
     ?<Constant "GT3 997 06">                  12
     ?<Constant "GT3 RS 996 03">               16
     ?<Constant "GT3 RS 997 10">               16
     ?<Constant "GTR">                          4
     ?<Constant "Integra GSR 94">              16
     ?<Constant "Integra LS 02">               16
     ?<Constant "Integra R 99">                16
     ?<Constant "Miata 90-93">                 12
     ?<Constant "Miata 94-97">                 12
     ?<Constant "Miata 99-05 5spd">            20
     ?<Constant "Miata 99-05 6spd">            20
     ?<Constant "Miata MX5 06+">               16
     ?<Constant "Mini CooperS 03">             16
     ?<Constant "MR2 Spyder 00">               16
     ?<Constant "MR2 Turbo 94">                16
     ?<Constant "Mustang GT 01">               16
     ?<Constant "Mustang GT 11">               16
     ?<Constant "NSX 02">                       8
     ?<Constant "NSX 94">                       8
     ?<Constant "RSX">                          4
     ?<Constant "RX7 78-85 4spd">              16
     ?<Constant "RX7 78-85 5spd">              16
     ?<Constant "RX7 84-85 GSL-SE">            20
     ?<Constant "RX7 FC 86-91">                16
     ?<Constant "RX7 FD 91-02">                16
     ?<Constant "RX8">                          4
     ?<Constant "Ratio">                        8
     ?<Constant "AEM MAP75">                   12
     ?<Constant "PLX Temp">                    12
     ?<Constant "DegF">                         8
     ?<Constant "Battery">                      8
     ?<Constant "S2000 00-03">                 12
     ?<Constant "S2000 04-09">                 12
     ?<Constant "Spec Miata 90-93">            20
     ?<Constant "Spec Miata 94-97">            20
     ?<Constant "Spec Miata 99-05">            20
     ?<Constant "Supra 98">                    12
     ?<Constant "Viper 05">                    12
     ?<Constant "Viper 12">                    12
     ?<Constant "Volts">                        8
     ?<Constant "Brake">                        8
     ?<Constant "Stop">                         8
     ?<Constant "Digital %d">                  12
     ?<Constant ".dat">                         8
     ?<Constant "Driver B">                    12
     ?<Constant "Driver C">                    12
     ?<Constant "Driver D">                    12
     ?<Constant "Driver E">                    12
     ?<Constant "WRX STI 04">                  12
     ?<Constant "WRX STI 08">                  12
     ?<Constant "WRX STI 11">                  12
     ?<Constant "Z06 C5">                       8
     ?<Constant "Z06 C6">                       8
     ?<Constant "">                             1
     ?<Constant "Check Your Settings">         20
     ?<Constant "Vehicle data, includi...">    32
     ?<Constant "updated to a new vers...">    28
     ?<Constant "Check your alarm sett...">    28
     ?<Constant "OK">                           4
     ?<Constant "wb">                           4
     ?<Constant "PSI">                          4
     ?<Constant "Go">                           4
     ?<Constant "ON">                           4
     ?<Constant "OFF">                          4
     ?<Constant "\\">                           2
     ?<Constant "rb">                           4

 
 16 676 bytes in section .bss
  9 268 bytes in section .data
  1 187 bytes in section .rodata
  7 637 bytes in section .text
 
  7 637 bytes of CODE  memory
  1 187 bytes of CONST memory
 25 944 bytes of DATA  memory

Errors: none
Warnings: none
