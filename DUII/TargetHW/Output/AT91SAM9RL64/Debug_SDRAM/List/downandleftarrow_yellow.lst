###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:28 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\Graphics\downandleftarrow_yellow.c          #
#    Command line =  C:\DUII\DUII\Graphics\downandleftarrow_yellow.c -D       #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\do #
#                    wnandleftarrow_yellow.lst                                #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\dow #
#                    nandleftarrow_yellow.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\Graphics\downandleftarrow_yellow.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER SYSTEME GmbH                 *
      3          *        Solutions for real time microcontroller applications        *
      4          *                           www.segger.com                           *
      5          **********************************************************************
      6          *
      7          * C-file generated by
      8          *
      9          *        Bitmap converter for emWin V5.04.
     10          *        Compiled Jan  8 2010, 16:37:17
     11          *        (C) 1998 - 2005 Segger Microcontroller Systeme GmbH
     12          *
     13          **********************************************************************
     14          *
     15          * Source file: downandleftarrow_yellow
     16          * Dimensions:  31 * 31
     17          * NumColors:   3
     18          *
     19          **********************************************************************
     20          */
     21          
     22          #include <stdlib.h>
     23          
     24          #include "GUI.h"
     25          
     26          #ifndef GUI_CONST_STORAGE
     27            #define GUI_CONST_STORAGE const
     28          #endif
     29          
     30          /*   Palette
     31          The following are the entries of the palette table.
     32          Every entry is a 32-bit value (of which 24 bits are actually used)
     33          the lower   8 bits represent the Red component,
     34          the middle  8 bits represent the Green component,
     35          the highest 8 bits (of the 24 bits used) represent the Blue component
     36          as follows:   0xBBGGRR
     37          */
     38          

   \                                 In section .rodata, align 4, keep-with-next
     39          static GUI_CONST_STORAGE GUI_COLOR Colorsdownandleftarrow_yellow[] = {
   \                     Colorsdownandleftarrow_yellow:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   00000000FFFF       DC32 0, 65535, 16711680
   \              00000000FF00
     40               0x000000,0x00FFFF,0xFF0000
     41          };
     42          

   \                                 In section .rodata, align 4, keep-with-next
     43          static GUI_CONST_STORAGE GUI_LOGPALETTE Paldownandleftarrow_yellow = {
   \                     Paldownandleftarrow_yellow:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   03000000           DC32 3
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 Colorsdownandleftarrow_yellow
     44            3,	/* number of entries */
     45            1, 	/* Has transparency */
     46            &Colorsdownandleftarrow_yellow[0]
     47          };
     48          

   \                                 In section .rodata, align 4, keep-with-next
     49          static GUI_CONST_STORAGE unsigned char acdownandleftarrow_yellow[] = {
   \                     acdownandleftarrow_yellow:
   \   00000000                      ; Initializer data, 248 bytes
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000001E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000032   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000003C   00000000002A       DC8 0, 0, 0, 0, 0, 42, 0, 0, 0, 0
   \              00000000    
   \   00000046   000000A60000       DC8 0, 0, 0, 166, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000050   029600000000       DC8 2, 150, 0, 0, 0, 0, 0, 0, 10, 86
   \              00000A56    
   \   0000005A   AAAAAA000000       DC8 170, 170, 170, 0, 0, 0, 41, 85, 85, 85
   \              29555555    
   \   00000064   56000000A555       DC8 86, 0, 0, 0, 165, 85, 85, 85, 86, 0
   \              55555600    
   \   0000006E   000095555555       DC8 0, 0, 149, 85, 85, 85, 86, 0, 0, 0
   \              56000000    
   \   00000078   A55555555600       DC8 165, 85, 85, 85, 86, 0, 0, 0, 41, 85
   \              00002955    
   \   00000082   555556000000       DC8 85, 85, 86, 0, 0, 0, 10, 86, 170, 165
   \              0A56AAA5    
   \   0000008C   560000000296       DC8 86, 0, 0, 0, 2, 150, 0, 37, 86, 0
   \              00255600    
   \   00000096   000000A60025       DC8 0, 0, 0, 166, 0, 37, 86, 0, 0, 0
   \              56000000    
   \   000000A0   002A00255600       DC8 0, 42, 0, 37, 86, 0, 0, 0, 0, 0
   \              00000000    
   \   000000AA   002556000000       DC8 0, 37, 86, 0, 0, 0, 0, 0, 0, 37
   \              00000025    
   \   000000B4   560000000000       DC8 86, 0, 0, 0, 0, 0, 10, 165, 86, 168
   \              0AA556A8    
   \   000000BE   000000000955       DC8 0, 0, 0, 0, 9, 85, 85, 88, 0, 0
   \              55580000    
   \   000000C8   00000A555568       DC8 0, 0, 10, 85, 85, 104, 0, 0, 0, 0
   \              00000000    
   \   000000D2   029555A00000       DC8 2, 149, 85, 160, 0, 0, 0, 0, 0, 165
   \              000000A5    
   \   000000DC   568000000000       DC8 86, 128, 0, 0, 0, 0, 0, 41, 90, 0
   \              00295A00    
   \   000000E6   00000000000A       DC8 0, 0, 0, 0, 0, 10, 104, 0, 0, 0
   \              68000000    
   \   000000F0   00000002A000       DC8 0, 0, 0, 2, 160, 0, 0, 0
   \              0000        
     50            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     51            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     52            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     53            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     54            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     55            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     56            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     57            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     58            0x00, 0x2A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     59            0x00, 0xA6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     60            0x02, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     61            0x0A, 0x56, 0xAA, 0xAA, 0xAA, 0x00, 0x00, 0x00,
     62            0x29, 0x55, 0x55, 0x55, 0x56, 0x00, 0x00, 0x00,
     63            0xA5, 0x55, 0x55, 0x55, 0x56, 0x00, 0x00, 0x00,
     64            0x95, 0x55, 0x55, 0x55, 0x56, 0x00, 0x00, 0x00,
     65            0xA5, 0x55, 0x55, 0x55, 0x56, 0x00, 0x00, 0x00,
     66            0x29, 0x55, 0x55, 0x55, 0x56, 0x00, 0x00, 0x00,
     67            0x0A, 0x56, 0xAA, 0xA5, 0x56, 0x00, 0x00, 0x00,
     68            0x02, 0x96, 0x00, 0x25, 0x56, 0x00, 0x00, 0x00,
     69            0x00, 0xA6, 0x00, 0x25, 0x56, 0x00, 0x00, 0x00,
     70            0x00, 0x2A, 0x00, 0x25, 0x56, 0x00, 0x00, 0x00,
     71            0x00, 0x00, 0x00, 0x25, 0x56, 0x00, 0x00, 0x00,
     72            0x00, 0x00, 0x00, 0x25, 0x56, 0x00, 0x00, 0x00,
     73            0x00, 0x00, 0x0A, 0xA5, 0x56, 0xA8, 0x00, 0x00,
     74            0x00, 0x00, 0x09, 0x55, 0x55, 0x58, 0x00, 0x00,
     75            0x00, 0x00, 0x0A, 0x55, 0x55, 0x68, 0x00, 0x00,
     76            0x00, 0x00, 0x02, 0x95, 0x55, 0xA0, 0x00, 0x00,
     77            0x00, 0x00, 0x00, 0xA5, 0x56, 0x80, 0x00, 0x00,
     78            0x00, 0x00, 0x00, 0x29, 0x5A, 0x00, 0x00, 0x00,
     79            0x00, 0x00, 0x00, 0x0A, 0x68, 0x00, 0x00, 0x00,
     80            0x00, 0x00, 0x00, 0x02, 0xA0, 0x00, 0x00, 0x00
     81          };
     82          

   \                                 In section .rodata, align 4, keep-with-next
     83          GUI_CONST_STORAGE GUI_BITMAP bmdownandleftarrow_yellow = {
   \                     bmdownandleftarrow_yellow:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   1F001F000800       DC16 31, 31, 8, 2
   \              0200        
   \   00000008   ............       DC32 acdownandleftarrow_yellow, Paldownandleftarrow_yellow
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
     84            31, /* XSize */
     85            31, /* YSize */
     86            8, /* BytesPerLine */
     87            2, /* BitsPerPixel */
     88            acdownandleftarrow_yellow,  /* Pointer to picture data (indices) */
     89            &Paldownandleftarrow_yellow  /* Pointer to palette */
     90          };
     91          
     92          /* *** End of file *** */


   Section sizes:

     Function/Label                Bytes
     --------------                -----
     Colorsdownandleftarrow_yellow   12
     Paldownandleftarrow_yellow      12
     acdownandleftarrow_yellow      248
     bmdownandleftarrow_yellow       20

 
 292 bytes in section .rodata
 
 292 bytes of CONST memory

Errors: none
Warnings: none
