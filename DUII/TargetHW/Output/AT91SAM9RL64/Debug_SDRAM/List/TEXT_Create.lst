###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:03 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\TEXT_Create.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\TEXT_Create.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\TE #
#                    XT_Create.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\TEX #
#                    T_Create.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\TEXT_Create.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : TEXT_Create.c
     19          Purpose     : Implementation of text widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "TEXT.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Exported routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       TEXT_Create
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          TEXT_Handle TEXT_Create(int x0, int y0, int xsize, int ysize, int Id, int Flags, const char * s, int Align) {
   \                     TEXT_Create:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   20C09DE5           LDR      R12,[SP, #+32]
   \   0000000C   24E09DE5           LDR      LR,[SP, #+36]
   \   00000010   28409DE5           LDR      R4,[SP, #+40]
   \   00000014   2C509DE5           LDR      R5,[SP, #+44]
     38            return TEXT_CreateEx(x0, y0, xsize, ysize, WM_HMEM_NULL, Flags, Align, Id, s);
   \   00000018   0CC08DE5           STR      R12,[SP, #+12]
   \   0000001C   00C0A0E3           MOV      R12,#+0
   \   00000020   10408DE5           STR      R4,[SP, #+16]
   \   00000024   08508DE5           STR      R5,[SP, #+8]
   \   00000028   04E08DE5           STR      LR,[SP, #+4]
   \   0000002C   00C08DE5           STR      R12,[SP, #+0]
   \   00000030   ........           BL       TEXT_CreateEx
   \   00000034   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
     39          }
     40          
     41          /*********************************************************************
     42          *
     43          *       TEXT_CreateAsChild
     44          */

   \                                 In section .text, align 4, keep-with-next
     45          TEXT_Handle TEXT_CreateAsChild(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int Id, int Flags, const char * s, int Align) {
   \                     TEXT_CreateAsChild:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   28C09DE5           LDR      R12,[SP, #+40]
   \   0000000C   2CE09DE5           LDR      LR,[SP, #+44]
   \   00000010   30409DE5           LDR      R4,[SP, #+48]
   \   00000014   34509DE5           LDR      R5,[SP, #+52]
   \   00000018   38609DE5           LDR      R6,[SP, #+56]
     46            return TEXT_CreateEx(x0, y0, xsize, ysize, hParent, Flags, Align, Id, s);
   \   0000001C   10508DE5           STR      R5,[SP, #+16]
   \   00000020   0CE08DE5           STR      LR,[SP, #+12]
   \   00000024   08608DE5           STR      R6,[SP, #+8]
   \   00000028   04408DE5           STR      R4,[SP, #+4]
   \   0000002C   00C08DE5           STR      R12,[SP, #+0]
   \   00000030   ........           BL       TEXT_CreateEx
   \   00000034   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
     47          }
     48          
     49          #else  /* avoid empty object files */
     50            void TEXT_Create_C(void) {}
     51          #endif

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     TEXT_Create            32
     TEXT_CreateAsChild     40


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     TEXT_Create          60
     TEXT_CreateAsChild   60

 
 120 bytes in section .text
 
 120 bytes of CODE memory

Errors: none
Warnings: none
