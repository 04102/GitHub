###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:30 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\Graphics\upandleftarrow.c                   #
#    Command line =  C:\DUII\DUII\Graphics\upandleftarrow.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\up #
#                    andleftarrow.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\upa #
#                    ndleftarrow.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\Graphics\upandleftarrow.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER SYSTEME GmbH                 *
      3          *        Solutions for real time microcontroller applications        *
      4          *                           www.segger.com                           *
      5          **********************************************************************
      6          *
      7          * C-file generated by
      8          *
      9          *        Bitmap converter for emWin V5.04.
     10          *        Compiled Jan  8 2010, 16:37:17
     11          *        (C) 1998 - 2005 Segger Microcontroller Systeme GmbH
     12          *
     13          **********************************************************************
     14          *
     15          * Source file: upandleftarrow
     16          * Dimensions:  31 * 31
     17          * NumColors:   2
     18          *
     19          **********************************************************************
     20          */
     21          
     22          #include <stdlib.h>
     23          
     24          #include "GUI.h"
     25          
     26          #ifndef GUI_CONST_STORAGE
     27            #define GUI_CONST_STORAGE const
     28          #endif
     29          
     30          /*   Palette
     31          The following are the entries of the palette table.
     32          Every entry is a 32-bit value (of which 24 bits are actually used)
     33          the lower   8 bits represent the Red component,
     34          the middle  8 bits represent the Green component,
     35          the highest 8 bits (of the 24 bits used) represent the Blue component
     36          as follows:   0xBBGGRR
     37          */
     38          

   \                                 In section .rodata, align 4, keep-with-next
     39          static GUI_CONST_STORAGE GUI_COLOR Colorsupandleftarrow[] = {
   \                     Colorsupandleftarrow:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   00000000FF00       DC32 0, 255
   \              0000        
     40               0x000000,0x0000FF
     41          };
     42          

   \                                 In section .rodata, align 4, keep-with-next
     43          static GUI_CONST_STORAGE GUI_LOGPALETTE Palupandleftarrow = {
   \                     Palupandleftarrow:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   00000000           DC8 0, 0, 0, 0
   \   00000008   ........           DC32 Colorsupandleftarrow
     44            2,	/* number of entries */
     45            0, 	/* No transparency */
     46            &Colorsupandleftarrow[0]
     47          };
     48          

   \                                 In section .rodata, align 4, keep-with-next
     49          static GUI_CONST_STORAGE unsigned char acupandleftarrow[] = {
   \                     acupandleftarrow:
   \   00000000                      ; Initializer data, 124 bytes
   \   00000000   000100000003       DC8 0, 1, 0, 0, 0, 3, 128, 0, 0, 7
   \              80000007    
   \   0000000A   C000000FE000       DC8 192, 0, 0, 15, 224, 0, 0, 31, 240, 0
   \              001FF000    
   \   00000014   003FF8000007       DC8 0, 63, 248, 0, 0, 7, 192, 0, 0, 7
   \              C0000007    
   \   0000001E   C0000007C000       DC8 192, 0, 0, 7, 192, 0, 0, 7, 192, 0
   \              0007C000    
   \   00000028   0407C0000C07       DC8 4, 7, 192, 0, 12, 7, 192, 0, 28, 7
   \              C0001C07    
   \   00000032   C0003FFFC000       DC8 192, 0, 63, 255, 192, 0, 127, 255, 192, 0
   \              7FFFC000    
   \   0000003C   FFFFC0007FFF       DC8 255, 255, 192, 0, 127, 255, 192, 0, 63, 255
   \              C0003FFF    
   \   00000046   C0001C000000       DC8 192, 0, 28, 0, 0, 0, 12, 0, 0, 0
   \              0C000000    
   \   00000050   040000000000       DC8 4, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000064   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000006E   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   00000078   00000000           DC8 0, 0, 0, 0
     50            ________, _______X, ________, ________,
     51            ________, ______XX, X_______, ________,
     52            ________, _____XXX, XX______, ________,
     53            ________, ____XXXX, XXX_____, ________,
     54            ________, ___XXXXX, XXXX____, ________,
     55            ________, __XXXXXX, XXXXX___, ________,
     56            ________, _____XXX, XX______, ________,
     57            ________, _____XXX, XX______, ________,
     58            ________, _____XXX, XX______, ________,
     59            ________, _____XXX, XX______, ________,
     60            _____X__, _____XXX, XX______, ________,
     61            ____XX__, _____XXX, XX______, ________,
     62            ___XXX__, _____XXX, XX______, ________,
     63            __XXXXXX, XXXXXXXX, XX______, ________,
     64            _XXXXXXX, XXXXXXXX, XX______, ________,
     65            XXXXXXXX, XXXXXXXX, XX______, ________,
     66            _XXXXXXX, XXXXXXXX, XX______, ________,
     67            __XXXXXX, XXXXXXXX, XX______, ________,
     68            ___XXX__, ________, ________, ________,
     69            ____XX__, ________, ________, ________,
     70            _____X__, ________, ________, ________,
     71            ________, ________, ________, ________,
     72            ________, ________, ________, ________,
     73            ________, ________, ________, ________,
     74            ________, ________, ________, ________,
     75            ________, ________, ________, ________,
     76            ________, ________, ________, ________,
     77            ________, ________, ________, ________,
     78            ________, ________, ________, ________,
     79            ________, ________, ________, ________,
     80            ________, ________, ________, ________
     81          };
     82          

   \                                 In section .rodata, align 4, keep-with-next
     83          GUI_CONST_STORAGE GUI_BITMAP bmupandleftarrow = {
   \                     bmupandleftarrow:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   1F001F000400       DC16 31, 31, 4, 1
   \              0100        
   \   00000008   ............       DC32 acupandleftarrow, Palupandleftarrow
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
     84            31, /* XSize */
     85            31, /* YSize */
     86            4, /* BytesPerLine */
     87            1, /* BitsPerPixel */
     88            acupandleftarrow,  /* Pointer to picture data (indices) */
     89            &Palupandleftarrow  /* Pointer to palette */
     90          };
     91          
     92          /* *** End of file *** */


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     Colorsupandleftarrow    8
     Palupandleftarrow      12
     acupandleftarrow      124
     bmupandleftarrow       20

 
 164 bytes in section .rodata
 
 164 bytes of CONST memory

Errors: none
Warnings: none
