###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:51 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawPoint.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawPoint.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DrawPoint.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DrawPoint.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawPoint.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawPoint.c
     19          Purpose     : Implementation of point drawing routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       GL_DrawPoint
     28          */

   \                                 In section .text, align 4, keep-with-next
     29          void GL_DrawPoint(int x, int y) {
   \                     GL_DrawPoint:
   \   00000000   00402DE9           PUSH     {LR}
     30            if (GUI_Context.PenSize == 1) {
   \   00000004   ........           LDR      R2,??DataTable1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1830D2E5           LDRB     R3,[R2, #+24]
   \   00000010   010053E3           CMP      R3,#+1
   \   00000014   0300001A           BNE      ??GL_DrawPoint_0
     31              LCD_HL_DrawPixel(x, y);
   \   00000018   942092E5           LDR      R2,[R2, #+148]
   \   0000001C   042092E5           LDR      R2,[R2, #+4]
   \   00000020   32FF2FE1           BLX      R2
   \   00000024   030000EA           B        ??GL_DrawPoint_1
     32            } else {
     33              GL_FillCircle(x, y, (GUI_Context.PenSize - 1) / 2);
   \                     ??GL_DrawPoint_0:
   \   00000028   012043E2           SUB      R2,R3,#+1
   \   0000002C   A22F82E0           ADD      R2,R2,R2, LSR #+31
   \   00000030   C220A0E1           ASR      R2,R2,#+1
   \   00000034   ........           BL       GL_FillCircle
     34            }
     35          }
   \                     ??GL_DrawPoint_1:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   0080BDE8           POP      {PC}             ;; return
     36          
     37          /*********************************************************************
     38          *
     39          *       GUI_DrawPoint
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          void GUI_DrawPoint(int x, int y) {
   \                     GUI_DrawPoint:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
     42            GUI_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     43            #if (GUI_WINSUPPORT)
     44              WM_ADDORG(x, y);
   \   00000010   ........           LDR      R4,??DataTable1
   \   00000014   400094E5           LDR      R0,[R4, #+64]
   \   00000018   055080E0           ADD      R5,R0,R5
   \   0000001C   440094E5           LDR      R0,[R4, #+68]
   \   00000020   066080E0           ADD      R6,R0,R6
     45              WM_ITERATE_START(NULL); {
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   ........           BL       WM__InitIVRSearch
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   1100000A           BEQ      ??GUI_DrawPoint_0
     46            #endif
     47            GL_DrawPoint(x, y);
   \                     ??GUI_DrawPoint_1:
   \   00000034   1800D4E5           LDRB     R0,[R4, #+24]
   \   00000038   010050E3           CMP      R0,#+1
   \   0000003C   0600000A           BEQ      ??GUI_DrawPoint_2
   \   00000040   010040E2           SUB      R0,R0,#+1
   \   00000044   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000048   C020A0E1           ASR      R2,R0,#+1
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   ........           BL       GL_FillCircle
   \   00000058   040000EA           B        ??GUI_DrawPoint_3
   \                     ??GUI_DrawPoint_2:
   \   0000005C   942094E5           LDR      R2,[R4, #+148]
   \   00000060   0610A0E1           MOV      R1,R6
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   042092E5           LDR      R2,[R2, #+4]
   \   0000006C   32FF2FE1           BLX      R2
     48            #if (GUI_WINSUPPORT)
     49              } WM_ITERATE_END();
   \                     ??GUI_DrawPoint_3:
   \   00000070   ........           BL       WM__GetNextIVR
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   EDFFFF1A           BNE      ??GUI_DrawPoint_1
     50            #endif
     51            GUI_UNLOCK();
   \                     ??GUI_DrawPoint_0:
   \   0000007C   7040BDE8           POP      {R4-R6,LR}
   \   00000080   ........           B        GUI_Unlock       ;; tailcall
     52          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context
     53          
     54          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     GL_DrawPoint       8
     GUI_DrawPoint     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GL_DrawPoint     64
     GUI_DrawPoint   132
     ??DataTable1      4

 
 200 bytes in section .text
 
 200 bytes of CODE memory

Errors: none
Warnings: none
