###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:26 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LI #
#                    STVIEW.lst                                               #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LIS #
#                    TVIEW.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW.c
     19          Purpose     : Implementation of listview widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          
     26          #include "GUI_ARRAY.h"
     27          #include "LISTVIEW_Private.h"
     28          #include "HEADER.h"
     29          #include "WIDGET.h"
     30          #include "SCROLLBAR.h"
     31          #include "GUI_Debug.h"
     32          #include "GUI_Private.h"
     33          #include "WM_Intern.h"
     34          
     35          #if GUI_WINSUPPORT
     36          
     37          /*********************************************************************
     38          *
     39          *       Private config defaults
     40          *
     41          **********************************************************************
     42          */
     43          
     44          /* Define default fonts */
     45          #ifndef LISTVIEW_FONT_DEFAULT
     46            #if   WIDGET_USE_SCHEME_SMALL
     47              #define LISTVIEW_FONT_DEFAULT &GUI_Font13_1
     48            #elif WIDGET_USE_SCHEME_MEDIUM
     49              #define LISTVIEW_FONT_DEFAULT &GUI_Font16_1
     50            #elif WIDGET_USE_SCHEME_LARGE
     51              #define LISTVIEW_FONT_DEFAULT &GUI_Font24_1
     52            #endif
     53          #endif
     54          
     55          /* Define colors */
     56          #ifndef LISTVIEW_BKCOLOR0_DEFAULT
     57            #define LISTVIEW_BKCOLOR0_DEFAULT GUI_WHITE       /* Not selected */
     58          #endif
     59          
     60          #ifndef LISTVIEW_BKCOLOR1_DEFAULT
     61            #define LISTVIEW_BKCOLOR1_DEFAULT GUI_GRAY        /* Selected, no focus */
     62          #endif
     63          
     64          #ifndef LISTVIEW_BKCOLOR2_DEFAULT
     65            #define LISTVIEW_BKCOLOR2_DEFAULT GUI_BLUE        /* Selected, focus */
     66          #endif
     67          
     68          #ifndef LISTVIEW_BKCOLOR3_DEFAULT
     69            #define LISTVIEW_BKCOLOR3_DEFAULT GUI_LIGHTGRAY   /* Disabled */
     70          #endif
     71          
     72          #ifndef LISTVIEW_TEXTCOLOR0_DEFAULT
     73            #define LISTVIEW_TEXTCOLOR0_DEFAULT GUI_BLACK     /* Not selected */
     74          #endif
     75          
     76          #ifndef LISTVIEW_TEXTCOLOR1_DEFAULT
     77            #define LISTVIEW_TEXTCOLOR1_DEFAULT GUI_WHITE     /* Selected, no focus */
     78          #endif
     79          
     80          #ifndef LISTVIEW_TEXTCOLOR2_DEFAULT
     81            #define LISTVIEW_TEXTCOLOR2_DEFAULT GUI_WHITE     /* Selected, focus */
     82          #endif
     83          
     84          #ifndef LISTVIEW_TEXTCOLOR3_DEFAULT
     85            #define LISTVIEW_TEXTCOLOR3_DEFAULT GUI_GRAY  /* Disabled */
     86          #endif
     87          
     88          #ifndef LISTVIEW_GRIDCOLOR_DEFAULT
     89            #define LISTVIEW_GRIDCOLOR_DEFAULT GUI_LIGHTGRAY
     90          #endif
     91          
     92          /* Define default alignment */
     93          #ifndef LISTVIEW_ALIGN_DEFAULT
     94            #define LISTVIEW_ALIGN_DEFAULT (GUI_TA_VCENTER | GUI_TA_HCENTER)
     95          #endif
     96          
     97          #ifndef LISTVIEW_SCROLLSTEP_H_DEFAULT
     98            #define LISTVIEW_SCROLLSTEP_H_DEFAULT 10
     99          #endif
    100          
    101          /*********************************************************************
    102          *
    103          *       Static data
    104          *
    105          **********************************************************************
    106          */

   \                                 In section .data, align 4
    107          LISTVIEW_PROPS LISTVIEW_DefaultProps = {
   \                     LISTVIEW_DefaultProps:
   \   00000000   FFFFFF008080       DC32 16777215, 8421504, 16711680, 13882323, 0, 16777215, 16777215
   \              80000000FF00
   \              D3D3D3000000
   \              0000FFFFFF00
   \              FFFFFF00    
   \   0000001C   80808000D3D3       DC32 8421504, 13882323, GUI_Font13_1
   \              D300........
   \   00000028   0A00               DC16 10
   \   0000002A   0000               DC8 0, 0
    108            {
    109              LISTVIEW_BKCOLOR0_DEFAULT,
    110              LISTVIEW_BKCOLOR1_DEFAULT,
    111              LISTVIEW_BKCOLOR2_DEFAULT,
    112              LISTVIEW_BKCOLOR3_DEFAULT,
    113            },
    114            {
    115              LISTVIEW_TEXTCOLOR0_DEFAULT,
    116              LISTVIEW_TEXTCOLOR1_DEFAULT,
    117              LISTVIEW_TEXTCOLOR2_DEFAULT,
    118              LISTVIEW_TEXTCOLOR3_DEFAULT,
    119            },
    120            LISTVIEW_GRIDCOLOR_DEFAULT,
    121            LISTVIEW_FONT_DEFAULT,
    122            LISTVIEW_SCROLLSTEP_H_DEFAULT
    123          };
    124          
    125          /*********************************************************************
    126          *
    127          *       Static routines
    128          *
    129          **********************************************************************
    130          */
    131          /*********************************************************************
    132          *
    133          *       LISTVIEW__GetNumRows
    134          */

   \                                 In section .text, align 4, keep-with-next
    135          unsigned LISTVIEW__GetNumRows(LISTVIEW_Obj * pObj) {
    136            return GUI_ARRAY_GetNumItems(pObj->RowArray);
   \                     LISTVIEW__GetNumRows:
   \   00000000   380090E5           LDR      R0,[R0, #+56]
   \   00000004   ........           B        GUI_ARRAY_GetNumItems  ;; tailcall
    137          }
    138          
    139          /*********************************************************************
    140          *
    141          *       LISTVIEW__GetNumColumns
    142          */

   \                                 In section .text, align 4, keep-with-next
    143          unsigned LISTVIEW__GetNumColumns(LISTVIEW_Obj * pObj) {
    144            return GUI_ARRAY_GetNumItems(pObj->ColumnArray);
   \                     LISTVIEW__GetNumColumns:
   \   00000000   3C0090E5           LDR      R0,[R0, #+60]
   \   00000004   ........           B        GUI_ARRAY_GetNumItems  ;; tailcall
    145          }
    146          
    147          /*********************************************************************
    148          *
    149          *       LISTVIEW__GetSel
    150          */

   \                                 In section .text, align 4, keep-with-next
    151          int LISTVIEW__GetSel(LISTVIEW_Obj * pObj) {
    152            return pObj->Sel;
   \                     LISTVIEW__GetSel:
   \   00000000   6C0090E5           LDR      R0,[R0, #+108]
   \   00000004   1EFF2FE1           BX       LR               ;; return
    153          }
    154          
    155          /*********************************************************************
    156          *
    157          *       LISTVIEW__SetSel
    158          */

   \                                 In section .text, align 4, keep-with-next
    159          void LISTVIEW__SetSel(LISTVIEW_Handle hObj, int NewSel) {
   \                     LISTVIEW__SetSel:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    160            LISTVIEW_Obj * pObj;
    161            int NumRows;
    162            int Sel;
    163            GUI_ARRAY RowArray;
    164          
    165            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0070A0E1           MOV      R7,R0
    166            NumRows = LISTVIEW__GetNumRows(pObj);
   \   00000018   380097E5           LDR      R0,[R7, #+56]
   \   0000001C   ........           BL       GUI_ARRAY_GetNumItems
    167            Sel = pObj->Sel;
   \   00000020   6C6097E5           LDR      R6,[R7, #+108]
   \   00000024   0080A0E1           MOV      R8,R0
    168            RowArray = pObj->RowArray;
   \   00000028   387097E5           LDR      R7,[R7, #+56]
    169            GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    170          
    171            if (NewSel >= NumRows) {
   \   00000030   080055E1           CMP      R5,R8
    172              NewSel = NumRows - 1;
   \   00000034   015048A2           SUBGE    R5,R8,#+1
    173            }
    174            if (NewSel < 0) {
   \   00000038   000055E3           CMP      R5,#+0
    175              NewSel = -1;
   \   0000003C   0050E043           MVNMI    R5,#+0
    176            }
    177            if (NewSel != Sel) {
   \   00000040   060055E1           CMP      R5,R6
   \   00000044   8300000A           BEQ      ??LISTVIEW__SetSel_0
    178              char Disabled;
    179              LISTVIEW_ROW * pRow;
    180              pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(RowArray, NewSel);
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           BL       GUI_ARRAY_GetpItemLocked
    181              if (pRow) {
   \   00000054   000050E3           CMP      R0,#+0
    182                Disabled = pRow->Disabled;
   \   00000058   0470D015           LDRBNE   R7,[R0, #+4]
    183              } else {
    184                Disabled = 0;
   \   0000005C   0070A003           MOVEQ    R7,#+0
    185              }
    186              GUI_UNLOCK_H(pRow);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
    187              if (Disabled == 0) {
   \   00000064   000057E3           CMP      R7,#+0
   \   00000068   7A00001A           BNE      ??LISTVIEW__SetSel_0
    188                int OldSel, r;
    189                OldSel    = Sel;
    190                pObj = LISTVIEW_LOCK_H(hObj);
    191                pObj->Sel = NewSel;
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GUI_ALLOC_LockH
   \   00000074   6C5080E5           STR      R5,[R0, #+108]
    192                GUI_UNLOCK_H(pObj);
   \   00000078   ........           BL       GUI_ALLOC_UnlockH
    193                r = LISTVIEW__UpdateScrollPos(hObj);
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           BL       GUI_ALLOC_LockH
   \   00000084   0080A0E1           MOV      R8,R0
   \   00000088   6C1098E5           LDR      R1,[R8, #+108]
   \   0000008C   907098E5           LDR      R7,[R8, #+144]
   \   00000090   000051E3           CMP      R1,#+0
   \   00000094   0200005A           BPL      ??LISTVIEW__SetSel_1
   \   00000098   8C0088E2           ADD      R0,R8,#+140
   \   0000009C   ........           BL       WM_CheckScrollBounds
   \   000000A0   030000EA           B        ??LISTVIEW__SetSel_2
   \                     ??LISTVIEW__SetSel_1:
   \   000000A4   0030A0E3           MOV      R3,#+0
   \   000000A8   0020A0E3           MOV      R2,#+0
   \   000000AC   8C0088E2           ADD      R0,R8,#+140
   \   000000B0   ........           BL       WM_CheckScrollPos
   \                     ??LISTVIEW__SetSel_2:
   \   000000B4   980088E2           ADD      R0,R8,#+152
   \   000000B8   ........           BL       WM_CheckScrollBounds
   \   000000BC   8C1088E2           ADD      R1,R8,#+140
   \   000000C0   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000000C4   14008DE2           ADD      R0,SP,#+20
   \   000000C8   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   000000CC   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000000D0   08008DE2           ADD      R0,SP,#+8
   \   000000D4   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   000000D8   348098E5           LDR      R8,[R8, #+52]
   \   000000DC   ........           BL       GUI_ALLOC_UnlockH
   \   000000E0   08208DE2           ADD      R2,SP,#+8
   \   000000E4   14108DE2           ADD      R1,SP,#+20
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       WIDGET__SetScrollState
   \   000000F0   000058E3           CMP      R8,#+0
   \   000000F4   0200000A           BEQ      ??LISTVIEW__SetSel_3
   \   000000F8   0C109DE5           LDR      R1,[SP, #+12]
   \   000000FC   0800A0E1           MOV      R0,R8
   \   00000100   ........           BL       HEADER_SetScrollPos
   \                     ??LISTVIEW__SetSel_3:
   \   00000104   18009DE5           LDR      R0,[SP, #+24]
   \   00000108   078040E0           SUB      R8,R0,R7
    194                pObj = LISTVIEW_LOCK_H(hObj);
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   ........           BL       GUI_ALLOC_LockH
   \   00000114   0070A0E1           MOV      R7,R0
    195                if (r) {
   \   00000118   000058E3           CMP      R8,#+0
   \   0000011C   0D00000A           BEQ      ??LISTVIEW__SetSel_4
    196                  LISTVIEW__InvalidateInsideArea(hObj);
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       GUI_ALLOC_LockH
   \   00000128   345090E5           LDR      R5,[R0, #+52]
   \   0000012C   ........           BL       GUI_ALLOC_UnlockH
   \   00000130   0500A0E1           MOV      R0,R5
   \   00000134   ........           BL       HEADER_GetHeight
   \   00000138   0050A0E1           MOV      R5,R0
   \   0000013C   0D10A0E1           MOV      R1,SP
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   ........           BL       WM_GetInsideRectExScrollbar
   \   00000148   F200DDE1           LDRSH    R0,[SP, #+2]
   \   0000014C   000085E0           ADD      R0,R5,R0
   \   00000150   B200CDE1           STRH     R0,[SP, #+2]
   \   00000154   380000EA           B        ??LISTVIEW__SetSel_5
    197                } else {
    198                  LISTVIEW__InvalidateRow(hObj, pObj, OldSel);
   \                     ??LISTVIEW__SetSel_4:
   \   00000158   000056E3           CMP      R6,#+0
   \   0000015C   1B00004A           BMI      ??LISTVIEW__SetSel_6
   \   00000160   340097E5           LDR      R0,[R7, #+52]
   \   00000164   ........           BL       HEADER_GetHeight
   \   00000168   789097E5           LDR      R9,[R7, #+120]
   \   0000016C   0080A0E1           MOV      R8,R0
   \   00000170   000059E3           CMP      R9,#+0
   \   00000174   0500001A           BNE      ??LISTVIEW__SetSel_7
   \   00000178   640097E5           LDR      R0,[R7, #+100]
   \   0000017C   ........           BL       GUI_GetYDistOfFont
   \   00000180   0090A0E1           MOV      R9,R0
   \   00000184   700097E5           LDR      R0,[R7, #+112]
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   01908912           ADDNE    R9,R9,#+1
   \                     ??LISTVIEW__SetSel_7:
   \   00000190   0D10A0E1           MOV      R1,SP
   \   00000194   0400A0E1           MOV      R0,R4
   \   00000198   ........           BL       WM_GetInsideRectExScrollbar
   \   0000019C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   000001A0   901097E5           LDR      R1,[R7, #+144]
   \   000001A4   000088E0           ADD      R0,R8,R0
   \   000001A8   011046E0           SUB      R1,R6,R1
   \   000001AC   990120E0           MLA      R0,R9,R1,R0
   \   000001B0   0D10A0E1           MOV      R1,SP
   \   000001B4   B200CDE1           STRH     R0,[SP, #+2]
   \   000001B8   F200DDE1           LDRSH    R0,[SP, #+2]
   \   000001BC   000089E0           ADD      R0,R9,R0
   \   000001C0   010040E2           SUB      R0,R0,#+1
   \   000001C4   B600CDE1           STRH     R0,[SP, #+6]
   \   000001C8   0400A0E1           MOV      R0,R4
   \   000001CC   ........           BL       WM_InvalidateRect
    199                  LISTVIEW__InvalidateRow(hObj, pObj, NewSel);
   \                     ??LISTVIEW__SetSel_6:
   \   000001D0   000055E3           CMP      R5,#+0
   \   000001D4   1B00004A           BMI      ??LISTVIEW__SetSel_8
   \   000001D8   340097E5           LDR      R0,[R7, #+52]
   \   000001DC   ........           BL       HEADER_GetHeight
   \   000001E0   786097E5           LDR      R6,[R7, #+120]
   \   000001E4   0080A0E1           MOV      R8,R0
   \   000001E8   000056E3           CMP      R6,#+0
   \   000001EC   0500001A           BNE      ??LISTVIEW__SetSel_9
   \   000001F0   640097E5           LDR      R0,[R7, #+100]
   \   000001F4   ........           BL       GUI_GetYDistOfFont
   \   000001F8   0060A0E1           MOV      R6,R0
   \   000001FC   700097E5           LDR      R0,[R7, #+112]
   \   00000200   000050E3           CMP      R0,#+0
   \   00000204   01608612           ADDNE    R6,R6,#+1
   \                     ??LISTVIEW__SetSel_9:
   \   00000208   0D10A0E1           MOV      R1,SP
   \   0000020C   0400A0E1           MOV      R0,R4
   \   00000210   ........           BL       WM_GetInsideRectExScrollbar
   \   00000214   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000218   901097E5           LDR      R1,[R7, #+144]
   \   0000021C   000088E0           ADD      R0,R8,R0
   \   00000220   011045E0           SUB      R1,R5,R1
   \   00000224   960120E0           MLA      R0,R6,R1,R0
   \   00000228   B200CDE1           STRH     R0,[SP, #+2]
   \   0000022C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000230   000086E0           ADD      R0,R6,R0
   \   00000234   010040E2           SUB      R0,R0,#+1
   \   00000238   B600CDE1           STRH     R0,[SP, #+6]
   \                     ??LISTVIEW__SetSel_5:
   \   0000023C   0D10A0E1           MOV      R1,SP
   \   00000240   0400A0E1           MOV      R0,R4
   \   00000244   ........           BL       WM_InvalidateRect
    200                }
    201                GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW__SetSel_8:
   \   00000248   ........           BL       GUI_ALLOC_UnlockH
    202                WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
   \   0000024C   0410A0E3           MOV      R1,#+4
   \   00000250   0400A0E1           MOV      R0,R4
   \   00000254   ........           BL       WM_NotifyParent
    203              }
    204            }
    205          }
   \                     ??LISTVIEW__SetSel_0:
   \   00000258   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   0000025C   F083BDE8           POP      {R4-R9,PC}       ;; return
    206          
    207          /*********************************************************************
    208          *
    209          *       LISTVIEW__MoveSel
    210          *
    211          *  Moves the selection to the next valid item.
    212          */

   \                                 In section .text, align 4, keep-with-next
    213          void LISTVIEW__MoveSel(LISTVIEW_Handle hObj, int Dir) {
   \                     LISTVIEW__MoveSel:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    214            LISTVIEW_Obj * pObj;
    215            GUI_ARRAY RowArray;
    216            int Index, NewSel = -1, NumRows;
   \   00000010   0060E0E3           MVN      R6,#+0
    217            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   0070A0E1           MOV      R7,R0
    218            Index   = LISTVIEW__GetSel(pObj);
   \   0000001C   6C8097E5           LDR      R8,[R7, #+108]
    219            NumRows = LISTVIEW__GetNumRows(pObj);
   \   00000020   380097E5           LDR      R0,[R7, #+56]
   \   00000024   ........           BL       GUI_ARRAY_GetNumItems
   \   00000028   0090A0E1           MOV      R9,R0
    220            RowArray = pObj->RowArray;
   \   0000002C   387097E5           LDR      R7,[R7, #+56]
    221            GUI_UNLOCK_H(pObj);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
    222            do {
    223              LISTVIEW_ROW* pRow;
    224              Index += Dir;
   \                     ??LISTVIEW__MoveSel_0:
   \   00000034   088095E0           ADDS     R8,R5,R8
    225              if ((Index < 0) || (Index >= NumRows)) {
   \   00000038   0A00004A           BMI      ??LISTVIEW__MoveSel_1
   \   0000003C   090058E1           CMP      R8,R9
   \   00000040   080000AA           BGE      ??LISTVIEW__MoveSel_1
    226                break;
    227              }
    228              pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(RowArray, Index);
    229              if (pRow->Disabled == 0) {
   \   00000044   0810A0E1           MOV      R1,R8
   \   00000048   0700A0E1           MOV      R0,R7
   \   0000004C   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000050   0400D0E5           LDRB     R0,[R0, #+4]
   \   00000054   000050E3           CMP      R0,#+0
    230                NewSel = Index;
   \   00000058   0860A001           MOVEQ    R6,R8
    231              }
    232              GUI_UNLOCK_H(pRow);
   \   0000005C   ........           BL       GUI_ALLOC_UnlockH
    233            } while (NewSel < 0);
   \   00000060   000056E3           CMP      R6,#+0
   \   00000064   F2FFFF4A           BMI      ??LISTVIEW__MoveSel_0
    234            if (NewSel >= 0) {
   \                     ??LISTVIEW__MoveSel_1:
   \   00000068   000056E3           CMP      R6,#+0
   \   0000006C   0200004A           BMI      ??LISTVIEW__MoveSel_2
    235              LISTVIEW__SetSel(hObj, NewSel);
   \   00000070   0610A0E1           MOV      R1,R6
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       LISTVIEW__SetSel
    236            }
    237          }
   \                     ??LISTVIEW__MoveSel_2:
   \   0000007C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000080   F083BDE8           POP      {R4-R9,PC}       ;; return
    238          
    239          /*********************************************************************
    240          *
    241          *       LISTVIEW__GetRowDistY
    242          */

   \                                 In section .text, align 4, keep-with-next
    243          unsigned LISTVIEW__GetRowDistY(const LISTVIEW_Obj * pObj) {
   \                     LISTVIEW__GetRowDistY:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    244            unsigned RowDistY;
    245            if (pObj->RowDistY) {
   \   00000008   780094E5           LDR      R0,[R4, #+120]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0400001A           BNE      ??LISTVIEW__GetRowDistY_0
    246              RowDistY = pObj->RowDistY;
    247            } else {
    248              RowDistY = GUI_GetYDistOfFont(pObj->Props.pFont);
   \   00000014   640094E5           LDR      R0,[R4, #+100]
   \   00000018   ........           BL       GUI_GetYDistOfFont
    249              if (pObj->ShowGrid) {
   \   0000001C   701094E5           LDR      R1,[R4, #+112]
   \   00000020   000051E3           CMP      R1,#+0
    250                RowDistY++;
   \   00000024   01008012           ADDNE    R0,R0,#+1
    251              }
    252            }
    253            return RowDistY;
   \                     ??LISTVIEW__GetRowDistY_0:
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
    254          }
    255          
    256          /*********************************************************************
    257          *
    258          *       _GetNumVisibleRows
    259          *
    260          * Purpose:
    261          *   Returns the number of visible rows according the header
    262          *   and (if exist) horizontal scrollbar.
    263          *
    264          * Return value:
    265          *   Number of visible rows. If no entire row can be displayed, this
    266          *   function will return one.
    267          */
    268          static unsigned _GetNumVisibleRows(LISTVIEW_Handle hObj, const LISTVIEW_Obj * pObj) {
    269            unsigned RowDistY, ySize, r = 1;
    270            GUI_RECT Rect;
    271            WM_GetInsideRectExScrollbar(hObj, &Rect);
    272            ySize    = Rect.y1 - Rect.y0 + 1 - HEADER_GetHeight(pObj->hHeader);
    273            RowDistY = LISTVIEW__GetRowDistY(pObj);
    274            if (RowDistY) {
    275              r = ySize / RowDistY;
    276              r = (r == 0) ? 1 : r;
    277            }
    278            return r;
    279          }
    280          
    281          /*********************************************************************
    282          *
    283          *       _GetpRow
    284          *
    285          * Purpose:
    286          *   Returns a pointer to the requested row in locked state. The caller
    287          *   needs to unlock the pointer after use.
    288          */
    289          static LISTVIEW_ROW * _GetpRow(LISTVIEW_Obj * pObj, int Index) {
    290            LISTVIEW_ROW * r;
    291            if (pObj->hSort && (pObj->SortIndex >= 0)) {
    292              LISTVIEW_SORT * pSort;
    293              SORT_TYPE * pData;
    294              pSort = (LISTVIEW_SORT *)GUI_LOCK_H(pObj->hSort);
    295              pData = (SORT_TYPE *)GUI_LOCK_H(pSort->hSortArray);
    296              if (Index >= pSort->SortArrayNumItems) {
    297                r = NULL;
    298              } else {
    299                r = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, *(pData + Index));
    300              }
    301              GUI_UNLOCK_H(pSort);
    302              GUI_UNLOCK_H(pData);
    303            } else {
    304              r = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, Index);
    305            }
    306            return r;
    307          }
    308          
    309          /*********************************************************************
    310          *
    311          *       _Paint
    312          */

   \                                 In section .text, align 4, keep-with-next
    313          static void _Paint(LISTVIEW_Handle hObj, WM_MESSAGE * pMsg) {
   \                     _Paint:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   60D04DE2           SUB      SP,SP,#+96
   \   00000008   0160A0E1           MOV      R6,R1
    314            LISTVIEW_Obj * pObj;
    315            const LISTVIEW_ROW * pRow;
    316            GUI_RECT ClipRect, Rect;
    317            int NumRows, NumVisRows, NumColumns;
    318            int LBorder, RBorder, EffectSize;
    319            int xPos, yPos, Width, RowDistY;
    320            int Align, i, j, EndRow;
    321            int StartColumn, EndColumn, xPosOld;
    322            int xPosLastFixed;
    323            LISTVIEW_SORT      * pSort;
    324            LISTVIEW_COLUMN    * pColumn;
    325            LISTVIEW_CELL      * pCell;
    326            LISTVIEW_CELL_INFO * pCellInfo;
    327            int  (* fpSort)(LISTVIEW_Handle hObj);
    328            void (* pfDraw)(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, GUI_RECT * pRect);
    329            char Disabled;
    330            GUI_ARRAY CellArray;
    331            int RowExist;
    332            int ColorIndex;
    333            U8 Flags;
    334          
    335            pObj = LISTVIEW_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0040A0E1           MOV      R4,R0
    336            /* Init some values */
    337            NumColumns = LISTVIEW__GetNumColumns(pObj);
   \   00000014   3C0094E5           LDR      R0,[R4, #+60]
   \   00000018   ........           BL       GUI_ARRAY_GetNumItems
   \   0000001C   34008DE5           STR      R0,[SP, #+52]
    338            NumRows    = LISTVIEW__GetNumRows(pObj);
   \   00000020   380094E5           LDR      R0,[R4, #+56]
   \   00000024   ........           BL       GUI_ARRAY_GetNumItems
   \   00000028   0050A0E1           MOV      R5,R0
    339            NumVisRows = _GetNumVisibleRows(hObj, pObj);
   \   0000002C   0180A0E3           MOV      R8,#+1
   \   00000030   58108DE2           ADD      R1,SP,#+88
   \   00000034   60009DE5           LDR      R0,[SP, #+96]
   \   00000038   ........           BL       WM_GetInsideRectExScrollbar
   \   0000003C   340094E5           LDR      R0,[R4, #+52]
   \   00000040   ........           BL       HEADER_GetHeight
   \   00000044   FE15DDE1           LDRSH    R1,[SP, #+94]
   \   00000048   FA25DDE1           LDRSH    R2,[SP, #+90]
   \   0000004C   021041E0           SUB      R1,R1,R2
   \   00000050   011081E2           ADD      R1,R1,#+1
   \   00000054   009041E0           SUB      R9,R1,R0
   \   00000058   781094E5           LDR      R1,[R4, #+120]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0700001A           BNE      ??_Paint_0
   \   00000064   640094E5           LDR      R0,[R4, #+100]
   \   00000068   ........           BL       GUI_GetYDistOfFont
   \   0000006C   0010A0E1           MOV      R1,R0
   \   00000070   700094E5           LDR      R0,[R4, #+112]
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   01108112           ADDNE    R1,R1,#+1
   \   0000007C   000051E3           CMP      R1,#+0
   \   00000080   0300000A           BEQ      ??_Paint_1
   \                     ??_Paint_0:
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   ........           BL       __aeabi_uidiv
   \   0000008C   0080B0E1           MOVS     R8,R0
   \   00000090   0180A003           MOVEQ    R8,#+1
   \                     ??_Paint_1:
   \   00000094   24808DE5           STR      R8,[SP, #+36]
    340            RowDistY   = LISTVIEW__GetRowDistY(pObj);
   \   00000098   780094E5           LDR      R0,[R4, #+120]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0400001A           BNE      ??_Paint_2
   \   000000A4   640094E5           LDR      R0,[R4, #+100]
   \   000000A8   ........           BL       GUI_GetYDistOfFont
   \   000000AC   701094E5           LDR      R1,[R4, #+112]
   \   000000B0   000051E3           CMP      R1,#+0
   \   000000B4   01008012           ADDNE    R0,R0,#+1
   \                     ??_Paint_2:
   \   000000B8   20008DE5           STR      R0,[SP, #+32]
    341            LBorder    = pObj->LBorder;
   \   000000BC   7C1094E5           LDR      R1,[R4, #+124]
   \   000000C0   54108DE5           STR      R1,[SP, #+84]
    342            RBorder    = pObj->RBorder;
   \   000000C4   801094E5           LDR      R1,[R4, #+128]
   \   000000C8   50108DE5           STR      R1,[SP, #+80]
    343            EffectSize = pObj->Widget.pEffect->EffectSize;
   \   000000CC   2C1094E5           LDR      R1,[R4, #+44]
   \   000000D0   001091E5           LDR      R1,[R1, #+0]
   \   000000D4   1C108DE5           STR      R1,[SP, #+28]
    344            yPos       = HEADER_GetHeight(pObj->hHeader) + EffectSize;
   \   000000D8   340094E5           LDR      R0,[R4, #+52]
   \   000000DC   ........           BL       HEADER_GetHeight
   \   000000E0   1C109DE5           LDR      R1,[SP, #+28]
    345            /* Calculate clipping rectangle */
    346            ClipRect = *(const GUI_RECT*)pMsg->Data.p;
   \   000000E4   0820A0E3           MOV      R2,#+8
   \   000000E8   000081E0           ADD      R0,R1,R0
   \   000000EC   00008DE5           STR      R0,[SP, #+0]
   \   000000F0   08008DE2           ADD      R0,SP,#+8
   \   000000F4   0C1096E5           LDR      R1,[R6, #+12]
   \   000000F8   ........           BL       __aeabi_memcpy
    347            GUI_MoveRect(&ClipRect, -pObj->Widget.Win.Rect.x0, -pObj->Widget.Win.Rect.y0);
   \   000000FC   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000100   002060E2           RSB      R2,R0,#+0
   \   00000104   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000108   001060E2           RSB      R1,R0,#+0
   \   0000010C   08008DE2           ADD      R0,SP,#+8
   \   00000110   ........           BL       GUI_MoveRect
    348            WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   00000114   10108DE2           ADD      R1,SP,#+16
   \   00000118   60009DE5           LDR      R0,[SP, #+96]
   \   0000011C   ........           BL       WM_GetInsideRectExScrollbar
    349            GUI__IntersectRect(&ClipRect, &Rect);
   \   00000120   10108DE2           ADD      R1,SP,#+16
   \   00000124   08008DE2           ADD      R0,SP,#+8
   \   00000128   ........           BL       GUI__IntersectRect
    350            /* Set drawing color, font and text mode */
    351            LCD_SetColor(pObj->Props.aTextColor[0]);
   \   0000012C   500094E5           LDR      R0,[R4, #+80]
   \   00000130   ........           BL       LCD_SetColor
    352            GUI_SetFont(pObj->Props.pFont);
   \   00000134   640094E5           LDR      R0,[R4, #+100]
   \   00000138   ........           BL       GUI_SetFont
    353            GUI_SetTextMode(GUI_TM_TRANS);
   \   0000013C   0200A0E3           MOV      R0,#+2
   \   00000140   ........           BL       GUI_SetTextMode
    354            /* Sort before drawing, because scroll position may change */
    355            if (pObj->hSort && (pObj->SortIndex >= 0)) {
   \   00000144   A40094E5           LDR      R0,[R4, #+164]
   \   00000148   000050E3           CMP      R0,#+0
   \   0000014C   1200000A           BEQ      ??_Paint_3
   \   00000150   741094E5           LDR      R1,[R4, #+116]
   \   00000154   000051E3           CMP      R1,#+0
   \   00000158   0F00004A           BMI      ??_Paint_3
    356              pSort = (LISTVIEW_SORT *)GUI_LOCK_H(pObj->hSort);
    357              fpSort = pSort->fpSort;
   \   0000015C   ........           BL       GUI_ALLOC_LockH
   \   00000160   086090E5           LDR      R6,[R0, #+8]
    358              NumRows = LISTVIEW__GetNumRows(pObj);
   \   00000164   380094E5           LDR      R0,[R4, #+56]
   \   00000168   ........           BL       GUI_ARRAY_GetNumItems
   \   0000016C   0050A0E1           MOV      R5,R0
    359              GUI_UNLOCK_H(pSort);
   \   00000170   ........           BL       GUI_ALLOC_UnlockH
    360              if (NumRows > 0) {
   \   00000174   010055E3           CMP      R5,#+1
   \   00000178   070000BA           BLT      ??_Paint_3
    361                int r;
    362                GUI_UNLOCK_H(pObj);
   \   0000017C   ........           BL       GUI_ALLOC_UnlockH
    363                r = fpSort(hObj);
    364                if (r) {
   \   00000180   60009DE5           LDR      R0,[SP, #+96]
   \   00000184   36FF2FE1           BLX      R6
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   6901001A           BNE      ??_Paint_4
    365                  return; /* Return on error */
    366                }
    367                pObj = (LISTVIEW_Obj *)GUI_LOCK_H(hObj);
   \   00000190   60009DE5           LDR      R0,[SP, #+96]
   \   00000194   ........           BL       GUI_ALLOC_LockH
   \   00000198   0040A0E1           MOV      R4,R0
    368              }
    369            }
    370            /* Calculate end row after sorting, because scroll position may have changed */
    371            EndRow = pObj->ScrollStateV.v + (((NumVisRows + 1) > NumRows) ? NumRows : NumVisRows + 1);
   \                     ??_Paint_3:
   \   0000019C   24009DE5           LDR      R0,[SP, #+36]
   \   000001A0   901094E5           LDR      R1,[R4, #+144]
   \   000001A4   010080E2           ADD      R0,R0,#+1
   \   000001A8   000055E1           CMP      R5,R0
   \   000001AC   0050A0C1           MOVGT    R5,R0
   \   000001B0   011085E0           ADD      R1,R5,R1
   \   000001B4   40108DE5           STR      R1,[SP, #+64]
    372            /* Do the drawing */
    373            for (i = pObj->ScrollStateV.v; i < EndRow; i++) {
   \   000001B8   901094E5           LDR      R1,[R4, #+144]
   \   000001BC   04108DE5           STR      R1,[SP, #+4]
   \   000001C0   0100A0E1           MOV      R0,R1
   \   000001C4   40109DE5           LDR      R1,[SP, #+64]
   \   000001C8   010050E1           CMP      R0,R1
   \   000001CC   DF0000AA           BGE      ??_Paint_5
   \   000001D0   34109DE5           LDR      R1,[SP, #+52]
   \   000001D4   011041E2           SUB      R1,R1,#+1
   \   000001D8   4C108DE5           STR      R1,[SP, #+76]
    374              pRow = _GetpRow(pObj, i);
   \                     ??_Paint_6:
   \   000001DC   A40094E5           LDR      R0,[R4, #+164]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   1500000A           BEQ      ??_Paint_7
   \   000001E8   740094E5           LDR      R0,[R4, #+116]
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   1200004A           BMI      ??_Paint_7
   \   000001F4   A40094E5           LDR      R0,[R4, #+164]
   \   000001F8   ........           BL       GUI_ALLOC_LockH
   \   000001FC   0050A0E1           MOV      R5,R0
   \   00000200   000095E5           LDR      R0,[R5, #+0]
   \   00000204   ........           BL       GUI_ALLOC_LockH
   \   00000208   B420D5E1           LDRH     R2,[R5, #+4]
   \   0000020C   04109DE5           LDR      R1,[SP, #+4]
   \   00000210   020051E1           CMP      R1,R2
   \   00000214   050000AA           BGE      ??_Paint_8
   \   00000218   810080E0           ADD      R0,R0,R1, LSL #+1
   \   0000021C   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000220   380094E5           LDR      R0,[R4, #+56]
   \   00000224   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000228   0050A0E1           MOV      R5,R0
   \   0000022C   000000EA           B        ??_Paint_9
   \                     ??_Paint_8:
   \   00000230   0050A0E3           MOV      R5,#+0
   \                     ??_Paint_9:
   \   00000234   ........           BL       GUI_ALLOC_UnlockH
   \   00000238   ........           BL       GUI_ALLOC_UnlockH
   \   0000023C   030000EA           B        ??_Paint_10
   \                     ??_Paint_7:
   \   00000240   04109DE5           LDR      R1,[SP, #+4]
   \   00000244   380094E5           LDR      R0,[R4, #+56]
   \   00000248   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000024C   0050A0E1           MOV      R5,R0
    375              if (pRow) {
   \                     ??_Paint_10:
   \   00000250   000055E3           CMP      R5,#+0
   \   00000254   0500000A           BEQ      ??_Paint_11
    376                Disabled  = pRow->Disabled;
   \   00000258   0410D5E5           LDRB     R1,[R5, #+4]
    377                CellArray = pRow->CellArray;
    378                RowExist  = 1;
   \   0000025C   0160A0E3           MOV      R6,#+1
   \   00000260   4410CDE5           STRB     R1,[SP, #+68]
   \   00000264   001095E5           LDR      R1,[R5, #+0]
   \   00000268   38108DE5           STR      R1,[SP, #+56]
   \   0000026C   000000EA           B        ??_Paint_12
    379              } else {
    380                RowExist  = 0;
   \                     ??_Paint_11:
   \   00000270   0060A0E3           MOV      R6,#+0
    381              }
    382              if (pRow) {
   \                     ??_Paint_12:
   \   00000274   0000000A           BEQ      ??_Paint_13
    383                GUI_UNLOCK_H(pRow);
   \   00000278   ........           BL       GUI_ALLOC_UnlockH
    384              }
    385              if (RowExist) {
   \                     ??_Paint_13:
   \   0000027C   000056E3           CMP      R6,#+0
   \   00000280   AB00000A           BEQ      ??_Paint_14
    386                Rect.y0 = yPos;
   \   00000284   00109DE5           LDR      R1,[SP, #+0]
    387                /* Break when all other rows are outside the drawing area */
    388                if (Rect.y0 > ClipRect.y1) {
   \   00000288   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   0000028C   B211CDE1           STRH     R1,[SP, #+18]
   \   00000290   F211DDE1           LDRSH    R1,[SP, #+18]
   \   00000294   010050E1           CMP      R0,R1
   \   00000298   AC0000BA           BLT      ??_Paint_5
    389                  break;
    390                }
    391                Rect.y1 = yPos + RowDistY - 1;
   \   0000029C   20009DE5           LDR      R0,[SP, #+32]
   \   000002A0   00109DE5           LDR      R1,[SP, #+0]
   \   000002A4   000081E0           ADD      R0,R1,R0
   \   000002A8   010040E2           SUB      R0,R0,#+1
    392                /* Make sure that we draw only when row is in drawing area */
    393                if (Rect.y1 >= ClipRect.y0) {
   \   000002AC   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   000002B0   B601CDE1           STRH     R0,[SP, #+22]
   \   000002B4   0008A0E1           MOV      R0,R0, LSL #+16
   \   000002B8   400851E1           CMP      R1,R0, ASR #+16
   \   000002BC   980000CA           BGT      ??_Paint_15
    394                  /* Set background color */
    395                  if (Disabled) {
   \   000002C0   4400DDE5           LDRB     R0,[SP, #+68]
   \   000002C4   000050E3           CMP      R0,#+0
    396                    ColorIndex = LISTVIEW_CI_DISABLED;
   \   000002C8   0310A013           MOVNE    R1,#+3
   \   000002CC   0900001A           BNE      ??_Paint_16
    397                  } else if (i == pObj->Sel) {
   \   000002D0   04009DE5           LDR      R0,[SP, #+4]
   \   000002D4   6C1094E5           LDR      R1,[R4, #+108]
   \   000002D8   010050E1           CMP      R0,R1
   \   000002DC   0400001A           BNE      ??_Paint_17
    398                    ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? LISTVIEW_CI_SELFOCUS : LISTVIEW_CI_SEL;
   \   000002E0   3200D4E5           LDRB     R0,[R4, #+50]
   \   000002E4   010010E3           TST      R0,#0x1
   \   000002E8   0210A013           MOVNE    R1,#+2
   \   000002EC   0110A003           MOVEQ    R1,#+1
   \   000002F0   000000EA           B        ??_Paint_16
    399                  } else {
    400                    ColorIndex = LISTVIEW_CI_UNSEL;
   \                     ??_Paint_17:
   \   000002F4   0010A0E3           MOV      R1,#+0
   \                     ??_Paint_16:
   \   000002F8   18108DE5           STR      R1,[SP, #+24]
    401                  }
    402                  LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
   \   000002FC   18109DE5           LDR      R1,[SP, #+24]
   \   00000300   011184E0           ADD      R1,R4,R1, LSL #+2
   \   00000304   30108DE5           STR      R1,[SP, #+48]
   \   00000308   400091E5           LDR      R0,[R1, #+64]
   \   0000030C   ........           BL       LCD_SetBkColor
    403                  /* Iterate over all columns */
    404                  if (pObj->ShowGrid) {
   \   00000310   700094E5           LDR      R0,[R4, #+112]
   \   00000314   000050E3           CMP      R0,#+0
    405                    Rect.y1--;
   \   00000318   F601DD11           LDRSHNE  R0,[SP, #+22]
   \   0000031C   01004012           SUBNE    R0,R0,#+1
   \   00000320   B601CD11           STRHNE   R0,[SP, #+22]
    406                  }
    407                  xPos = EffectSize - pObj->ScrollStateH.v;
   \   00000324   1C009DE5           LDR      R0,[SP, #+28]
   \   00000328   9C1094E5           LDR      R1,[R4, #+156]
   \   0000032C   015040E0           SUB      R5,R0,R1
    408                  StartColumn = pObj->Fixed;
   \   00000330   881094E5           LDR      R1,[R4, #+136]
   \   00000334   2C108DE5           STR      R1,[SP, #+44]
    409                  EndColumn   = NumColumns - 1;
   \   00000338   4C109DE5           LDR      R1,[SP, #+76]
   \   0000033C   28108DE5           STR      R1,[SP, #+40]
   \   00000340   060000EA           B        ??_Paint_18
    410                  do {
    411                    for (j = 0; j <= EndColumn; j++) {
    412                      Width   = HEADER_GetItemWidth(pObj->hHeader, j);
    413                      if (j >= StartColumn) {
    414                        Rect.x0 = xPos;
    415                        /* Break when all other columns are outside the drawing area */
    416                        if (Rect.x0 > ClipRect.x1) {
    417                          break;
    418                        }
    419                        Rect.x1 = xPos + Width - 1;
    420                        /* Make sure that we draw only when column is in drawing area */
    421                        if (Rect.x1 >= ClipRect.x0) {
    422                          pCell = (LISTVIEW_CELL*)GUI_ARRAY_GetpItemLocked(CellArray, j);
    423                          if (pCell) {
    424                            pfDraw    = NULL;
    425                            pCellInfo = NULL;
    426                            Flags     = 0;
    427                            if (pCell->hCellInfo) {
    428                              pCellInfo = (LISTVIEW_CELL_INFO *)GUI_LOCK_H(pCell->hCellInfo);
    429                              Flags  = pCellInfo->Flags;
    430                              pfDraw = pCellInfo->pfDraw;
    431                            }
    432                            if (Flags & LISTVIEW_CELL_INFO_COLORS) {
    433                              LCD_SetBkColor(pCellInfo->aBkColor[ColorIndex]);
    434                              LCD_SetColor(pCellInfo->aTextColor[ColorIndex]);
    435                            } else {
    436                              LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
    437                            }
    438                            if (pCellInfo) {
    439                              GUI_UNLOCK_H(pCellInfo);
    440                            }
    441                            //
    442                            // Clear background
    443                            //
    444                            GUI_ClearRect(Rect.x0, Rect.y0, Rect.x1, Rect.y1);
    445                            //
    446                            // Draw bitmap if required
    447                            //
    448                            if (Flags & LISTVIEW_CELL_INFO_BITMAP) {
    449                              GUI_UNLOCK_H(pCell);
    450                              pfDraw(hObj, j, i, &Rect);
    451                              pCell = (LISTVIEW_CELL*)GUI_ARRAY_GetpItemLocked(CellArray, j);
    452                            }
    453                            //
    454                            // Draw text
    455                            //
    456                            Rect.x0 += LBorder;
    457                            Rect.x1 -= RBorder;
    458                            pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItemLocked(pObj->ColumnArray, j);
    459                            Align = pColumn->Align;
    460                            GUI_UNLOCK_H(pColumn);
    461                            GUI_DispStringInRect(pCell->acText, &Rect, Align);
    462                            if (pCell->hCellInfo) {
    463                              LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
    464                            }
    465                            GUI_UNLOCK_H(pCell);
    466                          }
    467                        }
    468                      }
    469                      xPos += Width;
    470                    }
    471                    if (!StartColumn) {
    472                      if (pObj->Fixed) {
    473                        xPos = xPosOld;
    474                      }
    475                      break;
    476                    }
    477                    StartColumn = 0;
   \                     ??_Paint_19:
   \   00000344   0010A0E3           MOV      R1,#+0
   \   00000348   2C108DE5           STR      R1,[SP, #+44]
    478                    EndColumn   = pObj->Fixed - 1;
   \   0000034C   881094E5           LDR      R1,[R4, #+136]
    479                    xPosOld     = xPos;
   \   00000350   48508DE5           STR      R5,[SP, #+72]
   \   00000354   011041E2           SUB      R1,R1,#+1
   \   00000358   28108DE5           STR      R1,[SP, #+40]
    480                    xPos        = EffectSize;
   \   0000035C   1C509DE5           LDR      R5,[SP, #+28]
    481                  } while (1);
   \                     ??_Paint_18:
   \   00000360   28009DE5           LDR      R0,[SP, #+40]
   \   00000364   0060A0E3           MOV      R6,#+0
   \   00000368   000050E3           CMP      R0,#+0
   \   0000036C   5F00004A           BMI      ??_Paint_20
   \                     ??_Paint_21:
   \   00000370   0610A0E1           MOV      R1,R6
   \   00000374   340094E5           LDR      R0,[R4, #+52]
   \   00000378   ........           BL       HEADER_GetItemWidth
   \   0000037C   0070A0E1           MOV      R7,R0
   \   00000380   2C009DE5           LDR      R0,[SP, #+44]
   \   00000384   000056E1           CMP      R6,R0
   \   00000388   530000BA           BLT      ??_Paint_22
   \   0000038C   B051CDE1           STRH     R5,[SP, #+16]
   \   00000390   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000394   F011DDE1           LDRSH    R1,[SP, #+16]
   \   00000398   010050E1           CMP      R0,R1
   \   0000039C   530000BA           BLT      ??_Paint_20
   \   000003A0   070085E0           ADD      R0,R5,R7
   \   000003A4   010040E2           SUB      R0,R0,#+1
   \   000003A8   F810DDE1           LDRSH    R1,[SP, #+8]
   \   000003AC   B401CDE1           STRH     R0,[SP, #+20]
   \   000003B0   0008A0E1           MOV      R0,R0, LSL #+16
   \   000003B4   400851E1           CMP      R1,R0, ASR #+16
   \   000003B8   470000CA           BGT      ??_Paint_22
   \   000003BC   0610A0E1           MOV      R1,R6
   \   000003C0   38009DE5           LDR      R0,[SP, #+56]
   \   000003C4   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000003C8   0080B0E1           MOVS     R8,R0
   \   000003CC   4200000A           BEQ      ??_Paint_22
   \   000003D0   000098E5           LDR      R0,[R8, #+0]
   \   000003D4   00B0A0E3           MOV      R11,#+0
   \   000003D8   00A0A0E3           MOV      R10,#+0
   \   000003DC   0090A0E3           MOV      R9,#+0
   \   000003E0   000050E3           CMP      R0,#+0
   \   000003E4   0D00000A           BEQ      ??_Paint_23
   \   000003E8   ........           BL       GUI_ALLOC_LockH
   \   000003EC   0090A0E1           MOV      R9,R0
   \   000003F0   2CB0D9E5           LDRB     R11,[R9, #+44]
   \   000003F4   00A099E5           LDR      R10,[R9, #+0]
   \   000003F8   01001BE3           TST      R11,#0x1
   \   000003FC   0700000A           BEQ      ??_Paint_23
   \   00000400   18109DE5           LDR      R1,[SP, #+24]
   \   00000404   011189E0           ADD      R1,R9,R1, LSL #+2
   \   00000408   3C108DE5           STR      R1,[SP, #+60]
   \   0000040C   080091E5           LDR      R0,[R1, #+8]
   \   00000410   ........           BL       LCD_SetBkColor
   \   00000414   3C009DE5           LDR      R0,[SP, #+60]
   \   00000418   180090E5           LDR      R0,[R0, #+24]
   \   0000041C   010000EA           B        ??_Paint_24
   \                     ??_Paint_23:
   \   00000420   30009DE5           LDR      R0,[SP, #+48]
   \   00000424   500090E5           LDR      R0,[R0, #+80]
   \                     ??_Paint_24:
   \   00000428   ........           BL       LCD_SetColor
   \   0000042C   000059E3           CMP      R9,#+0
   \   00000430   0000000A           BEQ      ??_Paint_25
   \   00000434   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_Paint_25:
   \   00000438   F631DDE1           LDRSH    R3,[SP, #+22]
   \   0000043C   F421DDE1           LDRSH    R2,[SP, #+20]
   \   00000440   F211DDE1           LDRSH    R1,[SP, #+18]
   \   00000444   F001DDE1           LDRSH    R0,[SP, #+16]
   \   00000448   ........           BL       GUI_ClearRect
   \   0000044C   02001BE3           TST      R11,#0x2
   \   00000450   0900000A           BEQ      ??_Paint_26
   \   00000454   ........           BL       GUI_ALLOC_UnlockH
   \   00000458   10308DE2           ADD      R3,SP,#+16
   \   0000045C   04209DE5           LDR      R2,[SP, #+4]
   \   00000460   0610A0E1           MOV      R1,R6
   \   00000464   60009DE5           LDR      R0,[SP, #+96]
   \   00000468   3AFF2FE1           BLX      R10
   \   0000046C   0610A0E1           MOV      R1,R6
   \   00000470   38009DE5           LDR      R0,[SP, #+56]
   \   00000474   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000478   0080A0E1           MOV      R8,R0
   \                     ??_Paint_26:
   \   0000047C   F001DDE1           LDRSH    R0,[SP, #+16]
   \   00000480   54109DE5           LDR      R1,[SP, #+84]
   \   00000484   000081E0           ADD      R0,R1,R0
   \   00000488   B001CDE1           STRH     R0,[SP, #+16]
   \   0000048C   F401DDE1           LDRSH    R0,[SP, #+20]
   \   00000490   50109DE5           LDR      R1,[SP, #+80]
   \   00000494   010040E0           SUB      R0,R0,R1
   \   00000498   B401CDE1           STRH     R0,[SP, #+20]
   \   0000049C   0610A0E1           MOV      R1,R6
   \   000004A0   3C0094E5           LDR      R0,[R4, #+60]
   \   000004A4   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000004A8   0090D0E5           LDRB     R9,[R0, #+0]
   \   000004AC   ........           BL       GUI_ALLOC_UnlockH
   \   000004B0   0920A0E1           MOV      R2,R9
   \   000004B4   10108DE2           ADD      R1,SP,#+16
   \   000004B8   040088E2           ADD      R0,R8,#+4
   \   000004BC   ........           BL       GUI_DispStringInRect
   \   000004C0   000098E5           LDR      R0,[R8, #+0]
   \   000004C4   000050E3           CMP      R0,#+0
   \   000004C8   0200000A           BEQ      ??_Paint_27
   \   000004CC   30009DE5           LDR      R0,[SP, #+48]
   \   000004D0   400090E5           LDR      R0,[R0, #+64]
   \   000004D4   ........           BL       LCD_SetBkColor
   \                     ??_Paint_27:
   \   000004D8   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_Paint_22:
   \   000004DC   28009DE5           LDR      R0,[SP, #+40]
   \   000004E0   016086E2           ADD      R6,R6,#+1
   \   000004E4   055087E0           ADD      R5,R7,R5
   \   000004E8   060050E1           CMP      R0,R6
   \   000004EC   9FFFFFAA           BGE      ??_Paint_21
   \                     ??_Paint_20:
   \   000004F0   2C009DE5           LDR      R0,[SP, #+44]
   \   000004F4   000050E3           CMP      R0,#+0
   \   000004F8   91FFFF1A           BNE      ??_Paint_19
   \   000004FC   880094E5           LDR      R0,[R4, #+136]
    482                  /* Clear unused area to the right of items */
    483                  if (xPos <= ClipRect.x1) {
   \   00000500   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   00000504   000050E3           CMP      R0,#+0
   \   00000508   48509D15           LDRNE    R5,[SP, #+72]
   \   0000050C   050052E1           CMP      R2,R5
   \   00000510   030000BA           BLT      ??_Paint_15
    484                    GUI_ClearRect(xPos, Rect.y0, ClipRect.x1, Rect.y1);
   \   00000514   F631DDE1           LDRSH    R3,[SP, #+22]
   \   00000518   F211DDE1           LDRSH    R1,[SP, #+18]
   \   0000051C   0500A0E1           MOV      R0,R5
   \   00000520   ........           BL       GUI_ClearRect
    485                  }
    486                }
    487                yPos += RowDistY;
   \                     ??_Paint_15:
   \   00000524   00109DE5           LDR      R1,[SP, #+0]
   \   00000528   20209DE5           LDR      R2,[SP, #+32]
   \   0000052C   011082E0           ADD      R1,R2,R1
   \   00000530   00108DE5           STR      R1,[SP, #+0]
    488              }
    489            }
   \                     ??_Paint_14:
   \   00000534   04109DE5           LDR      R1,[SP, #+4]
   \   00000538   011081E2           ADD      R1,R1,#+1
   \   0000053C   04108DE5           STR      R1,[SP, #+4]
   \   00000540   0100A0E1           MOV      R0,R1
   \   00000544   40109DE5           LDR      R1,[SP, #+64]
   \   00000548   010050E1           CMP      R0,R1
   \   0000054C   22FFFFBA           BLT      ??_Paint_6
    490            /* Clear unused area below items */
    491            if (yPos <= ClipRect.y1) {
   \                     ??_Paint_5:
   \   00000550   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   00000554   00109DE5           LDR      R1,[SP, #+0]
   \   00000558   010050E1           CMP      R0,R1
   \   0000055C   060000BA           BLT      ??_Paint_28
    492              LCD_SetBkColor(pObj->Props.aBkColor[0]);
   \   00000560   400094E5           LDR      R0,[R4, #+64]
   \   00000564   ........           BL       LCD_SetBkColor
    493              GUI_ClearRect(ClipRect.x0, yPos, ClipRect.x1, ClipRect.y1);
   \   00000568   FE30DDE1           LDRSH    R3,[SP, #+14]
   \   0000056C   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   00000570   00109DE5           LDR      R1,[SP, #+0]
   \   00000574   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000578   ........           BL       GUI_ClearRect
    494            }
    495            /* Draw grid */
    496            if (pObj->ShowGrid) {
   \                     ??_Paint_28:
   \   0000057C   700094E5           LDR      R0,[R4, #+112]
   \   00000580   000050E3           CMP      R0,#+0
   \   00000584   6800000A           BEQ      ??_Paint_29
    497              LCD_SetColor(pObj->Props.GridColor);
   \   00000588   600094E5           LDR      R0,[R4, #+96]
   \   0000058C   ........           BL       LCD_SetColor
    498              yPos = HEADER_GetHeight(pObj->hHeader) + EffectSize - 1;
   \   00000590   340094E5           LDR      R0,[R4, #+52]
   \   00000594   ........           BL       HEADER_GetHeight
   \   00000598   1C109DE5           LDR      R1,[SP, #+28]
   \   0000059C   000081E0           ADD      R0,R1,R0
   \   000005A0   010040E2           SUB      R0,R0,#+1
   \   000005A4   00008DE5           STR      R0,[SP, #+0]
    499              for (i = 0; i < NumVisRows; i++) {
   \   000005A8   24009DE5           LDR      R0,[SP, #+36]
   \   000005AC   010050E3           CMP      R0,#+1
   \   000005B0   300000BA           BLT      ??_Paint_30
   \   000005B4   0050A0E1           MOV      R5,R0
   \   000005B8   010015E3           TST      R5,#0x1
   \   000005BC   0D00000A           BEQ      ??_Paint_31
    500                yPos += RowDistY;
   \   000005C0   00109DE5           LDR      R1,[SP, #+0]
   \   000005C4   20209DE5           LDR      R2,[SP, #+32]
    501                /* Break when all other rows are outside the drawing area */
    502                if (yPos > ClipRect.y1) {
   \   000005C8   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   000005CC   011082E0           ADD      R1,R2,R1
   \   000005D0   00108DE5           STR      R1,[SP, #+0]
   \   000005D4   010050E1           CMP      R0,R1
   \   000005D8   260000BA           BLT      ??_Paint_30
    503                  break;
    504                }
    505                /* Make sure that we draw only when row is in drawing area */
    506                if (yPos >= ClipRect.y0) {
   \   000005DC   0100A0E1           MOV      R0,R1
   \   000005E0   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   000005E4   010050E1           CMP      R0,R1
   \   000005E8   020000BA           BLT      ??_Paint_31
    507                  GUI_DrawHLine(yPos, ClipRect.x0, ClipRect.x1);
   \   000005EC   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   000005F0   F810DDE1           LDRSH    R1,[SP, #+8]
   \   000005F4   ........           BL       GUI_DrawHLine
   \                     ??_Paint_31:
   \   000005F8   A550B0E1           LSRS     R5,R5,#+1
   \   000005FC   1D00000A           BEQ      ??_Paint_30
   \                     ??_Paint_32:
   \   00000600   00109DE5           LDR      R1,[SP, #+0]
   \   00000604   20209DE5           LDR      R2,[SP, #+32]
   \   00000608   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   0000060C   011082E0           ADD      R1,R2,R1
   \   00000610   00108DE5           STR      R1,[SP, #+0]
   \   00000614   010050E1           CMP      R0,R1
   \   00000618   160000BA           BLT      ??_Paint_30
   \   0000061C   0100A0E1           MOV      R0,R1
   \   00000620   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   00000624   010050E1           CMP      R0,R1
   \   00000628   020000BA           BLT      ??_Paint_33
   \   0000062C   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   00000630   F810DDE1           LDRSH    R1,[SP, #+8]
   \   00000634   ........           BL       GUI_DrawHLine
   \                     ??_Paint_33:
   \   00000638   00109DE5           LDR      R1,[SP, #+0]
   \   0000063C   20209DE5           LDR      R2,[SP, #+32]
   \   00000640   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   00000644   011082E0           ADD      R1,R2,R1
   \   00000648   00108DE5           STR      R1,[SP, #+0]
   \   0000064C   010050E1           CMP      R0,R1
   \   00000650   080000BA           BLT      ??_Paint_30
   \   00000654   0100A0E1           MOV      R0,R1
   \   00000658   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   0000065C   010050E1           CMP      R0,R1
   \   00000660   020000BA           BLT      ??_Paint_34
   \   00000664   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   00000668   F810DDE1           LDRSH    R1,[SP, #+8]
   \   0000066C   ........           BL       GUI_DrawHLine
    508                }
    509              }
   \                     ??_Paint_34:
   \   00000670   015055E2           SUBS     R5,R5,#+1
   \   00000674   E1FFFF1A           BNE      ??_Paint_32
    510              xPos = EffectSize - pObj->ScrollStateH.v;
   \                     ??_Paint_30:
   \   00000678   1C009DE5           LDR      R0,[SP, #+28]
   \   0000067C   9C1094E5           LDR      R1,[R4, #+156]
    511              xPosLastFixed = 0;
   \   00000680   0060A0E3           MOV      R6,#+0
   \   00000684   015040E0           SUB      R5,R0,R1
    512              for (i = 0; i < NumColumns; i++) {
   \   00000688   34009DE5           LDR      R0,[SP, #+52]
   \   0000068C   04608DE5           STR      R6,[SP, #+4]
   \   00000690   010050E3           CMP      R0,#+1
   \   00000694   240000BA           BLT      ??_Paint_29
    513                xPos += HEADER_GetItemWidth(pObj->hHeader, i);
   \                     ??_Paint_35:
   \   00000698   04109DE5           LDR      R1,[SP, #+4]
   \   0000069C   340094E5           LDR      R0,[R4, #+52]
   \   000006A0   ........           BL       HEADER_GetItemWidth
    514                xPos += (i < (int)pObj->Fixed) ? pObj->ScrollStateH.v : 0;
   \   000006A4   04109DE5           LDR      R1,[SP, #+4]
   \   000006A8   882094E5           LDR      R2,[R4, #+136]
   \   000006AC   050080E0           ADD      R0,R0,R5
   \   000006B0   020051E1           CMP      R1,R2
   \   000006B4   9C1094B5           LDRLT    R1,[R4, #+156]
   \   000006B8   0010A0A3           MOVGE    R1,#+0
   \   000006BC   005081E0           ADD      R5,R1,R0
    515                xPosLastFixed = (i < (int)pObj->Fixed) ? xPos : xPosLastFixed;
   \   000006C0   04009DE5           LDR      R0,[SP, #+4]
   \   000006C4   020050E1           CMP      R0,R2
    516                /* Break when all other columns are outside the drawing area */
    517                if (xPos > ClipRect.x1) {
   \   000006C8   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   000006CC   0560A0B1           MOVLT    R6,R5
   \   000006D0   050050E1           CMP      R0,R5
   \   000006D4   140000BA           BLT      ??_Paint_29
    518                  break;
    519                }
    520                /* Make sure that we draw only when column is in drawing area */
    521                if ((xPos >= ClipRect.x0) && (xPos >= xPosLastFixed)) {
   \   000006D8   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000006DC   000055E1           CMP      R5,R0
   \   000006E0   060055A1           CMPGE    R5,R6
   \   000006E4   030000BA           BLT      ??_Paint_36
    522                  GUI_DrawVLine(xPos, ClipRect.y0, ClipRect.y1);
   \   000006E8   FE20DDE1           LDRSH    R2,[SP, #+14]
   \   000006EC   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   000006F0   0500A0E1           MOV      R0,R5
   \   000006F4   ........           BL       GUI_DrawVLine
    523                }
    524                xPos -= (i < (int)pObj->Fixed) ? pObj->ScrollStateH.v : 0;
   \                     ??_Paint_36:
   \   000006F8   04009DE5           LDR      R0,[SP, #+4]
   \   000006FC   881094E5           LDR      R1,[R4, #+136]
   \   00000700   010050E1           CMP      R0,R1
   \   00000704   9C0094B5           LDRLT    R0,[R4, #+156]
    525              }
   \   00000708   04109DE5           LDR      R1,[SP, #+4]
   \   0000070C   0000A0A3           MOVGE    R0,#+0
   \   00000710   005045E0           SUB      R5,R5,R0
   \   00000714   011081E2           ADD      R1,R1,#+1
   \   00000718   04108DE5           STR      R1,[SP, #+4]
   \   0000071C   0100A0E1           MOV      R0,R1
   \   00000720   34109DE5           LDR      R1,[SP, #+52]
   \   00000724   010050E1           CMP      R0,R1
   \   00000728   DAFFFFBA           BLT      ??_Paint_35
    526            }
    527            /* Draw the effect */
    528            WIDGET__EFFECT_DrawDown(&pObj->Widget);
   \                     ??_Paint_29:
   \   0000072C   0400A0E1           MOV      R0,R4
   \   00000730   ........           BL       WIDGET__EFFECT_DrawDown
    529            GUI_UNLOCK_H(pObj);
   \   00000734   ........           BL       GUI_ALLOC_UnlockH
    530          }
   \                     ??_Paint_4:
   \   00000738   64D08DE2           ADD      SP,SP,#+100      ;; stack cleaning
   \   0000073C   F08FBDE8           POP      {R4-R11,PC}      ;; return
    531          
    532          /*********************************************************************
    533          *
    534          *       LISTVIEW__InvalidateInsideArea
    535          */

   \                                 In section .text, align 4, keep-with-next
    536          void LISTVIEW__InvalidateInsideArea(LISTVIEW_Handle hObj) {
   \                     LISTVIEW__InvalidateInsideArea:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
    537            LISTVIEW_Obj * pObj;
    538            GUI_RECT Rect;
    539            int HeaderHeight;
    540            HEADER_Handle hHeader;
    541          
    542            pObj = LISTVIEW_LOCK_H(hObj);
    543            hHeader = pObj->hHeader;
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   345090E5           LDR      R5,[R0, #+52]
    544            GUI_UNLOCK_H(pObj);
   \   00000014   ........           BL       GUI_ALLOC_UnlockH
    545            HeaderHeight = HEADER_GetHeight(hHeader);
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       HEADER_GetHeight
   \   00000020   0050A0E1           MOV      R5,R0
    546            WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   00000024   0D10A0E1           MOV      R1,SP
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       WM_GetInsideRectExScrollbar
    547            Rect.y0 += HeaderHeight;
   \   00000030   F200DDE1           LDRSH    R0,[SP, #+2]
    548            WM_InvalidateRect(hObj, &Rect);
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   000085E0           ADD      R0,R5,R0
   \   0000003C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateRect
    549          }
   \   00000048   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
    550          
    551          /*********************************************************************
    552          *
    553          *       LISTVIEW__InvalidateRow
    554          */

   \                                 In section .text, align 4, keep-with-next
    555          void LISTVIEW__InvalidateRow(LISTVIEW_Handle hObj, LISTVIEW_Obj * pObj, int Sel) {
   \                     LISTVIEW__InvalidateRow:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260B0E1           MOVS     R6,R2
    556            if (Sel >= 0) {
   \   00000014   1B00004A           BMI      ??LISTVIEW__InvalidateRow_0
    557              GUI_RECT Rect;
    558              int HeaderHeight, RowDistY;
    559              HeaderHeight = HEADER_GetHeight(pObj->hHeader);
   \   00000018   340095E5           LDR      R0,[R5, #+52]
   \   0000001C   ........           BL       HEADER_GetHeight
    560              RowDistY     = LISTVIEW__GetRowDistY(pObj);
   \   00000020   787095E5           LDR      R7,[R5, #+120]
   \   00000024   0080A0E1           MOV      R8,R0
   \   00000028   000057E3           CMP      R7,#+0
   \   0000002C   0500001A           BNE      ??LISTVIEW__InvalidateRow_1
   \   00000030   640095E5           LDR      R0,[R5, #+100]
   \   00000034   ........           BL       GUI_GetYDistOfFont
   \   00000038   0070A0E1           MOV      R7,R0
   \   0000003C   700095E5           LDR      R0,[R5, #+112]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   01708712           ADDNE    R7,R7,#+1
    561              WM_GetInsideRectExScrollbar(hObj, &Rect);
   \                     ??LISTVIEW__InvalidateRow_1:
   \   00000048   0D10A0E1           MOV      R1,SP
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           BL       WM_GetInsideRectExScrollbar
    562              Rect.y0 += HeaderHeight + (Sel - pObj->ScrollStateV.v) * RowDistY;
   \   00000054   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000058   901095E5           LDR      R1,[R5, #+144]
   \   0000005C   000088E0           ADD      R0,R8,R0
   \   00000060   011046E0           SUB      R1,R6,R1
   \   00000064   970120E0           MLA      R0,R7,R1,R0
    563              Rect.y1  = Rect.y0 + RowDistY - 1;
    564              WM_InvalidateRect(hObj, &Rect);
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000070   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000074   000087E0           ADD      R0,R7,R0
   \   00000078   010040E2           SUB      R0,R0,#+1
   \   0000007C   B600CDE1           STRH     R0,[SP, #+6]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       WM_InvalidateRect
    565            }
    566          }
   \                     ??LISTVIEW__InvalidateRow_0:
   \   00000088   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000008C   F081BDE8           POP      {R4-R8,PC}       ;; return
    567          
    568          /*********************************************************************
    569          *
    570          *       _SetSelFromPos
    571          */

   \                                 In section .text, align 4, keep-with-next
    572          static void _SetSelFromPos(LISTVIEW_Handle hObj, const GUI_PID_STATE* pState) {
   \                     _SetSelFromPos:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   01A0A0E1           MOV      R10,R1
    573            LISTVIEW_Obj * pObj;
    574            GUI_RECT Rect;
    575            int x, y, HeaderHeight, RowDistY, NumRows, Sel, ScrollStateV_v;
    576            int lBorder;		// KMC
    577          
    578            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0090A0E1           MOV      R9,R0
    579            RowDistY       = LISTVIEW__GetRowDistY(pObj);
   \   00000018   780099E5           LDR      R0,[R9, #+120]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0400001A           BNE      ??_SetSelFromPos_0
   \   00000024   640099E5           LDR      R0,[R9, #+100]
   \   00000028   ........           BL       GUI_GetYDistOfFont
   \   0000002C   701099E5           LDR      R1,[R9, #+112]
   \   00000030   000051E3           CMP      R1,#+0
   \   00000034   01008012           ADDNE    R0,R0,#+1
   \                     ??_SetSelFromPos_0:
   \   00000038   0040A0E1           MOV      R4,R0
    580            NumRows        = LISTVIEW__GetNumRows(pObj);
   \   0000003C   380099E5           LDR      R0,[R9, #+56]
   \   00000040   ........           BL       GUI_ARRAY_GetNumItems
   \   00000044   0060A0E1           MOV      R6,R0
    581            HeaderHeight   = HEADER_GetHeight(pObj->hHeader);
   \   00000048   340099E5           LDR      R0,[R9, #+52]
   \   0000004C   ........           BL       HEADER_GetHeight
    582            ScrollStateV_v = pObj->ScrollStateV.v;
   \   00000050   908099E5           LDR      R8,[R9, #+144]
   \   00000054   0070A0E1           MOV      R7,R0
    583            lBorder		 = pObj->LFreeBorder;		// KMC - get additional left hand "keep out" region size
   \   00000058   849099E5           LDR      R9,[R9, #+132]
    584            GUI_UNLOCK_H(pObj);
   \   0000005C   ........           BL       GUI_ALLOC_UnlockH
    585            WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   ........           BL       WM_GetInsideRectExScrollbar
    586            x = pState->x - Rect.x0;
   \   0000006C   F010DDE1           LDRSH    R1,[SP, #+0]
    587            y = pState->y - Rect.y0 - HeaderHeight;
    588            Rect.x1 -= Rect.x0;
   \   00000070   F430DDE1           LDRSH    R3,[SP, #+4]
   \   00000074   F0C0DDE1           LDRSH    R12,[SP, #+0]
   \   00000078   00009AE5           LDR      R0,[R10, #+0]
   \   0000007C   F220DDE1           LDRSH    R2,[SP, #+2]
   \   00000080   011040E0           SUB      R1,R0,R1
   \   00000084   0C3043E0           SUB      R3,R3,R12
   \   00000088   04009AE5           LDR      R0,[R10, #+4]
    589            Rect.y1 -= Rect.y0;
   \   0000008C   F6C0DDE1           LDRSH    R12,[SP, #+6]
   \   00000090   020040E0           SUB      R0,R0,R2
   \   00000094   070040E0           SUB      R0,R0,R7
   \   00000098   02204CE0           SUB      R2,R12,R2
   \   0000009C   B430CDE1           STRH     R3,[SP, #+4]
   \   000000A0   B620CDE1           STRH     R2,[SP, #+6]
    590          // KMC - ignore additional "keep out" region on left of list
    591          //  if ((x >= 0) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
    592            if ((x >= lBorder) && (x <= Rect.x1) && (y >= 0) && (y <= (Rect.y1 - HeaderHeight))) {
   \   000000A4   090051E1           CMP      R1,R9
   \   000000A8   100000BA           BLT      ??_SetSelFromPos_1
   \   000000AC   0338A0E1           MOV      R3,R3, LSL #+16
   \   000000B0   430851E1           CMP      R1,R3, ASR #+16
   \   000000B4   0D0000CA           BGT      ??_SetSelFromPos_1
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0B00004A           BMI      ??_SetSelFromPos_1
   \   000000C0   0228A0E1           LSL      R2,R2,#+16
   \   000000C4   4228A0E1           ASR      R2,R2,#+16
   \   000000C8   071042E0           SUB      R1,R2,R7
   \   000000CC   000051E1           CMP      R1,R0
   \   000000D0   060000BA           BLT      ??_SetSelFromPos_1
    593              Sel = (y / RowDistY) + ScrollStateV_v;
   \   000000D4   0410A0E1           MOV      R1,R4
   \   000000D8   ........           BL       __aeabi_idiv
   \   000000DC   001088E0           ADD      R1,R8,R0
    594              if (Sel < NumRows) {
   \   000000E0   060051E1           CMP      R1,R6
   \   000000E4   010000AA           BGE      ??_SetSelFromPos_1
    595                LISTVIEW__SetSel(hObj, Sel);
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   ........           BL       LISTVIEW__SetSel
    596              }
    597            }
    598          }
   \                     ??_SetSelFromPos_1:
   \   000000F0   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000F4   F087BDE8           POP      {R4-R10,PC}      ;; return
    599          
    600          /*********************************************************************
    601          *
    602          *       _NotifyOwner
    603          *
    604          * Purpose:
    605          *   Notify owner of the window.
    606          *   If no owner is registered, the parent is considered owner.
    607          */
    608          static void _NotifyOwner(WM_HWIN hObj, int Notification) {
    609            WM_MESSAGE Msg = {0};
    610            WM_HWIN hOwner;
    611            hOwner      = WM_GetParent(hObj);
    612            Msg.MsgId   = WM_NOTIFY_PARENT;
    613            Msg.Data.v  = Notification;
    614            Msg.hWinSrc = hObj;
    615            WM__SendMessage(hOwner, &Msg);
    616          }
    617          
    618          /*********************************************************************
    619          *
    620          *       _OnTouch
    621          */
    622          static void _OnTouch(LISTVIEW_Handle hObj, WM_MESSAGE*pMsg) {
    623            int Notification;
    624            const GUI_PID_STATE* pState = (const GUI_PID_STATE*)pMsg->Data.p;
    625            if (pMsg->Data.p) {  /* Something happened in our area (pressed or released) */
    626              if (pState->Pressed) {
    627                _SetSelFromPos(hObj, pState);
    628                Notification = WM_NOTIFICATION_CLICKED;
    629                WM_SetFocus(hObj);
    630              } else {
    631                Notification = WM_NOTIFICATION_RELEASED;
    632              }
    633            } else {
    634              Notification = WM_NOTIFICATION_MOVED_OUT;
    635            }
    636            _NotifyOwner(hObj, Notification);
    637          }
    638          
    639          /*********************************************************************
    640          *
    641          *       _GetXSize
    642          *
    643          * Purpose:
    644          *   Returns the width of the inside listview area.
    645          */
    646          static int _GetXSize(LISTVIEW_Handle hObj) {
    647            GUI_RECT Rect;
    648            WM_GetInsideRectExScrollbar(hObj, &Rect);
    649            return Rect.x1 - Rect.x0 + 1;
    650          }
    651          
    652          /*********************************************************************
    653          *
    654          *       _GetHeaderWidth
    655          *
    656          * Purpose:
    657          *   Returns the width of all items in header.
    658          *
    659          * Return value:
    660          *   NumItems > 0:  width of all items.
    661          *   NumItems = 0:  1 (to avoid problem with horizontal scrollbar)
    662          */
    663          static int _GetHeaderWidth(LISTVIEW_Obj * pObj) {
    664            int NumItems, i, r = 1;
    665            NumItems = HEADER_GetNumItems(pObj->hHeader);
    666            if (NumItems) {
    667              for (i = 0, r = 0; i < NumItems; i++) {
    668                r += HEADER_GetItemWidth(pObj->hHeader, i);
    669              }
    670            }
    671            return r;
    672          }
    673          
    674          /*********************************************************************
    675          *
    676          *       LISTVIEW__UpdateScrollPos
    677          *
    678          * Purpose:
    679          *   Checks whether if we must scroll up or scroll down to ensure
    680          *   that selection is in the visible area. This function also
    681          *   makes sure that scroll positions are in valid ranges.
    682          *
    683          * Return value:
    684          *   Difference between old and new vertical scroll pos.
    685          */

   \                                 In section .text, align 4, keep-with-next
    686          int LISTVIEW__UpdateScrollPos(LISTVIEW_Handle hObj) {
   \                     LISTVIEW__UpdateScrollPos:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
    687            WM_SCROLL_STATE ScrollStateV, ScrollStateH;
    688            LISTVIEW_Obj * pObj;
    689            HEADER_Handle   hHeader;
    690            int PrevScrollStateV;
    691            pObj = LISTVIEW_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0060A0E1           MOV      R6,R0
    692            PrevScrollStateV = pObj->ScrollStateV.v;
    693            if (pObj->Sel >= 0) {
   \   00000014   6C1096E5           LDR      R1,[R6, #+108]
   \   00000018   905096E5           LDR      R5,[R6, #+144]
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   0400004A           BMI      ??LISTVIEW__UpdateScrollPos_0
    694              WM_CheckScrollPos(&pObj->ScrollStateV, pObj->Sel, 0, 0);
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   8C0086E2           ADD      R0,R6,#+140
   \   00000030   ........           BL       WM_CheckScrollPos
   \   00000034   010000EA           B        ??LISTVIEW__UpdateScrollPos_1
    695            } else {
    696              WM_CheckScrollBounds(&pObj->ScrollStateV);
   \                     ??LISTVIEW__UpdateScrollPos_0:
   \   00000038   8C0086E2           ADD      R0,R6,#+140
   \   0000003C   ........           BL       WM_CheckScrollBounds
    697            }
    698            WM_CheckScrollBounds(&pObj->ScrollStateH);
   \                     ??LISTVIEW__UpdateScrollPos_1:
   \   00000040   980086E2           ADD      R0,R6,#+152
   \   00000044   ........           BL       WM_CheckScrollBounds
    699            ScrollStateV = pObj->ScrollStateV;
   \   00000048   8C1086E2           ADD      R1,R6,#+140
   \   0000004C   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000050   0C008DE2           ADD      R0,SP,#+12
   \   00000054   0C10A0E8           STM      R0!,{R2,R3,R12}
    700            ScrollStateH = pObj->ScrollStateH;
   \   00000058   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   0C10A0E8           STM      R0!,{R2,R3,R12}
    701            hHeader = pObj->hHeader;
   \   00000064   346096E5           LDR      R6,[R6, #+52]
    702            GUI_UNLOCK_H(pObj);
   \   00000068   ........           BL       GUI_ALLOC_UnlockH
    703            WIDGET__SetScrollState(hObj, &ScrollStateV, &ScrollStateH);
   \   0000006C   0D20A0E1           MOV      R2,SP
   \   00000070   0C108DE2           ADD      R1,SP,#+12
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       WIDGET__SetScrollState
    704            if (hHeader) {
   \   0000007C   000056E3           CMP      R6,#+0
   \   00000080   0200000A           BEQ      ??LISTVIEW__UpdateScrollPos_2
    705              HEADER_SetScrollPos(hHeader, ScrollStateH.v);
   \   00000084   04109DE5           LDR      R1,[SP, #+4]
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   ........           BL       HEADER_SetScrollPos
    706            }
    707            return ScrollStateV.v - PrevScrollStateV;
   \                     ??LISTVIEW__UpdateScrollPos_2:
   \   00000090   10009DE5           LDR      R0,[SP, #+16]
   \   00000094   18D08DE2           ADD      SP,SP,#+24
   \   00000098   050040E0           SUB      R0,R0,R5
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
    708          }
    709          
    710          /*********************************************************************
    711          *
    712          *       LISTVIEW__UpdateScrollParas
    713          *
    714          * Purpose:
    715          *   Calculates number of items and page size of both vertical
    716          *   and horizontal scrollbar. After this LISTVIEW__UpdateScrollPos will
    717          *   be called to ensure scroll positions are in valid ranges.
    718          */
    719          extern unsigned int _LockCntHandles;

   \                                 In section .text, align 4, keep-with-next
    720          int LISTVIEW__UpdateScrollParas(LISTVIEW_Handle hObj) {
   \                     LISTVIEW__UpdateScrollParas:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    721            int NumRows, IsRequired;
    722            int xSize, xSizeHeader, r;
    723            unsigned NumVisibleRows;
    724            LISTVIEW_Obj * pObj;
    725            GUI_ARRAY RowArray;
    726            U8 Flags;
    727            static char IsActive;
    728            
    729            if (IsActive) {
   \   00000004   ........           LDR      R5,??DataTable3
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000010   2CD04DE2           SUB      SP,SP,#+44
   \   00000014   000050E3           CMP      R0,#+0
    730              return 0;
   \   00000018   0000A013           MOVNE    R0,#+0
   \   0000001C   B000001A           BNE      ??LISTVIEW__UpdateScrollParas_0
    731            }
    732            IsActive = 1;
   \   00000020   0170A0E3           MOV      R7,#+1
   \   00000024   0070C5E5           STRB     R7,[R5, #+0]
    733            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       GUI_ALLOC_LockH
   \   00000030   0080A0E1           MOV      R8,R0
    734            RowArray       = pObj->RowArray;
   \   00000034   381098E5           LDR      R1,[R8, #+56]
    735            NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
   \   00000038   0160A0E3           MOV      R6,#+1
   \   0000003C   10108DE5           STR      R1,[SP, #+16]
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       WM_GetInsideRectExScrollbar
   \   0000004C   340098E5           LDR      R0,[R8, #+52]
   \   00000050   ........           BL       HEADER_GetHeight
   \   00000054   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000058   F220DDE1           LDRSH    R2,[SP, #+2]
   \   0000005C   021041E0           SUB      R1,R1,R2
   \   00000060   011081E2           ADD      R1,R1,#+1
   \   00000064   009041E0           SUB      R9,R1,R0
   \   00000068   781098E5           LDR      R1,[R8, #+120]
   \   0000006C   000051E3           CMP      R1,#+0
   \   00000070   0700001A           BNE      ??LISTVIEW__UpdateScrollParas_1
   \   00000074   640098E5           LDR      R0,[R8, #+100]
   \   00000078   ........           BL       GUI_GetYDistOfFont
   \   0000007C   0010A0E1           MOV      R1,R0
   \   00000080   700098E5           LDR      R0,[R8, #+112]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   01108112           ADDNE    R1,R1,#+1
   \   0000008C   000051E3           CMP      R1,#+0
   \   00000090   0300000A           BEQ      ??LISTVIEW__UpdateScrollParas_2
   \                     ??LISTVIEW__UpdateScrollParas_1:
   \   00000094   0900A0E1           MOV      R0,R9
   \   00000098   ........           BL       __aeabi_uidiv
   \   0000009C   0060B0E1           MOVS     R6,R0
   \   000000A0   0160A003           MOVEQ    R6,#+1
   \                     ??LISTVIEW__UpdateScrollParas_2:
   \   000000A4   08608DE5           STR      R6,[SP, #+8]
    736            xSize          = _GetXSize(hObj);
   \   000000A8   0D10A0E1           MOV      R1,SP
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   ........           BL       WM_GetInsideRectExScrollbar
   \   000000B4   F410DDE1           LDRSH    R1,[SP, #+4]
   \   000000B8   F020DDE1           LDRSH    R2,[SP, #+0]
    737            xSizeHeader    = _GetHeaderWidth(pObj);
   \   000000BC   0160A0E3           MOV      R6,#+1
   \   000000C0   021041E0           SUB      R1,R1,R2
   \   000000C4   011081E2           ADD      R1,R1,#+1
   \   000000C8   0C108DE5           STR      R1,[SP, #+12]
   \   000000CC   340098E5           LDR      R0,[R8, #+52]
   \   000000D0   ........           BL       HEADER_GetNumItems
   \   000000D4   0090B0E1           MOVS     R9,R0
   \   000000D8   1900000A           BEQ      ??LISTVIEW__UpdateScrollParas_3
   \   000000DC   00B0A0E3           MOV      R11,#+0
   \   000000E0   0060A0E3           MOV      R6,#+0
   \   000000E4   010059E3           CMP      R9,#+1
   \   000000E8   150000BA           BLT      ??LISTVIEW__UpdateScrollParas_3
   \   000000EC   010019E3           TST      R9,#0x1
   \   000000F0   0400000A           BEQ      ??LISTVIEW__UpdateScrollParas_4
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   340098E5           LDR      R0,[R8, #+52]
   \   000000FC   ........           BL       HEADER_GetItemWidth
   \   00000100   0060A0E1           MOV      R6,R0
   \   00000104   01B0A0E3           MOV      R11,#+1
   \                     ??LISTVIEW__UpdateScrollParas_4:
   \   00000108   A990B0E1           LSRS     R9,R9,#+1
   \   0000010C   0C00000A           BEQ      ??LISTVIEW__UpdateScrollParas_3
   \                     ??LISTVIEW__UpdateScrollParas_5:
   \   00000110   0B10A0E1           MOV      R1,R11
   \   00000114   340098E5           LDR      R0,[R8, #+52]
   \   00000118   ........           BL       HEADER_GetItemWidth
   \   0000011C   00A0A0E1           MOV      R10,R0
   \   00000120   01B08BE2           ADD      R11,R11,#+1
   \   00000124   0B10A0E1           MOV      R1,R11
   \   00000128   340098E5           LDR      R0,[R8, #+52]
   \   0000012C   ........           BL       HEADER_GetItemWidth
   \   00000130   0A0080E0           ADD      R0,R0,R10
   \   00000134   066080E0           ADD      R6,R0,R6
   \   00000138   01B08BE2           ADD      R11,R11,#+1
   \   0000013C   019059E2           SUBS     R9,R9,#+1
   \   00000140   F2FFFF1A           BNE      ??LISTVIEW__UpdateScrollParas_5
    738            Flags          = pObj->Flags;
   \                     ??LISTVIEW__UpdateScrollParas_3:
   \   00000144   AB80D8E5           LDRB     R8,[R8, #+171]
    739            GUI_UNLOCK_H(pObj);
   \   00000148   ........           BL       GUI_ALLOC_UnlockH
    740            if (Flags & LISTVIEW_SF_AUTOSCROLLBAR_V) {
   \   0000014C   020018E3           TST      R8,#0x2
   \   00000150   0700000A           BEQ      ??LISTVIEW__UpdateScrollParas_6
    741              IsRequired = (NumVisibleRows < GUI_ARRAY_GetNumItems(RowArray));
   \   00000154   10009DE5           LDR      R0,[SP, #+16]
   \   00000158   ........           BL       GUI_ARRAY_GetNumItems
   \   0000015C   08109DE5           LDR      R1,[SP, #+8]
   \   00000160   000051E1           CMP      R1,R0
   \   00000164   0110A033           MOVCC    R1,#+1
   \   00000168   0010A023           MOVCS    R1,#+0
    742              WM_SetScrollbarV(hObj, IsRequired);
   \   0000016C   0400A0E1           MOV      R0,R4
   \   00000170   ........           BL       WM_SetScrollbarV
    743            }
    744            if (Flags & LISTVIEW_SF_AUTOSCROLLBAR_H) {
   \                     ??LISTVIEW__UpdateScrollParas_6:
   \   00000174   010018E3           TST      R8,#0x1
   \   00000178   2400000A           BEQ      ??LISTVIEW__UpdateScrollParas_7
    745              IsRequired  = (xSizeHeader > xSize);
   \   0000017C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000180   060050E1           CMP      R0,R6
   \   00000184   0110A0B3           MOVLT    R1,#+1
   \   00000188   0010A0A3           MOVGE    R1,#+0
    746              WM_SetScrollbarH(hObj, IsRequired);
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   ........           BL       WM_SetScrollbarH
    747              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000194   0400A0E1           MOV      R0,R4
   \   00000198   ........           BL       GUI_ALLOC_LockH
   \   0000019C   0080A0E1           MOV      R8,R0
    748              NumVisibleRows = _GetNumVisibleRows(hObj, pObj);
   \   000001A0   0190A0E3           MOV      R9,#+1
   \   000001A4   0D10A0E1           MOV      R1,SP
   \   000001A8   0400A0E1           MOV      R0,R4
   \   000001AC   ........           BL       WM_GetInsideRectExScrollbar
   \   000001B0   340098E5           LDR      R0,[R8, #+52]
   \   000001B4   ........           BL       HEADER_GetHeight
   \   000001B8   F610DDE1           LDRSH    R1,[SP, #+6]
   \   000001BC   F220DDE1           LDRSH    R2,[SP, #+2]
   \   000001C0   021041E0           SUB      R1,R1,R2
   \   000001C4   011081E2           ADD      R1,R1,#+1
   \   000001C8   00A041E0           SUB      R10,R1,R0
   \   000001CC   781098E5           LDR      R1,[R8, #+120]
   \   000001D0   000051E3           CMP      R1,#+0
   \   000001D4   0700001A           BNE      ??LISTVIEW__UpdateScrollParas_8
   \   000001D8   640098E5           LDR      R0,[R8, #+100]
   \   000001DC   ........           BL       GUI_GetYDistOfFont
   \   000001E0   0010A0E1           MOV      R1,R0
   \   000001E4   700098E5           LDR      R0,[R8, #+112]
   \   000001E8   000050E3           CMP      R0,#+0
   \   000001EC   01108112           ADDNE    R1,R1,#+1
   \   000001F0   000051E3           CMP      R1,#+0
   \   000001F4   0300000A           BEQ      ??LISTVIEW__UpdateScrollParas_9
   \                     ??LISTVIEW__UpdateScrollParas_8:
   \   000001F8   0A00A0E1           MOV      R0,R10
   \   000001FC   ........           BL       __aeabi_uidiv
   \   00000200   0090B0E1           MOVS     R9,R0
   \   00000204   0190A003           MOVEQ    R9,#+1
    749            } else {
   \                     ??LISTVIEW__UpdateScrollParas_9:
   \   00000208   08908DE5           STR      R9,[SP, #+8]
   \   0000020C   020000EA           B        ??LISTVIEW__UpdateScrollParas_10
    750              pObj = LISTVIEW_LOCK_H(hObj);
   \                     ??LISTVIEW__UpdateScrollParas_7:
   \   00000210   0400A0E1           MOV      R0,R4
   \   00000214   ........           BL       GUI_ALLOC_LockH
   \   00000218   0080A0E1           MOV      R8,R0
    751            }
    752            NumRows = LISTVIEW__GetNumRows(pObj);
   \                     ??LISTVIEW__UpdateScrollParas_10:
   \   0000021C   380098E5           LDR      R0,[R8, #+56]
   \   00000220   ........           BL       GUI_ARRAY_GetNumItems
    753            /* update vertical scrollbar */
    754            pObj->ScrollStateV.PageSize = NumVisibleRows;
   \   00000224   08109DE5           LDR      R1,[SP, #+8]
    755            pObj->ScrollStateV.NumItems = (NumRows) ? NumRows : 1;
   \   00000228   000050E3           CMP      R0,#+0
   \   0000022C   941088E5           STR      R1,[R8, #+148]
   \   00000230   0100A003           MOVEQ    R0,#+1
   \   00000234   8C0088E5           STR      R0,[R8, #+140]
    756            /* update horizontal scrollbar */
    757            pObj->ScrollStateH.PageSize = xSize;
   \   00000238   0C009DE5           LDR      R0,[SP, #+12]
   \   0000023C   A00088E5           STR      R0,[R8, #+160]
    758            pObj->ScrollStateH.NumItems = xSizeHeader;
   \   00000240   986088E5           STR      R6,[R8, #+152]
    759            r = LISTVIEW__UpdateScrollPos(hObj);
   \   00000244   0400A0E1           MOV      R0,R4
   \   00000248   ........           BL       GUI_ALLOC_LockH
   \   0000024C   0070A0E1           MOV      R7,R0
   \   00000250   6C1097E5           LDR      R1,[R7, #+108]
   \   00000254   906097E5           LDR      R6,[R7, #+144]
   \   00000258   000051E3           CMP      R1,#+0
   \   0000025C   0200005A           BPL      ??LISTVIEW__UpdateScrollParas_11
   \   00000260   8C0087E2           ADD      R0,R7,#+140
   \   00000264   ........           BL       WM_CheckScrollBounds
   \   00000268   030000EA           B        ??LISTVIEW__UpdateScrollParas_12
   \                     ??LISTVIEW__UpdateScrollParas_11:
   \   0000026C   0030A0E3           MOV      R3,#+0
   \   00000270   0020A0E3           MOV      R2,#+0
   \   00000274   8C0087E2           ADD      R0,R7,#+140
   \   00000278   ........           BL       WM_CheckScrollPos
   \                     ??LISTVIEW__UpdateScrollParas_12:
   \   0000027C   980087E2           ADD      R0,R7,#+152
   \   00000280   ........           BL       WM_CheckScrollBounds
   \   00000284   8C1087E2           ADD      R1,R7,#+140
   \   00000288   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   0000028C   20008DE2           ADD      R0,SP,#+32
   \   00000290   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   00000294   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000298   14008DE2           ADD      R0,SP,#+20
   \   0000029C   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   000002A0   347097E5           LDR      R7,[R7, #+52]
   \   000002A4   ........           BL       GUI_ALLOC_UnlockH
   \   000002A8   14208DE2           ADD      R2,SP,#+20
   \   000002AC   20108DE2           ADD      R1,SP,#+32
   \   000002B0   0400A0E1           MOV      R0,R4
   \   000002B4   ........           BL       WIDGET__SetScrollState
   \   000002B8   000057E3           CMP      R7,#+0
   \   000002BC   0200000A           BEQ      ??LISTVIEW__UpdateScrollParas_13
   \   000002C0   18109DE5           LDR      R1,[SP, #+24]
   \   000002C4   0700A0E1           MOV      R0,R7
   \   000002C8   ........           BL       HEADER_SetScrollPos
   \                     ??LISTVIEW__UpdateScrollParas_13:
   \   000002CC   24009DE5           LDR      R0,[SP, #+36]
   \   000002D0   064040E0           SUB      R4,R0,R6
    760            GUI_UNLOCK_H(pObj);
   \   000002D4   ........           BL       GUI_ALLOC_UnlockH
    761            IsActive = 0;
   \   000002D8   0000A0E3           MOV      R0,#+0
   \   000002DC   0000C5E5           STRB     R0,[R5, #+0]
    762            return r;
   \   000002E0   0400A0E1           MOV      R0,R4
   \                     ??LISTVIEW__UpdateScrollParas_0:
   \   000002E4   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   000002E8   F08FBDE8           POP      {R4-R11,PC}      ;; return
    763          }

   \                                 In section .bss, align 1
   \                     ??IsActive:
   \   00000000                      DS8 1
    764          
    765          /*********************************************************************
    766          *
    767          *       _FreeAttached
    768          *
    769          * Purpose:
    770          *   Delete attached objects (if any).
    771          */

   \                                 In section .text, align 4, keep-with-next
    772          static void _FreeAttached(LISTVIEW_Obj * pObj) {
   \                     _FreeAttached:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
    773            int i, j, NumRows, NumColumns;
    774            NumRows    = LISTVIEW__GetNumRows(pObj);
   \   0000000C   380094E5           LDR      R0,[R4, #+56]
   \   00000010   ........           BL       GUI_ARRAY_GetNumItems
   \   00000014   0050A0E1           MOV      R5,R0
    775            NumColumns = LISTVIEW__GetNumColumns(pObj);
   \   00000018   3C0094E5           LDR      R0,[R4, #+60]
   \   0000001C   ........           BL       GUI_ARRAY_GetNumItems
   \   00000020   0060A0E1           MOV      R6,R0
    776            for (i = 0; i < NumRows; i++) {
   \   00000024   0070A0E3           MOV      R7,#+0
   \   00000028   010055E3           CMP      R5,#+1
   \   0000002C   190000BA           BLT      ??_FreeAttached_0
    777              LISTVIEW_ROW* pRow;
    778              pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, i);
   \                     ??_FreeAttached_1:
   \   00000030   0710A0E1           MOV      R1,R7
   \   00000034   380094E5           LDR      R0,[R4, #+56]
   \   00000038   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000003C   0080A0E1           MOV      R8,R0
    779              /* Delete attached info items */
    780              for (j = 0; j < NumColumns; j++) {
   \   00000040   0090A0E3           MOV      R9,#+0
   \   00000044   010056E3           CMP      R6,#+1
   \   00000048   0C0000BA           BLT      ??_FreeAttached_2
    781                LISTVIEW_CELL* pCell;
    782                pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(pRow->CellArray, j);
   \                     ??_FreeAttached_3:
   \   0000004C   0910A0E1           MOV      R1,R9
   \   00000050   000098E5           LDR      R0,[R8, #+0]
   \   00000054   ........           BL       GUI_ARRAY_GetpItemLocked
    783                if (pCell) {
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0400000A           BEQ      ??_FreeAttached_4
    784                  if (pCell->hCellInfo) {
   \   00000060   000090E5           LDR      R0,[R0, #+0]
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0000000A           BEQ      ??_FreeAttached_5
    785                    GUI_ALLOC_Free(pCell->hCellInfo);
   \   0000006C   ........           BL       GUI_ALLOC_Free
    786                  }
    787                  GUI_UNLOCK_H(pCell);
   \                     ??_FreeAttached_5:
   \   00000070   ........           BL       GUI_ALLOC_UnlockH
    788                }
    789              }
   \                     ??_FreeAttached_4:
   \   00000074   019089E2           ADD      R9,R9,#+1
   \   00000078   060059E1           CMP      R9,R6
   \   0000007C   F2FFFFBA           BLT      ??_FreeAttached_3
    790              /* Delete row */
    791              GUI_ARRAY_Delete(pRow->CellArray);
   \                     ??_FreeAttached_2:
   \   00000080   000098E5           LDR      R0,[R8, #+0]
   \   00000084   ........           BL       GUI_ARRAY_Delete
    792              GUI_UNLOCK_H(pRow);
   \   00000088   ........           BL       GUI_ALLOC_UnlockH
    793            }
   \   0000008C   017087E2           ADD      R7,R7,#+1
   \   00000090   050057E1           CMP      R7,R5
   \   00000094   E5FFFFBA           BLT      ??_FreeAttached_1
    794            /* Delete sort object */
    795            if (pObj->hSort) {
   \                     ??_FreeAttached_0:
   \   00000098   A40094E5           LDR      R0,[R4, #+164]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0500000A           BEQ      ??_FreeAttached_6
    796              LISTVIEW_SORT * pSort;
    797              pSort = (LISTVIEW_SORT *)GUI_LOCK_H(pObj->hSort);
   \   000000A4   ........           BL       GUI_ALLOC_LockH
   \   000000A8   0010A0E1           MOV      R1,R0
    798              pSort->fpFree(pObj->hSort);
   \   000000AC   A40094E5           LDR      R0,[R4, #+164]
   \   000000B0   0C1091E5           LDR      R1,[R1, #+12]
   \   000000B4   31FF2FE1           BLX      R1
    799              GUI_UNLOCK_H(pSort);
   \   000000B8   ........           BL       GUI_ALLOC_UnlockH
    800            }
    801            GUI_ARRAY_Delete(pObj->ColumnArray);
   \                     ??_FreeAttached_6:
   \   000000BC   3C0094E5           LDR      R0,[R4, #+60]
   \   000000C0   ........           BL       GUI_ARRAY_Delete
    802            GUI_ARRAY_Delete(pObj->RowArray);
   \   000000C4   380094E5           LDR      R0,[R4, #+56]
   \   000000C8   04D08DE2           ADD      SP,SP,#+4
   \   000000CC   F043BDE8           POP      {R4-R9,LR}
   \   000000D0   ........           B        GUI_ARRAY_Delete  ;; tailcall
    803          }
    804          
    805          /*********************************************************************
    806          *
    807          *       _OnPage
    808          *
    809          * Purpose:
    810          *   Handles pressing of GUI_KEY_PGUP and GUI_KEY_PGDOWN
    811          *
    812          * Parameters:
    813          *   Dir > 0: If the current selection is not on the bottom row, the selection
    814          *            will be moved to the bottom row.
    815          *            If the current selection is on the bottom row, the selection will
    816          *            be moved one page down. If not possible, the bottom row will be selected.
    817          *   Dir < 0: If the current selection is not on the top row, the selection
    818          *            will be moved to the top row.
    819          *            If the current selection is on the top row, the selection will
    820          *            be moved one page up. If not possible, the top row will be selected.
    821          */

   \                                 In section .text, align 4, keep-with-next
    822          static void _OnPage(LISTVIEW_Handle hObj, int Dir) {
   \                     _OnPage:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0180A0E1           MOV      R8,R1
    823            LISTVIEW_Obj * pObj;
    824            int Sel;
    825            int NumItems;
    826            WM_SCROLL_STATE ScrollStateV;
    827            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000010   ........           BL       GUI_ALLOC_LockH
    828            Sel = pObj->Sel;
   \   00000014   6C6090E5           LDR      R6,[R0, #+108]
    829            ScrollStateV = pObj->ScrollStateV;
   \   00000018   909090E5           LDR      R9,[R0, #+144]
   \   0000001C   945090E5           LDR      R5,[R0, #+148]
    830            NumItems = LISTVIEW__GetNumRows(pObj);
   \   00000020   380090E5           LDR      R0,[R0, #+56]
   \   00000024   ........           BL       GUI_ARRAY_GetNumItems
   \   00000028   0070A0E1           MOV      R7,R0
    831            GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    832          
    833            if (Dir < 0) {
   \   00000030   000058E3           CMP      R8,#+0
   \   00000034   2200005A           BPL      ??_OnPage_0
    834              /* Check if cursor is already on top row of the page */
    835              if (Sel != ScrollStateV.v) {
   \   00000038   090056E1           CMP      R6,R9
    836                /* If not, set cursor on top row */
    837                LISTVIEW__SetSel(hObj, ScrollStateV.v);
   \   0000003C   0910A011           MOVNE    R1,R9
   \   00000040   2800001A           BNE      ??_OnPage_1
    838              } else {
    839                /* Check if current selection is >= one page size */
    840                if (Sel >= ScrollStateV.PageSize) {
   \   00000044   050056E1           CMP      R6,R5
   \   00000048   1B0000BA           BLT      ??_OnPage_2
    841                  /* Move selection one page up */
    842                  LISTVIEW__MoveSel(hObj, -ScrollStateV.PageSize);
   \   0000004C   005065E2           RSB      R5,R5,#+0
   \                     ??_OnPage_3:
   \   00000050   0060E0E3           MVN      R6,#+0
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       GUI_ALLOC_LockH
   \   0000005C   0070A0E1           MOV      R7,R0
   \   00000060   6C8097E5           LDR      R8,[R7, #+108]
   \   00000064   380097E5           LDR      R0,[R7, #+56]
   \   00000068   ........           BL       GUI_ARRAY_GetNumItems
   \   0000006C   0090A0E1           MOV      R9,R0
   \   00000070   387097E5           LDR      R7,[R7, #+56]
   \   00000074   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_OnPage_4:
   \   00000078   088095E0           ADDS     R8,R5,R8
   \   0000007C   0A00004A           BMI      ??_OnPage_5
   \   00000080   090058E1           CMP      R8,R9
   \   00000084   080000AA           BGE      ??_OnPage_5
   \   00000088   0810A0E1           MOV      R1,R8
   \   0000008C   0700A0E1           MOV      R0,R7
   \   00000090   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000094   0400D0E5           LDRB     R0,[R0, #+4]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0860A001           MOVEQ    R6,R8
   \   000000A0   ........           BL       GUI_ALLOC_UnlockH
   \   000000A4   000056E3           CMP      R6,#+0
   \   000000A8   F2FFFF4A           BMI      ??_OnPage_4
   \                     ??_OnPage_5:
   \   000000AC   000056E3           CMP      R6,#+0
   \   000000B0   0E00004A           BMI      ??_OnPage_6
   \   000000B4   0610A0E1           MOV      R1,R6
   \   000000B8   0A0000EA           B        ??_OnPage_1
    843                } else {
    844                  /* Set selection on top row */
    845                  LISTVIEW__SetSel(hObj, 0);
   \                     ??_OnPage_2:
   \   000000BC   0010A0E3           MOV      R1,#+0
   \   000000C0   080000EA           B        ??_OnPage_1
    846                }
    847              }
    848            } else {
    849              int Pos;
    850              /* Check if cursor is already on bottom row of the page */
    851              Pos = ScrollStateV.v + ScrollStateV.PageSize - 1;
   \                     ??_OnPage_0:
   \   000000C4   090085E0           ADD      R0,R5,R9
   \   000000C8   011040E2           SUB      R1,R0,#+1
    852              if (Sel != Pos) {
   \   000000CC   010056E1           CMP      R6,R1
   \   000000D0   0400001A           BNE      ??_OnPage_1
    853                /* If not, set cursor on bottom row */
    854                LISTVIEW__SetSel(hObj, Pos);
    855              } else {
    856                /* Check if current selection is <= (NumItems - PageSize - 1) */
    857                if (Sel < (NumItems - ScrollStateV.PageSize - 1)) {
   \   000000D4   050047E0           SUB      R0,R7,R5
   \   000000D8   010040E2           SUB      R0,R0,#+1
   \   000000DC   000056E1           CMP      R6,R0
   \   000000E0   DAFFFFBA           BLT      ??_OnPage_3
    858                  /* Move selection one page down */
    859                  LISTVIEW__MoveSel(hObj, ScrollStateV.PageSize);
    860                } else {
    861                  /* Set selection on bottom row */
    862                  LISTVIEW__SetSel(hObj, NumItems - 1);
   \   000000E4   011047E2           SUB      R1,R7,#+1
   \                     ??_OnPage_1:
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       LISTVIEW__SetSel
    863                }
    864              }
    865            }
    866          }
   \                     ??_OnPage_6:
   \   000000F0   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000F4   F083BDE8           POP      {R4-R9,PC}       ;; return
    867          
    868          /*********************************************************************
    869          *
    870          *       _AddKey
    871          *
    872          * Returns: 1 if Key has been consumed
    873          *          0 else 
    874          */

   \                                 In section .text, align 4, keep-with-next
    875          static int _AddKey(LISTVIEW_Handle hObj, int Key) {
   \                     _AddKey:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   30D04DE2           SUB      SP,SP,#+48
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    876            LISTVIEW_Obj * pObj;
    877            WM_SCROLL_STATE ScrollStateH;
    878            U16 ScrollStepH;
    879            int NumRows, r;
    880          
    881            pObj = LISTVIEW_LOCK_H(hObj);
   \   00000010   ........           BL       GUI_ALLOC_LockH
    882            ScrollStateH = pObj->ScrollStateH;
   \   00000014   982080E2           ADD      R2,R0,#+152
   \   00000018   0850B2E8           LDM      R2!,{R3,R12,LR}
   \   0000001C   08108DE2           ADD      R1,SP,#+8
   \   00000020   0850A1E8           STM      R1!,{R3,R12,LR}
    883            ScrollStepH  = pObj->Props.ScrollStepH;
   \   00000024   B866D0E1           LDRH     R6,[R0, #+104]
    884            NumRows      = LISTVIEW__GetNumRows(pObj);
   \   00000028   380090E5           LDR      R0,[R0, #+56]
   \   0000002C   ........           BL       GUI_ARRAY_GetNumItems
   \   00000030   0070A0E1           MOV      R7,R0
    885            GUI_UNLOCK_H(pObj);
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
    886            switch (Key) {
   \   00000038   105045E2           SUB      R5,R5,#+16
   \   0000003C   120055E3           CMP      R5,#+18
   \   00000040   05F18F90           ADDLS    PC,PC,R5, LSL #+2
   \                     ??_AddKey_0:
   \   00000044   C100008A           BHI      ??_AddKey_1
   \   00000048   920000EA           B        ??_AddKey_2
   \   0000004C   300000EA           B        ??_AddKey_3
   \   00000050   510000EA           B        ??_AddKey_4
   \   00000054   0E0000EA           B        ??_AddKey_5
   \   00000058   BC0000EA           B        ??_AddKey_1
   \   0000005C   BB0000EA           B        ??_AddKey_1
   \   00000060   BA0000EA           B        ??_AddKey_1
   \   00000064   440000EA           B        ??_AddKey_6
   \   00000068   470000EA           B        ??_AddKey_7
   \   0000006C   B70000EA           B        ??_AddKey_1
   \   00000070   B60000EA           B        ??_AddKey_1
   \   00000074   B50000EA           B        ??_AddKey_1
   \   00000078   B40000EA           B        ??_AddKey_1
   \   0000007C   B30000EA           B        ??_AddKey_1
   \   00000080   B20000EA           B        ??_AddKey_1
   \   00000084   B10000EA           B        ??_AddKey_1
   \   00000088   B00000EA           B        ??_AddKey_1
   \   0000008C   380000EA           B        ??_AddKey_8
   \   00000090   1A0000EA           B        ??_AddKey_9
    887            case GUI_KEY_DOWN:
    888              LISTVIEW__MoveSel(hObj, 1);
   \                     ??_AddKey_5:
   \   00000094   0050E0E3           MVN      R5,#+0
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       GUI_ALLOC_LockH
   \   000000A0   0060A0E1           MOV      R6,R0
   \   000000A4   6C7096E5           LDR      R7,[R6, #+108]
   \   000000A8   380096E5           LDR      R0,[R6, #+56]
   \   000000AC   ........           BL       GUI_ARRAY_GetNumItems
   \   000000B0   0080A0E1           MOV      R8,R0
   \   000000B4   386096E5           LDR      R6,[R6, #+56]
   \   000000B8   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_AddKey_10:
   \   000000BC   017097E2           ADDS     R7,R7,#+1
   \   000000C0   0A00004A           BMI      ??_AddKey_11
   \   000000C4   080057E1           CMP      R7,R8
   \   000000C8   080000AA           BGE      ??_AddKey_11
   \   000000CC   0710A0E1           MOV      R1,R7
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000000D8   0400D0E5           LDRB     R0,[R0, #+4]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0750A001           MOVEQ    R5,R7
   \   000000E4   ........           BL       GUI_ALLOC_UnlockH
   \   000000E8   000055E3           CMP      R5,#+0
   \   000000EC   F2FFFF4A           BMI      ??_AddKey_10
   \                     ??_AddKey_11:
   \   000000F0   000055E3           CMP      R5,#+0
   \   000000F4   0400004A           BMI      ??_AddKey_12
   \   000000F8   0510A0E1           MOV      R1,R5
   \   000000FC   1F0000EA           B        ??_AddKey_13
    889              return 1;               /* Key has been consumed */
    890            case GUI_KEY_PGDOWN:
    891              _OnPage(hObj, 1);
   \                     ??_AddKey_9:
   \   00000100   0110A0E3           MOV      R1,#+1
   \                     ??_AddKey_14:
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   ........           BL       _OnPage
    892              return 1;               /* Key has been consumed */
   \                     ??_AddKey_12:
   \   0000010C   0100A0E3           MOV      R0,#+1
   \   00000110   8F0000EA           B        ??_AddKey_15
    893            case GUI_KEY_UP:
    894              LISTVIEW__MoveSel(hObj, -1);
   \                     ??_AddKey_3:
   \   00000114   0050E0E3           MVN      R5,#+0
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   ........           BL       GUI_ALLOC_LockH
   \   00000120   0060A0E1           MOV      R6,R0
   \   00000124   6C7096E5           LDR      R7,[R6, #+108]
   \   00000128   380096E5           LDR      R0,[R6, #+56]
   \   0000012C   ........           BL       GUI_ARRAY_GetNumItems
   \   00000130   0080A0E1           MOV      R8,R0
   \   00000134   386096E5           LDR      R6,[R6, #+56]
   \   00000138   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_AddKey_16:
   \   0000013C   017057E2           SUBS     R7,R7,#+1
   \   00000140   EAFFFF4A           BMI      ??_AddKey_11
   \   00000144   080057E1           CMP      R7,R8
   \   00000148   E8FFFFAA           BGE      ??_AddKey_11
   \   0000014C   0710A0E1           MOV      R1,R7
   \   00000150   0600A0E1           MOV      R0,R6
   \   00000154   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000158   0400D0E5           LDRB     R0,[R0, #+4]
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   0750A001           MOVEQ    R5,R7
   \   00000164   ........           BL       GUI_ALLOC_UnlockH
   \   00000168   000055E3           CMP      R5,#+0
   \   0000016C   F2FFFF4A           BMI      ??_AddKey_16
   \   00000170   DEFFFFEA           B        ??_AddKey_11
    895              return 1;               /* Key has been consumed */
    896            case GUI_KEY_PGUP:
    897              _OnPage(hObj, -1);
   \                     ??_AddKey_8:
   \   00000174   0010E0E3           MVN      R1,#+0
   \   00000178   E1FFFFEA           B        ??_AddKey_14
    898              return 1;               /* Key has been consumed */
    899            case GUI_KEY_HOME:
    900              LISTVIEW__SetSel(hObj, 0);
   \                     ??_AddKey_6:
   \   0000017C   0010A0E3           MOV      R1,#+0
   \                     ??_AddKey_13:
   \   00000180   0400A0E1           MOV      R0,R4
   \   00000184   ........           BL       LISTVIEW__SetSel
    901              return 1;               /* Key has been consumed */
   \   00000188   DFFFFFEA           B        ??_AddKey_12
    902            case GUI_KEY_END:
    903              LISTVIEW__SetSel(hObj, NumRows - 1);
   \                     ??_AddKey_7:
   \   0000018C   011047E2           SUB      R1,R7,#+1
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   ........           BL       LISTVIEW__SetSel
    904              return 1;               /* Key has been consumed */
   \   00000198   DBFFFFEA           B        ??_AddKey_12
    905            case GUI_KEY_RIGHT:
    906              r = WM_SetScrollValue(&ScrollStateH, ScrollStateH.v + ScrollStepH);
   \                     ??_AddKey_4:
   \   0000019C   0C009DE5           LDR      R0,[SP, #+12]
   \   000001A0   001086E0           ADD      R1,R6,R0
   \   000001A4   08008DE2           ADD      R0,SP,#+8
   \   000001A8   ........           BL       WM_SetScrollValue
   \   000001AC   0050A0E1           MOV      R5,R0
    907              pObj = LISTVIEW_LOCK_H(hObj);
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   ........           BL       GUI_ALLOC_LockH
    908              pObj->ScrollStateH = ScrollStateH;
   \   000001B8   08108DE2           ADD      R1,SP,#+8
   \   000001BC   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000001C0   980080E2           ADD      R0,R0,#+152
   \   000001C4   0C10A0E8           STM      R0!,{R2,R3,R12}
    909              GUI_UNLOCK_H(pObj);
   \   000001C8   ........           BL       GUI_ALLOC_UnlockH
    910              if (r) {
   \   000001CC   000055E3           CMP      R5,#+0
   \   000001D0   CDFFFF0A           BEQ      ??_AddKey_12
    911                LISTVIEW__UpdateScrollPos(hObj);
   \   000001D4   0400A0E1           MOV      R0,R4
   \   000001D8   ........           BL       GUI_ALLOC_LockH
   \   000001DC   0050A0E1           MOV      R5,R0
   \   000001E0   6C1095E5           LDR      R1,[R5, #+108]
   \   000001E4   000051E3           CMP      R1,#+0
   \   000001E8   0200005A           BPL      ??_AddKey_17
   \   000001EC   8C0085E2           ADD      R0,R5,#+140
   \   000001F0   ........           BL       WM_CheckScrollBounds
   \   000001F4   030000EA           B        ??_AddKey_18
   \                     ??_AddKey_17:
   \   000001F8   0030A0E3           MOV      R3,#+0
   \   000001FC   0020A0E3           MOV      R2,#+0
   \   00000200   8C0085E2           ADD      R0,R5,#+140
   \   00000204   ........           BL       WM_CheckScrollPos
   \                     ??_AddKey_18:
   \   00000208   980085E2           ADD      R0,R5,#+152
   \   0000020C   ........           BL       WM_CheckScrollBounds
   \   00000210   8C1085E2           ADD      R1,R5,#+140
   \   00000214   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000218   14008DE2           ADD      R0,SP,#+20
   \   0000021C   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   00000220   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000224   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   00000228   345095E5           LDR      R5,[R5, #+52]
   \   0000022C   ........           BL       GUI_ALLOC_UnlockH
   \   00000230   20208DE2           ADD      R2,SP,#+32
   \   00000234   14108DE2           ADD      R1,SP,#+20
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   ........           BL       WIDGET__SetScrollState
   \   00000240   000055E3           CMP      R5,#+0
   \   00000244   0200000A           BEQ      ??_AddKey_19
   \   00000248   24109DE5           LDR      R1,[SP, #+36]
   \                     ??_AddKey_20:
   \   0000024C   0500A0E1           MOV      R0,R5
   \   00000250   ........           BL       HEADER_SetScrollPos
    912                LISTVIEW__InvalidateInsideArea(hObj);
   \                     ??_AddKey_19:
   \   00000254   0400A0E1           MOV      R0,R4
   \   00000258   ........           BL       GUI_ALLOC_LockH
   \   0000025C   345090E5           LDR      R5,[R0, #+52]
   \   00000260   ........           BL       GUI_ALLOC_UnlockH
   \   00000264   0500A0E1           MOV      R0,R5
   \   00000268   ........           BL       HEADER_GetHeight
   \   0000026C   0050A0E1           MOV      R5,R0
   \   00000270   0D10A0E1           MOV      R1,SP
   \   00000274   0400A0E1           MOV      R0,R4
   \   00000278   ........           BL       WM_GetInsideRectExScrollbar
   \   0000027C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000280   0D10A0E1           MOV      R1,SP
   \   00000284   000085E0           ADD      R0,R5,R0
   \   00000288   B200CDE1           STRH     R0,[SP, #+2]
   \   0000028C   0400A0E1           MOV      R0,R4
   \   00000290   ........           BL       WM_InvalidateRect
    913              }
    914              return 1;               /* Key has been consumed */
   \   00000294   9CFFFFEA           B        ??_AddKey_12
    915            case GUI_KEY_LEFT:
    916              r = WM_SetScrollValue(&ScrollStateH, ScrollStateH.v - ScrollStepH);
   \                     ??_AddKey_2:
   \   00000298   0C009DE5           LDR      R0,[SP, #+12]
   \   0000029C   061040E0           SUB      R1,R0,R6
   \   000002A0   08008DE2           ADD      R0,SP,#+8
   \   000002A4   ........           BL       WM_SetScrollValue
   \   000002A8   0050A0E1           MOV      R5,R0
    917              pObj = LISTVIEW_LOCK_H(hObj);
   \   000002AC   0400A0E1           MOV      R0,R4
   \   000002B0   ........           BL       GUI_ALLOC_LockH
    918              pObj->ScrollStateH = ScrollStateH;
   \   000002B4   08108DE2           ADD      R1,SP,#+8
   \   000002B8   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000002BC   980080E2           ADD      R0,R0,#+152
   \   000002C0   0C10A0E8           STM      R0!,{R2,R3,R12}
    919              GUI_UNLOCK_H(pObj);
   \   000002C4   ........           BL       GUI_ALLOC_UnlockH
    920              if (r) {
   \   000002C8   000055E3           CMP      R5,#+0
   \   000002CC   8EFFFF0A           BEQ      ??_AddKey_12
    921                LISTVIEW__UpdateScrollPos(hObj);
   \   000002D0   0400A0E1           MOV      R0,R4
   \   000002D4   ........           BL       GUI_ALLOC_LockH
   \   000002D8   0050A0E1           MOV      R5,R0
   \   000002DC   6C1095E5           LDR      R1,[R5, #+108]
   \   000002E0   000051E3           CMP      R1,#+0
   \   000002E4   0200005A           BPL      ??_AddKey_21
   \   000002E8   8C0085E2           ADD      R0,R5,#+140
   \   000002EC   ........           BL       WM_CheckScrollBounds
   \   000002F0   030000EA           B        ??_AddKey_22
   \                     ??_AddKey_21:
   \   000002F4   0030A0E3           MOV      R3,#+0
   \   000002F8   0020A0E3           MOV      R2,#+0
   \   000002FC   8C0085E2           ADD      R0,R5,#+140
   \   00000300   ........           BL       WM_CheckScrollPos
   \                     ??_AddKey_22:
   \   00000304   980085E2           ADD      R0,R5,#+152
   \   00000308   ........           BL       WM_CheckScrollBounds
   \   0000030C   8C1085E2           ADD      R1,R5,#+140
   \   00000310   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000314   20008DE2           ADD      R0,SP,#+32
   \   00000318   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   0000031C   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000320   14008DE2           ADD      R0,SP,#+20
   \   00000324   0C10A0E8           STM      R0!,{R2,R3,R12}
   \   00000328   345095E5           LDR      R5,[R5, #+52]
   \   0000032C   ........           BL       GUI_ALLOC_UnlockH
   \   00000330   14208DE2           ADD      R2,SP,#+20
   \   00000334   20108DE2           ADD      R1,SP,#+32
   \   00000338   0400A0E1           MOV      R0,R4
   \   0000033C   ........           BL       WIDGET__SetScrollState
   \   00000340   000055E3           CMP      R5,#+0
   \   00000344   C2FFFF0A           BEQ      ??_AddKey_19
   \   00000348   18109DE5           LDR      R1,[SP, #+24]
   \   0000034C   BEFFFFEA           B        ??_AddKey_20
    922                LISTVIEW__InvalidateInsideArea(hObj);
    923              }
    924              return 1;               /* Key has been consumed */
    925            }
    926            return 0;                 /* Key has NOT been consumed */
   \                     ??_AddKey_1:
   \   00000350   0000A0E3           MOV      R0,#+0
   \                     ??_AddKey_15:
   \   00000354   30D08DE2           ADD      SP,SP,#+48       ;; stack cleaning
   \   00000358   F081BDE8           POP      {R4-R8,PC}       ;; return
    927          }
    928          
    929          /*********************************************************************
    930          *
    931          *       Private routines
    932          *
    933          **********************************************************************
    934          */
    935          /*********************************************************************
    936          *
    937          *       LISTVIEW_LockH
    938          */
    939          #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
    940          LISTVIEW_Obj * LISTVIEW_LockH(LISTVIEW_Handle h) {
    941            LISTVIEW_Obj * p = (LISTVIEW_Obj *)GUI_LOCK_H(h);
    942            if (p) {
    943              if (p->DebugId != LISTVIEW_ID) {
    944                GUI_DEBUG_ERROROUT("LISTVIEW.c: Wrong handle type or Object not init'ed");
    945                return 0;
    946              }
    947            }
    948            return p;
    949          }
    950          #endif
    951          
    952          /*********************************************************************
    953          *
    954          *       Exported routines:  Callback
    955          *
    956          **********************************************************************
    957          */
    958          /*********************************************************************
    959          *
    960          *       LISTVIEW_Callback
    961          */

   \                                 In section .text, align 4, keep-with-next
    962          void LISTVIEW_Callback (WM_MESSAGE *pMsg) {
   \                     LISTVIEW_Callback:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
    963            HEADER_Handle hHeader;
    964            LISTVIEW_Handle hObj;
    965            LISTVIEW_Obj * pObj;
    966            WM_SCROLL_STATE ScrollState;
    967            int Key;
    968          
    969            hObj = pMsg->hWin;
   \   00000008   044096E5           LDR      R4,[R6, #+4]
   \   0000000C   24D04DE2           SUB      SP,SP,#+36
    970            /* Let widget handle the standard messages */
    971            if (WIDGET_HandleActive(hObj, pMsg) == 0) {
   \   00000010   0610A0E1           MOV      R1,R6
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       WIDGET_HandleActive
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0301000A           BEQ      ??LISTVIEW_Callback_2
    972              return;
    973            }
    974            pObj = (LISTVIEW_Obj *)GUI_LOCK_H(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_LockH
   \   0000002C   0050A0E1           MOV      R5,R0
    975            switch (pMsg->MsgId) {
   \   00000030   000096E5           LDR      R0,[R6, #+0]
   \   00000034   050040E2           SUB      R0,R0,#+5
   \   00000038   210050E3           CMP      R0,#+33
   \   0000003C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??LISTVIEW_Callback_0:
   \   00000040   F600008A           BHI      ??LISTVIEW_Callback_3
   \   00000044   200000EA           B        ??LISTVIEW_Callback_4
   \   00000048   F40000EA           B        ??LISTVIEW_Callback_3
   \   0000004C   F30000EA           B        ??LISTVIEW_Callback_3
   \   00000050   F20000EA           B        ??LISTVIEW_Callback_3
   \   00000054   F10000EA           B        ??LISTVIEW_Callback_3
   \   00000058   F00000EA           B        ??LISTVIEW_Callback_3
   \   0000005C   ED0000EA           B        ??LISTVIEW_Callback_5
   \   00000060   C50000EA           B        ??LISTVIEW_Callback_6
   \   00000064   ED0000EA           B        ??LISTVIEW_Callback_3
   \   00000068   DE0000EA           B        ??LISTVIEW_Callback_7
   \   0000006C   BD0000EA           B        ??LISTVIEW_Callback_8
   \   00000070   EA0000EA           B        ??LISTVIEW_Callback_3
   \   00000074   E90000EA           B        ??LISTVIEW_Callback_3
   \   00000078   E80000EA           B        ??LISTVIEW_Callback_3
   \   0000007C   E70000EA           B        ??LISTVIEW_Callback_3
   \   00000080   E60000EA           B        ??LISTVIEW_Callback_3
   \   00000084   E50000EA           B        ??LISTVIEW_Callback_3
   \   00000088   E40000EA           B        ??LISTVIEW_Callback_3
   \   0000008C   E30000EA           B        ??LISTVIEW_Callback_3
   \   00000090   E20000EA           B        ??LISTVIEW_Callback_3
   \   00000094   E10000EA           B        ??LISTVIEW_Callback_3
   \   00000098   E00000EA           B        ??LISTVIEW_Callback_3
   \   0000009C   DF0000EA           B        ??LISTVIEW_Callback_3
   \   000000A0   DE0000EA           B        ??LISTVIEW_Callback_3
   \   000000A4   DD0000EA           B        ??LISTVIEW_Callback_3
   \   000000A8   DC0000EA           B        ??LISTVIEW_Callback_3
   \   000000AC   DB0000EA           B        ??LISTVIEW_Callback_3
   \   000000B0   DA0000EA           B        ??LISTVIEW_Callback_3
   \   000000B4   D90000EA           B        ??LISTVIEW_Callback_3
   \   000000B8   D80000EA           B        ??LISTVIEW_Callback_3
   \   000000BC   D70000EA           B        ??LISTVIEW_Callback_3
   \   000000C0   D60000EA           B        ??LISTVIEW_Callback_3
   \   000000C4   000000EA           B        ??LISTVIEW_Callback_4
   \   000000C8   090000EA           B        ??LISTVIEW_Callback_9
    976            case WM_NOTIFY_CLIENTCHANGE:
    977            case WM_SIZE:
    978              hHeader = pObj->hHeader;
   \                     ??LISTVIEW_Callback_4:
   \   000000CC   347095E5           LDR      R7,[R5, #+52]
    979              GUI_UNLOCK_H(pObj);
   \   000000D0   ........           BL       GUI_ALLOC_UnlockH
    980              if (pMsg->hWinSrc && (pMsg->hWinSrc == hHeader)) {
   \   000000D4   080096E5           LDR      R0,[R6, #+8]
   \   000000D8   000050E3           CMP      R0,#+0
   \   000000DC   D400000A           BEQ      ??LISTVIEW_Callback_2
   \   000000E0   070050E1           CMP      R0,R7
   \   000000E4   D200001A           BNE      ??LISTVIEW_Callback_2
    981                LISTVIEW__UpdateScrollParas(hObj);
   \                     ??LISTVIEW_Callback_10:
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       LISTVIEW__UpdateScrollParas
   \   000000F0   CF0000EA           B        ??LISTVIEW_Callback_2
    982              }
    983              return;
    984            case WM_NOTIFY_PARENT:
    985              switch (pMsg->Data.v) {
   \                     ??LISTVIEW_Callback_9:
   \   000000F4   0C0096E5           LDR      R0,[R6, #+12]
   \   000000F8   020040E2           SUB      R0,R0,#+2
   \   000000FC   050050E3           CMP      R0,#+5
   \   00000100   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??LISTVIEW_Callback_1:
   \   00000104   9500008A           BHI      ??LISTVIEW_Callback_11
   \   00000108   5D0000EA           B        ??LISTVIEW_Callback_12
   \   0000010C   930000EA           B        ??LISTVIEW_Callback_11
   \   00000110   920000EA           B        ??LISTVIEW_Callback_11
   \   00000114   080000EA           B        ??LISTVIEW_Callback_13
   \   00000118   570000EA           B        ??LISTVIEW_Callback_14
   \   0000011C   FFFFFFEA           B        ??LISTVIEW_Callback_15
    986              case WM_NOTIFICATION_CHILD_DELETED:
    987                /* make sure we do not send any messages to the header child once it has been deleted */
    988                if (pMsg->hWinSrc == pObj->hHeader) {
   \                     ??LISTVIEW_Callback_15:
   \   00000120   080096E5           LDR      R0,[R6, #+8]
   \   00000124   341095E5           LDR      R1,[R5, #+52]
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   8B00001A           BNE      ??LISTVIEW_Callback_11
    989                  pObj->hHeader = 0;
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   340085E5           STR      R0,[R5, #+52]
   \   00000138   880000EA           B        ??LISTVIEW_Callback_11
    990                }
    991                break;
    992              case WM_NOTIFICATION_VALUE_CHANGED:
    993                if (pMsg->hWinSrc == WM_GetScrollbarV(hObj)) {
   \                     ??LISTVIEW_Callback_13:
   \   0000013C   0400A0E1           MOV      R0,R4
   \   00000140   ........           BL       WM_GetScrollbarV
   \   00000144   082096E5           LDR      R2,[R6, #+8]
   \   00000148   000052E1           CMP      R2,R0
   \   0000014C   2700001A           BNE      ??LISTVIEW_Callback_16
    994                  WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
   \   00000150   18108DE2           ADD      R1,SP,#+24
   \   00000154   0200A0E1           MOV      R0,R2
   \   00000158   ........           BL       WM_GetScrollState
    995                  pObj->ScrollStateV.v = ScrollState.v;
   \   0000015C   1C009DE5           LDR      R0,[SP, #+28]
   \   00000160   900085E5           STR      R0,[R5, #+144]
    996                  LISTVIEW__InvalidateInsideArea(hObj);
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   ........           BL       GUI_ALLOC_LockH
   \   0000016C   345090E5           LDR      R5,[R0, #+52]
   \   00000170   ........           BL       GUI_ALLOC_UnlockH
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   ........           BL       HEADER_GetHeight
   \   0000017C   0050A0E1           MOV      R5,R0
   \   00000180   0D10A0E1           MOV      R1,SP
   \   00000184   0400A0E1           MOV      R0,R4
   \   00000188   ........           BL       WM_GetInsideRectExScrollbar
   \   0000018C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000190   0D10A0E1           MOV      R1,SP
   \   00000194   000085E0           ADD      R0,R5,R0
   \   00000198   B200CDE1           STRH     R0,[SP, #+2]
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   ........           BL       WM_InvalidateRect
    997                  GUI_UNLOCK_H(pObj);
   \   000001A4   ........           BL       GUI_ALLOC_UnlockH
    998                  _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
   \   000001A8   08008DE2           ADD      R0,SP,#+8
   \   000001AC   0010A0E3           MOV      R1,#+0
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   0030A0E3           MOV      R3,#+0
   \   000001B8   00C0A0E3           MOV      R12,#+0
   \   000001BC   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   000001C0   0400A0E1           MOV      R0,R4
   \   000001C4   ........           BL       WM_GetParent
   \   000001C8   2620A0E3           MOV      R2,#+38
   \   000001CC   08208DE5           STR      R2,[SP, #+8]
   \   000001D0   0A20A0E3           MOV      R2,#+10
   \   000001D4   14208DE5           STR      R2,[SP, #+20]
   \   000001D8   10408DE5           STR      R4,[SP, #+16]
   \   000001DC   08108DE2           ADD      R1,SP,#+8
   \   000001E0   ........           BL       WM__SendMessage
    999                  pObj = LISTVIEW_LOCK_H(hObj);
   \   000001E4   0400A0E1           MOV      R0,R4
   \   000001E8   ........           BL       GUI_ALLOC_LockH
   \   000001EC   5B0000EA           B        ??LISTVIEW_Callback_11
   1000                } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
   \                     ??LISTVIEW_Callback_16:
   \   000001F0   0400A0E1           MOV      R0,R4
   \   000001F4   ........           BL       WM_GetScrollbarH
   \   000001F8   0010A0E1           MOV      R1,R0
   \   000001FC   080096E5           LDR      R0,[R6, #+8]
   \   00000200   010050E1           CMP      R0,R1
   \   00000204   5500001A           BNE      ??LISTVIEW_Callback_11
   1001                  hHeader = pObj->hHeader;
   1002                  ScrollState.v = pObj->ScrollStateH.v;
   \   00000208   9C2095E5           LDR      R2,[R5, #+156]
   \   0000020C   347095E5           LDR      R7,[R5, #+52]
   \   00000210   1C208DE5           STR      R2,[SP, #+28]
   1003                  WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
   \   00000214   18108DE2           ADD      R1,SP,#+24
   \   00000218   ........           BL       WM_GetScrollState
   1004                  pObj->ScrollStateH.v = ScrollState.v;
   \   0000021C   1C009DE5           LDR      R0,[SP, #+28]
   \   00000220   9C0085E5           STR      R0,[R5, #+156]
   1005                  GUI_UNLOCK_H(pObj);
   \   00000224   ........           BL       GUI_ALLOC_UnlockH
   1006                  LISTVIEW__UpdateScrollParas(hObj);
   \   00000228   0400A0E1           MOV      R0,R4
   \   0000022C   ........           BL       LISTVIEW__UpdateScrollParas
   1007                  HEADER_SetScrollPos(hHeader, ScrollState.v);
   \   00000230   1C109DE5           LDR      R1,[SP, #+28]
   \   00000234   0700A0E1           MOV      R0,R7
   \   00000238   ........           BL       HEADER_SetScrollPos
   1008                  _NotifyOwner(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
   \   0000023C   08008DE2           ADD      R0,SP,#+8
   \   00000240   0010A0E3           MOV      R1,#+0
   \   00000244   0020A0E3           MOV      R2,#+0
   \   00000248   0030A0E3           MOV      R3,#+0
   \   0000024C   00C0A0E3           MOV      R12,#+0
   \   00000250   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   00000254   0400A0E1           MOV      R0,R4
   \   00000258   ........           BL       WM_GetParent
   \   0000025C   2620A0E3           MOV      R2,#+38
   \   00000260   08208DE5           STR      R2,[SP, #+8]
   \   00000264   0A20A0E3           MOV      R2,#+10
   \   00000268   14208DE5           STR      R2,[SP, #+20]
   \                     ??LISTVIEW_Callback_17:
   \   0000026C   10408DE5           STR      R4,[SP, #+16]
   \   00000270   08108DE2           ADD      R1,SP,#+8
   \   00000274   ........           BL       WM__SendMessage
   1009                  return;
   \   00000278   6D0000EA           B        ??LISTVIEW_Callback_2
   1010                }
   1011                break;
   1012              case WM_NOTIFICATION_SCROLLBAR_ADDED:
   1013                #if WIDGET_USE_PARENT_EFFECT
   1014                  WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
   1015                #endif
   1016                GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_Callback_14:
   \   0000027C   ........           BL       GUI_ALLOC_UnlockH
   1017                LISTVIEW__UpdateScrollParas(hObj);
   \   00000280   98FFFFEA           B        ??LISTVIEW_Callback_10
   1018                return;
   1019              case WM_NOTIFICATION_RELEASED:
   1020                if ((pMsg->hWinSrc == pObj->hHeader) && (pObj->hSort)) {
   \                     ??LISTVIEW_Callback_12:
   \   00000284   080096E5           LDR      R0,[R6, #+8]
   \   00000288   341095E5           LDR      R1,[R5, #+52]
   \   0000028C   010050E1           CMP      R0,R1
   \   00000290   3200001A           BNE      ??LISTVIEW_Callback_11
   \   00000294   A40095E5           LDR      R0,[R5, #+164]
   \   00000298   000050E3           CMP      R0,#+0
   \   0000029C   2F00000A           BEQ      ??LISTVIEW_Callback_11
   1021                  int Column;
   1022                  LISTVIEW_SORT * pSort;
   1023                  LISTVIEW_COLUMN * pColumn;
   1024                  WM_SetFocus(hObj);
   \   000002A0   0400A0E1           MOV      R0,R4
   \   000002A4   ........           BL       WM_SetFocus
   1025                  Column = HEADER_GetSel(pObj->hHeader);
   \   000002A8   340095E5           LDR      R0,[R5, #+52]
   \   000002AC   ........           BL       HEADER_GetSel
   \   000002B0   0060B0E1           MOVS     R6,R0
   1026                  if (Column >= 0) {
   \   000002B4   2900004A           BMI      ??LISTVIEW_Callback_11
   1027                    pColumn = (LISTVIEW_COLUMN *)GUI_ARRAY_GetpItemLocked(pObj->ColumnArray, Column);
   1028                    if (pColumn->fpCompare) {
   \   000002B8   0610A0E1           MOV      R1,R6
   \   000002BC   3C0095E5           LDR      R0,[R5, #+60]
   \   000002C0   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000002C4   040090E5           LDR      R0,[R0, #+4]
   \   000002C8   000050E3           CMP      R0,#+0
   \   000002CC   2200000A           BEQ      ??LISTVIEW_Callback_18
   1029                      pSort = (LISTVIEW_SORT *)GUI_LOCK_H(pObj->hSort);
   \   000002D0   A40095E5           LDR      R0,[R5, #+164]
   \   000002D4   ........           BL       GUI_ALLOC_LockH
   1030                      if (pSort) {
   \   000002D8   000050E3           CMP      R0,#+0
   \   000002DC   1D00000A           BEQ      ??LISTVIEW_Callback_19
   1031                        if (pObj->SortIndex == Column) {
   \   000002E0   742095E5           LDR      R2,[R5, #+116]
   \   000002E4   0010A0E3           MOV      R1,#+0
   \   000002E8   060052E1           CMP      R2,R6
   \   000002EC   0600001A           BNE      ??LISTVIEW_Callback_20
   1032                          pSort->Reverse   ^= 1;
   \   000002F0   1020D0E5           LDRB     R2,[R0, #+16]
   \   000002F4   012022E2           EOR      R2,R2,#0x1
   \   000002F8   1020C0E5           STRB     R2,[R0, #+16]
   1033                          pObj->ReverseSort = 1;
   \   000002FC   0100A0E3           MOV      R0,#+1
   \   00000300   AA00C5E5           STRB     R0,[R5, #+170]
   1034                          pObj->IsSorted    = 0;
   \   00000304   A810C5E5           STRB     R1,[R5, #+168]
   \   00000308   020000EA           B        ??LISTVIEW_Callback_21
   1035                        } else {
   1036                          pSort->Reverse    = 0;
   \                     ??LISTVIEW_Callback_20:
   \   0000030C   1010C0E5           STRB     R1,[R0, #+16]
   1037                          pObj->SortIndex   = Column;
   \   00000310   746085E5           STR      R6,[R5, #+116]
   1038                          pObj->IsPresorted = 0;
   \   00000314   A910C5E5           STRB     R1,[R5, #+169]
   1039                        }
   1040                        LISTVIEW__InvalidateInsideArea(hObj);
   \                     ??LISTVIEW_Callback_21:
   \   00000318   0400A0E1           MOV      R0,R4
   \   0000031C   ........           BL       GUI_ALLOC_LockH
   \   00000320   345090E5           LDR      R5,[R0, #+52]
   \   00000324   ........           BL       GUI_ALLOC_UnlockH
   \   00000328   0500A0E1           MOV      R0,R5
   \   0000032C   ........           BL       HEADER_GetHeight
   \   00000330   0050A0E1           MOV      R5,R0
   \   00000334   0D10A0E1           MOV      R1,SP
   \   00000338   0400A0E1           MOV      R0,R4
   \   0000033C   ........           BL       WM_GetInsideRectExScrollbar
   \   00000340   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000344   0D10A0E1           MOV      R1,SP
   \   00000348   000085E0           ADD      R0,R5,R0
   \   0000034C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000350   0400A0E1           MOV      R0,R4
   \   00000354   ........           BL       WM_InvalidateRect
   1041                      }
   1042                      GUI_UNLOCK_H(pSort);
   \                     ??LISTVIEW_Callback_19:
   \   00000358   ........           BL       GUI_ALLOC_UnlockH
   1043                    }
   1044                    GUI_UNLOCK_H(pColumn);
   \                     ??LISTVIEW_Callback_18:
   \   0000035C   ........           BL       GUI_ALLOC_UnlockH
   1045                  }
   1046                }
   1047                break;
   1048              }
   1049              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_Callback_11:
   \   00000360   ........           BL       GUI_ALLOC_UnlockH
   1050              return;
   \   00000364   320000EA           B        ??LISTVIEW_Callback_2
   1051            case WM_PAINT:
   1052              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_Callback_8:
   \   00000368   ........           BL       GUI_ALLOC_UnlockH
   1053              _Paint(hObj, pMsg);
   \   0000036C   0610A0E1           MOV      R1,R6
   \   00000370   0400A0E1           MOV      R0,R4
   \   00000374   ........           BL       _Paint
   1054              return;
   \   00000378   2D0000EA           B        ??LISTVIEW_Callback_2
   1055            case WM_TOUCH:
   1056              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_Callback_6:
   \   0000037C   ........           BL       GUI_ALLOC_UnlockH
   1057              _OnTouch(hObj, pMsg);
   \   00000380   0C1096E5           LDR      R1,[R6, #+12]
   \   00000384   000051E3           CMP      R1,#+0
   \   00000388   0350A003           MOVEQ    R5,#+3
   \   0000038C   0900000A           BEQ      ??LISTVIEW_Callback_22
   \   00000390   0800D1E5           LDRB     R0,[R1, #+8]
   \   00000394   000050E3           CMP      R0,#+0
   \   00000398   0500000A           BEQ      ??LISTVIEW_Callback_23
   \   0000039C   0400A0E1           MOV      R0,R4
   \   000003A0   ........           BL       _SetSelFromPos
   \   000003A4   0150A0E3           MOV      R5,#+1
   \   000003A8   0400A0E1           MOV      R0,R4
   \   000003AC   ........           BL       WM_SetFocus
   \   000003B0   000000EA           B        ??LISTVIEW_Callback_22
   \                     ??LISTVIEW_Callback_23:
   \   000003B4   0250A0E3           MOV      R5,#+2
   \                     ??LISTVIEW_Callback_22:
   \   000003B8   08008DE2           ADD      R0,SP,#+8
   \   000003BC   0010A0E3           MOV      R1,#+0
   \   000003C0   0020A0E3           MOV      R2,#+0
   \   000003C4   0030A0E3           MOV      R3,#+0
   \   000003C8   00C0A0E3           MOV      R12,#+0
   \   000003CC   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   000003D0   0400A0E1           MOV      R0,R4
   \   000003D4   ........           BL       WM_GetParent
   \   000003D8   2620A0E3           MOV      R2,#+38
   \   000003DC   08208DE5           STR      R2,[SP, #+8]
   \   000003E0   14508DE5           STR      R5,[SP, #+20]
   \   000003E4   A0FFFFEA           B        ??LISTVIEW_Callback_17
   1058              return;        /* Important: message handled ! */
   1059            case WM_KEY:
   1060              if (((const WM_KEY_INFO*)(pMsg->Data.p))->PressedCnt > 0) {
   \                     ??LISTVIEW_Callback_7:
   \   000003E8   0C0096E5           LDR      R0,[R6, #+12]
   \   000003EC   041090E5           LDR      R1,[R0, #+4]
   \   000003F0   010051E3           CMP      R1,#+1
   \   000003F4   090000BA           BLT      ??LISTVIEW_Callback_3
   1061                Key = ((const WM_KEY_INFO*)(pMsg->Data.p))->Key;
   \   000003F8   005090E5           LDR      R5,[R0, #+0]
   1062                GUI_UNLOCK_H(pObj);
   \   000003FC   ........           BL       GUI_ALLOC_UnlockH
   1063                if (_AddKey(hObj, Key)) {
   \   00000400   0510A0E1           MOV      R1,R5
   \   00000404   0400A0E1           MOV      R0,R4
   \   00000408   ........           BL       _AddKey
   \   0000040C   000050E3           CMP      R0,#+0
   \   00000410   0700001A           BNE      ??LISTVIEW_Callback_2
   \   00000414   040000EA           B        ??LISTVIEW_Callback_24
   1064                  return;
   1065                }
   1066              }
   1067              break;  /* No return here ... WM_DefaultProc needs to be called */
   1068            case WM_DELETE:
   1069              _FreeAttached(pObj);
   \                     ??LISTVIEW_Callback_5:
   \   00000418   0500A0E1           MOV      R0,R5
   \   0000041C   ........           BL       _FreeAttached
   1070              break;  /* No return here ... WM_DefaultProc needs to be called */
   1071            }
   1072            if (pObj) {
   \                     ??LISTVIEW_Callback_3:
   \   00000420   000055E3           CMP      R5,#+0
   \   00000424   0000000A           BEQ      ??LISTVIEW_Callback_24
   1073              GUI_UNLOCK_H(pObj);
   \   00000428   ........           BL       GUI_ALLOC_UnlockH
   1074            }
   1075            WM_DefaultProc(pMsg);
   \                     ??LISTVIEW_Callback_24:
   \   0000042C   0600A0E1           MOV      R0,R6
   \   00000430   ........           BL       WM_DefaultProc
   1076          }
   \                     ??LISTVIEW_Callback_2:
   \   00000434   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000438   F080BDE8           POP      {R4-R7,PC}       ;; return
   1077          
   1078          /*********************************************************************
   1079          *
   1080          *       Exported routines:  Create
   1081          *
   1082          **********************************************************************
   1083          */
   1084          
   1085          /* Note: the parameters to a create function may vary.
   1086                   Some widgets may have multiple create functions */
   1087          
   1088          /*********************************************************************
   1089          *
   1090          *       LISTVIEW_CreateEx
   1091          */

   \                                 In section .text, align 4, keep-with-next
   1092          LISTVIEW_Handle LISTVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
   1093                                            int WinFlags, int ExFlags, int Id)
   1094          {
   \                     LISTVIEW_CreateEx:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0380A0E1           MOV      R8,R3
   \   00000018   30909DE5           LDR      R9,[SP, #+48]
   \   0000001C   34A09DE5           LDR      R10,[SP, #+52]
   \   00000020   3C409DE5           LDR      R4,[SP, #+60]
   1095            LISTVIEW_Handle hObj;
   1096            GUI_USE_PARA(ExFlags);
   1097            WM_LOCK();
   \   00000024   ........           BL       GUI_Lock
   1098            /* Create the window */
   1099            if ((xsize == 0) && (ysize == 0) && (x0 == 0) && (y0 == 0)) {
   \   00000028   070088E1           ORR      R0,R8,R7
   \   0000002C   000085E1           ORR      R0,R5,R0
   \   00000030   000096E1           ORRS     R0,R6,R0
   \   00000034   0A00001A           BNE      ??LISTVIEW_CreateEx_0
   1100              GUI_RECT Rect;
   1101              WM_GetClientRectEx(hParent, &Rect);
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   0900A0E1           MOV      R0,R9
   \   00000040   ........           BL       WM_GetClientRectEx
   1102              xsize = Rect.x1 - Rect.x0 + 1;
   \   00000044   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000048   F010DDE1           LDRSH    R1,[SP, #+0]
   \   0000004C   010040E0           SUB      R0,R0,R1
   \   00000050   017080E2           ADD      R7,R0,#+1
   1103              ysize = Rect.y1 - Rect.y0 + 1;
   \   00000054   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000058   F210DDE1           LDRSH    R1,[SP, #+2]
   \   0000005C   010040E0           SUB      R0,R0,R1
   \   00000060   018080E2           ADD      R8,R0,#+1
   1104            }
   1105            hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, &LISTVIEW_Callback,
   1106                                          sizeof(LISTVIEW_Obj) - sizeof(WM_Obj));
   \                     ??LISTVIEW_CreateEx_0:
   \   00000064   8000A0E3           MOV      R0,#+128
   \   00000068   0C008DE5           STR      R0,[SP, #+12]
   \   0000006C   ........           LDR      R0,??DataTable3_1
   \   00000070   04A08DE5           STR      R10,[SP, #+4]
   \   00000074   08008DE5           STR      R0,[SP, #+8]
   \   00000078   00908DE5           STR      R9,[SP, #+0]
   \   0000007C   0830A0E1           MOV      R3,R8
   \   00000080   0720A0E1           MOV      R2,R7
   \   00000084   0610A0E1           MOV      R1,R6
   \   00000088   0500A0E1           MOV      R0,R5
   \   0000008C   ........           BL       WM_CreateWindowAsChild
   \   00000090   0050B0E1           MOVS     R5,R0
   1107            if (hObj) {
   \   00000094   2D00000A           BEQ      ??LISTVIEW_CreateEx_1
   1108              GUI_ARRAY RowArray;
   1109              GUI_ARRAY ColumnArray;
   1110              HEADER_Handle hHeader;
   1111              LISTVIEW_Obj * pObj;
   1112              /* Init sub-classes */
   1113              RowArray    = GUI_ARRAY_Create();
   \   00000098   ........           BL       GUI_ARRAY_Create
   \   0000009C   0070A0E1           MOV      R7,R0
   1114              ColumnArray = GUI_ARRAY_Create();
   \   000000A0   ........           BL       GUI_ARRAY_Create
   \   000000A4   0080A0E1           MOV      R8,R0
   1115              pObj = (LISTVIEW_Obj *)GUI_LOCK_H(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           BL       GUI_ALLOC_LockH
   \   000000B0   0060A0E1           MOV      R6,R0
   1116              pObj->RowArray    = RowArray;
   \   000000B4   387086E5           STR      R7,[R6, #+56]
   1117              pObj->ColumnArray = ColumnArray;
   \   000000B8   3C8086E5           STR      R8,[R6, #+60]
   1118              /* Init widget specific variables */
   1119              WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
   \   000000BC   1020A0E3           MOV      R2,#+16
   \   000000C0   0410A0E1           MOV      R1,R4
   \   000000C4   ........           BL       WIDGET__Init
   1120              /* Init member variables */
   1121              LISTVIEW_INIT_ID(pObj);
   1122              pObj->Props     = LISTVIEW_DefaultProps;
   \   000000C8   ........           LDR      R1,??DataTable3_2
   \   000000CC   400086E2           ADD      R0,R6,#+64
   \   000000D0   9C50B1E8           LDM      R1!,{R2-R4,R7,R12,LR}
   \   000000D4   9C50A0E8           STM      R0!,{R2-R4,R7,R12,LR}
   \   000000D8   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   000000DC   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
   1123              pObj->ShowGrid  = 0;
   \   000000E0   0000A0E3           MOV      R0,#+0
   \   000000E4   700086E5           STR      R0,[R6, #+112]
   1124              pObj->RowDistY  = 0;
   \   000000E8   780086E5           STR      R0,[R6, #+120]
   1125              pObj->Sel       = -1;
   \   000000EC   0010E0E1           MVN      R1,R0
   \   000000F0   6C1086E5           STR      R1,[R6, #+108]
   1126              pObj->LBorder   = 1;
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   7C1086E5           STR      R1,[R6, #+124]
   1127              pObj->RBorder   = 1;
   \   000000FC   801086E5           STR      R1,[R6, #+128]
   1128          	pObj->LFreeBorder = 0;		// KMC
   \   00000100   840086E5           STR      R0,[R6, #+132]
   1129              GUI_UNLOCK_H(pObj);
   \   00000104   ........           BL       GUI_ALLOC_UnlockH
   1130              hHeader         = HEADER_CreateEx(0, 0, 0, 0, hObj, WM_CF_SHOW, 0, 0);
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   0C008DE5           STR      R0,[SP, #+12]
   \   00000110   08008DE5           STR      R0,[SP, #+8]
   \   00000114   0200A0E3           MOV      R0,#+2
   \   00000118   04008DE5           STR      R0,[SP, #+4]
   \   0000011C   00508DE5           STR      R5,[SP, #+0]
   \   00000120   0030A0E3           MOV      R3,#+0
   \   00000124   0020A0E3           MOV      R2,#+0
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   ........           BL       HEADER_CreateEx
   \   00000134   0040A0E1           MOV      R4,R0
   1131              pObj = LISTVIEW_LOCK_H(hObj);
   1132              pObj->hHeader   = hHeader;
   \   00000138   0500A0E1           MOV      R0,R5
   \   0000013C   ........           BL       GUI_ALLOC_LockH
   \   00000140   344080E5           STR      R4,[R0, #+52]
   1133              GUI_UNLOCK_H(pObj);
   \   00000144   ........           BL       GUI_ALLOC_UnlockH
   1134              LISTVIEW__UpdateScrollParas(hObj);
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           BL       LISTVIEW__UpdateScrollParas
   1135            } else {
   1136              GUI_DEBUG_ERROROUT_IF(hObj==0, "LISTVIEW_Create failed")
   1137            }
   1138            WM_UNLOCK();
   \                     ??LISTVIEW_CreateEx_1:
   \   00000150   ........           BL       GUI_Unlock
   1139            return hObj;
   \   00000154   0500A0E1           MOV      R0,R5
   \   00000158   10D08DE2           ADD      SP,SP,#+16
   \   0000015C   F087BDE8           POP      {R4-R10,PC}      ;; return
   1140          }
   1141          
   1142          /*********************************************************************
   1143          *
   1144          *       Exported routines: Member functions
   1145          *
   1146          **********************************************************************
   1147          */
   1148          /*********************************************************************
   1149          *
   1150          *       LISTVIEW_IncSel
   1151          */

   \                                 In section .text, align 4, keep-with-next
   1152          void LISTVIEW_IncSel(LISTVIEW_Handle hObj) {
   \                     LISTVIEW_IncSel:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   1153            if (hObj) {
   \   00000008   1D00000A           BEQ      ??LISTVIEW_IncSel_0
   1154              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
   1155              LISTVIEW__MoveSel(hObj, 1);
   \   00000010   0050E0E3           MVN      R5,#+0
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   6C7096E5           LDR      R7,[R6, #+108]
   \   00000024   380096E5           LDR      R0,[R6, #+56]
   \   00000028   ........           BL       GUI_ARRAY_GetNumItems
   \   0000002C   0080A0E1           MOV      R8,R0
   \   00000030   386096E5           LDR      R6,[R6, #+56]
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
   \                     ??LISTVIEW_IncSel_1:
   \   00000038   017097E2           ADDS     R7,R7,#+1
   \   0000003C   0A00004A           BMI      ??LISTVIEW_IncSel_2
   \   00000040   080057E1           CMP      R7,R8
   \   00000044   080000AA           BGE      ??LISTVIEW_IncSel_2
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000054   0400D0E5           LDRB     R0,[R0, #+4]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0750A001           MOVEQ    R5,R7
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
   \   00000064   000055E3           CMP      R5,#+0
   \   00000068   F2FFFF4A           BMI      ??LISTVIEW_IncSel_1
   \                     ??LISTVIEW_IncSel_2:
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   0200004A           BMI      ??LISTVIEW_IncSel_3
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       LISTVIEW__SetSel
   1156              WM_UNLOCK();
   \                     ??LISTVIEW_IncSel_3:
   \   00000080   ........           BL       GUI_Unlock
   1157            }
   1158          }
   \                     ??LISTVIEW_IncSel_0:
   \   00000084   F081BDE8           POP      {R4-R8,PC}       ;; return
   1159          
   1160          /*********************************************************************
   1161          *
   1162          *       LISTVIEW_DecSel
   1163          */

   \                                 In section .text, align 4, keep-with-next
   1164          void LISTVIEW_DecSel(LISTVIEW_Handle hObj) {
   \                     LISTVIEW_DecSel:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   1165            if (hObj) {
   \   00000008   1D00000A           BEQ      ??LISTVIEW_DecSel_0
   1166              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
   1167              LISTVIEW__MoveSel(hObj, -1);
   \   00000010   0050E0E3           MVN      R5,#+0
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   6C7096E5           LDR      R7,[R6, #+108]
   \   00000024   380096E5           LDR      R0,[R6, #+56]
   \   00000028   ........           BL       GUI_ARRAY_GetNumItems
   \   0000002C   0080A0E1           MOV      R8,R0
   \   00000030   386096E5           LDR      R6,[R6, #+56]
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
   \                     ??LISTVIEW_DecSel_1:
   \   00000038   017057E2           SUBS     R7,R7,#+1
   \   0000003C   0A00004A           BMI      ??LISTVIEW_DecSel_2
   \   00000040   080057E1           CMP      R7,R8
   \   00000044   080000AA           BGE      ??LISTVIEW_DecSel_2
   \   00000048   0710A0E1           MOV      R1,R7
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000054   0400D0E5           LDRB     R0,[R0, #+4]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0750A001           MOVEQ    R5,R7
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
   \   00000064   000055E3           CMP      R5,#+0
   \   00000068   F2FFFF4A           BMI      ??LISTVIEW_DecSel_1
   \                     ??LISTVIEW_DecSel_2:
   \   0000006C   000055E3           CMP      R5,#+0
   \   00000070   0200004A           BMI      ??LISTVIEW_DecSel_3
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       LISTVIEW__SetSel
   1168              WM_UNLOCK();
   \                     ??LISTVIEW_DecSel_3:
   \   00000080   ........           BL       GUI_Unlock
   1169            }
   1170          }
   \                     ??LISTVIEW_DecSel_0:
   \   00000084   F081BDE8           POP      {R4-R8,PC}       ;; return
   1171          
   1172          /*********************************************************************
   1173          *
   1174          *       LISTVIEW_AddColumn
   1175          */

   \                                 In section .text, align 4, keep-with-next
   1176          int LISTVIEW_AddColumn(LISTVIEW_Handle hObj, int Width, const char * s, int Align) {
   \                     LISTVIEW_AddColumn:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   06002DE9           PUSH     {R1,R2}
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   14D04DE2           SUB      SP,SP,#+20
   \   00000014   0360A0E1           MOV      R6,R3
   1177            int r = 0;
   \   00000018   0070A0E3           MOV      R7,#+0
   1178            if (hObj) {
   \   0000001C   000055E3           CMP      R5,#+0
   \   00000020   4000000A           BEQ      ??LISTVIEW_AddColumn_0
   1179              LISTVIEW_Obj * pObj;
   1180              LISTVIEW_COLUMN Column = {0};
   \   00000024   ........           ADR      R1,`?<Constant {0}>_1`
   \   00000028   002091E5           LDR      R2,[R1, #+0]
   \   0000002C   043091E5           LDR      R3,[R1, #+4]
   \   00000030   08008DE2           ADD      R0,SP,#+8
   \   00000034   0C0080E8           STM      R0,{R2,R3}
   1181              HEADER_Handle hHeader;
   1182              unsigned NumRows;
   1183              GUI_ARRAY ColumnArray;
   1184              GUI_ARRAY RowArray;
   1185              GUI_ARRAY CellArray;
   1186          
   1187              WM_LOCK();
   \   00000038   ........           BL       GUI_Lock
   1188              pObj = LISTVIEW_LOCK_H(hObj);
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           BL       GUI_ALLOC_LockH
   1189              hHeader     = pObj->hHeader;
   \   00000044   348090E5           LDR      R8,[R0, #+52]
   1190              ColumnArray = pObj->ColumnArray;
   \   00000048   3C9090E5           LDR      R9,[R0, #+60]
   1191              RowArray    = pObj->RowArray;
   \   0000004C   380090E5           LDR      R0,[R0, #+56]
   \   00000050   0040A0E1           MOV      R4,R0
   1192              NumRows     = LISTVIEW__GetNumRows(pObj);
   \   00000054   ........           BL       GUI_ARRAY_GetNumItems
   \   00000058   00A0A0E1           MOV      R10,R0
   1193              GUI_UNLOCK_H(pObj);
   \   0000005C   ........           BL       GUI_ALLOC_UnlockH
   1194              HEADER_AddItem(hHeader, Width, s, Align);
   \   00000060   0630A0E1           MOV      R3,R6
   \   00000064   18209DE5           LDR      R2,[SP, #+24]
   \   00000068   14109DE5           LDR      R1,[SP, #+20]
   \   0000006C   0800A0E1           MOV      R0,R8
   \   00000070   ........           BL       HEADER_AddItem
   1195              Column.Align = Align;
   \   00000074   0860CDE5           STRB     R6,[SP, #+8]
   1196              GUI_ARRAY_AddItem(ColumnArray, &Column, sizeof(LISTVIEW_COLUMN));
   \   00000078   0820A0E3           MOV      R2,#+8
   \   0000007C   08108DE2           ADD      R1,SP,#+8
   \   00000080   0900A0E1           MOV      R0,R9
   \   00000084   ........           BL       GUI_ARRAY_AddItem
   1197              if (NumRows) {
   \   00000088   00005AE3           CMP      R10,#+0
   \   0000008C   0F00000A           BEQ      ??LISTVIEW_AddColumn_1
   1198                LISTVIEW_ROW * pRow;
   1199                unsigned i;
   1200                for (i = 0; i < NumRows; i++) {
   \   00000090   0060A0E3           MOV      R6,#+0
   1201                  pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(RowArray, i);
   1202                  CellArray = pRow->CellArray;
   \                     ??LISTVIEW_AddColumn_2:
   \   00000094   0610A0E1           MOV      R1,R6
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000000A0   008090E5           LDR      R8,[R0, #+0]
   1203                  GUI_UNLOCK_H(pRow);
   \   000000A4   ........           BL       GUI_ALLOC_UnlockH
   1204                  if (GUI_ARRAY_AddItem(CellArray, NULL, sizeof(LISTVIEW_CELL))) {
   \   000000A8   0820A0E3           MOV      R2,#+8
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   0800A0E1           MOV      R0,R8
   \   000000B4   ........           BL       GUI_ARRAY_AddItem
   \   000000B8   000050E3           CMP      R0,#+0
   1205                    r = 1;
   \   000000BC   0170A013           MOVNE    R7,#+1
   1206                    break;
   \   000000C0   0200001A           BNE      ??LISTVIEW_AddColumn_1
   1207                  }
   1208                }
   \   000000C4   016086E2           ADD      R6,R6,#+1
   \   000000C8   0A0056E1           CMP      R6,R10
   \   000000CC   F0FFFF3A           BCC      ??LISTVIEW_AddColumn_2
   1209              }
   1210              pObj = LISTVIEW_LOCK_H(hObj);
   \                     ??LISTVIEW_AddColumn_1:
   \   000000D0   0500A0E1           MOV      R0,R5
   \   000000D4   ........           BL       GUI_ALLOC_LockH
   1211              LISTVIEW__InvalidateInsideArea(hObj);
   \   000000D8   0500A0E1           MOV      R0,R5
   \   000000DC   ........           BL       GUI_ALLOC_LockH
   \   000000E0   346090E5           LDR      R6,[R0, #+52]
   \   000000E4   ........           BL       GUI_ALLOC_UnlockH
   \   000000E8   0600A0E1           MOV      R0,R6
   \   000000EC   ........           BL       HEADER_GetHeight
   \   000000F0   0060A0E1           MOV      R6,R0
   \   000000F4   0D10A0E1           MOV      R1,SP
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   ........           BL       WM_GetInsideRectExScrollbar
   \   00000100   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000104   0D10A0E1           MOV      R1,SP
   \   00000108   000086E0           ADD      R0,R6,R0
   \   0000010C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000110   0500A0E1           MOV      R0,R5
   \   00000114   ........           BL       WM_InvalidateRect
   1212              GUI_UNLOCK_H(pObj);
   \   00000118   ........           BL       GUI_ALLOC_UnlockH
   1213              LISTVIEW__UpdateScrollParas(hObj);
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   ........           BL       LISTVIEW__UpdateScrollParas
   1214              WM_UNLOCK();
   \   00000124   ........           BL       GUI_Unlock
   1215            }
   1216            return r;
   \                     ??LISTVIEW_AddColumn_0:
   \   00000128   0700A0E1           MOV      R0,R7
   \   0000012C   20D08DE2           ADD      SP,SP,#+32
   \   00000130   F087BDE8           POP      {R4-R10,PC}      ;; return
   1217          }
   1218          
   1219          /*********************************************************************
   1220          *
   1221          *       LISTVIEW_AddRow
   1222          */

   \                                 In section .text, align 4, keep-with-next
   1223          int LISTVIEW_AddRow(LISTVIEW_Handle hObj, const GUI_ConstString* ppText) {
   \                     LISTVIEW_AddRow:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   0040A0E1           MOV      R4,R0
   1224            int r = 0;
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   08108DE5           STR      R1,[SP, #+8]
   1225            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   8E00000A           BEQ      ??LISTVIEW_AddRow_0
   1226              int RowIndex, NumColumns;
   1227              LISTVIEW_Obj * pObj;
   1228              LISTVIEW_ROW * pRow;
   1229              GUI_ARRAY RowArray;
   1230              GUI_ARRAY CellArray;
   1231              int i, NumBytes;
   1232              const char * s;
   1233          
   1234              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
   1235          
   1236              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_LockH
   \   0000002C   0070A0E1           MOV      R7,R0
   1237              RowArray   = pObj->RowArray;
   \   00000030   380097E5           LDR      R0,[R7, #+56]
   \   00000034   0C008DE5           STR      R0,[SP, #+12]
   1238              RowIndex   = LISTVIEW__GetNumRows(pObj);
   \   00000038   ........           BL       GUI_ARRAY_GetNumItems
   \   0000003C   0060A0E1           MOV      R6,R0
   1239              NumColumns = LISTVIEW__GetNumColumns(pObj);
   \   00000040   3C0097E5           LDR      R0,[R7, #+60]
   \   00000044   ........           BL       GUI_ARRAY_GetNumItems
   \   00000048   0090A0E1           MOV      R9,R0
   1240              GUI_UNLOCK_H(pObj);
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
   1241          
   1242              /* Add row item to the GUI_ARRAY */
   1243              if (GUI_ARRAY_AddItem(RowArray, NULL, sizeof(LISTVIEW_ROW)) == 0) {
   \   00000050   0C20A0E3           MOV      R2,#+12
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0C009DE5           LDR      R0,[SP, #+12]
   \   0000005C   ........           BL       GUI_ARRAY_AddItem
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   7900001A           BNE      ??LISTVIEW_AddRow_1
   1244                CellArray = GUI_ARRAY_Create();
   \   00000068   ........           BL       GUI_ARRAY_Create
   \   0000006C   0070A0E1           MOV      R7,R0
   1245                /* Add columns for the new row */
   1246                for (i = 0; i < NumColumns; i++) {
   \   00000070   0080A0E3           MOV      R8,#+0
   \   00000074   010059E3           CMP      R9,#+1
   \   00000078   340000BA           BLT      ??LISTVIEW_AddRow_2
   1247                  LISTVIEW_CELL * pCell;
   1248                  s = (ppText) ? *ppText++ : 0;
   \                     ??LISTVIEW_AddRow_3:
   \   0000007C   000055E3           CMP      R5,#+0
   \   00000080   0300000A           BEQ      ??LISTVIEW_AddRow_4
   \   00000084   04A095E4           LDR      R10,[R5], #+4
   1249                  if (s == 0) {
   \   00000088   00005AE3           CMP      R10,#+0
   \   0000008C   0200001A           BNE      ??LISTVIEW_AddRow_5
   \   00000090   000000EA           B        ??LISTVIEW_AddRow_6
   \                     ??LISTVIEW_AddRow_4:
   \   00000094   00A0A0E3           MOV      R10,#+0
   1250                    ppText = 0;
   \                     ??LISTVIEW_AddRow_6:
   \   00000098   0050A0E3           MOV      R5,#+0
   1251                  }
   1252                  NumBytes = GUI__strlen(s) + 1;     /* 0 if no string is specified (s == NULL) */
   \                     ??LISTVIEW_AddRow_5:
   \   0000009C   0A00A0E1           MOV      R0,R10
   \   000000A0   ........           BL       GUI__strlen
   \   000000A4   01B080E2           ADD      R11,R0,#+1
   1253                  if (GUI_ARRAY_AddItem(CellArray, NULL, sizeof(LISTVIEW_CELL) + NumBytes)) {
   \   000000A8   08208BE2           ADD      R2,R11,#+8
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   0700A0E1           MOV      R0,R7
   \   000000B4   ........           BL       GUI_ARRAY_AddItem
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   1700000A           BEQ      ??LISTVIEW_AddRow_7
   1254                    r = 1;
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   08108DE5           STR      R1,[SP, #+8]
   \   000000C8   000058E3           CMP      R8,#+0
   \   000000CC   1F00000A           BEQ      ??LISTVIEW_AddRow_2
   \   000000D0   0850A0E1           MOV      R5,R8
   \   000000D4   010015E3           TST      R5,#0x1
   \   000000D8   0300000A           BEQ      ??LISTVIEW_AddRow_8
   1255                    /* Remove already allocated columns */
   1256                    while (i--) {
   \   000000DC   018048E2           SUB      R8,R8,#+1
   1257                      GUI_ARRAY_DeleteItem(CellArray, i);
   \   000000E0   0810A0E1           MOV      R1,R8
   \   000000E4   0700A0E1           MOV      R0,R7
   \   000000E8   ........           BL       GUI_ARRAY_DeleteItem
   \                     ??LISTVIEW_AddRow_8:
   \   000000EC   A550B0E1           LSRS     R5,R5,#+1
   \   000000F0   1600000A           BEQ      ??LISTVIEW_AddRow_2
   \                     ??LISTVIEW_AddRow_9:
   \   000000F4   018048E2           SUB      R8,R8,#+1
   \   000000F8   0810A0E1           MOV      R1,R8
   \   000000FC   0700A0E1           MOV      R0,R7
   \   00000100   ........           BL       GUI_ARRAY_DeleteItem
   \   00000104   018048E2           SUB      R8,R8,#+1
   \   00000108   0810A0E1           MOV      R1,R8
   \   0000010C   0700A0E1           MOV      R0,R7
   \   00000110   ........           BL       GUI_ARRAY_DeleteItem
   \   00000114   015055E2           SUBS     R5,R5,#+1
   \   00000118   F5FFFF1A           BNE      ??LISTVIEW_AddRow_9
   \   0000011C   0B0000EA           B        ??LISTVIEW_AddRow_2
   1258                    }
   1259                    break;
   1260                  }
   1261                  pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(CellArray, i);
   \                     ??LISTVIEW_AddRow_7:
   \   00000120   0810A0E1           MOV      R1,R8
   \   00000124   0700A0E1           MOV      R0,R7
   \   00000128   ........           BL       GUI_ARRAY_GetpItemLocked
   1262                  if (NumBytes > 1) {
   \   0000012C   02005BE3           CMP      R11,#+2
   \   00000130   020000BA           BLT      ??LISTVIEW_AddRow_10
   1263                    strcpy(pCell->acText, s);
   \   00000134   0A10A0E1           MOV      R1,R10
   \   00000138   040080E2           ADD      R0,R0,#+4
   \   0000013C   ........           BL       strcpy
   1264                  }
   1265                  GUI_UNLOCK_H(pCell);
   \                     ??LISTVIEW_AddRow_10:
   \   00000140   ........           BL       GUI_ALLOC_UnlockH
   1266                }
   \   00000144   018088E2           ADD      R8,R8,#+1
   \   00000148   090058E1           CMP      R8,R9
   \   0000014C   CAFFFFBA           BLT      ??LISTVIEW_AddRow_3
   1267                pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(RowArray, RowIndex);
   1268                pRow->CellArray = CellArray;
   \                     ??LISTVIEW_AddRow_2:
   \   00000150   0610A0E1           MOV      R1,R6
   \   00000154   0C009DE5           LDR      R0,[SP, #+12]
   \   00000158   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000015C   007080E5           STR      R7,[R0, #+0]
   1269                GUI_UNLOCK_H(pRow);
   \   00000160   ........           BL       GUI_ALLOC_UnlockH
   1270                pObj = LISTVIEW_LOCK_H(hObj);
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   ........           BL       GUI_ALLOC_LockH
   \   0000016C   0070A0E1           MOV      R7,R0
   1271                pObj->IsSorted = 0;
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   A800C7E5           STRB     R0,[R7, #+168]
   1272                if (pObj->hSort && (pObj->SortIndex >= 0)) {
   \   00000178   A40097E5           LDR      R0,[R7, #+164]
   \   0000017C   000050E3           CMP      R0,#+0
   \   00000180   1000000A           BEQ      ??LISTVIEW_AddRow_11
   \   00000184   740097E5           LDR      R0,[R7, #+116]
   \   00000188   000050E3           CMP      R0,#+0
   \   0000018C   0D00004A           BMI      ??LISTVIEW_AddRow_11
   1273                  LISTVIEW__InvalidateInsideArea(hObj);
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   ........           BL       GUI_ALLOC_LockH
   \   00000198   345090E5           LDR      R5,[R0, #+52]
   \   0000019C   ........           BL       GUI_ALLOC_UnlockH
   \   000001A0   0500A0E1           MOV      R0,R5
   \   000001A4   ........           BL       HEADER_GetHeight
   \   000001A8   0050A0E1           MOV      R5,R0
   \   000001AC   0D10A0E1           MOV      R1,SP
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   ........           BL       WM_GetInsideRectExScrollbar
   \   000001B8   F200DDE1           LDRSH    R0,[SP, #+2]
   \   000001BC   000085E0           ADD      R0,R5,R0
   \   000001C0   B200CDE1           STRH     R0,[SP, #+2]
   \   000001C4   1A0000EA           B        ??LISTVIEW_AddRow_12
   1274                } else {
   1275                  LISTVIEW__InvalidateRow(hObj, pObj, RowIndex);
   \                     ??LISTVIEW_AddRow_11:
   \   000001C8   000056E3           CMP      R6,#+0
   \   000001CC   1B00004A           BMI      ??LISTVIEW_AddRow_13
   \   000001D0   340097E5           LDR      R0,[R7, #+52]
   \   000001D4   ........           BL       HEADER_GetHeight
   \   000001D8   785097E5           LDR      R5,[R7, #+120]
   \   000001DC   0080A0E1           MOV      R8,R0
   \   000001E0   000055E3           CMP      R5,#+0
   \   000001E4   0500001A           BNE      ??LISTVIEW_AddRow_14
   \   000001E8   640097E5           LDR      R0,[R7, #+100]
   \   000001EC   ........           BL       GUI_GetYDistOfFont
   \   000001F0   0050A0E1           MOV      R5,R0
   \   000001F4   700097E5           LDR      R0,[R7, #+112]
   \   000001F8   000050E3           CMP      R0,#+0
   \   000001FC   01508512           ADDNE    R5,R5,#+1
   \                     ??LISTVIEW_AddRow_14:
   \   00000200   0D10A0E1           MOV      R1,SP
   \   00000204   0400A0E1           MOV      R0,R4
   \   00000208   ........           BL       WM_GetInsideRectExScrollbar
   \   0000020C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000210   901097E5           LDR      R1,[R7, #+144]
   \   00000214   000088E0           ADD      R0,R8,R0
   \   00000218   011046E0           SUB      R1,R6,R1
   \   0000021C   950120E0           MLA      R0,R5,R1,R0
   \   00000220   B200CDE1           STRH     R0,[SP, #+2]
   \   00000224   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000228   000085E0           ADD      R0,R5,R0
   \   0000022C   010040E2           SUB      R0,R0,#+1
   \   00000230   B600CDE1           STRH     R0,[SP, #+6]
   \                     ??LISTVIEW_AddRow_12:
   \   00000234   0D10A0E1           MOV      R1,SP
   \   00000238   0400A0E1           MOV      R0,R4
   \   0000023C   ........           BL       WM_InvalidateRect
   1276                }
   1277                GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_AddRow_13:
   \   00000240   ........           BL       GUI_ALLOC_UnlockH
   1278                LISTVIEW__UpdateScrollParas(hObj);
   \   00000244   0400A0E1           MOV      R0,R4
   \   00000248   ........           BL       LISTVIEW__UpdateScrollParas
   \   0000024C   010000EA           B        ??LISTVIEW_AddRow_15
   1279              } else {
   1280                r = 1;
   \                     ??LISTVIEW_AddRow_1:
   \   00000250   0110A0E3           MOV      R1,#+1
   \   00000254   08108DE5           STR      R1,[SP, #+8]
   1281              }
   1282              WM_UNLOCK();
   \                     ??LISTVIEW_AddRow_15:
   \   00000258   ........           BL       GUI_Unlock
   1283            }
   1284            return r;
   \                     ??LISTVIEW_AddRow_0:
   \   0000025C   08009DE5           LDR      R0,[SP, #+8]
   \   00000260   14D08DE2           ADD      SP,SP,#+20
   \   00000264   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1285          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??IsActive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     LISTVIEW_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   ........           DC32     LISTVIEW_DefaultProps

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {0}>_1`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000E   0000               DC8 0, 0
   1286          
   1287          #else
   1288            void LISTVIEW_C(void);
   1289            void LISTVIEW_C(void) {}
   1290          #endif  /* #if GUI_WINSUPPORT */
   1291          
   1292          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     LISTVIEW_AddColumn                 64
     LISTVIEW_AddRow                    56
     LISTVIEW_Callback                  56
     LISTVIEW_CreateEx                  48
     LISTVIEW_DecSel                    24
     LISTVIEW_IncSel                    24
     LISTVIEW__GetNumColumns             8
     LISTVIEW__GetNumRows                8
     LISTVIEW__GetRowDistY               8
     LISTVIEW__GetSel                    0
     LISTVIEW__InvalidateInsideArea     24
     LISTVIEW__InvalidateRow            32
     LISTVIEW__MoveSel                  32
     LISTVIEW__SetSel                   64
     LISTVIEW__UpdateScrollParas        80
     LISTVIEW__UpdateScrollPos          48
     _AddKey                            72
     _FreeAttached                      32
     _OnPage                            32
     _Paint                            136
     _SetSelFromPos                     40


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     LISTVIEW_DefaultProps            44
     LISTVIEW__GetNumRows              8
     LISTVIEW__GetNumColumns           8
     LISTVIEW__GetSel                  8
     LISTVIEW__SetSel                608
     LISTVIEW__MoveSel               132
     LISTVIEW__GetRowDistY            44
     _Paint                         1856
     LISTVIEW__InvalidateInsideArea   80
     LISTVIEW__InvalidateRow         144
     _SetSelFromPos                  248
     LISTVIEW__UpdateScrollPos       160
     LISTVIEW__UpdateScrollParas     748
     IsActive                          1
     _FreeAttached                   212
     _OnPage                         248
     _AddKey                         860
     LISTVIEW_Callback              1084
     LISTVIEW_CreateEx               352
     LISTVIEW_IncSel                 136
     LISTVIEW_DecSel                 136
     LISTVIEW_AddColumn              308
     LISTVIEW_AddRow                 616
     ??DataTable3                      4
     ??DataTable3_1                    4
     ??DataTable3_2                    4
     ?<Constant {0}>_1                 8
     ?<Constant {0}>                  16

 
     1 byte  in section .bss
    44 bytes in section .data
    16 bytes in section .rodata
 8 016 bytes in section .text
 
 8 016 bytes of CODE  memory
    16 bytes of CONST memory
    45 bytes of DATA  memory

Errors: none
Warnings: none
