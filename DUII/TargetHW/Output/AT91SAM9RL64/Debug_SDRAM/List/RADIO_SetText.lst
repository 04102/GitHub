###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:46 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\RADIO_SetText.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\RADIO_SetText.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\RA #
#                    DIO_SetText.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\RAD #
#                    IO_SetText.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\RADIO_SetText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : RADIO_SetText.c
     19          Purpose     : Implementation of RADIO_SetText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "RADIO_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       RADIO_SetText
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void RADIO_SetText(RADIO_Handle hObj, const char* pText, unsigned Index) {
   \                     RADIO_SetText:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     39            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1500000A           BEQ      ??RADIO_SetText_0
     40              RADIO_Obj* pObj;
     41              GUI_ARRAY TextArray;
     42              unsigned NumItems;
     43              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     44              pObj = RADIO_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
     45              TextArray = pObj->TextArray;
   \   00000024   5C7090E5           LDR      R7,[R0, #+92]
     46              NumItems = pObj->NumItems;
   \   00000028   B486D0E1           LDRH     R8,[R0, #+100]
     47              GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
     48              if (Index < (unsigned)NumItems) {
   \   00000030   080056E1           CMP      R6,R8
   \   00000034   0C00002A           BCS      ??RADIO_SetText_1
     49                GUI_ARRAY_SetItem(TextArray, Index, pText, pText ? (GUI__strlen(pText) + 1) : 0);
   \   00000038   000055E3           CMP      R5,#+0
   \   0000003C   0300000A           BEQ      ??RADIO_SetText_2
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       GUI__strlen
   \   00000048   013080E2           ADD      R3,R0,#+1
   \   0000004C   000000EA           B        ??RADIO_SetText_3
   \                     ??RADIO_SetText_2:
   \   00000050   0030A0E3           MOV      R3,#+0
   \                     ??RADIO_SetText_3:
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   ........           BL       GUI_ARRAY_SetItem
     50                WM_InvalidateWindow(hObj);
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       WM_InvalidateWindow
     51              }
     52              WM_UNLOCK();
   \                     ??RADIO_SetText_1:
   \   0000006C   ........           BL       GUI_Unlock
     53            }
     54          }
   \                     ??RADIO_SetText_0:
   \   00000070   F081BDE8           POP      {R4-R8,PC}       ;; return
     55          
     56          #else  /* avoid empty object files */
     57          
     58          void RADIO_SetText_c(void);
     59          void RADIO_SetText_c(void) {}
     60          
     61          #endif  /* #if GUI_WINSUPPORT */
     62          
     63          /************************* end of file ******************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     RADIO_SetText     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     RADIO_SetText   116

 
 116 bytes in section .text
 
 116 bytes of CODE memory

Errors: none
Warnings: none
