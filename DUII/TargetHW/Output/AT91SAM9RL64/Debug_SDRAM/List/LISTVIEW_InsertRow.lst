###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:27 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_InsertRow.c                #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_InsertRow.c -D DEBUG=1 -D  #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LI #
#                    STVIEW_InsertRow.lst                                     #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LIS #
#                    TVIEW_InsertRow.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_InsertRow.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_InsertRow.c
     19          Purpose     : Implementation of LISTVIEW_InsertRow
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "LISTVIEW_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Public routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       LISTVIEW_InsertRow
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          int LISTVIEW_InsertRow(LISTVIEW_Handle hObj, unsigned Index, const GUI_ConstString * ppText) {
   \                     LISTVIEW_InsertRow:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0250A0E1           MOV      R5,R2
     40            int r = 0;
   \   00000010   0060A0E3           MOV      R6,#+0
     41            if (hObj) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   6C00000A           BEQ      ??LISTVIEW_InsertRow_0
     42              GUI_ARRAY RowArray;
     43              GUI_ARRAY CellArray;
     44              unsigned NumItems;
     45              int NumColumns;
     46              int ScrollChanged;
     47              LISTVIEW_Obj * pObj;
     48              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     49              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   0070A0E1           MOV      R7,R0
     50              NumItems   = GUI_ARRAY_GetNumItems(pObj->RowArray);
   \   0000002C   380097E5           LDR      R0,[R7, #+56]
   \   00000030   ........           BL       GUI_ARRAY_GetNumItems
   \   00000034   0080A0E1           MOV      R8,R0
     51              NumColumns = LISTVIEW__GetNumColumns(pObj);
   \   00000038   0700A0E1           MOV      R0,R7
   \   0000003C   ........           BL       LISTVIEW__GetNumColumns
   \   00000040   00008DE5           STR      R0,[SP, #+0]
     52              RowArray   = pObj->RowArray;
   \   00000044   389097E5           LDR      R9,[R7, #+56]
     53              GUI_UNLOCK_H(pObj);
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
     54              if (Index < NumItems) {
   \   0000004C   08009DE5           LDR      R0,[SP, #+8]
   \   00000050   0070A0E3           MOV      R7,#+0
   \   00000054   080050E1           CMP      R0,R8
   \   00000058   5700002A           BCS      ??LISTVIEW_InsertRow_1
     55                /* Insert new row */
     56                if (GUI_ARRAY_InsertItem(RowArray, Index, sizeof(LISTVIEW_ROW))) {
   \   0000005C   0010A0E1           MOV      R1,R0
   \   00000060   0C20A0E3           MOV      R2,#+12
   \   00000064   0900A0E1           MOV      R0,R9
   \   00000068   ........           BL       GUI_ARRAY_InsertItem
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   4F00000A           BEQ      ??LISTVIEW_InsertRow_2
     57                  LISTVIEW_ROW * pRow;
     58                  int i, NumBytes;
     59                  const char * s;
     60                  CellArray = GUI_ARRAY_Create();
   \   00000074   ........           BL       GUI_ARRAY_Create
   \   00000078   0080B0E1           MOVS     R8,R0
     61                  if (CellArray) {
   \   0000007C   5200000A           BEQ      ??LISTVIEW_InsertRow_3
     62                    pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(RowArray, Index);
     63                    pRow->CellArray = CellArray;
   \   00000080   08109DE5           LDR      R1,[SP, #+8]
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000008C   008080E5           STR      R8,[R0, #+0]
     64                    GUI_UNLOCK_H(pRow);
   \   00000090   ........           BL       GUI_ALLOC_UnlockH
     65                    /* Add columns for the new row */
     66                    for (i = 0; i < NumColumns; i++) {
   \   00000094   00009DE5           LDR      R0,[SP, #+0]
   \   00000098   0090A0E3           MOV      R9,#+0
   \   0000009C   010050E3           CMP      R0,#+1
   \   000000A0   1E0000BA           BLT      ??LISTVIEW_InsertRow_4
     67                      LISTVIEW_CELL * pCell;
     68                      s = (ppText) ? *ppText++ : 0;
   \                     ??LISTVIEW_InsertRow_5:
   \   000000A4   000055E3           CMP      R5,#+0
   \   000000A8   0300000A           BEQ      ??LISTVIEW_InsertRow_6
   \   000000AC   04A095E4           LDR      R10,[R5], #+4
     69                      if (s == 0) {
   \   000000B0   00005AE3           CMP      R10,#+0
   \   000000B4   0200001A           BNE      ??LISTVIEW_InsertRow_7
   \   000000B8   000000EA           B        ??LISTVIEW_InsertRow_8
   \                     ??LISTVIEW_InsertRow_6:
   \   000000BC   00A0A0E3           MOV      R10,#+0
     70                        ppText = 0;
   \                     ??LISTVIEW_InsertRow_8:
   \   000000C0   0050A0E3           MOV      R5,#+0
     71                      }
     72                      NumBytes = GUI__strlen(s) + 1;
   \                     ??LISTVIEW_InsertRow_7:
   \   000000C4   0A00A0E1           MOV      R0,R10
   \   000000C8   ........           BL       GUI__strlen
   \   000000CC   01B080E2           ADD      R11,R0,#+1
     73                      if (GUI_ARRAY_AddItem(CellArray, NULL, sizeof(LISTVIEW_CELL) + NumBytes)) {
   \   000000D0   08208BE2           ADD      R2,R11,#+8
   \   000000D4   0010A0E3           MOV      R1,#+0
   \   000000D8   0800A0E1           MOV      R0,R8
   \   000000DC   ........           BL       GUI_ARRAY_AddItem
   \   000000E0   000050E3           CMP      R0,#+0
     74                        r = 1;
   \   000000E4   0160A013           MOVNE    R6,#+1
     75                        break;
   \   000000E8   0C00001A           BNE      ??LISTVIEW_InsertRow_4
     76                      }
     77                      pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(CellArray, i);
   \   000000EC   0910A0E1           MOV      R1,R9
   \   000000F0   0800A0E1           MOV      R0,R8
   \   000000F4   ........           BL       GUI_ARRAY_GetpItemLocked
     78                      if (NumBytes > 1) {
   \   000000F8   02005BE3           CMP      R11,#+2
   \   000000FC   020000BA           BLT      ??LISTVIEW_InsertRow_9
     79                        strcpy(pCell->acText, s);
   \   00000100   0A10A0E1           MOV      R1,R10
   \   00000104   040080E2           ADD      R0,R0,#+4
   \   00000108   ........           BL       strcpy
     80                      }
     81                      GUI_UNLOCK_H(pCell);
   \                     ??LISTVIEW_InsertRow_9:
   \   0000010C   ........           BL       GUI_ALLOC_UnlockH
     82                    }
   \   00000110   00009DE5           LDR      R0,[SP, #+0]
   \   00000114   019089E2           ADD      R9,R9,#+1
   \   00000118   000059E1           CMP      R9,R0
   \   0000011C   E0FFFFBA           BLT      ??LISTVIEW_InsertRow_5
     83                    pObj = LISTVIEW_LOCK_H(hObj);
   \                     ??LISTVIEW_InsertRow_4:
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       GUI_ALLOC_LockH
   \   00000128   0050A0E1           MOV      R5,R0
     84                    if (pObj->SortIndex < 0) {
   \   0000012C   740095E5           LDR      R0,[R5, #+116]
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   0600005A           BPL      ??LISTVIEW_InsertRow_10
     85                      if ((int)Index < LISTVIEW__GetSel(pObj)) {
   \   00000138   0500A0E1           MOV      R0,R5
   \   0000013C   ........           BL       LISTVIEW__GetSel
   \   00000140   08109DE5           LDR      R1,[SP, #+8]
   \   00000144   000051E1           CMP      R1,R0
   \   00000148   010000AA           BGE      ??LISTVIEW_InsertRow_10
     86                        LISTVIEW_IncSel(hObj);
   \   0000014C   0400A0E1           MOV      R0,R4
   \   00000150   ........           BL       LISTVIEW_IncSel
     87                      }
     88                    }
     89                    pObj->IsPresorted = 0;
   \                     ??LISTVIEW_InsertRow_10:
   \   00000154   A970C5E5           STRB     R7,[R5, #+169]
     90                    GUI_UNLOCK_H(pObj);
   \   00000158   ........           BL       GUI_ALLOC_UnlockH
     91                    ScrollChanged = LISTVIEW__UpdateScrollParas(hObj);
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   ........           BL       LISTVIEW__UpdateScrollParas
   \   00000164   0050A0E1           MOV      R5,R0
     92                    pObj = LISTVIEW_LOCK_H(hObj);
   \   00000168   0400A0E1           MOV      R0,R4
   \   0000016C   ........           BL       GUI_ALLOC_LockH
   \   00000170   0010A0E1           MOV      R1,R0
     93                    if (ScrollChanged) {
   \   00000174   000055E3           CMP      R5,#+0
   \   00000178   0200000A           BEQ      ??LISTVIEW_InsertRow_11
     94                      LISTVIEW__InvalidateInsideArea(hObj);
   \                     ??LISTVIEW_InsertRow_12:
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   ........           BL       LISTVIEW__InvalidateInsideArea
   \   00000184   080000EA           B        ??LISTVIEW_InsertRow_13
     95                    } else {
     96                      if (pObj->hSort && (pObj->SortIndex >= 0)) {
   \                     ??LISTVIEW_InsertRow_11:
   \   00000188   A40091E5           LDR      R0,[R1, #+164]
   \   0000018C   000050E3           CMP      R0,#+0
   \   00000190   0200000A           BEQ      ??LISTVIEW_InsertRow_14
   \   00000194   740091E5           LDR      R0,[R1, #+116]
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   F6FFFF5A           BPL      ??LISTVIEW_InsertRow_12
     97                        LISTVIEW__InvalidateInsideArea(hObj);
     98                      } else {
     99                        LISTVIEW__InvalidateRowAndBelow(hObj, pObj, Index);
   \                     ??LISTVIEW_InsertRow_14:
   \   000001A0   08209DE5           LDR      R2,[SP, #+8]
   \   000001A4   0400A0E1           MOV      R0,R4
   \   000001A8   ........           BL       LISTVIEW__InvalidateRowAndBelow
    100                      }
    101                    }
    102                    GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_InsertRow_13:
   \   000001AC   ........           BL       GUI_ALLOC_UnlockH
   \   000001B0   050000EA           B        ??LISTVIEW_InsertRow_3
    103                  }
    104                } else {
    105                  r = 1;
   \                     ??LISTVIEW_InsertRow_2:
   \   000001B4   0160A0E3           MOV      R6,#+1
   \   000001B8   030000EA           B        ??LISTVIEW_InsertRow_3
    106                }
    107              } else {
    108                /* Append new row */
    109                r = LISTVIEW_AddRow(hObj, ppText);
   \                     ??LISTVIEW_InsertRow_1:
   \   000001BC   0510A0E1           MOV      R1,R5
   \   000001C0   0400A0E1           MOV      R0,R4
   \   000001C4   ........           BL       LISTVIEW_AddRow
   \   000001C8   0060A0E1           MOV      R6,R0
    110              }
    111              WM_UNLOCK();
   \                     ??LISTVIEW_InsertRow_3:
   \   000001CC   ........           BL       GUI_Unlock
    112            }
    113            return r;
   \                     ??LISTVIEW_InsertRow_0:
   \   000001D0   0600A0E1           MOV      R0,R6
   \   000001D4   0CD08DE2           ADD      SP,SP,#+12
   \   000001D8   F08FBDE8           POP      {R4-R11,PC}      ;; return
    114          }
    115          
    116          
    117          #else                            /* Avoid problems with empty object modules */
    118            void LISTVIEW_InsertRow_C(void);
    119            void LISTVIEW_InsertRow_C(void) {}
    120          #endif
    121          
    122          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     LISTVIEW_InsertRow     48


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     LISTVIEW_InsertRow  476

 
 476 bytes in section .text
 
 476 bytes of CODE memory

Errors: none
Warnings: none
