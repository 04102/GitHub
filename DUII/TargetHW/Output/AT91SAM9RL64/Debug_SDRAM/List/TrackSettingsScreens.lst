###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:32:08 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\TrackSettingsScreens.c                      #
#    Command line =  C:\DUII\DUII\TrackSettingsScreens.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Tr #
#                    ackSettingsScreens.lst                                   #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Tra #
#                    ckSettingsScreens.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\TrackSettingsScreens.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          #include <stdio.h>
     23          #include <stdlib.h>
     24          #include "DUII.h"
     25          #include "GUI.h"
     26          #include "commondefs.h"
     27          #include "DIALOG.h"
     28          #include "ConfigScreens.h"
     29          #include "GeneralConfig.h"
     30          #include "GaugeScreen.h"
     31          #include "FlashReadWrite.h"
     32          #include "GMeterScreen.h"
     33          #include "RunningGauges.h"
     34          #include "TrackSettingsScreens.h"
     35          #include "DataHandler.h"
     36          #include "StandardList.h"
     37          #include "TachSetupScreens.h"
     38          #include "InputScreens.h"
     39          #include "SystemSettingsScreens.h"
     40          #include "Utilities.h"
     41          #include "SFScreens.h"
     42          #include "RaceSetupScreens.h"
     43          
     44          
     45          /*********************************************************************
     46          *
     47          *       Public Variables
     48          *
     49          **********************************************************************
     50          */

   \                                 In section .data, align 4
     51          char alteredTrackData = false;
     52          
     53          /*********************************************************************
     54          *
     55          *       External data and code
     56          *
     57          **********************************************************************
     58          */
     59          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
     60          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
     61          extern GUI_CONST_STORAGE GUI_BITMAP bmBackground;
     62          extern GUI_CONST_STORAGE GUI_BITMAP bmSingleSpinner;
     63          extern GUI_CONST_STORAGE GUI_BITMAP bmBackgroundWithPanel;
     64          extern GUI_CONST_STORAGE GUI_BITMAP bmStartFinish;
     65          extern GUI_CONST_STORAGE GUI_BITMAP bmStartFinishText;
     66          extern GUI_CONST_STORAGE GUI_BITMAP bmTrackSettingsText;
     67          extern GUI_CONST_STORAGE GUI_BITMAP bmTrackTypeText;
     68          extern GUI_CONST_STORAGE GUI_BITMAP bmLaptimeHold;
     69          extern GUI_CONST_STORAGE GUI_BITMAP bmLapHoldTimeButton;
     70          extern GUI_CONST_STORAGE GUI_BITMAP bmTrackType;
     71          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenCheck;
     72          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
     73          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
     74          extern GUI_CONST_STORAGE GUI_BITMAP bmResetPredictiveLap;
     75          extern GUI_CONST_STORAGE GUI_BITMAP bmPredictiveLapText;
     76          
     77          
     78          /*********************************************************************
     79          *
     80          *       Local Prototypes
     81          *
     82          **********************************************************************
     83          */
     84          void DisplayStartFinish(WM_HWIN);
     85          void DisplayTrackType(WM_HWIN);
     86          void DisplayHoldTime(WM_HWIN);
     87          void DisplayResetPL(WM_HWIN);
     88          
     89          void ResetPLPaint(WM_HWIN);
     90          void HoldTimePaint(WM_HWIN);
     91          void StartFinishPaint(WM_HWIN);
     92          void TrackTypePaint(WM_HWIN);
     93          
     94          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen);
     95          
     96          static void TrackSettingMainScreenCallback(WM_MESSAGE * pMsg);
     97          void SetLatButtonText(void);
     98          void SetLongButtonText(void);
     99          void SetHeadButtonText(void);
    100          void SetFinishLatButtonText(void);
    101          void SetFinishLongButtonText(void);
    102          void SetFinishHeadButtonText(void);
    103          int okToResetSF(void);
    104          int TSButtonToScreenID(int Id);
    105          char OpenCourse(void);
    106          char NeedToEditStartFinish(void);
    107          char NeedToDisplayFinish(void);
    108          enum TRACK_TYPES IndexToCourseType(char type);
    109          char CourseTypeToIndex(enum TRACK_TYPES type);
    110          
    111          
    112          
    113          /*********************************************************************
    114          *
    115          *       Tables and Constants
    116          *
    117          **********************************************************************
    118          */
    119          struct SCREEN_LIST TrackSettingsScreenList[NUM_TRACK_SETTINGS_SCREENS+1] = {
   \                     TrackSettingsScreenList:
   \   00000000   00000000....       DC32 0, DisplayTrackType, TrackTypePaint, 1, DisplayHoldTime
   \              ............
   \              01000000....
   \              ....        
   \   00000014   ........0200       DC32 HoldTimePaint, 2, DisplayStartFinish, StartFinishPaint, 3
   \              0000........
   \              ........0300
   \              0000        
   \   00000028   ............       DC32 DisplayResetPL, ResetPLPaint, -1, 0H, 0H
   \              ....FFFFFFFF
   \              000000000000
   \              0000        
   \   0000003C   00000000           DC8 0, 0, 0, 0
   \   00000040   00000000           DC8 0, 0, 0, 0
    120          	{ TRACKTYPE_SELECTION, DisplayTrackType, TrackTypePaint },
    121          	{ HOLDTIME_SELECTION, DisplayHoldTime, HoldTimePaint },
    122          	{ STARTFINISH_SELECTION, DisplayStartFinish, StartFinishPaint },
    123          	{ RESETPL_SELECTION, DisplayResetPL, ResetPLPaint },
    124          	{ -1, NULL, NULL }
    125          };
    126          
    127          char *pTrackTypes[] = {
    128          	"Road Race - Closed",
    129          	"Oval - Closed",
    130          	"Auto-X/Rally - Open",
    131          //	"Drag 1/8 mile",
    132          //	"Drag 1000 feet",
    133          	"Drag Strip - Open",
    134          	"Hill Climb - Open",
    135          	"Drive - Open",
    136          	NULL
    137          };
    138          
    139          char *LapHoldTimes[] = {		// to go to new TrackSettingsScreen
    140          	"0 sec",   "10 sec",  "20 sec",  "30 sec",  "40 sec",  "50 sec",  "60 sec",
    141          	"70 sec",  "80 sec",  "90 sec",  "100 sec", "110 sec", "120 sec",
    142          	"130 sec", "140 sec", "150 sec", "160 sec", "170 sec", "180 sec",
    143          	NULL
    144          };
    145          
    146          //
    147          // Widget IDs
    148          //
    149          #define	TRACKTYPE_LIST				GUI_ID_LISTWHEEL0
    150          #define	LAPHOLD_LIST				GUI_ID_LISTWHEEL1
    151          
    152          #define	TRACKTYPE_BUTTON			GUI_ID_USER + 1
    153          #define	LAPHOLD_BUTTON				GUI_ID_USER + 2
    154          #define	START_FINISH_BUTTON			GUI_ID_USER + 3
    155          #define	CLEAR_SF_BUTTON				GUI_ID_USER + 4
    156          #define	START_LATITUDE_BUTTON		GUI_ID_USER + 5
    157          #define	START_LONGITUDE_BUTTON		GUI_ID_USER + 6
    158          #define	START_HEADING_BUTTON		GUI_ID_USER + 7
    159          #define	RESETPL_BUTTON				GUI_ID_USER + 8
    160          #define	RESET_FASTEST_LAP			GUI_ID_USER + 9
    161          #define	FINISH_LATITUDE_BUTTON		GUI_ID_USER + 10
    162          #define	FINISH_LONGITUDE_BUTTON		GUI_ID_USER + 11
    163          #define	FINISH_HEADING_BUTTON		GUI_ID_USER + 12
    164          
    165          /*********************************************************************
    166          *
    167          *       Local Variables
    168          *
    169          **********************************************************************
    170          */
    171          static WM_HWIN hTrackSettingsScreens;
    172          static int clickedOnVSScreen;
    173          static int clickedOnVSMScreen;
    174          static LISTWHEEL_Handle hTrackTypeWheel;
    175          static LISTWHEEL_Handle hHoldTimeListWheel;
    176          BUTTON_Handle hStartLatButton, hStartLongButton, hStartHeadButton, hFastestLap;
   \                     hStartLatButton:
   \   00000044   00000000           DC8 0, 0, 0, 0
   \                     hStartLongButton:
   \   00000048   00000000           DC8 0, 0, 0, 0
   \                     hStartHeadButton:
   \   0000004C   00000000           DC8 0, 0, 0, 0
    177          BUTTON_Handle hFinishLatButton = 0, hFinishLongButton = 0, hFinishHeadButton = 0;
   \                     hFinishLatButton:
   \   00000050   00000000           DC32 0
   \                     hFinishLongButton:
   \   00000054   00000000           DC32 0
   \                     hFinishHeadButton:
   \   00000058   00000000           DC32 0
   \                     alteredTrackData:
   \   0000005C   00                 DC8 0

   \                                 In section .data, align 4
   \                     pTrackTypes:
   \   00000000   ............       DC32 `?<Constant "Road Race - Closed">`, `?<Constant "Oval - Closed">`
   \              ....        
   \   00000008   ........           DC32 `?<Constant "Auto-X/Rally - Open">`
   \   0000000C   ........           DC32 `?<Constant "Drag Strip - Open">`
   \   00000010   ............       DC32 `?<Constant "Hill Climb - Open">`, `?<Constant "Drive - Open">`
   \              ....        
   \   00000018   00000000           DC32 0H
   \   0000001C   00000000           DC8 0, 0, 0, 0

   \                                 In section .data, align 4
   \                     LapHoldTimes:
   \   00000000   ............       DC32 `?<Constant "0 sec">`, `?<Constant "10 sec">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "20 sec">`, `?<Constant "30 sec">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "40 sec">`, `?<Constant "50 sec">`
   \              ....        
   \   00000018   ............       DC32 `?<Constant "60 sec">`, `?<Constant "70 sec">`
   \              ....        
   \   00000020   ............       DC32 `?<Constant "80 sec">`, `?<Constant "90 sec">`
   \              ....        
   \   00000028   ............       DC32 `?<Constant "100 sec">`, `?<Constant "110 sec">`
   \              ....        
   \   00000030   ............       DC32 `?<Constant "120 sec">`, `?<Constant "130 sec">`
   \              ....        
   \   00000038   ............       DC32 `?<Constant "140 sec">`, `?<Constant "150 sec">`
   \              ....        
   \   00000040   ............       DC32 `?<Constant "160 sec">`, `?<Constant "170 sec">`
   \              ....        
   \   00000048   ........0000       DC32 `?<Constant "180 sec">`, 0H
   \              0000        
   \   00000050   00000000           DC8 0, 0, 0, 0

   \                                 In section .bss, align 4
   \                     clickedOnVSMScreen:
   \   00000000                      DS8 4
    178          
    179          WM_HWIN hTrackSettingMainScreen;
   \                     hTrackSettingMainScreen:
   \   00000004                      DS8 4

   \                                 In section .bss, align 4
   \                     hFastestLap:
   \   00000000                      DS8 4
    180          
    181          
    182          /*********************************************************************
    183          *
    184          *       Public code
    185          *
    186          **********************************************************************
    187          */
    188          
    189          
    190          ///////////////////////////////////////////////////////////////////////////
    191          //
    192          // Special intermediate screen(s)
    193          //

   \                                 In section .text, align 4, keep-with-next
    194          void Display_TrackSettingMainScreen(WM_HWIN hPrev)
    195          {
   \                     Display_TrackSettingMainScreen:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
    196          BUTTON_Handle hButton;
    197          
    198          	if (hPrev)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??Display_TrackSettingMainScreen_0
    199          		WM_DeleteWindow(hPrev);
   \   00000010   ........           BL       WM_DeleteWindow
    200          
    201          	SetScreenScrollingHOnly();
   \                     ??Display_TrackSettingMainScreen_0:
   \   00000014   ........           LDR      R0,??DataTable61_1
   \   00000018   0210A0E3           MOV      R1,#+2
   \   0000001C   001080E5           STR      R1,[R0, #+0]
    202          
    203          	SetScreenType(TRACK_SETTING_SCREEN_TYPE);
   \   00000020   0C00A0E3           MOV      R0,#+12
   \   00000024   ........           BL       SetScreenType
    204          
    205          	if ((hTrackSettingMainScreen = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, TrackSettingMainScreenCallback, 0)) <= 0)
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   08008DE5           STR      R0,[SP, #+8]
   \   00000030   ........           LDR      R0,??DataTable61_2
   \   00000034   443FA0E3           MOV      R3,#+272
   \   00000038   04008DE5           STR      R0,[SP, #+4]
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   800D80E3           ORR      R0,R0,#0x2000
   \   00000044   00008DE5           STR      R0,[SP, #+0]
   \   00000048   782FA0E3           MOV      R2,#+480
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   ........           BL       WM_CreateWindow
   \   00000058   ........           LDR      R4,??DataTable61_3
   \   0000005C   010050E3           CMP      R0,#+1
   \   00000060   040084E5           STR      R0,[R4, #+4]
   \   00000064   000000AA           BGE      ??Display_TrackSettingMainScreen_1
    206          		SystemError();
   \   00000068   ........           BL       SystemError
    207          
    208          	hButton = BUTTON_CreateEx(41, 38, 178, 115, hTrackSettingMainScreen, WM_CF_SHOW, 0, TRACKTYPE_BUTTON);
   \                     ??Display_TrackSettingMainScreen_1:
   \   0000006C   0100A0E3           MOV      R0,#+1
   \   00000070   800E80E3           ORR      R0,R0,#0x800
   \   00000074   0C008DE5           STR      R0,[SP, #+12]
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   08008DE5           STR      R0,[SP, #+8]
   \   00000080   0200A0E3           MOV      R0,#+2
   \   00000084   04008DE5           STR      R0,[SP, #+4]
   \   00000088   040094E5           LDR      R0,[R4, #+4]
   \   0000008C   7330A0E3           MOV      R3,#+115
   \   00000090   00008DE5           STR      R0,[SP, #+0]
   \   00000094   B220A0E3           MOV      R2,#+178
   \   00000098   2610A0E3           MOV      R1,#+38
   \   0000009C   2900A0E3           MOV      R0,#+41
   \   000000A0   ........           BL       BUTTON_CreateEx
    209          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmTrackType);
   \   000000A4   ........           LDR      R2,??DataTable61_4
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   ........           BL       BUTTON_SetBitmap
    210          
    211          	hButton = BUTTON_CreateEx(261, 38, 178, 115, hTrackSettingMainScreen, WM_CF_SHOW, 0, LAPHOLD_BUTTON);
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   800E80E3           ORR      R0,R0,#0x800
   \   000000B8   0C008DE5           STR      R0,[SP, #+12]
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   08008DE5           STR      R0,[SP, #+8]
   \   000000C4   0200A0E3           MOV      R0,#+2
   \   000000C8   04008DE5           STR      R0,[SP, #+4]
   \   000000CC   040094E5           LDR      R0,[R4, #+4]
   \   000000D0   0550A0E3           MOV      R5,#+5
   \   000000D4   405F85E3           ORR      R5,R5,#0x100
   \   000000D8   00008DE5           STR      R0,[SP, #+0]
   \   000000DC   7330A0E3           MOV      R3,#+115
   \   000000E0   B220A0E3           MOV      R2,#+178
   \   000000E4   2610A0E3           MOV      R1,#+38
   \   000000E8   0500A0E1           MOV      R0,R5
   \   000000EC   ........           BL       BUTTON_CreateEx
    212          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmLapHoldTimeButton);
   \   000000F0   ........           LDR      R2,??DataTable61_5
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   ........           BL       BUTTON_SetBitmap
    213          
    214          	hButton = BUTTON_CreateEx(41, 156, 178, 115, hTrackSettingMainScreen, WM_CF_SHOW, 0, START_FINISH_BUTTON);
   \   000000FC   0300A0E3           MOV      R0,#+3
   \   00000100   800E80E3           ORR      R0,R0,#0x800
   \   00000104   0C008DE5           STR      R0,[SP, #+12]
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   08008DE5           STR      R0,[SP, #+8]
   \   00000110   0200A0E3           MOV      R0,#+2
   \   00000114   04008DE5           STR      R0,[SP, #+4]
   \   00000118   040094E5           LDR      R0,[R4, #+4]
   \   0000011C   7330A0E3           MOV      R3,#+115
   \   00000120   00008DE5           STR      R0,[SP, #+0]
   \   00000124   B220A0E3           MOV      R2,#+178
   \   00000128   9C10A0E3           MOV      R1,#+156
   \   0000012C   2900A0E3           MOV      R0,#+41
   \   00000130   ........           BL       BUTTON_CreateEx
    215          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmStartFinish);
   \   00000134   ........           LDR      R2,??DataTable61_6
   \   00000138   0010A0E3           MOV      R1,#+0
   \   0000013C   ........           BL       BUTTON_SetBitmap
    216          
    217          	hButton = BUTTON_CreateEx(261, 156, 178, 115, hTrackSettingMainScreen, WM_CF_SHOW, 0, RESETPL_BUTTON);
   \   00000140   0800A0E3           MOV      R0,#+8
   \   00000144   800E80E3           ORR      R0,R0,#0x800
   \   00000148   0C008DE5           STR      R0,[SP, #+12]
   \   0000014C   0000A0E3           MOV      R0,#+0
   \   00000150   08008DE5           STR      R0,[SP, #+8]
   \   00000154   0200A0E3           MOV      R0,#+2
   \   00000158   04008DE5           STR      R0,[SP, #+4]
   \   0000015C   040094E5           LDR      R0,[R4, #+4]
   \   00000160   7330A0E3           MOV      R3,#+115
   \   00000164   00008DE5           STR      R0,[SP, #+0]
   \   00000168   B220A0E3           MOV      R2,#+178
   \   0000016C   9C10A0E3           MOV      R1,#+156
   \   00000170   0500A0E1           MOV      R0,R5
   \   00000174   ........           BL       BUTTON_CreateEx
    218          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmResetPredictiveLap);
   \   00000178   ........           LDR      R2,??DataTable62
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   ........           BL       BUTTON_SetBitmap
    219          
    220          	hScreenTimer = WM_CreateTimer(hTrackSettingMainScreen, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   00000184   0030A0E3           MOV      R3,#+0
   \   00000188   7D20A0E3           MOV      R2,#+125
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   040094E5           LDR      R0,[R4, #+4]
   \   00000194   ........           BL       WM_CreateTimer
   \   00000198   ........           LDR      R1,??DataTable62_1
    221          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   0000019C   14D08DE2           ADD      SP,SP,#+20
   \   000001A0   000081E5           STR      R0,[R1, #+0]
   \   000001A4   3040BDE8           POP      {R4,R5,LR}
   \   000001A8   ........           B        ResetNewScreen   ;; tailcall
    222          }
    223          

   \                                 In section .text, align 4, keep-with-next
    224          static void TrackSettingMainScreenCallback(WM_MESSAGE * pMsg) {
   \                     TrackSettingMainScreenCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    225          	int NCode, Id;
    226          
    227          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0F0050E2           SUBS     R0,R0,#+15
   \   00000010   0F00000A           BEQ      ??TrackSettingMainScreenCallback_1
   \   00000014   170050E2           SUBS     R0,R0,#+23
   \   00000018   1B00000A           BEQ      ??TrackSettingMainScreenCallback_2
   \   0000001C   ED0050E2           SUBS     R0,R0,#+237
   \   00000020   4500001A           BNE      ??TrackSettingMainScreenCallback_3
    228          	{
    229          		case WM_TIMER:
    230          			if (pMsg->Data.v == hScreenTimer)
   \   00000024   ........           LDR      R0,??DataTable62_1
   \   00000028   0C1094E5           LDR      R1,[R4, #+12]
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000051E1           CMP      R1,R0
   \   00000034   4200001A           BNE      ??TrackSettingMainScreenCallback_4
    231          			{
    232          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000038   7D10A0E3           MOV      R1,#+125
   \   0000003C   ........           BL       WM_RestartTimer
    233          				WM_InvalidateRect(hTrackSettingMainScreen, &BannerRect);
   \   00000040   ........           LDR      R0,??DataTable61_3
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   ........           LDR      R1,??DataTable62_2
   \   0000004C   040090E5           LDR      R0,[R0, #+4]
   \   00000050   ........           B        WM_InvalidateRect  ;; tailcall
    234          			}
    235          			break;
    236          
    237          	case WM_PAINT:
    238          		GUI_DrawBitmap(&bmBackground, 0, 0);
   \                     ??TrackSettingMainScreenCallback_1:
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   ........           LDR      R0,??DataTable62_3
   \   00000060   ........           BL       GUI_DrawBitmap
    239          		GUI_DrawBitmap(&bmTrackSettingsText, 60, 1);
   \   00000064   0120A0E3           MOV      R2,#+1
   \   00000068   3C10A0E3           MOV      R1,#+60
   \   0000006C   ........           LDR      R0,??DataTable62_4
   \   00000070   ........           BL       GUI_DrawBitmap
    240          		GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   00000074   E520A0E3           MOV      R2,#+229
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   ........           LDR      R0,??DataTable62_5
   \   00000080   ........           BL       GUI_DrawBitmap
    241          		DrawSignalStrength();
   \   00000084   1040BDE8           POP      {R4,LR}
   \   00000088   ........           B        DrawSignalStrength  ;; tailcall
    242          		break;
    243          
    244          	case WM_NOTIFY_PARENT:
    245                Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??TrackSettingMainScreenCallback_2:
   \   0000008C   080094E5           LDR      R0,[R4, #+8]
   \   00000090   ........           BL       WM_GetId
    246                NCode = pMsg->Data.v;                 // Notification code
    247          	   switch(NCode)
   \   00000094   0C1094E5           LDR      R1,[R4, #+12]
   \   00000098   010051E3           CMP      R1,#+1
   \   0000009C   0300000A           BEQ      ??TrackSettingMainScreenCallback_5
   \   000000A0   2700003A           BCC      ??TrackSettingMainScreenCallback_4
   \   000000A4   020051E3           CMP      R1,#+2
   \   000000A8   0300000A           BEQ      ??TrackSettingMainScreenCallback_6
   \   000000AC   1080BDE8           POP      {R4,PC}
    248          		{
    249          			case WM_NOTIFICATION_CLICKED:
    250          				clickedOnVSMScreen = true;
   \                     ??TrackSettingMainScreenCallback_5:
   \   000000B0   ........           LDR      R0,??DataTable61_3
   \   000000B4   001080E5           STR      R1,[R0, #+0]
    251          				break;
   \   000000B8   1080BDE8           POP      {R4,PC}
    252          
    253          			case WM_NOTIFICATION_RELEASED:
    254          				if (clickedOnVSMScreen)
   \                     ??TrackSettingMainScreenCallback_6:
   \   000000BC   ........           LDR      R1,??DataTable61_3
   \   000000C0   002091E5           LDR      R2,[R1, #+0]
   \   000000C4   000052E3           CMP      R2,#+0
   \   000000C8   1D00000A           BEQ      ??TrackSettingMainScreenCallback_4
    255          					switch (Id)
   \   000000CC   010040E2           SUB      R0,R0,#+1
   \   000000D0   800E40E2           SUB      R0,R0,#+2048
   \   000000D4   070050E3           CMP      R0,#+7
   \   000000D8   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??TrackSettingMainScreenCallback_0:
   \   000000DC   1800008A           BHI      ??TrackSettingMainScreenCallback_4
   \   000000E0   060000EA           B        ??TrackSettingMainScreenCallback_7
   \   000000E4   090000EA           B        ??TrackSettingMainScreenCallback_8
   \   000000E8   0B0000EA           B        ??TrackSettingMainScreenCallback_9
   \   000000EC   140000EA           B        ??TrackSettingMainScreenCallback_4
   \   000000F0   130000EA           B        ??TrackSettingMainScreenCallback_4
   \   000000F4   120000EA           B        ??TrackSettingMainScreenCallback_4
   \   000000F8   110000EA           B        ??TrackSettingMainScreenCallback_4
   \   000000FC   0B0000EA           B        ??TrackSettingMainScreenCallback_10
    256          					{
    257          						case TRACKTYPE_BUTTON:
    258          							DisplayNewScreenList(TRACK_SETTINGS_SCREENS_TYPE, TRACKTYPE_SELECTION, hTrackSettingMainScreen);
   \                     ??TrackSettingMainScreenCallback_7:
   \   00000100   042091E5           LDR      R2,[R1, #+4]
   \   00000104   0010A0E3           MOV      R1,#+0
   \                     ??TrackSettingMainScreenCallback_11:
   \   00000108   1040BDE8           POP      {R4,LR}
   \   0000010C   050000EA           B        ??TrackSettingMainScreenCallback_12
    259          							break;
    260          
    261          						case LAPHOLD_BUTTON:
    262          							DisplayNewScreenList(TRACK_SETTINGS_SCREENS_TYPE, HOLDTIME_SELECTION, hTrackSettingMainScreen);
   \                     ??TrackSettingMainScreenCallback_8:
   \   00000110   042091E5           LDR      R2,[R1, #+4]
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   FAFFFFEA           B        ??TrackSettingMainScreenCallback_11
    263          							break;
    264          
    265          						case START_FINISH_BUTTON:
    266          							DisplayNewScreenList(TRACK_SETTINGS_SCREENS_TYPE, STARTFINISH_SELECTION, hTrackSettingMainScreen);
   \                     ??TrackSettingMainScreenCallback_9:
   \   0000011C   1040BDE8           POP      {R4,LR}
   \   00000120   042091E5           LDR      R2,[R1, #+4]
   \   00000124   0210A0E3           MOV      R1,#+2
   \                     ??TrackSettingMainScreenCallback_12:
   \   00000128   0D00A0E3           MOV      R0,#+13
   \   0000012C   ........           B        DisplayNewScreenList  ;; tailcall
    267          							break;
    268          
    269          						case RESETPL_BUTTON:
    270          							DisplayNewScreenList(TRACK_SETTINGS_SCREENS_TYPE, RESETPL_SELECTION, hTrackSettingMainScreen);
   \                     ??TrackSettingMainScreenCallback_10:
   \   00000130   042091E5           LDR      R2,[R1, #+4]
   \   00000134   0310A0E3           MOV      R1,#+3
   \   00000138   F2FFFFEA           B        ??TrackSettingMainScreenCallback_11
    271          							break;
    272          					}
    273          				break;
    274          	  };
    275          	  break;
    276          
    277          	default:
    278          		  WM_DefaultProc(pMsg);
   \                     ??TrackSettingMainScreenCallback_3:
   \   0000013C   0400A0E1           MOV      R0,R4
   \   00000140   ........           BL       WM_DefaultProc
    279          	};
    280          }
   \                     ??TrackSettingMainScreenCallback_4:
   \   00000144   1080BDE8           POP      {R4,PC}          ;; return
    281          

   \                                 In section .text, align 4, keep-with-next
    282          WM_HWIN GetTrackSettingMainWindowHandle(void)
    283          {
    284          	return hTrackSettingMainScreen;
   \                     GetTrackSettingMainWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable61_3
   \   00000004   040090E5           LDR      R0,[R0, #+4]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    285          }
    286          

   \                                 In section .text, align 4, keep-with-next
    287          void SetTrackSettingMainWindowHandle(WM_HWIN hWin)
    288          {
    289          	hTrackSettingMainScreen = hWin;
   \                     SetTrackSettingMainWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable61_3
   \   00000004   040081E5           STR      R0,[R1, #+4]
    290          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    291          
    292          

   \                                 In section .text, align 4, keep-with-next
    293          WM_HWIN GetTrackSettingsWindowHandle(void)
    294          {
    295          	return hTrackSettingsScreens;
   \                     GetTrackSettingsWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable62_6
   \   00000004   3C0090E5           LDR      R0,[R0, #+60]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    296          }
    297          

   \                                 In section .text, align 4, keep-with-next
    298          void SetTrackSettingsWindowHandle(WM_HWIN hWin)
    299          {
    300          	hTrackSettingsScreens = hWin;
   \                     SetTrackSettingsWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable62_6
   \   00000004   3C0081E5           STR      R0,[R1, #+60]
    301          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    302          

   \                                 In section .text, align 4, keep-with-next
    303          void TrackSettingsScreensCallback(WM_MESSAGE * pMsg)
    304          {
   \                     TrackSettingsScreensCallback:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    305          	int NCode, Id;
    306          	int Sel;
    307          
    308          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   84D04DE2           SUB      SP,SP,#+132
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   1200000A           BEQ      ??TrackSettingsScreensCallback_4
   \   00000018   0A0050E2           SUBS     R0,R0,#+10
   \   0000001C   1400000A           BEQ      ??TrackSettingsScreensCallback_5
   \   00000020   040050E2           SUBS     R0,R0,#+4
   \   00000024   1900000A           BEQ      ??TrackSettingsScreensCallback_6
   \   00000028   170050E2           SUBS     R0,R0,#+23
   \   0000002C   2A00000A           BEQ      ??TrackSettingsScreensCallback_7
   \   00000030   ED0050E2           SUBS     R0,R0,#+237
   \   00000034   8E00001A           BNE      ??TrackSettingsScreensCallback_8
    309          	{
    310          		case WM_TIMER:
    311          			if (pMsg->Data.v == hScreenTimer)
   \   00000038   ........           LDR      R0,??DataTable62_1
   \   0000003C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000040   000090E5           LDR      R0,[R0, #+0]
   \   00000044   000051E1           CMP      R1,R0
   \   00000048   2501001A           BNE      ??TrackSettingsScreensCallback_9
    312          			{
    313          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   0000004C   7D10A0E3           MOV      R1,#+125
   \   00000050   ........           BL       WM_RestartTimer
    314          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   00000054   ........           LDR      R1,??DataTable62_2
   \   00000058   040094E5           LDR      R0,[R4, #+4]
   \   0000005C   ........           BL       WM_InvalidateRect
   \   00000060   1F0100EA           B        ??TrackSettingsScreensCallback_9
    315          			}
    316          			break;
    317          
    318          
    319          		case WM_CREATE:
    320          			TrackSettingsIgnoreNextKeyRelease();
   \                     ??TrackSettingsScreensCallback_4:
   \   00000064   ........           LDR      R0,??DataTable62_6
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   401080E5           STR      R1,[R0, #+64]
    321          			break;
   \   00000070   1B0100EA           B        ??TrackSettingsScreensCallback_9
    322          
    323          		case WM_DELETE:
    324          			DeleteSFScreensKeyboards();
   \                     ??TrackSettingsScreensCallback_5:
   \   00000074   ........           BL       DeleteSFScreensKeyboards
    325          			hFinishLatButton = 0;
   \   00000078   ........           LDR      R4,??DataTable62_6
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   500084E5           STR      R0,[R4, #+80]
    326          			hFinishLongButton = 0;
   \   00000084   540084E5           STR      R0,[R4, #+84]
    327          			hFinishHeadButton = 0;
   \   00000088   580084E5           STR      R0,[R4, #+88]
    328          			break;
   \   0000008C   140100EA           B        ??TrackSettingsScreensCallback_9
    329          
    330          		case WM_PAINT:
    331          			if (GetScreenType() == TRACK_SETTINGS_SCREENS_TYPE)
   \                     ??TrackSettingsScreensCallback_6:
   \   00000090   ........           BL       GetScreenType
   \   00000094   0D0050E3           CMP      R0,#+13
   \   00000098   1101001A           BNE      ??TrackSettingsScreensCallback_9
    332          			{
    333          				GUI_Clear();		// Clear the background here (and not in the 'constructor') to reduce flicker
   \   0000009C   ........           BL       GUI_Clear
    334          				GUI_SetColor(GUI_WHITE);
   \   000000A0   FF04E0E3           MVN      R0,#-16777216
   \   000000A4   ........           BL       GUI_SetColor
    335          				GUI_SetFont(&GUI_Font32_ASCII);
   \   000000A8   ........           LDR      R0,??DataTable62_7
   \   000000AC   ........           BL       GUI_SetFont
    336          
    337          				// Call paint method of center screen
    338          				TrackSettingsScreenList[GetLastScreen(TRACK_SETTINGS_SCREENS_TYPE)].paint(hTrackSettingsScreens);
   \   000000B0   0D00A0E3           MOV      R0,#+13
   \   000000B4   ........           BL       GetLastScreen
   \   000000B8   0010A0E1           MOV      R1,R0
   \   000000BC   ........           LDR      R4,??DataTable62_6
   \   000000C0   0C20A0E3           MOV      R2,#+12
   \   000000C4   924121E0           MLA      R1,R2,R1,R4
   \   000000C8   3C0094E5           LDR      R0,[R4, #+60]
   \   000000CC   081091E5           LDR      R1,[R1, #+8]
   \   000000D0   31FF2FE1           BLX      R1
    339          				DrawSignalStrength();
   \   000000D4   ........           BL       DrawSignalStrength
   \   000000D8   010100EA           B        ??TrackSettingsScreensCallback_9
    340          			}
    341          			break;
    342          
    343          		case WM_NOTIFY_PARENT:
    344          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??TrackSettingsScreensCallback_7:
   \   000000DC   080094E5           LDR      R0,[R4, #+8]
   \   000000E0   ........           BL       WM_GetId
   \   000000E4   0060A0E1           MOV      R6,R0
    345          			NCode = pMsg->Data.v;				// Notification code
    346          			switch (NCode)
   \   000000E8   0C0094E5           LDR      R0,[R4, #+12]
   \   000000EC   010050E2           SUBS     R0,R0,#+1
   \   000000F0   5700000A           BEQ      ??TrackSettingsScreensCallback_10
   \   000000F4   010050E2           SUBS     R0,R0,#+1
   \   000000F8   6000000A           BEQ      ??TrackSettingsScreensCallback_11
   \   000000FC   020050E2           SUBS     R0,R0,#+2
   \   00000100   F700001A           BNE      ??TrackSettingsScreensCallback_9
    347          			{
    348          				case WM_NOTIFICATION_SEL_CHANGED:
    349          					if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \   00000104   080094E5           LDR      R0,[R4, #+8]
   \   00000108   ........           BL       LISTWHEEL_GetVelocity
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   00006042           RSBMI    R0,R0,#+0
   \   00000114   020050E3           CMP      R0,#+2
   \   00000118   F10000AA           BGE      ??TrackSettingsScreensCallback_9
    350          					{
    351          						switch(Id)
   \   0000011C   986F56E2           SUBS     R6,R6,#+608
   \   00000120   1200000A           BEQ      ??TrackSettingsScreensCallback_12
   \   00000124   016056E2           SUBS     R6,R6,#+1
   \   00000128   ED00001A           BNE      ??TrackSettingsScreensCallback_9
    352          						{
    353          						case LAPHOLD_LIST:
    354          							{
    355          								unsigned char temp;
    356          
    357          								temp = (Sel = LISTWHEEL_GetPos(pMsg->hWinSrc)) * 10;
   \   0000012C   080094E5           LDR      R0,[R4, #+8]
   \   00000130   ........           BL       LISTWHEEL_GetPos
   \   00000134   0010A0E1           MOV      R1,R0
   \   00000138   0A20A0E3           MOV      R2,#+10
    358          								if (temp != trackData.laptimeHold)
   \   0000013C   ........           LDR      R5,??DataTable66
   \   00000140   800260E1           SMULBB   R0,R0,R2
   \   00000144   4120D5E5           LDRB     R2,[R5, #+65]
   \   00000148   FF0000E2           AND      R0,R0,#0xFF
   \   0000014C   020050E1           CMP      R0,R2
   \   00000150   E300000A           BEQ      ??TrackSettingsScreensCallback_9
    359          								{
    360          									trackData.laptimeHold = temp;
   \   00000154   4100C5E5           STRB     R0,[R5, #+65]
    361          									LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   00000158   080094E5           LDR      R0,[R4, #+8]
   \   0000015C   ........           BL       LISTWHEEL_SetSel
    362          									alteredTrackData = true;
   \                     ??TrackSettingsScreensCallback_13:
   \   00000160   ........           LDR      R0,??DataTable62_6
   \   00000164   0110A0E3           MOV      R1,#+1
   \   00000168   5C10C0E5           STRB     R1,[R0, #+92]
   \   0000016C   DC0000EA           B        ??TrackSettingsScreensCallback_9
    363          								}
    364          							}
    365          							break;
    366          
    367          						case TRACKTYPE_LIST:
    368          							LISTWHEEL_SetSel(pMsg->hWinSrc, Sel = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??TrackSettingsScreensCallback_12:
   \   00000170   080094E5           LDR      R0,[R4, #+8]
   \   00000174   ........           BL       LISTWHEEL_GetPos
   \   00000178   0060A0E1           MOV      R6,R0
   \   0000017C   0610A0E1           MOV      R1,R6
   \   00000180   080094E5           LDR      R0,[R4, #+8]
   \   00000184   ........           BL       LISTWHEEL_SetSel
    369          							if (IndexToCourseType(Sel) != trackData.courseType)
   \   00000188   FF6006E2           AND      R6,R6,#0xFF
   \   0000018C   010046E2           SUB      R0,R6,#+1
   \   00000190   040050E3           CMP      R0,#+4
   \   00000194   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??TrackSettingsScreensCallback_0:
   \   00000198   0E00008A           BHI      ??TrackSettingsScreensCallback_14
   \   0000019C   0B0000EA           B        ??TrackSettingsScreensCallback_15
   \   000001A0   080000EA           B        ??TrackSettingsScreensCallback_16
   \   000001A4   050000EA           B        ??TrackSettingsScreensCallback_17
   \   000001A8   020000EA           B        ??TrackSettingsScreensCallback_18
   \   000001AC   FFFFFFEA           B        ??TrackSettingsScreensCallback_19
   \                     ??TrackSettingsScreensCallback_19:
   \   000001B0   0700A0E3           MOV      R0,#+7
   \   000001B4   080000EA           B        ??TrackSettingsScreensCallback_20
   \                     ??TrackSettingsScreensCallback_18:
   \   000001B8   0600A0E3           MOV      R0,#+6
   \   000001BC   060000EA           B        ??TrackSettingsScreensCallback_20
   \                     ??TrackSettingsScreensCallback_17:
   \   000001C0   0500A0E3           MOV      R0,#+5
   \   000001C4   040000EA           B        ??TrackSettingsScreensCallback_20
   \                     ??TrackSettingsScreensCallback_16:
   \   000001C8   0200A0E3           MOV      R0,#+2
   \   000001CC   020000EA           B        ??TrackSettingsScreensCallback_20
   \                     ??TrackSettingsScreensCallback_15:
   \   000001D0   0100A0E3           MOV      R0,#+1
   \   000001D4   000000EA           B        ??TrackSettingsScreensCallback_20
   \                     ??TrackSettingsScreensCallback_14:
   \   000001D8   0000A0E3           MOV      R0,#+0
   \                     ??TrackSettingsScreensCallback_20:
   \   000001DC   ........           LDR      R5,??DataTable66
   \   000001E0   4010D5E5           LDRB     R1,[R5, #+64]
   \   000001E4   010050E1           CMP      R0,R1
   \   000001E8   BD00000A           BEQ      ??TrackSettingsScreensCallback_9
    370          							{
    371          								sysData.selectedSessionType = TrackTypeToSessionType((enum TRACK_TYPES)(trackData.courseType = IndexToCourseType(Sel)));
   \   000001EC   016046E2           SUB      R6,R6,#+1
   \   000001F0   040056E3           CMP      R6,#+4
   \   000001F4   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??TrackSettingsScreensCallback_1:
   \   000001F8   0E00008A           BHI      ??TrackSettingsScreensCallback_21
   \   000001FC   0B0000EA           B        ??TrackSettingsScreensCallback_22
   \   00000200   080000EA           B        ??TrackSettingsScreensCallback_23
   \   00000204   050000EA           B        ??TrackSettingsScreensCallback_24
   \   00000208   020000EA           B        ??TrackSettingsScreensCallback_25
   \   0000020C   FFFFFFEA           B        ??TrackSettingsScreensCallback_26
   \                     ??TrackSettingsScreensCallback_26:
   \   00000210   0700A0E3           MOV      R0,#+7
   \   00000214   080000EA           B        ??TrackSettingsScreensCallback_27
   \                     ??TrackSettingsScreensCallback_25:
   \   00000218   0600A0E3           MOV      R0,#+6
   \   0000021C   060000EA           B        ??TrackSettingsScreensCallback_27
   \                     ??TrackSettingsScreensCallback_24:
   \   00000220   0500A0E3           MOV      R0,#+5
   \   00000224   040000EA           B        ??TrackSettingsScreensCallback_27
   \                     ??TrackSettingsScreensCallback_23:
   \   00000228   0200A0E3           MOV      R0,#+2
   \   0000022C   020000EA           B        ??TrackSettingsScreensCallback_27
   \                     ??TrackSettingsScreensCallback_22:
   \   00000230   0100A0E3           MOV      R0,#+1
   \   00000234   000000EA           B        ??TrackSettingsScreensCallback_27
   \                     ??TrackSettingsScreensCallback_21:
   \   00000238   0000A0E3           MOV      R0,#+0
   \                     ??TrackSettingsScreensCallback_27:
   \   0000023C   4000C5E5           STRB     R0,[R5, #+64]
   \   00000240   4000D5E5           LDRB     R0,[R5, #+64]
   \   00000244   ........           BL       TrackTypeToSessionType
   \   00000248   ........           LDR      R1,??DataTable66_1
   \   0000024C   D000C1E5           STRB     R0,[R1, #+208]
    372          								alteredTrackData = true;
   \   00000250   C2FFFFEA           B        ??TrackSettingsScreensCallback_13
    373          							}
    374          							break;
    375          						}
    376          					}
    377          					break;
    378          
    379          				case WM_NOTIFICATION_CLICKED:
    380          					clickedOnVSScreen = true;
   \                     ??TrackSettingsScreensCallback_10:
   \   00000254   ........           LDR      R1,??DataTable62_6
   \   00000258   0100A0E3           MOV      R0,#+1
    381          					switch (Id)
   \   0000025C   986F46E2           SUB      R6,R6,#+608
   \   00000260   400081E5           STR      R0,[R1, #+64]
   \   00000264   010056E3           CMP      R6,#+1
    382          					{
    383          						case TRACKTYPE_LIST:
    384          						case LAPHOLD_LIST:
    385          							pressingbutton_semaphore = 1;
   \   00000268   ........           LDRLS    R1,??DataTable67
   \   0000026C   00008195           STRLS    R0,[R1, #+0]
    386          							break;
   \   00000270   9B00009A           BLS      ??TrackSettingsScreensCallback_9
    387          
    388          						default:
    389          							WM_DefaultProc(pMsg);
   \                     ??TrackSettingsScreensCallback_8:
   \   00000274   0400A0E1           MOV      R0,R4
   \   00000278   ........           BL       WM_DefaultProc
   \   0000027C   980000EA           B        ??TrackSettingsScreensCallback_9
    390          					}
    391          					break;
    392          
    393          				case WM_NOTIFICATION_RELEASED:
    394          					pressingbutton_semaphore = 0;
   \                     ??TrackSettingsScreensCallback_11:
   \   00000280   ........           LDR      R1,??DataTable67
   \   00000284   0000A0E3           MOV      R0,#+0
    395          					if (!clickedOnVSScreen)
   \   00000288   ........           LDR      R4,??DataTable62_6
   \   0000028C   000081E5           STR      R0,[R1, #+0]
   \   00000290   401094E5           LDR      R1,[R4, #+64]
   \   00000294   000051E3           CMP      R1,#+0
   \   00000298   9100000A           BEQ      ??TrackSettingsScreensCallback_9
    396          						break;
    397          
    398          					switch (Id)
   \   0000029C   041046E2           SUB      R1,R6,#+4
   \   000002A0   801E41E2           SUB      R1,R1,#+2048
   \   000002A4   080051E3           CMP      R1,#+8
   \   000002A8   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??TrackSettingsScreensCallback_2:
   \   000002AC   8C00008A           BHI      ??TrackSettingsScreensCallback_9
   \   000002B0   0E0000EA           B        ??TrackSettingsScreensCallback_28
   \   000002B4   5E0000EA           B        ??TrackSettingsScreensCallback_29
   \   000002B8   5D0000EA           B        ??TrackSettingsScreensCallback_29
   \   000002BC   5C0000EA           B        ??TrackSettingsScreensCallback_29
   \   000002C0   870000EA           B        ??TrackSettingsScreensCallback_9
   \   000002C4   020000EA           B        ??TrackSettingsScreensCallback_30
   \   000002C8   590000EA           B        ??TrackSettingsScreensCallback_29
   \   000002CC   580000EA           B        ??TrackSettingsScreensCallback_29
   \   000002D0   570000EA           B        ??TrackSettingsScreensCallback_29
    399          					{
    400          						case RESET_FASTEST_LAP:
    401          							trackData.bestLapEver = 0;
   \                     ??TrackSettingsScreensCallback_30:
   \   000002D4   ........           LDR      R1,??DataTable66
   \   000002D8   440081E5           STR      R0,[R1, #+68]
    402          							WM_Invalidate(hTrackSettingsScreens);
   \   000002DC   3C0094E5           LDR      R0,[R4, #+60]
   \   000002E0   ........           BL       WM_InvalidateWindow
    403          							alteredTrackData = true;
   \                     ??TrackSettingsScreensCallback_31:
   \   000002E4   0100A0E3           MOV      R0,#+1
   \   000002E8   5C00C4E5           STRB     R0,[R4, #+92]
    404          							break;
   \   000002EC   7C0000EA           B        ??TrackSettingsScreensCallback_9
    405          
    406          						case CLEAR_SF_BUTTON:
    407          							if (okToResetSF() == GUI_ID_YES)
   \                     ??TrackSettingsScreensCallback_28:
   \   000002F0   0100A0E3           MOV      R0,#+1
   \   000002F4   ........           BL       SetPopupDefaults
   \   000002F8   0A00A0E3           MOV      R0,#+10
   \   000002FC   04008DE5           STR      R0,[SP, #+4]
   \   00000300   00008DE5           STR      R0,[SP, #+0]
   \   00000304   3C3094E5           LDR      R3,[R4, #+60]
   \   00000308   ........           LDR      R2,??DataTable67_2
   \   0000030C   0510A0E3           MOV      R1,#+5
   \   00000310   ............       ADRL     R0,ResetSFDialog
   \              ....        
   \   00000318   ........           BL       GUI_ExecDialogBox
   \   0000031C   030050E3           CMP      R0,#+3
   \   00000320   6F00001A           BNE      ??TrackSettingsScreensCallback_9
    408          							{
    409          								trackData.startLineLat = 0.0;
   \   00000324   ........           LDR      R5,??DataTable66
   \   00000328   0000A0E3           MOV      R0,#+0
   \   0000032C   0010A0E3           MOV      R1,#+0
   \   00000330   F001C5E1           STRD     R0,R1,[R5, #+16]
    410          								trackData.startLineLong = 0.0;
   \   00000334   F801C5E1           STRD     R0,R1,[R5, #+24]
    411          								trackData.startLineHeading = 0.0;
   \   00000338   240085E5           STR      R0,[R5, #+36]
    412          								trackData.finishLineLat = 0.0;
   \   0000033C   0020A0E3           MOV      R2,#+0
   \   00000340   0030A0E3           MOV      R3,#+0
   \   00000344   F822C5E1           STRD     R2,R3,[R5, #+40]
    413          								trackData.finishLineLong = 0.0;
   \   00000348   F023C5E1           STRD     R2,R3,[R5, #+48]
    414          								trackData.finishLineHeading = 0.0;
    415          								SetHeadButtonText();
   \   0000034C   ............       ADRL     R6,`?<Constant "%.0f">`
   \              ....        
   \   00000354   3C0085E5           STR      R0,[R5, #+60]
   \   00000358   0610A0E1           MOV      R1,R6
   \   0000035C   60008DE2           ADD      R0,SP,#+96
   \   00000360   ........           BL       sprintf
   \   00000364   60108DE2           ADD      R1,SP,#+96
   \   00000368   4C0094E5           LDR      R0,[R4, #+76]
   \   0000036C   ........           BL       BUTTON_SetText
    416          								SetLongButtonText();
   \   00000370   ........           ADR      R7,??DataTable54  ;; 0x25, 0x66, 0x00, 0x00
   \   00000374   D821C5E1           LDRD     R2,R3,[R5, #+24]
   \   00000378   0710A0E1           MOV      R1,R7
   \   0000037C   40008DE2           ADD      R0,SP,#+64
   \   00000380   ........           BL       sprintf
   \   00000384   40108DE2           ADD      R1,SP,#+64
   \   00000388   480094E5           LDR      R0,[R4, #+72]
   \   0000038C   ........           BL       BUTTON_SetText
    417          								SetLatButtonText();
   \   00000390   D021C5E1           LDRD     R2,R3,[R5, #+16]
   \   00000394   0710A0E1           MOV      R1,R7
   \   00000398   20008DE2           ADD      R0,SP,#+32
   \   0000039C   ........           BL       sprintf
   \   000003A0   20108DE2           ADD      R1,SP,#+32
   \   000003A4   440094E5           LDR      R0,[R4, #+68]
   \   000003A8   ........           BL       BUTTON_SetText
    418          								SetFinishHeadButtonText();
   \   000003AC   580094E5           LDR      R0,[R4, #+88]
   \   000003B0   000050E3           CMP      R0,#+0
   \   000003B4   0900000A           BEQ      ??TrackSettingsScreensCallback_32
   \   000003B8   3C0095E5           LDR      R0,[R5, #+60]
   \   000003BC   ........           BL       __aeabi_f2d
   \   000003C0   0020A0E1           MOV      R2,R0
   \   000003C4   0130A0E1           MOV      R3,R1
   \   000003C8   0610A0E1           MOV      R1,R6
   \   000003CC   0D00A0E1           MOV      R0,SP
   \   000003D0   ........           BL       sprintf
   \   000003D4   0D10A0E1           MOV      R1,SP
   \   000003D8   580094E5           LDR      R0,[R4, #+88]
   \   000003DC   ........           BL       BUTTON_SetText
    419          								SetFinishLongButtonText();
   \                     ??TrackSettingsScreensCallback_32:
   \   000003E0   540094E5           LDR      R0,[R4, #+84]
   \   000003E4   000050E3           CMP      R0,#+0
   \   000003E8   0600000A           BEQ      ??TrackSettingsScreensCallback_33
   \   000003EC   D023C5E1           LDRD     R2,R3,[R5, #+48]
   \   000003F0   0710A0E1           MOV      R1,R7
   \   000003F4   0D00A0E1           MOV      R0,SP
   \   000003F8   ........           BL       sprintf
   \   000003FC   0D10A0E1           MOV      R1,SP
   \   00000400   540094E5           LDR      R0,[R4, #+84]
   \   00000404   ........           BL       BUTTON_SetText
    420          								SetFinishLatButtonText();
   \                     ??TrackSettingsScreensCallback_33:
   \   00000408   500094E5           LDR      R0,[R4, #+80]
   \   0000040C   000050E3           CMP      R0,#+0
   \   00000410   B3FFFF0A           BEQ      ??TrackSettingsScreensCallback_31
   \   00000414   D822C5E1           LDRD     R2,R3,[R5, #+40]
   \   00000418   0710A0E1           MOV      R1,R7
   \   0000041C   0D00A0E1           MOV      R0,SP
   \   00000420   ........           BL       sprintf
   \   00000424   0D10A0E1           MOV      R1,SP
   \   00000428   500094E5           LDR      R0,[R4, #+80]
   \   0000042C   ........           BL       BUTTON_SetText
    421          								alteredTrackData = true;
   \   00000430   ABFFFFEA           B        ??TrackSettingsScreensCallback_31
    422          							}
    423          							break;
    424          
    425          						case START_LATITUDE_BUTTON:
    426          						case START_LONGITUDE_BUTTON:
    427          						case START_HEADING_BUTTON:
    428          						case FINISH_LATITUDE_BUTTON:
    429          						case FINISH_LONGITUDE_BUTTON:
    430          						case FINISH_HEADING_BUTTON:
    431          							if (NeedToEditStartFinish())
   \                     ??TrackSettingsScreensCallback_29:
   \   00000434   ........           LDR      R5,??DataTable66
   \   00000438   4000D5E5           LDRB     R0,[R5, #+64]
   \   0000043C   040050E3           CMP      R0,#+4
   \   00000440   03005013           CMPNE    R0,#+3
   \   00000444   05005013           CMPNE    R0,#+5
   \   00000448   2500000A           BEQ      ??TrackSettingsScreensCallback_9
    432          								DisplaySFKeyboard(TSButtonToScreenID(Id), hTrackSettingsScreens);
   \   0000044C   066046E2           SUB      R6,R6,#+6
   \   00000450   806E46E2           SUB      R6,R6,#+2048
   \   00000454   060056E3           CMP      R6,#+6
   \   00000458   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??TrackSettingsScreensCallback_3:
   \   0000045C   1700008A           BHI      ??TrackSettingsScreensCallback_34
   \   00000460   100000EA           B        ??TrackSettingsScreensCallback_35
   \   00000464   0A0000EA           B        ??TrackSettingsScreensCallback_36
   \   00000468   140000EA           B        ??TrackSettingsScreensCallback_34
   \   0000046C   130000EA           B        ??TrackSettingsScreensCallback_34
   \   00000470   050000EA           B        ??TrackSettingsScreensCallback_37
   \   00000474   020000EA           B        ??TrackSettingsScreensCallback_38
   \   00000478   FFFFFFEA           B        ??TrackSettingsScreensCallback_39
   \                     ??TrackSettingsScreensCallback_39:
   \   0000047C   0800A0E3           MOV      R0,#+8
   \   00000480   150000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_38:
   \   00000484   0600A0E3           MOV      R0,#+6
   \   00000488   130000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_37:
   \   0000048C   0700A0E3           MOV      R0,#+7
   \   00000490   110000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_36:
   \   00000494   000050E3           CMP      R0,#+0
   \   00000498   01005013           CMPNE    R0,#+1
   \   0000049C   0500A013           MOVNE    R0,#+5
   \   000004A0   0200A003           MOVEQ    R0,#+2
   \   000004A4   0C0000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_35:
   \   000004A8   000050E3           CMP      R0,#+0
   \   000004AC   0A00000A           BEQ      ??TrackSettingsScreensCallback_40
   \   000004B0   010050E3           CMP      R0,#+1
   \   000004B4   0300A013           MOVNE    R0,#+3
   \   000004B8   0000A003           MOVEQ    R0,#+0
   \   000004BC   060000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_34:
   \   000004C0   000050E3           CMP      R0,#+0
   \   000004C4   0300000A           BEQ      ??TrackSettingsScreensCallback_41
   \   000004C8   010050E3           CMP      R0,#+1
   \   000004CC   0200000A           BEQ      ??TrackSettingsScreensCallback_40
   \   000004D0   0400A0E3           MOV      R0,#+4
   \   000004D4   000000EA           B        ??TrackSettingsScreensCallback_40
   \                     ??TrackSettingsScreensCallback_41:
   \   000004D8   0100A0E3           MOV      R0,#+1
    433          							break;
    434          					}
    435          					break;
    436          			}
    437          			break;
    438          
    439          		default:
    440          			WM_DefaultProc(pMsg);
    441          	}
   \                     ??TrackSettingsScreensCallback_40:
   \   000004DC   3C1094E5           LDR      R1,[R4, #+60]
   \   000004E0   ........           BL       DisplaySFKeyboard
    442          }
   \                     ??TrackSettingsScreensCallback_9:
   \   000004E4   84D08DE2           ADD      SP,SP,#+132      ;; stack cleaning
   \   000004E8   F080BDE8           POP      {R4-R7,PC}       ;; return
    443          

   \                                 In section .text, align 4, keep-with-next
    444          int TSButtonToScreenID(int Id)
    445          {
    446          	switch (Id)
   \                     TSButtonToScreenID:
   \   00000000   060040E2           SUB      R0,R0,#+6
   \   00000004   800E40E2           SUB      R0,R0,#+2048
   \   00000008   060050E3           CMP      R0,#+6
   \   0000000C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??TSButtonToScreenID_0:
   \   00000010   0600008A           BHI      ??TSButtonToScreenID_1
   \   00000014   0F0000EA           B        ??TSButtonToScreenID_2
   \   00000018   180000EA           B        ??TSButtonToScreenID_3
   \   0000001C   030000EA           B        ??TSButtonToScreenID_1
   \   00000020   020000EA           B        ??TSButtonToScreenID_1
   \   00000024   1E0000EA           B        ??TSButtonToScreenID_4
   \   00000028   1F0000EA           B        ??TSButtonToScreenID_5
   \   0000002C   200000EA           B        ??TSButtonToScreenID_6
    447          	{
    448          	default:
    449          	case START_LATITUDE_BUTTON:
    450          		if (OpenCourse())
   \                     ??TSButtonToScreenID_1:
   \   00000030   ........           LDR      R0,??DataTable70
   \   00000034   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0300000A           BEQ      ??TSButtonToScreenID_7
   \   00000040   010050E3           CMP      R0,#+1
   \   00000044   1B00000A           BEQ      ??TSButtonToScreenID_8
    451          			return START_LATITUDE_SCREEN;
   \   00000048   0400A0E3           MOV      R0,#+4
   \   0000004C   1EFF2FE1           BX       LR
    452          		else return LATITUDE_SCREEN;
   \                     ??TSButtonToScreenID_7:
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   1EFF2FE1           BX       LR
    453          	case START_LONGITUDE_BUTTON:
    454          		if (OpenCourse())
   \                     ??TSButtonToScreenID_2:
   \   00000058   ........           LDR      R0,??DataTable70
   \   0000005C   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   1300000A           BEQ      ??TSButtonToScreenID_8
   \   00000068   010050E3           CMP      R0,#+1
   \   0000006C   0100000A           BEQ      ??TSButtonToScreenID_9
    455          			return START_LONGITUDE_SCREEN;
   \   00000070   0300A0E3           MOV      R0,#+3
   \   00000074   1EFF2FE1           BX       LR
    456          		else return LONGITUDE_SCREEN;
   \                     ??TSButtonToScreenID_9:
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   1EFF2FE1           BX       LR
    457          	case START_HEADING_BUTTON:
    458          		if (OpenCourse())
   \                     ??TSButtonToScreenID_3:
   \   00000080   ........           LDR      R0,??DataTable70
   \   00000084   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   01005013           CMPNE    R0,#+1
   \   00000090   0100000A           BEQ      ??TSButtonToScreenID_10
    459          			return START_HEADING_SCREEN;
   \   00000094   0500A0E3           MOV      R0,#+5
   \   00000098   1EFF2FE1           BX       LR
    460          		else return HEADING_SCREEN;
   \                     ??TSButtonToScreenID_10:
   \   0000009C   0200A0E3           MOV      R0,#+2
   \   000000A0   1EFF2FE1           BX       LR
    461          	case FINISH_LATITUDE_BUTTON:	return FINISH_LATITUDE_SCREEN;
   \                     ??TSButtonToScreenID_4:
   \   000000A4   0700A0E3           MOV      R0,#+7
   \   000000A8   1EFF2FE1           BX       LR
    462          	case FINISH_LONGITUDE_BUTTON:	return FINISH_LONGITUDE_SCREEN;
   \                     ??TSButtonToScreenID_5:
   \   000000AC   0600A0E3           MOV      R0,#+6
   \   000000B0   1EFF2FE1           BX       LR
    463          	case FINISH_HEADING_BUTTON:		return FINISH_HEADING_SCREEN;
   \                     ??TSButtonToScreenID_6:
   \   000000B4   0800A0E3           MOV      R0,#+8
   \                     ??TSButtonToScreenID_8:
   \   000000B8   1EFF2FE1           BX       LR               ;; return
    464          	}
    465          }
    466          
    467          

   \                                 In section .text, align 4, keep-with-next
    468          void DisplayTrackType(WM_HWIN hParent)
    469          {
   \                     DisplayTrackType:
   \   00000000   00402DE9           PUSH     {LR}
    470          	DisplayStdListScreen(hParent, pTrackTypes, TRACKTYPE_LIST, &hTrackTypeWheel, CourseTypeToIndex((enum TRACK_TYPES)trackData.courseType), TEXT_ONLY, "Select Race Type");
   \   00000004   ........           LDR      R1,??DataTable66
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   4010D1E5           LDRB     R1,[R1, #+64]
   \   00000010   011041E2           SUB      R1,R1,#+1
   \   00000014   060051E3           CMP      R1,#+6
   \   00000018   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??DisplayTrackType_0:
   \   0000001C   1000008A           BHI      ??DisplayTrackType_1
   \   00000020   0D0000EA           B        ??DisplayTrackType_2
   \   00000024   0A0000EA           B        ??DisplayTrackType_3
   \   00000028   070000EA           B        ??DisplayTrackType_4
   \   0000002C   060000EA           B        ??DisplayTrackType_4
   \   00000030   050000EA           B        ??DisplayTrackType_4
   \   00000034   020000EA           B        ??DisplayTrackType_5
   \   00000038   FFFFFFEA           B        ??DisplayTrackType_6
   \                     ??DisplayTrackType_6:
   \   0000003C   0520A0E3           MOV      R2,#+5
   \   00000040   080000EA           B        ??DisplayTrackType_7
   \                     ??DisplayTrackType_5:
   \   00000044   0420A0E3           MOV      R2,#+4
   \   00000048   060000EA           B        ??DisplayTrackType_7
   \                     ??DisplayTrackType_4:
   \   0000004C   0320A0E3           MOV      R2,#+3
   \   00000050   040000EA           B        ??DisplayTrackType_7
   \                     ??DisplayTrackType_3:
   \   00000054   0220A0E3           MOV      R2,#+2
   \   00000058   020000EA           B        ??DisplayTrackType_7
   \                     ??DisplayTrackType_2:
   \   0000005C   0120A0E3           MOV      R2,#+1
   \   00000060   000000EA           B        ??DisplayTrackType_7
   \                     ??DisplayTrackType_1:
   \   00000064   0020A0E3           MOV      R2,#+0
   \                     ??DisplayTrackType_7:
   \   00000068   ............       ADRL     R3,`?<Constant "Select Race Type">`
   \              ....        
   \   00000070   ........           LDR      R1,??DataTable70_1
   \   00000074   08308DE5           STR      R3,[SP, #+8]
   \   00000078   0030A0E3           MOV      R3,#+0
   \   0000007C   04308DE5           STR      R3,[SP, #+4]
   \   00000080   00208DE5           STR      R2,[SP, #+0]
   \   00000084   1C3081E2           ADD      R3,R1,#+28
   \   00000088   982FA0E3           MOV      R2,#+608
   \   0000008C   ........           BL       DisplayStdListScreen
    471          }
   \   00000090   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000094   0080BDE8           POP      {PC}             ;; return
    472          

   \                                 In section .text, align 4, keep-with-next
    473          void DisplayHoldTime(WM_HWIN hParent)
    474          {
   \                     DisplayHoldTime:
   \   00000000   00402DE9           PUSH     {LR}
    475          	DisplayStdListScreen(hParent, LapHoldTimes, LAPHOLD_LIST, &hHoldTimeListWheel, trackData.laptimeHold / 10, TEXT_ONLY, "On-Screen Time");
   \   00000004   ............       ADRL     R2,`?<Constant "On-Screen Time">`
   \              ....        
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   08208DE5           STR      R2,[SP, #+8]
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   04208DE5           STR      R2,[SP, #+4]
   \   0000001C   ........           LDR      R2,??DataTable66
   \   00000020   ........           LDR      R3,??DataTable70_2  ;; 0x66666667
   \   00000024   4120D2E5           LDRB     R2,[R2, #+65]
   \   00000028   ........           LDR      R1,??DataTable70_3
   \   0000002C   92C3C3E0           SMULL    R12,R3,R2,R3
   \   00000030   4321B0E1           ASRS     R2,R3,#+2
   \   00000034   01208242           ADDMI    R2,R2,#+1
   \   00000038   00208DE5           STR      R2,[SP, #+0]
   \   0000003C   6120A0E3           MOV      R2,#+97
   \   00000040   503081E2           ADD      R3,R1,#+80
   \   00000044   802F82E3           ORR      R2,R2,#0x200
   \   00000048   ........           BL       DisplayStdListScreen
    476          }
   \   0000004C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000050   0080BDE8           POP      {PC}             ;; return
    477          

   \                                 In section .text, align 4, keep-with-next
    478          void TrackTypePaint(WM_HWIN hParent)
    479          {
   \                     TrackTypePaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    480          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable70_4
   \   00000014   ........           BL       GUI_DrawBitmap
    481          	GUI_DrawBitmap(&bmSingleSpinner, SPINNER_START, 42);
   \   00000018   2A20A0E3           MOV      R2,#+42
   \   0000001C   F010A0E3           MOV      R1,#+240
   \   00000020   ........           LDR      R0,??DataTable70_5
   \   00000024   ........           BL       GUI_DrawBitmap
    482          	GUI_DrawBitmap(&bmTrackTypeText, 60, 0);
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   3C10A0E3           MOV      R1,#+60
   \   00000030   ........           LDR      R0,??DataTable70_6
   \   00000034   ........           BL       GUI_DrawBitmap
    483          	GUI_DrawBitmap(GetNavigationArrow(TRACKTYPE_SELECTION), 0, 229);
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   0040BDE8           POP      {LR}
   \   00000040   E520A0E3           MOV      R2,#+229
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           LDR      R0,??DataTable70_7
   \   0000004C   ........           B        GUI_DrawBitmap   ;; tailcall
    484          }
    485          
    486          
    487          

   \                                 In section .text, align 4, keep-with-next
    488          void HoldTimePaint(WM_HWIN hParent)
    489          {
   \                     HoldTimePaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    490          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable70_4
   \   00000014   ........           BL       GUI_DrawBitmap
    491          	GUI_DrawBitmap(&bmSingleSpinner, SPINNER_START, 42);
   \   00000018   2A20A0E3           MOV      R2,#+42
   \   0000001C   F010A0E3           MOV      R1,#+240
   \   00000020   ........           LDR      R0,??DataTable70_5
   \   00000024   ........           BL       GUI_DrawBitmap
    492          	GUI_DrawBitmap(&bmLaptimeHold, 60, 0);
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   3C10A0E3           MOV      R1,#+60
   \   00000030   ........           LDR      R0,??DataTable70_8
   \   00000034   ........           BL       GUI_DrawBitmap
    493          	GUI_DrawBitmap(GetNavigationArrow(HOLDTIME_SELECTION), 0, 229);
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   0040BDE8           POP      {LR}
   \   00000040   E520A0E3           MOV      R2,#+229
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           LDR      R0,??DataTable70_7
   \   0000004C   ........           B        GUI_DrawBitmap   ;; tailcall
    494          }
    495          

   \                                 In section .text, align 4, keep-with-next
    496          void SetLatButtonText(void)
    497          {
   \                     SetLatButtonText:
   \   00000000   00402DE9           PUSH     {LR}
    498          	char scratch[30];
    499          
    500          	sprintf(scratch, "%f", trackData.startLineLat);
   \   00000004   ........           LDR      R0,??DataTable66
   \   00000008   24D04DE2           SUB      SP,SP,#+36
   \   0000000C   D021C0E1           LDRD     R2,R3,[R0, #+16]
   \   00000010   ........           ADR      R1,??DataTable61  ;; 0x25, 0x66, 0x00, 0x00
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       sprintf
    501          	BUTTON_SetText(hStartLatButton, scratch);
   \   0000001C   ........           LDR      R0,??DataTable70_9
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   440090E5           LDR      R0,[R0, #+68]
   \   00000028   ........           BL       BUTTON_SetText
    502          }
   \   0000002C   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
    503          void SetLongButtonText(void)
    504          {
   \                     SetLongButtonText:
   \   00000000   00402DE9           PUSH     {LR}
    505          	char scratch[30];
    506          
    507          	sprintf(scratch, "%f", trackData.startLineLong);
   \   00000004   ........           LDR      R0,??DataTable66
   \   00000008   24D04DE2           SUB      SP,SP,#+36
   \   0000000C   D821C0E1           LDRD     R2,R3,[R0, #+24]
   \   00000010   ........           ADR      R1,??DataTable61  ;; 0x25, 0x66, 0x00, 0x00
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       sprintf
    508          	BUTTON_SetText(hStartLongButton, scratch);
   \   0000001C   ........           LDR      R0,??DataTable70_9
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   480090E5           LDR      R0,[R0, #+72]
   \   00000028   ........           BL       BUTTON_SetText
    509          }
   \   0000002C   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
    510          void SetHeadButtonText(void)
    511          {
   \                     SetHeadButtonText:
   \   00000000   00402DE9           PUSH     {LR}
    512          	char scratch[30];
    513          
    514          	sprintf(scratch, "%.0f", trackData.startLineHeading);
   \   00000004   ........           LDR      R0,??DataTable66
   \   00000008   24D04DE2           SUB      SP,SP,#+36
   \   0000000C   240090E5           LDR      R0,[R0, #+36]
   \   00000010   ........           BL       __aeabi_f2d
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   0130A0E1           MOV      R3,R1
   \   0000001C   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       sprintf
    515          	BUTTON_SetText(hStartHeadButton, scratch);
   \   0000002C   ........           LDR      R0,??DataTable70_9
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   4C0090E5           LDR      R0,[R0, #+76]
   \   00000038   ........           BL       BUTTON_SetText
    516          }
   \   0000003C   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000040   0080BDE8           POP      {PC}             ;; return
    517          

   \                                 In section .text, align 4, keep-with-next
    518          void SetFinishLatButtonText(void)
    519          {
   \                     SetFinishLatButtonText:
   \   00000000   10402DE9           PUSH     {R4,LR}
    520          	char scratch[30];
    521          
    522          	if (hFinishLatButton)
   \   00000004   ........           LDR      R4,??DataTable62_6
   \   00000008   20D04DE2           SUB      SP,SP,#+32
   \   0000000C   500094E5           LDR      R0,[R4, #+80]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0700000A           BEQ      ??SetFinishLatButtonText_0
    523          	{
    524          		sprintf(scratch, "%f", trackData.finishLineLat);
   \   00000018   ........           LDR      R0,??DataTable66
   \   0000001C   ........           ADR      R1,??DataTable61  ;; 0x25, 0x66, 0x00, 0x00
   \   00000020   D822C0E1           LDRD     R2,R3,[R0, #+40]
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       sprintf
    525          		BUTTON_SetText(hFinishLatButton, scratch);
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   500094E5           LDR      R0,[R4, #+80]
   \   00000034   ........           BL       BUTTON_SetText
    526          	}
    527          }
   \                     ??SetFinishLatButtonText_0:
   \   00000038   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    528          void SetFinishLongButtonText(void)
    529          {
   \                     SetFinishLongButtonText:
   \   00000000   10402DE9           PUSH     {R4,LR}
    530          	char scratch[30];
    531          
    532          	if (hFinishLongButton)
   \   00000004   ........           LDR      R4,??DataTable62_6
   \   00000008   20D04DE2           SUB      SP,SP,#+32
   \   0000000C   540094E5           LDR      R0,[R4, #+84]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0700000A           BEQ      ??SetFinishLongButtonText_0
    533          	{
    534          		sprintf(scratch, "%f", trackData.finishLineLong);
   \   00000018   ........           LDR      R0,??DataTable66
   \   0000001C   ........           ADR      R1,??DataTable61  ;; 0x25, 0x66, 0x00, 0x00
   \   00000020   D023C0E1           LDRD     R2,R3,[R0, #+48]
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       sprintf
    535          		BUTTON_SetText(hFinishLongButton, scratch);
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   540094E5           LDR      R0,[R4, #+84]
   \   00000034   ........           BL       BUTTON_SetText
    536          	}
    537          }
   \                     ??SetFinishLongButtonText_0:
   \   00000038   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
    538          void SetFinishHeadButtonText(void)
    539          {
   \                     SetFinishHeadButtonText:
   \   00000000   10402DE9           PUSH     {R4,LR}
    540          	char scratch[30];
    541          
    542          	if (hFinishHeadButton)
   \   00000004   ........           LDR      R4,??DataTable62_6
   \   00000008   20D04DE2           SUB      SP,SP,#+32
   \   0000000C   580094E5           LDR      R0,[R4, #+88]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0B00000A           BEQ      ??SetFinishHeadButtonText_0
    543          	{
    544          		sprintf(scratch, "%.0f", trackData.finishLineHeading);
   \   00000018   ........           LDR      R0,??DataTable70
   \   0000001C   3C0090E5           LDR      R0,[R0, #+60]
   \   00000020   ........           BL       __aeabi_f2d
   \   00000024   0020A0E1           MOV      R2,R0
   \   00000028   0130A0E1           MOV      R3,R1
   \   0000002C   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           BL       sprintf
    545          		BUTTON_SetText(hFinishHeadButton, scratch);
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   580094E5           LDR      R0,[R4, #+88]
   \   00000044   ........           BL       BUTTON_SetText
    546          	}
    547          }
   \                     ??SetFinishHeadButtonText_0:
   \   00000048   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
    548          

   \                                 In section .text, align 4, keep-with-next
    549          void DisplayStartFinish(WM_HWIN hParent)
    550          {
   \                     DisplayStartFinish:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    551          	BUTTON_Handle hButton;
    552          
    553          	if (NeedToDisplayFinish())
   \   00000004   ........           LDR      R5,??DataTable66
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   4000D5E5           LDRB     R0,[R5, #+64]
   \   00000010   10D04DE2           SUB      SP,SP,#+16
   \   00000014   020050E3           CMP      R0,#+2
   \   00000018   06005013           CMPNE    R0,#+6
   \   0000001C   07005013           CMPNE    R0,#+7
   \   00000020   05005013           CMPNE    R0,#+5
   \   00000024   04005013           CMPNE    R0,#+4
   \   00000028   03005013           CMPNE    R0,#+3
   \   0000002C   5300000A           BEQ      ??DisplayStartFinish_0
    554          	{
    555          		hButton = BUTTON_CreateEx(139, 53, 202, 39, hParent, WM_CF_SHOW, 0, CLEAR_SF_BUTTON);
    556          		BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRedButton);
    557          		BUTTON_SetFont(hButton, &GUI_Font24B_ASCII);
    558          		BUTTON_SetText(hButton, "Clear Start/Finish");
    559          
    560          		BUTTON_SetDefaultBkColor(GUI_WHITE, BUTTON_BI_UNPRESSED);
    561          		BUTTON_SetDefaultTextColor(GUI_BLACK, BUTTON_BI_UNPRESSED);
    562          		BUTTON_SetDefaultFont(&GUI_Font32B_ASCII);
    563          		hStartLatButton = BUTTON_CreateEx(12, 140, 156, 36, hParent, WM_CF_SHOW, 0, START_LATITUDE_BUTTON);
    564          		hStartLongButton = BUTTON_CreateEx(192, 140, 156, 36, hParent, WM_CF_SHOW, 0, START_LONGITUDE_BUTTON);
    565          		hStartHeadButton = BUTTON_CreateEx(377, 140, 86, 36, hParent, WM_CF_SHOW, 0, START_HEADING_BUTTON);
    566          		hFinishLatButton = BUTTON_CreateEx(12, 187, 156, 36, hParent, WM_CF_SHOW, 0, FINISH_LATITUDE_BUTTON);
    567          		hFinishLongButton = BUTTON_CreateEx(192, 187, 156, 36, hParent, WM_CF_SHOW, 0, FINISH_LONGITUDE_BUTTON);
    568          		hFinishHeadButton = BUTTON_CreateEx(377, 187, 86, 36, hParent, WM_CF_SHOW, 0, FINISH_HEADING_BUTTON);
    569          	}
    570          	else
    571          	{
    572          		hButton = BUTTON_CreateEx(139, 55, 202, 39, hParent, WM_CF_SHOW, 0, CLEAR_SF_BUTTON);
   \   00000030   0400A0E3           MOV      R0,#+4
   \   00000034   800E80E3           ORR      R0,R0,#0x800
   \   00000038   0C008DE5           STR      R0,[SP, #+12]
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   08008DE5           STR      R0,[SP, #+8]
   \   00000044   0200A0E3           MOV      R0,#+2
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   00408DE5           STR      R4,[SP, #+0]
   \   00000050   2730A0E3           MOV      R3,#+39
   \   00000054   CA20A0E3           MOV      R2,#+202
   \   00000058   3710A0E3           MOV      R1,#+55
   \   0000005C   8B00A0E3           MOV      R0,#+139
   \   00000060   ........           BL       BUTTON_CreateEx
   \   00000064   0060A0E1           MOV      R6,R0
    573          		BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   00000068   ........           LDR      R2,??DataTable70_10
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   ........           BL       BUTTON_SetBitmap
    574          		BUTTON_SetFont(hButton, &GUI_Font24B_ASCII);
   \   00000074   ........           LDR      R1,??DataTable70_11
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   ........           BL       BUTTON_SetFont
    575          		if (OpenCourse())
   \   00000080   4000D5E5           LDRB     R0,[R5, #+64]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   B300001A           BNE      ??DisplayStartFinish_1
    576          			BUTTON_SetText(hButton, "Clear Start Line");
    577          		else BUTTON_SetText(hButton, "Clear Start/Finish");
   \                     ??DisplayStartFinish_2:
   \   0000008C   ............       ADRL     R1,`?<Constant "Clear Start/Finish">`
   \              ....        
   \                     ??DisplayStartFinish_3:
   \   00000094   0600A0E1           MOV      R0,R6
   \   00000098   ........           BL       BUTTON_SetText
    578          
    579          		BUTTON_SetDefaultBkColor(GUI_WHITE, BUTTON_BI_UNPRESSED);
   \   0000009C   0010A0E3           MOV      R1,#+0
   \   000000A0   FF04E0E3           MVN      R0,#-16777216
   \   000000A4   ........           BL       BUTTON_SetDefaultBkColor
    580          		BUTTON_SetDefaultTextColor(GUI_BLACK, BUTTON_BI_UNPRESSED);
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   ........           BL       BUTTON_SetDefaultTextColor
    581          		BUTTON_SetDefaultFont(&GUI_Font32B_ASCII);
   \   000000B4   ........           LDR      R0,??DataTable70_12
   \   000000B8   ........           BL       BUTTON_SetDefaultFont
    582          		hStartLatButton = BUTTON_CreateEx(12, 152, 156, 36, hParent, WM_CF_SHOW, 0, START_LATITUDE_BUTTON);
   \   000000BC   0500A0E3           MOV      R0,#+5
   \   000000C0   800E80E3           ORR      R0,R0,#0x800
   \   000000C4   0C008DE5           STR      R0,[SP, #+12]
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   08008DE5           STR      R0,[SP, #+8]
   \   000000D0   0200A0E3           MOV      R0,#+2
   \   000000D4   04008DE5           STR      R0,[SP, #+4]
   \   000000D8   ........           LDR      R5,??DataTable70_9
   \   000000DC   00408DE5           STR      R4,[SP, #+0]
   \   000000E0   2430A0E3           MOV      R3,#+36
   \   000000E4   9C20A0E3           MOV      R2,#+156
   \   000000E8   9810A0E3           MOV      R1,#+152
   \   000000EC   0C00A0E3           MOV      R0,#+12
   \   000000F0   ........           BL       BUTTON_CreateEx
   \   000000F4   440085E5           STR      R0,[R5, #+68]
    583          		hStartLongButton = BUTTON_CreateEx(192, 152, 156, 36, hParent, WM_CF_SHOW, 0, START_LONGITUDE_BUTTON);
   \   000000F8   0600A0E3           MOV      R0,#+6
   \   000000FC   800E80E3           ORR      R0,R0,#0x800
   \   00000100   0C008DE5           STR      R0,[SP, #+12]
   \   00000104   0000A0E3           MOV      R0,#+0
   \   00000108   08008DE5           STR      R0,[SP, #+8]
   \   0000010C   0200A0E3           MOV      R0,#+2
   \   00000110   04008DE5           STR      R0,[SP, #+4]
   \   00000114   00408DE5           STR      R4,[SP, #+0]
   \   00000118   2430A0E3           MOV      R3,#+36
   \   0000011C   9C20A0E3           MOV      R2,#+156
   \   00000120   9810A0E3           MOV      R1,#+152
   \   00000124   C000A0E3           MOV      R0,#+192
   \   00000128   ........           BL       BUTTON_CreateEx
   \   0000012C   480085E5           STR      R0,[R5, #+72]
    584          		hStartHeadButton = BUTTON_CreateEx(377, 152, 86, 36, hParent, WM_CF_SHOW, 0, START_HEADING_BUTTON);
   \   00000130   0700A0E3           MOV      R0,#+7
   \   00000134   800E80E3           ORR      R0,R0,#0x800
   \   00000138   0C008DE5           STR      R0,[SP, #+12]
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   08008DE5           STR      R0,[SP, #+8]
   \   00000144   0200A0E3           MOV      R0,#+2
   \   00000148   04008DE5           STR      R0,[SP, #+4]
   \   0000014C   9810A0E3           MOV      R1,#+152
   \   00000150   00408DE5           STR      R4,[SP, #+0]
   \   00000154   2430A0E3           MOV      R3,#+36
   \   00000158   5620A0E3           MOV      R2,#+86
   \   0000015C   E10081E2           ADD      R0,R1,#+225
   \   00000160   ........           BL       BUTTON_CreateEx
   \   00000164   4C0085E5           STR      R0,[R5, #+76]
    585          
    586          		hFinishLatButton = 0;
   \   00000168   0000A0E3           MOV      R0,#+0
   \   0000016C   500085E5           STR      R0,[R5, #+80]
    587          		hFinishLongButton = 0;
   \   00000170   540085E5           STR      R0,[R5, #+84]
    588          		hFinishHeadButton = 0;
   \                     ??DisplayStartFinish_4:
   \   00000174   580085E5           STR      R0,[R5, #+88]
    589          	}
    590          }
   \   00000178   10D08DE2           ADD      SP,SP,#+16
   \   0000017C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??DisplayStartFinish_0:
   \   00000180   0400A0E3           MOV      R0,#+4
   \   00000184   800E80E3           ORR      R0,R0,#0x800
   \   00000188   0C008DE5           STR      R0,[SP, #+12]
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   08008DE5           STR      R0,[SP, #+8]
   \   00000194   0200A0E3           MOV      R0,#+2
   \   00000198   04008DE5           STR      R0,[SP, #+4]
   \   0000019C   00408DE5           STR      R4,[SP, #+0]
   \   000001A0   2730A0E3           MOV      R3,#+39
   \   000001A4   CA20A0E3           MOV      R2,#+202
   \   000001A8   3510A0E3           MOV      R1,#+53
   \   000001AC   8B00A0E3           MOV      R0,#+139
   \   000001B0   ........           BL       BUTTON_CreateEx
   \   000001B4   0060A0E1           MOV      R6,R0
   \   000001B8   ........           LDR      R2,??DataTable70_10
   \   000001BC   0010A0E3           MOV      R1,#+0
   \   000001C0   ........           BL       BUTTON_SetBitmap
   \   000001C4   ........           LDR      R1,??DataTable70_11
   \   000001C8   0600A0E1           MOV      R0,R6
   \   000001CC   ........           BL       BUTTON_SetFont
   \   000001D0   ............       ADRL     R1,`?<Constant "Clear Start/Finish">`
   \              ....        
   \   000001D8   0600A0E1           MOV      R0,R6
   \   000001DC   ........           BL       BUTTON_SetText
   \   000001E0   0010A0E3           MOV      R1,#+0
   \   000001E4   FF04E0E3           MVN      R0,#-16777216
   \   000001E8   ........           BL       BUTTON_SetDefaultBkColor
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   0000A0E3           MOV      R0,#+0
   \   000001F4   ........           BL       BUTTON_SetDefaultTextColor
   \   000001F8   ........           LDR      R0,??DataTable70_12
   \   000001FC   ........           BL       BUTTON_SetDefaultFont
   \   00000200   0500A0E3           MOV      R0,#+5
   \   00000204   800E80E3           ORR      R0,R0,#0x800
   \   00000208   0C008DE5           STR      R0,[SP, #+12]
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   08008DE5           STR      R0,[SP, #+8]
   \   00000214   0200A0E3           MOV      R0,#+2
   \   00000218   04008DE5           STR      R0,[SP, #+4]
   \   0000021C   ........           LDR      R5,??DataTable70_9
   \   00000220   00408DE5           STR      R4,[SP, #+0]
   \   00000224   2430A0E3           MOV      R3,#+36
   \   00000228   9C20A0E3           MOV      R2,#+156
   \   0000022C   8C10A0E3           MOV      R1,#+140
   \   00000230   0C00A0E3           MOV      R0,#+12
   \   00000234   ........           BL       BUTTON_CreateEx
   \   00000238   440085E5           STR      R0,[R5, #+68]
   \   0000023C   0600A0E3           MOV      R0,#+6
   \   00000240   800E80E3           ORR      R0,R0,#0x800
   \   00000244   0C008DE5           STR      R0,[SP, #+12]
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   08008DE5           STR      R0,[SP, #+8]
   \   00000250   0200A0E3           MOV      R0,#+2
   \   00000254   04008DE5           STR      R0,[SP, #+4]
   \   00000258   00408DE5           STR      R4,[SP, #+0]
   \   0000025C   2430A0E3           MOV      R3,#+36
   \   00000260   9C20A0E3           MOV      R2,#+156
   \   00000264   8C10A0E3           MOV      R1,#+140
   \   00000268   C000A0E3           MOV      R0,#+192
   \   0000026C   ........           BL       BUTTON_CreateEx
   \   00000270   480085E5           STR      R0,[R5, #+72]
   \   00000274   0700A0E3           MOV      R0,#+7
   \   00000278   800E80E3           ORR      R0,R0,#0x800
   \   0000027C   0C008DE5           STR      R0,[SP, #+12]
   \   00000280   0000A0E3           MOV      R0,#+0
   \   00000284   08008DE5           STR      R0,[SP, #+8]
   \   00000288   7960A0E3           MOV      R6,#+121
   \   0000028C   0200A0E3           MOV      R0,#+2
   \   00000290   406F86E3           ORR      R6,R6,#0x100
   \   00000294   04008DE5           STR      R0,[SP, #+4]
   \   00000298   00408DE5           STR      R4,[SP, #+0]
   \   0000029C   2430A0E3           MOV      R3,#+36
   \   000002A0   5620A0E3           MOV      R2,#+86
   \   000002A4   8C10A0E3           MOV      R1,#+140
   \   000002A8   0600A0E1           MOV      R0,R6
   \   000002AC   ........           BL       BUTTON_CreateEx
   \   000002B0   4C0085E5           STR      R0,[R5, #+76]
   \   000002B4   0A00A0E3           MOV      R0,#+10
   \   000002B8   800E80E3           ORR      R0,R0,#0x800
   \   000002BC   0C008DE5           STR      R0,[SP, #+12]
   \   000002C0   0000A0E3           MOV      R0,#+0
   \   000002C4   08008DE5           STR      R0,[SP, #+8]
   \   000002C8   0200A0E3           MOV      R0,#+2
   \   000002CC   04008DE5           STR      R0,[SP, #+4]
   \   000002D0   00408DE5           STR      R4,[SP, #+0]
   \   000002D4   2430A0E3           MOV      R3,#+36
   \   000002D8   9C20A0E3           MOV      R2,#+156
   \   000002DC   BB10A0E3           MOV      R1,#+187
   \   000002E0   0C00A0E3           MOV      R0,#+12
   \   000002E4   ........           BL       BUTTON_CreateEx
   \   000002E8   500085E5           STR      R0,[R5, #+80]
   \   000002EC   0B00A0E3           MOV      R0,#+11
   \   000002F0   800E80E3           ORR      R0,R0,#0x800
   \   000002F4   0C008DE5           STR      R0,[SP, #+12]
   \   000002F8   0000A0E3           MOV      R0,#+0
   \   000002FC   08008DE5           STR      R0,[SP, #+8]
   \   00000300   0200A0E3           MOV      R0,#+2
   \   00000304   04008DE5           STR      R0,[SP, #+4]
   \   00000308   00408DE5           STR      R4,[SP, #+0]
   \   0000030C   2430A0E3           MOV      R3,#+36
   \   00000310   9C20A0E3           MOV      R2,#+156
   \   00000314   BB10A0E3           MOV      R1,#+187
   \   00000318   C000A0E3           MOV      R0,#+192
   \   0000031C   ........           BL       BUTTON_CreateEx
   \   00000320   540085E5           STR      R0,[R5, #+84]
   \   00000324   0C00A0E3           MOV      R0,#+12
   \   00000328   800E80E3           ORR      R0,R0,#0x800
   \   0000032C   0C008DE5           STR      R0,[SP, #+12]
   \   00000330   0000A0E3           MOV      R0,#+0
   \   00000334   08008DE5           STR      R0,[SP, #+8]
   \   00000338   0200A0E3           MOV      R0,#+2
   \   0000033C   04008DE5           STR      R0,[SP, #+4]
   \   00000340   00408DE5           STR      R4,[SP, #+0]
   \   00000344   2430A0E3           MOV      R3,#+36
   \   00000348   5620A0E3           MOV      R2,#+86
   \   0000034C   BB10A0E3           MOV      R1,#+187
   \   00000350   0600A0E1           MOV      R0,R6
   \   00000354   ........           BL       BUTTON_CreateEx
   \   00000358   85FFFFEA           B        ??DisplayStartFinish_4
   \                     ??DisplayStartFinish_1:
   \   0000035C   010050E3           CMP      R0,#+1
   \   00000360   49FFFF0A           BEQ      ??DisplayStartFinish_2
   \   00000364   ............       ADRL     R1,`?<Constant "Clear Start Line">`
   \              ....        
   \   0000036C   48FFFFEA           B        ??DisplayStartFinish_3
    591          

   \                                 In section .text, align 4, keep-with-next
    592          void StartFinishPaint(WM_HWIN hParent)
    593          {
   \                     StartFinishPaint:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   60D04DE2           SUB      SP,SP,#+96
    594          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable70_13
   \   00000014   ........           BL       GUI_DrawBitmap
    595          	GUI_DrawBitmap(&bmStartFinishText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable70_14
   \   00000024   ........           BL       GUI_DrawBitmap
    596          
    597          	GUI_SetColor(GUI_BLACK);
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   ........           BL       GUI_SetColor
    598          	if (NeedToDisplayFinish())
   \   00000030   ........           LDR      R4,??DataTable66
   \   00000034   4000D4E5           LDRB     R0,[R4, #+64]
   \   00000038   020050E3           CMP      R0,#+2
   \   0000003C   06005013           CMPNE    R0,#+6
   \   00000040   07005013           CMPNE    R0,#+7
   \   00000044   05005013           CMPNE    R0,#+5
   \   00000048   04005013           CMPNE    R0,#+4
   \   0000004C   03005013           CMPNE    R0,#+3
   \   00000050   4700000A           BEQ      ??StartFinishPaint_0
    599          	{
    600          		GUI_FillRect(0, 43, XSIZE_PHYS, 267);
    601          
    602          		GUI_SetPenSize(3);
    603          		GUI_SetColor(GUI_GRAY);
    604          		GUI_DrawLine(0, 100, XSIZE_PHYS, 100);
    605          
    606          		GUI_SetColor(GUI_WHITE);
    607          		GUI_SetFont(&GUI_Font32B_ASCII);
    608          		GUI_SetTextMode(GUI_TM_TRANS);
    609          		if (NeedToEditStartFinish())
    610          			GUI_DispStringHCenterAt("Enter Start/Finish", 180, 105);
    611          		else GUI_DispStringHCenterAt("Start/Finish", 180, 105);
    612          		GUI_DispStringHCenterAt("Heading", 420, 105);
    613          
    614          		GUI_SetColor(GUI_GREEN);
    615          		GUI_DispStringHCenterAt(sysData.track, XSIZE_PHYS/2, 230);
    616          
    617          		SetFinishLatButtonText();
    618          		SetFinishLongButtonText();
    619          		SetFinishHeadButtonText();
    620          	}
    621          	else
    622          	{
    623          		GUI_FillRect(0, 45, XSIZE_PHYS, 240);
   \   00000054   F030A0E3           MOV      R3,#+240
   \   00000058   782FA0E3           MOV      R2,#+480
   \   0000005C   2D10A0E3           MOV      R1,#+45
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   ........           BL       GUI_FillRect
    624          
    625          		GUI_SetPenSize(3);
   \   00000068   0300A0E3           MOV      R0,#+3
   \   0000006C   ........           BL       GUI_SetPenSize
    626          		GUI_SetColor(GUI_GRAY);
   \   00000070   ........           LDR      R0,??DataTable70_15  ;; 0x808080
   \   00000074   ........           BL       GUI_SetColor
    627          		GUI_DrawLine(0, 105, XSIZE_PHYS, 105);
   \   00000078   6930A0E3           MOV      R3,#+105
   \   0000007C   782FA0E3           MOV      R2,#+480
   \   00000080   6910A0E3           MOV      R1,#+105
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   ........           BL       GUI_DrawLine
    628          
    629          		GUI_SetColor(GUI_WHITE);
   \   0000008C   FF04E0E3           MVN      R0,#-16777216
   \   00000090   ........           BL       GUI_SetColor
    630          		GUI_SetFont(&GUI_Font32B_ASCII);
   \   00000094   ........           LDR      R0,??DataTable70_12
   \   00000098   ........           BL       GUI_SetFont
    631          		GUI_SetTextMode(GUI_TM_TRANS);
   \   0000009C   0200A0E3           MOV      R0,#+2
   \   000000A0   ........           BL       GUI_SetTextMode
    632          		if (OpenCourse())
   \   000000A4   4000D4E5           LDRB     R0,[R4, #+64]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   8300001A           BNE      ??StartFinishPaint_1
    633          			GUI_DispStringHCenterAt("Enter Start Line", 180, 115);
    634          		else GUI_DispStringHCenterAt("Enter Start/Finish", 180, 115);
   \                     ??StartFinishPaint_2:
   \   000000B0   7320A0E3           MOV      R2,#+115
   \   000000B4   B410A0E3           MOV      R1,#+180
   \   000000B8   ............       ADRL     R0,`?<Constant "Enter Start/Finish">`
   \              ....        
   \                     ??StartFinishPaint_3:
   \   000000C0   ........           BL       GUI_DispStringHCenterAt
    635          		GUI_DispStringHCenterAt("Heading", 420, 115);
   \   000000C4   7320A0E3           MOV      R2,#+115
   \   000000C8   691FA0E3           MOV      R1,#+420
   \   000000CC   ............       ADRL     R0,`?<Constant "Heading">`
   \              ....        
   \   000000D4   ........           BL       GUI_DispStringHCenterAt
    636          
    637          		GUI_SetColor(GUI_GREEN);
   \   000000D8   FF0CA0E3           MOV      R0,#+65280
   \   000000DC   ........           BL       GUI_SetColor
    638          		GUI_DispStringHCenterAt(sysData.track, XSIZE_PHYS/2, 200);
   \   000000E0   C820A0E3           MOV      R2,#+200
   \   000000E4   F010A0E3           MOV      R1,#+240
   \   000000E8   ........           LDR      R0,??DataTable70_16
   \   000000EC   ........           BL       GUI_DispStringHCenterAt
    639          	}
    640          
    641          	SetLatButtonText();
   \                     ??StartFinishPaint_4:
   \   000000F0   ........           ADR      R6,??DataTable67_1  ;; 0x25, 0x66, 0x00, 0x00
   \   000000F4   D021C4E1           LDRD     R2,R3,[R4, #+16]
   \   000000F8   0610A0E1           MOV      R1,R6
   \   000000FC   40008DE2           ADD      R0,SP,#+64
   \   00000100   ........           BL       sprintf
   \   00000104   ........           LDR      R5,??DataTable70_9
   \   00000108   40108DE2           ADD      R1,SP,#+64
   \   0000010C   440095E5           LDR      R0,[R5, #+68]
   \   00000110   ........           BL       BUTTON_SetText
    642          	SetLongButtonText();
   \   00000114   D821C4E1           LDRD     R2,R3,[R4, #+24]
   \   00000118   0610A0E1           MOV      R1,R6
   \   0000011C   20008DE2           ADD      R0,SP,#+32
   \   00000120   ........           BL       sprintf
   \   00000124   20108DE2           ADD      R1,SP,#+32
   \   00000128   480095E5           LDR      R0,[R5, #+72]
   \   0000012C   ........           BL       BUTTON_SetText
    643          	SetHeadButtonText();
   \   00000130   240094E5           LDR      R0,[R4, #+36]
   \   00000134   ........           BL       __aeabi_f2d
   \   00000138   0020A0E1           MOV      R2,R0
   \   0000013C   0130A0E1           MOV      R3,R1
   \   00000140   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000148   0D00A0E1           MOV      R0,SP
   \   0000014C   ........           BL       sprintf
   \   00000150   0D10A0E1           MOV      R1,SP
   \   00000154   4C0095E5           LDR      R0,[R5, #+76]
   \   00000158   ........           BL       BUTTON_SetText
    644          
    645          	GUI_DrawBitmap(GetNavigationArrow(STARTFINISH_SELECTION), 0, 229);
   \   0000015C   E520A0E3           MOV      R2,#+229
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   ........           LDR      R0,??DataTable70_7
   \   00000168   ........           BL       GUI_DrawBitmap
    646          }
   \   0000016C   60D08DE2           ADD      SP,SP,#+96       ;; stack cleaning
   \   00000170   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??StartFinishPaint_0:
   \   00000174   0B30A0E3           MOV      R3,#+11
   \   00000178   403F83E3           ORR      R3,R3,#0x100
   \   0000017C   782FA0E3           MOV      R2,#+480
   \   00000180   2B10A0E3           MOV      R1,#+43
   \   00000184   0000A0E3           MOV      R0,#+0
   \   00000188   ........           BL       GUI_FillRect
   \   0000018C   0300A0E3           MOV      R0,#+3
   \   00000190   ........           BL       GUI_SetPenSize
   \   00000194   ........           LDR      R0,??DataTable70_15  ;; 0x808080
   \   00000198   ........           BL       GUI_SetColor
   \   0000019C   6430A0E3           MOV      R3,#+100
   \   000001A0   782FA0E3           MOV      R2,#+480
   \   000001A4   6410A0E3           MOV      R1,#+100
   \   000001A8   0000A0E3           MOV      R0,#+0
   \   000001AC   ........           BL       GUI_DrawLine
   \   000001B0   FF04E0E3           MVN      R0,#-16777216
   \   000001B4   ........           BL       GUI_SetColor
   \   000001B8   ........           LDR      R0,??DataTable70_12
   \   000001BC   ........           BL       GUI_SetFont
   \   000001C0   0200A0E3           MOV      R0,#+2
   \   000001C4   ........           BL       GUI_SetTextMode
   \   000001C8   4000D4E5           LDRB     R0,[R4, #+64]
   \   000001CC   040050E3           CMP      R0,#+4
   \   000001D0   03005013           CMPNE    R0,#+3
   \   000001D4   05005013           CMPNE    R0,#+5
   \   000001D8   0400000A           BEQ      ??StartFinishPaint_5
   \   000001DC   6920A0E3           MOV      R2,#+105
   \   000001E0   B410A0E3           MOV      R1,#+180
   \   000001E4   ............       ADRL     R0,`?<Constant "Enter Start/Finish">`
   \              ....        
   \   000001EC   030000EA           B        ??StartFinishPaint_6
   \                     ??StartFinishPaint_5:
   \   000001F0   6920A0E3           MOV      R2,#+105
   \   000001F4   B410A0E3           MOV      R1,#+180
   \   000001F8   ............       ADRL     R0,`?<Constant "Start/Finish">`
   \              ....        
   \                     ??StartFinishPaint_6:
   \   00000200   ........           BL       GUI_DispStringHCenterAt
   \   00000204   6920A0E3           MOV      R2,#+105
   \   00000208   691FA0E3           MOV      R1,#+420
   \   0000020C   ............       ADRL     R0,`?<Constant "Heading">`
   \              ....        
   \   00000214   ........           BL       GUI_DispStringHCenterAt
   \   00000218   FF0CA0E3           MOV      R0,#+65280
   \   0000021C   ........           BL       GUI_SetColor
   \   00000220   E620A0E3           MOV      R2,#+230
   \   00000224   F010A0E3           MOV      R1,#+240
   \   00000228   ........           LDR      R0,??DataTable70_16
   \   0000022C   ........           BL       GUI_DispStringHCenterAt
   \   00000230   ........           LDR      R5,??DataTable70_9
   \   00000234   500095E5           LDR      R0,[R5, #+80]
   \   00000238   000050E3           CMP      R0,#+0
   \   0000023C   0600000A           BEQ      ??StartFinishPaint_7
   \   00000240   D822C4E1           LDRD     R2,R3,[R4, #+40]
   \   00000244   ........           ADR      R1,??DataTable67_1  ;; 0x25, 0x66, 0x00, 0x00
   \   00000248   0D00A0E1           MOV      R0,SP
   \   0000024C   ........           BL       sprintf
   \   00000250   0D10A0E1           MOV      R1,SP
   \   00000254   500095E5           LDR      R0,[R5, #+80]
   \   00000258   ........           BL       BUTTON_SetText
   \                     ??StartFinishPaint_7:
   \   0000025C   540095E5           LDR      R0,[R5, #+84]
   \   00000260   000050E3           CMP      R0,#+0
   \   00000264   0600000A           BEQ      ??StartFinishPaint_8
   \   00000268   D023C4E1           LDRD     R2,R3,[R4, #+48]
   \   0000026C   ........           ADR      R1,??DataTable67_1  ;; 0x25, 0x66, 0x00, 0x00
   \   00000270   0D00A0E1           MOV      R0,SP
   \   00000274   ........           BL       sprintf
   \   00000278   0D10A0E1           MOV      R1,SP
   \   0000027C   540095E5           LDR      R0,[R5, #+84]
   \   00000280   ........           BL       BUTTON_SetText
   \                     ??StartFinishPaint_8:
   \   00000284   580095E5           LDR      R0,[R5, #+88]
   \   00000288   000050E3           CMP      R0,#+0
   \   0000028C   97FFFF0A           BEQ      ??StartFinishPaint_4
   \   00000290   3C0094E5           LDR      R0,[R4, #+60]
   \   00000294   ........           BL       __aeabi_f2d
   \   00000298   0020A0E1           MOV      R2,R0
   \   0000029C   0130A0E1           MOV      R3,R1
   \   000002A0   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   000002A8   0D00A0E1           MOV      R0,SP
   \   000002AC   ........           BL       sprintf
   \   000002B0   0D10A0E1           MOV      R1,SP
   \   000002B4   580095E5           LDR      R0,[R5, #+88]
   \   000002B8   ........           BL       BUTTON_SetText
   \   000002BC   8BFFFFEA           B        ??StartFinishPaint_4
   \                     ??StartFinishPaint_1:
   \   000002C0   010050E3           CMP      R0,#+1
   \   000002C4   79FFFF0A           BEQ      ??StartFinishPaint_2
   \   000002C8   7320A0E3           MOV      R2,#+115
   \   000002CC   B410A0E3           MOV      R1,#+180
   \   000002D0   ............       ADRL     R0,`?<Constant "Enter Start Line">`
   \              ....        
   \   000002D8   78FFFFEA           B        ??StartFinishPaint_3
    647          
    648          

   \                                 In section .text, align 4, keep-with-next
    649          char OpenCourse(void)
    650          {
   \                     OpenCourse:
   \   00000000   ........           LDR      R0,??DataTable70
   \   00000004   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0400000A           BEQ      ??OpenCourse_0
   \   00000010   010050E3           CMP      R0,#+1
   \   00000014   0100001A           BNE      ??OpenCourse_1
    651          	if ((trackData.courseType == ROAD_COURSE) || (trackData.courseType == OVAL))
    652          		return false;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR
    653          	else return true;
   \                     ??OpenCourse_1:
   \   00000020   0100A0E3           MOV      R0,#+1
   \                     ??OpenCourse_0:
   \   00000024   1EFF2FE1           BX       LR               ;; return
    654          }
    655          

   \                                 In section .text, align 4, keep-with-next
    656          char NeedToEditStartFinish(void)
    657          {
   \                     NeedToEditStartFinish:
   \   00000000   ........           LDR      R0,??DataTable70
   \   00000004   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000008   040050E3           CMP      R0,#+4
   \   0000000C   03005013           CMPNE    R0,#+3
   \   00000010   05005013           CMPNE    R0,#+5
   \   00000014   0100001A           BNE      ??NeedToEditStartFinish_0
    658          	if ((trackData.courseType == DRAG_1000) || (trackData.courseType == DRAG_1_8) || (trackData.courseType == DRAG))
    659          		return false;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR
    660          	else return true;
   \                     ??NeedToEditStartFinish_0:
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   1EFF2FE1           BX       LR               ;; return
    661          }
    662          

   \                                 In section .text, align 4, keep-with-next
    663          char NeedToDisplayFinish(void)
    664          {
   \                     NeedToDisplayFinish:
   \   00000000   ........           LDR      R0,??DataTable70
   \   00000004   4000D0E5           LDRB     R0,[R0, #+64]
   \   00000008   020050E3           CMP      R0,#+2
   \   0000000C   06005013           CMPNE    R0,#+6
   \   00000010   07005013           CMPNE    R0,#+7
   \   00000014   05005013           CMPNE    R0,#+5
   \   00000018   04005013           CMPNE    R0,#+4
   \   0000001C   03005013           CMPNE    R0,#+3
   \   00000020   0100001A           BNE      ??NeedToDisplayFinish_0
    665          	if ((trackData.courseType == AUTOXRALLY) || (trackData.courseType == HILL_CLIMB) || (trackData.courseType == DRIVE_COURSE) ||
    666          		(trackData.courseType == DRAG) || (trackData.courseType == DRAG_1000) || (trackData.courseType == DRAG_1_8) )
    667          		return true;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   1EFF2FE1           BX       LR
    668          	else return false;
   \                     ??NeedToDisplayFinish_0:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   1EFF2FE1           BX       LR               ;; return
    669          }
    670          

   \                                 In section .text, align 4, keep-with-next
    671          void DisplayResetPL(WM_HWIN hParent)
    672          {
   \                     DisplayResetPL:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    673          	BUTTON_Handle hButton;
    674          
    675          	hButton = BUTTON_CreateEx(139, 55, 202, 39, hParent, WM_CF_SHOW, 0, RESET_FASTEST_LAP);
   \   00000008   0900A0E3           MOV      R0,#+9
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00408DE5           STR      R4,[SP, #+0]
   \   0000002C   2730A0E3           MOV      R3,#+39
   \   00000030   CA20A0E3           MOV      R2,#+202
   \   00000034   3710A0E3           MOV      R1,#+55
   \   00000038   8B00A0E3           MOV      R0,#+139
   \   0000003C   ........           BL       BUTTON_CreateEx
   \   00000040   0050A0E1           MOV      R5,R0
    676          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   00000044   ........           LDR      R2,??DataTable70_10
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   ........           BL       BUTTON_SetBitmap
    677          	BUTTON_SetFont(hButton, &GUI_Font24B_ASCII);
   \   00000050   ........           LDR      R1,??DataTable70_11
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   ........           BL       BUTTON_SetFont
    678          	BUTTON_SetText(hButton, "Reset Time");
   \   0000005C   ............       ADRL     R1,`?<Constant "Reset Time">`
   \              ....        
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   ........           BL       BUTTON_SetText
    679          
    680          	BUTTON_SetDefaultBkColor(GUI_WHITE, BUTTON_BI_UNPRESSED);
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   FF04E0E3           MVN      R0,#-16777216
   \   00000074   ........           BL       BUTTON_SetDefaultBkColor
    681          	BUTTON_SetDefaultTextColor(GUI_BLACK, BUTTON_BI_UNPRESSED);
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   0000A0E3           MOV      R0,#+0
   \   00000080   ........           BL       BUTTON_SetDefaultTextColor
    682          	BUTTON_SetDefaultFont(&GUI_Font32B_ASCII);
   \   00000084   ........           LDR      R0,??DataTable70_12
   \   00000088   ........           BL       BUTTON_SetDefaultFont
    683          	hFastestLap = BUTTON_CreateEx(12, 152, 156, 36, hParent, WM_CF_SHOW, 0, 0);
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   0C008DE5           STR      R0,[SP, #+12]
   \   00000094   08008DE5           STR      R0,[SP, #+8]
   \   00000098   0200A0E3           MOV      R0,#+2
   \   0000009C   04008DE5           STR      R0,[SP, #+4]
   \   000000A0   00408DE5           STR      R4,[SP, #+0]
   \   000000A4   2430A0E3           MOV      R3,#+36
   \   000000A8   9C20A0E3           MOV      R2,#+156
   \   000000AC   9810A0E3           MOV      R1,#+152
   \   000000B0   0C00A0E3           MOV      R0,#+12
   \   000000B4   ........           BL       BUTTON_CreateEx
   \   000000B8   ........           LDR      R1,??DataTable70_17
    684          }
   \   000000BC   14D08DE2           ADD      SP,SP,#+20
   \   000000C0   000081E5           STR      R0,[R1, #+0]
   \   000000C4   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    685          void ResetPLPaint(WM_HWIN hParent)
    686          {
   \                     ResetPLPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    687          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable70_13
   \   00000014   ........           BL       GUI_DrawBitmap
    688          	GUI_DrawBitmap(&bmPredictiveLapText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable70_18
   \   00000024   ........           BL       GUI_DrawBitmap
    689          
    690          	GUI_SetColor(GUI_BLACK);
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   ........           BL       GUI_SetColor
    691          	GUI_DrawRect(0, 45, XSIZE_PHYS, 240);
   \   00000030   F030A0E3           MOV      R3,#+240
   \   00000034   782FA0E3           MOV      R2,#+480
   \   00000038   2D10A0E3           MOV      R1,#+45
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   ........           BL       GUI_DrawRect
    692          	GUI_FillRect(0, 45, XSIZE_PHYS, 240);
   \   00000044   F030A0E3           MOV      R3,#+240
   \   00000048   782FA0E3           MOV      R2,#+480
   \   0000004C   2D10A0E3           MOV      R1,#+45
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   ........           BL       GUI_FillRect
    693          
    694          	GUI_SetPenSize(3);
   \   00000058   0300A0E3           MOV      R0,#+3
   \   0000005C   ........           BL       GUI_SetPenSize
    695          	GUI_SetColor(GUI_GRAY);
   \   00000060   ........           LDR      R0,??DataTable70_15  ;; 0x808080
   \   00000064   ........           BL       GUI_SetColor
    696          	GUI_DrawLine(0, 105, XSIZE_PHYS, 105);
   \   00000068   6930A0E3           MOV      R3,#+105
   \   0000006C   782FA0E3           MOV      R2,#+480
   \   00000070   6910A0E3           MOV      R1,#+105
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   ........           BL       GUI_DrawLine
    697          
    698          	GUI_SetColor(GUI_WHITE);
   \   0000007C   FF04E0E3           MVN      R0,#-16777216
   \   00000080   ........           BL       GUI_SetColor
    699          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   00000084   ........           LDR      R0,??DataTable70_11
   \   00000088   ........           BL       GUI_SetFont
    700          	GUI_SetTextMode(GUI_TM_TRANS);
   \   0000008C   0200A0E3           MOV      R0,#+2
   \   00000090   ........           BL       GUI_SetTextMode
    701          	GUI_DispStringHCenterAt("Resetting will clear the fastest lap for this track", XSIZE_PHYS/2, 115);
   \   00000094   7320A0E3           MOV      R2,#+115
   \   00000098   F010A0E3           MOV      R1,#+240
   \   0000009C   ............       ADRL     R0,`?<Constant "Resetting will clear ...">`
   \              ....        
   \   000000A4   ........           BL       GUI_DispStringHCenterAt
    702          	GUI_DispStringAt("is the current fastest lap", 190, 155);
   \   000000A8   9B20A0E3           MOV      R2,#+155
   \   000000AC   BE10A0E3           MOV      R1,#+190
   \   000000B0   ............       ADRL     R0,`?<Constant "is the current fastes...">`
   \              ....        
   \   000000B8   ........           BL       GUI_DispStringAt
    703          
    704          	BUTTON_SetText(hFastestLap, formatLapTime(trackData.bestLapEver, true));
   \   000000BC   ........           LDR      R0,??DataTable70
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   440090E5           LDR      R0,[R0, #+68]
   \   000000C8   ........           BL       formatLapTime
   \   000000CC   0010A0E1           MOV      R1,R0
   \   000000D0   ........           LDR      R0,??DataTable70_17
   \   000000D4   000090E5           LDR      R0,[R0, #+0]
   \   000000D8   ........           BL       BUTTON_SetText
    705          
    706          	GUI_DrawRoundedRect(10, 150, 170, 190, 5);
   \   000000DC   0500A0E3           MOV      R0,#+5
   \   000000E0   00008DE5           STR      R0,[SP, #+0]
   \   000000E4   BE30A0E3           MOV      R3,#+190
   \   000000E8   AA20A0E3           MOV      R2,#+170
   \   000000EC   9610A0E3           MOV      R1,#+150
   \   000000F0   0A00A0E3           MOV      R0,#+10
   \   000000F4   ........           BL       GUI_DrawRoundedRect
    707          	GUI_FillRoundedRect(10, 150, 170, 190, 5);
   \   000000F8   0500A0E3           MOV      R0,#+5
   \   000000FC   00008DE5           STR      R0,[SP, #+0]
   \   00000100   BE30A0E3           MOV      R3,#+190
   \   00000104   AA20A0E3           MOV      R2,#+170
   \   00000108   9610A0E3           MOV      R1,#+150
   \   0000010C   0A00A0E3           MOV      R0,#+10
   \   00000110   ........           BL       GUI_FillRoundedRect
    708          
    709          	GUI_SetFont(&GUI_Font32B_ASCII);
   \   00000114   ........           LDR      R0,??DataTable70_12
   \   00000118   ........           BL       GUI_SetFont
    710          	GUI_SetColor(GUI_GREEN);
   \   0000011C   FF0CA0E3           MOV      R0,#+65280
   \   00000120   ........           BL       GUI_SetColor
    711          	GUI_DispStringHCenterAt(sysData.track, XSIZE_PHYS/2, 200);
   \   00000124   C820A0E3           MOV      R2,#+200
   \   00000128   F010A0E3           MOV      R1,#+240
   \   0000012C   ........           LDR      R0,??DataTable70_16
   \   00000130   ........           BL       GUI_DispStringHCenterAt
    712          
    713          	GUI_DrawBitmap(GetNavigationArrow(STARTFINISH_SELECTION), 0, 229);
   \   00000134   04D08DE2           ADD      SP,SP,#+4
   \   00000138   0040BDE8           POP      {LR}
   \   0000013C   E520A0E3           MOV      R2,#+229
   \   00000140   0010A0E3           MOV      R1,#+0
   \   00000144   ........           LDR      R0,??DataTable70_7
   \   00000148   ........           B        GUI_DrawBitmap   ;; tailcall
    714          }
    715          
    716          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen)
    717          {
    718          	return &bmleftarrow;
    719          }
    720          

   \                                 In section .text, align 4, keep-with-next
    721          void TrackSettingsIgnoreNextKeyRelease(void)
    722          {
    723          	clickedOnVSScreen = false;
   \                     TrackSettingsIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable70_9
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   401080E5           STR      R1,[R0, #+64]
    724          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
    725          

   \                                 In section .text, align 4, keep-with-next
    726          static const GUI_WIDGET_CREATE_INFO ResetSFDialog[] = {
   \                     ResetSFDialog:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Resetting your curren...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 360, 50, 2
   \              680132000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000038   000000004600       DC16 0, 0, 70, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000050   03003C007300       DC16 3, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
    727          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
    728          	{ TEXT_CreateIndirect, "Resetting your current\nStart/Finish Coordinates!", 0, 0, 10, 360, 50, TEXT_CF_HCENTER },
    729          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 70, 360, 30, TEXT_CF_HCENTER },
    730          	{ BUTTON_CreateIndirect, "YES", GUI_ID_YES, 60, 115, 100, 60 },
    731          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 }
    732          };
    733          
    734          //
    735          // Display a modal dialog box to see if the user wants to reset the start finish coordinates
    736          //
    737          // Returns	true - proceed to reset
    738          //				false - do not reset
    739          //

   \                                 In section .text, align 4, keep-with-next
    740          int okToResetSF(void)
    741          {
   \                     okToResetSF:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
    742          	// KMC TODO - if DriveMode screen uses WM_CF_MEMDEV_ON_REDRAW then the popup screen makes the
    743          	// window background go brown.  But by allowing the paint to continue the brown does not show.
    744          	// This might be "fixed" for all screens if they all use WM_CF_MEMDEV_ON_REDRAW.
    745          	//if (GetCurrentScreen() != DRIVE_MODE_SCREEN)
    746          	//	glbBlackoutFlag = true;			// Suspend gauge screen updates while the modal popup dialog box is diaplyed
    747          
    748          	SetPopupDefaults(WARNING_POPUP);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   ........           BL       SetPopupDefaults
    749          
    750          	return GUI_ExecDialogBox(ResetSFDialog, GUI_COUNTOF(ResetSFDialog), &popupCallback, hTrackSettingsScreens, 10, 10);
   \   00000010   0A00A0E3           MOV      R0,#+10
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   ........           LDR      R0,??DataTable70_9
   \   00000020   ........           LDR      R2,??DataTable70_19
   \   00000024   3C3090E5           LDR      R3,[R0, #+60]
   \   00000028   0510A0E3           MOV      R1,#+5
   \   0000002C   ............       ADRL     R0,ResetSFDialog
   \              ....        
   \   00000034   ........           BL       GUI_ExecDialogBox
   \   00000038   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000003C   0080BDE8           POP      {PC}             ;; return
    751          }
    752          
    753          

   \                                 In section .text, align 4, keep-with-next
    754          char CourseTypeToIndex(enum TRACK_TYPES type)
    755          {
    756          	switch (type)
   \                     CourseTypeToIndex:
   \   00000000   010040E2           SUB      R0,R0,#+1
   \   00000004   060050E3           CMP      R0,#+6
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CourseTypeToIndex_0:
   \   0000000C   0600008A           BHI      ??CourseTypeToIndex_1
   \   00000010   070000EA           B        ??CourseTypeToIndex_2
   \   00000014   080000EA           B        ??CourseTypeToIndex_3
   \   00000018   090000EA           B        ??CourseTypeToIndex_4
   \   0000001C   080000EA           B        ??CourseTypeToIndex_4
   \   00000020   070000EA           B        ??CourseTypeToIndex_4
   \   00000024   080000EA           B        ??CourseTypeToIndex_5
   \   00000028   090000EA           B        ??CourseTypeToIndex_6
    757          	{
    758          	default:
    759          	case ROAD_COURSE:	return 0;
   \                     ??CourseTypeToIndex_1:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   1EFF2FE1           BX       LR
    760          	case OVAL:			return 1;
   \                     ??CourseTypeToIndex_2:
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   1EFF2FE1           BX       LR
    761          	case AUTOXRALLY:	return 2;
   \                     ??CourseTypeToIndex_3:
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   1EFF2FE1           BX       LR
    762          	case DRAG_1_8:
    763          	case DRAG_1000:
    764          	case DRAG:			return 3;
   \                     ??CourseTypeToIndex_4:
   \   00000044   0300A0E3           MOV      R0,#+3
   \   00000048   1EFF2FE1           BX       LR
    765          	case HILL_CLIMB:	return 4;
   \                     ??CourseTypeToIndex_5:
   \   0000004C   0400A0E3           MOV      R0,#+4
   \   00000050   1EFF2FE1           BX       LR
    766          	case DRIVE_COURSE:	return 5;
   \                     ??CourseTypeToIndex_6:
   \   00000054   0500A0E3           MOV      R0,#+5
   \   00000058   1EFF2FE1           BX       LR               ;; return
    767          	}
    768          }
    769          

   \                                 In section .text, align 4, keep-with-next
    770          enum TRACK_TYPES IndexToCourseType(char type)
    771          {
    772          	switch (type)
   \                     IndexToCourseType:
   \   00000000   010040E2           SUB      R0,R0,#+1
   \   00000004   040050E3           CMP      R0,#+4
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??IndexToCourseType_0:
   \   0000000C   0400008A           BHI      ??IndexToCourseType_1
   \   00000010   050000EA           B        ??IndexToCourseType_2
   \   00000014   060000EA           B        ??IndexToCourseType_3
   \   00000018   070000EA           B        ??IndexToCourseType_4
   \   0000001C   080000EA           B        ??IndexToCourseType_5
   \   00000020   090000EA           B        ??IndexToCourseType_6
    773          	{
    774          	default:
    775          	case 0:	return ROAD_COURSE;
   \                     ??IndexToCourseType_1:
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   1EFF2FE1           BX       LR
    776          	case 1:	return OVAL;
   \                     ??IndexToCourseType_2:
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   1EFF2FE1           BX       LR
    777          	case 2:	return AUTOXRALLY;
   \                     ??IndexToCourseType_3:
   \   00000034   0200A0E3           MOV      R0,#+2
   \   00000038   1EFF2FE1           BX       LR
    778          	case 3: return DRAG;
   \                     ??IndexToCourseType_4:
   \   0000003C   0500A0E3           MOV      R0,#+5
   \   00000040   1EFF2FE1           BX       LR
    779          	case 4:	return HILL_CLIMB;
   \                     ??IndexToCourseType_5:
   \   00000044   0600A0E3           MOV      R0,#+6
   \   00000048   1EFF2FE1           BX       LR
    780          	case 5:	return DRIVE_COURSE;
   \                     ??IndexToCourseType_6:
   \   0000004C   0700A0E3           MOV      R0,#+7
   \   00000050   1EFF2FE1           BX       LR               ;; return
    781          	}
    782          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable54:
   \   00000000   25660000           DC8      0x25, 0x66, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   25660000           DC8      0x25, 0x66, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_1:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_2:
   \   00000000   ........           DC32     TrackSettingMainScreenCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_3:
   \   00000000   ........           DC32     clickedOnVSMScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_4:
   \   00000000   ........           DC32     bmTrackType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_5:
   \   00000000   ........           DC32     bmLapHoldTimeButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_6:
   \   00000000   ........           DC32     bmStartFinish

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   ........           DC32     bmResetPredictiveLap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_1:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_2:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_3:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_4:
   \   00000000   ........           DC32     bmTrackSettingsText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_5:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_6:
   \   00000000   ........           DC32     TrackSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_7:
   \   00000000   ........           DC32     GUI_Font32_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66:
   \   00000000   ........           DC32     trackData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable66_1:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable67:
   \   00000000   ........           DC32     pressingbutton_semaphore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable67_1:
   \   00000000   25660000           DC8      0x25, 0x66, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable67_2:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70:
   \   00000000   ........           DC32     trackData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_1:
   \   00000000   ........           DC32     pTrackTypes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_2:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_3:
   \   00000000   ........           DC32     LapHoldTimes

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_4:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_5:
   \   00000000   ........           DC32     bmSingleSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_6:
   \   00000000   ........           DC32     bmTrackTypeText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_7:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_8:
   \   00000000   ........           DC32     bmLaptimeHold

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_9:
   \   00000000   ........           DC32     TrackSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_10:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_11:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_12:
   \   00000000   ........           DC32     GUI_Font32B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_13:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_14:
   \   00000000   ........           DC32     bmStartFinishText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_15:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_16:
   \   00000000   ........           DC32     sysData+0xA0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_17:
   \   00000000   ........           DC32     hFastestLap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_18:
   \   00000000   ........           DC32     bmPredictiveLapText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable70_19:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Road Race - Closed">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   526F61642052       DC8 82, 111, 97, 100, 32, 82, 97, 99, 101, 32
   \              61636520    
   \   0000000A   2D20436C6F73       DC8 45, 32, 67, 108, 111, 115, 101, 100, 0, 0
   \              65640000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Oval - Closed">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4F76616C202D       DC8 79, 118, 97, 108, 32, 45, 32, 67, 108, 111
   \              20436C6F    
   \   0000000A   736564000000       DC8 115, 101, 100, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Auto-X/Rally - Open">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4175746F2D58       DC8 65, 117, 116, 111, 45, 88, 47, 82, 97, 108
   \              2F52616C    
   \   0000000A   6C79202D204F       DC8 108, 121, 32, 45, 32, 79, 112, 101, 110, 0
   \              70656E00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Drag Strip - Open">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   447261672053       DC8 68, 114, 97, 103, 32, 83, 116, 114, 105, 112
   \              74726970    
   \   0000000A   202D204F7065       DC8 32, 45, 32, 79, 112, 101, 110, 0, 0, 0
   \              6E000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Hill Climb - Open">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   48696C6C2043       DC8 72, 105, 108, 108, 32, 67, 108, 105, 109, 98
   \              6C696D62    
   \   0000000A   202D204F7065       DC8 32, 45, 32, 79, 112, 101, 110, 0, 0, 0
   \              6E000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Drive - Open">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   447269766520       DC8 68, 114, 105, 118, 101, 32, 45, 32, 79, 112
   \              2D204F70    
   \   0000000A   656E00000000       DC8 101, 110, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "0 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   302073656300       DC8 48, 32, 115, 101, 99, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "10 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313020736563       DC8 49, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "20 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   323020736563       DC8 50, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "30 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   333020736563       DC8 51, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "40 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   343020736563       DC8 52, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "50 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   353020736563       DC8 53, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "60 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   363020736563       DC8 54, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "70 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   373020736563       DC8 55, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "80 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   383020736563       DC8 56, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "90 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   393020736563       DC8 57, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "100 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313030207365       DC8 49, 48, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "110 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313130207365       DC8 49, 49, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "120 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313230207365       DC8 49, 50, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "130 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313330207365       DC8 49, 51, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "140 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313430207365       DC8 49, 52, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "150 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313530207365       DC8 49, 53, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "160 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313630207365       DC8 49, 54, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "170 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313730207365       DC8 49, 55, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "180 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313830207365       DC8 49, 56, 48, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select Race Type">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 82, 97, 99
   \              20526163    
   \   0000000A   652054797065       DC8 101, 32, 84, 121, 112, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "On-Screen Time">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4F6E2D536372       DC8 79, 110, 45, 83, 99, 114, 101, 101, 110, 32
   \              65656E20    
   \   0000000A   54696D650000       DC8 84, 105, 109, 101, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.0f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   252E30660000       DC8 37, 46, 48, 102, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Clear Start/Finish">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436C65617220       DC8 67, 108, 101, 97, 114, 32, 83, 116, 97, 114
   \              53746172    
   \   0000000A   742F46696E69       DC8 116, 47, 70, 105, 110, 105, 115, 104, 0, 0
   \              73680000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Clear Start Line">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436C65617220       DC8 67, 108, 101, 97, 114, 32, 83, 116, 97, 114
   \              53746172    
   \   0000000A   74204C696E65       DC8 116, 32, 76, 105, 110, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Start/Finish">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 83, 116, 97, 114
   \              53746172    
   \   0000000A   742F46696E69       DC8 116, 47, 70, 105, 110, 105, 115, 104, 0, 0
   \              73680000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Start/Finish">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53746172742F       DC8 83, 116, 97, 114, 116, 47, 70, 105, 110, 105
   \              46696E69    
   \   0000000A   736800000000       DC8 115, 104, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Heading">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   48656164696E       DC8 72, 101, 97, 100, 105, 110, 103, 0
   \              6700        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Start Line">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 83, 116, 97, 114
   \              53746172    
   \   0000000A   74204C696E65       DC8 116, 32, 76, 105, 110, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reset Time">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 84, 105, 109, 101
   \              54696D65    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Resetting will clear ...">`:
   \   00000000                      ; Initializer data, 52 bytes
   \   00000000   526573657474       DC8 82, 101, 115, 101, 116, 116, 105, 110, 103, 32
   \              696E6720    
   \   0000000A   77696C6C2063       DC8 119, 105, 108, 108, 32, 99, 108, 101, 97, 114
   \              6C656172    
   \   00000014   207468652066       DC8 32, 116, 104, 101, 32, 102, 97, 115, 116, 101
   \              61737465    
   \   0000001E   7374206C6170       DC8 115, 116, 32, 108, 97, 112, 32, 102, 111, 114
   \              20666F72    
   \   00000028   207468697320       DC8 32, 116, 104, 105, 115, 32, 116, 114, 97, 99
   \              74726163    
   \   00000032   6B00               DC8 107, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "WARNING">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5741524E494E       DC8 87, 65, 82, 78, 73, 78, 71, 0
   \              4700        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Resetting your curren...">`:
   \   00000000                      ; Initializer data, 52 bytes
   \   00000000   526573657474       DC8 82, 101, 115, 101, 116, 116, 105, 110, 103, 32
   \              696E6720    
   \   0000000A   796F75722063       DC8 121, 111, 117, 114, 32, 99, 117, 114, 114, 101
   \              75727265    
   \   00000014   6E740A537461       DC8 110, 116, 10, 83, 116, 97, 114, 116, 47, 70
   \              72742F46    
   \   0000001E   696E69736820       DC8 105, 110, 105, 115, 104, 32, 67, 111, 111, 114
   \              436F6F72    
   \   00000028   64696E617465       DC8 100, 105, 110, 97, 116, 101, 115, 33, 0, 0
   \              73210000    
   \   00000032   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Are you sure?">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   41726520796F       DC8 65, 114, 101, 32, 121, 111, 117, 32, 115, 117
   \              75207375    
   \   0000000A   72653F000000       DC8 114, 101, 63, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "YES">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   59455300           DC8 89, 69, 83, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "CANCEL">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   43414E43454C       DC8 67, 65, 78, 67, 69, 76, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%f">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25660000           DC8 37, 102, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "is the current fastes...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   697320746865       DC8 105, 115, 32, 116, 104, 101, 32, 99, 117, 114
   \              20637572    
   \   0000000A   72656E742066       DC8 114, 101, 110, 116, 32, 102, 97, 115, 116, 101
   \              61737465    
   \   00000014   7374206C6170       DC8 115, 116, 32, 108, 97, 112, 0, 0
   \              0000        
    783          
    784          /*************************** End of file ****************************/
    785          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     CourseTypeToIndex                   0
     DisplayHoldTime                    16
     DisplayResetPL                     32
     DisplayStartFinish                 32
     DisplayTrackType                   16
     Display_TrackSettingMainScreen     32
     GetTrackSettingMainWindowHandle
                                         0
     GetTrackSettingsWindowHandle        0
     HoldTimePaint                       8
     IndexToCourseType                   0
     NeedToDisplayFinish                 0
     NeedToEditStartFinish               0
     OpenCourse                          0
     ResetPLPaint                        8
     SetFinishHeadButtonText            40
     SetFinishLatButtonText             40
     SetFinishLongButtonText            40
     SetHeadButtonText                  40
     SetLatButtonText                   40
     SetLongButtonText                  40
     SetTrackSettingMainWindowHandle
                                         0
     SetTrackSettingsWindowHandle        0
     StartFinishPaint                  112
     TSButtonToScreenID                  0
     TrackSettingMainScreenCallback      8
     TrackSettingsIgnoreNextKeyRelease
                                         0
     TrackSettingsScreensCallback      152
     TrackTypePaint                      8
     okToResetSF                        16


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     TrackSettingsScreenList                  93
     hTrackSettingsScreens
     clickedOnVSScreen
     hStartLatButton
     hStartLongButton
     hStartHeadButton
     hFinishLatButton
     hFinishLongButton
     hFinishHeadButton
     alteredTrackData
     pTrackTypes                              32
     hTrackTypeWheel
     LapHoldTimes                             84
     hHoldTimeListWheel
     clickedOnVSMScreen                        8
     hTrackSettingMainScreen
     hFastestLap                               4
     Display_TrackSettingMainScreen          428
     TrackSettingMainScreenCallback          328
     GetTrackSettingMainWindowHandle
                                              12
     SetTrackSettingMainWindowHandle
                                              12
     GetTrackSettingsWindowHandle             12
     SetTrackSettingsWindowHandle             12
     TrackSettingsScreensCallback           1260
     TSButtonToScreenID                      188
     DisplayTrackType                        152
     DisplayHoldTime                          84
     TrackTypePaint                           80
     HoldTimePaint                            80
     SetLatButtonText                         52
     SetLongButtonText                        52
     SetHeadButtonText                        68
     SetFinishLatButtonText                   64
     SetFinishLongButtonText                  64
     SetFinishHeadButtonText                  80
     DisplayStartFinish                      880
     StartFinishPaint                        732
     OpenCourse                               40
     NeedToEditStartFinish                    40
     NeedToDisplayFinish                      52
     DisplayResetPL                          200
     ResetPLPaint                            332
     TrackSettingsIgnoreNextKeyRelease
                                              16
     ResetSFDialog                           120
     okToResetSF                              64
     CourseTypeToIndex                        92
     IndexToCourseType                        84
     ??DataTable54                             4
     ??DataTable61                             4
     ??DataTable61_1                           4
     ??DataTable61_2                           4
     ??DataTable61_3                           4
     ??DataTable61_4                           4
     ??DataTable61_5                           4
     ??DataTable61_6                           4
     ??DataTable62                             4
     ??DataTable62_1                           4
     ??DataTable62_2                           4
     ??DataTable62_3                           4
     ??DataTable62_4                           4
     ??DataTable62_5                           4
     ??DataTable62_6                           4
     ??DataTable62_7                           4
     ??DataTable66                             4
     ??DataTable66_1                           4
     ??DataTable67                             4
     ??DataTable67_1                           4
     ??DataTable67_2                           4
     ??DataTable70                             4
     ??DataTable70_1                           4
     ??DataTable70_2                           4
     ??DataTable70_3                           4
     ??DataTable70_4                           4
     ??DataTable70_5                           4
     ??DataTable70_6                           4
     ??DataTable70_7                           4
     ??DataTable70_8                           4
     ??DataTable70_9                           4
     ??DataTable70_10                          4
     ??DataTable70_11                          4
     ??DataTable70_12                          4
     ??DataTable70_13                          4
     ??DataTable70_14                          4
     ??DataTable70_15                          4
     ??DataTable70_16                          4
     ??DataTable70_17                          4
     ??DataTable70_18                          4
     ??DataTable70_19                          4
     ?<Constant "Road Race - Closed">         20
     ?<Constant "Oval - Closed">              16
     ?<Constant "Auto-X/Rally - Open">        20
     ?<Constant "Drag Strip - Open">          20
     ?<Constant "Hill Climb - Open">          20
     ?<Constant "Drive - Open">               16
     ?<Constant "0 sec">                       8
     ?<Constant "10 sec">                      8
     ?<Constant "20 sec">                      8
     ?<Constant "30 sec">                      8
     ?<Constant "40 sec">                      8
     ?<Constant "50 sec">                      8
     ?<Constant "60 sec">                      8
     ?<Constant "70 sec">                      8
     ?<Constant "80 sec">                      8
     ?<Constant "90 sec">                      8
     ?<Constant "100 sec">                     8
     ?<Constant "110 sec">                     8
     ?<Constant "120 sec">                     8
     ?<Constant "130 sec">                     8
     ?<Constant "140 sec">                     8
     ?<Constant "150 sec">                     8
     ?<Constant "160 sec">                     8
     ?<Constant "170 sec">                     8
     ?<Constant "180 sec">                     8
     ?<Constant "Select Race Type">           20
     ?<Constant "On-Screen Time">             16
     ?<Constant "%.0f">                        8
     ?<Constant "Clear Start/Finish">         20
     ?<Constant "Clear Start Line">           20
     ?<Constant "Enter Start/Finish">         20
     ?<Constant "Start/Finish">               16
     ?<Constant "Heading">                     8
     ?<Constant "Enter Start Line">           20
     ?<Constant "Reset Time">                 12
     ?<Constant "Resetting will clear ...">   52
     ?<Constant "WARNING">                     8
     ?<Constant "Resetting your curren...">   52
     ?<Constant "Are you sure?">              16
     ?<Constant "YES">                         4
     ?<Constant "CANCEL">                      8
     ?<Constant "%f">                          4
     ?<Constant "is the current fastes...">   28

 
    12 bytes in section .bss
   209 bytes in section .data
   356 bytes in section .rodata
 6 084 bytes in section .text
 
 6 084 bytes of CODE  memory
   356 bytes of CONST memory
   221 bytes of DATA  memory

Errors: none
Warnings: none
