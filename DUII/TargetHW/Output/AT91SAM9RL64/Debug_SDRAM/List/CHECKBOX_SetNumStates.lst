###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:33 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\CHECKBOX_SetNumStates.c             #
#    Command line =  C:\DUII\TargetHW\GUI\CHECKBOX_SetNumStates.c -D DEBUG=1  #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\CH #
#                    ECKBOX_SetNumStates.lst                                  #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\CHE #
#                    CKBOX_SetNumStates.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\CHECKBOX_SetNumStates.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : CHECKBOX_SetNumStates.c
     19          Purpose     : Routines and bitmaps used for third state of checkbox
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "CHECKBOX_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Static const data
     30          *
     31          **********************************************************************
     32          */
     33          /* Colors */

   \                                 In section .rodata, align 4, keep-with-next
     34          static const GUI_COLOR _aColorDisabled[] = {CHECKBOX_BKCOLOR0_DEFAULT, CHECKBOX_FGCOLOR0_DEFAULT};
   \                     _aColorDisabled:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   808080001010       DC32 8421504, 1052688
   \              1000        

   \                                 In section .rodata, align 4, keep-with-next
     35          static const GUI_COLOR _aColorEnabled[]  = {CHECKBOX_BKCOLOR1_DEFAULT, CHECKBOX_FGCOLOR1_DEFAULT};
   \                     _aColorEnabled:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   FFFFFF000000       DC32 16777215, 0
   \              0000        
     36          
     37          /* Palettes */

   \                                 In section .rodata, align 4, keep-with-next
     38          static const GUI_LOGPALETTE _PalCheckDisabled = {
   \                     _PalCheckDisabled:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 _aColorDisabled
     39            2,	/* number of entries */
     40            1, 	/* transparency flag */
     41            _aColorDisabled
     42          };
     43          

   \                                 In section .rodata, align 4, keep-with-next
     44          static const GUI_LOGPALETTE _PalCheckEnabled = {
   \                     _PalCheckEnabled:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 _aColorEnabled
     45            2,	/* number of entries */
     46            1, 	/* transparency flag */
     47            _aColorEnabled
     48          };
     49          
     50          /* Pixel data */

   \                                 In section .rodata, align 4, keep-with-next
     51          static const unsigned char _acCheck[] = {
   \                     _acCheck:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   000000000080       DC8 0, 0, 0, 0, 0, 128, 1, 0, 34, 128
   \              01002280    
   \   0000000A   15002A001400       DC8 21, 0, 42, 0, 20, 0, 8, 0, 0, 0
   \              08000000    
   \   00000014   00000000           DC8 0, 0, 0, 0
     52            ________, ________,
     53            ________, ________,
     54            ________, X_______,
     55            _______X, ________,
     56            __X___X_, X_______,
     57            ___X_X_X, ________,
     58            __X_X_X_, ________,
     59            ___X_X__, ________,
     60            ____X___, ________,
     61            ________, ________,
     62            ________, ________
     63          };
     64          
     65          /* Bitmaps */

   \                                 In section .text, align 4, keep-with-next
     66          static const GUI_BITMAP _abmCheck[2] = {
   \                     _abmCheck:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   0B000B000200       DC16 11, 11, 2, 1
   \              0100        
   \   00000008   ............       DC32 _acCheck, _PalCheckDisabled
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
   \   00000014   0B000B000200       DC16 11, 11, 2, 1
   \              0100        
   \   0000001C   ............       DC32 _acCheck, _PalCheckEnabled
   \              ....        
   \   00000024   00000000           DC8 0, 0, 0, 0
     67            { 11, 11, 2, 1, _acCheck,  &_PalCheckDisabled},
     68            { 11, 11, 2, 1, _acCheck,  &_PalCheckEnabled }
     69          };
     70          
     71          /*********************************************************************
     72          *
     73          *       Exported routines
     74          *
     75          **********************************************************************
     76          */
     77          /*********************************************************************
     78          *
     79          *       CHECKBOX_SetNumStates
     80          */

   \                                 In section .text, align 4, keep-with-next
     81          void CHECKBOX_SetNumStates(CHECKBOX_Handle hObj, unsigned NumStates) {
   \                     CHECKBOX_SetNumStates:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     82            CHECKBOX_Obj * pObj;
     83            if (!CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_INACTIV_3STATE]) {
   \   00000004   ........           LDR      R6,??DataTable6
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   340096E5           LDR      R0,[R6, #+52]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0200001A           BNE      ??CHECKBOX_SetNumStates_0
     84              CHECKBOX_SetDefaultImage(&_abmCheck[0], CHECKBOX_BI_INACTIV_3STATE);
   \   0000001C   0410A0E3           MOV      R1,#+4
   \   00000020   ........           ADR      R0,_abmCheck
   \   00000024   ........           BL       CHECKBOX_SetDefaultImage
     85            }
     86            if (!CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_ACTIV_3STATE]) {
   \                     ??CHECKBOX_SetNumStates_0:
   \   00000028   380096E5           LDR      R0,[R6, #+56]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0200001A           BNE      ??CHECKBOX_SetNumStates_1
     87              CHECKBOX_SetDefaultImage(&_abmCheck[1], CHECKBOX_BI_ACTIV_3STATE);
   \   00000034   0510A0E3           MOV      R1,#+5
   \   00000038   ........           ADR      R0,_abmCheck+0x14
   \   0000003C   ........           BL       CHECKBOX_SetDefaultImage
     88            }
     89            if (hObj && ((NumStates == 2) || (NumStates == 3))) {
   \                     ??CHECKBOX_SetNumStates_1:
   \   00000040   000054E3           CMP      R4,#+0
   \   00000044   0C00000A           BEQ      ??CHECKBOX_SetNumStates_2
   \   00000048   020055E3           CMP      R5,#+2
   \   0000004C   03005513           CMPNE    R5,#+3
   \   00000050   0900001A           BNE      ??CHECKBOX_SetNumStates_2
     90              WM_LOCK();
   \   00000054   ........           BL       GUI_Lock
     91              pObj = CHECKBOX_LOCK_H(hObj);
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       GUI_ALLOC_LockH
     92              pObj->Props.apBm[CHECKBOX_BI_INACTIV_3STATE] = CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_INACTIV_3STATE];
   \   00000060   341096E5           LDR      R1,[R6, #+52]
   \   00000064   681080E5           STR      R1,[R0, #+104]
     93              pObj->Props.apBm[CHECKBOX_BI_ACTIV_3STATE]   = CHECKBOX__DefaultProps.apBm[CHECKBOX_BI_ACTIV_3STATE];
   \   00000068   381096E5           LDR      R1,[R6, #+56]
   \   0000006C   6C1080E5           STR      R1,[R0, #+108]
     94              pObj->NumStates = NumStates;
   \   00000070   7450C0E5           STRB     R5,[R0, #+116]
     95              GUI_UNLOCK_H(pObj);
   \   00000074   ........           BL       GUI_ALLOC_UnlockH
     96              WM_UNLOCK();
   \   00000078   ........           BL       GUI_Unlock
     97            }
     98          }
   \                     ??CHECKBOX_SetNumStates_2:
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     CHECKBOX__DefaultProps
     99          
    100          #else                            /* Avoid problems with empty object modules */
    101            void CHECKBOX_SetNumStates_C(void);
    102            void CHECKBOX_SetNumStates_C(void) {}
    103          #endif

   Maximum stack usage in bytes:

     Function              .cstack
     --------              -------
     CHECKBOX_SetNumStates     16


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     _aColorDisabled          8
     _aColorEnabled           8
     _PalCheckDisabled       12
     _PalCheckEnabled        12
     _acCheck                24
     _abmCheck               40
     CHECKBOX_SetNumStates  128
     ??DataTable6             4

 
  64 bytes in section .rodata
 172 bytes in section .text
 
 172 bytes of CODE  memory
  64 bytes of CONST memory

Errors: none
Warnings: none
