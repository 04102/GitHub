###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:02 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\SLIDER_Color.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\SLIDER_Color.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\SL #
#                    IDER_Color.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\SLI #
#                    DER_Color.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\SLIDER_Color.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : SLIDER_Color.c
     19          Purpose     : Implementation of slider widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "SLIDER_Private.h"
     24          #include "WIDGET.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       SLIDER_SetBkColor
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void SLIDER_SetBkColor(SLIDER_Handle hObj, GUI_COLOR Color) {
   \                     SLIDER_SetBkColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     39            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0E00000A           BEQ      ??SLIDER_SetBkColor_0
     40              SLIDER_Obj * pObj;
     41              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     42              pObj = SLIDER_LOCK_H(hObj);
     43              pObj->Props.BkColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   345080E5           STR      R5,[R0, #+52]
     44              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     45              #if SLIDER_SUPPORT_TRANSPARENCY
     46                if (Color == GUI_INVALID_COLOR) {
   \   0000002C   F004E0E3           MVN      R0,#-268435456
   \   00000030   000055E1           CMP      R5,R0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   0100001A           BNE      ??SLIDER_SetBkColor_1
     47                  WM_SetHasTrans(hObj);
   \   0000003C   ........           BL       WM_SetHasTrans
   \   00000040   000000EA           B        ??SLIDER_SetBkColor_2
     48                } else {
     49                  WM_ClrHasTrans(hObj);
   \                     ??SLIDER_SetBkColor_1:
   \   00000044   ........           BL       WM_ClrHasTrans
     50                }
     51              #endif
     52              WM_InvalidateWindow(hObj);
   \                     ??SLIDER_SetBkColor_2:
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       WM_InvalidateWindow
     53              WM_UNLOCK();
   \   00000050   ........           BL       GUI_Unlock
     54            }
     55          }
   \                     ??SLIDER_SetBkColor_0:
   \   00000054   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     56          
     57          /*********************************************************************
     58          *
     59          *       SLIDER_GetBkColor
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          GUI_COLOR SLIDER_GetBkColor(SLIDER_Handle hObj) {
   \                     SLIDER_GetBkColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     62            GUI_COLOR Color;
     63            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     64            if (hObj) {
   \   00000010   0500000A           BEQ      ??SLIDER_GetBkColor_0
     65              SLIDER_Obj * pObj;
     66              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     67              pObj = SLIDER_LOCK_H(hObj);
     68              Color = pObj->Props.BkColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   345090E5           LDR      R5,[R0, #+52]
     69              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     70              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
     71            }
     72            return Color;
   \                     ??SLIDER_GetBkColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     73          }
     74          
     75          /*********************************************************************
     76          *
     77          *       SLIDER_SetBarColor
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          void SLIDER_SetBarColor(SLIDER_Handle hObj, GUI_COLOR Color) {
   \                     SLIDER_SetBarColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     80            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??SLIDER_SetBarColor_0
     81              SLIDER_Obj * pObj;
     82              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     83              pObj = SLIDER_LOCK_H(hObj);
     84              pObj->Props.BarColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   385080E5           STR      R5,[R0, #+56]
     85              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     86              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
     87              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
     88            }
     89          }
   \                     ??SLIDER_SetBarColor_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     90          
     91          /*********************************************************************
     92          *
     93          *       SLIDER_GetBarColor
     94          */

   \                                 In section .text, align 4, keep-with-next
     95          GUI_COLOR SLIDER_GetBarColor(SLIDER_Handle hObj) {
   \                     SLIDER_GetBarColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     96            GUI_COLOR Color;
     97            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     98            if (hObj) {
   \   00000010   0500000A           BEQ      ??SLIDER_GetBarColor_0
     99              SLIDER_Obj * pObj;
    100              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    101              pObj = SLIDER_LOCK_H(hObj);
    102              Color = pObj->Props.BarColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   385090E5           LDR      R5,[R0, #+56]
    103              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    104              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    105            }
    106            return Color;
   \                     ??SLIDER_GetBarColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    107          }
    108          
    109          /*********************************************************************
    110          *
    111          *       SLIDER_SetTickColor
    112          */

   \                                 In section .text, align 4, keep-with-next
    113          void SLIDER_SetTickColor(SLIDER_Handle hObj, GUI_COLOR Color) {
   \                     SLIDER_SetTickColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    114            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??SLIDER_SetTickColor_0
    115              SLIDER_Obj * pObj;
    116              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    117              pObj = SLIDER_LOCK_H(hObj);
    118              pObj->Props.TickColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   405080E5           STR      R5,[R0, #+64]
    119              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    120              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
    121              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
    122            }
    123          }
   \                     ??SLIDER_SetTickColor_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
    124          
    125          /*********************************************************************
    126          *
    127          *       SLIDER_GetTickColor
    128          */

   \                                 In section .text, align 4, keep-with-next
    129          GUI_COLOR SLIDER_GetTickColor(SLIDER_Handle hObj) {
   \                     SLIDER_GetTickColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    130            GUI_COLOR Color;
    131            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    132            if (hObj) {
   \   00000010   0500000A           BEQ      ??SLIDER_GetTickColor_0
    133              SLIDER_Obj * pObj;
    134              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    135              pObj = SLIDER_LOCK_H(hObj);
    136              Color = pObj->Props.TickColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   405090E5           LDR      R5,[R0, #+64]
    137              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    138              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    139            }
    140            return Color;
   \                     ??SLIDER_GetTickColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    141          }
    142          
    143          /*********************************************************************
    144          *
    145          *       SLIDER_SetFocusColor
    146          */

   \                                 In section .text, align 4, keep-with-next
    147          GUI_COLOR SLIDER_SetFocusColor(SLIDER_Handle hObj, GUI_COLOR Color) {
   \                     SLIDER_SetFocusColor:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    148            GUI_COLOR OldColor = 0;
   \   0000000C   0070A0E3           MOV      R7,#+0
    149            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0B00000A           BEQ      ??SLIDER_SetFocusColor_0
    150              SLIDER_Obj* pObj;
    151              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    152              pObj = SLIDER_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    153              if (Color != pObj->Props.FocusColor) {
   \   00000024   3C1090E5           LDR      R1,[R0, #+60]
   \   00000028   010055E1           CMP      R5,R1
   \   0000002C   0300000A           BEQ      ??SLIDER_SetFocusColor_1
    154                OldColor = pObj->Props.FocusColor;
    155                pObj->Props.FocusColor = Color;
   \   00000030   3C5080E5           STR      R5,[R0, #+60]
   \   00000034   0170A0E1           MOV      R7,R1
    156                WM_InvalidateWindow(hObj);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       WM_InvalidateWindow
    157              }
    158              GUI_UNLOCK_H(pObj);
   \                     ??SLIDER_SetFocusColor_1:
   \   00000040   ........           BL       GUI_ALLOC_UnlockH
    159              WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
    160            }
    161            return OldColor;
   \                     ??SLIDER_SetFocusColor_0:
   \   00000048   0700A0E1           MOV      R0,R7
   \   0000004C   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    162          }
    163          
    164          /*********************************************************************
    165          *
    166          *       SLIDER_GetFocusColor
    167          */

   \                                 In section .text, align 4, keep-with-next
    168          GUI_COLOR SLIDER_GetFocusColor(SLIDER_Handle hObj) {
   \                     SLIDER_GetFocusColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    169            GUI_COLOR Color;
    170            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    171            if (hObj) {
   \   00000010   0500000A           BEQ      ??SLIDER_GetFocusColor_0
    172              SLIDER_Obj * pObj;
    173              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    174              pObj = SLIDER_LOCK_H(hObj);
    175              Color = pObj->Props.FocusColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   3C5090E5           LDR      R5,[R0, #+60]
    176              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    177              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    178            }
    179            return Color;
   \                     ??SLIDER_GetFocusColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    180          }
    181          
    182          #else /* avoid empty object files */
    183          
    184          void SLIDER_Color_C(void);
    185          void SLIDER_Color_C(void){}
    186          
    187          #endif  /* #if GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     SLIDER_GetBarColor       16
     SLIDER_GetBkColor        16
     SLIDER_GetFocusColor     16
     SLIDER_GetTickColor      16
     SLIDER_SetBarColor       16
     SLIDER_SetBkColor        16
     SLIDER_SetFocusColor     24
     SLIDER_SetTickColor      16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     SLIDER_SetBkColor      92
     SLIDER_GetBkColor      56
     SLIDER_SetBarColor     64
     SLIDER_GetBarColor     56
     SLIDER_SetTickColor    64
     SLIDER_GetTickColor    56
     SLIDER_SetFocusColor   80
     SLIDER_GetFocusColor   56

 
 524 bytes in section .text
 
 524 bytes of CODE memory

Errors: none
Warnings: none
