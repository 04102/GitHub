###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:04 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SetTextStyle.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SetTextStyle.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_SetTextStyle.lst                                       #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _SetTextStyle.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SetTextStyle.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_SetTextStyle.C
     19          Purpose     : Implementation of various text styles
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI__cbDrawTextStyle
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          static void GUI__cbDrawTextStyle(U16 Char) {
   \                     GUI__cbDrawTextStyle:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     36            int x0, x1;
     37            x1 = GUI_Context.DispPosX - 1;
   \   00000004   ........           LDR      R4,??DataTable1
   \   00000008   F212D4E1           LDRSH    R1,[R4, #+34]
   \   0000000C   015041E2           SUB      R5,R1,#+1
     38            x0 = x1 - GUI_Context.pAFont->pfGetCharDistX(Char) + 1;
   \   00000010   1C1094E5           LDR      R1,[R4, #+28]
   \   00000014   041091E5           LDR      R1,[R1, #+4]
   \   00000018   31FF2FE1           BLX      R1
   \   0000001C   000045E0           SUB      R0,R5,R0
   \   00000020   016080E2           ADD      R6,R0,#+1
     39            /* Handle Underline */
     40            if (GUI_Context.TextStyle & GUI_TS_UNDERLINE) {
   \   00000024   1200D4E5           LDRB     R0,[R4, #+18]
   \   00000028   010010E3           TST      R0,#0x1
   \   0000002C   0900000A           BEQ      ??GUI__cbDrawTextStyle_0
     41              int yOff = GUI_Context.pAFont->Baseline;
   \   00000030   1C0094E5           LDR      R0,[R4, #+28]
     42              if (yOff >= GUI_Context.pAFont->YSize) {
     43                yOff = GUI_Context.pAFont->YSize - 1;
     44              }
     45              LCD_DrawHLine(x0, GUI_Context.DispPosY + yOff, x1);
   \   00000034   0520A0E1           MOV      R2,R5
   \   00000038   2010D0E5           LDRB     R1,[R0, #+32]
   \   0000003C   1800D0E5           LDRB     R0,[R0, #+24]
   \   00000040   000051E1           CMP      R1,R0
   \   00000044   011040A2           SUBGE    R1,R0,#+1
   \   00000048   F402D4E1           LDRSH    R0,[R4, #+36]
   \   0000004C   001081E0           ADD      R1,R1,R0
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   ........           BL       LCD_DrawHLine
     46            }
     47            /* Handle strike thru */
     48            if (GUI_Context.TextStyle & GUI_TS_STRIKETHRU) {
   \                     ??GUI__cbDrawTextStyle_0:
   \   00000058   1200D4E5           LDRB     R0,[R4, #+18]
   \   0000005C   020010E3           TST      R0,#0x2
   \   00000060   0A00000A           BEQ      ??GUI__cbDrawTextStyle_1
     49              int yOff = GUI_Context.pAFont->Baseline - ((GUI_Context.pAFont->CHeight + 1) / 2);
     50              LCD_DrawHLine(x0, GUI_Context.DispPosY + yOff, x1);
   \   00000064   1C0094E5           LDR      R0,[R4, #+28]
   \   00000068   F412D4E1           LDRSH    R1,[R4, #+36]
   \   0000006C   2030D0E5           LDRB     R3,[R0, #+32]
   \   00000070   2200D0E5           LDRB     R0,[R0, #+34]
   \   00000074   0520A0E1           MOV      R2,R5
   \   00000078   011083E0           ADD      R1,R3,R1
   \   0000007C   010080E2           ADD      R0,R0,#+1
   \   00000080   0008A0E1           LSL      R0,R0,#+16
   \   00000084   A01841E0           SUB      R1,R1,R0, LSR #+17
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   ........           BL       LCD_DrawHLine
     51            }
     52            /* Handle over line */
     53            if (GUI_Context.TextStyle & GUI_TS_OVERLINE) {
   \                     ??GUI__cbDrawTextStyle_1:
   \   00000090   1200D4E5           LDRB     R0,[R4, #+18]
   \   00000094   040010E3           TST      R0,#0x4
   \   00000098   0A00000A           BEQ      ??GUI__cbDrawTextStyle_2
     54              int yOff = GUI_Context.pAFont->Baseline - GUI_Context.pAFont->CHeight - 1;
   \   0000009C   1C0094E5           LDR      R0,[R4, #+28]
     55              if (yOff < 0) {
     56                yOff = 0;
     57              }
     58              LCD_DrawHLine(x0, GUI_Context.DispPosY + yOff, x1);
   \   000000A0   0520A0E1           MOV      R2,R5
   \   000000A4   2010D0E5           LDRB     R1,[R0, #+32]
   \   000000A8   2200D0E5           LDRB     R0,[R0, #+34]
   \   000000AC   000041E0           SUB      R0,R1,R0
   \   000000B0   F412D4E1           LDRSH    R1,[R4, #+36]
   \   000000B4   010050E2           SUBS     R0,R0,#+1
   \   000000B8   0000A043           MOVMI    R0,#+0
   \   000000BC   011080E0           ADD      R1,R0,R1
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   ........           BL       LCD_DrawHLine
     59            }
     60          }
   \                     ??GUI__cbDrawTextStyle_2:
   \   000000C8   7080BDE8           POP      {R4-R6,PC}       ;; return
     61          
     62          /*********************************************************************
     63          *
     64          *       Public code
     65          *
     66          **********************************************************************
     67          */
     68          /*********************************************************************
     69          *
     70          *       GUI_SetTextStyle
     71          */

   \                                 In section .text, align 4, keep-with-next
     72          char GUI_SetTextStyle(char Style) {
   \                     GUI_SetTextStyle:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
     73            char OldStyle;
     74            GUI_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     75            OldStyle = GUI_Context.TextStyle;
   \   00000010   ........           LDR      R0,??DataTable1
     76            GUI_pfDispCharStyle = GUI__cbDrawTextStyle;    /* Init function pointer (function in this module) */
   \   00000014   ........           LDR      R1,??DataTable1_1
   \   00000018   ........           LDR      R2,??DataTable1_2
   \   0000001C   1250D0E5           LDRB     R5,[R0, #+18]
   \   00000020   002081E5           STR      R2,[R1, #+0]
     77            GUI_Context.TextStyle = Style;
   \   00000024   1240C0E5           STRB     R4,[R0, #+18]
     78            GUI_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
     79            return OldStyle;
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     80          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     GUI_pfDispCharStyle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     GUI__cbDrawTextStyle
     81          
     82          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_SetTextStyle         16
     GUI__cbDrawTextStyle     16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     GUI__cbDrawTextStyle  204
     GUI_SetTextStyle       56
     ??DataTable1            4
     ??DataTable1_1          4
     ??DataTable1_2          4

 
 272 bytes in section .text
 
 272 bytes of CODE memory

Errors: none
Warnings: none
