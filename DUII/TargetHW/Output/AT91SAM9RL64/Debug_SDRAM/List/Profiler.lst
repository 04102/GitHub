###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:43 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\Setup\Profiler.c                        #
#    Command line =  C:\DUII\TargetHW\Setup\Profiler.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Pr #
#                    ofiler.lst                                               #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Pro #
#                    filer.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\Setup\Profiler.c
      1          #define PROFILER_C
      2          
      3          // definitions for task resource profiler
      4          // These values will be displayed on a new test screen enabled by "testmode" in root of sd card.
      5          // GAStephens 2-22-2012
      6          
      7          #include "profiler.h"
      8          #include "DUII.h"
      9          
     10          void PF_Calculate( int taskNum );
     11          void PF_Increment( int taskNum );
     12          	

   \                                 In section .text, align 4, keep-with-next
     13          void PF_OS_Delay( int taskNum, int ms) {
   \                     PF_OS_Delay:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     14          	PF_Calculate( taskNum );		
   \   00000004   1C20A0E3           MOV      R2,#+28
   \   00000008   ........           LDR      R3,??DataTable16
   \   0000000C   923024E0           MLA      R4,R2,R0,R3
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C2094E5           LDR      R2,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_Delay_0
   \   00000024   1C3095E5           LDR      R3,[R5, #+28]
   \   00000028   022043E0           SUB      R2,R3,R2
   \   0000002C   143094E5           LDR      R3,[R4, #+20]
   \   00000030   020053E1           CMP      R3,R2
   \   00000034   0230A031           MOVCC    R3,R2
   \   00000038   143084E5           STR      R3,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000082E0           ADD      R0,R2,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     15          	OS_Delay( ms );
   \                     ??PF_OS_Delay_0:
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   ........           BL       OS_Delay
     16          	PF_Increment( taskNum );
   \   00000050   100094E5           LDR      R0,[R4, #+16]
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   100084E5           STR      R0,[R4, #+16]
   \   00000060   1C0095E5           LDR      R0,[R5, #+28]
   \   00000064   0C0084E5           STR      R0,[R4, #+12]
     17          }; // PF_OS_Delay
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
     18          

   \                                 In section .text, align 4, keep-with-next
     19          char PF_OS_WaitEventTimed( int taskNum, unsigned char EventMask, OS_TIME TimeOut) {
   \                     PF_OS_WaitEventTimed:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     20          	char returnVal;
     21          	
     22          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_WaitEventTimed_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     23          	returnVal = OS_WaitEventTimed( EventMask, TimeOut );
   \                     ??PF_OS_WaitEventTimed_0:
   \   00000054   ........           BL       OS_WaitEventTimed
     24          	PF_Increment( taskNum );
   \   00000058   101094E5           LDR      R1,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   011081E2           ADD      R1,R1,#+1
   \   00000064   101084E5           STR      R1,[R4, #+16]
   \   00000068   1C1095E5           LDR      R1,[R5, #+28]
   \   0000006C   0C1084E5           STR      R1,[R4, #+12]
     25          	return (returnVal);
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     26          }; // PF_OS_WaitEventTimed
     27          

   \                                 In section .text, align 4, keep-with-next
     28          char PF_OS_WaitSingleEventTimed( int taskNum, unsigned char EventMask, OS_TIME TimeOut) {
   \                     PF_OS_WaitSingleEventTimed:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     29          	char returnVal;
     30          	
     31          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_WaitSingleEventTimed_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     32          	returnVal = OS_WaitSingleEventTimed( EventMask, TimeOut );
   \                     ??PF_OS_WaitSingleEventTimed_0:
   \   00000054   ........           BL       OS_WaitSingleEventTimed
     33          	PF_Increment( taskNum );
   \   00000058   101094E5           LDR      R1,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   011081E2           ADD      R1,R1,#+1
   \   00000064   101084E5           STR      R1,[R4, #+16]
   \   00000068   1C1095E5           LDR      R1,[R5, #+28]
   \   0000006C   0C1084E5           STR      R1,[R4, #+12]
     34          	return (returnVal);
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     35          }; // PF_OS_WaitSingleEventTimed
     36          

   \                                 In section .text, align 4, keep-with-next
     37          char PF_OS_WaitEvent( int taskNum, unsigned char EventMask) {
   \                     PF_OS_WaitEvent:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     38          	char returnVal;
     39          	
     40          	PF_Calculate( taskNum );	
   \   00000004   1C20A0E3           MOV      R2,#+28
   \   00000008   ........           LDR      R3,??DataTable16
   \   0000000C   923024E0           MLA      R4,R2,R0,R3
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C2094E5           LDR      R2,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_WaitEvent_0
   \   00000024   1C3095E5           LDR      R3,[R5, #+28]
   \   00000028   022043E0           SUB      R2,R3,R2
   \   0000002C   143094E5           LDR      R3,[R4, #+20]
   \   00000030   020053E1           CMP      R3,R2
   \   00000034   0230A031           MOVCC    R3,R2
   \   00000038   143084E5           STR      R3,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000082E0           ADD      R0,R2,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     41          	returnVal = OS_WaitEvent( EventMask );
   \                     ??PF_OS_WaitEvent_0:
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   ........           BL       OS_WaitEvent
     42          	PF_Increment( taskNum );
   \   00000050   101094E5           LDR      R1,[R4, #+16]
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   011081E2           ADD      R1,R1,#+1
   \   0000005C   101084E5           STR      R1,[R4, #+16]
   \   00000060   1C1095E5           LDR      R1,[R5, #+28]
   \   00000064   0C1084E5           STR      R1,[R4, #+12]
     43          	return (returnVal);
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
     44          }; // PF_OS_WaitEvent
     45          

   \                                 In section .text, align 4, keep-with-next
     46          void PF_OS_Use( int taskNum, OS_RSEMA* pRSema) {
   \                     PF_OS_Use:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     47          	PF_Calculate( taskNum );	
   \   00000004   1C20A0E3           MOV      R2,#+28
   \   00000008   ........           LDR      R3,??DataTable16
   \   0000000C   923024E0           MLA      R4,R2,R0,R3
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C2094E5           LDR      R2,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_Use_0
   \   00000024   1C3095E5           LDR      R3,[R5, #+28]
   \   00000028   022043E0           SUB      R2,R3,R2
   \   0000002C   143094E5           LDR      R3,[R4, #+20]
   \   00000030   020053E1           CMP      R3,R2
   \   00000034   0230A031           MOVCC    R3,R2
   \   00000038   143084E5           STR      R3,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000082E0           ADD      R0,R2,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     48          	OS_Use( pRSema );
   \                     ??PF_OS_Use_0:
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   ........           BL       OS_Use
     49          	PF_Increment( taskNum );
   \   00000050   100094E5           LDR      R0,[R4, #+16]
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   100084E5           STR      R0,[R4, #+16]
   \   00000060   1C0095E5           LDR      R0,[R5, #+28]
   \   00000064   0C0084E5           STR      R0,[R4, #+12]
     50          }; // PF_OS_Use
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
     51          

   \                                 In section .text, align 4, keep-with-next
     52          void PF_OS_Unuse( int taskNum, OS_RSEMA* pRSema) {
   \                     PF_OS_Unuse:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     53          	PF_Calculate( taskNum );	
   \   00000004   1C20A0E3           MOV      R2,#+28
   \   00000008   ........           LDR      R3,??DataTable16
   \   0000000C   923024E0           MLA      R4,R2,R0,R3
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C2094E5           LDR      R2,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_Unuse_0
   \   00000024   1C3095E5           LDR      R3,[R5, #+28]
   \   00000028   022043E0           SUB      R2,R3,R2
   \   0000002C   143094E5           LDR      R3,[R4, #+20]
   \   00000030   020053E1           CMP      R3,R2
   \   00000034   0230A031           MOVCC    R3,R2
   \   00000038   143084E5           STR      R3,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000082E0           ADD      R0,R2,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     54          	OS_Unuse( pRSema );
   \                     ??PF_OS_Unuse_0:
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   ........           BL       OS_Unuse
     55          	PF_Increment( taskNum );
   \   00000050   100094E5           LDR      R0,[R4, #+16]
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   100084E5           STR      R0,[R4, #+16]
   \   00000060   1C0095E5           LDR      R0,[R5, #+28]
   \   00000064   0C0084E5           STR      R0,[R4, #+12]
     56          }; // PF_OS_Unuse
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
     57          

   \                                 In section .text, align 4, keep-with-next
     58          void PF_OS_PutMail( int taskNum, OS_MAILBOX* pMB, void* pDest) {
   \                     PF_OS_PutMail:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     59          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_PutMail_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     60          	OS_PutMail( pMB, pDest );
   \                     ??PF_OS_PutMail_0:
   \   00000054   ........           BL       OS_PutMail
     61          	PF_Increment( taskNum );
   \   00000058   100094E5           LDR      R0,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   010080E2           ADD      R0,R0,#+1
   \   00000064   100084E5           STR      R0,[R4, #+16]
   \   00000068   1C0095E5           LDR      R0,[R5, #+28]
   \   0000006C   0C0084E5           STR      R0,[R4, #+12]
     62          }; // PF_OS_PutMail
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     63          

   \                                 In section .text, align 4, keep-with-next
     64          void PF_OS_GetMail( int taskNum, OS_MAILBOX* pMB, void* pDest) {
   \                     PF_OS_GetMail:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     65          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_GetMail_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     66          	OS_GetMail( pMB, pDest );
   \                     ??PF_OS_GetMail_0:
   \   00000054   ........           BL       OS_GetMail
     67          	PF_Increment( taskNum );
   \   00000058   100094E5           LDR      R0,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   010080E2           ADD      R0,R0,#+1
   \   00000064   100084E5           STR      R0,[R4, #+16]
   \   00000068   1C0095E5           LDR      R0,[R5, #+28]
   \   0000006C   0C0084E5           STR      R0,[R4, #+12]
     68          }; // PF_OS_GetMail
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     69          

   \                                 In section .text, align 4, keep-with-next
     70          void PF_OS_SetPriority(int taskNum, OS_TASK* pTask, unsigned char Priority) {
   \                     PF_OS_SetPriority:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     71          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_SetPriority_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     72          	OS_SetPriority( pTask, Priority );
   \                     ??PF_OS_SetPriority_0:
   \   00000054   ........           BL       OS_SetPriority
     73          	PF_Increment( taskNum );
   \   00000058   100094E5           LDR      R0,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   010080E2           ADD      R0,R0,#+1
   \   00000064   100084E5           STR      R0,[R4, #+16]
   \   00000068   1C0095E5           LDR      R0,[R5, #+28]
   \   0000006C   0C0084E5           STR      R0,[R4, #+12]
     74          }; // PF_OS_SetPriority
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     75          

   \                                 In section .text, align 4, keep-with-next
     76          void PF_OS_WakeTask (int taskNum, OS_TASK* pTask) {
   \                     PF_OS_WakeTask:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     77          	PF_Calculate( taskNum );	
   \   00000004   1C20A0E3           MOV      R2,#+28
   \   00000008   ........           LDR      R3,??DataTable16
   \   0000000C   923024E0           MLA      R4,R2,R0,R3
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C2094E5           LDR      R2,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000052E3           CMP      R2,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_WakeTask_0
   \   00000024   1C3095E5           LDR      R3,[R5, #+28]
   \   00000028   022043E0           SUB      R2,R3,R2
   \   0000002C   143094E5           LDR      R3,[R4, #+20]
   \   00000030   020053E1           CMP      R3,R2
   \   00000034   0230A031           MOVCC    R3,R2
   \   00000038   143084E5           STR      R3,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000082E0           ADD      R0,R2,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     78          	OS_WakeTask( pTask );
   \                     ??PF_OS_WakeTask_0:
   \   00000048   0100A0E1           MOV      R0,R1
   \   0000004C   ........           BL       OS_WakeTask
     79          	PF_Increment( taskNum );
   \   00000050   100094E5           LDR      R0,[R4, #+16]
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   100084E5           STR      R0,[R4, #+16]
   \   00000060   1C0095E5           LDR      R0,[R5, #+28]
   \   00000064   0C0084E5           STR      R0,[R4, #+12]
     80          }; // PF_OS_WakeTask
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
     81          

   \                                 In section .text, align 4, keep-with-next
     82          void PF_OS_Yield (int taskNum ) {
   \                     PF_OS_Yield:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     83          	PF_Calculate( taskNum );	
   \   00000004   1C10A0E3           MOV      R1,#+28
   \   00000008   ........           LDR      R2,??DataTable16
   \   0000000C   912024E0           MLA      R4,R1,R0,R2
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   0C1094E5           LDR      R1,[R4, #+12]
   \   00000018   ........           LDR      R5,??DataTable16_1
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   0800000A           BEQ      ??PF_OS_Yield_0
   \   00000024   1C2095E5           LDR      R2,[R5, #+28]
   \   00000028   011042E0           SUB      R1,R2,R1
   \   0000002C   142094E5           LDR      R2,[R4, #+20]
   \   00000030   010052E1           CMP      R2,R1
   \   00000034   0120A031           MOVCC    R2,R1
   \   00000038   142084E5           STR      R2,[R4, #+20]
   \   0000003C   180094E5           LDR      R0,[R4, #+24]
   \   00000040   000081E0           ADD      R0,R1,R0
   \   00000044   180084E5           STR      R0,[R4, #+24]
     84          	OS_Yield();
   \                     ??PF_OS_Yield_0:
   \   00000048   ........           BL       OS_Yield
     85          	PF_Increment( taskNum );
   \   0000004C   100094E5           LDR      R0,[R4, #+16]
   \   00000050   04D08DE2           ADD      SP,SP,#+4
   \   00000054   010080E2           ADD      R0,R0,#+1
   \   00000058   100084E5           STR      R0,[R4, #+16]
   \   0000005C   1C0095E5           LDR      R0,[R5, #+28]
   \   00000060   0C0084E5           STR      R0,[R4, #+12]
     86          }; // PF_OS_Yield
   \   00000064   3080BDE8           POP      {R4,R5,PC}       ;; return
     87          

   \                                 In section .text, align 4, keep-with-next
     88          void PF_OS_SignalEvent( int taskNum, char Event, OS_TASK* pTask) {
   \                     PF_OS_SignalEvent:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     89          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_SignalEvent_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     90          	OS_SignalEvent( Event, pTask );
   \                     ??PF_OS_SignalEvent_0:
   \   00000054   ........           BL       OS_SignalEvent
     91          	PF_Increment( taskNum );
   \   00000058   100094E5           LDR      R0,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   010080E2           ADD      R0,R0,#+1
   \   00000064   100084E5           STR      R0,[R4, #+16]
   \   00000068   1C0095E5           LDR      R0,[R5, #+28]
   \   0000006C   0C0084E5           STR      R0,[R4, #+12]
     92          }; // PF_OS_SignalEvent
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     93          

   \                                 In section .text, align 4, keep-with-next
     94          int PF_OS_Q_GetPtr( int taskNum, OS_Q* pQ, void** ppData) {
   \                     PF_OS_Q_GetPtr:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
     95          	int returnVal;
     96          	
     97          	PF_Calculate( taskNum );	
   \   00000010   1C20A0E3           MOV      R2,#+28
   \   00000014   ........           LDR      R12,??DataTable16
   \   00000018   92C324E0           MLA      R4,R2,R3,R12
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   0C2094E5           LDR      R2,[R4, #+12]
   \   00000024   ........           LDR      R5,??DataTable16_1
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0800000A           BEQ      ??PF_OS_Q_GetPtr_0
   \   00000030   1CC095E5           LDR      R12,[R5, #+28]
   \   00000034   02204CE0           SUB      R2,R12,R2
   \   00000038   14C094E5           LDR      R12,[R4, #+20]
   \   0000003C   02005CE1           CMP      R12,R2
   \   00000040   02C0A031           MOVCC    R12,R2
   \   00000044   14C084E5           STR      R12,[R4, #+20]
   \   00000048   183094E5           LDR      R3,[R4, #+24]
   \   0000004C   032082E0           ADD      R2,R2,R3
   \   00000050   182084E5           STR      R2,[R4, #+24]
     98          	returnVal = OS_Q_GetPtr( pQ, ppData );
   \                     ??PF_OS_Q_GetPtr_0:
   \   00000054   ........           BL       OS_Q_GetPtr
     99          	PF_Increment( taskNum );
   \   00000058   101094E5           LDR      R1,[R4, #+16]
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   011081E2           ADD      R1,R1,#+1
   \   00000064   101084E5           STR      R1,[R4, #+16]
   \   00000068   1C1095E5           LDR      R1,[R5, #+28]
   \   0000006C   0C1084E5           STR      R1,[R4, #+12]
    100          	return (returnVal);
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
    101          }; // PF_OS_Q_GetPtr
    102          

   \                                 In section .text, align 4, keep-with-next
    103          U32 PF_FS_Write(int taskNum, FS_FILE *pFile, const void *pData, U32 NumBytes) {
   \                     PF_FS_Write:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   00C0A0E1           MOV      R12,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
   \   00000010   0320A0E1           MOV      R2,R3
    104          	U32 returnVal;
    105          	
    106          	PF_Calculate( taskNum );	
   \   00000014   1C30A0E3           MOV      R3,#+28
   \   00000018   ........           LDR      LR,??DataTable16
   \   0000001C   93EC24E0           MLA      R4,R3,R12,LR
   \   00000020   04D04DE2           SUB      SP,SP,#+4
   \   00000024   0C3094E5           LDR      R3,[R4, #+12]
   \   00000028   ........           LDR      R5,??DataTable16_1
   \   0000002C   000053E3           CMP      R3,#+0
   \   00000030   0800000A           BEQ      ??PF_FS_Write_0
   \   00000034   1CE095E5           LDR      LR,[R5, #+28]
   \   00000038   03304EE0           SUB      R3,LR,R3
   \   0000003C   14E094E5           LDR      LR,[R4, #+20]
   \   00000040   03005EE1           CMP      LR,R3
   \   00000044   03E0A031           MOVCC    LR,R3
   \   00000048   14E084E5           STR      LR,[R4, #+20]
   \   0000004C   18C094E5           LDR      R12,[R4, #+24]
   \   00000050   0C3083E0           ADD      R3,R3,R12
   \   00000054   183084E5           STR      R3,[R4, #+24]
    107          	returnVal = FS_Write(pFile, pData, NumBytes);
   \                     ??PF_FS_Write_0:
   \   00000058   ........           BL       FS_Write
    108          	PF_Increment( taskNum );
   \   0000005C   101094E5           LDR      R1,[R4, #+16]
   \   00000060   04D08DE2           ADD      SP,SP,#+4
   \   00000064   011081E2           ADD      R1,R1,#+1
   \   00000068   101084E5           STR      R1,[R4, #+16]
   \   0000006C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000070   0C1084E5           STR      R1,[R4, #+12]
    109          	return (returnVal);
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    110          }; // PF_FS_Write
    111          

   \                                 In section .text, align 4, keep-with-next
    112          U32 PF_FS_Read(int taskNum, FS_FILE *pFile, void *pData, U32 NumBytes) {
   \                     PF_FS_Read:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   00C0A0E1           MOV      R12,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
   \   00000010   0320A0E1           MOV      R2,R3
    113          	U32 returnVal;
    114          	
    115          	PF_Calculate( taskNum );	
   \   00000014   1C30A0E3           MOV      R3,#+28
   \   00000018   ........           LDR      LR,??DataTable16
   \   0000001C   93EC24E0           MLA      R4,R3,R12,LR
   \   00000020   04D04DE2           SUB      SP,SP,#+4
   \   00000024   0C3094E5           LDR      R3,[R4, #+12]
   \   00000028   ........           LDR      R5,??DataTable16_1
   \   0000002C   000053E3           CMP      R3,#+0
   \   00000030   0800000A           BEQ      ??PF_FS_Read_0
   \   00000034   1CE095E5           LDR      LR,[R5, #+28]
   \   00000038   03304EE0           SUB      R3,LR,R3
   \   0000003C   14E094E5           LDR      LR,[R4, #+20]
   \   00000040   03005EE1           CMP      LR,R3
   \   00000044   03E0A031           MOVCC    LR,R3
   \   00000048   14E084E5           STR      LR,[R4, #+20]
   \   0000004C   18C094E5           LDR      R12,[R4, #+24]
   \   00000050   0C3083E0           ADD      R3,R3,R12
   \   00000054   183084E5           STR      R3,[R4, #+24]
    116          	returnVal = FS_Read(pFile, pData, NumBytes);
   \                     ??PF_FS_Read_0:
   \   00000058   ........           BL       FS_Read
    117          	PF_Increment( taskNum );
   \   0000005C   101094E5           LDR      R1,[R4, #+16]
   \   00000060   04D08DE2           ADD      SP,SP,#+4
   \   00000064   011081E2           ADD      R1,R1,#+1
   \   00000068   101084E5           STR      R1,[R4, #+16]
   \   0000006C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000070   0C1084E5           STR      R1,[R4, #+12]
    118          	return (returnVal);
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    119          }; // PF_FS_Read
    120          
    121          // common functions
    122          //

   \                                 In section .text, align 4, keep-with-next
    123          void PF_Calculate( int taskNum ) {
    124          	U32 execTime;
    125          	
    126          	if (0 != taskProfile[taskNum].lastStartTime) {
   \                     PF_Calculate:
   \   00000000   1C20A0E3           MOV      R2,#+28
   \   00000004   ........           LDR      R1,??DataTable16
   \   00000008   921021E0           MLA      R1,R2,R0,R1
   \   0000000C   0C2091E5           LDR      R2,[R1, #+12]
   \   00000010   000052E3           CMP      R2,#+0
   \   00000014   0900000A           BEQ      ??PF_Calculate_0
    127          		execTime = (OS_GetTime32() - taskProfile[taskNum].lastStartTime);
   \   00000018   ........           LDR      R3,??DataTable16_1
   \   0000001C   1C3093E5           LDR      R3,[R3, #+28]
   \   00000020   022043E0           SUB      R2,R3,R2
    128          		if (execTime > taskProfile[taskNum].maxExecTime)
   \   00000024   143091E5           LDR      R3,[R1, #+20]
   \   00000028   020053E1           CMP      R3,R2
   \   0000002C   0230A031           MOVCC    R3,R2
   \   00000030   143081E5           STR      R3,[R1, #+20]
    129          			taskProfile[taskNum].maxExecTime = execTime;
    130          		taskProfile[taskNum].totalExecTime += execTime;
   \   00000034   180091E5           LDR      R0,[R1, #+24]
   \   00000038   000082E0           ADD      R0,R2,R0
   \   0000003C   180081E5           STR      R0,[R1, #+24]
    131          	} // if
    132          } // PF_Calculate
   \                     ??PF_Calculate_0:
   \   00000040   1EFF2FE1           BX       LR               ;; return
    133          

   \                                 In section .text, align 4, keep-with-next
    134          void PF_Increment( int taskNum ) {
    135          	taskProfile[taskNum].numberOfStarts++;
   \                     PF_Increment:
   \   00000000   1C10A0E3           MOV      R1,#+28
   \   00000004   ........           LDR      R2,??DataTable16
   \   00000008   912020E0           MLA      R0,R1,R0,R2
   \   0000000C   101090E5           LDR      R1,[R0, #+16]
   \   00000010   011081E2           ADD      R1,R1,#+1
   \   00000014   101080E5           STR      R1,[R0, #+16]
    136          	taskProfile[taskNum].lastStartTime = OS_GetTime32();
   \   00000018   ........           LDR      R1,??DataTable16_1
   \   0000001C   1C1091E5           LDR      R1,[R1, #+28]
   \   00000020   0C1080E5           STR      R1,[R0, #+12]
    137          } // PF_Increment
   \   00000024   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16:
   \   00000000   ........           DC32     taskProfile

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable16_1:
   \   00000000   ........           DC32     OS_Global
    138          
    139          #undef PROFILER_C

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     PF_Calculate                    0
     PF_FS_Read                     16
     PF_FS_Write                    16
     PF_Increment                    0
     PF_OS_Delay                    16
     PF_OS_GetMail                  16
     PF_OS_PutMail                  16
     PF_OS_Q_GetPtr                 16
     PF_OS_SetPriority              16
     PF_OS_SignalEvent              16
     PF_OS_Unuse                    16
     PF_OS_Use                      16
     PF_OS_WaitEvent                16
     PF_OS_WaitEventTimed           16
     PF_OS_WaitSingleEventTimed     16
     PF_OS_WakeTask                 16
     PF_OS_Yield                    16


   Section sizes:

     Function/Label             Bytes
     --------------             -----
     PF_OS_Delay                 108
     PF_OS_WaitEventTimed        116
     PF_OS_WaitSingleEventTimed  116
     PF_OS_WaitEvent             108
     PF_OS_Use                   108
     PF_OS_Unuse                 108
     PF_OS_PutMail               116
     PF_OS_GetMail               116
     PF_OS_SetPriority           116
     PF_OS_WakeTask              108
     PF_OS_Yield                 104
     PF_OS_SignalEvent           116
     PF_OS_Q_GetPtr              116
     PF_FS_Write                 120
     PF_FS_Read                  120
     PF_Calculate                 68
     PF_Increment                 40
     ??DataTable16                 4
     ??DataTable16_1               4

 
 1 812 bytes in section .text
 
 1 812 bytes of CODE memory

Errors: none
Warnings: none
