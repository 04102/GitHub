###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:53 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Exec.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Exec.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_Exec.lst                                               #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _Exec.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Exec.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_Exec.c
     19          Purpose     : Implementation of GUI_Exec
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          #include "WM.h"
     27          #endif
     28          
     29          /*********************************************************************
     30          *
     31          *       Public code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_Exec1
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          int GUI_Exec1(void) {
   \                     GUI_Exec1:
   \   00000000   10402DE9           PUSH     {R4,LR}
     40            int r = 0;
     41            /* Execute background jobs */
     42            if (GUI_pfTimerExec) {
   \   00000004   ........           LDR      R0,??DataTable1
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   000090E5           LDR      R0,[R0, #+0]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0200000A           BEQ      ??GUI_Exec1_0
     43              if ((*GUI_pfTimerExec)()) {
   \   00000018   30FF2FE1           BLX      R0
   \   0000001C   000050E3           CMP      R0,#+0
     44                r = 1;                  /* We have done something */
   \   00000020   0140A013           MOVNE    R4,#+1
     45              }
     46            }
     47            #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     48            if (WM_Exec())
   \                     ??GUI_Exec1_0:
   \   00000024   ........           BL       WM_Exec
   \   00000028   000050E3           CMP      R0,#+0
     49              r = 1;
   \   0000002C   0140A013           MOVNE    R4,#+1
     50            #endif
     51            return r;
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
     52          }
     53          
     54          /*********************************************************************
     55          *
     56          *       GUI_Exec
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          int GUI_Exec(void) {
   \                     GUI_Exec:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     59            int r = 0;
   \   00000008   0040A0E3           MOV      R4,#+0
   \   0000000C   000000EA           B        ??GUI_Exec_0
     60            while (GUI_Exec1()) {
     61              r = 1;                  /* We have done something */
   \                     ??GUI_Exec_1:
   \   00000010   0140A0E3           MOV      R4,#+1
     62            }
   \                     ??GUI_Exec_0:
   \   00000014   ........           LDR      R0,??DataTable1
   \   00000018   0050A0E3           MOV      R5,#+0
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0200000A           BEQ      ??GUI_Exec_2
   \   00000028   30FF2FE1           BLX      R0
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0150A013           MOVNE    R5,#+1
   \                     ??GUI_Exec_2:
   \   00000034   ........           BL       WM_Exec
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   00005503           CMPEQ    R5,#+0
   \   00000040   F2FFFF1A           BNE      ??GUI_Exec_1
     63            return r;
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
     64          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_pfTimerExec
     65          
     66          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     GUI_Exec      16
     GUI_Exec1      8


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_Exec1        56
     GUI_Exec         80
     ??DataTable1      4

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
