###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:28 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_SetItemColor.c             #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_SetItemColor.c -D DEBUG=1  #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LI #
#                    STVIEW_SetItemColor.lst                                  #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LIS #
#                    TVIEW_SetItemColor.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_SetItemColor.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_SetItemColor.c
     19          Purpose     : Implementation of LISTVIEW_SetItemTextColor and LISTVIEW_SetItemBkColor
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "LISTVIEW_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _GetpCellInfo
     38          *
     39          * Purpose:
     40          *   Returns a pointer of a LISTVIEW_CELL_INFO structure in locked state.
     41          *   The pointer needs to be unlocked after use.
     42          */

   \                                 In section .text, align 4, keep-with-next
     43          static LISTVIEW_CELL_INFO * _GetpCellInfo(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, unsigned int Index) {
   \                     _GetpCellInfo:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0380A0E1           MOV      R8,R3
     44            LISTVIEW_CELL_INFO * pCellInfo = 0;
   \   00000018   0060A0E3           MOV      R6,#+0
     45            if (hObj) {
   \   0000001C   000054E3           CMP      R4,#+0
   \   00000020   3A00000A           BEQ      ??_GetpCellInfo_0
     46              GUI_ARRAY RowArray;
     47              GUI_ARRAY CellArray;
     48              unsigned NumColumns, NumRows;
     49              LISTVIEW_Obj * pObj;
     50              LISTVIEW_ROW  * pRow;
     51              LISTVIEW_CELL * pCell;
     52              WM_HMEM hCellInfo;
     53              int i;
     54          
     55              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   00B0A0E1           MOV      R11,R0
     56              NumColumns = LISTVIEW__GetNumColumns(pObj);
   \   0000002C   ........           BL       LISTVIEW__GetNumColumns
   \   00000030   0090A0E1           MOV      R9,R0
     57              NumRows    = LISTVIEW__GetNumRows(pObj);
   \   00000034   0B00A0E1           MOV      R0,R11
   \   00000038   ........           BL       LISTVIEW__GetNumRows
   \   0000003C   00A0A0E1           MOV      R10,R0
     58              RowArray   = pObj->RowArray;
   \   00000040   38B09BE5           LDR      R11,[R11, #+56]
     59              GUI_UNLOCK_H(pObj);
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
     60              if (Index < GUI_COUNTOF(pCellInfo->aTextColor)) {
   \   00000048   040058E3           CMP      R8,#+4
     61                if ((Column < NumColumns) && (Row < NumRows)) {
   \   0000004C   09005531           CMPCC    R5,R9
   \   00000050   0A005731           CMPCC    R7,R10
   \   00000054   2D00002A           BCS      ??_GetpCellInfo_0
     62                  pRow  = (LISTVIEW_ROW  *)GUI_ARRAY_GetpItemLocked(RowArray,  Row);
   \   00000058   0710A0E1           MOV      R1,R7
   \   0000005C   0B00A0E1           MOV      R0,R11
   \   00000060   ........           BL       GUI_ARRAY_GetpItemLocked
     63                  if (pRow) {
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   2800000A           BEQ      ??_GetpCellInfo_0
     64                    CellArray = pRow->CellArray;
   \   0000006C   007090E5           LDR      R7,[R0, #+0]
     65                    GUI_UNLOCK_H(pRow);
   \   00000070   ........           BL       GUI_ALLOC_UnlockH
     66                    pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(CellArray, Column);
   \   00000074   0510A0E1           MOV      R1,R5
   \   00000078   0700A0E1           MOV      R0,R7
   \   0000007C   ........           BL       GUI_ARRAY_GetpItemLocked
     67                    if (pCell) {
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   2100000A           BEQ      ??_GetpCellInfo_0
     68                      hCellInfo = pCell->hCellInfo;
   \   00000088   008090E5           LDR      R8,[R0, #+0]
     69                      GUI_UNLOCK_H(pCell);
   \   0000008C   ........           BL       GUI_ALLOC_UnlockH
     70                      if (hCellInfo == 0) {
   \   00000090   000058E3           CMP      R8,#+0
   \   00000094   1A00001A           BNE      ??_GetpCellInfo_1
     71                        hCellInfo = GUI_ALLOC_AllocZero(sizeof(LISTVIEW_CELL_INFO));
   \   00000098   3000A0E3           MOV      R0,#+48
   \   0000009C   ........           BL       GUI_ALLOC_AllocZero
   \   000000A0   0080B0E1           MOVS     R8,R0
     72                        if (hCellInfo) {
   \   000000A4   1900000A           BEQ      ??_GetpCellInfo_0
     73                          pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(CellArray, Column);
     74                          pCell->hCellInfo = hCellInfo;
   \   000000A8   0510A0E1           MOV      R1,R5
   \   000000AC   0700A0E1           MOV      R0,R7
   \   000000B0   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000000B4   008080E5           STR      R8,[R0, #+0]
     75                          GUI_UNLOCK_H(pCell);
   \   000000B8   ........           BL       GUI_ALLOC_UnlockH
     76                          pCellInfo = (LISTVIEW_CELL_INFO *)GUI_LOCK_H(hCellInfo);
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   ........           BL       GUI_ALLOC_LockH
   \   000000C4   0060A0E1           MOV      R6,R0
     77                          for (i = 0; i < GUI_COUNTOF(pCellInfo->aTextColor); i++) {
   \   000000C8   0050A0E3           MOV      R5,#+0
   \   000000CC   0670A0E1           MOV      R7,R6
     78                            pCellInfo->aTextColor[i] = LISTVIEW_GetTextColor(hObj, i);
   \                     ??_GetpCellInfo_2:
   \   000000D0   0510A0E1           MOV      R1,R5
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   ........           BL       LISTVIEW_GetTextColor
   \   000000DC   180087E5           STR      R0,[R7, #+24]
     79                            pCellInfo->aBkColor[i]   = LISTVIEW_GetBkColor  (hObj, i);
   \   000000E0   0510A0E1           MOV      R1,R5
   \   000000E4   0400A0E1           MOV      R0,R4
   \   000000E8   ........           BL       LISTVIEW_GetBkColor
   \   000000EC   080087E5           STR      R0,[R7, #+8]
     80                          }
   \   000000F0   015085E2           ADD      R5,R5,#+1
   \   000000F4   047087E2           ADD      R7,R7,#+4
   \   000000F8   040055E3           CMP      R5,#+4
   \   000000FC   F3FFFF3A           BCC      ??_GetpCellInfo_2
   \   00000100   020000EA           B        ??_GetpCellInfo_0
     81                        }
     82                      } else {
     83                        pCellInfo = (LISTVIEW_CELL_INFO *)GUI_LOCK_H(hCellInfo);
   \                     ??_GetpCellInfo_1:
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   ........           BL       GUI_ALLOC_LockH
   \   0000010C   0060A0E1           MOV      R6,R0
     84                      }
     85                    }
     86                  }
     87                }
     88              }
     89            }
     90            return pCellInfo;
   \                     ??_GetpCellInfo_0:
   \   00000110   0600A0E1           MOV      R0,R6
   \   00000114   04D08DE2           ADD      SP,SP,#+4
   \   00000118   F08FBDE8           POP      {R4-R11,PC}      ;; return
     91          }
     92          
     93          /*********************************************************************
     94          *
     95          *       Public routines
     96          *
     97          **********************************************************************
     98          */
     99          /*********************************************************************
    100          *
    101          *       LISTVIEW_SetItemTextColor
    102          */

   \                                 In section .text, align 4, keep-with-next
    103          void LISTVIEW_SetItemTextColor(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, unsigned int Index, GUI_COLOR Color) {
   \                     LISTVIEW_SetItemTextColor:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   18809DE5           LDR      R8,[SP, #+24]
    104            LISTVIEW_Obj * pObj;
    105            LISTVIEW_CELL_INFO * pCellInfo;
    106            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   1500000A           BEQ      ??LISTVIEW_SetItemTextColor_0
    107              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
    108              pCellInfo = _GetpCellInfo(hObj, Column, Row, Index);
   \   00000024   0730A0E1           MOV      R3,R7
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       _GetpCellInfo
   \   00000038   0060B0E1           MOVS     R6,R0
    109              if (pCellInfo) {
   \   0000003C   0C00000A           BEQ      ??LISTVIEW_SetItemTextColor_1
    110                pObj = LISTVIEW_LOCK_H(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       GUI_ALLOC_LockH
    111                pCellInfo->aTextColor[Index] = Color;
   \   00000048   071186E0           ADD      R1,R6,R7, LSL #+2
   \   0000004C   188081E5           STR      R8,[R1, #+24]
    112                pCellInfo->Flags |= LISTVIEW_CELL_INFO_COLORS;
   \   00000050   2C10D6E5           LDRB     R1,[R6, #+44]
    113                LISTVIEW__InvalidateRow(hObj, pObj, Row);
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   011081E3           ORR      R1,R1,#0x1
   \   0000005C   2C10C6E5           STRB     R1,[R6, #+44]
   \   00000060   0010A0E1           MOV      R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       LISTVIEW__InvalidateRow
    114                GUI_UNLOCK_H(pObj);
   \   0000006C   ........           BL       GUI_ALLOC_UnlockH
    115              }
    116              if (pCellInfo) {
    117                GUI_UNLOCK_H(pCellInfo);
   \   00000070   ........           BL       GUI_ALLOC_UnlockH
    118              }
    119              WM_UNLOCK();
   \                     ??LISTVIEW_SetItemTextColor_1:
   \   00000074   ........           BL       GUI_Unlock
    120            }
    121          }
   \                     ??LISTVIEW_SetItemTextColor_0:
   \   00000078   F081BDE8           POP      {R4-R8,PC}       ;; return
    122          
    123          /*********************************************************************
    124          *
    125          *       LISTVIEW_SetItemBkColor
    126          */

   \                                 In section .text, align 4, keep-with-next
    127          void LISTVIEW_SetItemBkColor(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, unsigned int Index, GUI_COLOR Color) {
   \                     LISTVIEW_SetItemBkColor:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   18809DE5           LDR      R8,[SP, #+24]
    128            LISTVIEW_Obj * pObj;
    129            LISTVIEW_CELL_INFO * pCellInfo;
    130            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   1500000A           BEQ      ??LISTVIEW_SetItemBkColor_0
    131              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
    132              pCellInfo = _GetpCellInfo(hObj, Column, Row, Index);
   \   00000024   0730A0E1           MOV      R3,R7
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       _GetpCellInfo
   \   00000038   0060B0E1           MOVS     R6,R0
    133              if (pCellInfo) {
   \   0000003C   0C00000A           BEQ      ??LISTVIEW_SetItemBkColor_1
    134                pObj = LISTVIEW_LOCK_H(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       GUI_ALLOC_LockH
    135                pCellInfo->aBkColor[Index] = Color;
   \   00000048   071186E0           ADD      R1,R6,R7, LSL #+2
   \   0000004C   088081E5           STR      R8,[R1, #+8]
    136                pCellInfo->Flags |= LISTVIEW_CELL_INFO_COLORS;
   \   00000050   2C10D6E5           LDRB     R1,[R6, #+44]
    137                LISTVIEW__InvalidateRow(hObj, pObj, Row);
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   011081E3           ORR      R1,R1,#0x1
   \   0000005C   2C10C6E5           STRB     R1,[R6, #+44]
   \   00000060   0010A0E1           MOV      R1,R0
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       LISTVIEW__InvalidateRow
    138                GUI_UNLOCK_H(pObj);
   \   0000006C   ........           BL       GUI_ALLOC_UnlockH
    139              }
    140              if (pCellInfo) {
    141                GUI_UNLOCK_H(pCellInfo);
   \   00000070   ........           BL       GUI_ALLOC_UnlockH
    142              }
    143              WM_UNLOCK();
   \                     ??LISTVIEW_SetItemBkColor_1:
   \   00000074   ........           BL       GUI_Unlock
    144            }
    145          }
   \                     ??LISTVIEW_SetItemBkColor_0:
   \   00000078   F081BDE8           POP      {R4-R8,PC}       ;; return
    146          
    147          #else                            /* Avoid problems with empty object modules */
    148            void LISTVIEW_SetItemColor_C(void);
    149            void LISTVIEW_SetItemColor_C(void) {}
    150          #endif
    151          
    152          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     LISTVIEW_SetItemBkColor       24
     LISTVIEW_SetItemTextColor     24
     _GetpCellInfo                 40


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     _GetpCellInfo              284
     LISTVIEW_SetItemTextColor  124
     LISTVIEW_SetItemBkColor    124

 
 532 bytes in section .text
 
 532 bytes of CODE memory

Errors: none
Warnings: none
