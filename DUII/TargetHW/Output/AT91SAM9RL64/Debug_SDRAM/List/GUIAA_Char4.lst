###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIAA_Char4.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GUIAA_Char4.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    IAA_Char4.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    AA_Char4.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIAA_Char4.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIAA_Char4.c
     19          Purpose     : Display antialiased characters 4bpp
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _DrawCharAA4_Trans
     36          *
     37          * Purpose:
     38          *   Draws one character with transparency pixel by pixel
     39          */
     40          static void _DrawCharAA4_Trans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8 * pData, void (* pfSetPixelAA)(int x, int y, U8 Intens)) {
     41            const U8 * pData0;
     42            int x, y, xPos, yPos, RemPixels;
     43            U8 Data;
     44          
     45            for (y = 0; y < YSize; y++) {
     46              x         = 0;
     47              pData0    = pData;
     48              RemPixels = XSize;
     49              yPos      = y0 + y;
     50              while (RemPixels >= 2) {
     51                xPos = x + x0;
     52                Data = *pData0++;
     53                pfSetPixelAA(xPos + 0, yPos, Data >> 4);
     54                Data <<= 4;
     55                pfSetPixelAA(xPos + 1, yPos, Data >> 4);
     56                RemPixels -= 2;
     57                x         += 2;
     58              }
     59              if (RemPixels) {
     60                Data = *pData0;
     61                pfSetPixelAA(x + x0, yPos, Data >> 4);
     62              }
     63              pData += BytesPerLine;
     64            }
     65          }
     66          
     67          /*********************************************************************
     68          *
     69          *       _DrawCharAA4_NoTrans
     70          *
     71          * Purpose:
     72          *   Draws one character without transparency as a bitmap
     73          */
     74          static void _DrawCharAA4_NoTrans(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8 * pData) {

   \                                 In section .data, align 4
     75            static LCD_COLOR      _aColor[16];
     76            static LCD_PIXELINDEX _OldColorIndex, _OldBkColorIndex;
     77            static GUI_LOGPALETTE _Palette = {16, 0, &_aColor[0]};
     78            static GUI_BITMAP     _Bitmap = {0, 0, 0, 4, 0, &_Palette, 0};
   \                     ??_Bitmap:
   \   00000000   000000000000       DC16 0, 0, 0, 4
   \              0400        
   \   00000008   00000000....       DC32 0H, ??_Palette, 0H
   \              ....00000000
   \                     ??_aColor:
   \   00000014   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000024   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000034   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000044   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     ??_Palette:
   \   00000054   10000000           DC32 16
   \   00000058   00000000           DC8 0, 0, 0, 0
   \   0000005C   ........           DC32 ??_aColor
   \   00000060   00000000           DC8 0, 0, 0, 0
   \   00000064   00000000           DC8 0, 0, 0, 0
     79            int i;
     80            LCD_PIXELINDEX ColorIndex, BkColorIndex;
     81            LCD_COLOR Color, BkColor;
     82          
     83            //
     84            // Get current color indices
     85            //
     86            BkColorIndex = LCD__GetBkColorIndex();
     87            ColorIndex   = LCD__GetColorIndex();
     88            //
     89            // Calculate new palette for bitmap if required
     90            //
     91            if ((_OldColorIndex   != ColorIndex) || 
     92                (_OldBkColorIndex != BkColorIndex)) {
     93              BkColor    = LCD_Index2Color(BkColorIndex);
     94              Color      = LCD_Index2Color(ColorIndex);
     95              _aColor[0] = BkColor;
     96              for (i = 1; i < 15; i++) {
     97                _aColor[i] = LCD_AA_MixColors(Color, BkColor, i);
     98              }
     99              _aColor[15] = Color;
    100              LCD_GetpPalConvTableUncached(&_Palette);
    101              _OldColorIndex = ColorIndex;
    102              _OldBkColorIndex = BkColorIndex;
    103            }
    104            //
    105            // Set bitmap properties
    106            //
    107            _Bitmap.XSize        = XSize;
    108            _Bitmap.YSize        = YSize;
    109            _Bitmap.BytesPerLine = BytesPerLine;
    110            _Bitmap.pData        = pData;
    111            //
    112            // Set transparency flag
    113            //
    114            _Palette.HasTrans = GUI__CharHasTrans;
    115            //
    116            // Draw bitmap
    117            //
    118            GL_DrawBitmap(&_Bitmap, x0, y0);
    119          }
    120          
    121          /*********************************************************************
    122          *
    123          *       Public code
    124          *
    125          **********************************************************************
    126          */
    127          /*********************************************************************
    128          *
    129          *       GUI_AA__DrawCharAA4
    130          */

   \                                 In section .text, align 4, keep-with-next
    131          void GUI_AA__DrawCharAA4(int x0, int y0, int XSize, int YSize, int BytesPerLine, const U8 * pData) {
   \                     GUI_AA__DrawCharAA4:
   \   00000000   FF4F2DE9           PUSH     {R0-R11,LR}
    132            switch (GUI_Context.DrawMode & (LCD_DRAWMODE_TRANS | LCD_DRAWMODE_XOR)) {
   \   00000004   ........           LDR      R0,??DataTable2
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   1000D0E5           LDRB     R0,[R0, #+16]
   \   00000010   44409DE5           LDR      R4,[SP, #+68]
   \   00000014   030000E2           AND      R0,R0,#0x3
   \   00000018   030050E3           CMP      R0,#+3
   \   0000001C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GUI_AA__DrawCharAA4_0:
   \   00000020   3300008A           BHI      ??GUI_AA__DrawCharAA4_1
   \   00000024   020000EA           B        ??GUI_AA__DrawCharAA4_2
   \   00000028   9C0000EA           B        ??GUI_AA__DrawCharAA4_3
   \   0000002C   320000EA           B        ??GUI_AA__DrawCharAA4_4
   \   00000030   9A0000EA           B        ??GUI_AA__DrawCharAA4_3
    133            case 0:
    134              _DrawCharAA4_NoTrans(x0, y0, XSize, YSize, BytesPerLine, pData);
   \                     ??GUI_AA__DrawCharAA4_2:
   \   00000034   ........           LDR      R0,??DataTable2_1
   \   00000038   ........           LDR      R7,??DataTable2_2
   \   0000003C   000090E5           LDR      R0,[R0, #+0]
   \   00000040   005090E5           LDR      R5,[R0, #+0]
   \   00000044   ........           LDR      R0,??DataTable2_3
   \   00000048   000090E5           LDR      R0,[R0, #+0]
   \   0000004C   006090E5           LDR      R6,[R0, #+0]
   \   00000050   600097E5           LDR      R0,[R7, #+96]
   \   00000054   060050E1           CMP      R0,R6
   \   00000058   64009705           LDREQ    R0,[R7, #+100]
   \   0000005C   05005001           CMPEQ    R0,R5
   \   00000060   1500000A           BEQ      ??GUI_AA__DrawCharAA4_5
   \   00000064   0500A0E1           MOV      R0,R5
   \   00000068   ........           BL       LCD_Index2Color
   \   0000006C   0080A0E1           MOV      R8,R0
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       LCD_Index2Color
   \   00000078   0090A0E1           MOV      R9,R0
   \   0000007C   148087E5           STR      R8,[R7, #+20]
   \   00000080   01A0A0E3           MOV      R10,#+1
   \   00000084   18B087E2           ADD      R11,R7,#+24
   \                     ??GUI_AA__DrawCharAA4_6:
   \   00000088   FF200AE2           AND      R2,R10,#0xFF
   \   0000008C   0810A0E1           MOV      R1,R8
   \   00000090   0900A0E1           MOV      R0,R9
   \   00000094   ........           BL       LCD_AA_MixColors
   \   00000098   01A08AE2           ADD      R10,R10,#+1
   \   0000009C   04008BE4           STR      R0,[R11], #+4
   \   000000A0   0F005AE3           CMP      R10,#+15
   \   000000A4   F7FFFFBA           BLT      ??GUI_AA__DrawCharAA4_6
   \   000000A8   509087E5           STR      R9,[R7, #+80]
   \   000000AC   540087E2           ADD      R0,R7,#+84
   \   000000B0   ........           BL       LCD_GetpPalConvTableUncached
   \   000000B4   606087E5           STR      R6,[R7, #+96]
   \   000000B8   645087E5           STR      R5,[R7, #+100]
   \                     ??GUI_AA__DrawCharAA4_5:
   \   000000BC   14009DE5           LDR      R0,[SP, #+20]
   \   000000C0   084087E5           STR      R4,[R7, #+8]
   \   000000C4   B000C7E1           STRH     R0,[R7, #+0]
   \   000000C8   18009DE5           LDR      R0,[SP, #+24]
   \   000000CC   10209DE5           LDR      R2,[SP, #+16]
   \   000000D0   B200C7E1           STRH     R0,[R7, #+2]
   \   000000D4   40009DE5           LDR      R0,[SP, #+64]
   \   000000D8   0C109DE5           LDR      R1,[SP, #+12]
   \   000000DC   B400C7E1           STRH     R0,[R7, #+4]
   \   000000E0   ........           LDR      R0,??DataTable2_4
   \   000000E4   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000E8   5800C7E5           STRB     R0,[R7, #+88]
   \   000000EC   0700A0E1           MOV      R0,R7
   \   000000F0   ........           BL       GL_DrawBitmap
    135              break;
    136            case LCD_DRAWMODE_TRANS:
    137              _DrawCharAA4_Trans(x0, y0, XSize, YSize, BytesPerLine, pData, LCD_SetPixelAA);
    138              break;
    139            case LCD_DRAWMODE_XOR | LCD_DRAWMODE_TRANS:
    140            case LCD_DRAWMODE_XOR:
    141              _DrawCharAA4_Trans(x0, y0, XSize, YSize, BytesPerLine, pData, LCD_SetPixelAA_Xor);
    142              break;
    143            }
    144          }
   \                     ??GUI_AA__DrawCharAA4_1:
   \   000000F4   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000000F8   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GUI_AA__DrawCharAA4_4:
   \   000000FC   18009DE5           LDR      R0,[SP, #+24]
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   00408DE5           STR      R4,[SP, #+0]
   \   00000108   04108DE5           STR      R1,[SP, #+4]
   \   0000010C   010050E3           CMP      R0,#+1
   \   00000110   F7FFFFBA           BLT      ??GUI_AA__DrawCharAA4_1
   \   00000114   10109DE5           LDR      R1,[SP, #+16]
   \   00000118   08108DE5           STR      R1,[SP, #+8]
   \                     ??GUI_AA__DrawCharAA4_7:
   \   0000011C   14609DE5           LDR      R6,[SP, #+20]
   \   00000120   0080A0E3           MOV      R8,#+0
   \   00000124   00509DE5           LDR      R5,[SP, #+0]
   \   00000128   08709DE5           LDR      R7,[SP, #+8]
   \   0000012C   020056E3           CMP      R6,#+2
   \   00000130   430000BA           BLT      ??GUI_AA__DrawCharAA4_8
   \   00000134   A60F86E0           ADD      R0,R6,R6, LSR #+31
   \   00000138   0810E0E1           MVN      R1,R8
   \   0000013C   C09081E0           ADD      R9,R1,R0, ASR #+1
   \   00000140   00B0D5E5           LDRB     R11,[R5, #+0]
   \   00000144   0CA09DE5           LDR      R10,[SP, #+12]
   \   00000148   010019E3           TST      R9,#0x1
   \   0000014C   0C00000A           BEQ      ??GUI_AA__DrawCharAA4_9
   \   00000150   2B22A0E1           LSR      R2,R11,#+4
   \   00000154   0710A0E1           MOV      R1,R7
   \   00000158   0A00A0E1           MOV      R0,R10
   \   0000015C   ........           BL       LCD_SetPixelAA
   \   00000160   0B02A0E1           LSL      R0,R11,#+4
   \   00000164   000CA0E1           LSL      R0,R0,#+24
   \   00000168   202EA0E1           LSR      R2,R0,#+28
   \   0000016C   0710A0E1           MOV      R1,R7
   \   00000170   01008AE2           ADD      R0,R10,#+1
   \   00000174   ........           BL       LCD_SetPixelAA
   \   00000178   026046E2           SUB      R6,R6,#+2
   \   0000017C   0280A0E3           MOV      R8,#+2
   \   00000180   01B0F5E5           LDRB     R11,[R5, #+1]!
   \                     ??GUI_AA__DrawCharAA4_9:
   \   00000184   0C009DE5           LDR      R0,[SP, #+12]
   \   00000188   A990B0E1           LSRS     R9,R9,#+1
   \   0000018C   084080E0           ADD      R4,R0,R8
   \   00000190   1C00000A           BEQ      ??GUI_AA__DrawCharAA4_10
   \                     ??GUI_AA__DrawCharAA4_11:
   \   00000194   2B22A0E1           LSR      R2,R11,#+4
   \   00000198   0710A0E1           MOV      R1,R7
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   ........           BL       LCD_SetPixelAA
   \   000001A4   0B02A0E1           LSL      R0,R11,#+4
   \   000001A8   000CA0E1           LSL      R0,R0,#+24
   \   000001AC   202EA0E1           LSR      R2,R0,#+28
   \   000001B0   0710A0E1           MOV      R1,R7
   \   000001B4   010084E2           ADD      R0,R4,#+1
   \   000001B8   ........           BL       LCD_SetPixelAA
   \   000001BC   01B0F5E5           LDRB     R11,[R5, #+1]!
   \   000001C0   02A084E2           ADD      R10,R4,#+2
   \   000001C4   0710A0E1           MOV      R1,R7
   \   000001C8   2B22A0E1           LSR      R2,R11,#+4
   \   000001CC   0A00A0E1           MOV      R0,R10
   \   000001D0   ........           BL       LCD_SetPixelAA
   \   000001D4   0B02A0E1           LSL      R0,R11,#+4
   \   000001D8   000CA0E1           LSL      R0,R0,#+24
   \   000001DC   202EA0E1           LSR      R2,R0,#+28
   \   000001E0   0710A0E1           MOV      R1,R7
   \   000001E4   01008AE2           ADD      R0,R10,#+1
   \   000001E8   ........           BL       LCD_SetPixelAA
   \   000001EC   019049E2           SUB      R9,R9,#+1
   \   000001F0   046046E2           SUB      R6,R6,#+4
   \   000001F4   048088E2           ADD      R8,R8,#+4
   \   000001F8   01B0F5E5           LDRB     R11,[R5, #+1]!
   \   000001FC   044084E2           ADD      R4,R4,#+4
   \   00000200   000059E3           CMP      R9,#+0
   \   00000204   E2FFFF1A           BNE      ??GUI_AA__DrawCharAA4_11
   \                     ??GUI_AA__DrawCharAA4_10:
   \   00000208   0C009DE5           LDR      R0,[SP, #+12]
   \   0000020C   015085E2           ADD      R5,R5,#+1
   \   00000210   08A080E0           ADD      R10,R0,R8
   \   00000214   2B22A0E1           LSR      R2,R11,#+4
   \   00000218   0710A0E1           MOV      R1,R7
   \   0000021C   0A00A0E1           MOV      R0,R10
   \   00000220   ........           BL       LCD_SetPixelAA
   \   00000224   0B02A0E1           LSL      R0,R11,#+4
   \   00000228   000CA0E1           LSL      R0,R0,#+24
   \   0000022C   202EA0E1           LSR      R2,R0,#+28
   \   00000230   0710A0E1           MOV      R1,R7
   \   00000234   01008AE2           ADD      R0,R10,#+1
   \   00000238   ........           BL       LCD_SetPixelAA
   \   0000023C   026046E2           SUB      R6,R6,#+2
   \   00000240   028088E2           ADD      R8,R8,#+2
   \                     ??GUI_AA__DrawCharAA4_8:
   \   00000244   000056E3           CMP      R6,#+0
   \   00000248   0500000A           BEQ      ??GUI_AA__DrawCharAA4_12
   \   0000024C   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000250   0710A0E1           MOV      R1,R7
   \   00000254   2022A0E1           LSR      R2,R0,#+4
   \   00000258   0C009DE5           LDR      R0,[SP, #+12]
   \   0000025C   080080E0           ADD      R0,R0,R8
   \   00000260   ........           BL       LCD_SetPixelAA
   \                     ??GUI_AA__DrawCharAA4_12:
   \   00000264   40109DE5           LDR      R1,[SP, #+64]
   \   00000268   00209DE5           LDR      R2,[SP, #+0]
   \   0000026C   021081E0           ADD      R1,R1,R2
   \   00000270   00108DE5           STR      R1,[SP, #+0]
   \   00000274   04109DE5           LDR      R1,[SP, #+4]
   \   00000278   011081E2           ADD      R1,R1,#+1
   \   0000027C   04108DE5           STR      R1,[SP, #+4]
   \   00000280   08109DE5           LDR      R1,[SP, #+8]
   \   00000284   04009DE5           LDR      R0,[SP, #+4]
   \   00000288   011081E2           ADD      R1,R1,#+1
   \   0000028C   08108DE5           STR      R1,[SP, #+8]
   \   00000290   18109DE5           LDR      R1,[SP, #+24]
   \   00000294   010050E1           CMP      R0,R1
   \   00000298   95FFFFAA           BGE      ??GUI_AA__DrawCharAA4_1
   \   0000029C   9EFFFFEA           B        ??GUI_AA__DrawCharAA4_7
   \                     ??GUI_AA__DrawCharAA4_3:
   \   000002A0   18009DE5           LDR      R0,[SP, #+24]
   \   000002A4   0010A0E3           MOV      R1,#+0
   \   000002A8   08408DE5           STR      R4,[SP, #+8]
   \   000002AC   04108DE5           STR      R1,[SP, #+4]
   \   000002B0   010050E3           CMP      R0,#+1
   \   000002B4   8EFFFFBA           BLT      ??GUI_AA__DrawCharAA4_1
   \   000002B8   10109DE5           LDR      R1,[SP, #+16]
   \   000002BC   00108DE5           STR      R1,[SP, #+0]
   \                     ??GUI_AA__DrawCharAA4_13:
   \   000002C0   14609DE5           LDR      R6,[SP, #+20]
   \   000002C4   0080A0E3           MOV      R8,#+0
   \   000002C8   08509DE5           LDR      R5,[SP, #+8]
   \   000002CC   00709DE5           LDR      R7,[SP, #+0]
   \   000002D0   020056E3           CMP      R6,#+2
   \   000002D4   400000BA           BLT      ??GUI_AA__DrawCharAA4_14
   \   000002D8   A60F86E0           ADD      R0,R6,R6, LSR #+31
   \   000002DC   0810E0E1           MVN      R1,R8
   \   000002E0   C09081E0           ADD      R9,R1,R0, ASR #+1
   \   000002E4   00B0D5E5           LDRB     R11,[R5, #+0]
   \   000002E8   0C409DE5           LDR      R4,[SP, #+12]
   \   000002EC   010019E3           TST      R9,#0x1
   \   000002F0   0D00000A           BEQ      ??GUI_AA__DrawCharAA4_15
   \   000002F4   2B22A0E1           LSR      R2,R11,#+4
   \   000002F8   0710A0E1           MOV      R1,R7
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           BL       LCD_SetPixelAA_Xor
   \   00000304   0B02A0E1           LSL      R0,R11,#+4
   \   00000308   000CA0E1           LSL      R0,R0,#+24
   \   0000030C   202EA0E1           LSR      R2,R0,#+28
   \   00000310   0710A0E1           MOV      R1,R7
   \   00000314   010084E2           ADD      R0,R4,#+1
   \   00000318   ........           BL       LCD_SetPixelAA_Xor
   \   0000031C   026046E2           SUB      R6,R6,#+2
   \   00000320   0280A0E3           MOV      R8,#+2
   \   00000324   01B0F5E5           LDRB     R11,[R5, #+1]!
   \   00000328   024084E2           ADD      R4,R4,#+2
   \                     ??GUI_AA__DrawCharAA4_15:
   \   0000032C   A990B0E1           LSRS     R9,R9,#+1
   \   00000330   1C00000A           BEQ      ??GUI_AA__DrawCharAA4_16
   \                     ??GUI_AA__DrawCharAA4_17:
   \   00000334   2B22A0E1           LSR      R2,R11,#+4
   \   00000338   0710A0E1           MOV      R1,R7
   \   0000033C   0400A0E1           MOV      R0,R4
   \   00000340   ........           BL       LCD_SetPixelAA_Xor
   \   00000344   0B02A0E1           LSL      R0,R11,#+4
   \   00000348   000CA0E1           LSL      R0,R0,#+24
   \   0000034C   202EA0E1           LSR      R2,R0,#+28
   \   00000350   0710A0E1           MOV      R1,R7
   \   00000354   010084E2           ADD      R0,R4,#+1
   \   00000358   ........           BL       LCD_SetPixelAA_Xor
   \   0000035C   01B0F5E5           LDRB     R11,[R5, #+1]!
   \   00000360   02A084E2           ADD      R10,R4,#+2
   \   00000364   0710A0E1           MOV      R1,R7
   \   00000368   2B22A0E1           LSR      R2,R11,#+4
   \   0000036C   0A00A0E1           MOV      R0,R10
   \   00000370   ........           BL       LCD_SetPixelAA_Xor
   \   00000374   0B02A0E1           LSL      R0,R11,#+4
   \   00000378   000CA0E1           LSL      R0,R0,#+24
   \   0000037C   202EA0E1           LSR      R2,R0,#+28
   \   00000380   0710A0E1           MOV      R1,R7
   \   00000384   01008AE2           ADD      R0,R10,#+1
   \   00000388   ........           BL       LCD_SetPixelAA_Xor
   \   0000038C   019049E2           SUB      R9,R9,#+1
   \   00000390   046046E2           SUB      R6,R6,#+4
   \   00000394   048088E2           ADD      R8,R8,#+4
   \   00000398   01B0F5E5           LDRB     R11,[R5, #+1]!
   \   0000039C   044084E2           ADD      R4,R4,#+4
   \   000003A0   000059E3           CMP      R9,#+0
   \   000003A4   E2FFFF1A           BNE      ??GUI_AA__DrawCharAA4_17
   \                     ??GUI_AA__DrawCharAA4_16:
   \   000003A8   015085E2           ADD      R5,R5,#+1
   \   000003AC   2B22A0E1           LSR      R2,R11,#+4
   \   000003B0   0710A0E1           MOV      R1,R7
   \   000003B4   0400A0E1           MOV      R0,R4
   \   000003B8   ........           BL       LCD_SetPixelAA_Xor
   \   000003BC   0B02A0E1           LSL      R0,R11,#+4
   \   000003C0   000CA0E1           LSL      R0,R0,#+24
   \   000003C4   202EA0E1           LSR      R2,R0,#+28
   \   000003C8   0710A0E1           MOV      R1,R7
   \   000003CC   010084E2           ADD      R0,R4,#+1
   \   000003D0   ........           BL       LCD_SetPixelAA_Xor
   \   000003D4   026046E2           SUB      R6,R6,#+2
   \   000003D8   028088E2           ADD      R8,R8,#+2
   \                     ??GUI_AA__DrawCharAA4_14:
   \   000003DC   000056E3           CMP      R6,#+0
   \   000003E0   0500000A           BEQ      ??GUI_AA__DrawCharAA4_18
   \   000003E4   0000D5E5           LDRB     R0,[R5, #+0]
   \   000003E8   0710A0E1           MOV      R1,R7
   \   000003EC   2022A0E1           LSR      R2,R0,#+4
   \   000003F0   0C009DE5           LDR      R0,[SP, #+12]
   \   000003F4   080080E0           ADD      R0,R0,R8
   \   000003F8   ........           BL       LCD_SetPixelAA_Xor
   \                     ??GUI_AA__DrawCharAA4_18:
   \   000003FC   40109DE5           LDR      R1,[SP, #+64]
   \   00000400   08209DE5           LDR      R2,[SP, #+8]
   \   00000404   021081E0           ADD      R1,R1,R2
   \   00000408   08108DE5           STR      R1,[SP, #+8]
   \   0000040C   04109DE5           LDR      R1,[SP, #+4]
   \   00000410   011081E2           ADD      R1,R1,#+1
   \   00000414   04108DE5           STR      R1,[SP, #+4]
   \   00000418   00109DE5           LDR      R1,[SP, #+0]
   \   0000041C   04009DE5           LDR      R0,[SP, #+4]
   \   00000420   011081E2           ADD      R1,R1,#+1
   \   00000424   00108DE5           STR      R1,[SP, #+0]
   \   00000428   18109DE5           LDR      R1,[SP, #+24]
   \   0000042C   010050E1           CMP      R0,R1
   \   00000430   2FFFFFAA           BGE      ??GUI_AA__DrawCharAA4_1
   \   00000434   A1FFFFEA           B        ??GUI_AA__DrawCharAA4_13
    145          
    146          /*********************************************************************
    147          *
    148          *       GUIPROP_AA4_DispChar
    149          */

   \                                 In section .text, align 4, keep-with-next
    150          void GUIPROP_AA4_DispChar(U16P c) {
   \                     GUIPROP_AA4_DispChar:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    151            int BytesPerLine;
    152            GUI_DRAWMODE DrawMode, OldDrawMode;
    153            const GUI_FONT_PROP * pProp;
    154            const GUI_CHARINFO  * pCharInfo;
    155          
    156            DrawMode = GUI_Context.TextMode;
   \   00000004   ........           LDR      R4,??DataTable2
   \   00000008   0050A0E1           MOV      R5,R0
    157            pProp    = GUIPROP__FindChar(GUI_Context.pAFont->p.pProp, c);
   \   0000000C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000010   18D04DE2           SUB      SP,SP,#+24
   \   00000014   FA72D4E1           LDRSH    R7,[R4, #+42]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   1C0090E5           LDR      R0,[R0, #+28]
   \   00000020   ........           BL       GUIPROP__FindChar
    158            if (pProp) {
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   2600000A           BEQ      ??GUIPROP_AA4_DispChar_0
    159              pCharInfo    = pProp->paCharInfo + (c - pProp->First);
   \   0000002C   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000030   040090E5           LDR      R0,[R0, #+4]
   \   00000034   011045E0           SUB      R1,R5,R1
   \   00000038   815180E0           ADD      R5,R0,R1, LSL #+3
    160              BytesPerLine = pCharInfo->BytesPerLine;
   \   0000003C   0260D5E5           LDRB     R6,[R5, #+2]
    161              OldDrawMode  = LCD_SetDrawMode(DrawMode);
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   ........           BL       LCD_SetDrawMode
   \   00000048   0070A0E1           MOV      R7,R0
   \   0000004C   ........           LDR      R12,??DataTable2_5
   \   00000050   1C0094E5           LDR      R0,[R4, #+28]
   \   00000054   00C09CE5           LDR      R12,[R12, #+0]
   \   00000058   1830D0E5           LDRB     R3,[R0, #+24]
   \   0000005C   F202D4E1           LDRSH    R0,[R4, #+34]
   \   00000060   F412D4E1           LDRSH    R1,[R4, #+36]
   \   00000064   0020D5E5           LDRB     R2,[R5, #+0]
   \   00000068   04E095E5           LDR      LR,[R5, #+4]
   \   0000006C   00005CE3           CMP      R12,#+0
   \   00000070   0B00000A           BEQ      ??GUIPROP_AA4_DispChar_1
    162              #if GUI_SUPPORT_ROTATION
    163              if (GUI_pLCD_APIList) {
    164                GUI_pLCD_APIList->pfDrawBitmap(GUI_Context.DispPosX,      // XPos
    165                                               GUI_Context.DispPosY,      // YPos
    166                                               pCharInfo->XSize,          // XSize
    167                                               GUI_Context.pAFont->YSize, // YSize
    168                                               1,                         // XMag
    169                                               1,                         // YMag
    170                                               4,                         // BitsPerPixel
    171                                               BytesPerLine,              // BytesPerLine
    172                                               pCharInfo->pData,          // Pointer to pixel data
    173                                               NULL);                     // Translation table
   \   00000074   10E08DE5           STR      LR,[SP, #+16]
   \   00000078   04E0A0E3           MOV      LR,#+4
   \   0000007C   08E08DE5           STR      LR,[SP, #+8]
   \   00000080   0080A0E3           MOV      R8,#+0
   \   00000084   01E0A0E3           MOV      LR,#+1
   \   00000088   14808DE5           STR      R8,[SP, #+20]
   \   0000008C   0C608DE5           STR      R6,[SP, #+12]
   \   00000090   04E08DE5           STR      LR,[SP, #+4]
   \   00000094   00E08DE5           STR      LR,[SP, #+0]
   \   00000098   00C09CE5           LDR      R12,[R12, #+0]
   \   0000009C   3CFF2FE1           BLX      R12
   \   000000A0   020000EA           B        ??GUIPROP_AA4_DispChar_2
    174              } else {
    175              #else
    176              {
    177              #endif
    178                GUI_AA__DrawCharAA4(GUI_Context.DispPosX,          // XPos                 
    179                                    GUI_Context.DispPosY,          // YPos                 
    180                                    pCharInfo->XSize,              // XSize                
    181                                    GUI_Context.pAFont->YSize,     // YSize                
    182                                    BytesPerLine,                  // BytesPerLine         
    183                                    (U8 const *)pCharInfo->pData); // Pointer to pixel data
   \                     ??GUIPROP_AA4_DispChar_1:
   \   000000A4   04E08DE5           STR      LR,[SP, #+4]
   \   000000A8   00608DE5           STR      R6,[SP, #+0]
   \   000000AC   ........           BL       GUI_AA__DrawCharAA4
    184              }
    185              LCD_SetDrawMode(OldDrawMode); /* Restore draw mode */
   \                     ??GUIPROP_AA4_DispChar_2:
   \   000000B0   0700A0E1           MOV      R0,R7
   \   000000B4   ........           BL       LCD_SetDrawMode
    186              GUI_Context.DispPosX += pCharInfo->XDist;
   \   000000B8   F202D4E1           LDRSH    R0,[R4, #+34]
   \   000000BC   0110D5E5           LDRB     R1,[R5, #+1]
   \   000000C0   000081E0           ADD      R0,R1,R0
   \   000000C4   B202C4E1           STRH     R0,[R4, #+34]
    187            }
    188          }
   \                     ??GUIPROP_AA4_DispChar_0:
   \   000000C8   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000CC   F081BDE8           POP      {R4-R8,PC}       ;; return
    189          
    190          /*********************************************************************
    191          *
    192          *       GUIPROP_AA4_GetCharDistX
    193          */

   \                                 In section .text, align 4, keep-with-next
    194          int GUIPROP_AA4_GetCharDistX(U16P c) {
   \                     GUIPROP_AA4_GetCharDistX:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    195            const GUI_FONT_PROP GUI_UNI_PTR * pProp;
    196          
    197            pProp = GUIPROP__FindChar(GUI_Context.pAFont->p.pProp, c);
   \   00000008   ........           LDR      R0,??DataTable2
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   1C0090E5           LDR      R0,[R0, #+28]
   \   00000014   1C0090E5           LDR      R0,[R0, #+28]
   \   00000018   ........           BL       GUIPROP__FindChar
    198            return (pProp) ? (pProp->paCharInfo + (c - pProp->First))->XSize : 0;
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0300000A           BEQ      ??GUIPROP_AA4_GetCharDistX_0
   \   00000024   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000028   040090E5           LDR      R0,[R0, #+4]
   \   0000002C   011044E0           SUB      R1,R4,R1
   \   00000030   8101D0E7           LDRB     R0,[R0, +R1, LSL #+3]
   \                     ??GUIPROP_AA4_GetCharDistX_0:
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    199          }
    200          
    201          /*********************************************************************
    202          *
    203          *       GUIPROP_AA4_GetFontInfo
    204          */

   \                                 In section .text, align 4, keep-with-next
    205          void GUIPROP_AA4_GetFontInfo(const GUI_FONT * pFont, GUI_FONTINFO* pfi) {
    206            GUI_USE_PARA(pFont);
    207            pfi->Flags = GUI_FONTINFO_FLAG_PROP | GUI_FONTINFO_FLAG_AA4;
   \                     GUIPROP_AA4_GetFontInfo:
   \   00000000   1100A0E3           MOV      R0,#+17
   \   00000004   B000C1E1           STRH     R0,[R1, #+0]
    208          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    209          
    210          /*********************************************************************
    211          *
    212          *       GUIPROP_AA4_IsInFont
    213          */

   \                                 In section .text, align 4, keep-with-next
    214          char GUIPROP_AA4_IsInFont(const GUI_FONT * pFont, U16 c) {
   \                     GUIPROP_AA4_IsInFont:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    215            const GUI_FONT_PROP GUI_UNI_PTR * pProp;
    216          
    217            pProp = GUIPROP__FindChar(pFont->p.pProp, c);
    218            return (pProp==NULL) ? 0 : 1;
   \   00000008   1C0090E5           LDR      R0,[R0, #+28]
   \   0000000C   ........           BL       GUIPROP__FindChar
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0100A013           MOVNE    R0,#+1
   \   00000018   04D08DE2           ADD      SP,SP,#+4
   \   0000001C   0080BDE8           POP      {PC}             ;; return
    219          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     LCD_pBkColorIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   ........           DC32     ??_Bitmap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   ........           DC32     LCD_pColorIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   ........           DC32     GUI__CharHasTrans

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   ........           DC32     GUI_pLCD_APIList
    220          
    221          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GUIPROP_AA4_DispChar         48
     GUIPROP_AA4_GetCharDistX      8
     GUIPROP_AA4_GetFontInfo       0
     GUIPROP_AA4_IsInFont          8
     GUI_AA__DrawCharAA4          64


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _Bitmap                   104
     _aColor
     _Palette
     _OldColorIndex
     _OldBkColorIndex
     GUI_AA__DrawCharAA4      1080
     GUIPROP_AA4_DispChar      208
     GUIPROP_AA4_GetCharDistX   56
     GUIPROP_AA4_GetFontInfo    12
     GUIPROP_AA4_IsInFont       32
     ??DataTable2                4
     ??DataTable2_1              4
     ??DataTable2_2              4
     ??DataTable2_3              4
     ??DataTable2_4              4
     ??DataTable2_5              4

 
   104 bytes in section .data
 1 412 bytes in section .text
 
 1 412 bytes of CODE memory
   104 bytes of DATA memory

Errors: none
Warnings: none
