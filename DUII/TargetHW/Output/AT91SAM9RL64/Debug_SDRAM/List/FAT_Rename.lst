###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:07 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FAT_Rename.c                         #
#    Command line =  C:\DUII\TargetHW\FS\FAT_Rename.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FA #
#                    T_Rename.lst                                             #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FAT #
#                    _Rename.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FAT_Rename.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FAT_Rename.c
     19          Purpose     : FAT routines for renaming files or directories
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          
     30          #include "FAT_Intern.h"
     31          
     32          
     33          /*********************************************************************
     34          *
     35          *       Public code
     36          *
     37          **********************************************************************
     38          */
     39          
     40          /*********************************************************************
     41          *
     42          *       FS_FAT_Rename
     43          *
     44          *  Description:
     45          *    Rename a existing file/directory.
     46          *
     47          *  Parameters:
     48          *    sOldName    - path to the file/directory.
     49          *    sNewName    - new file/directory name.
     50          *    pVolume     - Pointer to an FS_VOLUME data structure.
     51          *
     52          *  Return value:
     53          *    0         O.K.
     54          *    1         Error
     55          */

   \                                 In section .text, align 4, keep-with-next
     56          int FS_FAT_Rename(const char * sOldName, const char * sNewName, FS_VOLUME * pVolume) {
   \                     FS_FAT_Rename:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0240A0E1           MOV      R4,R2
     57            const char    *  pOldName;
     58            int              r;
     59            FS_SB            SB;
     60            U32              DirStart;
     61          
     62            r = 1;       /* No error so far */
   \   00000014   0170A0E3           MOV      R7,#+1
     63            /*
     64             * Search directory
     65             */
     66            FS__SB_Create(&SB, &pVolume->Partition);
   \   00000018   0410A0E1           MOV      R1,R4
   \   0000001C   10008DE2           ADD      R0,SP,#+16
   \   00000020   ........           BL       FS__SB_Create
     67            if (FS_FAT_FindPath(pVolume, &SB, sOldName, &pOldName, &DirStart)) {
   \   00000024   08008DE2           ADD      R0,SP,#+8
   \   00000028   00008DE5           STR      R0,[SP, #+0]
   \   0000002C   0C308DE2           ADD      R3,SP,#+12
   \   00000030   0520A0E1           MOV      R2,R5
   \   00000034   10108DE2           ADD      R1,SP,#+16
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       FS_FAT_FindPath
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0800000A           BEQ      ??FS_FAT_Rename_0
     68              r = FS__FAT_Move(pVolume, DirStart, DirStart, pOldName, sNewName, &SB);
   \   00000048   10008DE2           ADD      R0,SP,#+16
   \   0000004C   08209DE5           LDR      R2,[SP, #+8]
   \   00000050   04008DE5           STR      R0,[SP, #+4]
   \   00000054   00608DE5           STR      R6,[SP, #+0]
   \   00000058   0C309DE5           LDR      R3,[SP, #+12]
   \   0000005C   0210A0E1           MOV      R1,R2
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       FS__FAT_Move
   \   00000068   0070A0E1           MOV      R7,R0
     69            }
     70            FS__SB_Delete(&SB);
   \                     ??FS_FAT_Rename_0:
   \   0000006C   10008DE2           ADD      R0,SP,#+16
   \   00000070   ........           BL       FS__SB_Delete
     71            return r;
   \   00000074   0700A0E1           MOV      R0,R7
   \   00000078   24D08DE2           ADD      SP,SP,#+36
   \   0000007C   F080BDE8           POP      {R4-R7,PC}       ;; return
     72          }
     73          
     74          /*************************** End of file ****************************/
     75          

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     FS_FAT_Rename     56


   Section sizes:

     Function/Label Bytes
     -------------- -----
     FS_FAT_Rename   128

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
