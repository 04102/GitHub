###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DispString.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DispString.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DispString.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DispString.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DispString.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DispString.C
     19          Purpose     : Implementation of GUI_DispString function.
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24           
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_DispString
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_DispString(const char GUI_UNI_PTR *s) {
   \                     GUI_DispString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040B0E1           MOVS     R4,R0
     36            int xAdjust, yAdjust, xOrg;
     37            int FontSizeY;
     38            if (!s) {
   \   0000000C   5A00000A           BEQ      ??GUI_DispString_0
     39              return;
     40            }
     41            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     42            FontSizeY = GUI_GetFontDistY();
   \   00000014   ........           BL       GUI_GetFontDistY
     43            xOrg = GUI_Context.DispPosX;
   \   00000018   64619FE5           LDR      R6,??GUI_DispString_1
   \   0000001C   0050A0E1           MOV      R5,R0
   \   00000020   F272D6E1           LDRSH    R7,[R6, #+34]
     44           /* Adjust vertical position */
     45            yAdjust = GUI_GetYAdjust();
   \   00000024   ........           BL       GUI_GetYAdjust
   \   00000028   0080A0E1           MOV      R8,R0
     46            GUI_Context.DispPosY -= yAdjust;
   \   0000002C   F402D6E1           LDRSH    R0,[R6, #+36]
   \   00000030   FF90A0E3           MOV      R9,#+255
   \   00000034   7F9C89E3           ORR      R9,R9,#0x7F00
   \   00000038   080040E0           SUB      R0,R0,R8
   \   0000003C   B402C6E1           STRH     R0,[R6, #+36]
     47            for (; *s; s++) {
   \                     ??GUI_DispString_2:
   \   00000040   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   4300000A           BEQ      ??GUI_DispString_3
     48              GUI_RECT r;
     49              int LineNumChars, xLineSize;
     50              LineNumChars = GUI__GetLineNumChars(s, 0x7fff);
   \   0000004C   0910A0E1           MOV      R1,R9
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       GUI__GetLineNumChars
   \   00000058   00A0A0E1           MOV      R10,R0
     51              xLineSize    = GUI__GetLineDistX(s, LineNumChars);
   \   0000005C   0A10A0E1           MOV      R1,R10
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       GUI__GetLineDistX
   \   00000068   00B0A0E1           MOV      R11,R0
     52            /* Check if x-position needs to be changed due to h-alignment */
     53              switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
   \   0000006C   2C00D6E5           LDRB     R0,[R6, #+44]
   \   00000070   030000E2           AND      R0,R0,#0x3
   \   00000074   010050E3           CMP      R0,#+1
   \   00000078   0500000A           BEQ      ??GUI_DispString_4
   \   0000007C   0600003A           BCC      ??GUI_DispString_5
   \   00000080   020050E3           CMP      R0,#+2
   \   00000084   0400001A           BNE      ??GUI_DispString_5
     54                case GUI_TA_CENTER: xAdjust = xLineSize / 2; break;
   \   00000088   AB0F8BE0           ADD      R0,R11,R11, LSR #+31
   \   0000008C   C000A0E1           ASR      R0,R0,#+1
   \   00000090   020000EA           B        ??GUI_DispString_6
     55                case GUI_TA_RIGHT:  xAdjust = xLineSize; break;
   \                     ??GUI_DispString_4:
   \   00000094   0B00A0E1           MOV      R0,R11
   \   00000098   000000EA           B        ??GUI_DispString_6
     56                default:            xAdjust = 0;
   \                     ??GUI_DispString_5:
   \   0000009C   0000A0E3           MOV      R0,#+0
     57              }
     58              r.x0 = GUI_Context.DispPosX -= xAdjust;
   \                     ??GUI_DispString_6:
   \   000000A0   F212D6E1           LDRSH    R1,[R6, #+34]
     59              r.x1 = r.x0 + xLineSize - 1;    
     60              r.y0 = GUI_Context.DispPosY;
     61              r.y1 = r.y0 + FontSizeY - 1;    
     62              GUI__DispLine(s, LineNumChars, &r);
   \   000000A4   0D20A0E1           MOV      R2,SP
   \   000000A8   000041E0           SUB      R0,R1,R0
   \   000000AC   B000CDE1           STRH     R0,[SP, #+0]
   \   000000B0   F010DDE1           LDRSH    R1,[SP, #+0]
   \   000000B4   B202C6E1           STRH     R0,[R6, #+34]
   \   000000B8   0B0081E0           ADD      R0,R1,R11
   \   000000BC   010040E2           SUB      R0,R0,#+1
   \   000000C0   B400CDE1           STRH     R0,[SP, #+4]
   \   000000C4   F402D6E1           LDRSH    R0,[R6, #+36]
   \   000000C8   0A10A0E1           MOV      R1,R10
   \   000000CC   B200CDE1           STRH     R0,[SP, #+2]
   \   000000D0   050080E0           ADD      R0,R0,R5
   \   000000D4   010040E2           SUB      R0,R0,#+1
   \   000000D8   B600CDE1           STRH     R0,[SP, #+6]
   \   000000DC   0400A0E1           MOV      R0,R4
   \   000000E0   ........           BL       GUI__DispLine
     63              GUI_Context.DispPosY = r.y0;
   \   000000E4   F200DDE1           LDRSH    R0,[SP, #+2]
     64              s += GUI_UC__NumChars2NumBytes(s, LineNumChars);
   \   000000E8   0A10A0E1           MOV      R1,R10
   \   000000EC   B402C6E1           STRH     R0,[R6, #+36]
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           BL       GUI_UC__NumChars2NumBytes
   \   000000F8   044080E0           ADD      R4,R0,R4
     65              if ((*s == '\n') || (*s == '\r')) {
   \   000000FC   0000D4E5           LDRB     R0,[R4, #+0]
   \   00000100   0A0050E3           CMP      R0,#+10
   \   00000104   0D005013           CMPNE    R0,#+13
   \   00000108   0D00001A           BNE      ??GUI_DispString_7
     66                switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
   \   0000010C   2C00D6E5           LDRB     R0,[R6, #+44]
   \   00000110   030000E2           AND      R0,R0,#0x3
   \   00000114   010040E2           SUB      R0,R0,#+1
   \   00000118   010050E3           CMP      R0,#+1
     67                case GUI_TA_CENTER:
     68                case GUI_TA_RIGHT:
     69                  GUI_Context.DispPosX = xOrg;
     70                  break;
     71                default:
     72                  GUI_Context.DispPosX = GUI_Context.LBorder;
   \   0000011C   F002D681           LDRSHHI  R0,[R6, #+32]
   \   00000120   0700A091           MOVLS    R0,R7
     73                  break;
   \   00000124   B202C6E1           STRH     R0,[R6, #+34]
     74                }
     75                if (*s == '\n') {
   \   00000128   0000D4E5           LDRB     R0,[R4, #+0]
   \   0000012C   0A0050E3           CMP      R0,#+10
   \   00000130   0600001A           BNE      ??GUI_DispString_8
     76                  GUI_Context.DispPosY += FontSizeY;
   \   00000134   F402D6E1           LDRSH    R0,[R6, #+36]
   \   00000138   000085E0           ADD      R0,R5,R0
   \   0000013C   B402C6E1           STRH     R0,[R6, #+36]
   \   00000140   020000EA           B        ??GUI_DispString_8
     77                }
     78              } else {
     79                GUI_Context.DispPosX = r.x0 + xLineSize;
   \                     ??GUI_DispString_7:
   \   00000144   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000148   00008BE0           ADD      R0,R11,R0
   \   0000014C   B202C6E1           STRH     R0,[R6, #+34]
     80              }
     81              if (*s == 0) {   /* end of string (last line) reached ? */
   \                     ??GUI_DispString_8:
   \   00000150   0100D4E4           LDRB     R0,[R4], #+1
   \   00000154   000050E3           CMP      R0,#+0
   \   00000158   B8FFFF1A           BNE      ??GUI_DispString_2
     82                break;
     83              }
     84            }
     85            GUI_Context.DispPosY += yAdjust;
   \                     ??GUI_DispString_3:
   \   0000015C   F402D6E1           LDRSH    R0,[R6, #+36]
     86            GUI_Context.TextAlign &= ~GUI_TA_HORIZONTAL;
   \   00000160   0310E0E3           MVN      R1,#+3
   \   00000164   000088E0           ADD      R0,R8,R0
   \   00000168   B402C6E1           STRH     R0,[R6, #+36]
   \   0000016C   FC02D6E1           LDRSH    R0,[R6, #+44]
   \   00000170   000001E0           AND      R0,R1,R0
   \   00000174   BC02C6E1           STRH     R0,[R6, #+44]
     87            GUI_UNLOCK();
   \   00000178   ........           BL       GUI_Unlock
     88          }
   \                     ??GUI_DispString_0:
   \   0000017C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000180   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GUI_DispString_1:
   \   00000184   ........           DC32     GUI_Context
     89          
     90          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     GUI_DispString     48


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_DispString  392

 
 392 bytes in section .text
 
 392 bytes of CODE memory

Errors: none
Warnings: none
