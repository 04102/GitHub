###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:00 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SIF_PropExtFrmInfo.c            #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SIF_PropExtFrmInfo.c -D         #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_SIF_PropExtFrmInfo.lst                                 #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _SIF_PropExtFrmInfo.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SIF_PropExtFrmInfo.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_SIF_PropExtFrmInfo.c
     19          Purpose     : Implementation of system independend fonts
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Private code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI_SIF__ClearLine_ExtFrm
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void GUI_SIF__ClearLine_ExtFrm(const char GUI_UNI_PTR * s, int Len) {
   \                     GUI_SIF__ClearLine_ExtFrm:
   \   00000000   F1432DE9           PUSH     {R0,R4-R9,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0180A0E1           MOV      R8,R1
     38            const U8 * pCharInfo;
     39            U16 Char;
     40            int xDist, yDist;
     41            LCD_COLOR OldColor;
     42            OldColor = GUI_GetColor();
   \   0000000C   ........           BL       GUI_GetColor
     43            xDist    = 0;
     44            yDist    = GUI_Context.pAFont->YDist * GUI_Context.pAFont->YMag;
   \   00000010   ........           LDR      R7,??DataTable3
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   1C0097E5           LDR      R0,[R7, #+28]
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   1910D0E5           LDRB     R1,[R0, #+25]
   \   00000024   1B00D0E5           LDRB     R0,[R0, #+27]
     45            pCharInfo = NULL;
   \   00000028   00608DE5           STR      R6,[SP, #+0]
   \   0000002C   800165E1           SMULBB   R5,R0,R1
     46            GUI_SetColor((GUI_Context.TextMode & GUI_TM_REV) ? GUI_GetColor() : GUI_GetBkColor());
   \   00000030   2A00D7E5           LDRB     R0,[R7, #+42]
   \   00000034   040010E3           TST      R0,#0x4
   \   00000038   0100000A           BEQ      ??GUI_SIF__ClearLine_ExtFrm_0
   \   0000003C   ........           BL       GUI_GetColor
   \   00000040   000000EA           B        ??GUI_SIF__ClearLine_ExtFrm_1
   \                     ??GUI_SIF__ClearLine_ExtFrm_0:
   \   00000044   ........           BL       GUI_GetBkColor
   \                     ??GUI_SIF__ClearLine_ExtFrm_1:
   \   00000048   ........           BL       GUI_SetColor
   \   0000004C   040000EA           B        ??GUI_SIF__ClearLine_ExtFrm_2
     47            while (--Len >= 0) {
     48              Char       = GUI_UC__GetCharCodeInc(&s);
     49              pCharInfo  = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, Char, sizeof(GUI_SIF_CHARINFO_EXT));
     50              if (pCharInfo) {
     51                if (Len == 0) {
     52                  int xDistChar, xSizeChar;
     53                  xSizeChar = GUI__Read16(&pCharInfo);
     54                  pCharInfo += 3 * sizeof(U16);               // Skip unused data
     55                  xDistChar = GUI__Read16(&pCharInfo);
     56                  xDist += xDistChar;
     57                  if (xSizeChar > xDistChar) {
     58                    xDist += xSizeChar - xDistChar;
     59                  }
     60                } else {
     61                  pCharInfo += 4 * sizeof(U16);               // Skip unused data
   \                     ??GUI_SIF__ClearLine_ExtFrm_3:
   \   00000050   080080E2           ADD      R0,R0,#+8
   \   00000054   00008DE5           STR      R0,[SP, #+0]
     62                  xDist += GUI__Read16(&pCharInfo);
   \   00000058   0D00A0E1           MOV      R0,SP
   \   0000005C   ........           BL       GUI__Read16
   \   00000060   066080E0           ADD      R6,R0,R6
     63                }
   \                     ??GUI_SIF__ClearLine_ExtFrm_2:
   \   00000064   018058E2           SUBS     R8,R8,#+1
   \   00000068   1800004A           BMI      ??GUI_SIF__ClearLine_ExtFrm_4
   \   0000006C   08008DE2           ADD      R0,SP,#+8
   \   00000070   ........           BL       GUI_UC__GetCharCodeInc
   \   00000074   0010A0E1           MOV      R1,R0
   \   00000078   1020A0E3           MOV      R2,#+16
   \   0000007C   1C0097E5           LDR      R0,[R7, #+28]
   \   00000080   ........           BL       GUI_SIF__GetpCharInfo
   \   00000084   00008DE5           STR      R0,[SP, #+0]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   F4FFFF0A           BEQ      ??GUI_SIF__ClearLine_ExtFrm_2
   \   00000090   000058E3           CMP      R8,#+0
   \   00000094   EDFFFF1A           BNE      ??GUI_SIF__ClearLine_ExtFrm_3
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   ........           BL       GUI__Read16
   \   000000A0   0090A0E1           MOV      R9,R0
   \   000000A4   00009DE5           LDR      R0,[SP, #+0]
   \   000000A8   060080E2           ADD      R0,R0,#+6
   \   000000AC   00008DE5           STR      R0,[SP, #+0]
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   ........           BL       GUI__Read16
   \   000000B8   066080E0           ADD      R6,R0,R6
   \   000000BC   090050E1           CMP      R0,R9
   \   000000C0   E7FFFFAA           BGE      ??GUI_SIF__ClearLine_ExtFrm_2
   \   000000C4   061089E0           ADD      R1,R9,R6
   \   000000C8   006041E0           SUB      R6,R1,R0
   \   000000CC   E4FFFFEA           B        ??GUI_SIF__ClearLine_ExtFrm_2
     64              }
     65            }
   \                     ??GUI_SIF__ClearLine_ExtFrm_4:
   \   000000D0   F412D7E1           LDRSH    R1,[R7, #+36]
   \   000000D4   F202D7E1           LDRSH    R0,[R7, #+34]
   \   000000D8   012085E0           ADD      R2,R5,R1
   \   000000DC   013042E2           SUB      R3,R2,#+1
   \   000000E0   002086E0           ADD      R2,R6,R0
   \   000000E4   012042E2           SUB      R2,R2,#+1
     66            LCD_FillRect(GUI_Context.DispPosX, GUI_Context.DispPosY, GUI_Context.DispPosX + xDist - 1, GUI_Context.DispPosY + yDist - 1);
   \   000000E8   ........           BL       LCD_FillRect
     67            GUI_SetColor(OldColor);
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           BL       GUI_SetColor
     68            //
     69            // Avoid background pixels to be drawn twice
     70            //
     71            GUI__CharHasTrans = 1;
   \   000000F4   ........           LDR      R0,??DataTable3_1
   \   000000F8   0110A0E3           MOV      R1,#+1
   \   000000FC   0010C0E5           STRB     R1,[R0, #+0]
     72          }
   \   00000100   0CD08DE2           ADD      SP,SP,#+12
   \   00000104   F083BDE8           POP      {R4-R9,PC}       ;; return
     73          
     74          /*********************************************************************
     75          *
     76          *       GUI_SIF__GetCharDistX_ExtFrm
     77          */

   \                                 In section .text, align 4, keep-with-next
     78          int GUI_SIF__GetCharDistX_ExtFrm(U16P c) {
   \                     GUI_SIF__GetCharDistX_ExtFrm:
   \   00000000   10402DE9           PUSH     {R4,LR}
     79            const U8 * pCharInfo;
     80            I16 DistX = 0;
     81            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO_EXT));       /* Get pointer to char info data */
   \   00000004   0010A0E1           MOV      R1,R0
   \   00000008   ........           LDR      R0,??DataTable3
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   1020A0E3           MOV      R2,#+16
   \   00000018   1C0090E5           LDR      R0,[R0, #+28]
   \   0000001C   ........           BL       GUI_SIF__GetpCharInfo
   \   00000020   00008DE5           STR      R0,[SP, #+0]
     82            if (pCharInfo) {
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0400000A           BEQ      ??GUI_SIF__GetCharDistX_ExtFrm_0
     83              pCharInfo += 4 * sizeof(U16);                                   /* Skip unused data */
   \   0000002C   080080E2           ADD      R0,R0,#+8
   \   00000030   00008DE5           STR      R0,[SP, #+0]
     84              DistX = GUI__Read16(&pCharInfo);
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           BL       GUI__Read16
   \   0000003C   0040A0E1           MOV      R4,R0
     85            }
     86            return DistX;
   \                     ??GUI_SIF__GetCharDistX_ExtFrm_0:
   \   00000040   0408A0E1           LSL      R0,R4,#+16
   \   00000044   4008A0E1           ASR      R0,R0,#+16
   \   00000048   08D08DE2           ADD      SP,SP,#+8
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
     87          }
     88          
     89          /*********************************************************************
     90          *
     91          *       _GetFontInfo_ExtFrm
     92          */

   \                                 In section .text, align 4, keep-with-next
     93          void GUI_SIF__GetFontInfo_ExtFrm(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
   \                     GUI_SIF__GetFontInfo_ExtFrm:
   \   00000000   10402DE9           PUSH     {R4,LR}
     94            const U8 * pData;
     95            pData = (const U8 *)pFont->p.pFontData + 4;             /* Skip unused data */
   \   00000004   1C0090E5           LDR      R0,[R0, #+28]
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   040080E2           ADD      R0,R0,#+4
   \   00000010   00008DE5           STR      R0,[SP, #+0]
   \   00000014   0140A0E1           MOV      R4,R1
     96            pfi->Baseline = GUI__Read16(&pData);
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           BL       GUI__Read16
   \   00000020   0200C4E5           STRB     R0,[R4, #+2]
     97            pfi->LHeight  = GUI__Read16(&pData);
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       GUI__Read16
   \   0000002C   0300C4E5           STRB     R0,[R4, #+3]
     98            pfi->CHeight  = GUI__Read16(&pData);
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           BL       GUI__Read16
   \   00000038   0400C4E5           STRB     R0,[R4, #+4]
     99            pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   B000C4E1           STRH     R0,[R4, #+0]
    100          }
   \   00000044   08D08DE2           ADD      SP,SP,#+8
   \   00000048   1080BDE8           POP      {R4,PC}          ;; return
    101          
    102          /*********************************************************************
    103          *
    104          *       GUI_SIF__IsInFont_ExtFrm
    105          */

   \                                 In section .text, align 4, keep-with-next
    106          char GUI_SIF__IsInFont_ExtFrm(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
   \                     GUI_SIF__IsInFont_ExtFrm:
   \   00000000   00402DE9           PUSH     {LR}
    107            const U8 * pCharInfo;
    108            GUI_USE_PARA(pFont);
    109            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO_EXT));
    110            return (pCharInfo) ? 1 : 0;
   \   00000004   ........           LDR      R0,??DataTable3
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1020A0E3           MOV      R2,#+16
   \   00000010   1C0090E5           LDR      R0,[R0, #+28]
   \   00000014   ........           BL       GUI_SIF__GetpCharInfo
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0100A013           MOVNE    R0,#+1
   \   00000020   FF0000E2           AND      R0,R0,#0xFF
   \   00000024   04D08DE2           ADD      SP,SP,#+4
   \   00000028   0080BDE8           POP      {PC}             ;; return
    111          }
    112          
    113          /*********************************************************************
    114          *
    115          *       GUI_SIF__GetCharInfo_ExtFrm
    116          */

   \                                 In section .text, align 4, keep-with-next
    117          int GUI_SIF__GetCharInfo_ExtFrm(U16P c, GUI_CHARINFO_EXT * pInfo) {
   \                     GUI_SIF__GetCharInfo_ExtFrm:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    118            const U8 * pCharInfo;
    119            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO_EXT));
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   ........           LDR      R0,??DataTable3
   \   00000010   08D04DE2           SUB      SP,SP,#+8
   \   00000014   1020A0E3           MOV      R2,#+16
   \   00000018   1C0090E5           LDR      R0,[R0, #+28]
   \   0000001C   ........           BL       GUI_SIF__GetpCharInfo
   \   00000020   00008DE5           STR      R0,[SP, #+0]
    120            if (pCharInfo) {
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0A00000A           BEQ      ??GUI_SIF__GetCharInfo_ExtFrm_0
    121              pInfo->XSize = GUI__Read16(&pCharInfo);
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           BL       GUI__Read16
   \   00000034   0000C4E5           STRB     R0,[R4, #+0]
    122              pCharInfo += 3 * sizeof(U16);                                   /* Skip unused data */
   \   00000038   00009DE5           LDR      R0,[SP, #+0]
   \   0000003C   060080E2           ADD      R0,R0,#+6
   \   00000040   00008DE5           STR      R0,[SP, #+0]
    123              pInfo->XDist = GUI__Read16(&pCharInfo);
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           BL       GUI__Read16
   \   0000004C   0400C4E5           STRB     R0,[R4, #+4]
    124              return 0;
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   000000EA           B        ??GUI_SIF__GetCharInfo_ExtFrm_1
    125            }
    126            return 1;
   \                     ??GUI_SIF__GetCharInfo_ExtFrm_0:
   \   00000058   0100A0E3           MOV      R0,#+1
   \                     ??GUI_SIF__GetCharInfo_ExtFrm_1:
   \   0000005C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
    127          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     GUI__CharHasTrans

   Maximum stack usage in bytes:

     Function                     .cstack
     --------                     -------
     GUI_SIF__ClearLine_ExtFrm        40
     GUI_SIF__GetCharDistX_ExtFrm     16
     GUI_SIF__GetCharInfo_ExtFrm      16
     GUI_SIF__GetFontInfo_ExtFrm      16
     GUI_SIF__IsInFont_ExtFrm          8


   Section sizes:

     Function/Label               Bytes
     --------------               -----
     GUI_SIF__ClearLine_ExtFrm     264
     GUI_SIF__GetCharDistX_ExtFrm   80
     GUI_SIF__GetFontInfo_ExtFrm    76
     GUI_SIF__IsInFont_ExtFrm       44
     GUI_SIF__GetCharInfo_ExtFrm   100
     ??DataTable3                    4
     ??DataTable3_1                  4

 
 572 bytes in section .text
 
 572 bytes of CODE memory

Errors: none
Warnings: none
