###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:12 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_AddSpaceHex.c                     #
#    Command line =  C:\DUII\TargetHW\FS\FS_AddSpaceHex.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FS #
#                    _AddSpaceHex.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FS_ #
#                    AddSpaceHex.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_AddSpaceHex.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_AddSpaceHex.c
     19          Purpose     : add a hex number to string
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          
     30          #include "FS_ConfDefaults.h"        /* FS Configuration */
     31          #include "FS_Int.h"
     32          
     33          
     34          /*********************************************************************
     35          *
     36          *       Static data
     37          *
     38          **********************************************************************
     39          */
     40          

   \                                 In section .text, align 4, keep-with-next
     41          static const char _acHex[16] =  {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
   \                     _acHex:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   303132333435       DC8 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
   \              36373839    
   \   0000000A   414243444546       DC8 65, 66, 67, 68, 69, 70
     42          
     43          /*********************************************************************
     44          *
     45          *       Static code
     46          *
     47          **********************************************************************
     48          */
     49          
     50          /*********************************************************************
     51          *
     52          *       _AddHex
     53          */
     54          static void _AddHex(U32 v, U8 Len, char**ps) {
     55            char *s = *ps;
     56            if (Len > 8) {
     57              return;
     58            }
     59            (*ps) += Len;
     60            **ps   = '\0';     /* Make sure string is 0-terminated */
     61            while(Len--) {
     62              *(s + Len) = _acHex[v & 15];
     63              v >>= 4;
     64            }
     65          }
     66          
     67          
     68          /*********************************************************************
     69          *
     70          *       Public code
     71          *
     72          **********************************************************************
     73          */
     74          
     75          /*********************************************************************
     76          *
     77          *       FS__AddSpaceHex
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          void FS__AddSpaceHex(U32 v, U8 Len, char** ps) {
     80            char* s = *ps;
   \                     FS__AddSpaceHex:
   \   00000000   003092E5           LDR      R3,[R2, #+0]
     81            *s++ = ' ';
   \   00000004   20C0A0E3           MOV      R12,#+32
   \   00000008   01C0C3E4           STRB     R12,[R3], #+1
     82            *ps = s;
   \   0000000C   003082E5           STR      R3,[R2, #+0]
     83            _AddHex(v, Len, ps);
   \   00000010   090051E3           CMP      R1,#+9
   \   00000014   0E00002A           BCS      ??FS__AddSpaceHex_0
   \   00000018   033081E0           ADD      R3,R1,R3
   \   0000001C   003082E5           STR      R3,[R2, #+0]
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0020C3E5           STRB     R2,[R3, #+0]
   \   00000028   000051E3           CMP      R1,#+0
   \   0000002C   0800000A           BEQ      ??FS__AddSpaceHex_0
   \   00000030   012043E2           SUB      R2,R3,#+1
   \   00000034   ........           ADR      R3,_acHex
   \                     ??FS__AddSpaceHex_1:
   \   00000038   0FC000E2           AND      R12,R0,#0xF
   \   0000003C   03C0DCE7           LDRB     R12,[R12, +R3]
   \   00000040   011041E2           SUB      R1,R1,#+1
   \   00000044   2002A0E1           LSR      R0,R0,#+4
   \   00000048   01C042E4           STRB     R12,[R2], #-1
   \   0000004C   FF1011E2           ANDS     R1,R1,#0xFF
   \   00000050   F8FFFF1A           BNE      ??FS__AddSpaceHex_1
     84          }
   \                     ??FS__AddSpaceHex_0:
   \   00000054   1EFF2FE1           BX       LR               ;; return
     85          
     86          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     FS__AddSpaceHex      0


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     _acHex            16
     FS__AddSpaceHex   88

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
