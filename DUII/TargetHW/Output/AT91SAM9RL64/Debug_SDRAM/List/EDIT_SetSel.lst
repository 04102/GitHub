###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:00 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\EDIT_SetSel.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\EDIT_SetSel.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\ED #
#                    IT_SetSel.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\EDI #
#                    T_SetSel.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\EDIT_SetSel.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : EDIT_SetSel.c
     19          Purpose     : Implementation of edit widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "EDIT.h"
     24          #include "EDIT_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *             Exported routines
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       EDIT_SetSel
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void EDIT_SetSel(EDIT_Handle hObj, int FirstChar, int LastChar) {
   \                     EDIT_SetSel:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
     39            if (hObj) {
   \   00000014   000055E3           CMP      R5,#+0
   \   00000018   1A00000A           BEQ      ??EDIT_SetSel_0
     40              EDIT_Obj * pObj;
     41              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     42              pObj = EDIT_LOCK_H(hObj);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   0040A0E1           MOV      R4,R0
     43              if (FirstChar == -1) {
   \   0000002C   0000E0E3           MVN      R0,#+0
   \   00000030   000056E1           CMP      R6,R0
     44                pObj->SelSize = 0;
   \   00000034   0000A003           MOVEQ    R0,#+0
   \   00000038   0F00000A           BEQ      ??EDIT_SetSel_1
   \   0000003C   BA13D4E1           LDRH     R1,[R4, #+58]
   \   00000040   011041E2           SUB      R1,R1,#+1
   \   00000044   060051E1           CMP      R1,R6
     45              } else {
     46                if (FirstChar > (pObj->BufferSize - 1)) {
     47                  FirstChar = pObj->BufferSize - 1;
   \   00000048   0160A0B1           MOVLT    R6,R1
     48                }
     49                if (LastChar > (pObj->BufferSize - 1)) {
   \   0000004C   070051E1           CMP      R1,R7
     50                  LastChar = pObj->BufferSize - 1;
   \   00000050   0170A0B1           MOVLT    R7,R1
     51                }
     52                if (LastChar == -1) {
   \   00000054   000057E1           CMP      R7,R0
   \   00000058   0200001A           BNE      ??EDIT_SetSel_2
     53                  LastChar = EDIT_GetNumChars(hObj);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           BL       EDIT_GetNumChars
   \   00000064   0070A0E1           MOV      R7,R0
     54                }
     55                if (LastChar >= FirstChar) {
   \                     ??EDIT_SetSel_2:
   \   00000068   060057E1           CMP      R7,R6
   \   0000006C   030000BA           BLT      ??EDIT_SetSel_3
     56                  pObj->CursorPos = FirstChar;
     57                  pObj->SelSize   = LastChar - FirstChar + 1;
   \   00000070   060047E0           SUB      R0,R7,R6
   \   00000074   4C6084E5           STR      R6,[R4, #+76]
   \   00000078   010080E2           ADD      R0,R0,#+1
   \                     ??EDIT_SetSel_1:
   \   0000007C   500084E5           STR      R0,[R4, #+80]
     58                }
     59              }
     60              GUI_UNLOCK_H(pObj);
   \                     ??EDIT_SetSel_3:
   \   00000080   ........           BL       GUI_ALLOC_UnlockH
     61              WM_UNLOCK();
   \   00000084   ........           BL       GUI_Unlock
     62            }
     63          }
   \                     ??EDIT_SetSel_0:
   \   00000088   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     64          
     65          #else  /* avoid empty object files */
     66          
     67          void EDIT_SetSel_C(void);
     68          void EDIT_SetSel_C(void) {}
     69          
     70          #endif /* GUI_WINSUPPORT */
     71          
     72          

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     EDIT_SetSel     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     EDIT_SetSel     144

 
 144 bytes in section .text
 
 144 bytes of CODE memory

Errors: none
Warnings: none
