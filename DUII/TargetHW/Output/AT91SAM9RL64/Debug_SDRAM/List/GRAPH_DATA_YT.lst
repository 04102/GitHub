###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GRAPH_DATA_YT.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\GRAPH_DATA_YT.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GR #
#                    APH_DATA_YT.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GRA #
#                    PH_DATA_YT.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GRAPH_DATA_YT.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GRAPH_DATA_YT.c
     19          Purpose     : Implementation of YT graph
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GRAPH_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Types
     32          *
     33          **********************************************************************
     34          */
     35          typedef struct {
     36            GRAPH_DATA_OBJ GraphDataObj;
     37            WM_HMEM        hData;
     38            U8             Align;
     39            U8             MirrorX;
     40          } GRAPH_DATA_YT_OBJ;
     41          
     42          /*********************************************************************
     43          *
     44          *       Static routines
     45          *
     46          **********************************************************************
     47          */
     48          /*********************************************************************
     49          *
     50          *       _OnPaint
     51          */

   \                                 In section .text, align 4, keep-with-next
     52          static void _OnPaint(GRAPH_DATA_Handle hDataObj, GUI_RECT * pRect) {
   \                     _OnPaint:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
     53            int xPos, yPos, Diff;
     54            I16               * pData;
     55            GRAPH_OBJ         * pObj;
     56            GRAPH_DATA_YT_OBJ * pDataYtObj;
     57            GUI_USE_PARA(pRect);
     58            pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   0040A0E1           MOV      R4,R0
     59            if (pDataYtObj->hData) {
   \   00000010   200094E5           LDR      R0,[R4, #+32]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   4000000A           BEQ      ??_OnPaint_0
     60              GUI_RECT Rect;
     61              int NumItems, NumVisItems, BorderL, BorderT, BorderR, BorderB;
     62              pData = (I16 *)GUI_LOCK_H(pDataYtObj->hData);
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0050A0E1           MOV      R5,R0
     63              pObj = (GRAPH_OBJ *)GUI_LOCK_H(pDataYtObj->GraphDataObj.PaintObj.hGraph);
   \   00000024   080094E5           LDR      R0,[R4, #+8]
   \   00000028   ........           BL       GUI_ALLOC_LockH
   \   0000002C   0060A0E1           MOV      R6,R0
     64              BorderL = pObj->Props.BorderL;
   \   00000030   548096E5           LDR      R8,[R6, #+84]
     65              BorderT = pObj->Props.BorderT;
   \   00000034   589096E5           LDR      R9,[R6, #+88]
     66              BorderR = pObj->Props.BorderR;
   \   00000038   5CA096E5           LDR      R10,[R6, #+92]
     67              BorderB = pObj->Props.BorderB;
   \   0000003C   607096E5           LDR      R7,[R6, #+96]
     68              WM_GetInsideRectExScrollbar(pDataYtObj->GraphDataObj.PaintObj.hGraph, &Rect);
   \   00000040   0C108DE2           ADD      R1,SP,#+12
   \   00000044   080094E5           LDR      R0,[R4, #+8]
   \   00000048   ........           BL       WM_GetInsideRectExScrollbar
     69              Rect.x0 += BorderL;
   \   0000004C   FC00DDE1           LDRSH    R0,[SP, #+12]
     70              Rect.y0 += BorderT;
     71              Rect.x1 -= BorderR;
     72              Rect.y1 -= BorderB;
   \   00000050   F211DDE1           LDRSH    R1,[SP, #+18]
   \   00000054   000088E0           ADD      R0,R8,R0
   \   00000058   BC00CDE1           STRH     R0,[SP, #+12]
   \   0000005C   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   00000060   071041E0           SUB      R1,R1,R7
   \   00000064   B211CDE1           STRH     R1,[SP, #+18]
   \   00000068   000089E0           ADD      R0,R9,R0
   \   0000006C   BE00CDE1           STRH     R0,[SP, #+14]
   \   00000070   F001DDE1           LDRSH    R0,[SP, #+16]
     73              NumItems = pDataYtObj->GraphDataObj.NumItems;
     74              yPos     = Rect.y1                        /* Bottom of data area */
     75                       - pDataYtObj->GraphDataObj.OffY  /* - Y-offset of data object */
     76                       + pObj->ScrollStateV.v;          /* + Y-offset of graph object */
   \   00000074   0118A0E1           LSL      R1,R1,#+16
   \   00000078   4118A0E1           ASR      R1,R1,#+16
   \   0000007C   0A0040E0           SUB      R0,R0,R10
   \   00000080   B001CDE1           STRH     R0,[SP, #+16]
   \   00000084   1C2094E5           LDR      R2,[R4, #+28]
   \   00000088   021041E0           SUB      R1,R1,R2
   \   0000008C   802096E5           LDR      R2,[R6, #+128]
   \   00000090   017082E0           ADD      R7,R2,R1
     77              NumVisItems = NumItems - pObj->ScrollStateH.v;
   \   00000094   0C1094E5           LDR      R1,[R4, #+12]
   \   00000098   8C2096E5           LDR      R2,[R6, #+140]
   \   0000009C   026041E0           SUB      R6,R1,R2
     78              if (pDataYtObj->Align == GRAPH_ALIGN_LEFT) {
   \   000000A0   2420D4E5           LDRB     R2,[R4, #+36]
   \   000000A4   FC10DDE1           LDRSH    R1,[SP, #+12]
   \   000000A8   010052E3           CMP      R2,#+1
     79                xPos = Rect.x0;
   \   000000AC   0180A001           MOVEQ    R8,R1
   \   000000B0   0900000A           BEQ      ??_OnPaint_1
     80              } else {
     81                xPos = Rect.x1 - NumVisItems + 1;
   \   000000B4   0008A0E1           LSL      R0,R0,#+16
   \   000000B8   4008A0E1           ASR      R0,R0,#+16
   \   000000BC   060040E0           SUB      R0,R0,R6
   \   000000C0   018080E2           ADD      R8,R0,#+1
     82                if (Rect.x0 > xPos) {
   \   000000C4   010058E1           CMP      R8,R1
   \   000000C8   030000AA           BGE      ??_OnPaint_1
     83                  Diff         = Rect.x0 - xPos;
   \   000000CC   080041E0           SUB      R0,R1,R8
     84                  xPos        += Diff;
   \   000000D0   088080E0           ADD      R8,R0,R8
     85                  pData       += Diff;
   \   000000D4   805085E0           ADD      R5,R5,R0, LSL #+1
     86                  NumVisItems -= Diff;
   \   000000D8   006046E0           SUB      R6,R6,R0
     87                }
     88              }
     89              if (NumVisItems > 0) {
   \                     ??_OnPaint_1:
   \   000000DC   010056E3           CMP      R6,#+1
   \   000000E0   0C0000BA           BLT      ??_OnPaint_2
     90                GUI_SetColor(pDataYtObj->GraphDataObj.Color);
   \   000000E4   140094E5           LDR      R0,[R4, #+20]
   \   000000E8   ........           BL       GUI_SetColor
     91                GUI_DrawGraphEx(pData, NumVisItems, xPos, yPos, -1, 1, pDataYtObj->MirrorX);
   \   000000EC   2500D4E5           LDRB     R0,[R4, #+37]
   \   000000F0   0730A0E1           MOV      R3,R7
   \   000000F4   0820A0E1           MOV      R2,R8
   \   000000F8   08008DE5           STR      R0,[SP, #+8]
   \   000000FC   0100A0E3           MOV      R0,#+1
   \   00000100   04008DE5           STR      R0,[SP, #+4]
   \   00000104   000060E2           RSB      R0,R0,#+0
   \   00000108   00008DE5           STR      R0,[SP, #+0]
   \   0000010C   0610A0E1           MOV      R1,R6
   \   00000110   0500A0E1           MOV      R0,R5
   \   00000114   ........           BL       GUI_DrawGraphEx
     92              }
     93              GUI_UNLOCK_H(pObj);
   \                     ??_OnPaint_2:
   \   00000118   ........           BL       GUI_ALLOC_UnlockH
     94              GUI_UNLOCK_H(pData);
   \   0000011C   ........           BL       GUI_ALLOC_UnlockH
     95            }
     96            GUI_UNLOCK_H(pDataYtObj);
   \                     ??_OnPaint_0:
   \   00000120   ........           BL       GUI_ALLOC_UnlockH
     97          }
   \   00000124   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000128   F087BDE8           POP      {R4-R10,PC}      ;; return
     98          
     99          /*********************************************************************
    100          *
    101          *       _OnDelete
    102          */

   \                                 In section .text, align 4, keep-with-next
    103          static void _OnDelete(GRAPH_DATA_Handle hDataObj) {
   \                     _OnDelete:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    104            GRAPH_DATA_YT_OBJ * pDataYtObj;
    105            pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   0050A0E1           MOV      R5,R0
    106            if (pDataYtObj->hData) {
   \   00000010   200095E5           LDR      R0,[R5, #+32]
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0100000A           BEQ      ??_OnDelete_0
    107              GUI_ALLOC_Free(pDataYtObj->hData);
   \   00000020   ........           BL       GUI_ALLOC_Free
    108              pDataYtObj->hData = 0;
   \   00000024   206085E5           STR      R6,[R5, #+32]
    109            }
    110            GUI_UNLOCK_H(pDataYtObj);
   \                     ??_OnDelete_0:
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    111            GUI_ALLOC_Free(hDataObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   7040BDE8           POP      {R4-R6,LR}
   \   00000034   ........           B        GUI_ALLOC_Free   ;; tailcall
    112          }
    113          
    114          /*********************************************************************
    115          *
    116          *       Exported routines
    117          *
    118          **********************************************************************
    119          */
    120          /*********************************************************************
    121          *
    122          *       GRAPH_DATA_YT_Create
    123          */

   \                                 In section .text, align 4, keep-with-next
    124          GRAPH_DATA_Handle GRAPH_DATA_YT_Create(GUI_COLOR Color, unsigned MaxNumItems, I16 * pItems, unsigned NumItems) {
   \                     GRAPH_DATA_YT_Create:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0380A0E1           MOV      R8,R3
    125            GRAPH_DATA_Handle  hDataObj;
    126            WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    127            hDataObj = GUI_ALLOC_AllocZero(sizeof(GRAPH_DATA_YT_OBJ));
   \   0000001C   2800A0E3           MOV      R0,#+40
   \   00000020   ........           BL       GUI_ALLOC_AllocZero
   \   00000024   0040B0E1           MOVS     R4,R0
    128            if (hDataObj) {
   \   00000028   1500000A           BEQ      ??GRAPH_DATA_YT_Create_0
    129              GRAPH_DATA_YT_OBJ * pDataYtObj;
    130              WM_HMEM             hData;
    131              int                 BufferSize;
    132              BufferSize = sizeof(I16) * MaxNumItems;
    133              hData = GUI_ALLOC_AllocZero(BufferSize);
   \   0000002C   8600A0E1           LSL      R0,R6,#+1
   \   00000030   ........           BL       GUI_ALLOC_AllocZero
   \   00000034   0090B0E1           MOVS     R9,R0
    134              if (hData && pItems && NumItems) {
   \   00000038   00005713           CMPNE    R7,#+0
   \   0000003C   00005813           CMPNE    R8,#+0
   \   00000040   0400000A           BEQ      ??GRAPH_DATA_YT_Create_1
    135                void * p;
    136                p = GUI_LOCK_H(hData);
   \   00000044   ........           BL       GUI_ALLOC_LockH
    137                GUI_MEMCPY(p, pItems, sizeof(I16) * NumItems);
   \   00000048   8820A0E1           LSL      R2,R8,#+1
   \   0000004C   0710A0E1           MOV      R1,R7
   \   00000050   ........           BL       __aeabi_memcpy
    138                GUI_UNLOCK_H(p);
   \   00000054   ........           BL       GUI_ALLOC_UnlockH
    139              }
    140              pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \                     ??GRAPH_DATA_YT_Create_1:
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       GUI_ALLOC_LockH
    141              pDataYtObj->hData = hData;
   \   00000060   209080E5           STR      R9,[R0, #+32]
    142              pDataYtObj->GraphDataObj.Color               = Color;
   \   00000064   145080E5           STR      R5,[R0, #+20]
    143              pDataYtObj->GraphDataObj.MaxNumItems         = MaxNumItems;
   \   00000068   106080E5           STR      R6,[R0, #+16]
    144              pDataYtObj->GraphDataObj.NumItems            = NumItems;
    145              pDataYtObj->GraphDataObj.PaintObj.pfOnPaint  = _OnPaint;
   \   0000006C   ........           LDR      R1,??DataTable0
   \   00000070   0C8080E5           STR      R8,[R0, #+12]
   \   00000074   001080E5           STR      R1,[R0, #+0]
    146              pDataYtObj->GraphDataObj.PaintObj.pfOnDelete = _OnDelete;
   \   00000078   ........           LDR      R1,??DataTable0_1
   \   0000007C   041080E5           STR      R1,[R0, #+4]
    147              GUI_UNLOCK_H(pDataYtObj);
   \   00000080   ........           BL       GUI_ALLOC_UnlockH
    148            }
    149            WM_UNLOCK();
   \                     ??GRAPH_DATA_YT_Create_0:
   \   00000084   ........           BL       GUI_Unlock
    150            return hDataObj;
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   04D08DE2           ADD      SP,SP,#+4
   \   00000090   F083BDE8           POP      {R4-R9,PC}       ;; return
    151          }
    152          
    153          /*********************************************************************
    154          *
    155          *       GRAPH_DATA_YT_Delete
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          void GRAPH_DATA_YT_Delete(GRAPH_DATA_Handle hDataObj) {
   \                     GRAPH_DATA_YT_Delete:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    158            WM_LOCK();
   \   00000008   ........           BL       GUI_Lock
    159            _OnDelete(hDataObj);
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0050A0E1           MOV      R5,R0
   \   00000018   200095E5           LDR      R0,[R5, #+32]
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0100000A           BEQ      ??GRAPH_DATA_YT_Delete_0
   \   00000028   ........           BL       GUI_ALLOC_Free
   \   0000002C   206085E5           STR      R6,[R5, #+32]
   \                     ??GRAPH_DATA_YT_Delete_0:
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       GUI_ALLOC_Free
    160            WM_UNLOCK();
   \   0000003C   7040BDE8           POP      {R4-R6,LR}
   \   00000040   ........           B        GUI_Unlock       ;; tailcall
    161          }
    162          
    163          /*********************************************************************
    164          *
    165          *       GRAPH_DATA_YT_AddValue
    166          */

   \                                 In section .text, align 4, keep-with-next
    167          void GRAPH_DATA_YT_AddValue(GRAPH_DATA_Handle hDataObj, I16 Value) {
   \                     GRAPH_DATA_YT_AddValue:
   \   00000000   12402DE9           PUSH     {R1,R4,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
    168            GRAPH_DATA_YT_OBJ * pDataYtObj;
    169            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
    170            pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   0040B0E1           MOVS     R4,R0
    171            if (pDataYtObj) {
   \   0000001C   0700000A           BEQ      ??GRAPH_DATA_YT_AddValue_0
    172              I16 * pData;
    173              pData = (I16 *)GUI_LOCK_H(pDataYtObj->hData);
   \   00000020   200094E5           LDR      R0,[R4, #+32]
   \   00000024   ........           BL       GUI_ALLOC_LockH
    174              GRAPH__AddValue(&pDataYtObj->GraphDataObj, pData, &Value, sizeof(I16));
   \   00000028   0010A0E1           MOV      R1,R0
   \   0000002C   0230A0E3           MOV      R3,#+2
   \   00000030   04208DE2           ADD      R2,SP,#+4
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       GRAPH__AddValue
    175              GUI_UNLOCK_H(pData);
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    176            }
    177            GUI_UNLOCK_H(pDataYtObj);
   \                     ??GRAPH_DATA_YT_AddValue_0:
   \   00000040   ........           BL       GUI_ALLOC_UnlockH
    178            WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
    179          }
   \   00000048   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
    180          
    181          /*********************************************************************
    182          *
    183          *       GRAPH_DATA_YT_SetOffY
    184          */

   \                                 In section .text, align 4, keep-with-next
    185          void GRAPH_DATA_YT_SetOffY(GRAPH_DATA_Handle hDataObj, int Off) {
   \                     GRAPH_DATA_YT_SetOffY:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    186            GRAPH_DATA_OBJ * pDataObj;
    187            if (hDataObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_DATA_YT_SetOffY_0
    188              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    189              pDataObj = (GRAPH_DATA_OBJ *)GUI_LOCK_H(hDataObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    190              if (pDataObj->OffY != Off) {
   \   00000024   1C1090E5           LDR      R1,[R0, #+28]
   \   00000028   050051E1           CMP      R1,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_DATA_YT_SetOffY_1
    191                pDataObj->OffY = Off;
   \   00000030   1C5080E5           STR      R5,[R0, #+28]
    192                WM_Invalidate(pDataObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    193              }
    194              GUI_UNLOCK_H(pDataObj);
   \                     ??GRAPH_DATA_YT_SetOffY_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    195              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    196            }
    197          }
   \                     ??GRAPH_DATA_YT_SetOffY_0:
   \   00000044   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
    198          
    199          /*********************************************************************
    200          *
    201          *       GRAPH_DATA_YT_SetAlign
    202          */

   \                                 In section .text, align 4, keep-with-next
    203          void GRAPH_DATA_YT_SetAlign(GRAPH_DATA_Handle hDataObj, int Align) {
   \                     GRAPH_DATA_YT_SetAlign:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    204            GRAPH_DATA_YT_OBJ * pDataYtObj;
    205            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    206            pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    207            if (pDataYtObj) {
   \   0000001C   000050E3           CMP      R0,#+0
    208              if (pDataYtObj->Align != Align) {
   \   00000020   2410D015           LDRBNE   R1,[R0, #+36]
   \   00000024   05005111           CMPNE    R1,R5
   \   00000028   0200000A           BEQ      ??GRAPH_DATA_YT_SetAlign_0
    209                pDataYtObj->Align = Align;
   \   0000002C   2450C0E5           STRB     R5,[R0, #+36]
    210                WM_Invalidate(pDataYtObj->GraphDataObj.PaintObj.hGraph);
   \   00000030   080090E5           LDR      R0,[R0, #+8]
   \   00000034   ........           BL       WM_InvalidateWindow
    211              }
    212            }
    213            GUI_UNLOCK_H(pDataYtObj);
   \                     ??GRAPH_DATA_YT_SetAlign_0:
   \   00000038   ........           BL       GUI_ALLOC_UnlockH
    214            WM_UNLOCK();
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   ........           B        GUI_Unlock       ;; tailcall
    215          }
    216          
    217          /*********************************************************************
    218          *
    219          *       GRAPH_DATA_YT_MirrorX
    220          */

   \                                 In section .text, align 4, keep-with-next
    221          void GRAPH_DATA_YT_MirrorX(GRAPH_DATA_Handle hDataObj, int OnOff) {
   \                     GRAPH_DATA_YT_MirrorX:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    222            GRAPH_DATA_YT_OBJ * pDataYtObj;
    223            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    224            pDataYtObj = (GRAPH_DATA_YT_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    225            if (pDataYtObj) {
   \   0000001C   000050E3           CMP      R0,#+0
    226              if (pDataYtObj->MirrorX != OnOff) {
   \   00000020   2510D015           LDRBNE   R1,[R0, #+37]
   \   00000024   05005111           CMPNE    R1,R5
   \   00000028   0200000A           BEQ      ??GRAPH_DATA_YT_MirrorX_0
    227                pDataYtObj->MirrorX = OnOff;
   \   0000002C   2550C0E5           STRB     R5,[R0, #+37]
    228                WM_Invalidate(pDataYtObj->GraphDataObj.PaintObj.hGraph);
   \   00000030   080090E5           LDR      R0,[R0, #+8]
   \   00000034   ........           BL       WM_InvalidateWindow
    229              }
    230            }
    231            GUI_UNLOCK_H(pDataYtObj);
   \                     ??GRAPH_DATA_YT_MirrorX_0:
   \   00000038   ........           BL       GUI_ALLOC_UnlockH
    232            WM_UNLOCK();
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   ........           B        GUI_Unlock       ;; tailcall
    233          }
    234          
    235          /*********************************************************************
    236          *
    237          *       GRAPH_DATA_YT_Clear
    238          */

   \                                 In section .text, align 4, keep-with-next
    239          void GRAPH_DATA_YT_Clear(GRAPH_DATA_Handle hDataObj) {
   \                     GRAPH_DATA_YT_Clear:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    240            GRAPH_DATA_OBJ * pDataObj;
    241            if (hDataObj) {
   \   00000008   0800000A           BEQ      ??GRAPH_DATA_YT_Clear_0
    242              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
    243              pDataObj = (GRAPH_DATA_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
    244              pDataObj->NumItems = 0;
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0C1080E5           STR      R1,[R0, #+12]
    245              WM_Invalidate(pDataObj->PaintObj.hGraph);
   \   00000020   080090E5           LDR      R0,[R0, #+8]
   \   00000024   ........           BL       WM_InvalidateWindow
    246              GUI_UNLOCK_H(pDataObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    247              WM_UNLOCK();
   \   0000002C   ........           BL       GUI_Unlock
    248            }
    249          }
   \                     ??GRAPH_DATA_YT_Clear_0:
   \   00000030   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     _OnPaint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   ........           DC32     _OnDelete
    250          
    251          #else                            /* Avoid problems with empty object modules */
    252            void GRAPH_DATA_YT_C(void);
    253            void GRAPH_DATA_YT_C(void) {}
    254          #endif  /* #if GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     GRAPH_DATA_YT_AddValue     16
     GRAPH_DATA_YT_Clear         8
     GRAPH_DATA_YT_Create       32
     GRAPH_DATA_YT_Delete       16
     GRAPH_DATA_YT_MirrorX      16
     GRAPH_DATA_YT_SetAlign     16
     GRAPH_DATA_YT_SetOffY      16
     _OnDelete                  16
     _OnPaint                   56


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     _OnPaint                300
     _OnDelete                56
     GRAPH_DATA_YT_Create    148
     GRAPH_DATA_YT_Delete     68
     GRAPH_DATA_YT_AddValue   80
     GRAPH_DATA_YT_SetOffY    76
     GRAPH_DATA_YT_SetAlign   72
     GRAPH_DATA_YT_MirrorX    72
     GRAPH_DATA_YT_Clear      52
     ??DataTable0              4
     ??DataTable0_1            4

 
 932 bytes in section .text
 
 932 bytes of CODE memory

Errors: none
Warnings: none
