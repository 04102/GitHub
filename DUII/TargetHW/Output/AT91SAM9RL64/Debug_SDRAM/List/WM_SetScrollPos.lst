###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:21 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetScrollPos.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetScrollPos.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _SetScrollPos.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    SetScrollPos.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetScrollPos.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetScrollPos.c
     19          Purpose     : Implementation of WM_SetScrollPos
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _SetScrollPos
     36          */
     37          static void _SetScrollPos(WM_HWIN hWin, unsigned ScrollPos, int Id) {
     38            WM_HWIN hVScroll;
     39            hVScroll = WM_GetDialogItem(hWin, Id);
     40            if (hVScroll) {
     41              int OldValue;
     42              WM_SCROLL_STATE ScrollState = {0};
     43              WM_GetScrollState(hVScroll, &ScrollState);
     44              OldValue = ScrollState.v;
     45              ScrollState.v = ScrollPos;
     46              WM_CheckScrollBounds(&ScrollState);
     47              if (ScrollState.v != OldValue) {
     48                WM_SetScrollState(hVScroll, &ScrollState);
     49              }
     50            }
     51          }
     52          
     53          /*********************************************************************
     54          *
     55          *       Public code
     56          *
     57          **********************************************************************
     58          */
     59          /*********************************************************************
     60          *
     61          *       WM_SetScrollPosH
     62          */

   \                                 In section .text, align 4, keep-with-next
     63          void WM_SetScrollPosH(WM_HWIN hWin, unsigned ScrollPos) {
   \                     WM_SetScrollPosH:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0140A0E1           MOV      R4,R1
     64            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     65            _SetScrollPos(hWin, ScrollPos, GUI_ID_HSCROLL);
   \   00000014   FF10A0E3           MOV      R1,#+255
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       WM_GetDialogItem
   \   00000020   0050B0E1           MOVS     R5,R0
   \   00000024   1100000A           BEQ      ??WM_SetScrollPosH_0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   0E00A0E8           STM      R0!,{R1-R3}
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       WM_GetScrollState
   \   00000048   04609DE5           LDR      R6,[SP, #+4]
   \   0000004C   04408DE5           STR      R4,[SP, #+4]
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       WM_CheckScrollBounds
   \   00000058   04009DE5           LDR      R0,[SP, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   0200000A           BEQ      ??WM_SetScrollPosH_0
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   ........           BL       WM_SetScrollState
     66            WM_UNLOCK();
   \                     ??WM_SetScrollPosH_0:
   \   00000070   ........           BL       GUI_Unlock
     67          }
   \   00000074   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
     68          
     69          /*********************************************************************
     70          *
     71          *       WM_SetScrollPosV
     72          */

   \                                 In section .text, align 4, keep-with-next
     73          void WM_SetScrollPosV(WM_HWIN hWin, unsigned ScrollPos) {
   \                     WM_SetScrollPosV:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0140A0E1           MOV      R4,R1
     74            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     75            _SetScrollPos(hWin, ScrollPos, GUI_ID_VSCROLL);
   \   00000014   FE10A0E3           MOV      R1,#+254
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       WM_GetDialogItem
   \   00000020   0050B0E1           MOVS     R5,R0
   \   00000024   1100000A           BEQ      ??WM_SetScrollPosV_0
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   0020A0E3           MOV      R2,#+0
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   0E00A0E8           STM      R0!,{R1-R3}
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       WM_GetScrollState
   \   00000048   04609DE5           LDR      R6,[SP, #+4]
   \   0000004C   04408DE5           STR      R4,[SP, #+4]
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       WM_CheckScrollBounds
   \   00000058   04009DE5           LDR      R0,[SP, #+4]
   \   0000005C   060050E1           CMP      R0,R6
   \   00000060   0200000A           BEQ      ??WM_SetScrollPosV_0
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   0500A0E1           MOV      R0,R5
   \   0000006C   ........           BL       WM_SetScrollState
     76            WM_UNLOCK();
   \                     ??WM_SetScrollPosV_0:
   \   00000070   ........           BL       GUI_Unlock
     77          }
   \   00000074   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
     78          
     79          #else
     80            void WM_SetScrollPos_C(void) {} /* avoid empty object files */
     81          #endif
     82          
     83          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     WM_SetScrollPosH     32
     WM_SetScrollPosV     32


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     WM_SetScrollPosH  124
     WM_SetScrollPosV  124
     ?<Constant {0}>    12

 
  12 bytes in section .rodata
 248 bytes in section .text
 
 248 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
