###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:04 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_TOUCH_StoreState.c              #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_TOUCH_StoreState.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_TOUCH_StoreState.lst                                   #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _TOUCH_StoreState.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_TOUCH_StoreState.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUITOUCH_StoreState.C
     19          Purpose     : Implementation of GUITOUCH_StoreState
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static data
     28          *
     29          **********************************************************************
     30          */

   \                                 In section .bss, align 4
     31          static GUI_PID_STATE _State;  /* Static so we retain coordinates when touch is released */
   \                     _State:
   \   00000000                      DS8 12
     32          
     33          /*********************************************************************
     34          *
     35          *       Public code
     36          *
     37          **********************************************************************
     38          */
     39          /*********************************************************************
     40          *
     41          *       GUI_TOUCH_StoreState
     42          *
     43          * NOTE:
     44          *   This is the older version. Prefer GUI_TOUCH_StoreStateEx in new code
     45          */

   \                                 In section .text, align 4, keep-with-next
     46          void GUI_TOUCH_StoreState(int x, int y) {
     47            if ((x >= 0) && (y >= 0)) {
   \                     GUI_TOUCH_StoreState:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   00005153           CMPPL    R1,#+0
   \   00000008   0400004A           BMI      ??GUI_TOUCH_StoreState_0
     48              _State.Pressed = 1;
     49              _State.x = x;
   \   0000000C   ........           LDR      R2,??DataTable1
   \   00000010   0130A0E3           MOV      R3,#+1
   \   00000014   000082E5           STR      R0,[R2, #+0]
     50              _State.y = y;
   \   00000018   041082E5           STR      R1,[R2, #+4]
   \   0000001C   000000EA           B        ??GUI_TOUCH_StoreState_1
     51            } else {
     52              _State.Pressed = 0;
   \                     ??GUI_TOUCH_StoreState_0:
   \   00000020   0030A0E3           MOV      R3,#+0
   \                     ??GUI_TOUCH_StoreState_1:
   \   00000024   ........           LDR      R2,??DataTable1
   \   00000028   0830C2E5           STRB     R3,[R2, #+8]
     53            }
     54            GUI_TOUCH_StoreStateEx(&_State);
   \   0000002C   0200A0E1           MOV      R0,R2
   \   00000030   ........           B        GUI_TOUCH_StoreStateEx  ;; tailcall
     55          }
     56          
     57          /*********************************************************************
     58          *
     59          *       GUI_TOUCH_SetLayer
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          void GUI_TOUCH_SetLayer(int Layer) {
     62            _State.Layer = Layer;
   \                     GUI_TOUCH_SetLayer:
   \   00000000   ........           LDR      R1,??DataTable1
   \   00000004   0900C1E5           STRB     R0,[R1, #+9]
     63          }
   \   00000008   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _State
     64          
     65          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_TOUCH_SetLayer        0
     GUI_TOUCH_StoreState      8


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     _State                 12
     GUI_TOUCH_StoreState   52
     GUI_TOUCH_SetLayer     12
     ??DataTable1            4

 
 12 bytes in section .bss
 68 bytes in section .text
 
 68 bytes of CODE memory
 12 bytes of DATA memory

Errors: none
Warnings: none
