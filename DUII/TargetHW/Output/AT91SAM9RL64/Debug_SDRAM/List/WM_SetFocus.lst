###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:21 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetFocus.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetFocus.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _SetFocus.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    SetFocus.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetFocus.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetFocus.c
     19          Purpose     : Implementation of WM_SetFocus
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_SetFocus
     36          *
     37          * Purpose:
     38          *   Sets the focus to the specified child. It sends 2 messages:
     39          *    WM_SET_FOCUS(1) to window to receive focus
     40          *    WM_SET_FOCUS(0) to window to lose focus
     41          *
     42          * Return value:
     43          *   0    on success (Focus could be set)
     44          *   !=0  on failure (Windows could not take the focus)
     45          */

   \                                 In section .text, align 4, keep-with-next
     46          int WM_SetFocus(WM_HWIN hWin) {
   \                     WM_SetFocus:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
     47            int r;
     48            WM_MESSAGE Msg = {0};
   \   0000000C   0D00A0E1           MOV      R0,SP
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0030A0E3           MOV      R3,#+0
   \   0000001C   00C0A0E3           MOV      R12,#+0
   \   00000020   0E10A0E8           STM      R0!,{R1-R3,R12}
     49            WM_LOCK();
   \   00000024   ........           BL       GUI_Lock
     50            if ((hWin) && (hWin != WM__ahWinFocus[WM__TOUCHED_LAYER] )) {
   \   00000028   000054E3           CMP      R4,#+0
   \   0000002C   3400000A           BEQ      ??WM_SetFocus_0
   \   00000030   ........           LDR      R6,??DataTable1
   \   00000034   ........           LDR      R5,??DataTable1_1
   \   00000038   000096E5           LDR      R0,[R6, #+0]
   \   0000003C   000195E7           LDR      R0,[R5, +R0, LSL #+2]
   \   00000040   000054E1           CMP      R4,R0
   \   00000044   2E00000A           BEQ      ??WM_SetFocus_0
     51              WM_NOTIFY_CHILD_HAS_FOCUS_INFO Info;
     52              Info.hOld = WM__ahWinFocus[WM__TOUCHED_LAYER] ;
     53              Info.hNew = hWin;
     54              Msg.MsgId  = WM_SET_FOCUS;
   \   00000048   1E20A0E3           MOV      R2,#+30
   \   0000004C   00208DE5           STR      R2,[SP, #+0]
     55              /* Send a "no more focus" message to window losing focus */
     56              Msg.Data.v = 0;
   \   00000050   0020A0E3           MOV      R2,#+0
   \   00000054   10008DE5           STR      R0,[SP, #+16]
   \   00000058   14408DE5           STR      R4,[SP, #+20]
   \   0000005C   0C208DE5           STR      R2,[SP, #+12]
     57              if (WM__ahWinFocus[WM__TOUCHED_LAYER] ) {
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0100000A           BEQ      ??WM_SetFocus_1
     58                WM__SendMessage(WM__ahWinFocus[WM__TOUCHED_LAYER] , &Msg);
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   ........           BL       WM__SendMessage
     59              }
     60              /* Send "You have the focus now" message to the window */
     61              Msg.Data.v = 1;
   \                     ??WM_SetFocus_1:
   \   00000070   0110A0E3           MOV      R1,#+1
     62              WM__SendMessage(WM__ahWinFocus[WM__TOUCHED_LAYER] = hWin, &Msg);
   \   00000074   000096E5           LDR      R0,[R6, #+0]
   \   00000078   0C108DE5           STR      R1,[SP, #+12]
   \   0000007C   004185E7           STR      R4,[R5, +R0, LSL #+2]
   \   00000080   0D10A0E1           MOV      R1,SP
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       WM__SendMessage
     63              if ((r = Msg.Data.v) == 0) { /* On success only */
   \   0000008C   0C509DE5           LDR      R5,[SP, #+12]
   \   00000090   000055E3           CMP      R5,#+0
   \   00000094   1B00001A           BNE      ??WM_SetFocus_2
   \   00000098   050000EA           B        ??WM_SetFocus_3
     64                /* Set message to ancestors of window getting the focus */
     65                while ((hWin = WM_GetParent(hWin)) != 0) {
     66                  Msg.MsgId   = WM_NOTIFY_CHILD_HAS_FOCUS;
   \                     ??WM_SetFocus_4:
   \   0000009C   2010A0E3           MOV      R1,#+32
   \   000000A0   00108DE5           STR      R1,[SP, #+0]
     67                  Msg.Data.p = &Info;
   \   000000A4   10108DE2           ADD      R1,SP,#+16
   \   000000A8   0C108DE5           STR      R1,[SP, #+12]
     68                  WM__SendMessage(hWin, &Msg);
   \   000000AC   0D10A0E1           MOV      R1,SP
   \   000000B0   ........           BL       WM__SendMessage
     69                }
   \                     ??WM_SetFocus_3:
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       WM_GetParent
   \   000000BC   0040B0E1           MOVS     R4,R0
   \   000000C0   F5FFFF1A           BNE      ??WM_SetFocus_4
     70                /* Set message to ancestors of window loosing the focus */
     71                hWin = Info.hOld;
   \   000000C4   10409DE5           LDR      R4,[SP, #+16]
     72                if (WM_IsWindow(hWin)) {    /* Make sure window has not been deleted in the mean time. Can be optimized: _DeleteWindow could clear the handle to avoid this check (RS) */
   \   000000C8   0400A0E1           MOV      R0,R4
   \   000000CC   ........           BL       WM_IsWindow
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0B00000A           BEQ      ??WM_SetFocus_2
     73                  while ((hWin = WM_GetParent(hWin)) != 0) {
   \                     ??WM_SetFocus_5:
   \   000000D8   0400A0E1           MOV      R0,R4
   \   000000DC   ........           BL       WM_GetParent
   \   000000E0   0040B0E1           MOVS     R4,R0
   \   000000E4   0700000A           BEQ      ??WM_SetFocus_2
     74                    Msg.MsgId  = WM_NOTIFY_CHILD_HAS_FOCUS;
   \   000000E8   2010A0E3           MOV      R1,#+32
   \   000000EC   00108DE5           STR      R1,[SP, #+0]
     75                    Msg.Data.p = &Info;
   \   000000F0   10108DE2           ADD      R1,SP,#+16
   \   000000F4   0C108DE5           STR      R1,[SP, #+12]
     76                    WM__SendMessage(hWin, &Msg);
   \   000000F8   0D10A0E1           MOV      R1,SP
   \   000000FC   ........           BL       WM__SendMessage
   \   00000100   F4FFFFEA           B        ??WM_SetFocus_5
     77                  }
     78                }
     79              }
     80            } else {
     81              r = 1;
   \                     ??WM_SetFocus_0:
   \   00000104   0150A0E3           MOV      R5,#+1
     82            }
     83            WM_UNLOCK();
   \                     ??WM_SetFocus_2:
   \   00000108   ........           BL       GUI_Unlock
     84            return r;
   \   0000010C   0500A0E1           MOV      R0,R5
   \   00000110   18D08DE2           ADD      SP,SP,#+24
   \   00000114   7080BDE8           POP      {R4-R6,PC}       ;; return
     85          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     WM__TouchedLayer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     WM__ahWinFocus

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000E   0000               DC8 0, 0
     86          
     87          #else
     88            void WM_SetFocus_C(void) {} /* avoid empty object files */
     89          #endif
     90          
     91          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     WM_SetFocus     40


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WM_SetFocus      280
     ??DataTable1       4
     ??DataTable1_1     4
     ?<Constant {0}>   16

 
  16 bytes in section .rodata
 288 bytes in section .text
 
 288 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: none
