###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:21 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetScrollbar.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetScrollbar.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _SetScrollbar.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    SetScrollbar.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetScrollbar.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetScrollbar.c
     19          Purpose     : Implementation of WM_SetScrollbarV, WM_SetScrollbarH
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          #include "SCROLLBAR.h"
     25          
     26          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     27          
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _SetScrollbar
     38          *
     39          * Return value: 1 if scrollbar was visible, 0 if not
     40          */
     41          static int _SetScrollbar(WM_HWIN hWin, int OnOff, int Id, int Flags) {
     42            WM_HWIN hBar;
     43            hBar = WM_GetDialogItem(hWin, Id);
     44            if (OnOff) {
     45              if (!hBar) {
     46                SCROLLBAR_CreateAttached(hWin, Flags);
     47              }
     48            } else {
     49              WM_HideWindow(hBar);
     50              if (hBar) {
     51                WM_DeleteWindow(hBar);
     52              }
     53            }
     54            return (hBar ? 1 : 0);
     55          }
     56          
     57          
     58          /*********************************************************************
     59          *
     60          *       Public code
     61          *
     62          **********************************************************************
     63          */
     64          /*********************************************************************
     65          *
     66          *       WM__SetScrollbarV
     67          *
     68          */

   \                                 In section .text, align 4, keep-with-next
     69          int WM__SetScrollbarV(WM_HWIN hWin, int OnOff) {
   \                     WM__SetScrollbarV:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   0040A0E1           MOV      R4,R0
     70            return _SetScrollbar(hWin, OnOff, GUI_ID_VSCROLL, SCROLLBAR_CF_VERTICAL);
   \   0000000C   FE10A0E3           MOV      R1,#+254
   \   00000010   ........           BL       WM_GetDialogItem
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   0600000A           BEQ      ??WM__SetScrollbarV_0
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   0900001A           BNE      ??WM__SetScrollbarV_1
   \   00000028   0810A0E3           MOV      R1,#+8
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       SCROLLBAR_CreateAttached
   \                     ??WM__SetScrollbarV_2:
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM__SetScrollbarV_0:
   \   0000003C   ........           BL       WM_HideWindow
   \   00000040   000056E3           CMP      R6,#+0
   \   00000044   FAFFFF0A           BEQ      ??WM__SetScrollbarV_2
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       WM_DeleteWindow
   \                     ??WM__SetScrollbarV_1:
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   7080BDE8           POP      {R4-R6,PC}
     71          }
     72          
     73          /*********************************************************************
     74          *
     75          *       WM__SetScrollbarH
     76          *
     77          */

   \                                 In section .text, align 4, keep-with-next
     78          int WM__SetScrollbarH(WM_HWIN hWin, int OnOff) {
   \                     WM__SetScrollbarH:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   0040A0E1           MOV      R4,R0
     79            return _SetScrollbar(hWin, OnOff, GUI_ID_HSCROLL, 0);
   \   0000000C   FF10A0E3           MOV      R1,#+255
   \   00000010   ........           BL       WM_GetDialogItem
   \   00000014   0060A0E1           MOV      R6,R0
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   0600000A           BEQ      ??WM__SetScrollbarH_0
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   0900001A           BNE      ??WM__SetScrollbarH_1
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       SCROLLBAR_CreateAttached
   \                     ??WM__SetScrollbarH_2:
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM__SetScrollbarH_0:
   \   0000003C   ........           BL       WM_HideWindow
   \   00000040   000056E3           CMP      R6,#+0
   \   00000044   FAFFFF0A           BEQ      ??WM__SetScrollbarH_2
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       WM_DeleteWindow
   \                     ??WM__SetScrollbarH_1:
   \   00000050   0100A0E3           MOV      R0,#+1
   \   00000054   7080BDE8           POP      {R4-R6,PC}
     80          }
     81          
     82          /*********************************************************************
     83          *
     84          *       WM_SetScrollbarH
     85          *
     86          */

   \                                 In section .text, align 4, keep-with-next
     87          int WM_SetScrollbarH(WM_HWIN hWin, int OnOff) {
   \                     WM_SetScrollbarH:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     88            int r;
     89            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     90            r = WM__SetScrollbarH(hWin, OnOff);
   \   00000010   FF10A0E3           MOV      R1,#+255
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       WM_GetDialogItem
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0800000A           BEQ      ??WM_SetScrollbarH_0
   \   00000028   000056E3           CMP      R6,#+0
   \   0000002C   0B00001A           BNE      ??WM_SetScrollbarH_1
   \   00000030   0010A0E3           MOV      R1,#+0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       SCROLLBAR_CreateAttached
   \                     ??WM_SetScrollbarH_2:
   \   0000003C   0040A0E3           MOV      R4,#+0
     91            WM_UNLOCK();
   \                     ??WM_SetScrollbarH_3:
   \   00000040   ........           BL       GUI_Unlock
     92            return r;
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM_SetScrollbarH_0:
   \   0000004C   ........           BL       WM_HideWindow
   \   00000050   000056E3           CMP      R6,#+0
   \   00000054   F8FFFF0A           BEQ      ??WM_SetScrollbarH_2
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   ........           BL       WM_DeleteWindow
   \                     ??WM_SetScrollbarH_1:
   \   00000060   0140A0E3           MOV      R4,#+1
   \   00000064   F5FFFFEA           B        ??WM_SetScrollbarH_3
     93          }
     94          
     95          /*********************************************************************
     96          *
     97          *       WM_SetScrollbarV
     98          *
     99          */

   \                                 In section .text, align 4, keep-with-next
    100          int WM_SetScrollbarV(WM_HWIN hWin, int OnOff) {
   \                     WM_SetScrollbarV:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    101            int r;
    102            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
    103            r = WM__SetScrollbarV(hWin, OnOff);
   \   00000010   FE10A0E3           MOV      R1,#+254
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       WM_GetDialogItem
   \   0000001C   0060A0E1           MOV      R6,R0
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0800000A           BEQ      ??WM_SetScrollbarV_0
   \   00000028   000056E3           CMP      R6,#+0
   \   0000002C   0B00001A           BNE      ??WM_SetScrollbarV_1
   \   00000030   0810A0E3           MOV      R1,#+8
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       SCROLLBAR_CreateAttached
   \                     ??WM_SetScrollbarV_2:
   \   0000003C   0040A0E3           MOV      R4,#+0
    104            WM_UNLOCK();
   \                     ??WM_SetScrollbarV_3:
   \   00000040   ........           BL       GUI_Unlock
    105            return r;
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM_SetScrollbarV_0:
   \   0000004C   ........           BL       WM_HideWindow
   \   00000050   000056E3           CMP      R6,#+0
   \   00000054   F8FFFF0A           BEQ      ??WM_SetScrollbarV_2
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   ........           BL       WM_DeleteWindow
   \                     ??WM_SetScrollbarV_1:
   \   00000060   0140A0E3           MOV      R4,#+1
   \   00000064   F5FFFFEA           B        ??WM_SetScrollbarV_3
    106          }
    107          
    108          #else
    109            void WM_SetScrollbar_c(void) {} /* avoid empty object files */
    110          #endif
    111          
    112          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     WM_SetScrollbarH      16
     WM_SetScrollbarV      16
     WM__SetScrollbarH     16
     WM__SetScrollbarV     16


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     WM__SetScrollbarV   88
     WM__SetScrollbarH   88
     WM_SetScrollbarH   104
     WM_SetScrollbarV   104

 
 384 bytes in section .text
 
 384 bytes of CODE memory

Errors: none
Warnings: none
