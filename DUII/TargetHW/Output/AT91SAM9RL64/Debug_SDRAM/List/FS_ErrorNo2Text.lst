###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:14 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_ErrorNo2Text.c                    #
#    Command line =  C:\DUII\TargetHW\FS\FS_ErrorNo2Text.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FS #
#                    _ErrorNo2Text.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FS_ #
#                    ErrorNo2Text.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_ErrorNo2Text.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_ErrorNo2Text.c
     19          Purpose     : Implementation of said function
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          
     30          #include "FS.h"
     31          #include "FS_Int.h"
     32          
     33          /*********************************************************************
     34          *
     35          *       Public code
     36          *
     37          **********************************************************************
     38          */
     39          
     40          /*********************************************************************
     41          *
     42          *       FS_ErrorNo2Text
     43          *
     44          *  Description:
     45          *    API function. Retrieves text for a given error code.
     46          *
     47          *  Parameters:
     48          *    ErrCode    Error code to retrieve text for
     49          *  
     50          *  Return value:
     51          *    Clear text for error code
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          const char * FS_ErrorNo2Text(int ErrCode) {
     54            const char * pText;
     55          
     56            switch (ErrCode) {
   \                     FS_ErrorNo2Text:
   \   00000000   080080E2           ADD      R0,R0,#+8
   \   00000004   080050E3           CMP      R0,#+8
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??FS_ErrorNo2Text_0:
   \   0000000C   1A00008A           BHI      ??FS_ErrorNo2Text_1
   \   00000010   170000EA           B        ??FS_ErrorNo2Text_2
   \   00000014   140000EA           B        ??FS_ErrorNo2Text_3
   \   00000018   110000EA           B        ??FS_ErrorNo2Text_4
   \   0000001C   0E0000EA           B        ??FS_ErrorNo2Text_5
   \   00000020   0B0000EA           B        ??FS_ErrorNo2Text_6
   \   00000024   080000EA           B        ??FS_ErrorNo2Text_7
   \   00000028   050000EA           B        ??FS_ErrorNo2Text_8
   \   0000002C   020000EA           B        ??FS_ErrorNo2Text_9
   \   00000030   FFFFFFEA           B        ??FS_ErrorNo2Text_10
     57            case FS_ERR_OK:
     58              pText = "No error";
   \                     ??FS_ErrorNo2Text_10:
   \   00000034   ........           ADR      R0,`?<Constant "No error">`
     59              break;
   \   00000038   1EFF2FE1           BX       LR
     60            case FS_ERR_EOF:
     61              pText = "End of file reached";
   \                     ??FS_ErrorNo2Text_9:
   \   0000003C   ........           ADR      R0,`?<Constant "End of file reached">`
     62              break;
   \   00000040   1EFF2FE1           BX       LR
     63            case FS_ERR_DISKFULL:
     64              pText = "Disk full";
   \                     ??FS_ErrorNo2Text_8:
   \   00000044   ........           ADR      R0,`?<Constant "Disk full">`
     65              break;
   \   00000048   1EFF2FE1           BX       LR
     66            case FS_ERR_INVALIDPAR:
     67              pText = "Invalid parameter";
   \                     ??FS_ErrorNo2Text_7:
   \   0000004C   ........           ADR      R0,`?<Constant "Invalid parameter">`
     68              break;
   \   00000050   1EFF2FE1           BX       LR
     69            case FS_ERR_CMDNOTSUPPORTED:
     70              pText = "Command not supported";
   \                     ??FS_ErrorNo2Text_6:
   \   00000054   ........           ADR      R0,`?<Constant "Command not supported">`
     71              break;
   \   00000058   1EFF2FE1           BX       LR
     72            case FS_ERR_WRITEONLY:
     73              pText = "File is write only";
   \                     ??FS_ErrorNo2Text_5:
   \   0000005C   ........           ADR      R0,`?<Constant "File is write only">`
     74              break;
   \   00000060   1EFF2FE1           BX       LR
     75            case FS_ERR_READONLY:
     76              pText = "File is read only";
   \                     ??FS_ErrorNo2Text_4:
   \   00000064   ........           ADR      R0,`?<Constant "File is read only">`
     77              break;
   \   00000068   1EFF2FE1           BX       LR
     78            case FS_ERR_READERROR:
     79              pText = "Read error";
   \                     ??FS_ErrorNo2Text_3:
   \   0000006C   ........           ADR      R0,`?<Constant "Read error">`
     80              break;
   \   00000070   1EFF2FE1           BX       LR
     81            case FS_ERR_WRITEERROR:
     82              pText = "Write error";
   \                     ??FS_ErrorNo2Text_2:
   \   00000074   ........           ADR      R0,`?<Constant "Write error">`
     83              break;
   \   00000078   1EFF2FE1           BX       LR
     84            default:
     85              pText = "Unknown error";
   \                     ??FS_ErrorNo2Text_1:
   \   0000007C   ........           ADR      R0,`?<Constant "Unknown error">`
     86              break;
     87            }
     88          
     89            return pText;
   \   00000080   1EFF2FE1           BX       LR               ;; return
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       FS_CheckDisk_ErrCode2Text
     95          *
     96          *  Function description:
     97          *    Retrieves text for a given checkdisk error code.
     98          *
     99          *  Parameters:
    100          *    ErrCode    Error code to retrieve text for.
    101          *  
    102          *  Return value:
    103          *    Clear text for error code
    104          */

   \                                 In section .text, align 4, keep-with-next
    105          const char * FS_CheckDisk_ErrCode2Text(int ErrCode) {
    106            const char * sFormat = NULL;
    107            switch (ErrCode) {
   \                     FS_CheckDisk_ErrCode2Text:
   \   00000000   100040E2           SUB      R0,R0,#+16
   \   00000004   070050E3           CMP      R0,#+7
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??FS_CheckDisk_ErrCode2Text_0:
   \   0000000C   1700008A           BHI      ??FS_CheckDisk_ErrCode2Text_1
   \   00000010   060000EA           B        ??FS_CheckDisk_ErrCode2Text_2
   \   00000014   070000EA           B        ??FS_CheckDisk_ErrCode2Text_3
   \   00000018   080000EA           B        ??FS_CheckDisk_ErrCode2Text_4
   \   0000001C   090000EA           B        ??FS_CheckDisk_ErrCode2Text_5
   \   00000020   0A0000EA           B        ??FS_CheckDisk_ErrCode2Text_6
   \   00000024   0B0000EA           B        ??FS_CheckDisk_ErrCode2Text_7
   \   00000028   0C0000EA           B        ??FS_CheckDisk_ErrCode2Text_8
   \   0000002C   0D0000EA           B        ??FS_CheckDisk_ErrCode2Text_9
    108            case FS_ERRCODE_0FILE:                   sFormat = "Cluster chain starting on cluster %d assigned to file of size zero"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_2:
   \   00000030   ........           ADR      R0,`?<Constant "Cluster chain startin...">`
   \   00000034   1EFF2FE1           BX       LR
    109            case FS_ERRCODE_SHORTEN_CLUSTER:         sFormat = "Need to shorten cluster chain on cluster %d"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_3:
   \   00000038   ........           ADR      R0,`?<Constant "Need to shorten clust...">`
   \   0000003C   1EFF2FE1           BX       LR
    110            case FS_ERRCODE_CROSSLINKED_CLUSTER:     sFormat = "Cluster %d is cross-linked (used for multiple files / directories) FileId: %d:%d"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_4:
   \   00000040   ........           ADR      R0,`?<Constant "Cluster %d is cross-l...">`
   \   00000044   1EFF2FE1           BX       LR
    111            case FS_ERRCODE_FEW_CLUSTER:             sFormat = "To few clusters allocated to file."; break;
   \                     ??FS_CheckDisk_ErrCode2Text_5:
   \   00000048   ........           ADR      R0,`?<Constant "To few clusters alloc...">`
   \   0000004C   1EFF2FE1           BX       LR
    112            case FS_ERRCODE_CLUSTER_UNUSED:          sFormat = "Cluster %d is marked as used, but not assigned to a file or directory."; break;
   \                     ??FS_CheckDisk_ErrCode2Text_6:
   \   00000050   ........           ADR      R0,`?<Constant "Cluster %d is marked ...">`
   \   00000054   1EFF2FE1           BX       LR
    113            case FS_ERRCODE_CLUSTER_NOT_EOC:         sFormat = "Cluster %d is not marked as end-of-chain."; break;
   \                     ??FS_CheckDisk_ErrCode2Text_7:
   \   00000058   ........           ADR      R0,`?<Constant "Cluster %d is not mar...">`
   \   0000005C   1EFF2FE1           BX       LR
    114            case FS_ERRCODE_INVALID_CLUSTER:         sFormat = "Cluster %d is not a valid cluster"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_8:
   \   00000060   ........           ADR      R0,`?<Constant "Cluster %d is not a v...">`
   \   00000064   1EFF2FE1           BX       LR
    115            case FS_ERRCODE_INVALID_DIRECTORY_ENTRY: sFormat = "Invalid director entry found"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_9:
   \   00000068   ........           ADR      R0,`?<Constant "Invalid director entr...">`
   \   0000006C   1EFF2FE1           BX       LR
    116            default:                                 sFormat = "Unknown error"; break;
   \                     ??FS_CheckDisk_ErrCode2Text_1:
   \   00000070   ........           ADR      R0,`?<Constant "Unknown error">`
    117            }
    118            return sFormat;
   \   00000074   1EFF2FE1           BX       LR               ;; return
    119          }

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "No error">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4E6F20657272       DC8 78, 111, 32, 101, 114, 114, 111, 114, 0, 0
   \              6F720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "End of file reached">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E64206F66       DC8 69, 110, 100, 32, 111, 102, 32, 102, 105, 108
   \              2066696C    
   \   0000000A   652072656163       DC8 101, 32, 114, 101, 97, 99, 104, 101, 100, 0
   \              68656400    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Disk full">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4469736B2066       DC8 68, 105, 115, 107, 32, 102, 117, 108, 108, 0
   \              756C6C00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Invalid parameter">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   496E76616C69       DC8 73, 110, 118, 97, 108, 105, 100, 32, 112, 97
   \              64207061    
   \   0000000A   72616D657465       DC8 114, 97, 109, 101, 116, 101, 114, 0, 0, 0
   \              72000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Command not supported">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   436F6D6D616E       DC8 67, 111, 109, 109, 97, 110, 100, 32, 110, 111
   \              64206E6F    
   \   0000000A   742073757070       DC8 116, 32, 115, 117, 112, 112, 111, 114, 116, 101
   \              6F727465    
   \   00000014   64000000           DC8 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "File is write only">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   46696C652069       DC8 70, 105, 108, 101, 32, 105, 115, 32, 119, 114
   \              73207772    
   \   0000000A   697465206F6E       DC8 105, 116, 101, 32, 111, 110, 108, 121, 0, 0
   \              6C790000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "File is read only">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   46696C652069       DC8 70, 105, 108, 101, 32, 105, 115, 32, 114, 101
   \              73207265    
   \   0000000A   6164206F6E6C       DC8 97, 100, 32, 111, 110, 108, 121, 0, 0, 0
   \              79000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Read error">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   526561642065       DC8 82, 101, 97, 100, 32, 101, 114, 114, 111, 114
   \              72726F72    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Write error">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   577269746520       DC8 87, 114, 105, 116, 101, 32, 101, 114, 114, 111
   \              6572726F    
   \   0000000A   7200               DC8 114, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Unknown error">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   556E6B6E6F77       DC8 85, 110, 107, 110, 111, 119, 110, 32, 101, 114
   \              6E206572    
   \   0000000A   726F72000000       DC8 114, 111, 114, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cluster chain startin...">`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   436C75737465       DC8 67, 108, 117, 115, 116, 101, 114, 32, 99, 104
   \              72206368    
   \   0000000A   61696E207374       DC8 97, 105, 110, 32, 115, 116, 97, 114, 116, 105
   \              61727469    
   \   00000014   6E67206F6E20       DC8 110, 103, 32, 111, 110, 32, 99, 108, 117, 115
   \              636C7573    
   \   0000001E   746572202564       DC8 116, 101, 114, 32, 37, 100, 32, 97, 115, 115
   \              20617373    
   \   00000028   69676E656420       DC8 105, 103, 110, 101, 100, 32, 116, 111, 32, 102
   \              746F2066    
   \   00000032   696C65206F66       DC8 105, 108, 101, 32, 111, 102, 32, 115, 105, 122
   \              2073697A    
   \   0000003C   65207A65726F       DC8 101, 32, 122, 101, 114, 111, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Need to shorten clust...">`:
   \   00000000                      ; Initializer data, 44 bytes
   \   00000000   4E6565642074       DC8 78, 101, 101, 100, 32, 116, 111, 32, 115, 104
   \              6F207368    
   \   0000000A   6F7274656E20       DC8 111, 114, 116, 101, 110, 32, 99, 108, 117, 115
   \              636C7573    
   \   00000014   746572206368       DC8 116, 101, 114, 32, 99, 104, 97, 105, 110, 32
   \              61696E20    
   \   0000001E   6F6E20636C75       DC8 111, 110, 32, 99, 108, 117, 115, 116, 101, 114
   \              73746572    
   \   00000028   20256400           DC8 32, 37, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cluster %d is cross-l...">`:
   \   00000000                      ; Initializer data, 84 bytes
   \   00000000   436C75737465       DC8 67, 108, 117, 115, 116, 101, 114, 32, 37, 100
   \              72202564    
   \   0000000A   206973206372       DC8 32, 105, 115, 32, 99, 114, 111, 115, 115, 45
   \              6F73732D    
   \   00000014   6C696E6B6564       DC8 108, 105, 110, 107, 101, 100, 32, 40, 117, 115
   \              20287573    
   \   0000001E   656420666F72       DC8 101, 100, 32, 102, 111, 114, 32, 109, 117, 108
   \              206D756C    
   \   00000028   7469706C6520       DC8 116, 105, 112, 108, 101, 32, 102, 105, 108, 101
   \              66696C65    
   \   00000032   73202F206469       DC8 115, 32, 47, 32, 100, 105, 114, 101, 99, 116
   \              72656374    
   \   0000003C   6F7269657329       DC8 111, 114, 105, 101, 115, 41, 32, 70, 105, 108
   \              2046696C    
   \   00000046   6549643A2025       DC8 101, 73, 100, 58, 32, 37, 100, 58, 37, 100
   \              643A2564    
   \   00000050   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "To few clusters alloc...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   546F20666577       DC8 84, 111, 32, 102, 101, 119, 32, 99, 108, 117
   \              20636C75    
   \   0000000A   737465727320       DC8 115, 116, 101, 114, 115, 32, 97, 108, 108, 111
   \              616C6C6F    
   \   00000014   636174656420       DC8 99, 97, 116, 101, 100, 32, 116, 111, 32, 102
   \              746F2066    
   \   0000001E   696C652E0000       DC8 105, 108, 101, 46, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cluster %d is marked ...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   436C75737465       DC8 67, 108, 117, 115, 116, 101, 114, 32, 37, 100
   \              72202564    
   \   0000000A   206973206D61       DC8 32, 105, 115, 32, 109, 97, 114, 107, 101, 100
   \              726B6564    
   \   00000014   206173207573       DC8 32, 97, 115, 32, 117, 115, 101, 100, 44, 32
   \              65642C20    
   \   0000001E   627574206E6F       DC8 98, 117, 116, 32, 110, 111, 116, 32, 97, 115
   \              74206173    
   \   00000028   7369676E6564       DC8 115, 105, 103, 110, 101, 100, 32, 116, 111, 32
   \              20746F20    
   \   00000032   612066696C65       DC8 97, 32, 102, 105, 108, 101, 32, 111, 114, 32
   \              206F7220    
   \   0000003C   646972656374       DC8 100, 105, 114, 101, 99, 116, 111, 114, 121, 46
   \              6F72792E    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cluster %d is not mar...">`:
   \   00000000                      ; Initializer data, 44 bytes
   \   00000000   436C75737465       DC8 67, 108, 117, 115, 116, 101, 114, 32, 37, 100
   \              72202564    
   \   0000000A   206973206E6F       DC8 32, 105, 115, 32, 110, 111, 116, 32, 109, 97
   \              74206D61    
   \   00000014   726B65642061       DC8 114, 107, 101, 100, 32, 97, 115, 32, 101, 110
   \              7320656E    
   \   0000001E   642D6F662D63       DC8 100, 45, 111, 102, 45, 99, 104, 97, 105, 110
   \              6861696E    
   \   00000028   2E000000           DC8 46, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cluster %d is not a v...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   436C75737465       DC8 67, 108, 117, 115, 116, 101, 114, 32, 37, 100
   \              72202564    
   \   0000000A   206973206E6F       DC8 32, 105, 115, 32, 110, 111, 116, 32, 97, 32
   \              74206120    
   \   00000014   76616C696420       DC8 118, 97, 108, 105, 100, 32, 99, 108, 117, 115
   \              636C7573    
   \   0000001E   746572000000       DC8 116, 101, 114, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Invalid director entr...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   496E76616C69       DC8 73, 110, 118, 97, 108, 105, 100, 32, 100, 105
   \              64206469    
   \   0000000A   726563746F72       DC8 114, 101, 99, 116, 111, 114, 32, 101, 110, 116
   \              20656E74    
   \   00000014   727920666F75       DC8 114, 121, 32, 102, 111, 117, 110, 100, 0, 0
   \              6E640000    
   \   0000001E   0000               DC8 0, 0
    120          
    121          
    122          
    123          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     FS_CheckDisk_ErrCode2Text      0
     FS_ErrorNo2Text                0


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     FS_ErrorNo2Text                         132
     FS_CheckDisk_ErrCode2Text               120
     ?<Constant "No error">                   12
     ?<Constant "End of file reached">        20
     ?<Constant "Disk full">                  12
     ?<Constant "Invalid parameter">          20
     ?<Constant "Command not supported">      24
     ?<Constant "File is write only">         20
     ?<Constant "File is read only">          20
     ?<Constant "Read error">                 12
     ?<Constant "Write error">                12
     ?<Constant "Unknown error">              16
     ?<Constant "Cluster chain startin...">   68
     ?<Constant "Need to shorten clust...">   44
     ?<Constant "Cluster %d is cross-l...">   84
     ?<Constant "To few clusters alloc...">   36
     ?<Constant "Cluster %d is marked ...">   72
     ?<Constant "Cluster %d is not mar...">   44
     ?<Constant "Cluster %d is not a v...">   36
     ?<Constant "Invalid director entr...">   32

 
 836 bytes in section .text
 
 836 bytes of CODE memory

Errors: none
Warnings: none
