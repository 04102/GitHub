###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapExp.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapExp.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DrawBitmapExp.lst                                      #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DrawBitmapExp.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawBitmapExp.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawBitmapExp.C
     19          Purpose     : Implementation of GUI_DrawBitmapExp
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_DrawBitmapExp
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_DrawBitmapExp(int x0, int y0, int XSize, int YSize, int XMul, int YMul,
     36                                 int BitsPerPixel, int BytesPerLine, const U8 GUI_UNI_PTR * pData,
     37                                 const GUI_LOGPALETTE GUI_UNI_PTR * pPal)
     38          {
   \                     GUI_DrawBitmapExp:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   00B0A0E1           MOV      R11,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   0360A0E1           MOV      R6,R3
   \   00000018   48709DE5           LDR      R7,[SP, #+72]
   \   0000001C   4C809DE5           LDR      R8,[SP, #+76]
   \   00000020   5CA09DE5           LDR      R10,[SP, #+92]
     39            GUI_DRAWMODE PrevDraw;
     40            const LCD_PIXELINDEX* pTrans;
     41            GUI_LOCK();
   \   00000024   ........           BL       GUI_Lock
     42            pTrans = LCD_GetpPalConvTable(pPal);
   \   00000028   0A00A0E1           MOV      R0,R10
   \   0000002C   ........           BL       LCD_GetpPalConvTable
   \   00000030   0090A0E1           MOV      R9,R0
     43            PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
   \   00000034   00005AE3           CMP      R10,#+0
   \   00000038   0400000A           BEQ      ??GUI_DrawBitmapExp_0
   \   0000003C   0400DAE5           LDRB     R0,[R10, #+4]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0200000A           BEQ      ??GUI_DrawBitmapExp_1
   \   00000048   0200A0E3           MOV      R0,#+2
   \   0000004C   000000EA           B        ??GUI_DrawBitmapExp_1
   \                     ??GUI_DrawBitmapExp_0:
   \   00000050   0000A0E3           MOV      R0,#+0
   \                     ??GUI_DrawBitmapExp_1:
   \   00000054   ........           BL       GUI_SetDrawMode
   \   00000058   00A0A0E1           MOV      R10,R0
     44            #if (GUI_WINSUPPORT)
     45              WM_ADDORG(x0,y0);
   \   0000005C   9C009FE5           LDR      R0,??GUI_DrawBitmapExp_2
   \   00000060   401090E5           LDR      R1,[R0, #+64]
   \   00000064   440090E5           LDR      R0,[R0, #+68]
   \   00000068   0BB081E0           ADD      R11,R1,R11
   \   0000006C   044080E0           ADD      R4,R0,R4
     46              {
     47                GUI_RECT r;
     48                r.x0 = x0;
     49                r.x1 = x0 + XSize * XMul -1;
   \   00000070   0B00A0E1           MOV      R0,R11
   \   00000074   850700E1           SMLABB   R0,R5,R7,R0
   \   00000078   B8B1CDE1           STRH     R11,[SP, #+24]
   \   0000007C   010040E2           SUB      R0,R0,#+1
   \   00000080   BC01CDE1           STRH     R0,[SP, #+28]
     50                r.y0 = y0;
     51                r.y1 = y0 + YSize * YMul -1;
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   860800E1           SMLABB   R0,R6,R8,R0
   \   0000008C   BA41CDE1           STRH     R4,[SP, #+26]
   \   00000090   010040E2           SUB      R0,R0,#+1
   \   00000094   BE01CDE1           STRH     R0,[SP, #+30]
     52                WM_ITERATE_START(&r); {
   \   00000098   18008DE2           ADD      R0,SP,#+24
   \   0000009C   ........           BL       WM__InitIVRSearch
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   1000000A           BEQ      ??GUI_DrawBitmapExp_3
     53            #endif
     54            LCD_DrawBitmap( x0, y0 ,XSize ,YSize, XMul, YMul
     55                           ,BitsPerPixel, BytesPerLine, pData, pTrans);
   \                     ??GUI_DrawBitmapExp_4:
   \   000000A8   58009DE5           LDR      R0,[SP, #+88]
   \   000000AC   14908DE5           STR      R9,[SP, #+20]
   \   000000B0   10008DE5           STR      R0,[SP, #+16]
   \   000000B4   54009DE5           LDR      R0,[SP, #+84]
   \   000000B8   04808DE5           STR      R8,[SP, #+4]
   \   000000BC   0C008DE5           STR      R0,[SP, #+12]
   \   000000C0   50009DE5           LDR      R0,[SP, #+80]
   \   000000C4   00708DE5           STR      R7,[SP, #+0]
   \   000000C8   08008DE5           STR      R0,[SP, #+8]
   \   000000CC   0630A0E1           MOV      R3,R6
   \   000000D0   0520A0E1           MOV      R2,R5
   \   000000D4   0410A0E1           MOV      R1,R4
   \   000000D8   0B00A0E1           MOV      R0,R11
   \   000000DC   ........           BL       LCD_DrawBitmap
     56            #if (GUI_WINSUPPORT)
     57                } WM_ITERATE_END();
   \   000000E0   ........           BL       WM__GetNextIVR
   \   000000E4   000050E3           CMP      R0,#+0
   \   000000E8   EEFFFF1A           BNE      ??GUI_DrawBitmapExp_4
     58              }
     59            #endif
     60            GUI_SetDrawMode(PrevDraw);
   \                     ??GUI_DrawBitmapExp_3:
   \   000000EC   0A00A0E1           MOV      R0,R10
   \   000000F0   ........           BL       GUI_SetDrawMode
     61            GUI_UNLOCK();
   \   000000F4   ........           BL       GUI_Unlock
     62          }
   \   000000F8   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   000000FC   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GUI_DrawBitmapExp_2:
   \   00000100   ........           DC32     GUI_Context
     63          
     64          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_DrawBitmapExp     72


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_DrawBitmapExp  260

 
 260 bytes in section .text
 
 260 bytes of CODE memory

Errors: none
Warnings: none
