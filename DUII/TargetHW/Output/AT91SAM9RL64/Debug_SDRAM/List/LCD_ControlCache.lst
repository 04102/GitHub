###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:19 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LCD_ControlCache.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\LCD_ControlCache.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LC #
#                    D_ControlCache.lst                                       #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LCD #
#                    _ControlCache.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LCD_ControlCache.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LCD_ControlCache.c
     19          Purpose     : Controlling the cache of the display driver
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          #include "LCD_SIM.h"
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       LCD_ControlCacheEx
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          int LCD_ControlCacheEx(int LayerIndex, int Cmd) {
   \                     LCD_ControlCacheEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
     39            GUI_DEVICE * pDevice;
     40            void (* pFunc)(GUI_DEVICE * pDevice, int Cmd);
     41            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
     42          
     43            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
     44            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_ControlCacheEx_0
     45              pFunc = (void (*)(GUI_DEVICE * pDevice, int Cmd))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_CONTROLCACHE);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   0D10A0E3           MOV      R1,#+13
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
     46              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_ControlCacheEx_0
     47                pFunc(pDevice, Cmd);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
     48                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
     49              }
     50            }
     51            return r;
   \                     ??LCD_ControlCacheEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     52          }
     53          
     54          /*********************************************************************
     55          *
     56          *       LCD_ControlCache
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          int LCD_ControlCache(int Cmd) {
   \                     LCD_ControlCache:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     59            return LCD_ControlCacheEx(GUI_Context.SelLayer, Cmd);
   \   00000008   ........           LDR      R0,??DataTable0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_ControlCache_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   0D10A0E3           MOV      R1,#+13
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_ControlCache_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_ControlCache_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
     60          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GUI_Context
     61          
     62          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     LCD_ControlCache       16
     LCD_ControlCacheEx     16


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     LCD_ControlCacheEx   92
     LCD_ControlCache    100
     ??DataTable0          4

 
 196 bytes in section .text
 
 196 bytes of CODE memory

Errors: none
Warnings: none
