###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_GetInsideRectExScrollbar.c       #
#    Command line =  C:\DUII\TargetHW\GUI\WM_GetInsideRectExScrollbar.c -D    #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _GetInsideRectExScrollbar.lst                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    GetInsideRectExScrollbar.o                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_GetInsideRectExScrollbar.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_GetInsideRect.c
     19          Purpose     : Windows manager, submodule
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_GetInsideRectExScrollbar
     36          *
     37            Purpose:
     38              Return the inside rectangle in client coordinates.
     39              The inside rectangle is the client rectangle minus the effect,
     40              which typically reduces the rectangle by 0 - 3 pixels on either side
     41              (2 for the standard 3D effect).
     42          */      

   \                                 In section .text, align 4, keep-with-next
     43          void WM_GetInsideRectExScrollbar(WM_HWIN hWin, GUI_RECT* pRect) {
   \                     WM_GetInsideRectExScrollbar:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0140A0E1           MOV      R4,R1
     44            GUI_RECT rWin, rInside, rScrollbar;
     45            WM_HWIN hBarV, hBarH;
     46            U16 WinFlags;
     47            if (hWin) {
   \   0000000C   000056E3           CMP      R6,#+0
   \   00000010   1CD04DE2           SUB      SP,SP,#+28
     48              if (pRect) {
   \   00000014   00005413           CMPNE    R4,#+0
   \   00000018   3600000A           BEQ      ??WM_GetInsideRectExScrollbar_0
     49                hBarH = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
   \   0000001C   FF10A0E3           MOV      R1,#+255
   \   00000020   ........           BL       WM_GetDialogItem
   \   00000024   0050A0E1           MOV      R5,R0
     50                hBarV = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
   \   00000028   FE10A0E3           MOV      R1,#+254
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       WM_GetDialogItem
   \   00000034   0070A0E1           MOV      R7,R0
     51                WM_GetWindowRectEx(hWin, &rWin);     /* The entire window in screen coordinates */
   \   00000038   08108DE2           ADD      R1,SP,#+8
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   ........           BL       WM_GetWindowRectEx
     52                WM_GetInsideRectEx(hWin, &rInside);
   \   00000044   10108DE2           ADD      R1,SP,#+16
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       WM_GetInsideRectEx
     53                if (hBarV) {
   \   00000050   000057E3           CMP      R7,#+0
   \   00000054   0F00000A           BEQ      ??WM_GetInsideRectExScrollbar_1
     54                   WM_GetWindowRectEx(hBarV, &rScrollbar);
   \   00000058   0D10A0E1           MOV      R1,SP
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   ........           BL       WM_GetWindowRectEx
     55                   GUI_MoveRect(&rScrollbar, -rWin.x0, -rWin.y0);
   \   00000064   FA00DDE1           LDRSH    R0,[SP, #+10]
   \   00000068   002060E2           RSB      R2,R0,#+0
   \   0000006C   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000070   001060E2           RSB      R1,R0,#+0
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           BL       GUI_MoveRect
     56                   WinFlags = WM_GetFlags(hBarV);
     57                   if ((WinFlags & WM_SF_ANCHOR_RIGHT) && (WinFlags & WM_SF_ISVIS)) {
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   ........           BL       WM_GetFlags
   \   00000084   820000E2           AND      R0,R0,#0x82
   \   00000088   820050E3           CMP      R0,#+130
     58                     rInside.x1 = rScrollbar.x0 - 1;
   \   0000008C   F010DD01           LDRSHEQ  R1,[SP, #+0]
   \   00000090   01104102           SUBEQ    R1,R1,#+1
   \   00000094   B411CD01           STRHEQ   R1,[SP, #+20]
     59                   }
     60                }
     61                if (hBarH) {
   \                     ??WM_GetInsideRectExScrollbar_1:
   \   00000098   000055E3           CMP      R5,#+0
   \   0000009C   1100000A           BEQ      ??WM_GetInsideRectExScrollbar_2
     62                   WM_GetWindowRectEx(hBarH, &rScrollbar);
   \   000000A0   0D10A0E1           MOV      R1,SP
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   ........           BL       WM_GetWindowRectEx
     63                   GUI_MoveRect(&rScrollbar, -rWin.x0, -rWin.y0);
   \   000000AC   FA00DDE1           LDRSH    R0,[SP, #+10]
   \   000000B0   002060E2           RSB      R2,R0,#+0
   \   000000B4   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000000B8   001060E2           RSB      R1,R0,#+0
   \   000000BC   0D00A0E1           MOV      R0,SP
   \   000000C0   ........           BL       GUI_MoveRect
     64                   WinFlags = WM_GetFlags(hBarH);
     65                   if ((WinFlags & WM_SF_ANCHOR_BOTTOM) && (WinFlags & WM_SF_ISVIS)) {
   \   000000C4   0260A0E3           MOV      R6,#+2
   \   000000C8   406F86E3           ORR      R6,R6,#0x100
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   ........           BL       WM_GetFlags
   \   000000D4   000006E0           AND      R0,R6,R0
   \   000000D8   060050E1           CMP      R0,R6
     66                     rInside.y1 = rScrollbar.y0 - 1;
   \   000000DC   F200DD01           LDRSHEQ  R0,[SP, #+2]
   \   000000E0   01004002           SUBEQ    R0,R0,#+1
   \   000000E4   B601CD01           STRHEQ   R0,[SP, #+22]
     67                   }
     68                }
     69                *pRect = rInside;
   \                     ??WM_GetInsideRectExScrollbar_2:
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   10108DE2           ADD      R1,SP,#+16
   \   000000F0   0820A0E3           MOV      R2,#+8
   \   000000F4   ........           BL       __aeabi_memcpy
     70              }
     71            }
     72          }
   \                     ??WM_GetInsideRectExScrollbar_0:
   \   000000F8   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000000FC   F080BDE8           POP      {R4-R7,PC}       ;; return
     73          
     74          #else
     75            void WM_GetInsideRectExScrollbar(void) {} /* avoid empty object files */
     76          #endif   /* GUI_WINSUPPORT */
     77          
     78          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     WM_GetInsideRectExScrollbar     48


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     WM_GetInsideRectExScrollbar  256

 
 256 bytes in section .text
 
 256 bytes of CODE memory

Errors: none
Warnings: none
