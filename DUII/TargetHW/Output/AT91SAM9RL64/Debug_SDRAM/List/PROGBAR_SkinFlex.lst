###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:43 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\PROGBAR_SkinFlex.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\PROGBAR_SkinFlex.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\PR #
#                    OGBAR_SkinFlex.lst                                       #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\PRO #
#                    GBAR_SkinFlex.o                                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\PROGBAR_SkinFlex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : PROGBAR_SkinFlex.c
     19          Purpose     : Implementation of framewindow skin
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "PROGBAR_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines (configuration defaults)
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   PROGBAR_SKINPROPS

   \                                 In section .data, align 4
     36            static PROGBAR_SKINFLEX_PROPS _Props = {
   \                     _Props:
   \   00000000   CDFFCD009CEE       DC32 13500365, 11333276, 2741248, 3400220, 16579836, 14342874, 13355979
   \              AC0000D42900
   \              1CE23300FCFC
   \              FC00DADADA00
   \              CBCBCB00    
   \   0000001C   D5D5D500A0A0       DC32 14013909, 10526880
   \              A000        
   \   00000024   00000000           DC8 0, 0, 0, 0
     37              { 0x00CDFFCD, 0x00ACEE9C },
     38              { 0x0029D400, 0x0033E21C },
     39              { 0x00FCFCFC, 0x00DADADA },
     40              { 0x00CBCBCB, 0x00D5D5D5 },
     41              0x00A0A0A0,
     42            };
     43            #define PROGBAR_SKINPROPS &_Props
     44          #endif
     45          
     46          /*********************************************************************
     47          *
     48          *       Static data
     49          *
     50          **********************************************************************
     51          */
     52          static PROGBAR_SKINFLEX_PROPS * const _pProps = PROGBAR_SKINPROPS;
     53          
     54          /*********************************************************************
     55          *
     56          *       Static code
     57          *
     58          **********************************************************************
     59          */
     60          /*********************************************************************
     61          *
     62          *       _DrawBackground
     63          */

   \                                 In section .text, align 4, keep-with-next
     64          static void _DrawBackground(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, int IsVertical) {
   \                     _DrawBackground:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     65            int Middle, a0, a1;
     66            PROGBAR_SKINFLEX_INFO * pSkinInfo;
     67            U32 Color0, Color1;
     68          
     69            pSkinInfo = (PROGBAR_SKINFLEX_INFO *)pDrawItemInfo->p;
   \   00000008   1C6094E5           LDR      R6,[R4, #+28]
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
     70            //
     71            // Draw gradients
     72            //
     73            if (IsVertical) {
   \   00000010   042096E5           LDR      R2,[R6, #+4]
   \   00000014   ........           LDR      R7,??DataTable3
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   3100000A           BEQ      ??_DrawBackground_0
     74              //
     75              // Draw vertical
     76              //
     77              Middle = (pDrawItemInfo->x1 - pDrawItemInfo->x0 + 1) >> 1;
   \   00000020   0C0094E5           LDR      R0,[R4, #+12]
   \   00000024   141094E5           LDR      R1,[R4, #+20]
     78              if (pSkinInfo->Index == PROGBAR_SKINFLEX_L) {
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   001041E0           SUB      R1,R1,R0
   \   00000030   011081E2           ADD      R1,R1,#+1
   \   00000034   C150A0E1           ASR      R5,R1,#+1
   \   00000038   0400001A           BNE      ??_DrawBackground_1
     79                Color0 = _pProps->aColorUpperR[0];
   \   0000003C   101097E5           LDR      R1,[R7, #+16]
     80                Color1 = _pProps->aColorUpperR[1];
   \   00000040   142097E5           LDR      R2,[R7, #+20]
     81                a0     = 1;
   \   00000044   01C0A0E3           MOV      R12,#+1
     82                a1     = 0;
   \   00000048   0030A0E3           MOV      R3,#+0
   \   0000004C   030000EA           B        ??_DrawBackground_2
     83              } else {
     84                Color0 = _pProps->aColorUpperL[0];
   \                     ??_DrawBackground_1:
   \   00000050   001097E5           LDR      R1,[R7, #+0]
     85                Color1 = _pProps->aColorUpperL[1];
   \   00000054   042097E5           LDR      R2,[R7, #+4]
     86                a0     = 0;
   \   00000058   00C0A0E3           MOV      R12,#+0
     87                a1     = 1;
   \   0000005C   0130A0E3           MOV      R3,#+1
     88              }
     89              GUI_DrawGradientH(pDrawItemInfo->x0 + 1,
     90                                pDrawItemInfo->y0 + a0,
     91                                pDrawItemInfo->x0 + Middle,
     92                                pDrawItemInfo->y1 - a1,
     93                                Color0, Color1);
   \                     ??_DrawBackground_2:
   \   00000060   04208DE5           STR      R2,[SP, #+4]
   \   00000064   00108DE5           STR      R1,[SP, #+0]
   \   00000068   181094E5           LDR      R1,[R4, #+24]
   \   0000006C   002085E0           ADD      R2,R5,R0
   \   00000070   033041E0           SUB      R3,R1,R3
   \   00000074   101094E5           LDR      R1,[R4, #+16]
   \   00000078   010080E2           ADD      R0,R0,#+1
   \   0000007C   01108CE0           ADD      R1,R12,R1
   \   00000080   ........           BL       GUI_DrawGradientH
     94              if (pSkinInfo->Index == PROGBAR_SKINFLEX_L) {
   \   00000084   040096E5           LDR      R0,[R6, #+4]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0400001A           BNE      ??_DrawBackground_3
     95                Color0 = _pProps->aColorLowerR[0];
   \   00000090   181097E5           LDR      R1,[R7, #+24]
     96                Color1 = _pProps->aColorLowerR[1];
   \   00000094   1C2097E5           LDR      R2,[R7, #+28]
     97                a0     = 1;
   \   00000098   0100A0E3           MOV      R0,#+1
     98                a1     = 0;
   \   0000009C   00C0A0E3           MOV      R12,#+0
   \   000000A0   030000EA           B        ??_DrawBackground_4
     99              } else {
    100                Color0 = _pProps->aColorLowerL[0];
   \                     ??_DrawBackground_3:
   \   000000A4   081097E5           LDR      R1,[R7, #+8]
    101                Color1 = _pProps->aColorLowerL[1];
   \   000000A8   0C2097E5           LDR      R2,[R7, #+12]
    102                a0     = 0;
   \   000000AC   0000A0E3           MOV      R0,#+0
    103                a1     = 1;
   \   000000B0   01C0A0E3           MOV      R12,#+1
    104              }
    105              GUI_DrawGradientH(pDrawItemInfo->x0 + Middle + 1,
    106                                pDrawItemInfo->y0 + a0,
    107                                pDrawItemInfo->x1 - 1,
    108                                pDrawItemInfo->y1 - a1,
    109                                Color0, Color1);
   \                     ??_DrawBackground_4:
   \   000000B4   04208DE5           STR      R2,[SP, #+4]
   \   000000B8   00108DE5           STR      R1,[SP, #+0]
   \   000000BC   181094E5           LDR      R1,[R4, #+24]
   \   000000C0   0C3041E0           SUB      R3,R1,R12
   \   000000C4   141094E5           LDR      R1,[R4, #+20]
   \   000000C8   012041E2           SUB      R2,R1,#+1
   \   000000CC   101094E5           LDR      R1,[R4, #+16]
   \   000000D0   011080E0           ADD      R1,R0,R1
   \   000000D4   0C0094E5           LDR      R0,[R4, #+12]
   \   000000D8   000085E0           ADD      R0,R5,R0
   \   000000DC   010080E2           ADD      R0,R0,#+1
   \   000000E0   ........           BL       GUI_DrawGradientH
   \   000000E4   300000EA           B        ??_DrawBackground_5
    110            } else {
    111              //
    112              // Draw horizontal
    113              //
    114              Middle = (pDrawItemInfo->y1 - pDrawItemInfo->y0 + 1) >> 1;
   \                     ??_DrawBackground_0:
   \   000000E8   100094E5           LDR      R0,[R4, #+16]
   \   000000EC   181094E5           LDR      R1,[R4, #+24]
    115              if (pSkinInfo->Index == PROGBAR_SKINFLEX_L) {
   \   000000F0   000052E3           CMP      R2,#+0
   \   000000F4   001041E0           SUB      R1,R1,R0
   \   000000F8   011081E2           ADD      R1,R1,#+1
   \   000000FC   C150A0E1           ASR      R5,R1,#+1
   \   00000100   0400001A           BNE      ??_DrawBackground_6
    116                Color0 = _pProps->aColorUpperL[0];
   \   00000104   001097E5           LDR      R1,[R7, #+0]
    117                Color1 = _pProps->aColorUpperL[1];
   \   00000108   042097E5           LDR      R2,[R7, #+4]
    118                a0     = 1;
   \   0000010C   01C0A0E3           MOV      R12,#+1
    119                a1     = 0;
   \   00000110   00E0A0E3           MOV      LR,#+0
   \   00000114   030000EA           B        ??_DrawBackground_7
    120              } else {
    121                Color0 = _pProps->aColorUpperR[0];
   \                     ??_DrawBackground_6:
   \   00000118   101097E5           LDR      R1,[R7, #+16]
    122                Color1 = _pProps->aColorUpperR[1];
   \   0000011C   142097E5           LDR      R2,[R7, #+20]
    123                a0     = 0;
   \   00000120   00C0A0E3           MOV      R12,#+0
    124                a1     = 1;
   \   00000124   01E0A0E3           MOV      LR,#+1
    125              }
    126              GUI_DrawGradientV(pDrawItemInfo->x0 + a0,
    127                                pDrawItemInfo->y0 + 1,
    128                                pDrawItemInfo->x1 - a1,
    129                                pDrawItemInfo->y0 + Middle,
    130                                Color0, Color1);
   \                     ??_DrawBackground_7:
   \   00000128   04208DE5           STR      R2,[SP, #+4]
   \   0000012C   00108DE5           STR      R1,[SP, #+0]
   \   00000130   141094E5           LDR      R1,[R4, #+20]
   \   00000134   003085E0           ADD      R3,R5,R0
   \   00000138   0E2041E0           SUB      R2,R1,LR
   \   0000013C   011080E2           ADD      R1,R0,#+1
   \   00000140   0C0094E5           LDR      R0,[R4, #+12]
   \   00000144   00008CE0           ADD      R0,R12,R0
   \   00000148   ........           BL       GUI_DrawGradientV
    131              if (pSkinInfo->Index == PROGBAR_SKINFLEX_L) {
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   0400001A           BNE      ??_DrawBackground_8
    132                Color0 = _pProps->aColorLowerL[0];
   \   00000158   081097E5           LDR      R1,[R7, #+8]
    133                Color1 = _pProps->aColorLowerL[1];
   \   0000015C   0C2097E5           LDR      R2,[R7, #+12]
    134                a0     = 1;
   \   00000160   0100A0E3           MOV      R0,#+1
    135                a1     = 0;
   \   00000164   00C0A0E3           MOV      R12,#+0
   \   00000168   030000EA           B        ??_DrawBackground_9
    136              } else {
    137                Color0 = _pProps->aColorLowerR[0];
   \                     ??_DrawBackground_8:
   \   0000016C   181097E5           LDR      R1,[R7, #+24]
    138                Color1 = _pProps->aColorLowerR[1];
   \   00000170   1C2097E5           LDR      R2,[R7, #+28]
    139                a0     = 0;
   \   00000174   0000A0E3           MOV      R0,#+0
    140                a1     = 1;
   \   00000178   01C0A0E3           MOV      R12,#+1
    141              }
    142              GUI_DrawGradientV(pDrawItemInfo->x0 + a0,
    143                                pDrawItemInfo->y0 + Middle + 1,
    144                                pDrawItemInfo->x1 - a1,
    145                                pDrawItemInfo->y1 - 1,
    146                                Color0, Color1);
   \                     ??_DrawBackground_9:
   \   0000017C   04208DE5           STR      R2,[SP, #+4]
   \   00000180   00108DE5           STR      R1,[SP, #+0]
   \   00000184   181094E5           LDR      R1,[R4, #+24]
   \   00000188   013041E2           SUB      R3,R1,#+1
   \   0000018C   141094E5           LDR      R1,[R4, #+20]
   \   00000190   0C2041E0           SUB      R2,R1,R12
   \   00000194   101094E5           LDR      R1,[R4, #+16]
   \   00000198   0CC094E5           LDR      R12,[R4, #+12]
   \   0000019C   011085E0           ADD      R1,R5,R1
   \   000001A0   011081E2           ADD      R1,R1,#+1
   \   000001A4   0C0080E0           ADD      R0,R0,R12
   \   000001A8   ........           BL       GUI_DrawGradientV
    147            }
    148          }
   \                     ??_DrawBackground_5:
   \   000001AC   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000001B0   F080BDE8           POP      {R4-R7,PC}       ;; return
    149          
    150          /*********************************************************************
    151          *
    152          *       _DrawText
    153          */
    154          static void _DrawText(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const char * pText) {
    155            GUI_SetColor(_pProps->ColorText);
    156            GUI_SetTextMode(GUI_TM_TRANS);
    157            GUI_DispStringAt(pText, pDrawItemInfo->x0, pDrawItemInfo->y0);
    158          }
    159          
    160          /*********************************************************************
    161          *
    162          *       _DrawFrame
    163          */
    164          static void _DrawFrame(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
    165            //
    166            // Draw frame
    167            //
    168            GUI_SetColor(_pProps->ColorFrame);
    169            GUI_DrawHLine(pDrawItemInfo->y0, pDrawItemInfo->x0 + 0, pDrawItemInfo->x1 - 0);
    170            GUI_DrawHLine(pDrawItemInfo->y1, pDrawItemInfo->x0 + 0, pDrawItemInfo->x1 - 0);
    171            GUI_DrawVLine(pDrawItemInfo->x0, pDrawItemInfo->y0 + 1, pDrawItemInfo->y1 - 1);
    172            GUI_DrawVLine(pDrawItemInfo->x1, pDrawItemInfo->y0 + 1, pDrawItemInfo->y1 - 1);
    173          }
    174          
    175          /*********************************************************************
    176          *
    177          *       Public code
    178          *
    179          **********************************************************************
    180          */
    181          /*********************************************************************
    182          *
    183          *       PROGBAR_DrawSkinFlex
    184          */

   \                                 In section .text, align 4, keep-with-next
    185          int PROGBAR_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     PROGBAR_DrawSkinFlex:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    186            PROGBAR_SKINFLEX_INFO * pSkinInfo;
    187          
    188            pSkinInfo = (PROGBAR_SKINFLEX_INFO *)pDrawItemInfo->p;
    189            //
    190            // Draw items
    191            //
    192            switch (pDrawItemInfo->Cmd) {
   \   00000008   041094E5           LDR      R1,[R4, #+4]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   1C0094E5           LDR      R0,[R4, #+28]
   \   00000014   031051E2           SUBS     R1,R1,#+3
   \   00000018   1C00000A           BEQ      ??PROGBAR_DrawSkinFlex_0
   \   0000001C   061051E2           SUBS     R1,R1,#+6
   \   00000020   0200000A           BEQ      ??PROGBAR_DrawSkinFlex_1
   \   00000024   071051E2           SUBS     R1,R1,#+7
   \   00000028   1C00000A           BEQ      ??PROGBAR_DrawSkinFlex_2
   \   0000002C   280000EA           B        ??PROGBAR_DrawSkinFlex_3
    193            case WIDGET_ITEM_DRAW_FRAME:
    194              _DrawFrame(pDrawItemInfo);
   \                     ??PROGBAR_DrawSkinFlex_1:
   \   00000030   ........           LDR      R0,??DataTable3
   \   00000034   200090E5           LDR      R0,[R0, #+32]
   \   00000038   ........           BL       GUI_SetColor
   \   0000003C   142094E5           LDR      R2,[R4, #+20]
   \   00000040   0C1094E5           LDR      R1,[R4, #+12]
   \   00000044   100094E5           LDR      R0,[R4, #+16]
   \   00000048   ........           BL       GUI_DrawHLine
   \   0000004C   142094E5           LDR      R2,[R4, #+20]
   \   00000050   0C1094E5           LDR      R1,[R4, #+12]
   \   00000054   180094E5           LDR      R0,[R4, #+24]
   \   00000058   ........           BL       GUI_DrawHLine
   \   0000005C   180094E5           LDR      R0,[R4, #+24]
   \   00000060   012040E2           SUB      R2,R0,#+1
   \   00000064   100094E5           LDR      R0,[R4, #+16]
   \   00000068   011080E2           ADD      R1,R0,#+1
   \   0000006C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000070   ........           BL       GUI_DrawVLine
   \   00000074   180094E5           LDR      R0,[R4, #+24]
   \   00000078   012040E2           SUB      R2,R0,#+1
   \   0000007C   100094E5           LDR      R0,[R4, #+16]
   \   00000080   011080E2           ADD      R1,R0,#+1
   \   00000084   140094E5           LDR      R0,[R4, #+20]
   \   00000088   ........           BL       GUI_DrawVLine
    195              break;
   \   0000008C   100000EA           B        ??PROGBAR_DrawSkinFlex_3
    196            case WIDGET_ITEM_DRAW_BACKGROUND:
    197              _DrawBackground(pDrawItemInfo, pSkinInfo->IsVertical);
   \                     ??PROGBAR_DrawSkinFlex_0:
   \   00000090   001090E5           LDR      R1,[R0, #+0]
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       _DrawBackground
    198              break;
   \   0000009C   0C0000EA           B        ??PROGBAR_DrawSkinFlex_3
    199            case WIDGET_ITEM_DRAW_TEXT:
    200              if (pSkinInfo->IsVertical == 0) {
   \                     ??PROGBAR_DrawSkinFlex_2:
   \   000000A0   001090E5           LDR      R1,[R0, #+0]
   \   000000A4   000051E3           CMP      R1,#+0
   \   000000A8   0900001A           BNE      ??PROGBAR_DrawSkinFlex_3
    201                _DrawText(pDrawItemInfo, pSkinInfo->pText);
   \   000000AC   085090E5           LDR      R5,[R0, #+8]
   \   000000B0   ........           LDR      R0,??DataTable3
   \   000000B4   240090E5           LDR      R0,[R0, #+36]
   \   000000B8   ........           BL       GUI_SetColor
   \   000000BC   0200A0E3           MOV      R0,#+2
   \   000000C0   ........           BL       GUI_SetTextMode
   \   000000C4   102094E5           LDR      R2,[R4, #+16]
   \   000000C8   0C1094E5           LDR      R1,[R4, #+12]
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   ........           BL       GUI_DispStringAt
    202              }
    203              break;
    204            case WIDGET_ITEM_CREATE:
    205              break;
    206            }
    207            return 0;
   \                     ??PROGBAR_DrawSkinFlex_3:
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   04D08DE2           ADD      SP,SP,#+4
   \   000000DC   3080BDE8           POP      {R4,R5,PC}       ;; return
    208          }
    209          
    210          /*********************************************************************
    211          *
    212          *       PROGBAR_SetSkinFlexProps
    213          */

   \                                 In section .text, align 4, keep-with-next
    214          void PROGBAR_SetSkinFlexProps(const PROGBAR_SKINFLEX_PROPS * pProps, int Index) {
    215            if (Index == 0) {
   \                     PROGBAR_SetSkinFlexProps:
   \   00000000   000051E3           CMP      R1,#+0
   \   00000004   0000000A           BEQ      ??PROGBAR_SetSkinFlexProps_0
    216              *_pProps = *pProps;
   \   00000008   1EFF2FE1           BX       LR
    217            }
   \                     ??PROGBAR_SetSkinFlexProps_0:
   \   0000000C   10402DE9           PUSH     {R4,LR}
   \   00000010   1C50B0E8           LDM      R0!,{R2-R4,R12,LR}
   \   00000014   ........           LDR      R1,??DataTable3
   \   00000018   1C50A1E8           STM      R1!,{R2-R4,R12,LR}
   \   0000001C   1C50B0E8           LDM      R0!,{R2-R4,R12,LR}
   \   00000020   1C50A1E8           STM      R1!,{R2-R4,R12,LR}
    218          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
    219          
    220          /*********************************************************************
    221          *
    222          *       PROGBAR_GetSkinFlexProps
    223          */

   \                                 In section .text, align 4, keep-with-next
    224          void PROGBAR_GetSkinFlexProps(PROGBAR_SKINFLEX_PROPS * pProps, int Index) {
    225            if (Index == 0) {
   \                     PROGBAR_GetSkinFlexProps:
   \   00000000   000051E3           CMP      R1,#+0
   \   00000004   0000000A           BEQ      ??PROGBAR_GetSkinFlexProps_0
    226              *pProps = *_pProps;
   \   00000008   1EFF2FE1           BX       LR
    227            }
   \                     ??PROGBAR_GetSkinFlexProps_0:
   \   0000000C   10402DE9           PUSH     {R4,LR}
   \   00000010   ........           LDR      R1,??DataTable3
   \   00000014   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   00000018   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
   \   0000001C   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   00000020   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
    228          }
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     _Props
    229          
    230          #else
    231            void PROGBAR_SkinFlex_C(void);
    232            void PROGBAR_SkinFlex_C(void) {} /* avoid empty object files */
    233          #endif /* GUI_WINSUPPORT */
    234          
    235          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     PROGBAR_DrawSkinFlex         16
     PROGBAR_GetSkinFlexProps      8
     PROGBAR_SetSkinFlexProps      8
     _DrawBackground              32


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _Props                     40
     _DrawBackground           436
     PROGBAR_DrawSkinFlex      224
     PROGBAR_SetSkinFlexProps   40
     PROGBAR_GetSkinFlexProps   40
     ??DataTable3                4

 
  40 bytes in section .data
 744 bytes in section .text
 
 744 bytes of CODE memory
  40 bytes of DATA memory

Errors: none
Warnings: none
