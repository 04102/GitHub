###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:26 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUICC_M8888.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GUICC_M8888.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    ICC_M8888.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    CC_M8888.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUICC_M8888.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICC_M8888.C
     19          Purpose     : Color conversion routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LCD_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code,
     28          *
     29          *       LCD_FIXEDPALETTE == 8888, 4294967296 colors + 8 bit transparency, TTTTTTTTRRRRRRRRGGGGGGGGBBBBBBBB
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _Index2Color_M8888
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          static LCD_COLOR _Index2Color_M8888(unsigned Index) {
     38            U32 r, g, b;
     39            b = Index & 0xff;
     40            g = (Index & 0xff00) >> 8;
     41            r = (Index & 0xff0000) >> 16;
     42            return (Index & 0xff000000) | (b << 16) | (g << 8) | r;
   \                     _Index2Color_M8888:
   \   00000000   FF1400E2           AND      R1,R0,#0xFF000000
   \   00000004   FF2000E2           AND      R2,R0,#0xFF
   \   00000008   021881E1           ORR      R1,R1,R2, LSL #+16
   \   0000000C   FF20A0E3           MOV      R2,#+255
   \   00000010   202402E0           AND      R2,R2,R0, LSR #+8
   \   00000014   021481E1           ORR      R1,R1,R2, LSL #+8
   \   00000018   FF20A0E3           MOV      R2,#+255
   \   0000001C   200802E0           AND      R0,R2,R0, LSR #+16
   \   00000020   010080E1           ORR      R0,R0,R1
   \   00000024   1EFF2FE1           BX       LR               ;; return
     43          }
     44          
     45          /*********************************************************************
     46          *
     47          *       _Color2Index_M8888
     48          */

   \                                 In section .text, align 4, keep-with-next
     49          static unsigned _Color2Index_M8888(LCD_COLOR Color) {
     50            U32 r, g, b;
     51            b = Color & 0xff;
     52            g = (Color & 0xff00) >> 8;
     53            r = (Color & 0xff0000) >> 16;
     54            return (Color & 0xff000000) | (b << 16) | (g << 8) | r;
   \                     _Color2Index_M8888:
   \   00000000   FF1400E2           AND      R1,R0,#0xFF000000
   \   00000004   FF2000E2           AND      R2,R0,#0xFF
   \   00000008   021881E1           ORR      R1,R1,R2, LSL #+16
   \   0000000C   FF20A0E3           MOV      R2,#+255
   \   00000010   202402E0           AND      R2,R2,R0, LSR #+8
   \   00000014   021481E1           ORR      R1,R1,R2, LSL #+8
   \   00000018   FF20A0E3           MOV      R2,#+255
   \   0000001C   200802E0           AND      R0,R2,R0, LSR #+16
   \   00000020   010080E1           ORR      R0,R0,R1
   \   00000024   1EFF2FE1           BX       LR               ;; return
     55          }
     56          
     57          /*********************************************************************
     58          *
     59          *       _GetIndexMask_M8888
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          static unsigned _GetIndexMask_M8888(void) {
     62            return (unsigned)0xffffffff;
   \                     _GetIndexMask_M8888:
   \   00000000   0000E0E3           MVN      R0,#+0
   \   00000004   1EFF2FE1           BX       LR               ;; return
     63          }
     64          
     65          /*********************************************************************
     66          *
     67          *       Public data
     68          *
     69          **********************************************************************
     70          */
     71          /*********************************************************************
     72          *
     73          *       LCD_API_ColorConv_M8888
     74          *
     75          * Purpose
     76          *   API table for this color conversion mode. Only used by memory
     77          *   devices in this mode.
     78          */

   \                                 In section .rodata, align 4, keep-with-next
     79          const LCD_API_COLOR_CONV LCD_API_ColorConv_M8888 = {
   \                     LCD_API_ColorConv_M8888:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Color2Index_M8888, _Index2Color_M8888, _GetIndexMask_M8888
   \              ............
     80            _Color2Index_M8888,
     81            _Index2Color_M8888,
     82            _GetIndexMask_M8888
     83          };
     84          
     85          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     _Color2Index_M8888       0
     _GetIndexMask_M8888      0
     _Index2Color_M8888       0


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     _Index2Color_M8888        40
     _Color2Index_M8888        40
     _GetIndexMask_M8888        8
     LCD_API_ColorConv_M8888   12

 
 12 bytes in section .rodata
 88 bytes in section .text
 
 88 bytes of CODE  memory
 12 bytes of CONST memory

Errors: none
Warnings: none
