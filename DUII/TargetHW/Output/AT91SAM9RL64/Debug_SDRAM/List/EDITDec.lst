###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\EDITDec.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\EDITDec.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\ED #
#                    ITDec.lst                                                #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\EDI #
#                    TDec.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\EDITDec.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : EDITDec.c
     19          Purpose     : Edit decimal values
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "EDIT_Private.h"
     26          #include "GUI_Debug.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          
     31          /*********************************************************************
     32          *
     33          *        Defaults for config switches
     34          *
     35          **********************************************************************
     36          */
     37          #ifndef EDIT_DEC_DIGITONLY
     38            #define EDIT_DEC_DIGITONLY     0
     39          #endif
     40          
     41          
     42          /*********************************************************************
     43          *
     44          *        static Helpers
     45          *
     46          **********************************************************************
     47          */
     48          /*********************************************************************
     49          *
     50          *       _DecChar2Int
     51          */
     52          static int _DecChar2Int(int Char) {
     53            if ((Char >= '0') && (Char <= '9'))
     54              return Char - '0';
     55            return -1;
     56          }
     57          
     58          /*********************************************************************
     59          *
     60          *       _UpdateBuffer
     61          */

   \                                 In section .text, align 4, keep-with-next
     62          static void _UpdateBuffer(EDIT_Handle hObj) {
   \                     _UpdateBuffer:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
     63            char * s;
     64            EDIT_Obj * pObj;
     65            pObj = EDIT_LOCK_H(hObj);
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   0040A0E1           MOV      R4,R0
     66            s = (char *)GUI_LOCK_H(pObj->hpText);
   \   00000010   340094E5           LDR      R0,[R4, #+52]
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   00008DE5           STR      R0,[SP, #+0]
     67            if (pObj->Flags & GUI_EDIT_SIGNED) {
   \   0000001C   5610D4E5           LDRB     R1,[R4, #+86]
   \   00000020   480094E5           LDR      R0,[R4, #+72]
   \   00000024   010011E3           TST      R1,#0x1
   \   00000028   0C00000A           BEQ      ??_UpdateBuffer_0
     68              if (((I32)pObj->CurrentValue) >= 0) {
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0600004A           BMI      ??_UpdateBuffer_1
     69                I32 Result = GUI_AddSign(pObj->CurrentValue, &s);
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   ........           BL       GUI_AddSign
     70                GUI_AddDecShift(Result, pObj->MaxLen - 1, pObj->NumDecs, &s);
   \   0000003C   F813D4E1           LDRSH    R1,[R4, #+56]
   \   00000040   0D30A0E1           MOV      R3,SP
   \   00000044   4420D4E5           LDRB     R2,[R4, #+68]
   \   00000048   011041E2           SUB      R1,R1,#+1
   \   0000004C   0A0000EA           B        ??_UpdateBuffer_2
     71              } else {
     72                GUI_AddDecShift(pObj->CurrentValue, pObj->MaxLen, pObj->NumDecs, &s);
   \                     ??_UpdateBuffer_1:
   \   00000050   0D30A0E1           MOV      R3,SP
   \   00000054   4420D4E5           LDRB     R2,[R4, #+68]
   \   00000058   F813D4E1           LDRSH    R1,[R4, #+56]
   \   0000005C   060000EA           B        ??_UpdateBuffer_2
     73              }
     74            } else {
     75              int Len;
     76              Len = pObj->MaxLen;
   \                     ??_UpdateBuffer_0:
   \   00000060   F813D4E1           LDRSH    R1,[R4, #+56]
     77              if (Len > 10) {
   \   00000064   0B0051E3           CMP      R1,#+11
   \   00000068   010000BA           BLT      ??_UpdateBuffer_3
     78                if ((I32)pObj->CurrentValue >= 0) {
   \   0000006C   000050E3           CMP      R0,#+0
     79                  Len = 10;
   \   00000070   0A10A053           MOVPL    R1,#+10
     80                }
     81              }
     82              GUI_AddDecShift(pObj->CurrentValue, Len, pObj->NumDecs, &s);
   \                     ??_UpdateBuffer_3:
   \   00000074   0D30A0E1           MOV      R3,SP
   \   00000078   4420D4E5           LDRB     R2,[R4, #+68]
   \                     ??_UpdateBuffer_2:
   \   0000007C   FF1001E2           AND      R1,R1,#0xFF
   \   00000080   ........           BL       GUI_AddDecShift
     83            }
     84            GUI_UNLOCK_H(s);
   \   00000084   ........           BL       GUI_ALLOC_UnlockH
   \   00000088   0050A0E3           MOV      R5,#+0
   \   0000008C   00508DE5           STR      R5,[SP, #+0]
     85            if (pObj->Flags & GUI_EDIT_SUPPRESS_LEADING_ZEROES) {
   \   00000090   5600D4E5           LDRB     R0,[R4, #+86]
   \   00000094   020010E3           TST      R0,#0x2
   \   00000098   2200000A           BEQ      ??_UpdateBuffer_4
     86              int i, LastIndex;
     87              LastIndex = pObj->MaxLen - 2;
   \   0000009C   F803D4E1           LDRSH    R0,[R4, #+56]
   \   000000A0   026040E2           SUB      R6,R0,#+2
     88              if (pObj->NumDecs) {
   \   000000A4   4400D4E5           LDRB     R0,[R4, #+68]
   \   000000A8   000050E3           CMP      R0,#+0
     89                LastIndex -= pObj->NumDecs + 1;
   \   000000AC   00004610           SUBNE    R0,R6,R0
   \   000000B0   01604012           SUBNE    R6,R0,#+1
     90              }
     91              s = (char *)GUI_LOCK_H(pObj->hpText);
   \   000000B4   340094E5           LDR      R0,[R4, #+52]
   \   000000B8   ........           BL       GUI_ALLOC_LockH
   \   000000BC   00008DE5           STR      R0,[SP, #+0]
     92              for (i = 0; i <= LastIndex; i++, s++) {
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   000056E3           CMP      R6,#+0
   \   000000C8   1400004A           BMI      ??_UpdateBuffer_5
   \   000000CC   2000A0E3           MOV      R0,#+32
   \   000000D0   010000EA           B        ??_UpdateBuffer_6
     93                if (i == 0) {
   \                     ??_UpdateBuffer_7:
   \   000000D4   000051E3           CMP      R1,#+0
   \   000000D8   0400001A           BNE      ??_UpdateBuffer_8
     94                  if ((*s == '+') || (*s == '-')) {
   \                     ??_UpdateBuffer_6:
   \   000000DC   00209DE5           LDR      R2,[SP, #+0]
   \   000000E0   0020D2E5           LDRB     R2,[R2, #+0]
   \   000000E4   2B0052E3           CMP      R2,#+43
   \   000000E8   2D005213           CMPNE    R2,#+45
   \   000000EC   0500000A           BEQ      ??_UpdateBuffer_9
     95                    continue;
     96                  }
     97                }
     98                if (*s != '0') {
   \                     ??_UpdateBuffer_8:
   \   000000F0   00209DE5           LDR      R2,[SP, #+0]
   \   000000F4   0020D2E5           LDRB     R2,[R2, #+0]
   \   000000F8   300052E3           CMP      R2,#+48
   \   000000FC   0700001A           BNE      ??_UpdateBuffer_5
     99                  break;
    100                }
    101                *s = ' ';
   \   00000100   00209DE5           LDR      R2,[SP, #+0]
   \   00000104   0000C2E5           STRB     R0,[R2, #+0]
    102              }
   \                     ??_UpdateBuffer_9:
   \   00000108   00209DE5           LDR      R2,[SP, #+0]
   \   0000010C   011081E2           ADD      R1,R1,#+1
   \   00000110   012082E2           ADD      R2,R2,#+1
   \   00000114   00208DE5           STR      R2,[SP, #+0]
   \   00000118   010056E1           CMP      R6,R1
   \   0000011C   ECFFFFAA           BGE      ??_UpdateBuffer_7
    103              GUI_UNLOCK_H(s);
   \                     ??_UpdateBuffer_5:
   \   00000120   ........           BL       GUI_ALLOC_UnlockH
   \   00000124   00508DE5           STR      R5,[SP, #+0]
    104            }
    105            GUI_UNLOCK_H(pObj);
   \                     ??_UpdateBuffer_4:
   \   00000128   ........           BL       GUI_ALLOC_UnlockH
    106          }
   \   0000012C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000130   7080BDE8           POP      {R4-R6,PC}       ;; return
    107          
    108          /*********************************************************************
    109          *
    110          *       _EditDec
    111          */

   \                                 In section .text, align 4, keep-with-next
    112          static void _EditDec(int Digit, EDIT_Obj * pObj, EDIT_Handle hObj) {
   \                     _EditDec:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0260A0E1           MOV      R6,R2
    113            I32 Result = 0;
   \   00000014   0070A0E3           MOV      R7,#+0
    114            int i, Pos = 0;
   \   00000018   0080A0E3           MOV      R8,#+0
    115            char * s;
    116            s = (char *)GUI_LOCK_H(pObj->hpText);
   \   0000001C   340095E5           LDR      R0,[R5, #+52]
   \   00000020   ........           BL       GUI_ALLOC_LockH
    117            for (i = 0; i < pObj->MaxLen; i++) {
   \   00000024   F8C3D5E1           LDRSH    R12,[R5, #+56]
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   01005CE3           CMP      R12,#+1
   \   00000030   1B0000BA           BLT      ??_EditDec_0
   \   00000034   5630D5E5           LDRB     R3,[R5, #+86]
   \   00000038   4CE095E5           LDR      LR,[R5, #+76]
   \   0000003C   01204CE2           SUB      R2,R12,#+1
   \   00000040   ........           LDR      R5,??DataTable1
    118              int Index = pObj->MaxLen - i - 1;
    119              if (Index == pObj->CursorPos) {
   \                     ??_EditDec_1:
   \   00000044   0E0052E1           CMP      R2,LR
   \   00000048   0300001A           BNE      ??_EditDec_2
    120                Result += GUI_Pow10[Pos++] * Digit;
   \   0000004C   089195E7           LDR      R9,[R5, +R8, LSL #+2]
   \   00000050   018088E2           ADD      R8,R8,#+1
   \   00000054   947927E0           MLA      R7,R4,R9,R7
   \   00000058   0D0000EA           B        ??_EditDec_3
    121              } else {
    122                char c;
    123                int Value;
    124                c = *(s + Index);
   \                     ??_EditDec_2:
   \   0000005C   0090D2E7           LDRB     R9,[R2, +R0]
    125                if (pObj->Flags & GUI_EDIT_SUPPRESS_LEADING_ZEROES) {
   \   00000060   020013E3           TST      R3,#0x2
   \   00000064   0100000A           BEQ      ??_EditDec_4
    126                  if (c == ' ') {
   \   00000068   200059E3           CMP      R9,#+32
    127                    c = '0';
   \   0000006C   3090A003           MOVEQ    R9,#+48
    128                  }
    129                }
    130                Value = _DecChar2Int(c);
   \                     ??_EditDec_4:
   \   00000070   30B049E2           SUB      R11,R9,#+48
   \   00000074   0A005BE3           CMP      R11,#+10
   \   00000078   0300002A           BCS      ??_EditDec_5
   \   0000007C   30A059E2           SUBS     R10,R9,#+48
    131                if (Value >= 0) {
    132                  Result += GUI_Pow10[Pos++] * Value;
   \   00000080   08B19557           LDRPL    R11,[R5, +R8, LSL #+2]
   \   00000084   01808852           ADDPL    R8,R8,#+1
   \   00000088   9A7B2750           MLAPL    R7,R10,R11,R7
    133                }
    134                if (c == '-') {
   \                     ??_EditDec_5:
   \   0000008C   2D0059E3           CMP      R9,#+45
    135                  Result *= -1;
   \   00000090   00706702           RSBEQ    R7,R7,#+0
    136                }
    137              }
    138            }
   \                     ??_EditDec_3:
   \   00000094   011081E2           ADD      R1,R1,#+1
   \   00000098   012042E2           SUB      R2,R2,#+1
   \   0000009C   0C0051E1           CMP      R1,R12
   \   000000A0   E7FFFFBA           BLT      ??_EditDec_1
    139            GUI_UNLOCK_H(s);
   \                     ??_EditDec_0:
   \   000000A4   ........           BL       GUI_ALLOC_UnlockH
    140            EDIT_SetValue(hObj, Result);
   \   000000A8   0710A0E1           MOV      R1,R7
   \   000000AC   0600A0E1           MOV      R0,R6
   \   000000B0   04D08DE2           ADD      SP,SP,#+4
   \   000000B4   F04FBDE8           POP      {R4-R11,LR}
   \   000000B8   ........           B        EDIT_SetValue    ;; tailcall
    141          }
    142          
    143          /*********************************************************************
    144          *
    145          *       EDIT_DEC_DIGITONLY
    146          */
    147          #if EDIT_DEC_DIGITONLY
    148          static int _GetCurrentDigit(EDIT_Obj * pObj) {
    149            return _DecChar2Int(EDIT__GetCurrentChar(pObj));
    150          }
    151          #endif
    152          
    153          /*********************************************************************
    154          *
    155          *       _MakePositive
    156          */
    157          static void _MakePositive(EDIT_Obj * pObj, EDIT_Handle hObj) {
    158            if ((I32)pObj->CurrentValue < 0) {
    159              EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
    160            }
    161          }
    162          
    163          /*********************************************************************
    164          *
    165          *       _MakeNegative
    166          */
    167          static void _MakeNegative(EDIT_Obj * pObj, EDIT_Handle hObj) {
    168            if ((I32)pObj->CurrentValue > 0) {
    169              EDIT_SetValue(hObj, (I32)pObj->CurrentValue * -1);
    170            }
    171          }
    172          
    173          /*********************************************************************
    174          *
    175          *       _SwapSign
    176          */
    177          static void _SwapSign(EDIT_Obj * pObj, EDIT_Handle hObj) {
    178            if ((I32)pObj->CurrentValue > 0)
    179              _MakeNegative(pObj, hObj);
    180            else
    181              _MakePositive(pObj, hObj);
    182          }
    183          
    184          /*********************************************************************
    185          *
    186          *       _IncrementCursor
    187          */
    188          static void _IncrementCursor(EDIT_Handle hObj, EDIT_Obj * pObj) {
    189            EDIT__SetCursorPos(hObj, pObj->CursorPos + 1);
    190            if (EDIT__GetCurrentChar(pObj) == '.') {
    191              if (pObj->CursorPos < (pObj->MaxLen - 1)) {
    192                EDIT__SetCursorPos(hObj, pObj->CursorPos + 1);
    193              } else {
    194                EDIT__SetCursorPos(hObj, pObj->CursorPos - 1);
    195              }
    196            }
    197          }
    198          
    199          /*********************************************************************
    200          *
    201          *       _AddPosition
    202          */
    203          #if !EDIT_DEC_DIGITONLY

   \                                 In section .text, align 4, keep-with-next
    204          static void _AddPosition(EDIT_Obj * pObj, EDIT_Handle hObj, int Sign) {
   \                     _AddPosition:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    205            int Pos;
    206            I32 v;
    207            I32 OldValue, NewValue;
    208            OldValue = pObj->CurrentValue;
    209            v = Sign;
    210            Pos = pObj->MaxLen - pObj->CursorPos-1;
   \   00000008   F8C3D4E1           LDRSH    R12,[R4, #+56]
   \   0000000C   4CE094E5           LDR      LR,[R4, #+76]
   \   00000010   0100A0E1           MOV      R0,R1
   \   00000014   0EC04CE0           SUB      R12,R12,LR
    211            if ((pObj->Flags && GUI_EDIT_SIGNED) && (OldValue == 0) && (Pos > 0)) {
   \   00000018   56E0D4E5           LDRB     LR,[R4, #+86]
   \   0000001C   481094E5           LDR      R1,[R4, #+72]
   \   00000020   0230A0E1           MOV      R3,R2
   \   00000024   0150A0E1           MOV      R5,R1
   \   00000028   01C04CE2           SUB      R12,R12,#+1
   \   0000002C   00005EE3           CMP      LR,#+0
   \   00000030   0300000A           BEQ      ??_AddPosition_0
   \   00000034   000055E3           CMP      R5,#+0
   \   00000038   0100001A           BNE      ??_AddPosition_0
   \   0000003C   01005CE3           CMP      R12,#+1
    212              Pos--;
   \   00000040   01C04CA2           SUBGE    R12,R12,#+1
    213            }
    214            if (pObj->NumDecs && (Pos > pObj->NumDecs)) {
   \                     ??_AddPosition_0:
   \   00000044   44E0D4E5           LDRB     LR,[R4, #+68]
   \   00000048   00005EE3           CMP      LR,#+0
   \   0000004C   0100000A           BEQ      ??_AddPosition_1
   \   00000050   0C005EE1           CMP      LR,R12
    215              Pos--;
   \   00000054   01C04CB2           SUBLT    R12,R12,#+1
    216            }
    217            while (Pos--) {
   \                     ??_AddPosition_1:
   \   00000058   00005CE3           CMP      R12,#+0
   \   0000005C   0400000A           BEQ      ??_AddPosition_2
    218              v *= 10;
   \                     ??_AddPosition_3:
   \   00000060   0AE0A0E3           MOV      LR,#+10
   \   00000064   01C04CE2           SUB      R12,R12,#+1
   \   00000068   9E0303E0           MUL      R3,LR,R3
   \   0000006C   00005CE3           CMP      R12,#+0
   \   00000070   FAFFFF1A           BNE      ??_AddPosition_3
    219            }
    220            NewValue = pObj->CurrentValue + v;
   \                     ??_AddPosition_2:
   \   00000074   016083E0           ADD      R6,R3,R1
    221            if (((Sign < 0) && (NewValue < OldValue)) || ((Sign > 0) && (NewValue > OldValue))) {
   \   00000078   000052E3           CMP      R2,#+0
   \   0000007C   0200005A           BPL      ??_AddPosition_4
   \   00000080   050056E1           CMP      R6,R5
   \   00000084   040000BA           BLT      ??_AddPosition_5
   \   00000088   050000EA           B        ??_AddPosition_6
   \                     ??_AddPosition_4:
   \   0000008C   010052E3           CMP      R2,#+1
   \   00000090   030000BA           BLT      ??_AddPosition_6
   \   00000094   060055E1           CMP      R5,R6
   \   00000098   010000AA           BGE      ??_AddPosition_6
    222              EDIT_SetValue(hObj, NewValue);
   \                     ??_AddPosition_5:
   \   0000009C   0610A0E1           MOV      R1,R6
   \   000000A0   ........           BL       EDIT_SetValue
    223            }
    224            //
    225            // In case of old value == 0 and new value != 0 the cursor position needs to be adjusted
    226            //
    227            if (pObj->Flags && GUI_EDIT_SIGNED) {
   \                     ??_AddPosition_6:
   \   000000A4   5610D4E5           LDRB     R1,[R4, #+86]
   \   000000A8   4C0094E5           LDR      R0,[R4, #+76]
   \   000000AC   000051E3           CMP      R1,#+0
   \   000000B0   0D00000A           BEQ      ??_AddPosition_7
    228              if ((OldValue == 0) && (NewValue != 0) && (pObj->CursorPos < (pObj->MaxLen - 1))) {
   \   000000B4   000055E3           CMP      R5,#+0
   \   000000B8   0700001A           BNE      ??_AddPosition_8
   \   000000BC   000056E3           CMP      R6,#+0
   \   000000C0   0900000A           BEQ      ??_AddPosition_7
   \   000000C4   F813D4E1           LDRSH    R1,[R4, #+56]
   \   000000C8   011041E2           SUB      R1,R1,#+1
   \   000000CC   010050E1           CMP      R0,R1
   \   000000D0   050000AA           BGE      ??_AddPosition_7
    229                pObj->CursorPos++;
   \   000000D4   010080E2           ADD      R0,R0,#+1
   \   000000D8   030000EA           B        ??_AddPosition_7
    230              }
    231              if ((OldValue != 0) && (NewValue == 0) && (pObj->CursorPos > 0)) {
   \                     ??_AddPosition_8:
   \   000000DC   000056E3           CMP      R6,#+0
   \   000000E0   0100001A           BNE      ??_AddPosition_7
   \   000000E4   010050E3           CMP      R0,#+1
    232                pObj->CursorPos--;
   \   000000E8   010040A2           SUBGE    R0,R0,#+1
   \                     ??_AddPosition_7:
   \   000000EC   4C0084E5           STR      R0,[R4, #+76]
    233              }
    234            }
    235          }
   \   000000F0   7080BDE8           POP      {R4-R6,PC}       ;; return
    236          #endif
    237          
    238          /*********************************************************************
    239          *
    240          *             Handle input
    241          *
    242          **********************************************************************
    243          */
    244          /*********************************************************************
    245          *
    246          *       _AddKeyDec
    247          */

   \                                 In section .text, align 4, keep-with-next
    248          static void _AddKeyDec(EDIT_Handle hObj, int Key) {
   \                     _AddKeyDec:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
    249            char c;
    250            EDIT_Obj * pObj;
    251            pObj = EDIT_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0050B0E1           MOVS     R5,R0
    252            if (pObj) {
   \   00000014   3200000A           BEQ      ??_AddKeyDec_1
    253              switch (Key) {
   \   00000018   100046E2           SUB      R0,R6,#+16
   \   0000001C   1D0050E3           CMP      R0,#+29
   \   00000020   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??_AddKeyDec_0:
   \   00000024   7000008A           BHI      ??_AddKeyDec_2
   \   00000028   5F0000EA           B        ??_AddKeyDec_3
   \   0000002C   420000EA           B        ??_AddKeyDec_4
   \   00000030   380000EA           B        ??_AddKeyDec_5
   \   00000034   540000EA           B        ??_AddKeyDec_6
   \   00000038   6B0000EA           B        ??_AddKeyDec_2
   \   0000003C   6A0000EA           B        ??_AddKeyDec_2
   \   00000040   690000EA           B        ??_AddKeyDec_2
   \   00000044   680000EA           B        ??_AddKeyDec_2
   \   00000048   670000EA           B        ??_AddKeyDec_2
   \   0000004C   660000EA           B        ??_AddKeyDec_2
   \   00000050   650000EA           B        ??_AddKeyDec_2
   \   00000054   640000EA           B        ??_AddKeyDec_2
   \   00000058   630000EA           B        ??_AddKeyDec_2
   \   0000005C   620000EA           B        ??_AddKeyDec_2
   \   00000060   610000EA           B        ??_AddKeyDec_2
   \   00000064   600000EA           B        ??_AddKeyDec_2
   \   00000068   5F0000EA           B        ??_AddKeyDec_2
   \   0000006C   5E0000EA           B        ??_AddKeyDec_2
   \   00000070   5D0000EA           B        ??_AddKeyDec_2
   \   00000074   5C0000EA           B        ??_AddKeyDec_2
   \   00000078   5B0000EA           B        ??_AddKeyDec_2
   \   0000007C   5A0000EA           B        ??_AddKeyDec_2
   \   00000080   590000EA           B        ??_AddKeyDec_2
   \   00000084   580000EA           B        ??_AddKeyDec_2
   \   00000088   570000EA           B        ??_AddKeyDec_2
   \   0000008C   560000EA           B        ??_AddKeyDec_2
   \   00000090   550000EA           B        ??_AddKeyDec_2
   \   00000094   010000EA           B        ??_AddKeyDec_7
   \   00000098   530000EA           B        ??_AddKeyDec_2
   \   0000009C   140000EA           B        ??_AddKeyDec_8
    254              case '+':
    255                if (pObj->CursorPos == 0) {
   \                     ??_AddKeyDec_7:
   \   000000A0   4C0095E5           LDR      R0,[R5, #+76]
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0D00001A           BNE      ??_AddKeyDec_1
    256                  _MakePositive(pObj, hObj);
   \   000000AC   480095E5           LDR      R0,[R5, #+72]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0200005A           BPL      ??_AddKeyDec_9
   \   000000B8   001060E2           RSB      R1,R0,#+0
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           BL       EDIT_SetValue
    257                  _IncrementCursor(hObj, pObj);
   \                     ??_AddKeyDec_9:
   \   000000C4   4C0095E5           LDR      R0,[R5, #+76]
   \   000000C8   011080E2           ADD      R1,R0,#+1
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   ........           BL       EDIT__SetCursorPos
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           BL       EDIT__GetCurrentChar
   \   000000DC   2E0050E3           CMP      R0,#+46
   \   000000E0   5700000A           BEQ      ??_AddKeyDec_10
    258                }
    259                break;
    260              case '-':
    261                if (pObj->CursorPos == 0) {
    262                  _MakeNegative(pObj, hObj);
    263                  _IncrementCursor(hObj, pObj);
    264                }
    265                break;
    266              #if EDIT_DEC_DIGITONLY
    267                case GUI_KEY_UP:
    268                  c = EDIT__GetCurrentChar(pObj);
    269                  if ((c == '-') || (c == '+')) {
    270                    _SwapSign(pObj, hObj);
    271                  } else {
    272                    int Digit = _GetCurrentDigit(pObj) + 1;
    273                    if (Digit > 9)
    274                      Digit = 0;
    275                    _EditDec(Digit, pObj, hObj);
    276                  }
    277                  break;
    278                case GUI_KEY_DOWN:
    279                  c = EDIT__GetCurrentChar(pObj);
    280                  if ((c == '-') || (c == '+')) {
    281                    _SwapSign(pObj, hObj);
    282                  } else {
    283                    int Digit = _GetCurrentDigit(pObj) - 1;
    284                    if (Digit < 0)
    285                      Digit = 9;
    286                    _EditDec(Digit, pObj, hObj);
    287                  }
    288                  break;
    289              #else
    290                case GUI_KEY_UP:
    291                  c = EDIT__GetCurrentChar(pObj);
    292                  if ((c == '-') || (c == '+')) {
    293                    _SwapSign(pObj, hObj);
    294                  } else {
    295                    _AddPosition(pObj, hObj, 1);
    296                  }
    297                  break;
    298                case GUI_KEY_DOWN:
    299                  c = EDIT__GetCurrentChar(pObj);
    300                  if ((c == '-') || (c == '+')) {
    301                    _SwapSign(pObj, hObj);
    302                  } else {
    303                    _AddPosition(pObj, hObj, -1);
    304                  }
    305                  break;
    306              #endif
    307              case GUI_KEY_RIGHT:
    308                _IncrementCursor(hObj, pObj);
    309                break;
    310              case GUI_KEY_LEFT:
    311                EDIT__SetCursorPos(hObj, pObj->CursorPos - 1);
    312                if (EDIT__GetCurrentChar(pObj) == '.') {
    313                  if (pObj->CursorPos > 0) {
    314                    EDIT__SetCursorPos(hObj, pObj->CursorPos - 1);
    315                  } else {
    316                    EDIT__SetCursorPos(hObj, pObj->CursorPos + 1);
    317                  }
    318                }
    319                break;
    320              default:
    321                {
    322                  c = EDIT__GetCurrentChar(pObj);
    323                  if ((c != '-') && (c != '+')) {
    324                    int Digit = _DecChar2Int(Key);
    325                    if (Digit >= 0) {
    326                      _EditDec(Digit, pObj, hObj);
    327                      _IncrementCursor(hObj, pObj);
    328                    }
    329                  }
    330                }
    331                break;
    332              }
    333            }
    334            GUI_UNLOCK_H(pObj);
   \                     ??_AddKeyDec_1:
   \   000000E4   ........           BL       GUI_ALLOC_UnlockH
    335            _UpdateBuffer(hObj);
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   7040BDE8           POP      {R4-R6,LR}
   \   000000F0   ........           B        _UpdateBuffer    ;; tailcall
   \                     ??_AddKeyDec_8:
   \   000000F4   4C0095E5           LDR      R0,[R5, #+76]
   \   000000F8   000050E3           CMP      R0,#+0
   \   000000FC   F8FFFF1A           BNE      ??_AddKeyDec_1
   \   00000100   480095E5           LDR      R0,[R5, #+72]
   \   00000104   010050E3           CMP      R0,#+1
   \   00000108   020000BA           BLT      ??_AddKeyDec_5
   \   0000010C   001060E2           RSB      R1,R0,#+0
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   ........           BL       EDIT_SetValue
   \                     ??_AddKeyDec_5:
   \   00000118   4C0095E5           LDR      R0,[R5, #+76]
   \   0000011C   011080E2           ADD      R1,R0,#+1
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       EDIT__SetCursorPos
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   ........           BL       EDIT__GetCurrentChar
   \   00000130   2E0050E3           CMP      R0,#+46
   \   00000134   EAFFFF1A           BNE      ??_AddKeyDec_1
   \   00000138   410000EA           B        ??_AddKeyDec_10
   \                     ??_AddKeyDec_4:
   \   0000013C   0500A0E1           MOV      R0,R5
   \   00000140   ........           BL       EDIT__GetCurrentChar
   \   00000144   FF0000E2           AND      R0,R0,#0xFF
   \   00000148   2D0050E3           CMP      R0,#+45
   \   0000014C   2B005013           CMPNE    R0,#+43
   \   00000150   0800001A           BNE      ??_AddKeyDec_11
   \                     ??_AddKeyDec_12:
   \   00000154   480095E5           LDR      R0,[R5, #+72]
   \   00000158   010050E3           CMP      R0,#+1
   \   0000015C   010000AA           BGE      ??_AddKeyDec_13
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   DEFFFF5A           BPL      ??_AddKeyDec_1
   \                     ??_AddKeyDec_13:
   \   00000168   001060E2           RSB      R1,R0,#+0
   \   0000016C   0400A0E1           MOV      R0,R4
   \   00000170   ........           BL       EDIT_SetValue
   \   00000174   DAFFFFEA           B        ??_AddKeyDec_1
   \                     ??_AddKeyDec_11:
   \   00000178   0120A0E3           MOV      R2,#+1
   \                     ??_AddKeyDec_14:
   \   0000017C   0410A0E1           MOV      R1,R4
   \   00000180   0500A0E1           MOV      R0,R5
   \   00000184   ........           BL       _AddPosition
   \   00000188   D5FFFFEA           B        ??_AddKeyDec_1
   \                     ??_AddKeyDec_6:
   \   0000018C   0500A0E1           MOV      R0,R5
   \   00000190   ........           BL       EDIT__GetCurrentChar
   \   00000194   FF0000E2           AND      R0,R0,#0xFF
   \   00000198   2D0050E3           CMP      R0,#+45
   \   0000019C   2B005013           CMPNE    R0,#+43
   \   000001A0   EBFFFF0A           BEQ      ??_AddKeyDec_12
   \   000001A4   0020E0E3           MVN      R2,#+0
   \   000001A8   F3FFFFEA           B        ??_AddKeyDec_14
   \                     ??_AddKeyDec_3:
   \   000001AC   4C0095E5           LDR      R0,[R5, #+76]
   \   000001B0   011040E2           SUB      R1,R0,#+1
   \   000001B4   0400A0E1           MOV      R0,R4
   \   000001B8   ........           BL       EDIT__SetCursorPos
   \   000001BC   0500A0E1           MOV      R0,R5
   \   000001C0   ........           BL       EDIT__GetCurrentChar
   \   000001C4   2E0050E3           CMP      R0,#+46
   \   000001C8   C5FFFF1A           BNE      ??_AddKeyDec_1
   \   000001CC   4C0095E5           LDR      R0,[R5, #+76]
   \   000001D0   010050E3           CMP      R0,#+1
   \   000001D4   1F0000BA           BLT      ??_AddKeyDec_15
   \                     ??_AddKeyDec_16:
   \   000001D8   4C0095E5           LDR      R0,[R5, #+76]
   \   000001DC   011040E2           SUB      R1,R0,#+1
   \                     ??_AddKeyDec_17:
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   ........           BL       EDIT__SetCursorPos
   \   000001E8   BDFFFFEA           B        ??_AddKeyDec_1
   \                     ??_AddKeyDec_2:
   \   000001EC   0500A0E1           MOV      R0,R5
   \   000001F0   ........           BL       EDIT__GetCurrentChar
   \   000001F4   FF0000E2           AND      R0,R0,#0xFF
   \   000001F8   2D0050E3           CMP      R0,#+45
   \   000001FC   2B005013           CMPNE    R0,#+43
   \   00000200   B7FFFF0A           BEQ      ??_AddKeyDec_1
   \   00000204   300046E2           SUB      R0,R6,#+48
   \   00000208   0A0050E3           CMP      R0,#+10
   \   0000020C   B4FFFF2A           BCS      ??_AddKeyDec_1
   \   00000210   300056E2           SUBS     R0,R6,#+48
   \   00000214   B2FFFF4A           BMI      ??_AddKeyDec_1
   \   00000218   0420A0E1           MOV      R2,R4
   \   0000021C   0510A0E1           MOV      R1,R5
   \   00000220   ........           BL       _EditDec
   \   00000224   4C0095E5           LDR      R0,[R5, #+76]
   \   00000228   011080E2           ADD      R1,R0,#+1
   \   0000022C   0400A0E1           MOV      R0,R4
   \   00000230   ........           BL       EDIT__SetCursorPos
   \   00000234   0500A0E1           MOV      R0,R5
   \   00000238   ........           BL       EDIT__GetCurrentChar
   \   0000023C   2E0050E3           CMP      R0,#+46
   \   00000240   A7FFFF1A           BNE      ??_AddKeyDec_1
   \                     ??_AddKeyDec_10:
   \   00000244   F813D5E1           LDRSH    R1,[R5, #+56]
   \   00000248   4C0095E5           LDR      R0,[R5, #+76]
   \   0000024C   011041E2           SUB      R1,R1,#+1
   \   00000250   010050E1           CMP      R0,R1
   \   00000254   DFFFFFAA           BGE      ??_AddKeyDec_16
   \                     ??_AddKeyDec_15:
   \   00000258   4C0095E5           LDR      R0,[R5, #+76]
   \   0000025C   011080E2           ADD      R1,R0,#+1
   \   00000260   DEFFFFEA           B        ??_AddKeyDec_17
    336          }
    337          
    338          /*********************************************************************
    339          *
    340          *             Exported routines
    341          *
    342          **********************************************************************
    343          */
    344          /*********************************************************************
    345          *
    346          *       EDIT_SetDecMode
    347          */

   \                                 In section .text, align 4, keep-with-next
    348          void EDIT_SetDecMode(EDIT_Handle hEdit, I32 Value, I32 Min, I32 Max, int Shift, U8 Flags) {
   \                     EDIT_SetDecMode:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0170A0E1           MOV      R7,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   20809DE5           LDR      R8,[SP, #+32]
   \   00000018   2490DDE5           LDRB     R9,[SP, #+36]
    349            EDIT_Obj * pObj;
    350            WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
    351            if (hEdit) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   1C00000A           BEQ      ??EDIT_SetDecMode_0
    352              pObj = EDIT_LOCK_H(hEdit);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       GUI_ALLOC_LockH
   \   00000030   00A0A0E1           MOV      R10,R0
    353              pObj->pfAddKeyEx    = _AddKeyDec;
   \   00000034   ........           LDR      R0,??DataTable1_1
   \   00000038   58008AE5           STR      R0,[R10, #+88]
    354              pObj->pfUpdateBuffer= _UpdateBuffer;
   \   0000003C   ........           LDR      R0,??DataTable1_2
   \   00000040   5C008AE5           STR      R0,[R10, #+92]
    355              pObj->CurrentValue  = Value;
   \   00000044   48708AE5           STR      R7,[R10, #+72]
    356              pObj->CursorPos     = 0;
   \   00000048   0070A0E3           MOV      R7,#+0
   \   0000004C   4C708AE5           STR      R7,[R10, #+76]
    357              pObj->Min           = Min;
   \   00000050   3C508AE5           STR      R5,[R10, #+60]
    358              pObj->Max           = Max;
   \   00000054   40608AE5           STR      R6,[R10, #+64]
    359              pObj->NumDecs       = Shift;
   \   00000058   4480CAE5           STRB     R8,[R10, #+68]
    360              pObj->Flags         = Flags;
   \   0000005C   5690CAE5           STRB     R9,[R10, #+86]
    361              pObj->EditMode      = GUI_EDIT_MODE_OVERWRITE;
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   5400CAE5           STRB     R0,[R10, #+84]
    362              _UpdateBuffer(hEdit);
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       _UpdateBuffer
    363              if (EDIT__GetCurrentChar(pObj) == '.') {
   \   00000070   0A00A0E1           MOV      R0,R10
   \   00000074   ........           BL       EDIT__GetCurrentChar
   \   00000078   2E0050E3           CMP      R0,#+46
   \   0000007C   0300001A           BNE      ??EDIT_SetDecMode_1
    364                EDIT__SetCursorPos(hEdit, pObj->CursorPos + 1);
   \   00000080   4C009AE5           LDR      R0,[R10, #+76]
   \   00000084   011080E2           ADD      R1,R0,#+1
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       EDIT__SetCursorPos
    365              }
    366              GUI_UNLOCK_H(pObj);
   \                     ??EDIT_SetDecMode_1:
   \   00000090   ........           BL       GUI_ALLOC_UnlockH
    367              WM_Invalidate(hEdit);
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       WM_InvalidateWindow
    368            }
    369            WM_UNLOCK();
   \                     ??EDIT_SetDecMode_0:
   \   0000009C   F047BDE8           POP      {R4-R10,LR}
   \   000000A0   ........           B        GUI_Unlock       ;; tailcall
    370          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Pow10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     _AddKeyDec

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     _UpdateBuffer
    371          
    372          #else  /* avoid empty object files */
    373          
    374          void EditDec_C(void);
    375          void EditDec_C(void){}
    376          
    377          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     EDIT_SetDecMode     32
     _AddKeyDec          16
     _AddPosition        16
     _EditDec            40
     _UpdateBuffer       24


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     _UpdateBuffer    308
     _EditDec         188
     _AddPosition     244
     _AddKeyDec       612
     EDIT_SetDecMode  164
     ??DataTable1       4
     ??DataTable1_1     4
     ??DataTable1_2     4

 
 1 528 bytes in section .text
 
 1 528 bytes of CODE memory

Errors: none
Warnings: none
