###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:00 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\TEXT_SetText.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\TEXT_SetText.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\TE #
#                    XT_SetText.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\TEX #
#                    T_SetText.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\TEXT_SetText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : TEXT_SetText.c
     19          Purpose     : Implementation of TEXT_SetText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include "TEXT_Private.h"
     26          #include "GUI_Private.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *       Public code
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       TEXT_SetText
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          void TEXT_SetText(TEXT_Handle hObj, const char * s) {
   \                     TEXT_SetText:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     41            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1400000A           BEQ      ??TEXT_SetText_0
     42              int r;
     43              TEXT_Obj * pObj;
     44              WM_HMEM hpText;
     45              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     46              pObj = TEXT_LOCK_H(hObj);
     47              hpText = pObj->hpText;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   440090E5           LDR      R0,[R0, #+68]
   \   00000028   00008DE5           STR      R0,[SP, #+0]
     48              GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
     49              r = GUI__SetText(&hpText, s);
     50              if (r) {
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   ........           BL       GUI__SetText
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0800000A           BEQ      ??TEXT_SetText_1
     51                pObj = TEXT_LOCK_H(hObj);
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       GUI_ALLOC_LockH
     52                if (pObj->hpText != hpText) {
   \   0000004C   441090E5           LDR      R1,[R0, #+68]
   \   00000050   00209DE5           LDR      R2,[SP, #+0]
   \   00000054   020051E1           CMP      R1,R2
     53                  pObj->hpText = hpText;
   \   00000058   44208015           STRNE    R2,[R0, #+68]
     54                }
     55                GUI_UNLOCK_H(pObj);
   \   0000005C   ........           BL       GUI_ALLOC_UnlockH
     56                WM_Invalidate(hObj);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WM_InvalidateWindow
     57              }
     58              WM_UNLOCK();
   \                     ??TEXT_SetText_1:
   \   00000068   ........           BL       GUI_Unlock
     59            }
     60          }
   \                     ??TEXT_SetText_0:
   \   0000006C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
     61          
     62          #else  /* avoid empty object files */
     63          
     64          void TEXT_SetText_c(void);
     65          void TEXT_SetText_c(void){}
     66          
     67          #endif  /* #if GUI_WINSUPPORT */
     68          
     69          

   Maximum stack usage in bytes:

     Function     .cstack
     --------     -------
     TEXT_SetText     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     TEXT_SetText    116

 
 116 bytes in section .text
 
 116 bytes of CODE memory

Errors: none
Warnings: none
