###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:05 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Time.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Time.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_Time.lst                                               #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _Time.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Time.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_Time.c
     19          Purpose     : Time related routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _Delay
     34          */
     35          static void _Delay(int Period) {
     36          #if GUI_OS
     37            unsigned LockCnt;
     38            unsigned i;
     39          
     40            GUI_LOCK();
     41            LockCnt = GUITASK__EntranceCnt;
     42            /*
     43             * Reset lock count
     44             */
     45            GUI_ALLOC_Lock();     /* Memory lock */
     46            for (i = LockCnt; i; i--) {
     47              GUI_Unlock();       /* Dec task lock */
     48            }
     49          #endif
     50            /*
     51             * Wait a while
     52             */
     53            GUI_X_Delay(Period);
     54          #if GUI_OS
     55            /*
     56             * Restore lock count
     57             */
     58            for (i = LockCnt; i; i--) {
     59              GUI_Lock();         /* Inc task lock */
     60            }
     61            GUI_ALLOC_Unlock()  ; /* Memory unlock */
     62            GUI_UNLOCK();
     63          #endif
     64          }
     65          
     66          /*********************************************************************
     67          *
     68          *       Public code
     69          *
     70          **********************************************************************
     71          */
     72          /*********************************************************************
     73          *
     74          *       GUI_GetTime
     75          */

   \                                 In section .text, align 4, keep-with-next
     76          int GUI_GetTime(void) {
     77            return GUI_X_GetTime();
   \                     GUI_GetTime:
   \   00000000   ........           B        GUI_X_GetTime    ;; tailcall
     78          }
     79          
     80          /*********************************************************************
     81          *
     82          *       GUI_Delay
     83          */

   \                                 In section .text, align 4, keep-with-next
     84          void GUI_Delay(int Period) {
   \                     GUI_Delay:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     85            int EndTime;
     86            int tRem; /* remaining Time */
     87            EndTime = GUI_GetTime() + Period;
   \   00000008   ........           BL       GUI_X_GetTime
   \   0000000C   004084E0           ADD      R4,R4,R0
   \   00000010   ........           LDR      R5,??DataTable0
   \   00000014   100000EA           B        ??GUI_Delay_0
     88            while (tRem = EndTime - GUI_GetTime(), tRem > 0) {
     89              GUI_Exec();
     90              _Delay((tRem > 5) ? 5 : tRem);
   \                     ??GUI_Delay_1:
   \   00000018   ........           BL       GUI_Lock
   \   0000001C   007095E5           LDR      R7,[R5, #+0]
   \   00000020   ........           BL       GUI_ALLOC_Lock
   \   00000024   0780B0E1           MOVS     R8,R7
   \   00000028   0200000A           BEQ      ??GUI_Delay_2
   \                     ??GUI_Delay_3:
   \   0000002C   ........           BL       GUI_Unlock
   \   00000030   018058E2           SUBS     R8,R8,#+1
   \   00000034   FCFFFF1A           BNE      ??GUI_Delay_3
   \                     ??GUI_Delay_2:
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   ........           BL       GUI_X_Delay
   \   00000040   000057E3           CMP      R7,#+0
   \   00000044   0200000A           BEQ      ??GUI_Delay_4
   \                     ??GUI_Delay_5:
   \   00000048   ........           BL       GUI_Lock
   \   0000004C   017057E2           SUBS     R7,R7,#+1
   \   00000050   FCFFFF1A           BNE      ??GUI_Delay_5
   \                     ??GUI_Delay_4:
   \   00000054   ........           BL       GUI_ALLOC_Unlock
   \   00000058   ........           BL       GUI_Unlock
   \                     ??GUI_Delay_0:
   \   0000005C   ........           BL       GUI_X_GetTime
   \   00000060   006044E0           SUB      R6,R4,R0
   \   00000064   010056E3           CMP      R6,#+1
   \   00000068   040000BA           BLT      ??GUI_Delay_6
   \   0000006C   ........           BL       GUI_Exec
   \   00000070   060056E3           CMP      R6,#+6
   \   00000074   E7FFFFBA           BLT      ??GUI_Delay_1
   \   00000078   0560A0E3           MOV      R6,#+5
   \   0000007C   E5FFFFEA           B        ??GUI_Delay_1
     91            }
     92          }
   \                     ??GUI_Delay_6:
   \   00000080   F081BDE8           POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GUITASK__EntranceCnt
     93          
     94          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     GUI_Delay       24
     GUI_GetTime      8


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_GetTime       4
     GUI_Delay       132
     ??DataTable0      4

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
