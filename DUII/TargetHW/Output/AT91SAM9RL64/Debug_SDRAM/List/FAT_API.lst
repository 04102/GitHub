###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:05 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FAT_API.c                            #
#    Command line =  C:\DUII\TargetHW\FS\FAT_API.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FA #
#                    T_API.lst                                                #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FAT #
#                    _API.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FAT_API.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FAT_API.c
     19          Purpose     : FAT File System Layer function table
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *             #include Section
     26          *
     27          **********************************************************************
     28          */
     29          
     30          #include "FAT.h"
     31          #include "FAT_Intern.h"
     32          
     33          #if FS_SUPPORT_MULTIPLE_FS
     34          /*********************************************************************
     35          *
     36          *       Public const
     37          *
     38          **********************************************************************
     39          */
     40          /*********************************************************************
     41          *
     42          *       FS_FAT_API
     43          *
     44          *  Description:
     45          *    This structure is used to allow to use different file system types
     46          *    such as FAT and EFS.
     47          *    It contains all API functions that are used by the public API.
     48          */
     49          const FS_FS_API FS_FAT_API = {
     50            &FS_FAT_CheckBPB,
     51            &FS_FAT_Open,
     52            &FS_FAT_Close,
     53            &FS_FAT_Read,
     54            &FS_FAT_Write,
     55            &FS_FAT_Format,
     56            &FS_FAT_OpenDir,
     57            &FS_FAT_CloseDir,
     58            &FS_FAT_ReadDir,
     59            &FS_FAT_RemoveDir,
     60            &FS_FAT_CreateDir,
     61            &FS_FAT_Rename,
     62            &FS_FAT_Move,
     63            &FS_FAT_SetDirEntryInfo,
     64            &FS_FAT_GetDirEntryInfo,
     65            &FS_FAT_SetEndOfFile,
     66            &FS_FAT_Clean,
     67            &FS_FAT_GetDiskInfo,
     68            &FS_FAT_GetVolumeLabel,
     69            &FS_FAT_SetVolumeLabel,
     70            &FS_FAT_CreateJournalFile,
     71            &FS_FAT_OpenJournalFile,
     72            &FS_FAT_GetIndexOfLastSector,
     73            &FS_FAT__CheckDisk
     74          
     75          };
     76          #else
     77            void FAT_API_c(void);

   \                                 In section .text, align 4, keep-with-next
     78            void FAT_API_c(void){}
   \                     FAT_API_c:
   \   00000000   1EFF2FE1           BX       LR               ;; return
     79          #endif
     80          
     81          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     FAT_API_c      0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     FAT_API_c         4

 
 4 bytes in section .text
 
 4 bytes of CODE memory

Errors: none
Warnings: none
