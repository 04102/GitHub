###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:14 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WIDGET_SetWidth.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WIDGET_SetWidth.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WI #
#                    DGET_SetWidth.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WID #
#                    GET_SetWidth.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WIDGET_SetWidth.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WIDGET_SetWidth.c
     19          Purpose     : Implementation of WIDGET_SetWidth
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          
     26          #include "WIDGET.h"
     27          #include "GUI_Debug.h"
     28          #include "GUI.h"
     29          #include "GUI_Private.h"
     30          #include "WM_Intern.h"
     31          
     32          #if GUI_WINSUPPORT
     33          
     34          /*********************************************************************
     35          *
     36          *       Public routines
     37          *
     38          **********************************************************************
     39          */
     40          /*********************************************************************
     41          *
     42          *       WIDGET_SetWidth
     43          *
     44          * Function:
     45          *   Set width of the given widget. Width can be X-Size or Y-Size,
     46          *   depending on if the widget is rotated.
     47          */

   \                                 In section .text, align 4, keep-with-next
     48          int WIDGET_SetWidth(WM_HWIN hObj, int Width) {
   \                     WIDGET_SetWidth:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     49            WIDGET * pWidget;
     50            U16 State;
     51            int r = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
     52            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??WIDGET_SetWidth_0
     53              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     54              pWidget = WIDGET_LOCK(hObj);
     55              State = pWidget->State;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   B263D0E1           LDRH     R6,[R0, #+50]
     56              GUI_UNLOCK_H(pWidget);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     57              if (State & WIDGET_STATE_VERTICAL) {
   \   0000002C   080016E3           TST      R6,#0x8
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   0100000A           BEQ      ??WIDGET_SetWidth_1
     58                r = WM_SetXSize(hObj, Width);
   \   0000003C   ........           BL       WM_SetXSize
   \   00000040   000000EA           B        ??WIDGET_SetWidth_2
     59              } else {
     60                r = WM_SetYSize(hObj, Width);
   \                     ??WIDGET_SetWidth_1:
   \   00000044   ........           BL       WM_SetYSize
   \                     ??WIDGET_SetWidth_2:
   \   00000048   0060A0E1           MOV      R6,R0
     61              }
     62              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
     63            }
     64            return r;
   \                     ??WIDGET_SetWidth_0:
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   7080BDE8           POP      {R4-R6,PC}       ;; return
     65          }
     66          
     67          
     68          #else                            /* Avoid problems with empty object modules */
     69            void WIDGET_SetWidth_C(void) {}
     70          #endif /* GUI_WINSUPPORT */
     71          
     72          
     73          
     74          

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     WIDGET_SetWidth     16


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WIDGET_SetWidth   88

 
 88 bytes in section .text
 
 88 bytes of CODE memory

Errors: none
Warnings: none
