###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:43 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\Archive.c                                   #
#    Command line =  C:\DUII\DUII\Archive.c -D DEBUG=1 -D SDRAM_TARGET=1 -D   #
#                    USB_IS_HIGH_SPEED -D XIGNORE_TEMPERATURE -D              #
#                    BUILD_DEBUG_PORT -D PROFILER -lCN                        #
#                    C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\   #
#                    -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\ #
#                     --debug --endian=little --cpu=ARM926EJ-S -e --fpu=None  #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Ar #
#                    chive.lst                                                #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Arc #
#                    hive.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\Archive.c
      1          // Old Session File Archive
      2          
      3          // alternate / complementary ideas
      4          //		should have some hysteresis so that if user has 110 files under 6 mo old, it does not run each time
      5          //		could archive all files older than 6 months. if number still over 100, try 5 mo, 4 mo, etc. until files < 80
      6          //		could delete small race files (<10K) (must be careful with Drag and AutoX files)
      7          //		could have multiple archive folders for Race, Drive, AutoX etc. I don't think we want to do this.
      8          //
      9          // Files in MySessions will be moved to Archive folder for following reasons
     10          // 1. file older than a certain age
     11          // 2. file is not a .tqm file
     12          // 3. file does not begin with a 4 digit number (or date in the form of YYYY-MM-DD)
     13          
     14          
     15          #include <stdlib.h>
     16          #include <stdio.h>
     17          #include "GUI.h"
     18          #include "DUII.h"
     19          #include "commondefs.h"
     20          #include "GeneralConfig.h"
     21          #include "FlashReadWrite.h"
     22          #include "Archive.h"
     23          #include "Utilities.h"
     24          
     25          #if	_WINDOWS
     26          #include "..\Application\dirent.h"
     27          #else
     28          #include "FS.h"
     29          #endif
     30          
     31          //
     32          // Local prototypes
     33          //
     34          int ArchiveSessionsPopup(void);
     35          int compare(const void *a, const void *b);
     36          int UserPressedCancel(void);
     37          void ArchiveSessionsCallback(WM_MESSAGE * pMsg);
     38          
     39          #if	_WINDOWS
     40          int MoveThisFile(WIN32_FIND_DATA *pFileData);
     41          int FileIsNotTQMFile(WIN32_FIND_DATA *pFileData);
     42          #else
     43          int MoveThisFile(FS_FIND_DATA *pFileData);
     44          int FileIsNotTQMFile(FS_FIND_DATA *pFileData);
     45          #endif
     46          
     47          //
     48          // External prototypes
     49          //
     50          extern void RepaintSplash(void);		// from DUII_Main.c
     51          extern int popupTitleTextColor;			// from DUII_Main.c
     52          extern void CreateProgressBar( PROGBAR_Handle *hProgBar, int maxval);
     53          
     54          //
     55          // Local variables
     56          //

   \                                 In section .bss, align 4
     57          GUI_HWIN hArchivePopup;
   \                     hArchivePopup:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     58          TEXT_Handle hText1, hText2, hText3;
   \                     hText1:
   \   00000000                      DS8 4
   \                     hText2:
   \   00000004                      DS8 4
   \                     hText3:
   \   00000008                      DS8 4
     59          
     60          //
     61          // Local defines
     62          //
     63          #define	ABSOLUTE_MAX_FILES			500
     64          #define	MAX_FILES_BEFORE_ARCHIVING	120		// archive when number of files > than this
     65          #define CUTOFF_LIMIT				50		// number of files to leave after archiving
     66          
     67          #ifdef _WINDOWS
     68          
     69          const char archiveDir[] = "..\\Archive";
     70          
     71          void ArchiveSessions(void)
     72          {
     73          	int count, index, total;
     74          	PROGBAR_Handle hProgBar;
     75          	HANDLE fh;
     76          	WIN32_FIND_DATA FindFileData;
     77          	FILETIME cutoffDate, DateList[ABSOLUTE_MAX_FILES];
     78          
     79          	// Fill list with dates of all files
     80          	count = 0;
     81          
     82          	if (SetCurrentDirectory(MY_SESSIONS_PATH))
     83          	{
     84          		if ((fh = FindFirstFile("*.*", &FindFileData)) != INVALID_HANDLE_VALUE)
     85          		{
     86          			DateList[count] = FindFileData.ftLastWriteTime;
     87          			count = 1;
     88          
     89          			while (FindNextFile(fh, &FindFileData) && (count < ABSOLUTE_MAX_FILES))
     90          			{
     91          				DateList[count] = FindFileData.ftLastWriteTime;
     92          				count++;
     93          			}
     94          		}
     95          		FindClose(fh);
     96          	}
     97          
     98          	// If not enough files to archive - don't do anything
     99          	if (count < MAX_FILES_BEFORE_ARCHIVING)
    100          		goto Exit_1;
    101          
    102          	// Ask if the user would like to archive now
    103          	if (!ArchiveSessionsPopup())
    104          		goto Exit_2;
    105          
    106          	// Sort list of dates
    107          	qsort((void *)DateList, count, sizeof(FILETIME), compare);
    108          
    109          	// Determine cutoff threshold
    110          	if ((index = count / 2) > CUTOFF_LIMIT)
    111          		index = CUTOFF_LIMIT;
    112          	cutoffDate = DateList[count - index];
    113          	total = count - index;		// count will now be the loop counter for the progress bar
    114          	count = 0;
    115          
    116          	// Create Archive directory if it does not exist
    117          	if (CreateDirectory(archiveDir, NULL) == 0)
    118          		if (GetLastError() != ERROR_ALREADY_EXISTS)	// If directory already exists, continue, otherwise fatal error
    119          			goto Exit_2;
    120          
    121          	// Create the progress bar
    122          	CreateProgressBar(&hProgBar, total);							
    123          	GUI_Exec();
    124          	
    125          	// Move files older than halfway point to archive folder
    126          	if ((fh = FindFirstFile("*.*", &FindFileData)) != INVALID_HANDLE_VALUE)
    127          	{
    128          		do {
    129          			if (UserPressedCancel())		// Watch for user cancel
    130          				goto Exit_3;
    131          
    132          			if (strlen(FindFileData.cFileName) > 2)		// If a valid file name
    133          			{
    134          				if (FileIsNotTQMFile(&FindFileData))
    135          				{
    136          					if (!MoveThisFile(&FindFileData))
    137          						goto Exit_3;
    138          					else count++;
    139          				}
    140          
    141          				else if (compare(&FindFileData.ftLastWriteTime, &cutoffDate) < 0)	// Move files older (smaller) than cutoffDate
    142          				{
    143          					char scratch[50];
    144          					
    145          					// update the user
    146          					sprintf(scratch, "Moving file %d of %d", count, total);
    147          					PROGBAR_SetText(hProgBar, scratch);
    148          					PROGBAR_SetValue(hProgBar, count);
    149          					GUI_Exec();
    150          					
    151          					if (!MoveThisFile(&FindFileData))
    152          						goto Exit_3;
    153          					else count++;
    154          				}
    155          			}
    156          			else count++;		// File count still counted this
    157          
    158          		} while (FindNextFile(fh, &FindFileData));
    159          	}
    160          
    161          Exit_3:
    162          	PROGBAR_Delete(hProgBar);
    163          	FindClose(fh);
    164          
    165          Exit_2:
    166          	RepaintSplash();
    167          
    168          Exit_1:
    169          	SetCurrentDirectory("..");
    170          }
    171          
    172          //
    173          // Return true if file IS NOT a tqm file
    174          // otherwise return false
    175          //
    176          int FileIsNotTQMFile(WIN32_FIND_DATA *pFileData)
    177          {
    178          	int len;
    179          
    180          	len = strlen(pFileData->cFileName);
    181          	return (_stricmp(".tqm", pFileData->cFileName + len - 4));
    182          }
    183          
    184          //
    185          // Move this file into the archive directory
    186          // If the file already exisits or there is a tranfer error try renaming it and trying again.
    187          // Return true if successful
    188          // Return false if failure
    189          //
    190          int MoveThisFile(WIN32_FIND_DATA *pFileData)
    191          {
    192          	char destFilename[MAX_FILENAME_SIZE];
    193          
    194          	// Create destination file name
    195          	strcpy(destFilename, archiveDir);
    196          	strcat(destFilename, "\\");
    197          	strcat(destFilename, pFileData->cFileName);
    198          
    199          	// Move the file
    200          	if (MoveFile(pFileData->cFileName, destFilename) == 0)
    201          	{
    202          		if (GetLastError() == ERROR_ALREADY_EXISTS)
    203          		{
    204          			// A file of this name has already been moved
    205          			// give it a new name and copy anyway just in case
    206          			strcat(destFilename, "_2");
    207          			if (MoveFile(pFileData->cFileName, destFilename) == 0)
    208          				return false;
    209          		}
    210          		else return false;
    211          	}
    212          	return true;
    213          }
    214          
    215          int compare(const void *a, const void *b)
    216          {
    217          	ULONGLONG aLarge, bLarge;
    218          
    219          	aLarge = ((ULONGLONG)((*(FILETIME *)a).dwHighDateTime) << 32) | (*(FILETIME *)a).dwLowDateTime;
    220          	bLarge = ((ULONGLONG)((*(FILETIME *)b).dwHighDateTime) << 32) | (*(FILETIME *)b).dwLowDateTime;
    221          
    222          	if ( aLarge <  bLarge )
    223          		return -1;
    224          	if ( aLarge == bLarge )
    225          		return 0;
    226          	if ( aLarge > bLarge )
    227          		return 1;
    228          	return 0;			// just in case
    229          }
    230          
    231          #else		// Target hardware version
    232          

   \                                 In section .text, align 4, keep-with-next
    233          const char archiveDir[] = "\\Archive";
   \                     archiveDir:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   5C4172636869       DC8 92, 65, 114, 99, 104, 105, 118, 101, 0, 0
   \              76650000    
   \   0000000A   0000               DC8 0, 0
    234          

   \                                 In section .text, align 4, keep-with-next
    235          void ArchiveSessions(void)
    236          {
   \                     ArchiveSessions:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    237          	U32 cutoffDate;
    238          	int count, index, total;
    239          	FS_FIND_DATA FindFileData;
    240          	PROGBAR_Handle hProgBar;
    241          	FS_DIR *pDir;
    242          	U32 DateList[ABSOLUTE_MAX_FILES];
    243          	char sourceFilename[MAX_FILENAME_SIZE];
    244          
    245          	// Do fast pre-check for too many session files
    246          	pDir = FS_OpenDir(MY_SESSIONS_PATH);
   \   00000004   ........           LDR      R4,??DataTable17_2
   \   00000008   8FDE4DE2           SUB      SP,SP,#+2288
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   ........           BL       FS_OpenDir
   \   00000014   0050A0E1           MOV      R5,R0
    247          	count = FS_GetNumFiles(pDir);
    248          	if (count < MAX_FILES_BEFORE_ARCHIVING)
   \   00000018   ........           BL       FS_GetNumFiles
   \   0000001C   780050E3           CMP      R0,#+120
   \   00000020   020000AA           BGE      ??ArchiveSessions_0
    249          	{
    250          		FS_CloseDir(pDir);
   \                     ??ArchiveSessions_1:
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           BL       FS_CloseDir
    251          		return;
   \   0000002C   6F0000EA           B        ??ArchiveSessions_2
    252          	}
    253          	// Otherwise do full check and begin archive process
    254          
    255          	// Fill list with dates of all files
    256          	count = 0;
   \                     ??ArchiveSessions_0:
   \   00000030   0060A0E3           MOV      R6,#+0
    257          	if (FS_FindFirstFile(&FindFileData, MY_SESSIONS_PATH, sourceFilename, MAX_FILENAME_SIZE) == 0)
   \   00000034   9630A0E3           MOV      R3,#+150
   \   00000038   88208DE2           ADD      R2,SP,#+136
   \   0000003C   0410A0E1           MOV      R1,R4
   \   00000040   18008DE2           ADD      R0,SP,#+24
   \   00000044   ........           BL       FS_FindFirstFile
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0D00001A           BNE      ??ArchiveSessions_3
    258          	{
    259          		DateList[count] = FindFileData.LastWriteTime;
   \   00000050   24009DE5           LDR      R0,[SP, #+36]
    260          		count = 1;
   \   00000054   0160A0E3           MOV      R6,#+1
   \   00000058   20018DE5           STR      R0,[SP, #+288]
   \   0000005C   497F8DE2           ADD      R7,SP,#+292
   \   00000060   020000EA           B        ??ArchiveSessions_4
    261          
    262          		while (FS_FindNextFile(&FindFileData)  && (count < ABSOLUTE_MAX_FILES))
    263          		{
    264          			DateList[count] = FindFileData.LastWriteTime;
   \                     ??ArchiveSessions_5:
   \   00000064   24009DE5           LDR      R0,[SP, #+36]
    265          			count++;
   \   00000068   016086E2           ADD      R6,R6,#+1
   \   0000006C   040087E4           STR      R0,[R7], #+4
    266          		}
   \                     ??ArchiveSessions_4:
   \   00000070   18008DE2           ADD      R0,SP,#+24
   \   00000074   ........           BL       FS_FindNextFile
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0100000A           BEQ      ??ArchiveSessions_3
   \   00000080   7D0F56E3           CMP      R6,#+500
   \   00000084   F6FFFFBA           BLT      ??ArchiveSessions_5
    267          	}
    268          	FS_FindClose(&FindFileData);
   \                     ??ArchiveSessions_3:
   \   00000088   18008DE2           ADD      R0,SP,#+24
   \   0000008C   ........           BL       FS_FindClose
    269          
    270          	// If not enough files to archive - don't do anything
    271          	if (count < MAX_FILES_BEFORE_ARCHIVING)
   \   00000090   780056E3           CMP      R6,#+120
   \   00000094   E2FFFFBA           BLT      ??ArchiveSessions_1
    272          	{
    273          		FS_CloseDir(pDir);
    274          		return;
    275          	}
    276          
    277          	// Ask if the user would like to archive now
    278          	if (!ArchiveSessionsPopup())
   \   00000098   0100A0E3           MOV      R0,#+1
   \   0000009C   ........           BL       SetPopupDefaults
   \   000000A0   ........           BL       WM_GetDesktopWindow
   \   000000A4   0030A0E1           MOV      R3,R0
   \   000000A8   0A00A0E3           MOV      R0,#+10
   \   000000AC   04008DE5           STR      R0,[SP, #+4]
   \   000000B0   00008DE5           STR      R0,[SP, #+0]
   \   000000B4   ........           LDR      R2,??DataTable17_3
   \   000000B8   0310A0E3           MOV      R1,#+3
   \   000000BC   ............       ADRL     R0,??ArchiveResources
   \              ....        
   \   000000C4   ........           BL       GUI_ExecDialogBox
   \   000000C8   010050E3           CMP      R0,#+1
   \   000000CC   4400001A           BNE      ??ArchiveSessions_6
    279          		goto Exit_2;
    280          
    281          	// Sort list of dates - oldest at the top, newest at the bottom
    282          	qsort((void *)DateList, count, sizeof(U32), compare);
   \   000000D0   ........           LDR      R3,??DataTable17_4
   \   000000D4   0420A0E3           MOV      R2,#+4
   \   000000D8   0610A0E1           MOV      R1,R6
   \   000000DC   480F8DE2           ADD      R0,SP,#+288
   \   000000E0   ........           BL       qsort
    283          
    284          	// Determine cutoff threshold
    285          	if ((index = count / 2) > CUTOFF_LIMIT)
   \   000000E4   A60F86E0           ADD      R0,R6,R6, LSR #+31
   \   000000E8   C000A0E1           ASR      R0,R0,#+1
   \   000000EC   330050E3           CMP      R0,#+51
    286          		index = CUTOFF_LIMIT;
   \   000000F0   3200A0A3           MOVGE    R0,#+50
    287          	cutoffDate = DateList[count - index];
   \   000000F4   000046E0           SUB      R0,R6,R0
   \   000000F8   481F8DE2           ADD      R1,SP,#+288
   \   000000FC   007191E7           LDR      R7,[R1, +R0, LSL #+2]
    288          	total = (count - index) - 2;		// count will now be the loop counter for the progress bar _ subtract 2 for the . and .. files
   \   00000100   028040E2           SUB      R8,R0,#+2
    289          	count = 0;
   \   00000104   0060A0E3           MOV      R6,#+0
    290          	
    291          	// Create Archive directory if it does not exist
    292          	FS_MkDir(archiveDir);
   \   00000108   ............       ADRL     R0,archiveDir
   \              ....        
   \   00000110   ........           BL       FS_MkDir
    293          
    294          	// Create the progress bar
    295          	CreateProgressBar(&hProgBar, total);							
   \   00000114   0810A0E1           MOV      R1,R8
   \   00000118   08008DE2           ADD      R0,SP,#+8
   \   0000011C   ........           BL       CreateProgressBar
    296          	GUI_Exec();
   \   00000120   ........           BL       GUI_Exec
    297          
    298          	// Move files older than halfway point to archive folder
    299          	if (FS_FindFirstFile(&FindFileData, MY_SESSIONS_PATH, sourceFilename, MAX_FILENAME_SIZE) == 0)
   \   00000124   9630A0E3           MOV      R3,#+150
   \   00000128   88208DE2           ADD      R2,SP,#+136
   \   0000012C   0410A0E1           MOV      R1,R4
   \   00000130   18008DE2           ADD      R0,SP,#+24
   \   00000134   ........           BL       FS_FindFirstFile
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   2400001A           BNE      ??ArchiveSessions_7
    300          	{
    301          		do {
    302          			if (UserPressedCancel())		// Watch for user cancel
   \                     ??ArchiveSessions_8:
   \   00000140   0C008DE2           ADD      R0,SP,#+12
   \   00000144   ........           BL       GUI_TOUCH_GetState
   \   00000148   1400DDE5           LDRB     R0,[SP, #+20]
   \   0000014C   000050E3           CMP      R0,#+0
   \   00000150   0800000A           BEQ      ??ArchiveSessions_9
   \   00000154   0C009DE5           LDR      R0,[SP, #+12]
   \   00000158   AF10E0E3           MVN      R1,#+175
   \   0000015C   000081E0           ADD      R0,R1,R0
   \   00000160   7C0050E3           CMP      R0,#+124
   \   00000164   0300002A           BCS      ??ArchiveSessions_9
   \   00000168   10009DE5           LDR      R0,[SP, #+16]
   \   0000016C   600040E2           SUB      R0,R0,#+96
   \   00000170   400050E3           CMP      R0,#+64
   \   00000174   1600003A           BCC      ??ArchiveSessions_7
    303          				goto Exit_3;
    304          
    305          			if (strlen(FindFileData.sFileName) > 2)		// if a valid file name
   \                     ??ArchiveSessions_9:
   \   00000178   2C009DE5           LDR      R0,[SP, #+44]
   \   0000017C   ........           BL       strlen
   \   00000180   030050E3           CMP      R0,#+3
   \   00000184   0D00003A           BCC      ??ArchiveSessions_10
    306          			{
    307          				if (FileIsNotTQMFile(&FindFileData))
   \   00000188   2C009DE5           LDR      R0,[SP, #+44]
   \   0000018C   ........           BL       strlen
   \   00000190   2C109DE5           LDR      R1,[SP, #+44]
   \   00000194   010080E0           ADD      R0,R0,R1
   \   00000198   041040E2           SUB      R1,R0,#+4
   \   0000019C   ............       ADRL     R0,`?<Constant ".tqm">`
   \              ....        
   \   000001A4   ........           BL       kmc_stricmp
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   1100000A           BEQ      ??ArchiveSessions_11
    308          				{
    309          					if (!MoveThisFile(&FindFileData))
   \   000001B0   18008DE2           ADD      R0,SP,#+24
   \   000001B4   ........           BL       MoveThisFile
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   0400000A           BEQ      ??ArchiveSessions_7
    310          						goto Exit_3;
    311          					else count++;
   \                     ??ArchiveSessions_10:
   \   000001C0   016086E2           ADD      R6,R6,#+1
    312          				}
    313          
    314          				else if (FindFileData.LastWriteTime < cutoffDate)	// Move files older (smaller) than cutoffDate
    315          				{
    316          					char scratch[50];
    317          					
    318          					// update the user
    319          					sprintf(scratch, "Moving file %d of %d", count, total);
    320          					PROGBAR_SetText(hProgBar, scratch);
    321          					PROGBAR_SetValue(hProgBar, count);
    322          					GUI_Exec();
    323          
    324          					if (!MoveThisFile(&FindFileData))
    325          						goto Exit_3;
    326          					else count++;
    327          				}
    328          			}
    329          			else count++;		// File count still counted this
    330          		} while (FS_FindNextFile(&FindFileData));
   \                     ??ArchiveSessions_12:
   \   000001C4   18008DE2           ADD      R0,SP,#+24
   \   000001C8   ........           BL       FS_FindNextFile
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   DAFFFF1A           BNE      ??ArchiveSessions_8
    331          	}
    332          
    333          Exit_3:
    334          	PROGBAR_Delete(hProgBar);
   \                     ??ArchiveSessions_7:
   \   000001D4   08009DE5           LDR      R0,[SP, #+8]
   \   000001D8   ........           BL       WM_DeleteWindow
    335          	FS_FindClose(&FindFileData);
   \   000001DC   18008DE2           ADD      R0,SP,#+24
   \   000001E0   ........           BL       FS_FindClose
    336          
    337          Exit_2:
    338          	FS_CloseDir(pDir);
   \                     ??ArchiveSessions_6:
   \   000001E4   0500A0E1           MOV      R0,R5
   \   000001E8   ........           BL       FS_CloseDir
    339          	RepaintSplash();
   \   000001EC   ........           BL       RepaintSplash
    340          }
   \                     ??ArchiveSessions_2:
   \   000001F0   8FDE8DE2           ADD      SP,SP,#+2288     ;; stack cleaning
   \   000001F4   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??ArchiveSessions_11:
   \   000001F8   24009DE5           LDR      R0,[SP, #+36]
   \   000001FC   070050E1           CMP      R0,R7
   \   00000200   EFFFFF2A           BCS      ??ArchiveSessions_12
   \   00000204   0830A0E1           MOV      R3,R8
   \   00000208   0620A0E1           MOV      R2,R6
   \   0000020C   ............       ADRL     R1,`?<Constant "Moving file %d of %d">`
   \              ....        
   \   00000214   54008DE2           ADD      R0,SP,#+84
   \   00000218   ........           BL       sprintf
   \   0000021C   54108DE2           ADD      R1,SP,#+84
   \   00000220   08009DE5           LDR      R0,[SP, #+8]
   \   00000224   ........           BL       PROGBAR_SetText
   \   00000228   0610A0E1           MOV      R1,R6
   \   0000022C   08009DE5           LDR      R0,[SP, #+8]
   \   00000230   ........           BL       PROGBAR_SetValue
   \   00000234   ........           BL       GUI_Exec
   \   00000238   18008DE2           ADD      R0,SP,#+24
   \   0000023C   ........           BL       MoveThisFile
   \   00000240   000050E3           CMP      R0,#+0
   \   00000244   DDFFFF1A           BNE      ??ArchiveSessions_10
   \   00000248   E1FFFFEA           B        ??ArchiveSessions_7
    341          
    342          
    343          
    344          //
    345          // Return true if file IS NOT a tqm file
    346          // otherwise return false
    347          //

   \                                 In section .text, align 4, keep-with-next
    348          int FileIsNotTQMFile(FS_FIND_DATA *pFileData)
    349          {
   \                     FileIsNotTQMFile:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    350          	int len;
    351          
    352          	len = strlen(pFileData->sFileName);
   \   00000008   140094E5           LDR      R0,[R4, #+20]
   \   0000000C   ........           BL       strlen
    353          	return (kmc_stricmp(".tqm", pFileData->sFileName + len - 4));
   \   00000010   141094E5           LDR      R1,[R4, #+20]
   \   00000014   1040BDE8           POP      {R4,LR}
   \   00000018   010080E0           ADD      R0,R0,R1
   \   0000001C   041040E2           SUB      R1,R0,#+4
   \   00000020   ........           ADR      R0,`?<Constant ".tqm">`
   \   00000024   ........           B        kmc_stricmp      ;; tailcall
    354          }
    355          
    356          //
    357          // Move this file into the archive directory
    358          // If the file already exisits or there is a tranfer error try renaming it and trying again.
    359          // Return true if successful
    360          // Return false if failure
    361          //

   \                                 In section .text, align 4, keep-with-next
    362          int MoveThisFile(FS_FIND_DATA *pFileData)
    363          {
   \                     MoveThisFile:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   4DDF4DE2           SUB      SP,SP,#+308
   \   00000008   0040A0E1           MOV      R4,R0
    364          	char destFilename[MAX_FILENAME_SIZE];
    365          	char tempFilename[MAX_FILENAME_SIZE];
    366          
    367          	strcpy(destFilename, archiveDir);
   \   0000000C   ............       ADRL     R1,archiveDir
   \              ....        
   \   00000014   98008DE2           ADD      R0,SP,#+152
   \   00000018   ........           BL       strcpy
    368          	strcat(destFilename, "\\");
   \   0000001C   ........           ADR      R5,??DataTable17  ;; "\\"
   \   00000020   0510A0E1           MOV      R1,R5
   \   00000024   98008DE2           ADD      R0,SP,#+152
   \   00000028   ........           BL       strcat
    369          	strcat(destFilename, pFileData->sFileName);
   \   0000002C   141094E5           LDR      R1,[R4, #+20]
   \   00000030   98008DE2           ADD      R0,SP,#+152
   \   00000034   ........           BL       strcat
    370          	
    371          	strcpy(tempFilename, MY_SESSIONS_PATH);
   \   00000038   ........           LDR      R1,??DataTable17_2
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           BL       strcpy
    372          	strcat(tempFilename, "\\");
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           BL       strcat
    373          	strcat(tempFilename, pFileData->sFileName);
   \   00000050   141094E5           LDR      R1,[R4, #+20]
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           BL       strcat
    374          
    375          	// move the file
    376          	if (FS_Move(tempFilename, destFilename) == -1)
   \   0000005C   0040E0E3           MVN      R4,#+0
   \   00000060   98108DE2           ADD      R1,SP,#+152
   \   00000064   0D00A0E1           MOV      R0,SP
   \   00000068   ........           BL       FS_Move
   \   0000006C   040050E1           CMP      R0,R4
   \   00000070   0800001A           BNE      ??MoveThisFile_0
    377          	{
    378          		// Can't read error so just try changing the name and trying again
    379          		strcat(destFilename, "_2");
   \   00000074   ........           ADR      R1,??DataTable17_1  ;; 0x5F, 0x32, 0x00, 0x00
   \   00000078   98008DE2           ADD      R0,SP,#+152
   \   0000007C   ........           BL       strcat
    380          		if (FS_Move(tempFilename, destFilename) == -1)
   \   00000080   98108DE2           ADD      R1,SP,#+152
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           BL       FS_Move
   \   0000008C   040050E1           CMP      R0,R4
    381          			return false;
   \   00000090   0000A003           MOVEQ    R0,#+0
   \   00000094   0000000A           BEQ      ??MoveThisFile_1
    382          	}
    383          	return true;
   \                     ??MoveThisFile_0:
   \   00000098   0100A0E3           MOV      R0,#+1
   \                     ??MoveThisFile_1:
   \   0000009C   4DDF8DE2           ADD      SP,SP,#+308      ;; stack cleaning
   \   000000A0   3080BDE8           POP      {R4,R5,PC}       ;; return
    384          }
    385          
    386          

   \                                 In section .text, align 4, keep-with-next
    387          int compare(const void *a, const void *b)
    388          {
    389          	if ( *(U32 *)a  <  *(U32 *)b )
   \                     compare:
   \   00000000   002090E5           LDR      R2,[R0, #+0]
   \   00000004   003091E5           LDR      R3,[R1, #+0]
   \   00000008   030052E1           CMP      R2,R3
   \   0000000C   0100002A           BCS      ??compare_0
    390          		return -1;
   \   00000010   0000E0E3           MVN      R0,#+0
   \   00000014   1EFF2FE1           BX       LR
    391          	if ( *(U32 *)a == *(U32 *)b )
   \                     ??compare_0:
   \   00000018   0300000A           BEQ      ??compare_1
    392          		return 0;
    393          	if ( *(U32 *)a  >  *(U32 *)b )
   \   0000001C   020053E1           CMP      R3,R2
   \   00000020   0100002A           BCS      ??compare_1
    394          		return 1;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   1EFF2FE1           BX       LR
    395          	return 0;			// Just in case
   \                     ??compare_1:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   1EFF2FE1           BX       LR               ;; return
    396          }
    397          
    398          #endif
    399          
    400          //
    401          // Too many session files - ask if the user wants to archive.
    402          //
    403          // Returns	true - archive
    404          //			false - just go on
    405          //

   \                                 In section .text, align 4, keep-with-next
    406          int ArchiveSessionsPopup(void)
    407          {
   \                     ArchiveSessionsPopup:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
    408          	static const GUI_WIDGET_CREATE_INFO ArchiveResources[] = {
    409          		{ FRAMEWIN_CreateIndirect, "Archiving Sessions", 0, 50, 20, 360, 220, 0, 0 },
    410          		{ BUTTON_CreateIndirect, "NOW", GUI_ID_OK,   35, 115, 120, 60 },
    411          		{ BUTTON_CreateIndirect, "LATER", GUI_ID_CANCEL, 195, 115, 120, 60 }
    412          	};
    413          
    414          	SetPopupDefaults(WARNING_POPUP);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   ........           BL       SetPopupDefaults
    415          
    416          	if (GUI_ExecDialogBox(ArchiveResources, GUI_COUNTOF(ArchiveResources), &ArchiveSessionsCallback, WM_GetDesktopWindow(), 10, 10) == GUI_ID_OK)
   \   00000010   ........           BL       WM_GetDesktopWindow
   \   00000014   0A10A0E3           MOV      R1,#+10
   \   00000018   04108DE5           STR      R1,[SP, #+4]
   \   0000001C   00108DE5           STR      R1,[SP, #+0]
   \   00000020   0030A0E1           MOV      R3,R0
   \   00000024   ........           LDR      R2,??DataTable17_3
   \   00000028   0310A0E3           MOV      R1,#+3
   \   0000002C   ........           ADR      R0,??ArchiveResources
   \   00000030   ........           BL       GUI_ExecDialogBox
   \   00000034   010050E3           CMP      R0,#+1
    417          		return true;
    418          	else return false;
   \   00000038   0000A013           MOVNE    R0,#+0
   \   0000003C   0CD08DE2           ADD      SP,SP,#+12
   \   00000040   0080BDE8           POP      {PC}             ;; return
    419          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??ArchiveResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Archiving Sessions">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "NOW">`
   \              ............
   \   00000020   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "LATER">`
   \              ....        
   \   00000038   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
    420          
    421          

   \                                 In section .text, align 4, keep-with-next
    422          void ArchiveSessionsCallback(WM_MESSAGE * pMsg)
    423          {
   \                     ArchiveSessionsCallback:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    424          	WM_HWIN hDlg;
    425          	int NCode, Id;
    426          	BUTTON_Handle hBtn;
    427          
    428          	hDlg = pMsg->hWin;
    429          
    430          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   18D04DE2           SUB      SP,SP,#+24
   \   00000010   044095E5           LDR      R4,[R5, #+4]
   \   00000014   1D0050E2           SUBS     R0,R0,#+29
   \   00000018   0200000A           BEQ      ??ArchiveSessionsCallback_0
   \   0000001C   090050E2           SUBS     R0,R0,#+9
   \   00000020   3800000A           BEQ      ??ArchiveSessionsCallback_1
   \   00000024   6B0000EA           B        ??ArchiveSessionsCallback_2
    431          	{
    432          		case WM_INIT_DIALOG:
    433          			FRAMEWIN_SetTextAlign(hDlg, GUI_TA_HCENTER);
   \                     ??ArchiveSessionsCallback_0:
   \   00000028   0210A0E3           MOV      R1,#+2
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       FRAMEWIN_SetTextAlign
    434          			FRAMEWIN_SetTextColor(hDlg, popupTitleTextColor);
   \   00000034   ........           LDR      R0,??DataTable17_5
   \   00000038   001090E5           LDR      R1,[R0, #+0]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       FRAMEWIN_SetTextColor
    435          			hText1 = TEXT_CreateEx(0, 40, 350, 20, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0,    "A large number of session files");
   \   00000044   ........           ADR      R0,`?<Constant "A large number of ses...">`
   \   00000048   5E50A0E3           MOV      R5,#+94
   \   0000004C   10008DE5           STR      R0,[SP, #+16]
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0E00A0E3           MOV      R0,#+14
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0200A0E3           MOV      R0,#+2
   \   00000064   405F85E3           ORR      R5,R5,#0x100
   \   00000068   04008DE5           STR      R0,[SP, #+4]
   \   0000006C   ........           LDR      R6,??DataTable17_6
   \   00000070   00408DE5           STR      R4,[SP, #+0]
   \   00000074   1430A0E3           MOV      R3,#+20
   \   00000078   0520A0E1           MOV      R2,R5
   \   0000007C   2810A0E3           MOV      R1,#+40
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   ........           BL       TEXT_CreateEx
   \   00000088   000086E5           STR      R0,[R6, #+0]
    436          			hText2 = TEXT_CreateEx(0, 70, 350, 20, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0,    "slows Traqmate operation. Would");
   \   0000008C   ........           ADR      R0,`?<Constant "slows Traqmate operat...">`
   \   00000090   00408DE5           STR      R4,[SP, #+0]
   \   00000094   10008DE5           STR      R0,[SP, #+16]
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   0C008DE5           STR      R0,[SP, #+12]
   \   000000A0   0E00A0E3           MOV      R0,#+14
   \   000000A4   08008DE5           STR      R0,[SP, #+8]
   \   000000A8   0200A0E3           MOV      R0,#+2
   \   000000AC   04008DE5           STR      R0,[SP, #+4]
   \   000000B0   1430A0E3           MOV      R3,#+20
   \   000000B4   0520A0E1           MOV      R2,R5
   \   000000B8   4610A0E3           MOV      R1,#+70
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   ........           BL       TEXT_CreateEx
   \   000000C4   040086E5           STR      R0,[R6, #+4]
    437          			hText3 = TEXT_CreateEx(0, 100, 350, 20, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0, "you like to archive the older files?");
   \   000000C8   ........           ADR      R0,`?<Constant "you like to archive t...">`
   \   000000CC   00408DE5           STR      R4,[SP, #+0]
   \   000000D0   10008DE5           STR      R0,[SP, #+16]
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   0C008DE5           STR      R0,[SP, #+12]
   \   000000DC   0E00A0E3           MOV      R0,#+14
   \   000000E0   08008DE5           STR      R0,[SP, #+8]
   \   000000E4   0200A0E3           MOV      R0,#+2
   \   000000E8   04008DE5           STR      R0,[SP, #+4]
   \   000000EC   1430A0E3           MOV      R3,#+20
   \   000000F0   0520A0E1           MOV      R2,R5
   \   000000F4   6410A0E3           MOV      R1,#+100
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   ........           BL       TEXT_CreateEx
   \   00000100   080086E5           STR      R0,[R6, #+8]
    438          			break;
   \   00000104   350000EA           B        ??ArchiveSessionsCallback_3
    439          
    440          		case WM_NOTIFY_PARENT:
    441          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??ArchiveSessionsCallback_1:
   \   00000108   080095E5           LDR      R0,[R5, #+8]
   \   0000010C   ........           BL       WM_GetId
    442          			NCode = pMsg->Data.v;				// Notification code
    443          			switch (NCode)
   \   00000110   0C1095E5           LDR      R1,[R5, #+12]
   \   00000114   020051E3           CMP      R1,#+2
   \   00000118   3000001A           BNE      ??ArchiveSessionsCallback_3
    444          			{
    445          			case WM_NOTIFICATION_RELEASED:
    446          				switch (Id)
   \   0000011C   010050E3           CMP      R0,#+1
   \   00000120   0300000A           BEQ      ??ArchiveSessionsCallback_4
   \   00000124   2D00003A           BCC      ??ArchiveSessionsCallback_3
   \   00000128   020050E3           CMP      R0,#+2
   \   0000012C   2600000A           BEQ      ??ArchiveSessionsCallback_5
   \   00000130   2A0000EA           B        ??ArchiveSessionsCallback_3
    447          				{
    448          				case GUI_ID_OK:
    449          					{
    450          						// Change screen to "progress screen"
    451          					TEXT_Delete(hText1);
   \                     ??ArchiveSessionsCallback_4:
   \   00000134   ........           LDR      R6,??DataTable17_6
   \   00000138   000096E5           LDR      R0,[R6, #+0]
   \   0000013C   ........           BL       WM_DeleteWindow
    452          					TEXT_Delete(hText2);
   \   00000140   040096E5           LDR      R0,[R6, #+4]
   \   00000144   ........           BL       WM_DeleteWindow
    453          					TEXT_Delete(hText3);
   \   00000148   080096E5           LDR      R0,[R6, #+8]
   \   0000014C   ........           BL       WM_DeleteWindow
    454          					TEXT_CreateEx(0, 35, 350, 30, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0, "This may take a moment");
   \   00000150   ........           ADR      R0,`?<Constant "This may take a moment">`
   \   00000154   00408DE5           STR      R4,[SP, #+0]
   \   00000158   10008DE5           STR      R0,[SP, #+16]
   \   0000015C   0000A0E3           MOV      R0,#+0
   \   00000160   0C008DE5           STR      R0,[SP, #+12]
   \   00000164   0E00A0E3           MOV      R0,#+14
   \   00000168   08008DE5           STR      R0,[SP, #+8]
   \   0000016C   0200A0E3           MOV      R0,#+2
   \   00000170   04008DE5           STR      R0,[SP, #+4]
   \   00000174   572F80E3           ORR      R2,R0,#0x15C
   \   00000178   1E30A0E3           MOV      R3,#+30
   \   0000017C   2310A0E3           MOV      R1,#+35
   \   00000180   0000A0E3           MOV      R0,#+0
   \   00000184   ........           BL       TEXT_CreateEx
    455          					hBtn = BUTTON_CreateEx(120, 70, 120, 60, hDlg, WM_CF_SHOW, 0, GUI_ID_CANCEL);
   \   00000188   0200A0E3           MOV      R0,#+2
   \   0000018C   0C008DE5           STR      R0,[SP, #+12]
   \   00000190   0000A0E3           MOV      R0,#+0
   \   00000194   08008DE5           STR      R0,[SP, #+8]
   \   00000198   0200A0E3           MOV      R0,#+2
   \   0000019C   04008DE5           STR      R0,[SP, #+4]
   \   000001A0   00408DE5           STR      R4,[SP, #+0]
   \   000001A4   3C30A0E3           MOV      R3,#+60
   \   000001A8   7820A0E3           MOV      R2,#+120
   \   000001AC   4610A0E3           MOV      R1,#+70
   \   000001B0   7800A0E3           MOV      R0,#+120
   \   000001B4   ........           BL       BUTTON_CreateEx
    456          					BUTTON_SetText(hBtn, "Cancel");
   \   000001B8   ........           ADR      R1,`?<Constant "Cancel">`
   \   000001BC   ........           BL       BUTTON_SetText
    457          					GUI_Delay(1);			// Pause momentarily for the screen updates to be drawn
   \   000001C0   0100A0E3           MOV      R0,#+1
   \   000001C4   ........           BL       GUI_Delay
    458          					GUI_EndDialog(hDlg, Id);
   \   000001C8   0110A0E3           MOV      R1,#+1
   \                     ??ArchiveSessionsCallback_5:
   \   000001CC   0400A0E1           MOV      R0,R4
   \   000001D0   ........           BL       GUI_EndDialog
    459          					}
    460          					break;
   \   000001D4   010000EA           B        ??ArchiveSessionsCallback_3
    461          
    462          				case GUI_ID_CANCEL:
    463          					GUI_EndDialog(hDlg, Id);
    464          					break;
    465          				}
    466          				break;
    467          			}
    468          			break;
    469          
    470          		default:
    471          			WM_DefaultProc(pMsg);
   \                     ??ArchiveSessionsCallback_2:
   \   000001D8   0500A0E1           MOV      R0,R5
   \   000001DC   ........           BL       WM_DefaultProc
    472          	}
    473          }
   \                     ??ArchiveSessionsCallback_3:
   \   000001E0   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000001E4   7080BDE8           POP      {R4-R6,PC}       ;; return
    474          

   \                                 In section .text, align 4, keep-with-next
    475          int UserPressedCancel(void)
    476          {
   \                     UserPressedCancel:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
    477          	GUI_PID_STATE TouchState;
    478          
    479          	GUI_TOUCH_GetState(&TouchState);	// Get the touch position in pixels
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   ........           BL       GUI_TOUCH_GetState
    480          	if (TouchState.Pressed)				// If touch pressed
   \   00000010   0800DDE5           LDRB     R0,[SP, #+8]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0A00000A           BEQ      ??UserPressedCancel_0
    481          	{
    482          		int x, y;
    483          
    484          		x = TouchState.x;
    485          		y = TouchState.y;
    486          
    487          		// See if the is the Cancel Key pos
    488          		if ((x > 175) && (x < 300))
   \   0000001C   00009DE5           LDR      R0,[SP, #+0]
   \   00000020   AF10E0E3           MVN      R1,#+175
   \   00000024   000081E0           ADD      R0,R1,R0
   \   00000028   7C0050E3           CMP      R0,#+124
   \   0000002C   0400002A           BCS      ??UserPressedCancel_1
    489          			if ((y > 95) && (y < 160))
   \   00000030   04009DE5           LDR      R0,[SP, #+4]
   \   00000034   600040E2           SUB      R0,R0,#+96
   \   00000038   400050E3           CMP      R0,#+64
    490          				return true;
   \   0000003C   0100A033           MOVCC    R0,#+1
   \   00000040   0000003A           BCC      ??UserPressedCancel_0
    491          	}
    492          	return false;
   \                     ??UserPressedCancel_1:
   \   00000044   0000A0E3           MOV      R0,#+0
   \                     ??UserPressedCancel_0:
   \   00000048   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000004C   0080BDE8           POP      {PC}             ;; return
    493          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_1:
   \   00000000   5F320000           DC8      0x5F, 0x32, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_2:
   \   00000000   ........           DC32     MY_SESSIONS_PATH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_3:
   \   00000000   ........           DC32     ArchiveSessionsCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_4:
   \   00000000   ........           DC32     compare

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_5:
   \   00000000   ........           DC32     popupTitleTextColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable17_6:
   \   00000000   ........           DC32     hText1

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Moving file %d of %d">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4D6F76696E67       DC8 77, 111, 118, 105, 110, 103, 32, 102, 105, 108
   \              2066696C    
   \   0000000A   65202564206F       DC8 101, 32, 37, 100, 32, 111, 102, 32, 37, 100
   \              66202564    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant ".tqm">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2E74716D0000       DC8 46, 116, 113, 109, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "A large number of ses...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   41206C617267       DC8 65, 32, 108, 97, 114, 103, 101, 32, 110, 117
   \              65206E75    
   \   0000000A   6D626572206F       DC8 109, 98, 101, 114, 32, 111, 102, 32, 115, 101
   \              66207365    
   \   00000014   7373696F6E20       DC8 115, 115, 105, 111, 110, 32, 102, 105, 108, 101
   \              66696C65    
   \   0000001E   7300               DC8 115, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "\\\\">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   5C00               DC8 92, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "_2">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   5F320000           DC8 95, 50, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Archiving Sessions">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   417263686976       DC8 65, 114, 99, 104, 105, 118, 105, 110, 103, 32
   \              696E6720    
   \   0000000A   53657373696F       DC8 83, 101, 115, 115, 105, 111, 110, 115, 0, 0
   \              6E730000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NOW">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4E4F5700           DC8 78, 79, 87, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "LATER">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4C4154455200       DC8 76, 65, 84, 69, 82, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "slows Traqmate operat...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   736C6F777320       DC8 115, 108, 111, 119, 115, 32, 84, 114, 97, 113
   \              54726171    
   \   0000000A   6D617465206F       DC8 109, 97, 116, 101, 32, 111, 112, 101, 114, 97
   \              70657261    
   \   00000014   74696F6E2E20       DC8 116, 105, 111, 110, 46, 32, 87, 111, 117, 108
   \              576F756C    
   \   0000001E   6400               DC8 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "you like to archive t...">`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   796F75206C69       DC8 121, 111, 117, 32, 108, 105, 107, 101, 32, 116
   \              6B652074    
   \   0000000A   6F2061726368       DC8 111, 32, 97, 114, 99, 104, 105, 118, 101, 32
   \              69766520    
   \   00000014   746865206F6C       DC8 116, 104, 101, 32, 111, 108, 100, 101, 114, 32
   \              64657220    
   \   0000001E   66696C65733F       DC8 102, 105, 108, 101, 115, 63, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "This may take a moment">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   54686973206D       DC8 84, 104, 105, 115, 32, 109, 97, 121, 32, 116
   \              61792074    
   \   0000000A   616B65206120       DC8 97, 107, 101, 32, 97, 32, 109, 111, 109, 101
   \              6D6F6D65    
   \   00000014   6E740000           DC8 110, 116, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Cancel">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   43616E63656C       DC8 67, 97, 110, 99, 101, 108, 0, 0
   \              0000        
    494          

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     ArchiveSessions           2312
     ArchiveSessionsCallback     40
     ArchiveSessionsPopup        16
     FileIsNotTQMFile             8
     MoveThisFile               320
     UserPressedCancel           16
     compare                      0


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     hArchivePopup                             4
     hText1                                   12
     hText2
     hText3
     archiveDir                               12
     ArchiveSessions                         588
     FileIsNotTQMFile                         40
     MoveThisFile                            164
     compare                                  52
     ArchiveSessionsPopup                     68
     ArchiveResources                         72
     ArchiveSessionsCallback                 488
     UserPressedCancel                        80
     ??DataTable17                             4
     ??DataTable17_1                           4
     ??DataTable17_2                           4
     ??DataTable17_3                           4
     ??DataTable17_4                           4
     ??DataTable17_5                           4
     ??DataTable17_6                           4
     ?<Constant "Moving file %d of %d">       24
     ?<Constant ".tqm">                        8
     ?<Constant "A large number of ses...">   32
     ?<Constant "\\">                          2
     ?<Constant "_2">                          4
     ?<Constant "Archiving Sessions">         20
     ?<Constant "NOW">                         4
     ?<Constant "LATER">                       8
     ?<Constant "slows Traqmate operat...">   32
     ?<Constant "you like to archive t...">   40
     ?<Constant "This may take a moment">     24
     ?<Constant "Cancel">                      8

 
    16 bytes in section .bss
    38 bytes in section .rodata
 1 760 bytes in section .text
 
 1 760 bytes of CODE  memory
    38 bytes of CONST memory
    16 bytes of DATA  memory

Errors: none
Warnings: none
