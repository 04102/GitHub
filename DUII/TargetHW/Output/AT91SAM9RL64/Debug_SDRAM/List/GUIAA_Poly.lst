###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:24 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIAA_Poly.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\GUIAA_Poly.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    IAA_Poly.lst                                             #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    AA_Poly.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIAA_Poly.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIPolyAA.C
     19          Purpose     : Draw Polygon routines with Antialiasing
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdio.h>
     24          #include <string.h>
     25          #include <math.h>
     26          
     27          #include "GUI_Private.h"
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _FillPolygonAA
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          static void _FillPolygonAA(GUI_POINT* paPoint, int NumPoints, int x, int y) {
   \                     _FillPolygonAA:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     40            int i;
     41            int Stat;
     42            int x0, x1, paPoint_x;
     43            int PosFactor;
     44          
     45            PosFactor = GUI_Context.AA_HiResEnable ? 1 : GUI_Context.AA_Factor;
   \   00000004   ........           LDR      R8,??DataTable1
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   9910D8E5           LDRB     R1,[R8, #+153]
   \   00000010   0040A0E1           MOV      R4,R0
     46            //
     47            // Calc horizontal limits and init GUI_AA
     48            //
     49            x0 = x1 = paPoint[0].x;
   \   00000014   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   0190A013           MOVNE    R9,#+1
   \   00000024   9890D805           LDRBEQ   R9,[R8, #+152]
   \   00000028   04D04DE2           SUB      SP,SP,#+4
   \   0000002C   0370A0E1           MOV      R7,R3
   \   00000030   0020A0E1           MOV      R2,R0
     50            for (i = 1; i < NumPoints; i++) {
   \   00000034   020055E3           CMP      R5,#+2
   \   00000038   1E0000BA           BLT      ??_FillPolygonAA_0
   \   0000003C   023045E2           SUB      R3,R5,#+2
   \   00000040   F4E0D4E1           LDRSH    LR,[R4, #+4]
   \   00000044   08C084E2           ADD      R12,R4,#+8
   \   00000048   010013E3           TST      R3,#0x1
   \   0000004C   0500000A           BEQ      ??_FillPolygonAA_1
     51              paPoint_x =  paPoint[i].x;
     52              if (paPoint_x < x0) {
   \   00000050   02005EE1           CMP      LR,R2
     53                x0 = paPoint_x;
   \   00000054   0E20A0B1           MOVLT    R2,LR
   \   00000058   010000BA           BLT      ??_FillPolygonAA_2
     54              }
     55              if (paPoint_x > x1) {
   \   0000005C   0E0050E1           CMP      R0,LR
   \   00000060   0E00A0B1           MOVLT    R0,LR
   \                     ??_FillPolygonAA_2:
   \   00000064   F4E0DCE0           LDRSH    LR,[R12], #+4
   \                     ??_FillPolygonAA_1:
   \   00000068   A330B0E1           LSRS     R3,R3,#+1
   \   0000006C   0D00000A           BEQ      ??_FillPolygonAA_3
   \                     ??_FillPolygonAA_4:
   \   00000070   02005EE1           CMP      LR,R2
   \   00000074   0E20A0D1           MOVLE    R2,LR
   \   00000078   0E0050E1           CMP      R0,LR
   \   0000007C   0E00A0B1           MOVLT    R0,LR
   \   00000080   F0E0DCE1           LDRSH    LR,[R12, #+0]
   \   00000084   013043E2           SUB      R3,R3,#+1
   \   00000088   02005EE1           CMP      LR,R2
   \   0000008C   0E20A0D1           MOVLE    R2,LR
   \   00000090   0E0050E1           CMP      R0,LR
   \   00000094   0E00A0B1           MOVLT    R0,LR
   \   00000098   F4E0DCE1           LDRSH    LR,[R12, #+4]
   \   0000009C   08C08CE2           ADD      R12,R12,#+8
   \   000000A0   000053E3           CMP      R3,#+0
   \   000000A4   F1FFFF1A           BNE      ??_FillPolygonAA_4
   \                     ??_FillPolygonAA_3:
   \   000000A8   02005EE1           CMP      LR,R2
   \   000000AC   0E20A0D1           MOVLE    R2,LR
   \   000000B0   0E0050E1           CMP      R0,LR
   \   000000B4   0E00A0B1           MOVLT    R0,LR
     56                x1 = paPoint_x;
     57              }
     58            }
     59            if (GUI_Context.AA_HiResEnable == 0) {
   \                     ??_FillPolygonAA_0:
   \   000000B8   000086E0           ADD      R0,R6,R0
   \   000000BC   000051E3           CMP      R1,#+0
   \   000000C0   02A086E0           ADD      R10,R6,R2
     60              Stat = GUI_AA_Init(x0 + x, x1 + x);
   \   000000C4   0010A001           MOVEQ    R1,R0
   \   000000C8   0A00A001           MOVEQ    R0,R10
   \   000000CC   0700000A           BEQ      ??_FillPolygonAA_5
   \   000000D0   98B0D8E5           LDRB     R11,[R8, #+152]
   \   000000D4   0B10A0E1           MOV      R1,R11
   \   000000D8   ........           BL       __aeabi_idiv
   \   000000DC   00008DE5           STR      R0,[SP, #+0]
   \   000000E0   0A00A0E1           MOV      R0,R10
   \   000000E4   0B10A0E1           MOV      R1,R11
   \   000000E8   ........           BL       __aeabi_idiv
   \   000000EC   00109DE5           LDR      R1,[SP, #+0]
     61            } else {
     62              Stat = GUI_AA_Init((x0 + x) / GUI_Context.AA_Factor, (x1 + x) / GUI_Context.AA_Factor);
   \                     ??_FillPolygonAA_5:
   \   000000F0   ........           BL       GUI_AA_Init
     63            }
     64            if (Stat == 0) {
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   6100001A           BNE      ??_FillPolygonAA_6
     65              //
     66              // Modify pointlist
     67              //
     68              if (GUI_Context.AA_HiResEnable == 0) {
   \   000000FC   9900D8E5           LDRB     R0,[R8, #+153]
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   2700001A           BNE      ??_FillPolygonAA_7
     69                for (i = 0; i < NumPoints; i++) {
   \   00000108   010055E3           CMP      R5,#+1
   \   0000010C   250000BA           BLT      ??_FillPolygonAA_7
   \   00000110   012045E2           SUB      R2,R5,#+1
   \   00000114   F030D4E1           LDRSH    R3,[R4, #+0]
   \   00000118   0400A0E1           MOV      R0,R4
   \   0000011C   9810D8E5           LDRB     R1,[R8, #+152]
   \   00000120   010012E3           TST      R2,#0x1
   \   00000124   0600000A           BEQ      ??_FillPolygonAA_8
     70                  paPoint[i].x *= GUI_Context.AA_Factor;
   \   00000128   830163E1           SMULBB   R3,R3,R1
   \   0000012C   B030C0E1           STRH     R3,[R0, #+0]
     71                  paPoint[i].y *= GUI_Context.AA_Factor;
   \   00000130   F230D0E1           LDRSH    R3,[R0, #+2]
   \   00000134   830161E1           SMULBB   R1,R3,R1
   \   00000138   B210C0E1           STRH     R1,[R0, #+2]
   \   0000013C   F430D0E1           LDRSH    R3,[R0, #+4]
   \   00000140   040080E2           ADD      R0,R0,#+4
   \                     ??_FillPolygonAA_8:
   \   00000144   A220B0E1           LSRS     R2,R2,#+1
   \   00000148   1000000A           BEQ      ??_FillPolygonAA_9
   \                     ??_FillPolygonAA_10:
   \   0000014C   9810D8E5           LDRB     R1,[R8, #+152]
   \   00000150   012042E2           SUB      R2,R2,#+1
   \   00000154   000052E3           CMP      R2,#+0
   \   00000158   830163E1           SMULBB   R3,R3,R1
   \   0000015C   B030C0E1           STRH     R3,[R0, #+0]
   \   00000160   F230D0E1           LDRSH    R3,[R0, #+2]
   \   00000164   830163E1           SMULBB   R3,R3,R1
   \   00000168   B230C0E1           STRH     R3,[R0, #+2]
   \   0000016C   F4C0D0E1           LDRSH    R12,[R0, #+4]
   \   00000170   8C0163E1           SMULBB   R3,R12,R1
   \   00000174   B430C0E1           STRH     R3,[R0, #+4]
   \   00000178   F630D0E1           LDRSH    R3,[R0, #+6]
   \   0000017C   830161E1           SMULBB   R1,R3,R1
   \   00000180   B610C0E1           STRH     R1,[R0, #+6]
   \   00000184   F830D0E1           LDRSH    R3,[R0, #+8]
   \   00000188   080080E2           ADD      R0,R0,#+8
   \   0000018C   EEFFFF1A           BNE      ??_FillPolygonAA_10
   \                     ??_FillPolygonAA_9:
   \   00000190   9810D8E5           LDRB     R1,[R8, #+152]
   \   00000194   830162E1           SMULBB   R2,R3,R1
   \   00000198   B020C0E1           STRH     R2,[R0, #+0]
   \   0000019C   F220D0E1           LDRSH    R2,[R0, #+2]
   \   000001A0   820161E1           SMULBB   R1,R2,R1
   \   000001A4   B210C0E1           STRH     R1,[R0, #+2]
     72                }
     73              }
     74              GL_FillPolygon(paPoint, NumPoints, x * PosFactor, y * PosFactor);
   \                     ??_FillPolygonAA_7:
   \   000001A8   990703E0           MUL      R3,R9,R7
   \   000001AC   990602E0           MUL      R2,R9,R6
   \   000001B0   0510A0E1           MOV      R1,R5
   \   000001B4   0400A0E1           MOV      R0,R4
   \   000001B8   ........           BL       GL_FillPolygon
     75              //
     76              // Restore pointlist
     77              //
     78              if (GUI_Context.AA_HiResEnable == 0) {
   \   000001BC   9900D8E5           LDRB     R0,[R8, #+153]
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   2E00001A           BNE      ??_FillPolygonAA_6
     79                for (i = 0; i < NumPoints; i++) {
   \   000001C8   010055E3           CMP      R5,#+1
   \   000001CC   2C0000BA           BLT      ??_FillPolygonAA_6
   \   000001D0   015045E2           SUB      R5,R5,#+1
   \   000001D4   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000001D8   9860D8E5           LDRB     R6,[R8, #+152]
   \   000001DC   010015E3           TST      R5,#0x1
   \   000001E0   0800000A           BEQ      ??_FillPolygonAA_11
     80                  paPoint[i].x /= GUI_Context.AA_Factor;
   \   000001E4   0610A0E1           MOV      R1,R6
   \   000001E8   ........           BL       __aeabi_idiv
   \   000001EC   B000C4E1           STRH     R0,[R4, #+0]
     81                  paPoint[i].y /= GUI_Context.AA_Factor;
   \   000001F0   F200D4E1           LDRSH    R0,[R4, #+2]
   \   000001F4   0610A0E1           MOV      R1,R6
   \   000001F8   ........           BL       __aeabi_idiv
   \   000001FC   B200C4E1           STRH     R0,[R4, #+2]
   \   00000200   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000204   044084E2           ADD      R4,R4,#+4
   \                     ??_FillPolygonAA_11:
   \   00000208   A550B0E1           LSRS     R5,R5,#+1
   \   0000020C   1400000A           BEQ      ??_FillPolygonAA_12
   \                     ??_FillPolygonAA_13:
   \   00000210   9860D8E5           LDRB     R6,[R8, #+152]
   \   00000214   015045E2           SUB      R5,R5,#+1
   \   00000218   0610A0E1           MOV      R1,R6
   \   0000021C   ........           BL       __aeabi_idiv
   \   00000220   B000C4E1           STRH     R0,[R4, #+0]
   \   00000224   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000228   0610A0E1           MOV      R1,R6
   \   0000022C   ........           BL       __aeabi_idiv
   \   00000230   B200C4E1           STRH     R0,[R4, #+2]
   \   00000234   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000238   0610A0E1           MOV      R1,R6
   \   0000023C   ........           BL       __aeabi_idiv
   \   00000240   B400C4E1           STRH     R0,[R4, #+4]
   \   00000244   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000248   0610A0E1           MOV      R1,R6
   \   0000024C   ........           BL       __aeabi_idiv
   \   00000250   B600C4E1           STRH     R0,[R4, #+6]
   \   00000254   F800D4E1           LDRSH    R0,[R4, #+8]
   \   00000258   084084E2           ADD      R4,R4,#+8
   \   0000025C   000055E3           CMP      R5,#+0
   \   00000260   EAFFFF1A           BNE      ??_FillPolygonAA_13
   \                     ??_FillPolygonAA_12:
   \   00000264   9860D8E5           LDRB     R6,[R8, #+152]
   \   00000268   0610A0E1           MOV      R1,R6
   \   0000026C   ........           BL       __aeabi_idiv
   \   00000270   B000C4E1           STRH     R0,[R4, #+0]
   \   00000274   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000278   0610A0E1           MOV      R1,R6
   \   0000027C   ........           BL       __aeabi_idiv
   \   00000280   B200C4E1           STRH     R0,[R4, #+2]
     82                }
     83              }
     84            }
     85            //
     86            // Cleanup
     87            //
     88            GUI_AA_Exit();
   \                     ??_FillPolygonAA_6:
   \   00000284   04D08DE2           ADD      SP,SP,#+4
   \   00000288   F04FBDE8           POP      {R4-R11,LR}
   \   0000028C   ........           B        GUI_AA_Exit      ;; tailcall
     89          }
     90          
     91          /*********************************************************************
     92          *
     93          *       Public code
     94          *
     95          **********************************************************************
     96          */
     97          /*********************************************************************
     98          *
     99          *       GUI_AA_FillPolygon
    100          */

   \                                 In section .text, align 4, keep-with-next
    101          void GUI_AA_FillPolygon(GUI_POINT * pPoints, int NumPoints, int x0, int y0) {
   \                     GUI_AA_FillPolygon:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
    102            GUI_DEVICE * pDevice;
    103            void (* pfFillPolygonAA)(GUI_DEVICE *, const GUI_POINT *, int, int, int);
    104            
    105            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
    106            #if (GUI_WINSUPPORT)
    107              WM_ADDORG_AA(x0,y0);
   \   0000001C   ........           BL       WM__GetOrgX_AA
   \   00000020   066080E0           ADD      R6,R0,R6
   \   00000024   ........           BL       WM__GetOrgY_AA
   \   00000028   077080E0           ADD      R7,R0,R7
    108              WM_ITERATE_START(NULL); {
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   ........           BL       WM__InitIVRSearch
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   1B00000A           BEQ      ??GUI_AA_FillPolygon_0
    109            #endif
    110            pDevice = GUI_Context.apDevice[GUI_Context.SelLayer];
   \                     ??GUI_AA_FillPolygon_1:
   \   0000003C   ........           LDR      R0,??DataTable1
   \   00000040   1110D0E5           LDRB     R1,[R0, #+17]
   \   00000044   010180E0           ADD      R0,R0,R1, LSL #+2
   \   00000048   480090E5           LDR      R0,[R0, #+72]
    111            pfFillPolygonAA = (void (*)(GUI_DEVICE *, const GUI_POINT *, int, int, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_FILLPOLYAA);
   \   0000004C   1210A0E3           MOV      R1,#+18
   \   00000050   04008DE5           STR      R0,[SP, #+4]
   \   00000054   04209DE5           LDR      R2,[SP, #+4]
   \   00000058   04008DE2           ADD      R0,SP,#+4
   \   0000005C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000060   242092E5           LDR      R2,[R2, #+36]
   \   00000064   32FF2FE1           BLX      R2
   \   00000068   00C0B0E1           MOVS     R12,R0
    112            if (pfFillPolygonAA) {
   \   0000006C   0600000A           BEQ      ??GUI_AA_FillPolygon_2
    113              pfFillPolygonAA(pDevice, pPoints, NumPoints, x0, y0);
   \   00000070   00708DE5           STR      R7,[SP, #+0]
   \   00000074   0630A0E1           MOV      R3,R6
   \   00000078   0520A0E1           MOV      R2,R5
   \   0000007C   0410A0E1           MOV      R1,R4
   \   00000080   04009DE5           LDR      R0,[SP, #+4]
   \   00000084   3CFF2FE1           BLX      R12
   \   00000088   040000EA           B        ??GUI_AA_FillPolygon_3
    114            } else {
    115              _FillPolygonAA (pPoints, NumPoints, x0, y0);
   \                     ??GUI_AA_FillPolygon_2:
   \   0000008C   0730A0E1           MOV      R3,R7
   \   00000090   0620A0E1           MOV      R2,R6
   \   00000094   0510A0E1           MOV      R1,R5
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       _FillPolygonAA
    116            }
    117            #if (GUI_WINSUPPORT)
    118              } WM_ITERATE_END();
   \                     ??GUI_AA_FillPolygon_3:
   \   000000A0   ........           BL       WM__GetNextIVR
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   E3FFFF1A           BNE      ??GUI_AA_FillPolygon_1
    119            #endif
    120            GUI_UNLOCK();
   \                     ??GUI_AA_FillPolygon_0:
   \   000000AC   ........           BL       GUI_Unlock
    121          }
   \   000000B0   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000000B4   F080BDE8           POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context
    122          
    123          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     GUI_AA_FillPolygon     32
     _FillPolygonAA         40


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     _FillPolygonAA      656
     GUI_AA_FillPolygon  184
     ??DataTable1          4

 
 844 bytes in section .text
 
 844 bytes of CODE memory

Errors: none
Warnings: none
