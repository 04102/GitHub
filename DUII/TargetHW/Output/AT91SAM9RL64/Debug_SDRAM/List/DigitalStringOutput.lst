###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\DigitalStringOutput.cpp                     #
#    Command line =  C:\DUII\DUII\DigitalStringOutput.cpp -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --eec++                              #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Di #
#                    gitalStringOutput.lst                                    #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Dig #
#                    italStringOutput.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\DigitalStringOutput.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: DigitalStringOutput.cpp
      5          Description: The digital display object
      6          -----------------------------------------------------------------
      7          */
      8          #include "DigitalStringOutput.hpp"
      9          #include <string.h>
     10          

   \                                 In section .text, align 4, keep-with-next
     11          DigitalStringOutput::DigitalStringOutput(int x, int y, int xSize, int ySize, DigitalOptions Options, WM_HWIN _hParent, GUI_FONT font, GUI_COLOR cColor) : ControlBase(x, y, "", "", NULL)
   \                     _ZN19DigitalStringOutputC1Eiiii14DigitalOptionsl8GUI_FONTm:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0370A0E1           MOV      R7,R3
     12          {
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   ........           ADR      R3,??DataTable6  ;; ""
   \   00000018   04008DE5           STR      R0,[SP, #+4]
   \   0000001C   0150A0E1           MOV      R5,R1
   \   00000020   0260A0E1           MOV      R6,R2
   \   00000024   28809DE5           LDR      R8,[SP, #+40]
   \   00000028   2C90DDE5           LDRB     R9,[SP, #+44]
   \   0000002C   58A09DE5           LDR      R10,[SP, #+88]
   \   00000030   00308DE5           STR      R3,[SP, #+0]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
     13          	Width = xSize;
   \   0000003C   B07084E5           STR      R7,[R4, #+176]
     14          	Height = ySize;
   \   00000040   B07084E2           ADD      R7,R4,#+176
   \   00000044   048087E5           STR      R8,[R7, #+4]
     15          
     16          	DisplayOptions = Options;
   \   00000048   2490C7E5           STRB     R9,[R7, #+36]
     17          
     18          	strcpy(Value, " ");
   \   0000004C   ........           ADR      R0,??DataTable6_1  ;; " "
   \   00000050   0020D0E5           LDRB     R2,[R0, #0]
   \   00000054   441084E2           ADD      R1,R4,#+68
   \   00000058   0020C1E5           STRB     R2,[R1, #+0]
   \   0000005C   0120D0E5           LDRB     R2,[R0, #+1]
   \   00000060   0120C1E5           STRB     R2,[R1, #+1]
     19          
     20          	mem = GUI_MEMDEV_Create(x, y, Width + 1, Height);
   \   00000064   B00094E5           LDR      R0,[R4, #+176]
   \   00000068   043097E5           LDR      R3,[R7, #+4]
   \   0000006C   012080E2           ADD      R2,R0,#+1
   \   00000070   0610A0E1           MOV      R1,R6
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   ........           BL       GUI_MEMDEV_Create
   \   0000007C   380087E5           STR      R0,[R7, #+56]
     21          	fTextFont = font;
   \   00000080   34108DE2           ADD      R1,SP,#+52
   \   00000084   0C51B1E8           LDM      R1!,{R2,R3,R8,R12,LR}
   \   00000088   EC0084E2           ADD      R0,R4,#+236
   \   0000008C   0C51A0E8           STM      R0!,{R2,R3,R8,R12,LR}
   \   00000090   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
     22          	Color = cColor;
     23          
     24          	rect.x0 = x;
     25          	rect.y0 = y;
     26          	rect.x1 = x + Width;
     27          	rect.y1 = y + Height;
     28          
     29          }
   \   00000094   08D08DE2           ADD      SP,SP,#+8
   \   00000098   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
   \   0000009C   60A087E5           STR      R10,[R7, #+96]
   \   000000A0   B456C7E1           STRH     R5,[R7, #+100]
   \   000000A4   B666C7E1           STRH     R6,[R7, #+102]
   \   000000A8   B00094E5           LDR      R0,[R4, #+176]
   \   000000AC   050080E0           ADD      R0,R0,R5
   \   000000B0   B806C7E1           STRH     R0,[R7, #+104]
   \   000000B4   040097E5           LDR      R0,[R7, #+4]
   \   000000B8   060080E0           ADD      R0,R0,R6
   \   000000BC   BA06C7E1           STRH     R0,[R7, #+106]
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   F087BDE8           POP      {R4-R10,PC}      ;; return
     30          

   \                                 In section .text, align 4, keep-with-next
     31          DigitalStringOutput::~DigitalStringOutput()
     32          {
   \                     _ZN19DigitalStringOutputD1Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     33          	GUI_MEMDEV_Delete(mem);
   \   00000008   E80094E5           LDR      R0,[R4, #+232]
   \   0000000C   ........           BL       GUI_MEMDEV_Delete
     34          }
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return
     35          

   \                                 In section .text, align 4, keep-with-next
     36          void DigitalStringOutput::DrawControl()
     37          {
   \                     _ZN19DigitalStringOutput11DrawControlEv:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
     38          	GUI_COLOR OldColor;
     39          
     40          	OldColor = GUI_GetColor();
   \   0000000C   ........           BL       GUI_GetColor
   \   00000010   0050A0E1           MOV      R5,R0
     41          	GUI_SetColor(Color);
   \   00000014   100194E5           LDR      R0,[R4, #+272]
   \   00000018   ........           BL       GUI_SetColor
     42          
     43          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   0000001C   0200A0E3           MOV      R0,#+2
   \   00000020   ........           BL       GUI_SetTextMode
     44          
     45          	GUI_SetFont(&fTextFont);
   \   00000024   EC0084E2           ADD      R0,R4,#+236
   \   00000028   ........           BL       GUI_SetFont
     46          
     47          	GUI_DispStringInRect(Value, &rect, GUI_TA_RIGHT);
   \   0000002C   0120A0E3           MOV      R2,#+1
   \   00000030   451F84E2           ADD      R1,R4,#+276
   \   00000034   440084E2           ADD      R0,R4,#+68
   \   00000038   ........           BL       GUI_DispStringInRect
     48          
     49          	GUI_SetColor(OldColor);
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   04D08DE2           ADD      SP,SP,#+4
   \   00000044   3040BDE8           POP      {R4,R5,LR}
   \   00000048   ........           B        GUI_SetColor     ;; tailcall
     50          }
     51          
     52          
     53          

   \                                 In section .text, align 4, keep-with-next
     54          char *DigitalStringOutput::GetDisplayText()
     55          {
   \                     _ZN19DigitalStringOutput14GetDisplayTextEv:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   30D04DE2           SUB      SP,SP,#+48
     56          	char str[25];
     57          	char strFormat[20];
     58          	sprintf(str, "%.0f", Max);
   \   0000000C   AC0094E5           LDR      R0,[R4, #+172]
   \   00000010   ........           BL       __aeabi_f2d
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   0130A0E1           MOV      R3,R1
   \   0000001C   ........           ADR      R1,`?<Constant "%.0f">`
   \   00000020   14008DE2           ADD      R0,SP,#+20
   \   00000024   ........           BL       sprintf
     59          	sprintf(strFormat, "%%%d.%df %%s", strlen(str), Precision);
   \   00000028   14008DE2           ADD      R0,SP,#+20
   \   0000002C   ........           BL       strlen
   \   00000030   0020A0E1           MOV      R2,R0
   \   00000034   B83094E5           LDR      R3,[R4, #+184]
   \   00000038   ........           ADR      R1,`?<Constant "%%%d.%df %%s">`
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           BL       sprintf
     60          
     61          	sprintf(strValue, strFormat, Value, sUnits);
   \   00000044   253084E2           ADD      R3,R4,#+37
   \   00000048   442084E2           ADD      R2,R4,#+68
   \   0000004C   0D10A0E1           MOV      R1,SP
   \   00000050   BC0084E2           ADD      R0,R4,#+188
   \   00000054   ........           BL       sprintf
     62          
     63          	return strValue;
   \   00000058   BC0084E2           ADD      R0,R4,#+188
   \   0000005C   30D08DE2           ADD      SP,SP,#+48
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
     64          }
     65          
     66          /****************************************************************
     67          *
     68          *       SetValue(double value)
     69          *		Set the value of the gauge to the value specified
     70          *
     71          ******************************************************************/

   \                                 In section .text, align 4, keep-with-next
     72          void DigitalStringOutput::SetValue(char *sValue)
     73          {
     74          	strcpy(Value, sValue);
   \                     _ZN19DigitalStringOutput8SetValueEPc:
   \   00000000   440080E2           ADD      R0,R0,#+68
   \   00000004   ........           B        strcpy           ;; tailcall
     75          }
     76          
     77          

   \                                 In section .text, align 4, keep-with-next
     78          void DigitalStringOutput::PickFont()
     79          {
   \                     _ZN19DigitalStringOutput8PickFontEv:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     80          	int txt_height;
     81          	// pick the right size font
     82          	fTextFont = DIGITAL_LARGE_FONT;
   \   00000004   ........           LDR      R5,??DataTable6_2
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   00000010   EC0084E2           ADD      R0,R4,#+236
   \   00000014   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   00000018   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \   0000001C   245045E2           SUB      R5,R5,#+36
   \   00000020   0E10A0E8           STM      R0!,{R1-R3,R12}
     83          	//GUI_SetFont(&DIGITAL_LARGE_FONT);
     84          	txt_height = GUI_GetYDistOfFont(&DIGITAL_LARGE_FONT);
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   ........           BL       GUI_GetYDistOfFont
     85          	//txt_width = GetMaxTextLength();
     86          	if(txt_height < Height)
   \   0000002C   B41094E5           LDR      R1,[R4, #+180]
   \   00000030   010050E1           CMP      R0,R1
     87          	{
     88          		fTextFont = DIGITAL_LARGE_FONT;
   \   00000034   EC0084B2           ADDLT    R0,R4,#+236
   \   00000038   2C0000BA           BLT      ??PickFont_0
     89          		return;
     90          	}
     91          
     92          	fTextFont = DIGITAL_MEDIUM_FONT;
   \   0000003C   ........           LDR      R5,??DataTable6_3
   \   00000040   EC0084E2           ADD      R0,R4,#+236
   \   00000044   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   00000048   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   0000004C   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \   00000050   245045E2           SUB      R5,R5,#+36
   \   00000054   0E10A0E8           STM      R0!,{R1-R3,R12}
     93          	txt_height = GUI_GetYDistOfFont(&DIGITAL_MEDIUM_FONT);
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       GUI_GetYDistOfFont
     94          	//txt_width = GetMaxTextLength();
     95          	if(txt_height < Height)
   \   00000060   B41094E5           LDR      R1,[R4, #+180]
   \   00000064   010050E1           CMP      R0,R1
     96          	{
     97          		fTextFont = DIGITAL_MEDIUM_FONT;
   \   00000068   EC0084B2           ADDLT    R0,R4,#+236
   \   0000006C   1F0000BA           BLT      ??PickFont_0
     98          		return;
     99          	}
    100          	
    101          	fTextFont = DIGITAL_SMALL_FONT;
   \   00000070   ........           LDR      R6,??DataTable6_4
   \   00000074   EC0084E2           ADD      R0,R4,#+236
   \   00000078   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   0000007C   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   00000080   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \   00000084   246046E2           SUB      R6,R6,#+36
   \   00000088   0E10A0E8           STM      R0!,{R1-R3,R12}
    102          	txt_height = GUI_GetYDistOfFont(&DIGITAL_SMALL_FONT);
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   ........           BL       GUI_GetYDistOfFont
    103          	//txt_width = GetMaxTextLength();
    104          	if(txt_height < Height)
   \   00000094   B41094E5           LDR      R1,[R4, #+180]
   \   00000098   010050E1           CMP      R0,R1
   \   0000009C   040000AA           BGE      ??PickFont_1
    105          	{
    106          		fTextFont = DIGITAL_SMALL_FONT;
   \   000000A0   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   000000A4   EC0084E2           ADD      R0,R4,#+236
   \                     ??PickFont_2:
   \   000000A8   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   000000AC   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \   000000B0   110000EA           B        ??PickFont_3
    107          		return;
    108          	}
    109          	
    110          	fTextFont = DIGITAL_TINY_FONT;
   \                     ??PickFont_1:
   \   000000B4   ........           LDR      R6,??DataTable6_5
   \   000000B8   EC0084E2           ADD      R0,R4,#+236
   \   000000BC   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   000000C0   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   000000C4   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \   000000C8   246046E2           SUB      R6,R6,#+36
   \   000000CC   0E10A0E8           STM      R0!,{R1-R3,R12}
    111          	txt_height = GUI_GetYDistOfFont(&DIGITAL_TINY_FONT);
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   ........           BL       GUI_GetYDistOfFont
    112          	//txt_width = GetMaxTextLength();
    113          	if(txt_height < Height)
   \   000000D8   B41094E5           LDR      R1,[R4, #+180]
   \   000000DC   010050E1           CMP      R0,R1
   \   000000E0   EC0084E2           ADD      R0,R4,#+236
   \   000000E4   010000AA           BGE      ??PickFont_0
    114          	{
    115          		fTextFont = DIGITAL_TINY_FONT;
   \   000000E8   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   000000EC   EDFFFFEA           B        ??PickFont_2
    116          		return;
    117          	}
    118          	
    119          	fTextFont = DIGITAL_MEDIUM_FONT;		// KMC - MUST pick some font - otherwise text measurement will crash
   \                     ??PickFont_0:
   \   000000F0   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   000000F4   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   000000F8   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \                     ??PickFont_3:
   \   000000FC   0E10A0E8           STM      R0!,{R1-R3,R12}
    120          }
   \   00000100   7080BDE8           POP      {R4-R6,PC}       ;; return
    121          

   \                                 In section .text, align 4, keep-with-next
    122          GUI_MEMDEV_Handle DigitalStringOutput::DrawToMemArea()
    123          {
   \                     _ZN19DigitalStringOutput13DrawToMemAreaEv:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    124          	GUI_COLOR OldColor;
    125          
    126          	OldColor = GUI_GetColor();
   \   00000008   ........           BL       GUI_GetColor
   \   0000000C   0050A0E1           MOV      R5,R0
    127          	GUI_SetColor(Color);
   \   00000010   E86084E2           ADD      R6,R4,#+232
   \   00000014   280096E5           LDR      R0,[R6, #+40]
   \   00000018   ........           BL       GUI_SetColor
    128          
    129          	GUI_MEMDEV_Select(mem);
   \   0000001C   E80094E5           LDR      R0,[R4, #+232]
   \   00000020   ........           BL       GUI_MEMDEV_Select
    130          	GUI_ClearRect(rect.x0, rect.y0, rect.x1, rect.y1);
   \   00000024   F233D6E1           LDRSH    R3,[R6, #+50]
   \   00000028   F023D6E1           LDRSH    R2,[R6, #+48]
   \   0000002C   FE12D6E1           LDRSH    R1,[R6, #+46]
   \   00000030   FC02D6E1           LDRSH    R0,[R6, #+44]
   \   00000034   ........           BL       GUI_ClearRect
    131          
    132          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   00000038   0200A0E3           MOV      R0,#+2
   \   0000003C   ........           BL       GUI_SetTextMode
    133          
    134          	GUI_SetFont(&fTextFont);
   \   00000040   EC0084E2           ADD      R0,R4,#+236
   \   00000044   ........           BL       GUI_SetFont
    135          
    136          	GUI_DispStringInRect(Value, &rect, GUI_TA_RIGHT);
   \   00000048   0120A0E3           MOV      R2,#+1
   \   0000004C   451F84E2           ADD      R1,R4,#+276
   \   00000050   440084E2           ADD      R0,R4,#+68
   \   00000054   ........           BL       GUI_DispStringInRect
    137          
    138          	GUI_SetColor(OldColor);
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       GUI_SetColor
    139          
    140          	GUI_SelectLCD();
   \   00000060   ........           BL       GUI_SelectLCD
    141          	return mem;
   \   00000064   E80094E5           LDR      R0,[R4, #+232]
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return
    142          }

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant " ">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   2000               DC8 32, 0

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp DigitalStringOutput::subobject DigitalStringOutput(int, int, int, int, DigitalOptions, GUI_HWIN, GUI_FONT, GUI_COLOR)
   \                     _ZN19DigitalStringOutputC2Eiiii14DigitalOptionsl8GUI_FONTm:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0370A0E1           MOV      R7,R3
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   ........           ADR      R3,??DataTable6  ;; ""
   \   00000018   04008DE5           STR      R0,[SP, #+4]
   \   0000001C   0150A0E1           MOV      R5,R1
   \   00000020   0260A0E1           MOV      R6,R2
   \   00000024   28809DE5           LDR      R8,[SP, #+40]
   \   00000028   2C90DDE5           LDRB     R9,[SP, #+44]
   \   0000002C   58A09DE5           LDR      R10,[SP, #+88]
   \   00000030   00308DE5           STR      R3,[SP, #+0]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
   \   0000003C   B07084E5           STR      R7,[R4, #+176]
   \   00000040   B07084E2           ADD      R7,R4,#+176
   \   00000044   048087E5           STR      R8,[R7, #+4]
   \   00000048   2490C7E5           STRB     R9,[R7, #+36]
   \   0000004C   ........           ADR      R0,??DataTable6_1  ;; " "
   \   00000050   0020D0E5           LDRB     R2,[R0, #0]
   \   00000054   441084E2           ADD      R1,R4,#+68
   \   00000058   0020C1E5           STRB     R2,[R1, #+0]
   \   0000005C   0120D0E5           LDRB     R2,[R0, #+1]
   \   00000060   0120C1E5           STRB     R2,[R1, #+1]
   \   00000064   B00094E5           LDR      R0,[R4, #+176]
   \   00000068   043097E5           LDR      R3,[R7, #+4]
   \   0000006C   012080E2           ADD      R2,R0,#+1
   \   00000070   0610A0E1           MOV      R1,R6
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   ........           BL       GUI_MEMDEV_Create
   \   0000007C   380087E5           STR      R0,[R7, #+56]
   \   00000080   34108DE2           ADD      R1,SP,#+52
   \   00000084   0C51B1E8           LDM      R1!,{R2,R3,R8,R12,LR}
   \   00000088   EC0084E2           ADD      R0,R4,#+236
   \   0000008C   0C51A0E8           STM      R0!,{R2,R3,R8,R12,LR}
   \   00000090   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   00000094   08D08DE2           ADD      SP,SP,#+8
   \   00000098   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
   \   0000009C   60A087E5           STR      R10,[R7, #+96]
   \   000000A0   B456C7E1           STRH     R5,[R7, #+100]
   \   000000A4   B666C7E1           STRH     R6,[R7, #+102]
   \   000000A8   B00094E5           LDR      R0,[R4, #+176]
   \   000000AC   050080E0           ADD      R0,R0,R5
   \   000000B0   B806C7E1           STRH     R0,[R7, #+104]
   \   000000B4   040097E5           LDR      R0,[R7, #+4]
   \   000000B8   060080E0           ADD      R0,R0,R6
   \   000000BC   BA06C7E1           STRH     R0,[R7, #+106]
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   F087BDE8           POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp DigitalStringOutput::subobject ~DigitalStringOutput()
   \                     _ZN19DigitalStringOutputD2Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   E80094E5           LDR      R0,[R4, #+232]
   \   0000000C   ........           BL       GUI_MEMDEV_Delete
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   20000000           DC8      " ",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   ........           DC32     GUI_Font32B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   ........           DC32     GUI_Font16_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   ........           DC32     GUI_Font13_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.0f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   252E30660000       DC8 37, 46, 48, 102, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%%%d.%df %%s">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   252525642E25       DC8 37, 37, 37, 100, 46, 37, 100, 102, 32, 37
   \              64662025    
   \   0000000A   257300000000       DC8 37, 115, 0, 0, 0, 0

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     DigitalStringOutput::DigitalStringOutput(int, int, int, int, DigitalOptions, GUI_HWIN, GUI_FONT, GUI_COLOR)
                                        40
     DigitalStringOutput::DrawControl()
                                        16
     DigitalStringOutput::DrawToMemArea()
                                        16
     DigitalStringOutput::GetDisplayText()
                                        56
     DigitalStringOutput::PickFont()
                                        16
     DigitalStringOutput::SetValue(char *)
                                         8
     DigitalStringOutput::subobject DigitalStringOutput(int, int, int, int, DigitalOptions, GUI_HWIN, GUI_FONT, GUI_COLOR)
                                        40
     DigitalStringOutput::subobject ~DigitalStringOutput()
                                         8
     DigitalStringOutput::~DigitalStringOutput()
                                         8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     DigitalStringOutput::DigitalStringOutput(int, int, int, int, DigitalOptions, GUI_HWIN, GUI_FONT, GUI_COLOR)
                                     200
     DigitalStringOutput::~DigitalStringOutput()
                                      24
     DigitalStringOutput::DrawControl()
                                      76
     DigitalStringOutput::GetDisplayText()
                                     100
     DigitalStringOutput::SetValue(char *)
                                       8
     DigitalStringOutput::PickFont()
                                     260
     DigitalStringOutput::DrawToMemArea()
                                     108
     ?<Constant "">                    1
     ?<Constant " ">                   2
     DigitalStringOutput::subobject DigitalStringOutput(int, int, int, int, DigitalOptions, GUI_HWIN, GUI_FONT, GUI_COLOR)
                                     200
     DigitalStringOutput::subobject ~DigitalStringOutput()
                                      24
     ??DataTable6                      4
     ??DataTable6_1                    4
     ??DataTable6_2                    4
     ??DataTable6_3                    4
     ??DataTable6_4                    4
     ??DataTable6_5                    4
     ?<Constant "%.0f">                8
     ?<Constant "%%%d.%df %%s">       16

 
     3 bytes in section .rodata
 1 048 bytes in section .text
 
 1 048 bytes of CODE  memory
     3 bytes of CONST memory

Errors: none
Warnings: none
