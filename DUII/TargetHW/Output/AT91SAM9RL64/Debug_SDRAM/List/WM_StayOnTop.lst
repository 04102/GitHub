###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:22 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_StayOnTop.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\WM_StayOnTop.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _StayOnTop.lst                                           #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    StayOnTop.o                                              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_StayOnTop.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_StayOnTop.c
     19          Purpose     : Windows manager, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          
     34          /*********************************************************************
     35          *
     36          *       WM_SetStayOnTop
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void WM_SetStayOnTop(WM_HWIN hWin, int OnOff) {
   \                     WM_SetStayOnTop:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     39            WM_Obj * pWin;
     40            if (hWin) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1700000A           BEQ      ??WM_SetStayOnTop_0
     41              U16 OldStatus;
     42              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     43              pWin = WM_H2P(hWin);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_h2p
     44              OldStatus = pWin->Status;
   \   00000024   281090E5           LDR      R1,[R0, #+40]
     45              if (OnOff) {
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   0120A0E1           MOV      R2,R1
   \   00000030   083001E2           AND      R3,R1,#0x8
   \   00000034   0300000A           BEQ      ??WM_SetStayOnTop_1
     46                if ((pWin->Status & WM_SF_STAYONTOP) == 0) {  /* First check if this is necessary at all */
   \   00000038   000053E3           CMP      R3,#+0
   \   0000003C   0300001A           BNE      ??WM_SetStayOnTop_2
     47                  pWin->Status |= WM_SF_STAYONTOP;
   \   00000040   081081E3           ORR      R1,R1,#0x8
   \   00000044   010000EA           B        ??WM_SetStayOnTop_2
     48                }
     49              } else {
     50                if ((pWin->Status & WM_SF_STAYONTOP) != 0) {  /* First check if this is necessary at all */
   \                     ??WM_SetStayOnTop_1:
   \   00000048   000053E3           CMP      R3,#+0
     51                  pWin->Status &= ~WM_SF_STAYONTOP;
   \   0000004C   0810C113           BICNE    R1,R1,#0x8
     52                }
     53              }
     54              if (pWin->Status != OldStatus) {
   \                     ??WM_SetStayOnTop_2:
   \   00000050   0228A0E1           MOV      R2,R2, LSL #+16
   \   00000054   281080E5           STR      R1,[R0, #+40]
   \   00000058   220851E1           CMP      R1,R2, LSR #+16
   \   0000005C   0400000A           BEQ      ??WM_SetStayOnTop_3
     55                WM_AttachWindow(hWin, WM_GetParent(hWin));
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WM_GetParent
   \   00000068   0010A0E1           MOV      R1,R0
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       WM_AttachWindow
     56              }
     57              WM_UNLOCK();
   \                     ??WM_SetStayOnTop_3:
   \   00000074   ........           BL       GUI_Unlock
     58            }
     59          }
   \                     ??WM_SetStayOnTop_0:
   \   00000078   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000007C   3080BDE8           POP      {R4,R5,PC}       ;; return
     60          
     61          /*********************************************************************
     62          *
     63          *       WM_GetStayOnTop
     64          */

   \                                 In section .text, align 4, keep-with-next
     65          int WM_GetStayOnTop(WM_HWIN hWin) {
   \                     WM_GetStayOnTop:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     66            int Result = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     67            WM_Obj * pWin;
     68            if (hWin) {
   \   00000010   0600000A           BEQ      ??WM_GetStayOnTop_0
     69              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     70              pWin = WM_H2P(hWin);
     71              if ((pWin->Status & WM_SF_STAYONTOP) != 0) {
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_h2p
   \   00000020   2800D0E5           LDRB     R0,[R0, #+40]
   \   00000024   080010E3           TST      R0,#0x8
     72                Result = 1;
   \   00000028   0150A013           MOVNE    R5,#+1
     73              }
     74              WM_UNLOCK();
   \   0000002C   ........           BL       GUI_Unlock
     75            }
     76            return Result;
   \                     ??WM_GetStayOnTop_0:
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   04D08DE2           ADD      SP,SP,#+4
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
     77          }
     78          
     79          #else
     80            void WM_StayOnTop_C(void) {} /* avoid empty object files */
     81          #endif
     82          
     83          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     WM_GetStayOnTop     16
     WM_SetStayOnTop     16


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WM_SetStayOnTop  128
     WM_GetStayOnTop   60

 
 188 bytes in section .text
 
 188 bytes of CODE memory

Errors: none
Warnings: none
