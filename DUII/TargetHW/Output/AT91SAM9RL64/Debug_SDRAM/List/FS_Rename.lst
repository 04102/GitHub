###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_Rename.c                          #
#    Command line =  C:\DUII\TargetHW\FS\FS_Rename.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\FS #
#                    _Rename.lst                                              #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\FS_ #
#                    Rename.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_Rename.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_Rename.c
     19          Purpose     : Implementation of FS_Rename
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          #include "FS_ConfDefaults.h"        /* FS Configuration */
     30          #include "FS_Int.h"
     31          #include "FS_OS.h"
     32          #include "FS_CLib.h"
     33          
     34          /*********************************************************************
     35          *
     36          *       Static code
     37          *
     38          **********************************************************************
     39          */
     40          
     41          
     42          /*********************************************************************
     43          *
     44          *       Public code
     45          *
     46          **********************************************************************
     47          */
     48          
     49          /*********************************************************************
     50          *
     51          *       FS_Rename
     52          *
     53          *  Function description:
     54          *    Rename a file/directory.
     55          *
     56          *  Parameters:
     57          *    sOldName   - Fully qualified file name.
     58          *    sNewName   - new file name.
     59          *
     60          *  Return value:
     61          *    ==0         - File has been renamed.
     62          *    ==-1        - An error has occurred.
     63          */

   \                                 In section .text, align 4, keep-with-next
     64          int FS_Rename(const char * sOldName, const char * sNewName) {
   \                     FS_Rename:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0150A0E1           MOV      R5,R1
     65            const char * s;
     66            int          r;
     67            FS_VOLUME  * pVolume;
     68          
     69            FS_LOCK();
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   ........           BL       FS_OS_Lock
     70            r = -1;
   \   00000018   0060E0E3           MVN      R6,#+0
     71            /* Find correct FSL  (device:unit:name) */
     72            pVolume = FS__FindVolume(sOldName, &s);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       FS__FindVolume
   \   00000028   0040B0E1           MOVS     R4,R0
     73            if (pVolume) {
   \   0000002C   0800000A           BEQ      ??FS_Rename_0
     74              if (FS__AutoMount(pVolume) == FS_MOUNT_RW)  {    
   \   00000030   ........           BL       FS__AutoMount
   \   00000034   030050E3           CMP      R0,#+3
   \   00000038   0500001A           BNE      ??FS_Rename_0
     75                /* Call the FSL function to do the actual work */
     76                FS_LOCK_DRIVER(&pVolume->Partition.Device);
     77                FS_JOURNAL_BEGIN(pVolume);
     78                r = FS_RENAME(s, sNewName, pVolume);
   \   0000003C   0420A0E1           MOV      R2,R4
   \   00000040   0510A0E1           MOV      R1,R5
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   ........           BL       FS_FAT_Rename
   \   0000004C   0060B0E1           MOVS     R6,R0
     79                FS_JOURNAL_END  (pVolume);
     80                FS_UNLOCK_DRIVER(&pVolume->Partition.Device);
     81                if (r) {
     82                  r = -1;
   \   00000050   0060E013           MVNNE    R6,#+0
     83                }
     84              }
     85            }
     86            FS_UNLOCK();
   \                     ??FS_Rename_0:
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   ........           BL       FS_OS_Unlock
     87            return r;
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   08D08DE2           ADD      SP,SP,#+8
   \   00000064   7080BDE8           POP      {R4-R6,PC}       ;; return
     88          }
     89          
     90          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     FS_Rename     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     FS_Rename       104

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
