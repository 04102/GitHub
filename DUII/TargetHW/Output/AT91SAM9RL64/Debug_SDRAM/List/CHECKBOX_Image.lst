###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:32 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\CHECKBOX_Image.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\CHECKBOX_Image.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\CH #
#                    ECKBOX_Image.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\CHE #
#                    CKBOX_Image.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\CHECKBOX_Image.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : CHECKBOX_Image.c
     19          Purpose     : Contains the default bitmap used by the checkbox widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "CHECKBOX.h"
     24          #include "CHECKBOX_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Static const data
     31          *
     32          **********************************************************************
     33          */
     34          /* Colors */

   \                                 In section .rodata, align 4, keep-with-next
     35          static const GUI_COLOR _aColorDisabled[] = {CHECKBOX_BKCOLOR0_DEFAULT, CHECKBOX_FGCOLOR0_DEFAULT};
   \                     _aColorDisabled:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   808080001010       DC32 8421504, 1052688
   \              1000        

   \                                 In section .rodata, align 4, keep-with-next
     36          static const GUI_COLOR _aColorEnabled[]  = {CHECKBOX_BKCOLOR1_DEFAULT, CHECKBOX_FGCOLOR1_DEFAULT};
   \                     _aColorEnabled:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   FFFFFF000000       DC32 16777215, 0
   \              0000        
     37          
     38          /* Palettes */

   \                                 In section .rodata, align 4, keep-with-next
     39          static const GUI_LOGPALETTE _PalCheckDisabled = {
   \                     _PalCheckDisabled:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 _aColorDisabled
     40            2,	/* number of entries */
     41            1, 	/* transparency flag */
     42            _aColorDisabled
     43          };
     44          

   \                                 In section .rodata, align 4, keep-with-next
     45          static const GUI_LOGPALETTE _PalCheckEnabled = {
   \                     _PalCheckEnabled:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   02000000           DC32 2
   \   00000004   01000000           DC8 1, 0, 0, 0
   \   00000008   ........           DC32 _aColorEnabled
     46            2,	/* number of entries */
     47            1, 	/* transparency flag */
     48            _aColorEnabled
     49          };
     50          
     51          /* Pixel data */
     52          #if   WIDGET_USE_SCHEME_SMALL

   \                                 In section .rodata, align 4, keep-with-next
     53          static const unsigned char _acCheck[] = {
   \                     _acCheck:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   000000000080       DC8 0, 0, 0, 0, 0, 128, 1, 128, 35, 128
   \              01802380    
   \   0000000A   37003E001C00       DC8 55, 0, 62, 0, 28, 0, 8, 0, 0, 0
   \              08000000    
   \   00000014   00000000           DC8 0, 0, 0, 0
     54            ________, ________,
     55            ________, ________,
     56            ________, X_______,
     57            _______X, X_______,
     58            __X___XX, X_______,
     59            __XX_XXX, ________,
     60            __XXXXX_, ________,
     61            ___XXX__, ________,
     62            ____X___, ________,
     63            ________, ________,
     64            ________, ________
     65          };
     66          #elif WIDGET_USE_SCHEME_MEDIUM
     67          static const unsigned char _acCheck[] = {
     68            ________, ________,
     69            ________, ________,
     70            ________, ________,
     71            ________, _____X__,
     72            ________, ____XX__,
     73            ________, ___XXX__,
     74            ________, __XXX___,
     75            ________, _XXX____,
     76            __X_____, XXX_____,
     77            __XX___X, XX______,
     78            __XXX_XX, X_______,
     79            ___XXXXX, ________,
     80            ____XXX_, ________,
     81            _____X__, ________,
     82            ________, ________,
     83            ________, ________
     84          };
     85          #elif WIDGET_USE_SCHEME_LARGE
     86          static const unsigned char _acCheck[] = {
     87            ________, ________, ________,
     88            ________, ________, ________,
     89            ________, ________, ________,
     90            ________, ________, ___X____,
     91            ________, ________, __XX____,
     92            ________, ________, _XXX____,
     93            ________, ________, XXXX____,
     94            ________, _______X, XXX_____,
     95            ________, ______XX, XX______,
     96            ________, _____XXX, X_______,
     97            __X_____, ____XXXX, ________,
     98            __XX____, ___XXXX_, ________,
     99            __XXX___, __XXXX__, ________,
    100            __XXXX__, _XXXX___, ________,
    101            ___XXXX_, XXXX____, ________,
    102            ____XXXX, XXX_____, ________,
    103            _____XXX, XX______, ________,
    104            ______XX, X_______, ________,
    105            _______X, ________, ________,
    106            ________, ________, ________,
    107            ________, ________, ________,
    108            ________, ________, ________
    109          };
    110          #endif
    111          
    112          /*********************************************************************
    113          *
    114          *       Exported const data
    115          *
    116          **********************************************************************
    117          */
    118          /* Bitmaps */
    119          #if   WIDGET_USE_SCHEME_SMALL

   \                                 In section .rodata, align 4, keep-with-next
    120          const GUI_BITMAP CHECKBOX__abmCheck[2] = {
   \                     CHECKBOX__abmCheck:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   0B000B000200       DC16 11, 11, 2, 1
   \              0100        
   \   00000008   ............       DC32 _acCheck, _PalCheckDisabled
   \              ....        
   \   00000010   00000000           DC8 0, 0, 0, 0
   \   00000014   0B000B000200       DC16 11, 11, 2, 1
   \              0100        
   \   0000001C   ............       DC32 _acCheck, _PalCheckEnabled
   \              ....        
   \   00000024   00000000           DC8 0, 0, 0, 0
    121            { 11, 11, 2, 1, _acCheck,  &_PalCheckDisabled},
    122            { 11, 11, 2, 1, _acCheck,  &_PalCheckEnabled }
    123          };
    124          #elif WIDGET_USE_SCHEME_MEDIUM
    125          const GUI_BITMAP CHECKBOX__abmCheck[2] = {
    126            { 16, 16, 2, 1, _acCheck,  &_PalCheckDisabled},
    127            { 16, 16, 2, 1, _acCheck,  &_PalCheckEnabled }
    128          };
    129          #elif WIDGET_USE_SCHEME_LARGE
    130          const GUI_BITMAP CHECKBOX__abmCheck[2] = {
    131            { 22, 22, 3, 1, _acCheck,  &_PalCheckDisabled},
    132            { 22, 22, 3, 1, _acCheck,  &_PalCheckEnabled }
    133          };
    134          #endif
    135          
    136          #else                            /* Avoid problems with empty object modules */
    137            void CHECKBOX_Image_C(void);
    138            void CHECKBOX_Image_C(void) {}
    139          #endif


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     _aColorDisabled       8
     _aColorEnabled        8
     _PalCheckDisabled    12
     _PalCheckEnabled     12
     _acCheck             24
     CHECKBOX__abmCheck   40

 
 104 bytes in section .rodata
 
 104 bytes of CONST memory

Errors: none
Warnings: none
