###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:05 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_UC_EnableBIDI.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_UC_EnableBIDI.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_UC_EnableBIDI.lst                                      #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _UC_EnableBIDI.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_UC_EnableBIDI.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_UC_EnableBIDI.c
     19          Purpose     : Enabling of drawing bidirectional text
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static data
     30          *
     31          **********************************************************************
     32          */

   \                                 In section .bss, align 4
     33          static const char GUI_UNI_PTR * (* _GUI_CharLine_pfLog2Vis)          (const char GUI_UNI_PTR * s, int * pMaxNumChars);
   \                     _GUI_CharLine_pfLog2Vis:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 4
   \   0000000C                      DS8 4
   \   00000010                      DS8 4
   \   00000014                      DS8 4
     34          static int                      (* _GUI__GetCursorPos_pfGetPosX)     (const char GUI_UNI_PTR * s, int Index, int MaxNumChars);
     35          static int                      (* _GUI__GetCursorPos_pfGetPosChar)  (const char GUI_UNI_PTR * s, int x, int MaxNumChars);
     36          static U16                      (* _GUI__GetCursorPos_pfGetCharacter)(const char GUI_UNI_PTR * s, int Index, int MaxNumChars, int * pIsRTL);
     37          static int                      (* _GUI__Wrap_pfGetWordWrap)         (const char GUI_UNI_PTR * s, int xSize, int * pxDist);
     38          static int                      (* _GUI__Wrap_pfGetCharWrap)         (const char GUI_UNI_PTR * s, int xSize);
     39          
     40          /*********************************************************************
     41          *
     42          *       Private code
     43          *
     44          **********************************************************************
     45          */
     46          /*********************************************************************
     47          *
     48          *       GUI__BIDI_Log2VisBuffered
     49          */

   \                                 In section .text, align 4, keep-with-next
     50          const char GUI_UNI_PTR * GUI__BIDI_Log2VisBuffered(const char GUI_UNI_PTR * s, int * pMaxNumChars) {
   \                     GUI__BIDI_Log2VisBuffered:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     51            static char acBuffer[GUI_BIDI_MAX_CHARS_PER_LINE * 3];
     52            int MaxNumChars;
     53          
     54            MaxNumChars = *pMaxNumChars;
     55            MaxNumChars = GUI__BIDI_Log2Vis(s, MaxNumChars, acBuffer, sizeof(acBuffer));
     56            s = acBuffer;
     57            *pMaxNumChars = MaxNumChars;
   \   00000004   ........           LDR      R5,??DataTable1
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   F030A0E3           MOV      R3,#+240
   \   00000014   0520A0E1           MOV      R2,R5
   \   00000018   001094E5           LDR      R1,[R4, #+0]
   \   0000001C   ........           BL       GUI__BIDI_Log2Vis
   \   00000020   000084E5           STR      R0,[R4, #+0]
     58            return s;
   \   00000024   0500A0E1           MOV      R0,R5
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   3080BDE8           POP      {R4,R5,PC}       ;; return
     59          }

   \                                 In section .bss, align 4
   \                     ??acBuffer:
   \   00000000                      DS8 240
     60          
     61          /*********************************************************************
     62          *
     63          *       Public code
     64          *
     65          **********************************************************************
     66          */
     67          /*********************************************************************
     68          *
     69          *       GUI_UC_EnableBIDI
     70          */

   \                                 In section .text, align 4, keep-with-next
     71          int GUI_UC_EnableBIDI(int OnOff) {
   \                     GUI_UC_EnableBIDI:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0050A0E1           MOV      R5,R0
     72            int PreviousState;
     73          
     74            GUI_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     75            PreviousState = GUI__BIDI_Enabled;
   \   00000010   ........           LDR      R0,??DataTable1_1
     76            if ((OnOff > 0) && (GUI__BIDI_Enabled == 0)) {
   \   00000014   010055E3           CMP      R5,#+1
   \   00000018   001090E5           LDR      R1,[R0, #+0]
   \   0000001C   0140A0E1           MOV      R4,R1
   \   00000020   320000BA           BLT      ??GUI_UC_EnableBIDI_0
   \   00000024   000051E3           CMP      R1,#+0
   \   00000028   5000001A           BNE      ??GUI_UC_EnableBIDI_1
     77              //
     78              // Get current values of function pointers from GUI_CharLine.c, GUI__GetCursorPos.c and GUI__Wrap.c
     79              //
     80              _GUI_CharLine_pfLog2Vis           = GUI_CharLine_pfLog2Vis;
   \   0000002C   ........           LDR      R2,??DataTable1_2
   \   00000030   ........           LDR      R1,??DataTable1_3
   \   00000034   003092E5           LDR      R3,[R2, #+0]
     81              _GUI__GetCursorPos_pfGetPosX      = GUI__GetCursorPos_pfGetPosX;
     82              _GUI__GetCursorPos_pfGetPosChar   = GUI__GetCursorPos_pfGetPosChar;
     83              _GUI__GetCursorPos_pfGetCharacter = GUI__GetCursorPos_pfGetCharacter;
     84              _GUI__Wrap_pfGetWordWrap          = GUI__Wrap_pfGetWordWrap;
     85              _GUI__Wrap_pfGetCharWrap          = GUI__Wrap_pfGetCharWrap;
     86              //
     87              // Set function pointers in GUI__BiDiRouting.c
     88              //
     89              _pfGUI__BIDI_Log2Vis          = GUI__BIDI_Log2Vis;
     90              _pfGUI__BIDI_GetCursorPosX    = GUI__BIDI_GetCursorPosX;
     91              _pfGUI__BIDI_GetCursorPosChar = GUI__BIDI_GetCursorPosChar;
   \   00000038   ........           LDR      R8,??DataTable1_4
   \   0000003C   003081E5           STR      R3,[R1, #+0]
   \   00000040   ........           LDR      R3,??DataTable1_5
     92              _pfGUI__BIDI_GetLogChar       = GUI__BIDI_GetLogChar;
   \   00000044   ........           LDR      R9,??DataTable1_6
   \   00000048   00C093E5           LDR      R12,[R3, #+0]
   \   0000004C   04C081E5           STR      R12,[R1, #+4]
   \   00000050   ........           LDR      R12,??DataTable1_7
   \   00000054   00E09CE5           LDR      LR,[R12, #+0]
   \   00000058   08E081E5           STR      LR,[R1, #+8]
   \   0000005C   ........           LDR      LR,??DataTable1_8
   \   00000060   00509EE5           LDR      R5,[LR, #+0]
   \   00000064   0C5081E5           STR      R5,[R1, #+12]
   \   00000068   ........           LDR      R5,??DataTable1_9
   \   0000006C   006095E5           LDR      R6,[R5, #+0]
   \   00000070   106081E5           STR      R6,[R1, #+16]
   \   00000074   ........           LDR      R6,??DataTable1_10
   \   00000078   007096E5           LDR      R7,[R6, #+0]
   \   0000007C   147081E5           STR      R7,[R1, #+20]
   \   00000080   ........           LDR      R1,??DataTable1_11
   \   00000084   ........           LDR      R7,??DataTable1_12
   \   00000088   007081E5           STR      R7,[R1, #+0]
   \   0000008C   ........           LDR      R1,??DataTable1_13
   \   00000090   ........           LDR      R7,??DataTable1_14
     93              _pfGUI__BIDI_GetCharDir       = GUI__BIDI_GetCharDir;
     94              _pfGUI__BIDI_IsNSM            = GUI__BIDI_IsNSM;
     95              //
     96              // Set function pointer in GUI_CharLine.c
     97              //
     98              GUI_CharLine_pfLog2Vis = GUI__BIDI_Log2VisBuffered;
     99              //
    100              // Set function pointers in GUI__GetCursorPos.c
    101              //
    102              GUI__GetCursorPos_pfGetPosX      = GUI__BIDI_GetCursorPosX;
   \   00000094   001083E5           STR      R1,[R3, #+0]
   \   00000098   001087E5           STR      R1,[R7, #+0]
   \   0000009C   ........           LDR      R7,??DataTable1_15
    103              GUI__GetCursorPos_pfGetPosChar   = GUI__BIDI_GetCursorPosChar;
    104              GUI__GetCursorPos_pfGetCharacter = GUI__BIDI_GetCursorCharacter;
   \   000000A0   ........           LDR      R1,??DataTable1_16
   \   000000A4   007088E5           STR      R7,[R8, #+0]
   \   000000A8   ........           LDR      R8,??DataTable1_17
   \   000000AC   00108EE5           STR      R1,[LR, #+0]
   \   000000B0   009088E5           STR      R9,[R8, #+0]
   \   000000B4   ........           LDR      R8,??DataTable1_18
   \   000000B8   ........           LDR      R9,??DataTable1_19
    105              //
    106              // Set function pointers in GUI__Wrap.c
    107              //
    108              GUI__Wrap_pfGetWordWrap = GUI__BIDI_GetWordWrap;
   \   000000BC   ........           LDR      R1,??DataTable1_20
   \   000000C0   009088E5           STR      R9,[R8, #+0]
   \   000000C4   ........           LDR      R8,??DataTable1_21
   \   000000C8   ........           LDR      R9,??DataTable1_22
   \   000000CC   001085E5           STR      R1,[R5, #+0]
   \   000000D0   009088E5           STR      R9,[R8, #+0]
    109              GUI__Wrap_pfGetCharWrap = GUI__BIDI_GetCharWrap;
   \   000000D4   ........           LDR      R1,??DataTable1_23
   \   000000D8   ........           LDR      R8,??DataTable1_24
   \   000000DC   001086E5           STR      R1,[R6, #+0]
   \   000000E0   008082E5           STR      R8,[R2, #+0]
   \   000000E4   00708CE5           STR      R7,[R12, #+0]
    110              //
    111              // Set common flag
    112              //
    113              GUI__BIDI_Enabled = 1;
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   1E0000EA           B        ??GUI_UC_EnableBIDI_2
    114            } else if ((OnOff == 0) && (GUI__BIDI_Enabled > 0)) {
   \                     ??GUI_UC_EnableBIDI_0:
   \   000000F0   000055E3           CMP      R5,#+0
   \   000000F4   1D00001A           BNE      ??GUI_UC_EnableBIDI_1
   \   000000F8   010051E3           CMP      R1,#+1
   \   000000FC   1B0000BA           BLT      ??GUI_UC_EnableBIDI_1
    115              if ((_GUI_CharLine_pfLog2Vis           != NULL) &&
    116                  (_GUI__GetCursorPos_pfGetPosX      != NULL) &&
    117                  (_GUI__GetCursorPos_pfGetPosChar   != NULL) &&
    118                  (_GUI__GetCursorPos_pfGetCharacter != NULL) &&
    119                  (_GUI__Wrap_pfGetWordWrap          != NULL) &&
    120                  (_GUI__Wrap_pfGetCharWrap          != NULL)) {
   \   00000100   ........           LDR      R1,??DataTable1_3
   \   00000104   002091E5           LDR      R2,[R1, #+0]
   \   00000108   000052E3           CMP      R2,#+0
   \   0000010C   04309115           LDRNE    R3,[R1, #+4]
   \   00000110   00005313           CMPNE    R3,#+0
   \   00000114   08C09115           LDRNE    R12,[R1, #+8]
   \   00000118   00005C13           CMPNE    R12,#+0
   \   0000011C   0CE09115           LDRNE    LR,[R1, #+12]
   \   00000120   00005E13           CMPNE    LR,#+0
   \   00000124   10509115           LDRNE    R5,[R1, #+16]
   \   00000128   00005513           CMPNE    R5,#+0
   \   0000012C   14109115           LDRNE    R1,[R1, #+20]
   \   00000130   00005113           CMPNE    R1,#+0
   \   00000134   0D00000A           BEQ      ??GUI_UC_EnableBIDI_1
    121                //
    122                // Restore function pointers in GUI_CharLine.c
    123                //
    124                GUI_CharLine_pfLog2Vis = _GUI_CharLine_pfLog2Vis;
   \   00000138   ........           LDR      R6,??DataTable1_2
   \   0000013C   002086E5           STR      R2,[R6, #+0]
    125                //
    126                // Restore function pointers in GUI__GetCursorPos.c
    127                //
    128                GUI__GetCursorPos_pfGetPosX      = _GUI__GetCursorPos_pfGetPosX;
   \   00000140   ........           LDR      R2,??DataTable1_5
   \   00000144   003082E5           STR      R3,[R2, #+0]
    129                GUI__GetCursorPos_pfGetPosChar   = _GUI__GetCursorPos_pfGetPosChar;
   \   00000148   ........           LDR      R2,??DataTable1_7
   \   0000014C   00C082E5           STR      R12,[R2, #+0]
    130                GUI__GetCursorPos_pfGetCharacter = _GUI__GetCursorPos_pfGetCharacter;
   \   00000150   ........           LDR      R2,??DataTable1_8
   \   00000154   00E082E5           STR      LR,[R2, #+0]
    131                //
    132                // Restore function pointers in GUI__Wrap.c
    133                //
    134                GUI__Wrap_pfGetWordWrap = _GUI__Wrap_pfGetWordWrap;
   \   00000158   ........           LDR      R2,??DataTable1_9
   \   0000015C   005082E5           STR      R5,[R2, #+0]
    135                GUI__Wrap_pfGetCharWrap = _GUI__Wrap_pfGetCharWrap;
   \   00000160   ........           LDR      R2,??DataTable1_10
   \   00000164   001082E5           STR      R1,[R2, #+0]
    136                //
    137                // Set common flag
    138                //
    139                GUI__BIDI_Enabled = 0;
   \   00000168   0010A0E3           MOV      R1,#+0
   \                     ??GUI_UC_EnableBIDI_2:
   \   0000016C   001080E5           STR      R1,[R0, #+0]
    140              }
    141            }
    142            GUI_UNLOCK();
   \                     ??GUI_UC_EnableBIDI_1:
   \   00000170   ........           BL       GUI_Unlock
    143            return PreviousState;
   \   00000174   0400A0E1           MOV      R0,R4
   \   00000178   04D08DE2           ADD      SP,SP,#+4
   \   0000017C   F083BDE8           POP      {R4-R9,PC}       ;; return
    144          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     ??acBuffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     GUI__BIDI_Enabled

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     GUI_CharLine_pfLog2Vis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   ........           DC32     _GUI_CharLine_pfLog2Vis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   ........           DC32     _pfGUI__BIDI_GetCursorPosChar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   ........           DC32     GUI__GetCursorPos_pfGetPosX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   ........           DC32     GUI__BIDI_GetLogChar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   ........           DC32     GUI__GetCursorPos_pfGetPosChar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   ........           DC32     GUI__GetCursorPos_pfGetCharacter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   ........           DC32     GUI__Wrap_pfGetWordWrap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   ........           DC32     GUI__Wrap_pfGetCharWrap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   ........           DC32     _pfGUI__BIDI_Log2Vis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   ........           DC32     GUI__BIDI_Log2Vis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   ........           DC32     GUI__BIDI_GetCursorPosX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   ........           DC32     _pfGUI__BIDI_GetCursorPosX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   ........           DC32     GUI__BIDI_GetCursorPosChar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   ........           DC32     GUI__BIDI_GetCursorCharacter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   ........           DC32     _pfGUI__BIDI_GetLogChar

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   ........           DC32     _pfGUI__BIDI_GetCharDir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   ........           DC32     GUI__BIDI_GetCharDir

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   ........           DC32     GUI__BIDI_GetWordWrap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   ........           DC32     _pfGUI__BIDI_IsNSM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   ........           DC32     GUI__BIDI_IsNSM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   ........           DC32     GUI__BIDI_GetCharWrap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   ........           DC32     GUI__BIDI_Log2VisBuffered
    145          
    146          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     GUI_UC_EnableBIDI             32
     GUI__BIDI_Log2VisBuffered     16


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     _GUI_CharLine_pfLog2Vis          24
     _GUI__GetCursorPos_pfGetPosX
     _GUI__GetCursorPos_pfGetPosChar
     _GUI__GetCursorPos_pfGetCharacter
     _GUI__Wrap_pfGetWordWrap
     _GUI__Wrap_pfGetCharWrap
     GUI__BIDI_Log2VisBuffered        48
     acBuffer                        240
     GUI_UC_EnableBIDI               384
     ??DataTable1                      4
     ??DataTable1_1                    4
     ??DataTable1_2                    4
     ??DataTable1_3                    4
     ??DataTable1_4                    4
     ??DataTable1_5                    4
     ??DataTable1_6                    4
     ??DataTable1_7                    4
     ??DataTable1_8                    4
     ??DataTable1_9                    4
     ??DataTable1_10                   4
     ??DataTable1_11                   4
     ??DataTable1_12                   4
     ??DataTable1_13                   4
     ??DataTable1_14                   4
     ??DataTable1_15                   4
     ??DataTable1_16                   4
     ??DataTable1_17                   4
     ??DataTable1_18                   4
     ??DataTable1_19                   4
     ??DataTable1_20                   4
     ??DataTable1_21                   4
     ??DataTable1_22                   4
     ??DataTable1_23                   4
     ??DataTable1_24                   4

 
 264 bytes in section .bss
 532 bytes in section .text
 
 532 bytes of CODE memory
 264 bytes of DATA memory

Errors: none
Warnings: none
