###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:27 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_GetItemText.c              #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_GetItemText.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LI #
#                    STVIEW_GetItemText.lst                                   #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LIS #
#                    TVIEW_GetItemText.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_GetItemText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_GetItemText.c
     19          Purpose     : Implementation of LISTVIEW_GetItemText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "LISTVIEW_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Public routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       LISTVIEW_GetItemText
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          void LISTVIEW_GetItemText(LISTVIEW_Handle hObj, unsigned Column, unsigned Row, char* pBuffer, unsigned MaxSize) {
   \                     LISTVIEW_GetItemText:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   18809DE5           LDR      R8,[SP, #+24]
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   0260A0E1           MOV      R6,R2
     40            memset(pBuffer, 0, MaxSize);
   \   00000018   0810A0E1           MOV      R1,R8
   \   0000001C   0700A0E1           MOV      R0,R7
   \   00000020   ........           BL       __aeabi_memclr
     41            if (hObj && MaxSize) {
   \   00000024   000054E3           CMP      R4,#+0
   \   00000028   00005813           CMPNE    R8,#+0
   \   0000002C   1B00000A           BEQ      ??LISTVIEW_GetItemText_0
     42              LISTVIEW_Obj* pObj;
     43              WM_LOCK();
   \   00000030   ........           BL       GUI_Lock
     44              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       GUI_ALLOC_LockH
   \   0000003C   0040A0E1           MOV      R4,R0
     45              if ((Column < LISTVIEW__GetNumColumns(pObj)) && (Row < LISTVIEW__GetNumRows(pObj))) {
   \   00000040   ........           BL       LISTVIEW__GetNumColumns
   \   00000044   000055E1           CMP      R5,R0
   \   00000048   1200002A           BCS      ??LISTVIEW_GetItemText_1
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           BL       LISTVIEW__GetNumRows
   \   00000054   000056E1           CMP      R6,R0
   \   00000058   0E00002A           BCS      ??LISTVIEW_GetItemText_1
     46                LISTVIEW_ROW  * pRow;
     47                LISTVIEW_CELL * pCell;
     48                pRow  = (LISTVIEW_ROW  *)GUI_ARRAY_GetpItemLocked(pObj->RowArray,  Row);
   \   0000005C   0610A0E1           MOV      R1,R6
   \   00000060   380094E5           LDR      R0,[R4, #+56]
   \   00000064   ........           BL       GUI_ARRAY_GetpItemLocked
     49                pCell = (LISTVIEW_CELL *)GUI_ARRAY_GetpItemLocked(pRow->CellArray, Column);
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   000090E5           LDR      R0,[R0, #+0]
   \   00000070   ........           BL       GUI_ARRAY_GetpItemLocked
     50                strncpy(pBuffer, pCell->acText, MaxSize);
   \   00000074   041080E2           ADD      R1,R0,#+4
   \   00000078   0820A0E1           MOV      R2,R8
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   ........           BL       strncpy
     51                pBuffer[MaxSize - 1] = 0;
   \   00000084   070088E0           ADD      R0,R8,R7
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   011040E5           STRB     R1,[R0, #-1]
     52                GUI_UNLOCK_H(pCell);
   \   00000090   ........           BL       GUI_ALLOC_UnlockH
     53                GUI_UNLOCK_H(pRow);
   \   00000094   ........           BL       GUI_ALLOC_UnlockH
     54              }
     55              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_GetItemText_1:
   \   00000098   ........           BL       GUI_ALLOC_UnlockH
     56              WM_UNLOCK();
   \   0000009C   ........           BL       GUI_Unlock
     57            }
     58          }
   \                     ??LISTVIEW_GetItemText_0:
   \   000000A0   F081BDE8           POP      {R4-R8,PC}       ;; return
     59          
     60          #else                            /* Avoid problems with empty object modules */
     61            void LISTVIEW_GetItemText_C(void);
     62            void LISTVIEW_GetItemText_C(void) {}
     63          #endif
     64          
     65          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     LISTVIEW_GetItemText     24


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     LISTVIEW_GetItemText  164

 
 164 bytes in section .text
 
 164 bytes of CODE memory

Errors: none
Warnings: none
