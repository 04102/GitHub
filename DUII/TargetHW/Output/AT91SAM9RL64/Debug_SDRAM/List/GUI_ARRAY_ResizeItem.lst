###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:43 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_ARRAY_ResizeItem.c              #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_ARRAY_ResizeItem.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_ARRAY_ResizeItem.lst                                   #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _ARRAY_ResizeItem.o                                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_ARRAY_ResizeItem.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_ARRAY_ResizeItem.c
     19          Purpose     : Array handling routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GUI_ARRAY_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Public code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_ARRAY_ResizeItemLocked
     38          *
     39          * Purpose:
     40          *   Resizes one element in a GUI_ARRAY_OBJ.
     41          * Return value:
     42          *   Handle of allocated memory block if successful
     43          *   0 if failed
     44          *
     45          */

   \                                 In section .text, align 4, keep-with-next
     46          void * GUI_ARRAY_ResizeItemLocked(GUI_ARRAY hArray, unsigned int Index, int Len) {
   \                     GUI_ARRAY_ResizeItemLocked:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   \   00000008   0250A0E1           MOV      R5,R2
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0140A0E1           MOV      R4,R1
     47            GUI_ARRAY_OBJ * pThis;
     48            void * r;
     49            WM_HMEM hNew;
     50            
     51            r     = NULL;
   \   00000014   0060A0E3           MOV      R6,#+0
     52            hNew  = GUI_ALLOC_AllocZero(Len);
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   ........           BL       GUI_ALLOC_AllocZero
   \   00000020   00008DE5           STR      R0,[SP, #+0]
     53            if (hNew) {
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   1700000A           BEQ      ??GUI_ARRAY_ResizeItemLocked_0
     54              void * pOld;
     55              void * pNew;
     56              pThis = (GUI_ARRAY_OBJ *)GUI_LOCK_H(hArray);
   \   0000002C   0700A0E1           MOV      R0,R7
   \   00000030   ........           BL       GUI_ALLOC_LockH
   \   00000034   0070A0E1           MOV      R7,R0
     57              pOld = GUI_ARRAY__GetpItemLocked(pThis, Index);
   \   00000038   0410A0E1           MOV      R1,R4
   \   0000003C   ........           BL       GUI_ARRAY__GetpItemLocked
   \   00000040   0080A0E1           MOV      R8,R0
     58              pNew = GUI_LOCK_H(hNew);
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   ........           BL       GUI_ALLOC_LockH
   \   0000004C   0090A0E1           MOV      R9,R0
     59              GUI_MEMCPY(pNew, pOld, Len);
   \   00000050   0520A0E1           MOV      R2,R5
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   ........           BL       __aeabi_memcpy
     60              if (GUI_ARRAY__SethItem(pThis, Index, hNew)) {
   \   0000005C   00209DE5           LDR      R2,[SP, #+0]
   \   00000060   0410A0E1           MOV      R1,R4
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   ........           BL       GUI_ARRAY__SethItem
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0200000A           BEQ      ??GUI_ARRAY_ResizeItemLocked_1
     61                GUI_ALLOC_FreePtr(&hNew);    /* Free on error */
   \   00000074   0D00A0E1           MOV      R0,SP
   \   00000078   ........           BL       GUI_ALLOC_FreePtr
   \   0000007C   000000EA           B        ??GUI_ARRAY_ResizeItemLocked_2
     62              } else {
     63                r = pNew;
   \                     ??GUI_ARRAY_ResizeItemLocked_1:
   \   00000080   0960A0E1           MOV      R6,R9
     64              }
     65              GUI_UNLOCK_H(pThis);
   \                     ??GUI_ARRAY_ResizeItemLocked_2:
   \   00000084   ........           BL       GUI_ALLOC_UnlockH
     66              GUI_UNLOCK_H(pOld);
   \   00000088   ........           BL       GUI_ALLOC_UnlockH
     67            }
     68            return r;
   \                     ??GUI_ARRAY_ResizeItemLocked_0:
   \   0000008C   0600A0E1           MOV      R0,R6
   \   00000090   04D08DE2           ADD      SP,SP,#+4
   \   00000094   F083BDE8           POP      {R4-R9,PC}       ;; return
     69          }
     70          
     71          #else  /* avoid empty object files */
     72          
     73          void GUI_ARRAY_ResizeItem_C(void);
     74          void GUI_ARRAY_ResizeItem_C(void){}
     75          
     76          #endif

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     GUI_ARRAY_ResizeItemLocked     32


   Section sizes:

     Function/Label             Bytes
     --------------             -----
     GUI_ARRAY_ResizeItemLocked  152

 
 152 bytes in section .text
 
 152 bytes of CODE memory

Errors: none
Warnings: none
