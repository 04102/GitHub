###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:59 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\EDITFloat.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\EDITFloat.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\ED #
#                    ITFloat.lst                                              #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\EDI #
#                    TFloat.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\EDITFloat.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : EDITFloat.c
     19          Purpose     : Edit decimal values
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <math.h>
     24          
     25          #include "EDIT_Private.h"
     26          #include "GUI_Debug.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *             Exported routines
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       EDIT_SetFloatMode
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          void EDIT_SetFloatMode(EDIT_Handle hEdit, float Value, float Min, float Max, int Shift, U8 Flags) {
   \                     EDIT_SetFloatMode:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0190A0E1           MOV      R9,R1
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   03A0A0E1           MOV      R10,R3
   \   00000018   30509DE5           LDR      R5,[SP, #+48]
   \   0000001C   3460DDE5           LDRB     R6,[SP, #+52]
     41            I32 _Value, _Min, _Max;
     42            float Scale;
     43            if (hEdit) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   3400000A           BEQ      ??EDIT_SetFloatMode_0
     44              WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
     45              Scale  =(float)GUI_Pow10[Shift];
   \   0000002C   ........           LDR      R0,??DataTable2
   \   00000030   050190E7           LDR      R0,[R0, +R5, LSL #+2]
   \   00000034   ........           BL       __aeabi_ui2f
   \   00000038   0070A0E1           MOV      R7,R0
     46              _Value = (I32)floor(Scale * Value + 0.5);
   \   0000003C   0910A0E1           MOV      R1,R9
   \   00000040   ........           BL       __aeabi_fmul
   \   00000044   ........           BL       __aeabi_f2d
   \   00000048   C035A0E3           MOV      R3,#+805306368
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   FE3683E3           ORR      R3,R3,#0xFE00000
   \   00000054   ........           BL       __aeabi_dadd
   \   00000058   ........           BL       floor
   \   0000005C   03008DE8           STM      SP,{R0,R1}
   \   00000060   F800CDE1           STRD     R0,R1,[SP, #+8]
     47              _Min   = (I32)floor(Scale * Min + 0.5);
   \   00000064   0700A0E1           MOV      R0,R7
   \   00000068   0810A0E1           MOV      R1,R8
   \   0000006C   ........           BL       __aeabi_fmul
   \   00000070   ........           BL       __aeabi_f2d
   \   00000074   C035A0E3           MOV      R3,#+805306368
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   FE3683E3           ORR      R3,R3,#0xFE00000
   \   00000080   ........           BL       __aeabi_dadd
   \   00000084   ........           BL       floor
   \   00000088   0080A0E1           MOV      R8,R0
   \   0000008C   0190A0E1           MOV      R9,R1
     48              _Max   = (I32)floor(Scale * Max + 0.5);
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   0A10A0E1           MOV      R1,R10
   \   00000098   ........           BL       __aeabi_fmul
   \   0000009C   ........           BL       __aeabi_f2d
   \   000000A0   0130A0E1           MOV      R3,R1
   \   000000A4   0020A0E1           MOV      R2,R0
   \   000000A8   C015A0E3           MOV      R1,#+805306368
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   FE1681E3           ORR      R1,R1,#0xFE00000
   \   000000B4   ........           BL       __aeabi_dadd
   \   000000B8   ........           BL       floor
     49              EDIT_SetDecMode(hEdit, _Value, _Min, _Max, Shift, Flags);
   \   000000BC   04608DE5           STR      R6,[SP, #+4]
   \   000000C0   00508DE5           STR      R5,[SP, #+0]
   \   000000C4   ........           BL       __aeabi_d2iz
   \   000000C8   0060A0E1           MOV      R6,R0
   \   000000CC   0800A0E1           MOV      R0,R8
   \   000000D0   0910A0E1           MOV      R1,R9
   \   000000D4   ........           BL       __aeabi_d2iz
   \   000000D8   0050A0E1           MOV      R5,R0
   \   000000DC   D800CDE1           LDRD     R0,R1,[SP, #+8]
   \   000000E0   ........           BL       __aeabi_d2iz
   \   000000E4   0010A0E1           MOV      R1,R0
   \   000000E8   0630A0E1           MOV      R3,R6
   \   000000EC   0520A0E1           MOV      R2,R5
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           BL       EDIT_SetDecMode
     50              WM_UNLOCK();
   \   000000F8   ........           BL       GUI_Unlock
     51            }
     52          }
   \                     ??EDIT_SetFloatMode_0:
   \   000000FC   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000100   F087BDE8           POP      {R4-R10,PC}      ;; return
     53          
     54          /*********************************************************************
     55          *
     56          *       EDIT_GetFloatValue
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          float EDIT_GetFloatValue(EDIT_Handle hObj) {
   \                     EDIT_GetFloatValue:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     59            float Value = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     60            if (hObj) {
   \   00000010   1000000A           BEQ      ??EDIT_GetFloatValue_0
     61              float Scale;
     62              EDIT_Obj * pObj;
     63              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     64              pObj = EDIT_LOCK_H(hObj);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0040A0E1           MOV      R4,R0
     65              Scale = (float)GUI_Pow10[pObj->NumDecs];
     66              Value = (float)(I32)pObj->CurrentValue / Scale;
   \   00000024   480094E5           LDR      R0,[R4, #+72]
   \   00000028   ........           BL       __aeabi_i2f
   \   0000002C   0050A0E1           MOV      R5,R0
   \   00000030   4400D4E5           LDRB     R0,[R4, #+68]
   \   00000034   ........           LDR      R1,??DataTable2
   \   00000038   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   0000003C   ........           BL       __aeabi_ui2f
   \   00000040   0010A0E1           MOV      R1,R0
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           BL       __aeabi_fdiv
   \   0000004C   0050A0E1           MOV      R5,R0
     67              GUI_UNLOCK_H(pObj);
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
     68              WM_UNLOCK();
   \   00000054   ........           BL       GUI_Unlock
     69            }
     70            return Value;
   \                     ??EDIT_GetFloatValue_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
     71          }
     72          
     73          /*********************************************************************
     74          *
     75          *       EDIT_SetFloatValue
     76          */

   \                                 In section .text, align 4, keep-with-next
     77          void EDIT_SetFloatValue(EDIT_Handle hObj, float Value) {
   \                     EDIT_SetFloatValue:
   \   00000000   E0402DE9           PUSH     {R5-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   0170A0E1           MOV      R7,R1
     78            if (hObj) {
   \   0000000C   000056E3           CMP      R6,#+0
   \   00000010   1900000A           BEQ      ??EDIT_SetFloatValue_0
     79              float Scale;
     80              EDIT_Obj * pObj;
     81              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     82              pObj = EDIT_LOCK_H(hObj);
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   ........           BL       GUI_ALLOC_LockH
     83              Scale = (float)GUI_Pow10[pObj->NumDecs];
     84              Value *= Scale;
   \   00000020   4400D0E5           LDRB     R0,[R0, #+68]
   \   00000024   ........           LDR      R1,??DataTable2
   \   00000028   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   0000002C   ........           BL       __aeabi_ui2f
   \   00000030   0710A0E1           MOV      R1,R7
   \   00000034   ........           BL       __aeabi_fmul
   \   00000038   0070A0E1           MOV      R7,R0
     85              GUI_UNLOCK_H(pObj);
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
     86              EDIT_SetValue(hObj, (I32)(Value + (Value >= 0 ? 0.5 : -0.5)));
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           BL       __aeabi_cfrcmple
   \   0000004C   C055A093           MOVLS    R5,#+805306368
   \   00000050   B054A083           MOVHI    R5,#-1342177280
   \   00000054   FE5685E3           ORR      R5,R5,#0xFE00000
   \   00000058   ........           BL       __aeabi_f2d
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0530A0E1           MOV      R3,R5
   \   00000064   ........           BL       __aeabi_dadd
   \   00000068   ........           BL       __aeabi_d2iz
   \   0000006C   0010A0E1           MOV      R1,R0
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       EDIT_SetValue
     87              WM_UNLOCK();
   \   00000078   ........           BL       GUI_Unlock
     88            }
     89          }
   \                     ??EDIT_SetFloatValue_0:
   \   0000007C   E080BDE8           POP      {R5-R7,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     GUI_Pow10
     90          
     91          #else  /* avoid empty object files */
     92          
     93          void EditFloat_C(void);
     94          void EditFloat_C(void){}
     95          
     96          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     EDIT_GetFloatValue     16
     EDIT_SetFloatMode      48
     EDIT_SetFloatValue     24


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     EDIT_SetFloatMode   260
     EDIT_GetFloatValue  100
     EDIT_SetFloatValue  128
     ??DataTable2          4

 
 492 bytes in section .text
 
 492 bytes of CODE memory

Errors: none
Warnings: none
