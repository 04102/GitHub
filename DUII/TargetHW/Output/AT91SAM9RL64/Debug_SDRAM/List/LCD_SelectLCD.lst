###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:21 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LCD_SelectLCD.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\LCD_SelectLCD.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LC #
#                    D_SelectLCD.lst                                          #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LCD #
#                    _SelectLCD.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LCD_SelectLCD.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LCD_SelectLCD.c
     19          Purpose     : Implementation of said routine
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          #include "WM.h"
     29          #endif
     30          
     31          /*********************************************************************
     32          *
     33          *       Public code
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       _SelectLCD
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          void LCD_SelectLCD(void) {
   \                     LCD_SelectLCD:
   \   00000000   10402DE9           PUSH     {R4,LR}
     42            GUI_DEVICE * pDevice;
     43          
     44            //
     45            // Check if there is a memory device in the device chain
     46            //
     47            pDevice = GUI_Context.apDevice[GUI_Context.SelLayer];
   \   00000004   54409FE5           LDR      R4,??LCD_SelectLCD_0
   \   00000008   1100D4E5           LDRB     R0,[R4, #+17]
   \   0000000C   000184E0           ADD      R0,R4,R0, LSL #+2
   \   00000010   480090E5           LDR      R0,[R0, #+72]
     48            if (pDevice) {
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0B00000A           BEQ      ??LCD_SelectLCD_1
     49              do {
     50                if (pDevice->pDeviceAPI->DeviceClassIndex == DEVICE_CLASS_MEMDEV) {
   \                     ??LCD_SelectLCD_2:
   \   0000001C   0C1090E5           LDR      R1,[R0, #+12]
   \   00000020   001091E5           LDR      R1,[R1, #+0]
   \   00000024   040051E3           CMP      R1,#+4
   \   00000028   0300000A           BEQ      ??LCD_SelectLCD_3
     51                  break; // Found memory device, so stop here
     52                }
     53                pDevice = pDevice->pNext;
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
     54              } while (pDevice);
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   F8FFFF1A           BNE      ??LCD_SelectLCD_2
   \   00000038   020000EA           B        ??LCD_SelectLCD_4
     55              if (pDevice) {
   \                     ??LCD_SelectLCD_3:
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0100000A           BEQ      ??LCD_SelectLCD_1
     56                GUI_DEVICE_Unlink(pDevice);
   \   00000044   ........           BL       GUI_DEVICE_Unlink
     57              }
     58            }
     59            GUI_Context.hDevData = 0;
   \                     ??LCD_SelectLCD_4:
   \   00000048   0000A0E3           MOV      R0,#+0
   \                     ??LCD_SelectLCD_1:
   \   0000004C   880084E5           STR      R0,[R4, #+136]
     60            GUI_Context.pClipRect_HL = &GUI_Context.ClipRect;
   \   00000050   080084E2           ADD      R0,R4,#+8
   \   00000054   140084E5           STR      R0,[R4, #+20]
     61            LCD_SetClipRectMax();
   \   00000058   1040BDE8           POP      {R4,LR}
   \   0000005C   ........           B        LCD_SetClipRectMax  ;; tailcall
   \                     ??LCD_SelectLCD_0:
   \   00000060   ........           DC32     GUI_Context
     62          }
     63          
     64          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     LCD_SelectLCD      8


   Section sizes:

     Function/Label Bytes
     -------------- -----
     LCD_SelectLCD   100

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
