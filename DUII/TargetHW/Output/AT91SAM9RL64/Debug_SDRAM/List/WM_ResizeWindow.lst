###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:20 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_ResizeWindow.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM_ResizeWindow.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    _ResizeWindow.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    ResizeWindow.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_ResizeWindow.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_ResizeWindow.C
     19          Purpose     : Windows manager, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          #include "WM_Intern.h"
     25          
     26          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     27          #include "GUI_Debug.h"
     28          #define WM_DEBUG_LEVEL 1
     29          
     30          /*********************************************************************
     31          *
     32          *       Public code
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       WM_ResizeWindow
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          void WM_ResizeWindow(WM_HWIN hWin, int dx, int dy) {
   \                     WM_ResizeWindow:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     41            GUI_RECT rOld, rNew, rMerge;
     42            WM_Obj* pWin;
     43            if (((dx | dy) == 0) || (hWin == 0)){ /* Early out if there is nothing to do */
   \   00000010   050096E1           ORRS     R0,R6,R5
   \   00000014   1CD04DE2           SUB      SP,SP,#+28
   \   00000018   00005413           CMPNE    R4,#+0
   \   0000001C   4E00000A           BEQ      ??WM_ResizeWindow_0
     44              return;
     45            }
     46            WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
     47            pWin = WM_HANDLE2PTR(hWin);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_h2p
   \   0000002C   0070A0E1           MOV      R7,R0
     48            rOld = pWin->Rect;
   \   00000030   0C008DE2           ADD      R0,SP,#+12
   \   00000034   0710A0E1           MOV      R1,R7
   \   00000038   0820A0E3           MOV      R2,#+8
   \   0000003C   ........           BL       __aeabi_memcpy
     49            rNew = rOld;
   \   00000040   0C308DE2           ADD      R3,SP,#+12
   \   00000044   000093E5           LDR      R0,[R3, #+0]
   \   00000048   041093E5           LDR      R1,[R3, #+4]
   \   0000004C   04208DE2           ADD      R2,SP,#+4
   \   00000050   030082E8           STM      R2,{R0,R1}
     50            if (dx) {
   \   00000054   280097E5           LDR      R0,[R7, #+40]
   \   00000058   000055E3           CMP      R5,#+0
   \   0000005C   0900000A           BEQ      ??WM_ResizeWindow_1
     51              if ((pWin->Status & WM_SF_ANCHOR_RIGHT) && (!(pWin->Status & WM_SF_ANCHOR_LEFT))) {
   \   00000060   A01F00E2           AND      R1,R0,#0x280
   \   00000064   800051E3           CMP      R1,#+128
   \   00000068   0300001A           BNE      ??WM_ResizeWindow_2
     52                rNew.x0 -= dx;
   \   0000006C   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000070   051041E0           SUB      R1,R1,R5
   \   00000074   B410CDE1           STRH     R1,[SP, #+4]
   \   00000078   020000EA           B        ??WM_ResizeWindow_1
     53              } else {
     54                rNew.x1 += dx;
   \                     ??WM_ResizeWindow_2:
   \   0000007C   F810DDE1           LDRSH    R1,[SP, #+8]
   \   00000080   011085E0           ADD      R1,R5,R1
   \   00000084   B810CDE1           STRH     R1,[SP, #+8]
     55              }
     56            }
     57            if (dy) {
   \                     ??WM_ResizeWindow_1:
   \   00000088   000056E3           CMP      R6,#+0
   \   0000008C   0900000A           BEQ      ??WM_ResizeWindow_3
     58              if ((pWin->Status & WM_SF_ANCHOR_BOTTOM) && (!(pWin->Status & WM_SF_ANCHOR_TOP))) {
   \   00000090   501E00E2           AND      R1,R0,#0x500
   \   00000094   400F51E3           CMP      R1,#+256
   \   00000098   0300001A           BNE      ??WM_ResizeWindow_4
     59                rNew.y0 -= dy;
   \   0000009C   F610DDE1           LDRSH    R1,[SP, #+6]
   \   000000A0   061041E0           SUB      R1,R1,R6
   \   000000A4   B610CDE1           STRH     R1,[SP, #+6]
   \   000000A8   020000EA           B        ??WM_ResizeWindow_3
     60              } else {
     61                rNew.y1 += dy;
   \                     ??WM_ResizeWindow_4:
   \   000000AC   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   000000B0   011086E0           ADD      R1,R6,R1
   \   000000B4   BA10CDE1           STRH     R1,[SP, #+10]
     62              }
     63            }
     64            if (pWin->Status & WM_CF_STATIC) {
   \                     ??WM_ResizeWindow_3:
   \   000000B8   400B10E3           TST      R0,#0x10000
   \   000000BC   0100000A           BEQ      ??WM_ResizeWindow_5
     65              WM__InvalidateDrawAndDescs(hWin);
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           BL       WM__InvalidateDrawAndDescs
     66            }
     67            pWin->Rect = rNew;
   \                     ??WM_ResizeWindow_5:
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   04108DE2           ADD      R1,SP,#+4
   \   000000D0   0820A0E3           MOV      R2,#+8
   \   000000D4   ........           BL       __aeabi_memcpy
     68            if (pWin->Status & WM_SF_ISVIS) {
   \   000000D8   2800D7E5           LDRB     R0,[R7, #+40]
   \   000000DC   020010E3           TST      R0,#0x2
   \   000000E0   0700000A           BEQ      ??WM_ResizeWindow_6
     69              GUI_MergeRect(&rMerge, &rOld, &rNew);
   \   000000E4   04208DE2           ADD      R2,SP,#+4
   \   000000E8   0C108DE2           ADD      R1,SP,#+12
   \   000000EC   14008DE2           ADD      R0,SP,#+20
   \   000000F0   ........           BL       GUI_MergeRect
     70              WM__InvalidateRectEx(&rMerge, pWin->hParent, pWin->hNext);
   \   000000F4   202097E5           LDR      R2,[R7, #+32]
   \   000000F8   181097E5           LDR      R1,[R7, #+24]
   \   000000FC   14008DE2           ADD      R0,SP,#+20
   \   00000100   ........           BL       WM__InvalidateRectEx
     71            }
     72            WM__UpdateChildPositions(pWin, rNew.x0 - rOld.x0, rNew.y0 - rOld.y0, rNew.x1 - rOld.x1, rNew.y1 - rOld.y1);
   \                     ??WM_ResizeWindow_6:
   \   00000104   FA00DDE1           LDRSH    R0,[SP, #+10]
   \   00000108   F211DDE1           LDRSH    R1,[SP, #+18]
   \   0000010C   010040E0           SUB      R0,R0,R1
   \   00000110   00008DE5           STR      R0,[SP, #+0]
   \   00000114   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000118   F011DDE1           LDRSH    R1,[SP, #+16]
   \   0000011C   013040E0           SUB      R3,R0,R1
   \   00000120   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000124   FE10DDE1           LDRSH    R1,[SP, #+14]
   \   00000128   012040E0           SUB      R2,R0,R1
   \   0000012C   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000130   FC10DDE1           LDRSH    R1,[SP, #+12]
   \   00000134   011040E0           SUB      R1,R0,R1
   \   00000138   0700A0E1           MOV      R0,R7
   \   0000013C   ........           BL       WM__UpdateChildPositions
     73            GUI__IntersectRect(&pWin->InvalidRect, &pWin->Rect); /* Make sure invalid area is not bigger than window itself */
   \   00000140   0710A0E1           MOV      R1,R7
   \   00000144   080087E2           ADD      R0,R7,#+8
   \   00000148   ........           BL       GUI__IntersectRect
     74            WM__SendMsgNoData(hWin, WM_SIZE);                    /* Send size message to the window */
   \   0000014C   0510A0E3           MOV      R1,#+5
   \   00000150   0400A0E1           MOV      R0,R4
   \   00000154   ........           BL       WM__SendMsgNoData
     75            WM_UNLOCK();
   \   00000158   ........           BL       GUI_Unlock
     76          }
   \                     ??WM_ResizeWindow_0:
   \   0000015C   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   00000160   F080BDE8           POP      {R4-R7,PC}       ;; return
     77          
     78          #else
     79            void WM_ResizeWindow(void) {} /* avoid empty object files */
     80          #endif   /* GUI_WINSUPPORT */
     81          
     82          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     WM_ResizeWindow     48


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WM_ResizeWindow  356

 
 356 bytes in section .text
 
 356 bytes of CODE memory

Errors: none
Warnings: none
