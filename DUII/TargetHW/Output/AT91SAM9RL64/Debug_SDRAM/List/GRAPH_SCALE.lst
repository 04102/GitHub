###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:12 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GRAPH_SCALE.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GRAPH_SCALE.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GR #
#                    APH_SCALE.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GRA #
#                    PH_SCALE.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GRAPH_SCALE.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GRAPH_SCALE.c
     19          Purpose     : Implementation of GRAPH_SCALE object
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GRAPH_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   GRAPH_SCALE_TEXTCOLOR_DEFAULT
     36            #define GRAPH_SCALE_TEXTCOLOR_DEFAULT GUI_WHITE
     37          #endif
     38          #ifndef   GRAPH_SCALE_FONT_DEFAULT
     39            #if   WIDGET_USE_SCHEME_SMALL
     40              #define GRAPH_SCALE_FONT_DEFAULT &GUI_Font6x8
     41            #elif WIDGET_USE_SCHEME_MEDIUM
     42              #define GRAPH_SCALE_FONT_DEFAULT &GUI_Font8x12_ASCII
     43            #elif WIDGET_USE_SCHEME_LARGE
     44              #define GRAPH_SCALE_FONT_DEFAULT &GUI_Font8x16
     45            #endif
     46          #endif
     47          
     48          /*********************************************************************
     49          *
     50          *       Static data
     51          *
     52          **********************************************************************
     53          */

   \                                 In section .data, align 4
     54          GRAPH_SCALE_PROPS _Props = {
   \                     _Props:
   \   00000000   FFFFFF00....       DC32 16777215, GUI_Font6x8
   \              ....        
     55            GRAPH_SCALE_TEXTCOLOR_DEFAULT,
     56            GRAPH_SCALE_FONT_DEFAULT,
     57          };
     58          
     59          /*********************************************************************
     60          *
     61          *       Static routines
     62          *
     63          **********************************************************************
     64          */
     65          /*********************************************************************
     66          *
     67          *       _OnPaintVert
     68          */

   \                                 In section .text, align 4, keep-with-next
     69          static void _OnPaintVert(GRAPH_SCALE_OBJ * pScaleObj, GUI_RECT * pRectInvalid) {
   \                     _OnPaintVert:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     70            int BorderT, BorderB, EffectSize;
     71            GRAPH_OBJ * pObj;
     72            int xPos, xPosScreen, y0, y1, i, yStart, FontSizeY, TextOffY, Skip;
     73            GUI_RECT Rect;
     74            if (!pScaleObj->TickDist) {
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   4600000A           BEQ      ??_OnPaintVert_0
     75              return;
     76            }
     77            pObj = GRAPH_LOCK_H(pScaleObj->PaintObj.hGraph);
   \   0000001C   080094E5           LDR      R0,[R4, #+8]
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0050A0E1           MOV      R5,R0
     78            EffectSize = pObj->Widget.pEffect->EffectSize;
     79            xPos       = pScaleObj->Pos + EffectSize;
   \   00000028   2C1095E5           LDR      R1,[R5, #+44]
   \   0000002C   140094E5           LDR      R0,[R4, #+20]
   \   00000030   001091E5           LDR      R1,[R1, #+0]
   \   00000034   006081E0           ADD      R6,R1,R0
     80            xPosScreen = xPos + WM_GetOrgX();
   \   00000038   ........           BL       WM_GetOrgX
     81            Skip = 0;
     82            switch (pScaleObj->TextAlign) {
   \   0000003C   181094E5           LDR      R1,[R4, #+24]
   \   00000040   060080E0           ADD      R0,R0,R6
   \   00000044   000051E3           CMP      R1,#+0
   \   00000048   0500000A           BEQ      ??_OnPaintVert_1
   \   0000004C   010051E3           CMP      R1,#+1
   \   00000050   0600001A           BNE      ??_OnPaintVert_2
     83            case GUI_TA_RIGHT:
     84              if (pRectInvalid->x0 > xPosScreen) {
   \   00000054   F010D7E1           LDRSH    R1,[R7, #+0]
   \   00000058   010050E1           CMP      R0,R1
   \   0000005C   030000AA           BGE      ??_OnPaintVert_2
   \   00000060   330000EA           B        ??_OnPaintVert_3
     85                Skip = 1;
     86              }
     87              break;
     88            case GUI_TA_LEFT:
     89              if (pRectInvalid->x1 < xPosScreen) {
   \                     ??_OnPaintVert_1:
   \   00000064   F410D7E1           LDRSH    R1,[R7, #+4]
   \   00000068   000051E1           CMP      R1,R0
   \   0000006C   300000BA           BLT      ??_OnPaintVert_3
     90                Skip = 1;
     91              }
     92              break;
     93            }
     94            if (Skip == 0) {
     95              WM_GetInsideRectExScrollbar(pScaleObj->PaintObj.hGraph, &Rect);
   \                     ??_OnPaintVert_2:
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   080094E5           LDR      R0,[R4, #+8]
   \   00000078   ........           BL       WM_GetInsideRectExScrollbar
     96              BorderT = pObj->Props.BorderT;
   \   0000007C   588095E5           LDR      R8,[R5, #+88]
     97              BorderB = pObj->Props.BorderB;
   \   00000080   609095E5           LDR      R9,[R5, #+96]
     98              FontSizeY = GUI_GetFontSizeY();
   \   00000084   ........           BL       GUI_GetFontSizeY
     99              TextOffY  = FontSizeY / 2;
   \   00000088   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   0000008C   C070A0E1           ASR      R7,R0,#+1
    100              y0     = Rect.y0 + BorderT;
   \   00000090   F200DDE1           LDRSH    R0,[SP, #+2]
    101              y1     = Rect.y1 - BorderB;
    102              yStart = y1 - pScaleObj->Off + pObj->ScrollStateV.v;
   \   00000094   801095E5           LDR      R1,[R5, #+128]
   \   00000098   008088E0           ADD      R8,R8,R0
   \   0000009C   F600DDE1           LDRSH    R0,[SP, #+6]
   \   000000A0   099040E0           SUB      R9,R0,R9
   \   000000A4   200094E5           LDR      R0,[R4, #+32]
   \   000000A8   000049E0           SUB      R0,R9,R0
   \   000000AC   00A081E0           ADD      R10,R1,R0
   \   000000B0   1C0094E5           LDR      R0,[R4, #+28]
    103              while (yStart < y1) {
   \   000000B4   09005AE1           CMP      R10,R9
   \   000000B8   020000AA           BGE      ??_OnPaintVert_4
    104                yStart += pScaleObj->TickDist;
   \                     ??_OnPaintVert_5:
   \   000000BC   0AA080E0           ADD      R10,R0,R10
   \   000000C0   09005AE1           CMP      R10,R9
   \   000000C4   FCFFFFBA           BLT      ??_OnPaintVert_5
    105              }
    106              for (i = yStart; i >= y0; i -= pScaleObj->TickDist) {
   \                     ??_OnPaintVert_4:
   \   000000C8   08005AE1           CMP      R10,R8
   \   000000CC   180000BA           BLT      ??_OnPaintVert_3
    107                if ((i >= y0) && (i <= y1)) {
   \                     ??_OnPaintVert_6:
   \   000000D0   08005AE1           CMP      R10,R8
   \   000000D4   0A0059A1           CMPGE    R9,R10
   \   000000D8   110000BA           BLT      ??_OnPaintVert_7
    108                  float Value;
    109                  GUI_SetTextAlign(pScaleObj->TextAlign);
   \   000000DC   180094E5           LDR      R0,[R4, #+24]
   \   000000E0   ........           BL       GUI_SetTextAlign
    110                  Value = (y1 - i - pScaleObj->Off + pObj->ScrollStateV.v) * pScaleObj->Factor;
   \   000000E4   201094E5           LDR      R1,[R4, #+32]
   \   000000E8   0A0049E0           SUB      R0,R9,R10
   \   000000EC   010040E0           SUB      R0,R0,R1
   \   000000F0   801095E5           LDR      R1,[R5, #+128]
   \   000000F4   000081E0           ADD      R0,R1,R0
   \   000000F8   ........           BL       __aeabi_i2f
   \   000000FC   281094E5           LDR      R1,[R4, #+40]
   \   00000100   ........           BL       __aeabi_fmul
   \   00000104   00B0A0E1           MOV      R11,R0
    111                  GUI_GotoXY(xPos, i - TextOffY);
   \   00000108   07104AE0           SUB      R1,R10,R7
   \   0000010C   0600A0E1           MOV      R0,R6
   \   00000110   ........           BL       GUI_GotoXY
    112                  GUI_DispFloatMin(Value, pScaleObj->NumDecs);
   \   00000114   2C1094E5           LDR      R1,[R4, #+44]
   \   00000118   0B00A0E1           MOV      R0,R11
   \   0000011C   FF1001E2           AND      R1,R1,#0xFF
   \   00000120   ........           BL       GUI_DispFloatMin
    113                }
    114              }
   \                     ??_OnPaintVert_7:
   \   00000124   1C0094E5           LDR      R0,[R4, #+28]
   \   00000128   00A04AE0           SUB      R10,R10,R0
   \   0000012C   08005AE1           CMP      R10,R8
   \   00000130   E6FFFFAA           BGE      ??_OnPaintVert_6
    115            }
    116            GUI_UNLOCK_H(pObj);
   \                     ??_OnPaintVert_3:
   \   00000134   ........           BL       GUI_ALLOC_UnlockH
    117          }
   \                     ??_OnPaintVert_0:
   \   00000138   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000013C   F08FBDE8           POP      {R4-R11,PC}      ;; return
    118          
    119          /*********************************************************************
    120          *
    121          *       _OnPaintHorz
    122          */

   \                                 In section .text, align 4, keep-with-next
    123          static void _OnPaintHorz(GRAPH_SCALE_OBJ * pScaleObj, GUI_RECT * pRectInvalid) {
   \                     _OnPaintHorz:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    124            int BorderL, BorderR, EffectSize;
    125            GRAPH_OBJ * pObj;
    126            int yPos, yPosScreen, x0, x1, i, xStart, FontSizeY, xAdd, Skip;
    127            GUI_RECT Rect;
    128            if (!pScaleObj->TickDist) {
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   0170A0E1           MOV      R7,R1
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   4A00000A           BEQ      ??_OnPaintHorz_0
    129              return;
    130            }
    131            pObj = GRAPH_LOCK_H(pScaleObj->PaintObj.hGraph);
   \   0000001C   080094E5           LDR      R0,[R4, #+8]
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0060A0E1           MOV      R6,R0
    132            EffectSize = pObj->Widget.pEffect->EffectSize;
   \   00000028   2C1096E5           LDR      R1,[R6, #+44]
   \   0000002C   001091E5           LDR      R1,[R1, #+0]
   \   00000030   00108DE5           STR      R1,[SP, #+0]
    133            FontSizeY  = GUI_GetFontSizeY();
   \   00000034   ........           BL       GUI_GetFontSizeY
   \   00000038   0080A0E1           MOV      R8,R0
    134            yPos       = pScaleObj->Pos - EffectSize;
   \   0000003C   140094E5           LDR      R0,[R4, #+20]
   \   00000040   00109DE5           LDR      R1,[SP, #+0]
   \   00000044   015040E0           SUB      R5,R0,R1
    135            yPosScreen = yPos + WM_GetOrgY();
   \   00000048   ........           BL       WM_GetOrgY
    136            Skip = 0;
    137            if (yPosScreen > pRectInvalid->y1) {
   \   0000004C   F620D7E1           LDRSH    R2,[R7, #+6]
   \   00000050   050080E0           ADD      R0,R0,R5
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   000052E1           CMP      R2,R0
    138              Skip = 1;
    139            }
    140            if ((yPosScreen + FontSizeY) < pRectInvalid->y0) {
   \   0000005C   F220D7E1           LDRSH    R2,[R7, #+2]
   \   00000060   0110A0B3           MOVLT    R1,#+1
   \   00000064   000088E0           ADD      R0,R8,R0
   \   00000068   020050E1           CMP      R0,R2
   \   0000006C   340000BA           BLT      ??_OnPaintHorz_1
    141              Skip = 1;
    142            }
    143            if (Skip == 0) {
   \   00000070   000051E3           CMP      R1,#+0
   \   00000074   3200001A           BNE      ??_OnPaintHorz_1
    144              WM_GetInsideRectExScrollbar(pScaleObj->PaintObj.hGraph, &Rect);
   \   00000078   04108DE2           ADD      R1,SP,#+4
   \   0000007C   080094E5           LDR      R0,[R4, #+8]
   \   00000080   ........           BL       WM_GetInsideRectExScrollbar
    145              BorderL = pObj->Props.BorderL;
    146              BorderR = pObj->Props.BorderR;
    147              x0     = Rect.x0 + BorderL;
   \   00000084   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000088   547096E5           LDR      R7,[R6, #+84]
    148              x1     = Rect.x1 - BorderR;
   \   0000008C   5C1096E5           LDR      R1,[R6, #+92]
   \   00000090   008087E0           ADD      R8,R7,R0
   \   00000094   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000098   019040E0           SUB      R9,R0,R1
    149              xAdd   = (pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 0 : pObj->ScrollStateH.v;
   \   0000009C   7800D6E5           LDRB     R0,[R6, #+120]
   \   000000A0   010010E3           TST      R0,#0x1
    150              xStart = x0 + pScaleObj->Off + xAdd;
   \   000000A4   200094E5           LDR      R0,[R4, #+32]
   \   000000A8   8C609605           LDREQ    R6,[R6, #+140]
   \   000000AC   0060A013           MOVNE    R6,#+0
   \   000000B0   080080E0           ADD      R0,R0,R8
   \   000000B4   00A086E0           ADD      R10,R6,R0
   \   000000B8   1C0094E5           LDR      R0,[R4, #+28]
    151              while (xStart > x0) {
   \   000000BC   0A0058E1           CMP      R8,R10
   \   000000C0   020000AA           BGE      ??_OnPaintHorz_2
    152                xStart -= pScaleObj->TickDist;
   \                     ??_OnPaintHorz_3:
   \   000000C4   00A04AE0           SUB      R10,R10,R0
   \   000000C8   0A0058E1           CMP      R8,R10
   \   000000CC   FCFFFFBA           BLT      ??_OnPaintHorz_3
    153              }
    154              for (i = xStart; i <= x1; i += pScaleObj->TickDist) {
   \                     ??_OnPaintHorz_2:
   \   000000D0   0A0059E1           CMP      R9,R10
   \   000000D4   1A0000BA           BLT      ??_OnPaintHorz_1
    155                if ((i > x0) && (i <= x1)) {
   \                     ??_OnPaintHorz_4:
   \   000000D8   0A0058E1           CMP      R8,R10
   \   000000DC   140000AA           BGE      ??_OnPaintHorz_5
   \   000000E0   0A0059E1           CMP      R9,R10
   \   000000E4   120000BA           BLT      ??_OnPaintHorz_5
    156                  float Value;
    157                  GUI_SetTextAlign(pScaleObj->TextAlign);
   \   000000E8   180094E5           LDR      R0,[R4, #+24]
   \   000000EC   ........           BL       GUI_SetTextAlign
    158                  Value = (i - pScaleObj->Off - BorderL - EffectSize - xAdd) * pScaleObj->Factor;
   \   000000F0   200094E5           LDR      R0,[R4, #+32]
   \   000000F4   00109DE5           LDR      R1,[SP, #+0]
   \   000000F8   00004AE0           SUB      R0,R10,R0
   \   000000FC   070040E0           SUB      R0,R0,R7
   \   00000100   010040E0           SUB      R0,R0,R1
   \   00000104   060040E0           SUB      R0,R0,R6
   \   00000108   ........           BL       __aeabi_i2f
   \   0000010C   281094E5           LDR      R1,[R4, #+40]
   \   00000110   ........           BL       __aeabi_fmul
   \   00000114   00B0A0E1           MOV      R11,R0
    159                  GUI_GotoXY(i, yPos);
   \   00000118   0510A0E1           MOV      R1,R5
   \   0000011C   0A00A0E1           MOV      R0,R10
   \   00000120   ........           BL       GUI_GotoXY
    160                  GUI_DispFloatMin(Value, pScaleObj->NumDecs);
   \   00000124   2C1094E5           LDR      R1,[R4, #+44]
   \   00000128   0B00A0E1           MOV      R0,R11
   \   0000012C   FF1001E2           AND      R1,R1,#0xFF
   \   00000130   ........           BL       GUI_DispFloatMin
    161                }
    162              }
   \                     ??_OnPaintHorz_5:
   \   00000134   1C0094E5           LDR      R0,[R4, #+28]
   \   00000138   0AA080E0           ADD      R10,R0,R10
   \   0000013C   0A0059E1           CMP      R9,R10
   \   00000140   E4FFFFAA           BGE      ??_OnPaintHorz_4
    163            }
    164            GUI_UNLOCK_H(pObj);
   \                     ??_OnPaintHorz_1:
   \   00000144   ........           BL       GUI_ALLOC_UnlockH
    165          }
   \                     ??_OnPaintHorz_0:
   \   00000148   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000014C   F08FBDE8           POP      {R4-R11,PC}      ;; return
    166          
    167          /*********************************************************************
    168          *
    169          *       _OnPaint
    170          */

   \                                 In section .text, align 4, keep-with-next
    171          static void _OnPaint(WM_HMEM hScaleObj, GUI_RECT * pRectInvalid) {
   \                     _OnPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
    172            GRAPH_SCALE_OBJ * pScaleObj;
    173            pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0050A0E1           MOV      R5,R0
    174            GUI_SetFont(pScaleObj->Props.pFont);
   \   00000014   100095E5           LDR      R0,[R5, #+16]
   \   00000018   ........           BL       GUI_SetFont
    175            GUI_SetColor(pScaleObj->Props.TextColor);
   \   0000001C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000020   ........           BL       GUI_SetColor
    176            GUI_SetTextMode(GUI_TM_TRANS);
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   ........           BL       GUI_SetTextMode
    177            if (pScaleObj->Flags & GRAPH_SCALE_CF_VERTICAL) {
   \   0000002C   2400D5E5           LDRB     R0,[R5, #+36]
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   010010E3           TST      R0,#0x1
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   0100000A           BEQ      ??_OnPaint_0
    178              _OnPaintVert(pScaleObj, pRectInvalid);
   \   00000040   ........           BL       _OnPaintVert
   \   00000044   000000EA           B        ??_OnPaint_1
    179            } else {
    180              _OnPaintHorz(pScaleObj, pRectInvalid);
   \                     ??_OnPaint_0:
   \   00000048   ........           BL       _OnPaintHorz
    181            }
    182            GUI_UNLOCK_H(pScaleObj);
   \                     ??_OnPaint_1:
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   3040BDE8           POP      {R4,R5,LR}
   \   00000054   ........           B        GUI_ALLOC_UnlockH  ;; tailcall
    183          }
    184          
    185          /*********************************************************************
    186          *
    187          *       Exported routines
    188          *
    189          **********************************************************************
    190          */
    191          /*********************************************************************
    192          *
    193          *       GRAPH_SCALE_Create
    194          */

   \                                 In section .text, align 4, keep-with-next
    195          GRAPH_SCALE_Handle GRAPH_SCALE_Create(int Pos, int TextAlign, unsigned Flags, unsigned TickDist) {
   \                     GRAPH_SCALE_Create:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0270A0E1           MOV      R7,R2
   \   00000010   0380A0E1           MOV      R8,R3
    196            GRAPH_SCALE_Handle hScaleObj;
    197            WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    198            hScaleObj = GUI_ALLOC_AllocZero(sizeof(GRAPH_SCALE_OBJ));
   \   00000018   3000A0E3           MOV      R0,#+48
   \   0000001C   ........           BL       GUI_ALLOC_AllocZero
   \   00000020   0040B0E1           MOVS     R4,R0
    199            if (hScaleObj) {
   \   00000024   0E00000A           BEQ      ??GRAPH_SCALE_Create_0
    200              GRAPH_SCALE_OBJ * pScaleObj;
    201              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   00000028   ........           BL       GUI_ALLOC_LockH
    202              pScaleObj->Pos        = Pos;
   \   0000002C   145080E5           STR      R5,[R0, #+20]
    203              pScaleObj->TextAlign  = TextAlign;
   \   00000030   186080E5           STR      R6,[R0, #+24]
    204              pScaleObj->Flags      = Flags;
   \   00000034   B472C0E1           STRH     R7,[R0, #+36]
    205              pScaleObj->TickDist   = TickDist;
   \   00000038   1C8080E5           STR      R8,[R0, #+28]
    206              pScaleObj->Factor     = 1;
   \   0000003C   FE15A0E3           MOV      R1,#+1065353216
   \   00000040   281080E5           STR      R1,[R0, #+40]
    207              pScaleObj->Props      = _Props;
   \   00000044   ........           LDR      R1,??DataTable0
   \   00000048   002091E5           LDR      R2,[R1, #+0]
   \   0000004C   043091E5           LDR      R3,[R1, #+4]
   \   00000050   0C2080E5           STR      R2,[R0, #+12]
    208              pScaleObj->PaintObj.pfOnPaint = _OnPaint;
   \   00000054   ........           LDR      R1,??DataTable0_1
   \   00000058   103080E5           STR      R3,[R0, #+16]
   \   0000005C   001080E5           STR      R1,[R0, #+0]
    209              GUI_UNLOCK_H(pScaleObj);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
    210            }
    211            WM_UNLOCK();
   \                     ??GRAPH_SCALE_Create_0:
   \   00000064   ........           BL       GUI_Unlock
    212            return hScaleObj;
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   F081BDE8           POP      {R4-R8,PC}       ;; return
    213          }
    214          
    215          /*********************************************************************
    216          *
    217          *       GRAPH_SCALE_Delete
    218          */

   \                                 In section .text, align 4, keep-with-next
    219          void GRAPH_SCALE_Delete(GRAPH_SCALE_Handle hScaleObj) {
    220            GUI_ALLOC_Free(hScaleObj);
   \                     GRAPH_SCALE_Delete:
   \   00000000   ........           B        GUI_ALLOC_Free   ;; tailcall
    221          }
    222          
    223          /*********************************************************************
    224          *
    225          *       GRAPH_SCALE_SetOff
    226          */

   \                                 In section .text, align 4, keep-with-next
    227          int GRAPH_SCALE_SetOff(GRAPH_SCALE_Handle hScaleObj, int Off) {
   \                     GRAPH_SCALE_SetOff:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    228            int OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    229            GRAPH_SCALE_OBJ * pScaleObj;
    230            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetOff_0
    231              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    232              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    233              OldValue = pScaleObj->Off;
   \   00000024   206090E5           LDR      R6,[R0, #+32]
    234              if (pScaleObj->Off != Off) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetOff_1
    235                pScaleObj->Off = Off;
   \   00000030   205080E5           STR      R5,[R0, #+32]
    236                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    237              }
    238              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetOff_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    239              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    240            }
    241            return OldValue;
   \                     ??GRAPH_SCALE_SetOff_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    242          }
    243          
    244          /*********************************************************************
    245          *
    246          *       GRAPH_SCALE_SetTickDist
    247          */

   \                                 In section .text, align 4, keep-with-next
    248          unsigned GRAPH_SCALE_SetTickDist(GRAPH_SCALE_Handle hScaleObj, unsigned Value) {
   \                     GRAPH_SCALE_SetTickDist:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    249            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    250            GRAPH_SCALE_OBJ * pScaleObj;
    251            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetTickDist_0
    252              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    253              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    254              OldValue = pScaleObj->TickDist;
   \   00000024   1C6090E5           LDR      R6,[R0, #+28]
    255              if (pScaleObj->TickDist != Value) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetTickDist_1
    256                pScaleObj->TickDist = Value;
   \   00000030   1C5080E5           STR      R5,[R0, #+28]
    257                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    258              }
    259              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetTickDist_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    260              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    261            }
    262            return OldValue;
   \                     ??GRAPH_SCALE_SetTickDist_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    263          }
    264          
    265          /*********************************************************************
    266          *
    267          *       GRAPH_SCALE_SetFont
    268          */

   \                                 In section .text, align 4, keep-with-next
    269          const GUI_FONT GUI_UNI_PTR * GRAPH_SCALE_SetFont(GRAPH_SCALE_Handle hScaleObj, const GUI_FONT GUI_UNI_PTR * pFont) {
   \                     GRAPH_SCALE_SetFont:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    270            const GUI_FONT GUI_UNI_PTR * pOldFont = NULL;
   \   0000000C   0070A0E3           MOV      R7,#+0
    271            GRAPH_SCALE_OBJ * pScaleObj;
    272            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetFont_0
    273              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    274              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    275              pOldFont = pScaleObj->Props.pFont;
   \   00000024   107090E5           LDR      R7,[R0, #+16]
    276              if (pScaleObj->Props.pFont != pFont) {
   \   00000028   050057E1           CMP      R7,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetFont_1
    277                pScaleObj->Props.pFont = pFont;
   \   00000030   105080E5           STR      R5,[R0, #+16]
    278                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    279              }
    280              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetFont_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    281              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    282            }
    283            return pOldFont;
   \                     ??GRAPH_SCALE_SetFont_0:
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    284          }
    285          
    286          /*********************************************************************
    287          *
    288          *       GRAPH_SCALE_SetTextColor
    289          */

   \                                 In section .text, align 4, keep-with-next
    290          GUI_COLOR GRAPH_SCALE_SetTextColor(GRAPH_SCALE_Handle hScaleObj, GUI_COLOR Color) {
   \                     GRAPH_SCALE_SetTextColor:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    291            GUI_COLOR OldColor = 0;
   \   0000000C   0070A0E3           MOV      R7,#+0
    292            GRAPH_SCALE_OBJ * pScaleObj;
    293            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetTextColor_0
    294              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    295              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    296              OldColor = pScaleObj->Props.TextColor;
   \   00000024   0C7090E5           LDR      R7,[R0, #+12]
    297              if (pScaleObj->Props.TextColor != Color) {
   \   00000028   050057E1           CMP      R7,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetTextColor_1
    298                pScaleObj->Props.TextColor = Color;
   \   00000030   0C5080E5           STR      R5,[R0, #+12]
    299                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    300              }
    301              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetTextColor_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    302              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    303            }
    304            return OldColor;
   \                     ??GRAPH_SCALE_SetTextColor_0:
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    305          }
    306          
    307          /*********************************************************************
    308          *
    309          *       GRAPH_SCALE_SetPos
    310          */

   \                                 In section .text, align 4, keep-with-next
    311          int GRAPH_SCALE_SetPos(GRAPH_SCALE_Handle hScaleObj, int Pos) {
   \                     GRAPH_SCALE_SetPos:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    312            int OldPos = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    313            GRAPH_SCALE_OBJ * pScaleObj;
    314            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetPos_0
    315              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    316              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    317              OldPos = pScaleObj->Pos;
   \   00000024   146090E5           LDR      R6,[R0, #+20]
    318              if (pScaleObj->Pos != Pos) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetPos_1
    319                pScaleObj->Pos = Pos;
   \   00000030   145080E5           STR      R5,[R0, #+20]
    320                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    321              }
    322              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetPos_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    323              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    324            }
    325            return OldPos;
   \                     ??GRAPH_SCALE_SetPos_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    326          }
    327          
    328          /*********************************************************************
    329          *
    330          *       GRAPH_SCALE_SetFactor
    331          */

   \                                 In section .text, align 4, keep-with-next
    332          float GRAPH_SCALE_SetFactor(GRAPH_SCALE_Handle hScaleObj, float Factor) {
   \                     GRAPH_SCALE_SetFactor:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    333            float OldFactor = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    334            GRAPH_SCALE_OBJ * pScaleObj;
    335            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??GRAPH_SCALE_SetFactor_0
    336              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    337              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0020A0E1           MOV      R2,R0
    338              OldFactor = pScaleObj->Factor;
   \   00000028   286092E5           LDR      R6,[R2, #+40]
    339              if (pScaleObj->Factor != Factor) {
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0600A0E1           MOV      R0,R6
   \   00000034   ........           BL       __aeabi_cfcmpeq
   \   00000038   0200000A           BEQ      ??GRAPH_SCALE_SetFactor_1
    340                pScaleObj->Factor = Factor;
   \   0000003C   285082E5           STR      R5,[R2, #+40]
    341                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000040   080092E5           LDR      R0,[R2, #+8]
   \   00000044   ........           BL       WM_InvalidateWindow
    342              }
    343              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetFactor_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
    344              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
    345            }
    346            return OldFactor;
   \                     ??GRAPH_SCALE_SetFactor_0:
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   7080BDE8           POP      {R4-R6,PC}       ;; return
    347          }
    348          
    349          /*********************************************************************
    350          *
    351          *       GRAPH_SCALE_SetNumDecs
    352          */

   \                                 In section .text, align 4, keep-with-next
    353          int GRAPH_SCALE_SetNumDecs(GRAPH_SCALE_Handle hScaleObj, int NumDecs) {
   \                     GRAPH_SCALE_SetNumDecs:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    354            int OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    355            GRAPH_SCALE_OBJ * pScaleObj;
    356            if (hScaleObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SCALE_SetNumDecs_0
    357              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    358              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    359              OldValue = pScaleObj->NumDecs;
   \   00000024   2C6090E5           LDR      R6,[R0, #+44]
    360              if (pScaleObj->NumDecs != NumDecs) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SCALE_SetNumDecs_1
    361                pScaleObj->NumDecs = NumDecs;
   \   00000030   2C5080E5           STR      R5,[R0, #+44]
    362                WM_InvalidateWindow(pScaleObj->PaintObj.hGraph);
   \   00000034   080090E5           LDR      R0,[R0, #+8]
   \   00000038   ........           BL       WM_InvalidateWindow
    363              }
    364              GUI_UNLOCK_H(pScaleObj);
   \                     ??GRAPH_SCALE_SetNumDecs_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    365              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    366            }
    367            return OldValue;
   \                     ??GRAPH_SCALE_SetNumDecs_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    368          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     _Props

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   ........           DC32     _OnPaint
    369          
    370          #else                            /* Avoid problems with empty object modules */
    371            void GRAPH_SCALE_C(void);
    372            void GRAPH_SCALE_C(void) {}
    373          #endif  /* #if GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GRAPH_SCALE_Create           24
     GRAPH_SCALE_Delete            8
     GRAPH_SCALE_SetFactor        16
     GRAPH_SCALE_SetFont          24
     GRAPH_SCALE_SetNumDecs       16
     GRAPH_SCALE_SetOff           16
     GRAPH_SCALE_SetPos           16
     GRAPH_SCALE_SetTextColor     24
     GRAPH_SCALE_SetTickDist      16
     _OnPaint                     16
     _OnPaintHorz                 48
     _OnPaintVert                 48


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _Props                      8
     _OnPaintVert              320
     _OnPaintHorz              336
     _OnPaint                   88
     GRAPH_SCALE_Create        112
     GRAPH_SCALE_Delete          4
     GRAPH_SCALE_SetOff         76
     GRAPH_SCALE_SetTickDist    76
     GRAPH_SCALE_SetFont        76
     GRAPH_SCALE_SetTextColor   76
     GRAPH_SCALE_SetPos         76
     GRAPH_SCALE_SetFactor      88
     GRAPH_SCALE_SetNumDecs     76
     ??DataTable0                4
     ??DataTable0_1              4

 
     8 bytes in section .data
 1 412 bytes in section .text
 
 1 412 bytes of CODE memory
     8 bytes of DATA memory

Errors: none
Warnings: none
