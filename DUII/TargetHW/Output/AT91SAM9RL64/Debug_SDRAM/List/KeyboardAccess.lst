###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:32:02 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\KeyboardAccess.cpp                          #
#    Command line =  C:\DUII\DUII\KeyboardAccess.cpp -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --eec++                              #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Ke #
#                    yboardAccess.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Key #
#                    boardAccess.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\KeyboardAccess.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: KeyboardAccess.cpp
      5          Description: Access wrapper for the keyboard object.  Needed to
      6          	access the C++ object from C
      7          -----------------------------------------------------------------
      8          */
      9          
     10          #include "keyboard.hpp"
     11          #include "commondefs.h"
     12          #include "KeyboardAccess.h"
     13          #include "GeneralConfig.h"
     14          

   \                                 In section .bss, align 1
     15          static char iKeyboardCount = 0;
   \                     iKeyboardCount:
   \   00000000                      DS8 1
     16          

   \                                 In section .text, align 4, keep-with-next
     17          void *CreateKeyboard(char *Title, char *ExistingValue, Keyboard_Type DisplayType, char LockKeyboard, int iMaxTextLength, int iSource, WM_HWIN parent, char scrollable)
     18          {
   \                     CreateKeyboard:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     19          	if (++iKeyboardCount == MAX_KEYBOARDS)
   \   00000008   ........           LDR      R0,??DataTable1
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000014   24D04DE2           SUB      SP,SP,#+36
   \   00000018   0260A0E1           MOV      R6,R2
   \   0000001C   011081E2           ADD      R1,R1,#+1
   \   00000020   0010C0E5           STRB     R1,[R0, #+0]
   \   00000024   FF1001E2           AND      R1,R1,#0xFF
   \   00000028   0370A0E1           MOV      R7,R3
   \   0000002C   48809DE5           LDR      R8,[SP, #+72]
   \   00000030   4C909DE5           LDR      R9,[SP, #+76]
   \   00000034   50A09DE5           LDR      R10,[SP, #+80]
   \   00000038   54B0DDE5           LDRB     R11,[SP, #+84]
   \   0000003C   0A0051E3           CMP      R1,#+10
   \   00000040   0400001A           BNE      ??CreateKeyboard_0
     20          	{
     21          		iKeyboardCount--;
   \   00000044   0910A0E3           MOV      R1,#+9
   \   00000048   0010C0E5           STRB     R1,[R0, #+0]
     22          		SystemError();
   \   0000004C   ........           BL       SystemError
     23          		return 0;
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   110000EA           B        ??CreateKeyboard_1
     24          	}
     25          	else return new Keyboard(0, 0, XSIZE_PHYS, YSIZE_PHYS, DisplayType, ExistingValue, Title, LockKeyboard, iMaxTextLength, iSource, parent, scrollable);
   \                     ??CreateKeyboard_0:
   \   00000058   410FA0E3           MOV      R0,#+260
   \   0000005C   ........           BL       _Znwj
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0D00000A           BEQ      ??CreateKeyboard_1
   \   00000068   441FA0E3           MOV      R1,#+272
   \   0000006C   00108DE5           STR      R1,[SP, #+0]
   \   00000070   20B08DE5           STR      R11,[SP, #+32]
   \   00000074   1CA08DE5           STR      R10,[SP, #+28]
   \   00000078   18908DE5           STR      R9,[SP, #+24]
   \   0000007C   14808DE5           STR      R8,[SP, #+20]
   \   00000080   10708DE5           STR      R7,[SP, #+16]
   \   00000084   0C408DE5           STR      R4,[SP, #+12]
   \   00000088   08508DE5           STR      R5,[SP, #+8]
   \   0000008C   04608DE5           STR      R6,[SP, #+4]
   \   00000090   783FA0E3           MOV      R3,#+480
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   0010A0E3           MOV      R1,#+0
   \   0000009C   ........           BL       _ZN8KeyboardC1Eiiii13Keyboard_TypePcS1_ciilc
   \                     ??CreateKeyboard_1:
   \   000000A0   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   000000A4   F08FBDE8           POP      {R4-R11,PC}      ;; return
     26          }
     27          

   \                                 In section .text, align 4, keep-with-next
     28          void DestroyKeyboard(void *pKeyboard)
     29          {
   \                     DestroyKeyboard:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
     30          	Keyboard *board;
     31          
     32          	board = (Keyboard *)pKeyboard;
     33          	delete board;
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0100000A           BEQ      ??DestroyKeyboard_0
   \   00000010   ........           BL       _ZN8KeyboardD1Ev
   \   00000014   ........           BL       _ZdlPv
     34          
     35          	iKeyboardCount--;
   \                     ??DestroyKeyboard_0:
   \   00000018   ........           LDR      R0,??DataTable1
     36          }
   \   0000001C   04D08DE2           ADD      SP,SP,#+4
   \   00000020   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000024   011041E2           SUB      R1,R1,#+1
   \   00000028   0010C0E5           STRB     R1,[R0, #+0]
   \   0000002C   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     iKeyboardCount
     37          

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     CreateKeyboard      72
     DestroyKeyboard      8


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     iKeyboardCount     1
     CreateKeyboard   168
     DestroyKeyboard   48
     ??DataTable1       4

 
   1 byte  in section .bss
 220 bytes in section .text
 
 220 bytes of CODE memory
   1 byte  of DATA memory

Errors: none
Warnings: none
