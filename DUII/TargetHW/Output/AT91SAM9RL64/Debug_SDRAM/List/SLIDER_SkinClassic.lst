###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:56 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\SLIDER_SkinClassic.c                #
#    Command line =  C:\DUII\TargetHW\GUI\SLIDER_SkinClassic.c -D DEBUG=1 -D  #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\SL #
#                    IDER_SkinClassic.lst                                     #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\SLI #
#                    DER_SkinClassic.o                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\SLIDER_SkinClassic.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : SLIDER_SkinClassic.c
     19          Purpose     : Implementation of scrollbar widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "SLIDER_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *        Static code
     32          *
     33          **********************************************************************
     34          */
     35          
     36          // KMC
     37          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderDotTransparent;
     38          
     39          /*********************************************************************
     40          *
     41          *       _Paint
     42          */

   \                                 In section .text, align 4, keep-with-next
     43          static void _Paint(SLIDER_Handle hObj) {
   \                     _Paint:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   20D04DE2           SUB      SP,SP,#+32
   \   00000008   0070A0E1           MOV      R7,R0
     44            SLIDER_Obj * pObj;
     45            GUI_RECT r, rFocus, rSlider, rSlot;
     46            int x, x0, xsize, i, Range, NumTicks;
     47          
     48            pObj = SLIDER_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0040A0E1           MOV      R4,R0
     49            WIDGET__GetClientRect(&pObj->Widget, &rFocus);
   \   00000014   14108DE2           ADD      R1,SP,#+20
   \   00000018   ........           BL       WIDGET__GetClientRect
     50            GUI__ReduceRect(&r, &rFocus, 1);
   \   0000001C   0120A0E3           MOV      R2,#+1
   \   00000020   14108DE2           ADD      R1,SP,#+20
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   ........           BL       GUI__ReduceRect
     51            NumTicks = pObj->NumTicks;
     52            xsize    = r.x1 - r.x0  + 1 - pObj->Width;
   \   0000002C   FC10DDE1           LDRSH    R1,[SP, #+12]
   \   00000030   F021DDE1           LDRSH    R2,[SP, #+16]
   \   00000034   F006D4E1           LDRSH    R0,[R4, #+96]
   \   00000038   5C9094E5           LDR      R9,[R4, #+92]
   \   0000003C   012042E0           SUB      R2,R2,R1
   \   00000040   012082E2           ADD      R2,R2,#+1
   \   00000044   005042E0           SUB      R5,R2,R0
     53            x0       = r.x0 + pObj->Width / 2;
   \   00000048   0008A0E1           LSL      R0,R0,#+16
   \   0000004C   2008A0E1           LSR      R0,R0,#+16
   \   00000050   A00780E0           ADD      R0,R0,R0, LSR #+15
   \   00000054   0008A0E1           LSL      R0,R0,#+16
   \   00000058   C06881E0           ADD      R6,R1,R0, ASR #+17
     54            Range    = pObj->Max - pObj->Min;
   \   0000005C   500094E5           LDR      R0,[R4, #+80]
   \   00000060   4C1094E5           LDR      R1,[R4, #+76]
   \   00000064   018050E0           SUBS     R8,R0,R1
     55            if (Range == 0) {
     56              Range = 1;
   \   00000068   0180A003           MOVEQ    R8,#+1
     57            }
     58            //
     59            // Fill with parents background color
     60            //
     61            #if !SLIDER_SUPPORT_TRANSPARENCY   // Not needed any more, since window is transparent
     62              if (pObj->Props.BkColor == GUI_INVALID_COLOR) {
     63                LCD_SetBkColor(WIDGET__GetBkColor(hObj));
     64              } else {
     65                LCD_SetBkColor(pObj->Props.BkColor);
     66              }
     67              GUI_Clear();
     68            #else
     69              if (!WM_GetHasTrans(hObj)) {
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   ........           BL       WM_GetHasTrans
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0200001A           BNE      ??_Paint_0
     70                LCD_SetBkColor(pObj->Props.BkColor);
   \   0000007C   340094E5           LDR      R0,[R4, #+52]
   \   00000080   ........           BL       LCD_SetBkColor
     71                GUI_Clear();
   \   00000084   ........           BL       GUI_Clear
     72              }
     73            #endif
     74            //
     75            // Calculate Slider position
     76            //
     77            rSlider    = r;
     78            rSlider.y0 = 5;
     79            rSlider.x0 = x0 + (U32)xsize * (U32)(pObj->v - pObj->Min) / Range - pObj->Width / 2;
   \                     ??_Paint_0:
   \   00000088   540094E5           LDR      R0,[R4, #+84]
   \   0000008C   4C1094E5           LDR      R1,[R4, #+76]
   \   00000090   F076D4E1           LDRSH    R7,[R4, #+96]
   \   00000094   011040E0           SUB      R1,R0,R1
   \   00000098   910500E0           MUL      R0,R1,R5
   \   0000009C   0810A0E1           MOV      R1,R8
   \   000000A0   ........           BL       __aeabi_uidiv
   \   000000A4   0778A0E1           LSL      R7,R7,#+16
   \   000000A8   2778A0E1           LSR      R7,R7,#+16
   \   000000AC   A71787E0           ADD      R1,R7,R7, LSR #+15
   \   000000B0   0118A0E1           LSL      R1,R1,#+16
   \   000000B4   060080E0           ADD      R0,R0,R6
   \   000000B8   4118A0E1           ASR      R1,R1,#+16
   \   000000BC   F2A1DDE1           LDRSH    R10,[SP, #+18]
   \   000000C0   C17040E0           SUB      R7,R0,R1, ASR #+1
     80            rSlider.x1 = rSlider.x0 + pObj->Width;
     81            //
     82            // Calculate Slot position
     83            //
     84            rSlot.x0 = x0;
     85            rSlot.x1 = x0 + xsize;
   \   000000C4   060085E0           ADD      R0,R5,R6
   \   000000C8   B800CDE1           STRH     R0,[SP, #+8]
     86            rSlot.y0 = (rSlider.y0 + rSlider.y1) / 2 - 1;
   \   000000CC   05008AE2           ADD      R0,R10,#+5
   \   000000D0   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000000D4   C000A0E1           ASR      R0,R0,#+1
   \   000000D8   010040E2           SUB      R0,R0,#+1
   \   000000DC   B600CDE1           STRH     R0,[SP, #+6]
     87            rSlot.y1 = rSlot.y0 + 3;
   \   000000E0   030080E2           ADD      R0,R0,#+3
   \   000000E4   0778A0E1           LSL      R7,R7,#+16
   \   000000E8   BA00CDE1           STRH     R0,[SP, #+10]
   \   000000EC   4778A0E1           ASR      R7,R7,#+16
   \   000000F0   B460CDE1           STRH     R6,[SP, #+4]
     88            WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &rSlot);        // Draw slot
   \   000000F4   04108DE2           ADD      R1,SP,#+4
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       WIDGET__EFFECT_DrawDownRect
     89            //
     90            // Draw the ticks
     91            //
     92            if (NumTicks < 0) {
   \   00000100   000059E3           CMP      R9,#+0
   \   00000104   0700005A           BPL      ??_Paint_1
     93              NumTicks = Range + 1;
     94              if (NumTicks > (xsize / 5)) {
   \   00000108   ........           LDR      R0,??DataTable2  ;; 0x66666667
   \   0000010C   019088E2           ADD      R9,R8,#+1
   \   00000110   9510C0E0           SMULL    R1,R0,R5,R0
   \   00000114   C000B0E1           ASRS     R0,R0,#+1
   \   00000118   01008042           ADDMI    R0,R0,#+1
   \   0000011C   090050E1           CMP      R0,R9
     95                NumTicks = 11;
   \   00000120   0B90A0B3           MOVLT    R9,#+11
   \   00000124   010000BA           BLT      ??_Paint_2
     96              }
     97            }
     98            if (NumTicks > 1) {
   \                     ??_Paint_1:
   \   00000128   020059E3           CMP      R9,#+2
   \   0000012C   250000BA           BLT      ??_Paint_3
     99              LCD_SetColor(pObj->Props.TickColor);
   \                     ??_Paint_2:
   \   00000130   400094E5           LDR      R0,[R4, #+64]
   \   00000134   ........           BL       LCD_SetColor
    100              for (i = 0; i < NumTicks; i++) {
   \   00000138   00A0A0E3           MOV      R10,#+0
   \   0000013C   018049E2           SUB      R8,R9,#+1
   \   00000140   010019E3           TST      R9,#0x1
   \   00000144   0500000A           BEQ      ??_Paint_4
    101                x = x0 + xsize * i / (NumTicks - 1);
    102                WIDGET__DrawVLine(&pObj->Widget, x, 1, 3);
   \   00000148   0330A0E3           MOV      R3,#+3
   \   0000014C   0120A0E3           MOV      R2,#+1
   \   00000150   0610A0E1           MOV      R1,R6
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   ........           BL       WIDGET__DrawVLine
   \   0000015C   01A0A0E3           MOV      R10,#+1
   \                     ??_Paint_4:
   \   00000160   A990B0E1           LSRS     R9,R9,#+1
   \   00000164   1700000A           BEQ      ??_Paint_3
   \                     ??_Paint_5:
   \   00000168   0120A0E3           MOV      R2,#+1
   \   0000016C   9A0500E0           MUL      R0,R10,R5
   \   00000170   00208DE5           STR      R2,[SP, #+0]
   \   00000174   0810A0E1           MOV      R1,R8
   \   00000178   ........           BL       __aeabi_idiv
   \   0000017C   061080E0           ADD      R1,R0,R6
   \   00000180   0330A0E3           MOV      R3,#+3
   \   00000184   0120A0E3           MOV      R2,#+1
   \   00000188   0400A0E1           MOV      R0,R4
   \   0000018C   ........           BL       WIDGET__DrawVLine
   \   00000190   01A08AE2           ADD      R10,R10,#+1
   \   00000194   0120A0E3           MOV      R2,#+1
   \   00000198   9A0500E0           MUL      R0,R10,R5
   \   0000019C   00208DE5           STR      R2,[SP, #+0]
   \   000001A0   0810A0E1           MOV      R1,R8
   \   000001A4   ........           BL       __aeabi_idiv
   \   000001A8   061080E0           ADD      R1,R0,R6
   \   000001AC   0330A0E3           MOV      R3,#+3
   \   000001B0   0120A0E3           MOV      R2,#+1
   \   000001B4   0400A0E1           MOV      R0,R4
   \   000001B8   ........           BL       WIDGET__DrawVLine
    103              }
   \   000001BC   01A08AE2           ADD      R10,R10,#+1
   \   000001C0   019059E2           SUBS     R9,R9,#+1
   \   000001C4   E7FFFF1A           BNE      ??_Paint_5
    104            }
    105            //
    106            // Draw the slider itself
    107            //
    108            LCD_SetColor(pObj->Props.BarColor);
   \                     ??_Paint_3:
   \   000001C8   380094E5           LDR      R0,[R4, #+56]
   \   000001CC   ........           BL       LCD_SetColor
    109          
    110          // KMC - start
    111            //WIDGET__FillRectEx(&pObj->Widget, &rSlider);
    112            //WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &rSlider);
    113            ////
    114            //// Draw focus
    115            ////
    116            //if (pObj->Widget.State & WIDGET_STATE_FOCUS) {
    117            //  LCD_SetColor(pObj->Props.FocusColor);
    118            //  WIDGET__DrawFocusRect(&pObj->Widget, &rFocus, 0);
    119            //}
    120          
    121            GUI_DrawBitmap(&bmSliderDotTransparent, rSlider.x0 - 11, 0);
   \   000001D0   0020A0E3           MOV      R2,#+0
   \   000001D4   0B1047E2           SUB      R1,R7,#+11
   \   000001D8   ........           LDR      R0,??DataTable2_1
   \   000001DC   ........           BL       GUI_DrawBitmap
    122          // KMC - end
    123          
    124            GUI_UNLOCK_H(pObj);
   \   000001E0   ........           BL       GUI_ALLOC_UnlockH
    125          }
   \   000001E4   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   000001E8   F087BDE8           POP      {R4-R10,PC}      ;; return
    126          
    127          /*********************************************************************
    128          *
    129          *       _Create
    130          */

   \                                 In section .text, align 4, keep-with-next
    131          static void _Create(SLIDER_Handle hObj) {
    132            // Nothing special to do
    133            GUI_USE_PARA(hObj);
    134          }
   \                     _Create:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    135          
    136          /*********************************************************************
    137          *
    138          *        Private data
    139          *
    140          **********************************************************************
    141          */

   \                                 In section .text, align 4, keep-with-next
    142          const WIDGET_SKIN SLIDER__SkinClassic = {
   \                     SLIDER__SkinClassic:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Paint, _Create
   \              ....        
   \   00000008   00000000           DC8 0, 0, 0, 0
    143            _Paint,
    144            _Create
    145          };
    146          
    147          /*********************************************************************
    148          *
    149          *        Public code
    150          *
    151          **********************************************************************
    152          */
    153          /*********************************************************************
    154          *
    155          *       SLIDER_SetSkinClassic
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          void SLIDER_SetSkinClassic(SLIDER_Handle hObj) {
   \                     SLIDER_SetSkinClassic:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    158            SLIDER_Obj * pObj;
    159          
    160            pObj = SLIDER_LOCK_H(hObj);
    161            pObj->pWidgetSkin = &SLIDER__SkinClassic;
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   ........           ADR      R1,SLIDER__SkinClassic
   \   00000010   481080E5           STR      R1,[R0, #+72]
    162            GUI_UNLOCK_H(pObj);
   \   00000014   ........           BL       GUI_ALLOC_UnlockH
    163            WM_InvalidateWindow(hObj);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   1040BDE8           POP      {R4,LR}
   \   00000020   ........           B        WM_InvalidateWindow  ;; tailcall
    164          }
    165          
    166          /*********************************************************************
    167          *
    168          *       SLIDER_SetDefaultSkinClassic
    169          */

   \                                 In section .text, align 4, keep-with-next
    170          void SLIDER_SetDefaultSkinClassic(void) {
    171            SLIDER__pSkinDefault = &SLIDER__SkinClassic;
   \                     SLIDER_SetDefaultSkinClassic:
   \   00000000   ........           LDR      R0,??DataTable2_2
   \   00000004   ........           ADR      R1,SLIDER__SkinClassic
   \   00000008   001080E5           STR      R1,[R0, #+0]
    172          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     bmSliderDotTransparent

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   ........           DC32     SLIDER__pSkinDefault
    173          
    174          #else
    175            void SLIDER_SkinClassic_C(void);
    176            void SLIDER_SkinClassic_C(void) {} /* avoid empty object files */
    177          #endif /* GUI_WINSUPPORT */
    178          
    179          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                     .cstack
     --------                     -------
     SLIDER_SetDefaultSkinClassic      0
     SLIDER_SetSkinClassic             8
     _Create                           0
     _Paint                           64


   Section sizes:

     Function/Label               Bytes
     --------------               -----
     _Paint                        492
     _Create                         4
     SLIDER__SkinClassic            12
     SLIDER_SetSkinClassic          36
     SLIDER_SetDefaultSkinClassic   16
     ??DataTable2                    4
     ??DataTable2_1                  4
     ??DataTable2_2                  4

 
 572 bytes in section .text
 
 572 bytes of CODE memory

Errors: none
Warnings: none
