###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:31:48 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\Setup\FlashLights.c                     #
#    Command line =  C:\DUII\TargetHW\Setup\FlashLights.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\Fl #
#                    ashLights.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\Fla #
#                    shLights.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\Setup\FlashLights.c
      1          #include "commondefs.h"
      2          #include "DUII.h"
      3          #include "LEDHandler.h"
      4          #include "FlashLights.h"
      5          
      6          #define INTER_LED_TIME	100
      7          

   \                                 In section .text, align 4, keep-with-next
      8          void FlashLights(void) {
   \                     FlashLights:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
      9          	int lednum;
     10          	U16 ledvalue;
     11          	U16 centervalue;
     12          	
     13          	// led order from left to right
     14          	int ledOrder[NUMBER_TACH_LEDS] = { 0, 1, 15, 3, 2, 4, 8, 9, 10, 11, 12, 13, 14 };
   \   00000004   ........           ADR      R1,`?<Constant {0, 1, 15, 3, 2, 4, 8, 9, 10, 11, 1`
   \   00000008   34D04DE2           SUB      SP,SP,#+52
   \   0000000C   7C50B1E8           LDM      R1!,{R2-R6,R12,LR}
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   7C50A0E8           STM      R0!,{R2-R6,R12,LR}
   \   00000018   3C50B1E8           LDM      R1!,{R2-R5,R12,LR}
   \   0000001C   3C50A0E8           STM      R0!,{R2-R5,R12,LR}
     15          
     16          	TurnOffLEDs();
   \   00000020   ........           BL       TurnOffLEDs
     17          	SetLEDBrightness(FLASHLIGHT_LED_BRIGHTNESS);
   \   00000024   0500A0E3           MOV      R0,#+5
   \   00000028   ........           BL       SetLEDBrightness
     18          	SuspendLEDUpdates(false);
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   ........           BL       SuspendLEDUpdates
     19          	
     20          	ledvalue = 0;
   \   00000034   0090A0E3           MOV      R9,#+0
     21          
     22          	// add lights toward center while cycling center lights
     23          	for (lednum = 0; lednum < 5; lednum++) {
   \   00000038   0050A0E3           MOV      R5,#+0
   \   0000003C   00209DE5           LDR      R2,[SP, #+0]
   \   00000040   30009DE5           LDR      R0,[SP, #+48]
   \   00000044   0140A0E3           MOV      R4,#+1
   \   00000048   28608DE2           ADD      R6,SP,#+40
   \   0000004C   04708DE2           ADD      R7,SP,#+4
   \   00000050   0280A0E3           MOV      R8,#+2
     24          		ledvalue = ledvalue | (1 << ledOrder[lednum]) | (1 << ledOrder[NUMBER_TACH_LEDS-lednum-1]);
   \                     ??FlashLights_0:
   \   00000054   1400A0E1           LSL      R0,R4,R0
   \   00000058   140280E1           ORR      R0,R0,R4, LSL R2
   \   0000005C   099080E1           ORR      R9,R0,R9
     25          
     26          		centervalue = (1 << ledOrder[5+(lednum % 3)]);
     27          		centervalue = centervalue | ledvalue;
     28          		
     29          		LEDShift(centervalue);
   \   00000060   ........           LDR      R0,??DataTable1  ;; 0x55555556
   \   00000064   9510C0E0           SMULL    R1,R0,R5,R0
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   01008042           ADDMI    R0,R0,#+1
   \   00000070   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000074   000045E0           SUB      R0,R5,R0
   \   00000078   00018DE0           ADD      R0,SP,R0, LSL #+2
   \   0000007C   140090E5           LDR      R0,[R0, #+20]
   \   00000080   140089E1           ORR      R0,R9,R4, LSL R0
   \   00000084   0008A0E1           LSL      R0,R0,#+16
   \   00000088   2008A0E1           LSR      R0,R0,#+16
   \   0000008C   ........           BL       LEDShift
     30          		OS_Delay(INTER_LED_TIME);
   \   00000090   6400A0E3           MOV      R0,#+100
   \   00000094   ........           BL       OS_Delay
   \   00000098   041097E4           LDR      R1,[R7], #+4
   \   0000009C   043096E5           LDR      R3,[R6, #+4]
   \   000000A0   1401A0E1           LSL      R0,R4,R1
   \   000000A4   140380E1           ORR      R0,R0,R4, LSL R3
   \   000000A8   099080E1           ORR      R9,R0,R9
   \   000000AC   ........           LDR      R0,??DataTable1  ;; 0x55555556
   \   000000B0   015085E2           ADD      R5,R5,#+1
   \   000000B4   9510C0E0           SMULL    R1,R0,R5,R0
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   01008042           ADDMI    R0,R0,#+1
   \   000000C0   800080E0           ADD      R0,R0,R0, LSL #+1
   \   000000C4   000045E0           SUB      R0,R5,R0
   \   000000C8   00018DE0           ADD      R0,SP,R0, LSL #+2
   \   000000CC   140090E5           LDR      R0,[R0, #+20]
   \   000000D0   140089E1           ORR      R0,R9,R4, LSL R0
   \   000000D4   0008A0E1           LSL      R0,R0,#+16
   \   000000D8   2008A0E1           LSR      R0,R0,#+16
   \   000000DC   ........           BL       LEDShift
   \   000000E0   6400A0E3           MOV      R0,#+100
   \   000000E4   ........           BL       OS_Delay
   \   000000E8   018048E2           SUB      R8,R8,#+1
   \   000000EC   015085E2           ADD      R5,R5,#+1
   \   000000F0   042097E4           LDR      R2,[R7], #+4
   \   000000F4   080016E4           LDR      R0,[R6], #-8
   \   000000F8   000058E3           CMP      R8,#+0
   \   000000FC   D4FFFF1A           BNE      ??FlashLights_0
   \   00000100   1400A0E1           LSL      R0,R4,R0
   \   00000104   140280E1           ORR      R0,R0,R4, LSL R2
   \   00000108   096080E1           ORR      R6,R0,R9
   \   0000010C   ........           LDR      R0,??DataTable1  ;; 0x55555556
   \   00000110   9510C0E0           SMULL    R1,R0,R5,R0
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   01008042           ADDMI    R0,R0,#+1
   \   0000011C   800080E0           ADD      R0,R0,R0, LSL #+1
   \   00000120   000045E0           SUB      R0,R5,R0
   \   00000124   00018DE0           ADD      R0,SP,R0, LSL #+2
   \   00000128   140090E5           LDR      R0,[R0, #+20]
   \   0000012C   140086E1           ORR      R0,R6,R4, LSL R0
   \   00000130   0008A0E1           LSL      R0,R0,#+16
   \   00000134   2008A0E1           LSR      R0,R0,#+16
   \   00000138   ........           BL       LEDShift
   \   0000013C   6400A0E3           MOV      R0,#+100
   \   00000140   ........           BL       OS_Delay
     31          
     32          	} // for
     33          
     34          	// subtract lights from center while cycling center lights
     35          	for (lednum = 4; lednum >= 0; lednum--) {
   \   00000144   0450A0E3           MOV      R5,#+4
   \   00000148   20708DE2           ADD      R7,SP,#+32
   \   0000014C   10808DE2           ADD      R8,SP,#+16
     36          		ledvalue = ledvalue & ~((1 << ledOrder[lednum]) | (1 << ledOrder[NUMBER_TACH_LEDS-lednum-1]));
   \                     ??FlashLights_1:
   \   00000150   041097E4           LDR      R1,[R7], #+4
   \   00000154   040018E4           LDR      R0,[R8], #-4
   \   00000158   1411A0E1           LSL      R1,R4,R1
   \   0000015C   140081E1           ORR      R0,R1,R4, LSL R0
   \   00000160   0060C6E1           BIC      R6,R6,R0
     37          
     38          		centervalue = (1 << ledOrder[5+((lednum+2) % 3)]);
     39          		centervalue = centervalue | ledvalue;
     40          		
     41          		LEDShift(centervalue);
   \   00000164   ........           LDR      R1,??DataTable1  ;; 0x55555556
   \   00000168   020085E2           ADD      R0,R5,#+2
   \   0000016C   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000170   000051E3           CMP      R1,#+0
   \   00000174   01108142           ADDMI    R1,R1,#+1
   \   00000178   811081E0           ADD      R1,R1,R1, LSL #+1
   \   0000017C   010040E0           SUB      R0,R0,R1
   \   00000180   00018DE0           ADD      R0,SP,R0, LSL #+2
   \   00000184   140090E5           LDR      R0,[R0, #+20]
   \   00000188   140086E1           ORR      R0,R6,R4, LSL R0
   \   0000018C   0008A0E1           LSL      R0,R0,#+16
   \   00000190   2008A0E1           LSR      R0,R0,#+16
   \   00000194   ........           BL       LEDShift
     42          		OS_Delay(INTER_LED_TIME);
   \   00000198   6400A0E3           MOV      R0,#+100
   \   0000019C   ........           BL       OS_Delay
     43          
     44          	} // for
   \   000001A0   015055E2           SUBS     R5,R5,#+1
   \   000001A4   E9FFFF5A           BPL      ??FlashLights_1
     45          
     46          	// turn all on
     47          	WarningLEDOn(&LowerLED, 1);
   \   000001A8   0110A0E3           MOV      R1,#+1
   \   000001AC   ........           LDR      R0,??DataTable1_1
   \   000001B0   ........           BL       WarningLEDOn
     48          	WarningLEDOn(&UpperLED, 1);
   \   000001B4   0110A0E3           MOV      R1,#+1
   \   000001B8   ........           LDR      R0,??DataTable1_2
   \   000001BC   ........           BL       WarningLEDOn
     49          	ShiftLEDLevel(4);
   \   000001C0   0400A0E3           MOV      R0,#+4
   \   000001C4   ........           BL       ShiftLEDLevel
     50          		
     51          	OS_Delay(INTER_LED_TIME);
   \   000001C8   6400A0E3           MOV      R0,#+100
   \   000001CC   ........           BL       OS_Delay
     52          	ResumeLEDUpdates();
   \   000001D0   ........           BL       ResumeLEDUpdates
     53          	TurnOffLEDs();
   \   000001D4   ........           BL       TurnOffLEDs
     54          
     55          } // FlashLights
   \   000001D8   34D08DE2           ADD      SP,SP,#+52       ;; stack cleaning
   \   000001DC   F083BDE8           POP      {R4-R9,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   56555555           DC32     0x55555556

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     LowerLED

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     UpperLED

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {0, 1, 15, 3, 2, 4, 8, 9, 10, 11, 1`:
   \   00000000                      ; Initializer data, 52 bytes
   \   00000000   000000000100       DC32 0, 1, 15, 3, 2, 4, 8, 9, 10, 11
   \              00000F000000
   \              030000000200
   \              000004000000
   \              080000000900
   \              00000A000000
   \              0B000000    
   \   00000028   0C0000000D00       DC32 12, 13, 14
   \              00000E000000
     56          	

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     FlashLights     80


   Section sizes:

     Function/Label                                 Bytes
     --------------                                 -----
     FlashLights                                     480
     ??DataTable1                                      4
     ??DataTable1_1                                    4
     ??DataTable1_2                                    4
     ?<Constant {0, 1, 15, 3, 2, 4, 8, 9, 10, 11, 1   52

 
 544 bytes in section .text
 
 544 bytes of CODE memory

Errors: none
Warnings: none
