###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:12 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapMag.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawBitmapMag.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DrawBitmapMag.lst                                      #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DrawBitmapMag.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawBitmapMag.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawBitmapMag.C
     19          Purpose     : Implementation file for GUI_DrawBitmapMag
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI_DrawBitmapMag
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void GUI_DrawBitmapMag(const GUI_BITMAP GUI_UNI_PTR *pBitmap, int x0, int y0, int xMul, int yMul) {
   \                     GUI_DrawBitmapMag:
   \   00000000   F44F2DE9           PUSH     {R2,R4-R11,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   01A0A0E1           MOV      R10,R1
   \   00000010   0350A0E1           MOV      R5,R3
   \   00000014   50609DE5           LDR      R6,[SP, #+80]
     38            GUI_DRAWMODE PrevDraw;
     39            int xSize, ySize;
     40            const GUI_LOGPALETTE GUI_UNI_PTR * pPal;
     41            const LCD_PIXELINDEX* pTrans;
     42            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
     43            pPal = pBitmap->pPal;
   \   0000001C   0CB094E5           LDR      R11,[R4, #+12]
     44            xSize = pBitmap->XSize;
   \   00000020   B070D4E1           LDRH     R7,[R4, #+0]
     45            ySize = pBitmap->YSize;
   \   00000024   B280D4E1           LDRH     R8,[R4, #+2]
     46            pTrans = LCD_GetpPalConvTable(pPal);
   \   00000028   0B00A0E1           MOV      R0,R11
   \   0000002C   ........           BL       LCD_GetpPalConvTable
   \   00000030   0090B0E1           MOVS     R9,R0
     47            if (!pTrans) {
   \   00000034   0400001A           BNE      ??GUI_DrawBitmapMag_0
     48              pTrans = (pBitmap->BitsPerPixel != 1) ? NULL : LCD_pBkColorIndex;
   \   00000038   B600D4E1           LDRH     R0,[R4, #+6]
   \   0000003C   010050E3           CMP      R0,#+1
   \   00000040   10019F05           LDREQ    R0,??GUI_DrawBitmapMag_1
   \   00000044   0090A013           MOVNE    R9,#+0
   \   00000048   00909005           LDREQ    R9,[R0, #+0]
     49            }
     50            PrevDraw = GUI_SetDrawMode((pPal && pPal->HasTrans) ? GUI_DRAWMODE_TRANS : 0);
   \                     ??GUI_DrawBitmapMag_0:
   \   0000004C   00005BE3           CMP      R11,#+0
   \   00000050   0400000A           BEQ      ??GUI_DrawBitmapMag_2
   \   00000054   0400DBE5           LDRB     R0,[R11, #+4]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0200000A           BEQ      ??GUI_DrawBitmapMag_3
   \   00000060   0200A0E3           MOV      R0,#+2
   \   00000064   000000EA           B        ??GUI_DrawBitmapMag_3
   \                     ??GUI_DrawBitmapMag_2:
   \   00000068   0000A0E3           MOV      R0,#+0
   \                     ??GUI_DrawBitmapMag_3:
   \   0000006C   ........           BL       GUI_SetDrawMode
   \   00000070   20008DE5           STR      R0,[SP, #+32]
     51            #if (GUI_WINSUPPORT)
     52              WM_ADDORG(x0,y0);
   \   00000074   E0009FE5           LDR      R0,??GUI_DrawBitmapMag_1+0x4
   \   00000078   401090E5           LDR      R1,[R0, #+64]
   \   0000007C   440090E5           LDR      R0,[R0, #+68]
   \   00000080   0AA081E0           ADD      R10,R1,R10
   \   00000084   28109DE5           LDR      R1,[SP, #+40]
     53              {
     54                GUI_RECT r;
     55                r.x0 = x0;
   \   00000088   B8A1CDE1           STRH     R10,[SP, #+24]
   \   0000008C   01B080E0           ADD      R11,R0,R1
     56                r.x1 = x0 + xSize * xMul -1;
   \   00000090   0A00A0E1           MOV      R0,R10
   \   00000094   870500E1           SMLABB   R0,R7,R5,R0
     57                r.y0 = y0;
   \   00000098   BAB1CDE1           STRH     R11,[SP, #+26]
   \   0000009C   010040E2           SUB      R0,R0,#+1
   \   000000A0   BC01CDE1           STRH     R0,[SP, #+28]
     58                r.y1 = y0 + ySize * yMul -1;
   \   000000A4   0B00A0E1           MOV      R0,R11
   \   000000A8   880600E1           SMLABB   R0,R8,R6,R0
   \   000000AC   010040E2           SUB      R0,R0,#+1
   \   000000B0   BE01CDE1           STRH     R0,[SP, #+30]
     59                WM_ITERATE_START(&r);
   \   000000B4   18008DE2           ADD      R0,SP,#+24
   \   000000B8   ........           BL       WM__InitIVRSearch
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   1F00000A           BEQ      ??GUI_DrawBitmapMag_4
     60            #endif
     61            if (pBitmap->pMethods) {
   \                     ??GUI_DrawBitmapMag_5:
   \   000000C4   10C094E5           LDR      R12,[R4, #+16]
   \   000000C8   080094E5           LDR      R0,[R4, #+8]
   \   000000CC   00005CE3           CMP      R12,#+0
   \   000000D0   0B00000A           BEQ      ??GUI_DrawBitmapMag_6
     62              pBitmap->pMethods->pfDraw(x0, y0, pBitmap->XSize ,pBitmap->YSize, (U8 const *)pBitmap->pData, pBitmap->pPal, xMul, yMul);
   \   000000D4   0C608DE5           STR      R6,[SP, #+12]
   \   000000D8   08508DE5           STR      R5,[SP, #+8]
   \   000000DC   0C1094E5           LDR      R1,[R4, #+12]
   \   000000E0   00008DE5           STR      R0,[SP, #+0]
   \   000000E4   04108DE5           STR      R1,[SP, #+4]
   \   000000E8   B230D4E1           LDRH     R3,[R4, #+2]
   \   000000EC   B020D4E1           LDRH     R2,[R4, #+0]
   \   000000F0   0B10A0E1           MOV      R1,R11
   \   000000F4   0A00A0E1           MOV      R0,R10
   \   000000F8   00C09CE5           LDR      R12,[R12, #+0]
   \   000000FC   3CFF2FE1           BLX      R12
   \   00000100   0C0000EA           B        ??GUI_DrawBitmapMag_7
     63            } else {
     64              LCD_DrawBitmap(x0, y0, xSize, ySize, xMul, yMul
     65                              ,pBitmap->BitsPerPixel, pBitmap->BytesPerLine
     66                              ,pBitmap->pData, pTrans);
   \                     ??GUI_DrawBitmapMag_6:
   \   00000104   14908DE5           STR      R9,[SP, #+20]
   \   00000108   10008DE5           STR      R0,[SP, #+16]
   \   0000010C   B400D4E1           LDRH     R0,[R4, #+4]
   \   00000110   0830A0E1           MOV      R3,R8
   \   00000114   0720A0E1           MOV      R2,R7
   \   00000118   0C008DE5           STR      R0,[SP, #+12]
   \   0000011C   B600D4E1           LDRH     R0,[R4, #+6]
   \   00000120   04608DE5           STR      R6,[SP, #+4]
   \   00000124   00508DE5           STR      R5,[SP, #+0]
   \   00000128   08008DE5           STR      R0,[SP, #+8]
   \   0000012C   0B10A0E1           MOV      R1,R11
   \   00000130   0A00A0E1           MOV      R0,R10
   \   00000134   ........           BL       LCD_DrawBitmap
     67            }
     68            #if (GUI_WINSUPPORT)
     69                WM_ITERATE_END();
   \                     ??GUI_DrawBitmapMag_7:
   \   00000138   ........           BL       WM__GetNextIVR
   \   0000013C   000050E3           CMP      R0,#+0
   \   00000140   DFFFFF1A           BNE      ??GUI_DrawBitmapMag_5
     70              }
     71            #endif
     72            GUI_SetDrawMode(PrevDraw);
   \                     ??GUI_DrawBitmapMag_4:
   \   00000144   20009DE5           LDR      R0,[SP, #+32]
   \   00000148   ........           BL       GUI_SetDrawMode
     73            GUI_UNLOCK();
   \   0000014C   ........           BL       GUI_Unlock
     74          }
   \   00000150   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000154   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??GUI_DrawBitmapMag_1:
   \   00000158   ........           DC32     LCD_pBkColorIndex
   \   0000015C   ........           DC32     GUI_Context
     75          
     76          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_DrawBitmapMag     80


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_DrawBitmapMag  352

 
 352 bytes in section .text
 
 352 bytes of CODE memory

Errors: none
Warnings: none
