###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:59 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_MOUSE.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_MOUSE.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_MOUSE.lst                                              #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _MOUSE.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_MOUSE.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_MOUSE.C
     19          Purpose     : Generic mouse routines
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <string.h>           /* memcmp */
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static data
     30          *
     31          **********************************************************************
     32          */
     33          

   \                                 In section .bss, align 4
     34          static GUI_PID_STATE _State;
   \                     _State:
   \   00000000                      DS8 12
     35          
     36          /*********************************************************************
     37          *
     38          *       Public code
     39          *
     40          **********************************************************************
     41          */
     42          /*********************************************************************
     43          *
     44          *       GUI_MOUSE_GetState
     45          */

   \                                 In section .text, align 4, keep-with-next
     46          int GUI_MOUSE_GetState(GUI_PID_STATE *pState) {
     47            *pState = _State;
   \                     GUI_MOUSE_GetState:
   \   00000000   ........           LDR      R1,??DataTable1
   \   00000004   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000008   0C1041E2           SUB      R1,R1,#+12
   \   0000000C   0C10A0E8           STM      R0!,{R2,R3,R12}
     48            return (_State.Pressed != 0) ? 1 : 0;
   \   00000010   0800D1E5           LDRB     R0,[R1, #+8]
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100A013           MOVNE    R0,#+1
   \   0000001C   1EFF2FE1           BX       LR               ;; return
     49          }
     50          
     51          /*********************************************************************
     52          *
     53          *       GUI_MOUSE_StoreState
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          void GUI_MOUSE_StoreState(const GUI_PID_STATE *pState) {
   \                     GUI_MOUSE_StoreState:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     56            if (memcmp(pState, &_State, sizeof(_State))) {
   \   00000004   ........           LDR      R5,??DataTable1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0C20A0E3           MOV      R2,#+12
   \   00000014   0510A0E1           MOV      R1,R5
   \   00000018   ........           BL       memcmp
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0300000A           BEQ      ??GUI_MOUSE_StoreState_0
     57              _State = *pState;
   \   00000024   0700B4E8           LDM      R4!,{R0-R2}
   \   00000028   0700A5E8           STM      R5!,{R0-R2}
   \   0000002C   0C0044E2           SUB      R0,R4,#+12
     58              GUI_PID_StoreState(pState);
   \   00000030   ........           BL       GUI_PID_StoreState
     59            }
     60          }
   \                     ??GUI_MOUSE_StoreState_0:
   \   00000034   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _State
     61          
     62          /*************************** End of file ****************************/
     63          

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_MOUSE_GetState        0
     GUI_MOUSE_StoreState     16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     _State                 12
     GUI_MOUSE_GetState     32
     GUI_MOUSE_StoreState   60
     ??DataTable1            4

 
 12 bytes in section .bss
 96 bytes in section .text
 
 96 bytes of CODE memory
 12 bytes of DATA memory

Errors: none
Warnings: none
