###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\DIALOG.c                            #
#    Command line =  C:\DUII\TargetHW\GUI\DIALOG.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\DI #
#                    ALOG.lst                                                 #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\DIA #
#                    LOG.o                                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\DIALOG.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : Dialog.c
     19          Purpose     : Dialog box include
     20          --------------------END-OF-HEADER-------------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          #include "DIALOG.h"
     25          #include "WIDGET.h"
     26          #include "WM_Intern.h"
     27          
     28          
     29          
     30          #if GUI_WINSUPPORT
     31          
     32          /*********************************************************************
     33          *
     34          *       Private config defaults
     35          *
     36          **********************************************************************
     37          */
     38          
     39          /* Define colors */
     40          #ifndef DIALOG_BKCOLOR0_DEFAULT
     41            #define DIALOG_BKCOLOR0_DEFAULT 0xc0c0c0
     42          #endif
     43          
     44          /*********************************************************************
     45          *
     46          *       static data;
     47          *
     48          **********************************************************************
     49          */
     50          

   \                                 In section .data, align 4
     51          static LCD_COLOR _BkColor = DIALOG_BKCOLOR0_DEFAULT;
   \                     _BkColor:
   \   00000000   C0C0C000           DC32 12632256
     52          
     53          /*********************************************************************
     54          *
     55          *       Public code: API functions
     56          *
     57          **********************************************************************
     58          */
     59          /*********************************************************************
     60          *
     61          *       DIALOG_GetBkColor
     62          */

   \                                 In section .text, align 4, keep-with-next
     63          LCD_COLOR DIALOG_GetBkColor(void) {
     64            return _BkColor;
   \                     DIALOG_GetBkColor:
   \   00000000   ........           LDR      R0,??DataTable4
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     65          }
     66          
     67          /*********************************************************************
     68          *
     69          *       DIALOG_SetBkColor
     70          */

   \                                 In section .text, align 4, keep-with-next
     71          LCD_COLOR DIALOG_SetBkColor(LCD_COLOR BkColor) {
     72            LCD_COLOR r;
     73            r = _BkColor;
   \                     DIALOG_SetBkColor:
   \   00000000   ........           LDR      R2,??DataTable4
   \   00000004   001092E5           LDR      R1,[R2, #+0]
     74            _BkColor = BkColor;
   \   00000008   000082E5           STR      R0,[R2, #+0]
     75            return r;
   \   0000000C   0100A0E1           MOV      R0,R1
   \   00000010   1EFF2FE1           BX       LR               ;; return
     76          }
     77          /*********************************************************************
     78          *
     79          *       GUI_SetDialogStatusPtr
     80          */

   \                                 In section .text, align 4, keep-with-next
     81          void GUI_SetDialogStatusPtr(WM_HWIN hDialog, WM_DIALOG_STATUS* pDialogStatus) {
   \                     GUI_SetDialogStatusPtr:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
     82            WM_MESSAGE Msg = {0};
   \   00000008   0D20A0E1           MOV      R2,SP
   \   0000000C   0030A0E3           MOV      R3,#+0
   \   00000010   00C0A0E3           MOV      R12,#+0
   \   00000014   00E0A0E3           MOV      LR,#+0
   \   00000018   0040A0E3           MOV      R4,#+0
   \   0000001C   1850A2E8           STM      R2!,{R3,R4,R12,LR}
     83            Msg.MsgId = WM_HANDLE_DIALOG_STATUS;
   \   00000020   2A30A0E3           MOV      R3,#+42
     84            Msg.Data.p = pDialogStatus;
   \   00000024   0C108DE5           STR      R1,[SP, #+12]
   \   00000028   00308DE5           STR      R3,[SP, #+0]
     85            WM_SendMessage(hDialog, &Msg);
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   ........           BL       WM_SendMessage
     86          }
   \   00000034   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
     87          
     88          /*********************************************************************
     89          *
     90          *       GUI_GetDialogStatusPtr
     91          */

   \                                 In section .text, align 4, keep-with-next
     92          WM_DIALOG_STATUS*  GUI_GetDialogStatusPtr(WM_HWIN hDialog) {
   \                     GUI_GetDialogStatusPtr:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
     93            WM_MESSAGE Msg = {0};
   \   00000008   0D10A0E1           MOV      R1,SP
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0030A0E3           MOV      R3,#+0
   \   00000014   00C0A0E3           MOV      R12,#+0
   \   00000018   00E0A0E3           MOV      LR,#+0
   \   0000001C   0C50A1E8           STM      R1!,{R2,R3,R12,LR}
     94            Msg.MsgId = WM_HANDLE_DIALOG_STATUS;
   \   00000020   2A20A0E3           MOV      R2,#+42
   \   00000024   00208DE5           STR      R2,[SP, #+0]
     95            WM_SendMessage(hDialog, &Msg);
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   ........           BL       WM_SendMessage
     96            return (WM_DIALOG_STATUS*)Msg.Data.p;
   \   00000030   0C009DE5           LDR      R0,[SP, #+12]
   \   00000034   14D08DE2           ADD      SP,SP,#+20
   \   00000038   0080BDE8           POP      {PC}             ;; return
     97          }
     98          /*********************************************************************
     99          *
    100          *       GUI_CreateDialogbox
    101          */

   \                                 In section .text, align 4, keep-with-next
    102          WM_HWIN GUI_CreateDialogBox(const GUI_WIDGET_CREATE_INFO* paWidget, int NumWidgets, WM_CALLBACK* cb, WM_HWIN hParent,
    103                                      int x0, int y0)
    104          {
   \                     GUI_CreateDialogBox:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   18009DE5           LDR      R0,[SP, #+24]
   \   00000010   0150A0E1           MOV      R5,R1
    105            WM_HWIN hDialog, hDialogClient;
    106            hDialog = paWidget->pfCreateIndirect(paWidget, hParent, x0, y0, cb);     /* Create parent window */
   \   00000014   00208DE5           STR      R2,[SP, #+0]
   \   00000018   0310A0E1           MOV      R1,R3
   \   0000001C   0020A0E1           MOV      R2,R0
   \   00000020   1C309DE5           LDR      R3,[SP, #+28]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   00C094E5           LDR      R12,[R4, #+0]
   \   0000002C   3CFF2FE1           BLX      R12
   \   00000030   0060B0E1           MOVS     R6,R0
    107            if (!hDialog) {
   \   00000034   0100001A           BNE      ??GUI_CreateDialogBox_0
    108              return 0;
   \                     ??GUI_CreateDialogBox_1:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   220000EA           B        ??GUI_CreateDialogBox_2
    109            }
    110            hDialogClient = WM_GetClientWindow(hDialog);
   \                     ??GUI_CreateDialogBox_0:
   \   00000040   ........           BL       WM_GetClientWindow
   \   00000044   0070A0E1           MOV      R7,R0
    111            WIDGET_OrState(hDialog, paWidget->Flags);
   \   00000048   B211D4E1           LDRH     R1,[R4, #+18]
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       WIDGET_OrState
    112            WM_ShowWindow(hDialog);
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   ........           BL       WM_ShowWindow
    113            WM_ShowWindow(hDialogClient);
   \   0000005C   0700A0E1           MOV      R0,R7
   \   00000060   ........           BL       WM_ShowWindow
   \   00000064   015045E2           SUB      R5,R5,#+1
   \   00000068   010055E3           CMP      R5,#+1
   \   0000006C   100000BA           BLT      ??GUI_CreateDialogBox_3
    114            while (--NumWidgets > 0) {
    115              WM_HWIN hChild;
    116              paWidget++;
    117              hChild = paWidget->pfCreateIndirect(paWidget, hDialogClient, 0, 0, 0);     /* Create child window */
   \                     ??GUI_CreateDialogBox_4:
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   184084E2           ADD      R4,R4,#+24
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   0030A0E3           MOV      R3,#+0
   \   00000080   0020A0E3           MOV      R2,#+0
   \   00000084   0710A0E1           MOV      R1,R7
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   00C094E5           LDR      R12,[R4, #+0]
   \   00000090   3CFF2FE1           BLX      R12
    118              if (!hChild) {
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0200001A           BNE      ??GUI_CreateDialogBox_5
    119                WM_DeleteWindow(hDialog);
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   ........           BL       WM_DeleteWindow
    120                return 0;
   \   000000A4   E3FFFFEA           B        ??GUI_CreateDialogBox_1
    121              }
    122              WM_ShowWindow(hChild);
   \                     ??GUI_CreateDialogBox_5:
   \   000000A8   ........           BL       WM_ShowWindow
   \   000000AC   015055E2           SUBS     R5,R5,#+1
    123            }
   \   000000B0   EEFFFF1A           BNE      ??GUI_CreateDialogBox_4
    124            WM_SetFocusOnNextChild(hDialog);     /* Set the focus to the first child */
   \                     ??GUI_CreateDialogBox_3:
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   ........           BL       WM_SetFocusOnNextChild
    125            WM_SendMessageNoPara(hDialogClient, WM_INIT_DIALOG);
   \   000000BC   1D10A0E3           MOV      R1,#+29
   \   000000C0   0700A0E1           MOV      R0,R7
   \   000000C4   ........           BL       WM_SendMessageNoPara
    126            return hDialog;
   \   000000C8   0600A0E1           MOV      R0,R6
   \                     ??GUI_CreateDialogBox_2:
   \   000000CC   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000D0   F080BDE8           POP      {R4-R7,PC}       ;; return
    127          }
    128          
    129          /*********************************************************************
    130          *
    131          *       GUI_EndDialog
    132          */

   \                                 In section .text, align 4, keep-with-next
    133          void GUI_EndDialog(WM_HWIN hDialog, int r) {
   \                     GUI_EndDialog:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    134            WM_DIALOG_STATUS* pStatus;
    135            pStatus = GUI_GetDialogStatusPtr(hDialog);
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   00C0A0E3           MOV      R12,#+0
   \   00000024   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   00000028   2A10A0E3           MOV      R1,#+42
   \   0000002C   00108DE5           STR      R1,[SP, #+0]
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_SendMessage
   \   0000003C   0C009DE5           LDR      R0,[SP, #+12]
    136            if (pStatus) {
   \   00000040   000050E3           CMP      R0,#+0
    137              pStatus->ReturnValue = r;
   \   00000044   04508015           STRNE    R5,[R0, #+4]
    138              pStatus->Done = 1;
   \   00000048   0110A013           MOVNE    R1,#+1
   \   0000004C   00108015           STRNE    R1,[R0, #+0]
    139            }
    140            //
    141            // WM__DeleteSecure makes sure that the window will be deleted within
    142            // the next execution of WM_Exec instead of deleting it immediately.
    143            // Deleting immediately makes problems because further messages are
    144            // send to the window under certain circumstances.
    145            //
    146            WM__DeleteSecure(hDialog);
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       WM__DeleteSecure
    147          }
   \   00000058   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
    148          
    149          
    150          /*********************************************************************
    151          *
    152          *       GUI_ExecCreatedDialog
    153          */

   \                                 In section .text, align 4, keep-with-next
    154          int     GUI_ExecCreatedDialog (WM_HWIN hDialog) {
   \                     GUI_ExecCreatedDialog:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    155            WM_DIALOG_STATUS DialogStatus = {0};
   \   00000004   ........           ADR      R2,`?<Constant {0}>_2`
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
   \   0000000C   004092E5           LDR      R4,[R2, #+0]
   \   00000010   045092E5           LDR      R5,[R2, #+4]
   \   00000014   0D10A0E1           MOV      R1,SP
   \   00000018   300081E8           STM      R1,{R4,R5}
    156            /* Let window know how to send feedback (close info & return value) */
    157            GUI_SetDialogStatusPtr(hDialog, &DialogStatus);
   \   0000001C   08108DE2           ADD      R1,SP,#+8
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   0030A0E3           MOV      R3,#+0
   \   00000028   00C0A0E3           MOV      R12,#+0
   \   0000002C   00E0A0E3           MOV      LR,#+0
   \   00000030   0C50A1E8           STM      R1!,{R2,R3,R12,LR}
   \   00000034   2A20A0E3           MOV      R2,#+42
   \   00000038   08208DE5           STR      R2,[SP, #+8]
   \   0000003C   14D08DE5           STR      SP,[SP, #+20]
   \   00000040   08108DE2           ADD      R1,SP,#+8
   \   00000044   ........           BL       WM_SendMessage
   \   00000048   030000EA           B        ??GUI_ExecCreatedDialog_0
    158            while (!DialogStatus.Done) {
    159              if (!GUI_Exec()) {
   \                     ??GUI_ExecCreatedDialog_1:
   \   0000004C   ........           BL       GUI_Exec
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0000001A           BNE      ??GUI_ExecCreatedDialog_0
    160                GUI_WaitEvent();      /* Wait for event (keyboard, mouse or whatever) */
   \   00000058   ........           BL       GUI_WaitEvent
    161              }
    162            }
   \                     ??GUI_ExecCreatedDialog_0:
   \   0000005C   00009DE5           LDR      R0,[SP, #+0]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   F8FFFF0A           BEQ      ??GUI_ExecCreatedDialog_1
    163            return DialogStatus.ReturnValue;
   \   00000068   04009DE5           LDR      R0,[SP, #+4]
   \   0000006C   1CD08DE2           ADD      SP,SP,#+28
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
    164          }
    165          
    166          /*********************************************************************
    167          *
    168          *       GUI_ExecDialogbox
    169          *
    170          * Purpose:
    171          *  Create and execute a dialog
    172          *  The name is somewhat confusing, it should really be something like
    173          *  GUI_CreateExecDialog. However, we keep it like that for compatibility
    174          *
    175          */

   \                                 In section .text, align 4, keep-with-next
    176          int GUI_ExecDialogBox(const GUI_WIDGET_CREATE_INFO* paWidget,
    177                                int NumWidgets, WM_CALLBACK* cb, WM_HWIN hParent, int x0, int y0)
    178          {
   \                     GUI_ExecDialogBox:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   30009DE5           LDR      R0,[SP, #+48]
   \   00000010   0160A0E1           MOV      R6,R1
    179            WM_HWIN hDialog;
    180            hDialog = GUI_CreateDialogBox(paWidget, NumWidgets, cb, hParent, x0, y0);
   \   00000014   00208DE5           STR      R2,[SP, #+0]
   \   00000018   0310A0E1           MOV      R1,R3
   \   0000001C   0020A0E1           MOV      R2,R0
   \   00000020   34309DE5           LDR      R3,[SP, #+52]
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   00C094E5           LDR      R12,[R4, #+0]
   \   0000002C   3CFF2FE1           BLX      R12
   \   00000030   0050B0E1           MOVS     R5,R0
   \   00000034   2200000A           BEQ      ??GUI_ExecDialogBox_0
   \   00000038   ........           BL       WM_GetClientWindow
   \   0000003C   0070A0E1           MOV      R7,R0
   \   00000040   B211D4E1           LDRH     R1,[R4, #+18]
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           BL       WIDGET_OrState
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       WM_ShowWindow
   \   00000054   0700A0E1           MOV      R0,R7
   \   00000058   ........           BL       WM_ShowWindow
   \   0000005C   016046E2           SUB      R6,R6,#+1
   \   00000060   010056E3           CMP      R6,#+1
   \   00000064   0D0000BA           BLT      ??GUI_ExecDialogBox_1
   \                     ??GUI_ExecDialogBox_2:
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   184084E2           ADD      R4,R4,#+24
   \   00000070   00008DE5           STR      R0,[SP, #+0]
   \   00000074   0030A0E3           MOV      R3,#+0
   \   00000078   0020A0E3           MOV      R2,#+0
   \   0000007C   0710A0E1           MOV      R1,R7
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   00C094E5           LDR      R12,[R4, #+0]
   \   00000088   3CFF2FE1           BLX      R12
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   0800000A           BEQ      ??GUI_ExecDialogBox_3
   \   00000094   ........           BL       WM_ShowWindow
   \   00000098   016056E2           SUBS     R6,R6,#+1
   \   0000009C   F1FFFF1A           BNE      ??GUI_ExecDialogBox_2
   \                     ??GUI_ExecDialogBox_1:
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   ........           BL       WM_SetFocusOnNextChild
   \   000000A8   1D10A0E3           MOV      R1,#+29
   \   000000AC   0700A0E1           MOV      R0,R7
   \   000000B0   ........           BL       WM_SendMessageNoPara
   \   000000B4   020000EA           B        ??GUI_ExecDialogBox_0
   \                     ??GUI_ExecDialogBox_3:
   \   000000B8   0500A0E1           MOV      R0,R5
   \   000000BC   ........           BL       WM_DeleteWindow
   \   000000C0   0050A0E3           MOV      R5,#+0
    181            return GUI_ExecCreatedDialog(hDialog);
   \                     ??GUI_ExecDialogBox_0:
   \   000000C4   ........           ADR      R1,`?<Constant {0}>_2`
   \   000000C8   002091E5           LDR      R2,[R1, #+0]
   \   000000CC   043091E5           LDR      R3,[R1, #+4]
   \   000000D0   0D00A0E1           MOV      R0,SP
   \   000000D4   0C0080E8           STM      R0,{R2,R3}
   \   000000D8   08008DE2           ADD      R0,SP,#+8
   \   000000DC   0010A0E3           MOV      R1,#+0
   \   000000E0   0020A0E3           MOV      R2,#+0
   \   000000E4   0030A0E3           MOV      R3,#+0
   \   000000E8   00C0A0E3           MOV      R12,#+0
   \   000000EC   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   000000F0   2A10A0E3           MOV      R1,#+42
   \   000000F4   08108DE5           STR      R1,[SP, #+8]
   \   000000F8   14D08DE5           STR      SP,[SP, #+20]
   \   000000FC   08108DE2           ADD      R1,SP,#+8
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   ........           BL       WM_SendMessage
   \   00000108   030000EA           B        ??GUI_ExecDialogBox_4
   \                     ??GUI_ExecDialogBox_5:
   \   0000010C   ........           BL       GUI_Exec
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   0000001A           BNE      ??GUI_ExecDialogBox_4
   \   00000118   ........           BL       GUI_WaitEvent
   \                     ??GUI_ExecDialogBox_4:
   \   0000011C   00009DE5           LDR      R0,[SP, #+0]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   F8FFFF0A           BEQ      ??GUI_ExecDialogBox_5
   \   00000128   04009DE5           LDR      R0,[SP, #+4]
   \   0000012C   1CD08DE2           ADD      SP,SP,#+28
   \   00000130   F080BDE8           POP      {R4-R7,PC}       ;; return
    182          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     _BkColor

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {0}>_2`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   00000000           DC32 0
   \   00000004   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>_1`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000E   0000               DC8 0, 0
    183          
    184          
    185          #else
    186            void Dialog_c(void);    /* Avoid problems with empty object modules */
    187            void Dialog_c(void){}
    188          #endif   /* GUI_WINSUPPORT */
    189          

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     DIALOG_GetBkColor           0
     DIALOG_SetBkColor           0
     GUI_CreateDialogBox        24
     GUI_EndDialog              32
     GUI_ExecCreatedDialog      40
     GUI_ExecDialogBox          48
     GUI_GetDialogStatusPtr     24
     GUI_SetDialogStatusPtr     24


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     _BkColor                  4
     DIALOG_GetBkColor        12
     DIALOG_SetBkColor        20
     GUI_SetDialogStatusPtr   60
     GUI_GetDialogStatusPtr   60
     GUI_CreateDialogBox     212
     GUI_EndDialog            96
     GUI_ExecCreatedDialog   116
     GUI_ExecDialogBox       308
     ??DataTable4              4
     ?<Constant {0}>_2         8
     ?<Constant {0}>          16
     ?<Constant {0}>_1        16

 
   4 bytes in section .data
  32 bytes in section .rodata
 896 bytes in section .text
 
 896 bytes of CODE  memory
  32 bytes of CONST memory
   4 bytes of DATA  memory

Errors: none
Warnings: none
