###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:46 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Core.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Core.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_Core.lst                                               #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _Core.o                                                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Core.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICore.C
     19          Purpose     : Core routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #define  GL_CORE_C
     26          
     27          #include "GUI_Private.h"

   \                                 In section .bss, align 4
   \   __absolute int (void) *GUI_pfTimerExec
   \                     GUI_pfTimerExec:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute int (void) *WM_pfHandlePID
   \                     WM_pfHandlePID:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute void (*GUI_pfDispCharStyle)(unsigned short)
   \                     GUI_pfDispCharStyle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \   __absolute tLCD_APIList const *GUI_pLCD_APIList
   \                     GUI_pLCD_APIList:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
   \   __absolute signed short GUI_OrgX
   \                     GUI_OrgX:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \   __absolute signed short GUI_OrgY
   \                     GUI_OrgY:
   \   00000000                      DS8 2
     28          
     29          #if GUI_WINSUPPORT
     30            #include "WM_GUI.h"
     31            #include "WM.h"
     32          #endif
     33          
     34          /*********************************************************************
     35          *
     36          *       Static data
     37          *
     38          **********************************************************************
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          static const tLCD_HL_APIList _HL_APIList = {
   \                     _HL_APIList:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   ............       DC32 LCD_DrawHLine, LCD_DrawPixel
   \              ....        
     41            LCD_DrawHLine,
     42            LCD_DrawPixel
     43          };
     44          
     45          const GUI_FONT GUI_UNI_PTR * GUI__pFontDefault = GUI_DEFAULT_FONT;
     46          
     47          /*********************************************************************
     48          *
     49          *       Static code
     50          *
     51          **********************************************************************
     52          */
     53          /*********************************************************************
     54          *
     55          *       _InitContext
     56          *
     57          * Purpose
     58          *   Initializes the given context.
     59          *
     60          * Special considerations
     61          *   Make sure that no GUI functions are called, because locking is
     62          *   not allowed here (GUITASK_INIT not yet called).
     63          */
     64          static void _InitContext(GUI_CONTEXT * pContext) {
     65            //
     66            // Check if a display driver has been added
     67            //
     68            while (GUI_Context.apDevice[0] == NULL); // Stop if no display driver has been added
     69            //
     70            // Check if a default font has been specified
     71            //
     72            while (GUI__pFontDefault == NULL);       // Stop if no default font has been defined
     73            //
     74            // Initialize members of pContext. 
     75            // memset(..,0,..) is not required, as this function is called only at startup of the GUI when data is 0
     76            //
     77            pContext->pClipRect_HL = &GUI_Context.ClipRect;
     78            GUI_Context.apDevice[GUI_Context.SelLayer]->pDeviceAPI->pfGetRect(GUI_Context.apDevice[GUI_Context.SelLayer], &pContext->ClipRect);
     79            pContext->pLCD_HL      = &_HL_APIList;
     80            pContext->pAFont       = GUI__pFontDefault;
     81            pContext->pClipRect_HL = &GUI_Context.ClipRect;
     82            pContext->PenSize      = 1;
     83            //
     84            // Variables in WM module
     85            //
     86            #if GUI_WINSUPPORT
     87              pContext->hAWin    = WM_GetDesktopWindow();
     88            #endif
     89            //
     90            // Variables in GUI_AA module
     91            //
     92            pContext->AA_Factor = 3;
     93            pContext->Color   = GUI_INVALID_COLOR;
     94            pContext->BkColor = GUI_INVALID_COLOR;
     95            LCD_SetBkColor(GUI_DEFAULT_BKCOLOR);
     96            LCD_SetColor(GUI_DEFAULT_COLOR);
     97            GUI_pUC_API = &GUI_UC_None;
     98          }
     99          
    100          /*********************************************************************
    101          *
    102          *       Public code
    103          *
    104          **********************************************************************
    105          */
    106          /*********************************************************************
    107          *
    108          *       GUI_SetDefaultFont
    109          */

   \                                 In section .text, align 4, keep-with-next
    110          void GUI_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
    111            GUI__pFontDefault = pFont;
   \                     GUI_SetDefaultFont:
   \   00000000   ........           LDR      R1,??DataTable5
   \   00000004   A00081E5           STR      R0,[R1, #+160]
    112          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    113          
    114          /*********************************************************************
    115          *
    116          *       GUI_ClearRect
    117          */

   \                                 In section .text, align 4, keep-with-next
    118          void GUI_ClearRect(int x0, int y0, int x1, int y1) {
   \                     GUI_ClearRect:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0350A0E1           MOV      R5,R3
    119            GUI_DRAWMODE PrevDraw;
    120            #if GUI_WINSUPPORT
    121              GUI_RECT r;
    122            #endif
    123            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
    124            PrevDraw = LCD_SetDrawMode(GUI_DRAWMODE_REV);
   \   0000001C   0400A0E3           MOV      R0,#+4
   \   00000020   ........           BL       LCD_SetDrawMode
   \   00000024   0040A0E1           MOV      R4,R0
    125            #if GUI_WINSUPPORT
    126              WM_ADDORG(x0,y0);
   \   00000028   ........           LDR      R0,??DataTable5
   \   0000002C   401090E5           LDR      R1,[R0, #+64]
   \   00000030   440090E5           LDR      R0,[R0, #+68]
   \   00000034   066081E0           ADD      R6,R1,R6
   \   00000038   088080E0           ADD      R8,R0,R8
    127              WM_ADDORG(x1,y1);
   \   0000003C   077081E0           ADD      R7,R1,R7
   \   00000040   055080E0           ADD      R5,R0,R5
    128              r.x0 = x0;
   \   00000044   B060CDE1           STRH     R6,[SP, #+0]
    129              r.x1 = x1;
   \   00000048   B470CDE1           STRH     R7,[SP, #+4]
    130              r.y0 = y0;
   \   0000004C   B280CDE1           STRH     R8,[SP, #+2]
    131              r.y1 = y1;
   \   00000050   B650CDE1           STRH     R5,[SP, #+6]
    132              WM_ITERATE_START(&r) {
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           BL       WM__InitIVRSearch
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0700000A           BEQ      ??GUI_ClearRect_0
    133            #endif
    134            LCD_FillRect(x0,y0,x1,y1);
   \                     ??GUI_ClearRect_1:
   \   00000064   0530A0E1           MOV      R3,R5
   \   00000068   0720A0E1           MOV      R2,R7
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       LCD_FillRect
    135            #if GUI_WINSUPPORT
    136              } WM_ITERATE_END();
   \   00000078   ........           BL       WM__GetNextIVR
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   F7FFFF1A           BNE      ??GUI_ClearRect_1
    137            #endif
    138            LCD_SetDrawMode(PrevDraw);
   \                     ??GUI_ClearRect_0:
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       LCD_SetDrawMode
    139            GUI_UNLOCK();
   \   0000008C   ........           BL       GUI_Unlock
    140          }
   \   00000090   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000094   F081BDE8           POP      {R4-R8,PC}       ;; return
    141          
    142          /*********************************************************************
    143          *
    144          *       GUI_Clear
    145          */

   \                                 In section .text, align 4, keep-with-next
    146          void GUI_Clear(void) {
   \                     GUI_Clear:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
    147            GUI_GotoXY(0,0);     /* Reset text cursor to upper left */
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       GUI_GotoXY
    148            GUI_ClearRect(GUI_XMIN, GUI_YMIN, GUI_XMAX, GUI_YMAX);
   \   00000014   ........           BL       GUI_Lock
   \   00000018   0400A0E3           MOV      R0,#+4
   \   0000001C   ........           BL       LCD_SetDrawMode
   \   00000020   0040A0E1           MOV      R4,R0
   \   00000024   ........           LDR      R0,??DataTable5
   \   00000028   FE20E0E3           MVN      R2,#+254
   \   0000002C   401090E5           LDR      R1,[R0, #+64]
   \   00000030   440090E5           LDR      R0,[R0, #+68]
   \   00000034   F02EC2E3           BIC      R2,R2,#0xF00
   \   00000038   015082E0           ADD      R5,R2,R1
   \   0000003C   006082E0           ADD      R6,R2,R0
   \   00000040   002062E2           RSB      R2,R2,#+0
   \   00000044   017082E0           ADD      R7,R2,R1
   \   00000048   008082E0           ADD      R8,R2,R0
   \   0000004C   B050CDE1           STRH     R5,[SP, #+0]
   \   00000050   B470CDE1           STRH     R7,[SP, #+4]
   \   00000054   B260CDE1           STRH     R6,[SP, #+2]
   \   00000058   B680CDE1           STRH     R8,[SP, #+6]
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           BL       WM__InitIVRSearch
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0700000A           BEQ      ??GUI_Clear_0
   \                     ??GUI_Clear_1:
   \   0000006C   0830A0E1           MOV      R3,R8
   \   00000070   0720A0E1           MOV      R2,R7
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       LCD_FillRect
   \   00000080   ........           BL       WM__GetNextIVR
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   F7FFFF1A           BNE      ??GUI_Clear_1
   \                     ??GUI_Clear_0:
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       LCD_SetDrawMode
   \   00000094   ........           BL       GUI_Unlock
    149          }
   \   00000098   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000009C   F081BDE8           POP      {R4-R8,PC}       ;; return
    150          
    151          /*********************************************************************
    152          *
    153          *       GUI__Config
    154          */

   \                                 In section .text, align 4, keep-with-next
    155          void GUI__Config(void) {
    156            static int Done;
    157            if (Done == 0) {
   \                     GUI__Config:
   \   00000000   ........           LDR      R0,??DataTable5
   \   00000004   A41090E5           LDR      R1,[R0, #+164]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0000000A           BEQ      ??GUI__Config_0
    158              Done = 1;
   \   00000010   1EFF2FE1           BX       LR
   \                     ??GUI__Config_0:
   \   00000014   00402DE9           PUSH     {LR}
   \   00000018   0110A0E3           MOV      R1,#+1
   \   0000001C   04D04DE2           SUB      SP,SP,#+4
   \   00000020   A41080E5           STR      R1,[R0, #+164]
    159              GUI_X_Config();
   \   00000024   ........           BL       GUI_X_Config
    160              LCD_X_Config();
   \   00000028   ........           BL       LCD_X_Config
    161            }
    162          }
   \   0000002C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return

   \                                 In section .data, align 4
   \   __absolute GUI_CONTEXT GUI_Context
   \                     GUI_Context:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000020   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000030   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000040   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000050   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000060   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000070   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000080   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000090   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \   __absolute struct <unnamed> const *GUI_pUC_API
   \                     GUI_pUC_API:
   \   0000009C   00000000           DC8 0, 0, 0, 0
   \                     GUI__pFontDefault:
   \   000000A0   ........           DC32 GUI_Font6x8
   \   000000A4   00000000           DC8 0, 0, 0, 0
   \   __absolute char GUI_DecChar
   \                     GUI_DecChar:
   \   000000A8   00                 DC8 0
    163          
    164          /*********************************************************************
    165          *
    166          *       GUI_Init
    167          *
    168          * Purpose:
    169          *   Init of GUI internal data structures & variables
    170          */

   \                                 In section .text, align 4, keep-with-next
    171          int GUI_Init(void) {
   \                     GUI_Init:
   \   00000000   10402DE9           PUSH     {R4,LR}
    172            int r;
    173            GUI_DEBUG_LOG("\nGUI_Init()");
    174            GUI__Config();
   \   00000004   ........           LDR      R4,??DataTable5
   \   00000008   A40094E5           LDR      R0,[R4, #+164]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0300001A           BNE      ??GUI_Init_0
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   A40084E5           STR      R0,[R4, #+164]
   \   0000001C   ........           BL       GUI_X_Config
   \   00000020   ........           BL       LCD_X_Config
    175            /* Init system wide globals first */
    176            GUI_DecChar = '.';
   \                     ??GUI_Init_0:
   \   00000024   2E00A0E3           MOV      R0,#+46
   \   00000028   A800C4E5           STRB     R0,[R4, #+168]
    177            GUI_X_Init();
   \   0000002C   ........           BL       GUI_X_Init
    178            /* Init context */
    179            _InitContext(&GUI_Context);
   \   00000030   480094E5           LDR      R0,[R4, #+72]
   \                     ??GUI_Init_1:
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   FDFFFF0A           BEQ      ??GUI_Init_1
   \                     ??GUI_Init_2:
   \   0000003C   A00094E5           LDR      R0,[R4, #+160]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   FCFFFF0A           BEQ      ??GUI_Init_2
   \   00000048   080084E2           ADD      R0,R4,#+8
   \   0000004C   140084E5           STR      R0,[R4, #+20]
   \   00000050   1100D4E5           LDRB     R0,[R4, #+17]
   \   00000054   081084E2           ADD      R1,R4,#+8
   \   00000058   000184E0           ADD      R0,R4,R0, LSL #+2
   \   0000005C   480090E5           LDR      R0,[R0, #+72]
   \   00000060   0C2090E5           LDR      R2,[R0, #+12]
   \   00000064   302092E5           LDR      R2,[R2, #+48]
   \   00000068   32FF2FE1           BLX      R2
   \   0000006C   ........           ADR      R0,_HL_APIList
   \   00000070   940084E5           STR      R0,[R4, #+148]
   \   00000074   A00094E5           LDR      R0,[R4, #+160]
   \   00000078   1C0084E5           STR      R0,[R4, #+28]
   \   0000007C   080084E2           ADD      R0,R4,#+8
   \   00000080   140084E5           STR      R0,[R4, #+20]
   \   00000084   0100A0E3           MOV      R0,#+1
   \   00000088   1800C4E5           STRB     R0,[R4, #+24]
   \   0000008C   ........           BL       WM_GetDesktopWindow
   \   00000090   3C0084E5           STR      R0,[R4, #+60]
   \   00000094   0300A0E3           MOV      R0,#+3
   \   00000098   9800C4E5           STRB     R0,[R4, #+152]
   \   0000009C   F004E0E3           MVN      R0,#-268435456
   \   000000A0   300084E5           STR      R0,[R4, #+48]
   \   000000A4   340084E5           STR      R0,[R4, #+52]
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   ........           BL       LCD_SetBkColor
   \   000000B0   FF04E0E3           MVN      R0,#-16777216
   \   000000B4   ........           BL       LCD_SetColor
   \   000000B8   ........           LDR      R0,??DataTable5_1
   \   000000BC   9C0084E5           STR      R0,[R4, #+156]
    180            GUITASK_INIT();
   \   000000C0   ........           BL       GUITASK_Init
    181            r = LCD_Init();
   \   000000C4   ........           BL       LCD_Init
   \   000000C8   0040A0E1           MOV      R4,R0
    182            GUI_SetOrg(0, 0);
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   ........           BL       GUI_SetOrg
    183            #if GUI_WINSUPPORT
    184              WM_Init();
   \   000000D8   ........           BL       WM_Init
    185            #endif
    186            GUITASK_COPY_CONTEXT();
   \   000000DC   ........           BL       GUITASK_CopyContext
    187            #if defined(GUI_TRIAL_VERSION)
    188              #if GUI_TRIAL_VERSION
    189                GUI_GotoXY(0, 0);
    190                GUI_DispString(  "This software\n"
    191          	                     "contains an eval-\n"
    192          	                     "build of emWin.\n"
    193          	                     "\n"
    194          	                     "A license is\n"
    195          	                     "required to use\n"
    196          	                     "it in a product.\n\n"
    197          	                     "www.segger.com\n");
    198                GUI_GotoXY(0, 0);
    199                GUI_X_Delay(1000);
    200                GUI_Clear();
    201              #endif
    202            #endif
    203            return r;
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   1080BDE8           POP      {R4,PC}          ;; return
    204          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   ........           DC32     GUI_UC_None
    205          
    206          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     GUI_Clear              32
     GUI_ClearRect          32
     GUI_Init                8
     GUI_SetDefaultFont      0
     GUI__Config             8


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     GUI_pfTimerExec        4
     WM_pfHandlePID         4
     GUI_pfDispCharStyle    4
     GUI_pLCD_APIList       4
     GUI_OrgX               2
     GUI_OrgY               2
     _HL_APIList            8
     GUI_SetDefaultFont    12
     GUI_ClearRect        152
     GUI_Clear            160
     GUI__Config           52
     GUI_Context          169
     GUI_pUC_API
     GUI__pFontDefault
     Done
     GUI_DecChar
     GUI_Init             232
     ??DataTable5           4
     ??DataTable5_1         4

 
  20 bytes in section .bss
 169 bytes in section .data
 624 bytes in section .text
 
 624 bytes of CODE memory
 189 bytes of DATA memory

Errors: none
Warnings: none
