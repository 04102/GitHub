###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:26 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUICC_M565_Index2Color.c            #
#    Command line =  C:\DUII\TargetHW\GUI\GUICC_M565_Index2Color.c -D         #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    ICC_M565_Index2Color.lst                                 #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    CC_M565_Index2Color.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUICC_M565_Index2Color.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICC_M565_Index2Color.c
     19          Purpose     : Color conversion routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LCD_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Defines
     28          *
     29          **********************************************************************
     30          */
     31          
     32          #define B_BITS 5
     33          #define G_BITS 6
     34          #define R_BITS 5
     35          
     36          #define R_MASK ((1 << R_BITS) -1)
     37          #define G_MASK ((1 << G_BITS) -1)
     38          #define B_MASK ((1 << B_BITS) -1)
     39          
     40          /*********************************************************************
     41          *
     42          *       Public code,
     43          *
     44          *       LCD_FIXEDPALETTE == 565, 65536 colors, RRRRRGGGGGGBBBBB
     45          *
     46          **********************************************************************
     47          */
     48          /*********************************************************************
     49          *
     50          *       LCD_Index2Color_M565
     51          */

   \                                 In section .text, align 4, keep-with-next
     52          LCD_COLOR LCD_Index2Color_M565(unsigned Index) {
     53            unsigned r, g, b;
     54            /* Seperate the color masks */
     55            b = Index                        & B_MASK;
     56            g = (Index >> B_BITS)            & G_MASK;
     57            r = (Index >> (B_BITS + G_BITS)) & R_MASK;
     58            /* Convert the color masks */
     59            r = r * 255 / R_MASK;
     60            g = g * 255 / G_MASK;
     61            b = b * 255 / B_MASK;
     62            return r + (g << 8) + (((U32)b) << 16);
   \                     LCD_Index2Color_M565:
   \   00000000   1F10A0E3           MOV      R1,#+31
   \   00000004   A01501E0           AND      R1,R1,R0, LSR #+11
   \   00000008   4C309FE5           LDR      R3,??LCD_Index2Color_M565_0  ;; 0x84210842
   \   0000000C   011461E0           RSB      R1,R1,R1, LSL #+8
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   9133A2E0           UMLAL    R3,R2,R1,R3
   \   00000018   3F10A0E3           MOV      R1,#+63
   \   0000001C   A01201E0           AND      R1,R1,R0, LSR #+5
   \   00000020   38C09FE5           LDR      R12,??LCD_Index2Color_M565_0+0x4  ;; 0x82082082
   \   00000024   011461E0           RSB      R1,R1,R1, LSL #+8
   \   00000028   0030A0E3           MOV      R3,#+0
   \   0000002C   91CCA3E0           UMLAL    R12,R3,R1,R12
   \   00000030   1F0000E2           AND      R0,R0,#0x1F
   \   00000034   A312A0E1           LSR      R1,R3,#+5
   \   00000038   0114A0E1           LSL      R1,R1,#+8
   \   0000003C   221281E0           ADD      R1,R1,R2, LSR #+4
   \   00000040   14309FE5           LDR      R3,??LCD_Index2Color_M565_0  ;; 0x84210842
   \   00000044   000460E0           RSB      R0,R0,R0, LSL #+8
   \   00000048   0020A0E3           MOV      R2,#+0
   \   0000004C   9033A2E0           UMLAL    R3,R2,R0,R3
   \   00000050   2202A0E1           LSR      R0,R2,#+4
   \   00000054   000881E0           ADD      R0,R1,R0, LSL #+16
   \   00000058   1EFF2FE1           BX       LR               ;; return
   \                     ??LCD_Index2Color_M565_0:
   \   0000005C   42082184           DC32     0x84210842
   \   00000060   82200882           DC32     0x82082082
     63          }
     64          
     65          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     LCD_Index2Color_M565      0


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     LCD_Index2Color_M565  100

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
