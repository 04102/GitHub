###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:02:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM__SendMessage.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM__SendMessage.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\WM #
#                    __SendMessage.lst                                        #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\WM_ #
#                    _SendMessage.o                                           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM__SendMessage.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM__SendMessage.c
     19          Purpose     : Implementation of WM__SendMessage
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          #include "WM_Intern.h"
     25          
     26          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     27          
     28          /*********************************************************************
     29          *
     30          *       Defines
     31          *
     32          **********************************************************************
     33          */
     34          
     35          #ifndef   GUI_MAX_MESSAGE_NESTING
     36            #define GUI_MAX_MESSAGE_NESTING 20
     37          #endif
     38          
     39          /*********************************************************************
     40          *
     41          *       Public code
     42          *
     43          **********************************************************************
     44          */
     45          /*********************************************************************
     46          *
     47          *       WM__SendMessage
     48          */

   \                                 In section .text, align 4, keep-with-next
     49          void WM__SendMessage(WM_HWIN hWin, WM_MESSAGE* pMsg) {
   \                     WM__SendMessage:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
     50            static int _EntranceCnt;
     51            WM_Obj* pWin;
     52            if (_EntranceCnt < GUI_MAX_MESSAGE_NESTING) {
   \   00000004   58409FE5           LDR      R4,??WM__SendMessage_0
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   140050E3           CMP      R0,#+20
   \   00000018   100000AA           BGE      ??WM__SendMessage_1
     53              pWin = WM_HANDLE2PTR(hWin);
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       GUI_ALLOC_h2p
     54              pMsg->hWin = hWin;
   \   00000024   045086E5           STR      R5,[R6, #+4]
     55              if (pWin->cb != NULL) {
   \   00000028   101090E5           LDR      R1,[R0, #+16]
   \   0000002C   000051E3           CMP      R1,#+0
   \   00000030   0800000A           BEQ      ??WM__SendMessage_2
     56                _EntranceCnt++;
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   010080E2           ADD      R0,R0,#+1
   \   0000003C   000084E5           STR      R0,[R4, #+0]
     57                (*pWin->cb)(pMsg);
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   31FF2FE1           BLX      R1
     58                _EntranceCnt--;
   \   00000048   000094E5           LDR      R0,[R4, #+0]
   \   0000004C   010040E2           SUB      R0,R0,#+1
   \   00000050   000084E5           STR      R0,[R4, #+0]
   \   00000054   7080BDE8           POP      {R4-R6,PC}
     59              } else {
     60                WM_DefaultProc(pMsg);
   \                     ??WM__SendMessage_2:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   ........           BL       WM_DefaultProc
     61              }
     62            }
     63            #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_PARA
     64            else {
     65              GUI_DEBUG_ERROROUT("Max. message nesting exceeded, Message skipped."); 
     66            }
     67            #endif
     68          }
   \                     ??WM__SendMessage_1:
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM__SendMessage_0:
   \   00000064   ........           DC32     ??_EntranceCnt

   \                                 In section .bss, align 4
   \                     ??_EntranceCnt:
   \   00000000                      DS8 4
     69          
     70          #else
     71            void WM__SendMessage_c(void);
     72            void WM__SendMessage_c(void) {} /* avoid empty object files */
     73          #endif
     74          
     75          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     WM__SendMessage     16


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WM__SendMessage  104
     _EntranceCnt       4

 
   4 bytes in section .bss
 104 bytes in section .text
 
 104 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
