###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:56 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_InvertRect.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_InvertRect.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_InvertRect.lst                                         #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _InvertRect.o                                            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_InvertRect.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_InvertRect.C
     19          Purpose     : Implementation file for GUI_InvertRect
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_InvertRect
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_InvertRect(int x0, int y0, int x1, int y1) {
   \                     GUI_InvertRect:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0350A0E1           MOV      R5,R3
     36            GUI_DRAWMODE PrevDraw;
     37            #if (GUI_WINSUPPORT)
     38              GUI_RECT r;
     39            #endif
     40            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
     41            PrevDraw = GUI_SetDrawMode(GUI_DRAWMODE_XOR);
   \   0000001C   0100A0E3           MOV      R0,#+1
   \   00000020   ........           BL       GUI_SetDrawMode
   \   00000024   0040A0E1           MOV      R4,R0
     42            #if (GUI_WINSUPPORT)
     43              WM_ADDORG(x0, y0);
   \   00000028   68009FE5           LDR      R0,??GUI_InvertRect_0
   \   0000002C   401090E5           LDR      R1,[R0, #+64]
   \   00000030   440090E5           LDR      R0,[R0, #+68]
   \   00000034   066081E0           ADD      R6,R1,R6
   \   00000038   088080E0           ADD      R8,R0,R8
     44              WM_ADDORG(x1, y1);
   \   0000003C   077081E0           ADD      R7,R1,R7
   \   00000040   055080E0           ADD      R5,R0,R5
     45              r.x0 = x0;
   \   00000044   B060CDE1           STRH     R6,[SP, #+0]
     46              r.x1 = x1;
   \   00000048   B470CDE1           STRH     R7,[SP, #+4]
     47              r.y0 = y0;
   \   0000004C   B280CDE1           STRH     R8,[SP, #+2]
     48              r.y1 = y1;
   \   00000050   B650CDE1           STRH     R5,[SP, #+6]
     49              WM_ITERATE_START(&r); {
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           BL       WM__InitIVRSearch
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0700000A           BEQ      ??GUI_InvertRect_1
     50            #endif
     51            LCD_FillRect(x0, y0, x1, y1);
   \                     ??GUI_InvertRect_2:
   \   00000064   0530A0E1           MOV      R3,R5
   \   00000068   0720A0E1           MOV      R2,R7
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       LCD_FillRect
     52            #if (GUI_WINSUPPORT)
     53              } WM_ITERATE_END();
   \   00000078   ........           BL       WM__GetNextIVR
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   F7FFFF1A           BNE      ??GUI_InvertRect_2
     54            #endif
     55            GUI_SetDrawMode(PrevDraw);
   \                     ??GUI_InvertRect_1:
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       GUI_SetDrawMode
     56            GUI_UNLOCK();
   \   0000008C   ........           BL       GUI_Unlock
     57          }
   \   00000090   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000094   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??GUI_InvertRect_0:
   \   00000098   ........           DC32     GUI_Context
     58          
     59          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     GUI_InvertRect     32


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_InvertRect  156

 
 156 bytes in section .text
 
 156 bytes of CODE memory

Errors: none
Warnings: none
