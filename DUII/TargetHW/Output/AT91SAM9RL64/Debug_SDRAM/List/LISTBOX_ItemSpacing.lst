###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  18:59:12 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTBOX_ItemSpacing.c               #
#    Command line =  C:\DUII\TargetHW\GUI\LISTBOX_ItemSpacing.c -D DEBUG=1    #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\LI #
#                    STBOX_ItemSpacing.lst                                    #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\LIS #
#                    TBOX_ItemSpacing.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTBOX_ItemSpacing.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTBOX_ItemSpacing.c
     19          Purpose     : Implementation of LISTBOX_SetItemSpacing & LISTBOX_GetItemSpacing
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "LISTBOX_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public routines
     31          *
     32          **********************************************************************
     33          */
     34          
     35          /*********************************************************************
     36          *
     37          *       LISTBOX_SetItemSpacing
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          void LISTBOX_SetItemSpacing(LISTBOX_Handle hObj, unsigned Value) {
   \                     LISTBOX_SetItemSpacing:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     40            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0800000A           BEQ      ??LISTBOX_SetItemSpacing_0
     41              LISTBOX_Obj * pObj;
     42              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     43              pObj = LISTBOX_LOCK_H(hObj);
     44              pObj->ItemSpacing = Value;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   B459C0E1           STRH     R5,[R0, #+148]
     45              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     46              LISTBOX_InvalidateItem(hObj, LISTBOX_ALL_ITEMS);
   \   0000002C   0010E0E3           MVN      R1,#+0
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       LISTBOX_InvalidateItem
     47              WM_UNLOCK();
   \   00000038   ........           BL       GUI_Unlock
     48            }
     49          }
   \                     ??LISTBOX_SetItemSpacing_0:
   \   0000003C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     50          
     51          /*********************************************************************
     52          *
     53          *       LISTBOX_GetItemSpacing
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          unsigned LISTBOX_GetItemSpacing(LISTBOX_Handle hObj) {
   \                     LISTBOX_GetItemSpacing:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     56            unsigned Value = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     57            if (hObj) {
   \   00000010   0500000A           BEQ      ??LISTBOX_GetItemSpacing_0
     58              LISTBOX_Obj * pObj;
     59              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     60              pObj = LISTBOX_LOCK_H(hObj);
     61              Value = pObj->ItemSpacing;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   B459D0E1           LDRH     R5,[R0, #+148]
     62              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     63              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
     64            }
     65            return Value;
   \                     ??LISTBOX_GetItemSpacing_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     66          }
     67          
     68          #else                            /* Avoid problems with empty object modules */
     69            void LISTBOX_SetItemSpacing_C(void);
     70            void LISTBOX_SetItemSpacing_C(void) {}
     71          #endif

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     LISTBOX_GetItemSpacing     16
     LISTBOX_SetItemSpacing     16


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     LISTBOX_SetItemSpacing   68
     LISTBOX_GetItemSpacing   56

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: none
