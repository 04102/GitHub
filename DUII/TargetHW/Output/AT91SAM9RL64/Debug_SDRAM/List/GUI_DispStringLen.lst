###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:00:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DispStringLen.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DispStringLen.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\GU #
#                    I_DispStringLen.lst                                      #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\GUI #
#                    _DispStringLen.o                                         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DispStringLen.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DispStringLen.c
     19          Purpose     : Implementation of optional routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_DispStringLen
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_DispStringLen(const char GUI_UNI_PTR *s, int MaxNumChars) {
   \                     GUI_DispStringLen:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
     36            U16 Char;
     37            GUI_LOCK();
   \   0000000C   ........           BL       GUI_Lock
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   2200000A           BEQ      ??GUI_DispStringLen_0
   \   00000018   0450A0E1           MOV      R5,R4
   \   0000001C   010015E3           TST      R5,#0x1
   \   00000020   0800000A           BEQ      ??GUI_DispStringLen_1
   \   00000024   016005E2           AND      R6,R5,#0x1
   \                     ??GUI_DispStringLen_2:
   \   00000028   04008DE2           ADD      R0,SP,#+4
   \   0000002C   ........           BL       GUI_UC__GetCharCodeInc
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   FBFFFF0A           BEQ      ??GUI_DispStringLen_2
     38            while (MaxNumChars && ((Char = GUI_UC__GetCharCodeInc(&s)) != 0)) {
     39              GUI_DispChar(Char);
   \   00000038   ........           BL       GUI_DispChar
     40              MaxNumChars--;
   \   0000003C   014044E2           SUB      R4,R4,#+1
   \   00000040   016056E2           SUBS     R6,R6,#+1
   \   00000044   F7FFFF1A           BNE      ??GUI_DispStringLen_2
   \                     ??GUI_DispStringLen_1:
   \   00000048   A550B0E1           LSRS     R5,R5,#+1
   \   0000004C   0D00000A           BEQ      ??GUI_DispStringLen_3
   \                     ??GUI_DispStringLen_4:
   \   00000050   04008DE2           ADD      R0,SP,#+4
   \   00000054   ........           BL       GUI_UC__GetCharCodeInc
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   0900000A           BEQ      ??GUI_DispStringLen_3
   \   00000060   ........           BL       GUI_DispChar
   \   00000064   014044E2           SUB      R4,R4,#+1
   \   00000068   04008DE2           ADD      R0,SP,#+4
   \   0000006C   ........           BL       GUI_UC__GetCharCodeInc
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0300000A           BEQ      ??GUI_DispStringLen_3
   \   00000078   ........           BL       GUI_DispChar
   \   0000007C   014044E2           SUB      R4,R4,#+1
   \   00000080   015055E2           SUBS     R5,R5,#+1
   \   00000084   F1FFFF1A           BNE      ??GUI_DispStringLen_4
     41            }
     42            while (MaxNumChars--) {
   \                     ??GUI_DispStringLen_3:
   \   00000088   000054E3           CMP      R4,#+0
   \   0000008C   0400000A           BEQ      ??GUI_DispStringLen_0
   \                     ??GUI_DispStringLen_5:
   \   00000090   014044E2           SUB      R4,R4,#+1
     43              GUI_DispChar(' ');
   \   00000094   2000A0E3           MOV      R0,#+32
   \   00000098   ........           BL       GUI_DispChar
   \   0000009C   000054E3           CMP      R4,#+0
   \   000000A0   FAFFFF1A           BNE      ??GUI_DispStringLen_5
     44            }
     45            GUI_UNLOCK();
   \                     ??GUI_DispStringLen_0:
   \   000000A4   ........           BL       GUI_Unlock
     46          }
   \   000000A8   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000AC   7080BDE8           POP      {R4-R6,PC}       ;; return
     47          
     48          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_DispStringLen     24


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_DispStringLen  176

 
 176 bytes in section .text
 
 176 bytes of CODE memory

Errors: none
Warnings: none
