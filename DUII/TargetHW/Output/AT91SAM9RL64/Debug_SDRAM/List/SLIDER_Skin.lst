###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     14/Jul/2015  19:01:56 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\SLIDER_Skin.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\SLIDER_Skin.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D                   #
#                    XIGNORE_TEMPERATURE -D BUILD_DEBUG_PORT -D PROFILER      #
#                    -lCN C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Li #
#                    st\ -o C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\ #
#                    Obj\ --debug --endian=little --cpu=ARM926EJ-S -e         #
#                    --fpu=None --dlib_config "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Ful #
#                    l.h" -I C:\DUII\TargetHW\Application\SEGGERDEMO\ -I      #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ -I PROFILER\         #
#                    --cpu_mode arm -Ohs --use_c++_inline                     #
#                    --require_prototypes                                     #
#    List file    =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\List\SL #
#                    IDER_Skin.lst                                            #
#    Object file  =  C:\DUII\TargetHW\Output\AT91SAM9RL64\Debug_SDRAM\Obj\SLI #
#                    DER_Skin.o                                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\SLIDER_Skin.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : SLIDER_Skin.c
     19          Purpose     : Implementation of framewindow widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "SLIDER_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _CopyItemInfo2Rect
     38          */
     39          static void _CopyItemInfo2Rect(WIDGET_ITEM_DRAW_INFO * pItemInfo, GUI_RECT * pRect) {
     40            pRect->x0 = pItemInfo->x0;
     41            pRect->y0 = pItemInfo->y0;
     42            pRect->x1 = pItemInfo->x1;
     43            pRect->y1 = pItemInfo->y1;
     44          }
     45          
     46          /*********************************************************************
     47          *
     48          *       _Paint
     49          */

   \                                 In section .text, align 4, keep-with-next
     50          static void _Paint(SLIDER_Handle hObj) {
   \                     _Paint:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   4CD04DE2           SUB      SP,SP,#+76
   \   00000008   0040A0E1           MOV      R4,R0
     51            SLIDER_Obj * pObj;
     52            WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;
     53            WIDGET_ITEM_DRAW_INFO ItemInfo;
     54            GUI_RECT RectClient, RectClip;
     55            SLIDER_SKINFLEX_INFO SkinInfo;
     56            int Min, Max, v, Range;
     57            int s0, s1, HasFocus;
     58            
     59            //
     60            // Get properties
     61            //
     62            pObj = SLIDER_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
     63            pfDrawSkin   = pObj->Props.SkinPrivate.pfDrawSkin;
     64            Min = pObj->Min;
     65            Max = pObj->Max;
     66            v = pObj->v;
     67            SkinInfo.NumTicks = pObj->NumTicks;
   \   00000010   5C2090E5           LDR      R2,[R0, #+92]
   \   00000014   445090E5           LDR      R5,[R0, #+68]
   \   00000018   4C6090E5           LDR      R6,[R0, #+76]
   \   0000001C   508090E5           LDR      R8,[R0, #+80]
   \   00000020   547090E5           LDR      R7,[R0, #+84]
   \   00000024   14208DE5           STR      R2,[SP, #+20]
     68            SkinInfo.Width = pObj->Width;
   \   00000028   F016D0E1           LDRSH    R1,[R0, #+96]
     69            SkinInfo.IsPressed = (pObj->Widget.State & SLIDER_STATE_PRESSED) ? 1 : 0;
     70            SkinInfo.IsVertical = (pObj->Widget.State & WIDGET_STATE_VERTICAL) ? 1 : 0;
   \   0000002C   0120A0E3           MOV      R2,#+1
   \   00000030   10108DE5           STR      R1,[SP, #+16]
   \   00000034   B203D0E1           LDRH     R0,[R0, #+50]
   \   00000038   2014A0E1           LSR      R1,R0,#+8
   \   0000003C   011001E2           AND      R1,R1,#0x1
   \   00000040   1C108DE5           STR      R1,[SP, #+28]
   \   00000044   FF1000E2           AND      R1,R0,#0xFF
   \   00000048   A11102E0           AND      R1,R2,R1, LSR #+3
     71            HasFocus = pObj->Widget.State & WIDGET_STATE_FOCUS;
   \   0000004C   010000E2           AND      R0,R0,#0x1
   \   00000050   20108DE5           STR      R1,[SP, #+32]
   \   00000054   44008DE5           STR      R0,[SP, #+68]
     72            GUI_UNLOCK_H(pObj);
   \   00000058   ........           BL       GUI_ALLOC_UnlockH
     73            WM_GetClientRectEx(hObj, &RectClient);
   \   0000005C   08108DE2           ADD      R1,SP,#+8
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WM_GetClientRectEx
     74            Range = (Max - Min) ? Max - Min : 1;
   \   00000068   061058E0           SUBS     R1,R8,R6
     75            SkinInfo.Size = SkinInfo.IsVertical ? 
     76                            RectClient.y1 - RectClient.y0 + 1 - SkinInfo.Width - 2 : 
     77                            RectClient.x1 - RectClient.x0 + 1 - SkinInfo.Width - 2;
   \   0000006C   20009DE5           LDR      R0,[SP, #+32]
   \   00000070   0110A003           MOVEQ    R1,#+1
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   FE20DD11           LDRSHNE  R2,[SP, #+14]
   \   0000007C   FA30DD11           LDRSHNE  R3,[SP, #+10]
   \   00000080   FC20DD01           LDRSHEQ  R2,[SP, #+12]
   \   00000084   F830DD01           LDRSHEQ  R3,[SP, #+8]
   \   00000088   032042E0           SUB      R2,R2,R3
   \   0000008C   10309DE5           LDR      R3,[SP, #+16]
   \   00000090   012082E2           ADD      R2,R2,#+1
   \   00000094   032042E0           SUB      R2,R2,R3
   \   00000098   022042E2           SUB      R2,R2,#+2
   \   0000009C   18208DE5           STR      R2,[SP, #+24]
     78            if (SkinInfo.NumTicks < 0) {
   \   000000A0   14209DE5           LDR      R2,[SP, #+20]
   \   000000A4   000052E3           CMP      R2,#+0
   \   000000A8   0900005A           BPL      ??_Paint_0
     79              SkinInfo.NumTicks = Range + 1;
     80              if (SkinInfo.NumTicks > (SkinInfo.Size / 5)) {
   \   000000AC   18309DE5           LDR      R3,[SP, #+24]
   \   000000B0   ........           LDR      R12,??DataTable2  ;; 0x66666667
   \   000000B4   012081E2           ADD      R2,R1,#+1
   \   000000B8   93ECCCE0           SMULL    LR,R12,R3,R12
   \   000000BC   14208DE5           STR      R2,[SP, #+20]
   \   000000C0   CC30B0E1           ASRS     R3,R12,#+1
   \   000000C4   01308342           ADDMI    R3,R3,#+1
   \   000000C8   020053E1           CMP      R3,R2
     81                SkinInfo.NumTicks = 11;
   \   000000CC   0B30A0B3           MOVLT    R3,#+11
   \   000000D0   14308DB5           STRLT    R3,[SP, #+20]
     82              }
     83            }
     84            //
     85            // Calculate slider position
     86            //
     87            if (SkinInfo.IsVertical) {
   \                     ??_Paint_0:
   \   000000D4   FCB0DDE1           LDRSH    R11,[SP, #+12]
   \   000000D8   FAA0DDE1           LDRSH    R10,[SP, #+10]
   \   000000DC   FE90DDE1           LDRSH    R9,[SP, #+14]
   \   000000E0   F880DDE1           LDRSH    R8,[SP, #+8]
   \   000000E4   062047E0           SUB      R2,R7,R6
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   0700000A           BEQ      ??_Paint_1
     88              s0 = RectClient.y0 + 1 + ((RectClient.y1 - RectClient.y0 + 1) - 2 - SkinInfo.Width) * (v - Min) / Range;
   \   000000F0   0A0049E0           SUB      R0,R9,R10
   \   000000F4   10309DE5           LDR      R3,[SP, #+16]
   \   000000F8   010040E2           SUB      R0,R0,#+1
   \   000000FC   030040E0           SUB      R0,R0,R3
   \   00000100   920000E0           MUL      R0,R2,R0
   \   00000104   ........           BL       __aeabi_idiv
   \   00000108   0A0080E0           ADD      R0,R0,R10
   \   0000010C   060000EA           B        ??_Paint_2
     89            } else {
     90              s0 = RectClient.x0 + 1 + ((RectClient.x1 - RectClient.x0 + 1) - 2 - SkinInfo.Width) * (v - Min) / Range;
   \                     ??_Paint_1:
   \   00000110   08004BE0           SUB      R0,R11,R8
   \   00000114   10309DE5           LDR      R3,[SP, #+16]
   \   00000118   010040E2           SUB      R0,R0,#+1
   \   0000011C   030040E0           SUB      R0,R0,R3
   \   00000120   920000E0           MUL      R0,R2,R0
   \   00000124   ........           BL       __aeabi_idiv
   \   00000128   080080E0           ADD      R0,R0,R8
   \                     ??_Paint_2:
   \   0000012C   016080E2           ADD      R6,R0,#+1
     91            }
     92            s1 = s0 + SkinInfo.Width - 1;
   \   00000130   10009DE5           LDR      R0,[SP, #+16]
     93            //
     94            // Initialize ItemInfo structure
     95            //
     96            ItemInfo.hWin = hObj;
     97            ItemInfo.p    = &SkinInfo;
   \   00000134   10108DE2           ADD      R1,SP,#+16
   \   00000138   060080E0           ADD      R0,R0,R6
   \   0000013C   40108DE5           STR      R1,[SP, #+64]
   \   00000140   017040E2           SUB      R7,R0,#+1
     98            //
     99            // Draw shaft (complete)
    100            //
    101            ItemInfo.Cmd = WIDGET_ITEM_DRAW_SHAFT;
   \   00000144   0D10A0E3           MOV      R1,#+13
   \   00000148   28108DE5           STR      R1,[SP, #+40]
    102            ItemInfo.y0 = RectClient.y0 + 1;
   \   0000014C   01008AE2           ADD      R0,R10,#+1
   \   00000150   34008DE5           STR      R0,[SP, #+52]
    103            ItemInfo.y1 = RectClient.y1 - 1;
   \   00000154   011049E2           SUB      R1,R9,#+1
    104            ItemInfo.x0 = RectClient.x0 + 1;
   \   00000158   012088E2           ADD      R2,R8,#+1
    105            ItemInfo.x1 = RectClient.x1 - 1;
   \   0000015C   01304BE2           SUB      R3,R11,#+1
    106            _CopyItemInfo2Rect(&ItemInfo, &RectClip);
   \   00000160   B200CDE1           STRH     R0,[SP, #+2]
   \   00000164   24408DE5           STR      R4,[SP, #+36]
   \   00000168   3C108DE5           STR      R1,[SP, #+60]
   \   0000016C   30208DE5           STR      R2,[SP, #+48]
   \   00000170   38308DE5           STR      R3,[SP, #+56]
   \   00000174   B020CDE1           STRH     R2,[SP, #+0]
   \   00000178   B430CDE1           STRH     R3,[SP, #+4]
   \   0000017C   B610CDE1           STRH     R1,[SP, #+6]
    107            WM_SetUserClipRect(&RectClip);
   \   00000180   0D00A0E1           MOV      R0,SP
   \   00000184   ........           BL       WM_SetUserClipRect
    108            pfDrawSkin(&ItemInfo);
   \   00000188   24008DE2           ADD      R0,SP,#+36
   \   0000018C   35FF2FE1           BLX      R5
    109            WM_SetUserClipRect(NULL);
   \   00000190   0000A0E3           MOV      R0,#+0
   \   00000194   ........           BL       WM_SetUserClipRect
    110            //
    111            // Draw thumb
    112            //
    113            ItemInfo.Cmd = WIDGET_ITEM_DRAW_THUMB;
    114            if (SkinInfo.IsVertical) {
   \   00000198   20009DE5           LDR      R0,[SP, #+32]
   \   0000019C   1110A0E3           MOV      R1,#+17
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   28108DE5           STR      R1,[SP, #+40]
    115              ItemInfo.y0 = s0;
   \   000001A8   34608D15           STRNE    R6,[SP, #+52]
    116              ItemInfo.y1 = s1;
    117            } else {
    118              ItemInfo.x0 = s0;
    119              ItemInfo.x1 = s1;
    120            }
    121            _CopyItemInfo2Rect(&ItemInfo, &RectClip);
   \   000001AC   34109DE5           LDR      R1,[SP, #+52]
   \   000001B0   38708D05           STREQ    R7,[SP, #+56]
   \   000001B4   B210CDE1           STRH     R1,[SP, #+2]
   \   000001B8   38109DE5           LDR      R1,[SP, #+56]
   \   000001BC   30608D05           STREQ    R6,[SP, #+48]
   \   000001C0   3C708D15           STRNE    R7,[SP, #+60]
   \   000001C4   30009DE5           LDR      R0,[SP, #+48]
   \   000001C8   B410CDE1           STRH     R1,[SP, #+4]
   \   000001CC   3C109DE5           LDR      R1,[SP, #+60]
   \   000001D0   B000CDE1           STRH     R0,[SP, #+0]
   \   000001D4   B610CDE1           STRH     R1,[SP, #+6]
    122            WM_SetUserClipRect(&RectClip);
   \   000001D8   0D00A0E1           MOV      R0,SP
   \   000001DC   ........           BL       WM_SetUserClipRect
    123            pfDrawSkin(&ItemInfo);
   \   000001E0   24008DE2           ADD      R0,SP,#+36
   \   000001E4   35FF2FE1           BLX      R5
    124            WM_SetUserClipRect(NULL);
   \   000001E8   0000A0E3           MOV      R0,#+0
   \   000001EC   ........           BL       WM_SetUserClipRect
    125            //
    126            // Draw ticks
    127            //
    128            ItemInfo.Cmd = WIDGET_ITEM_DRAW_TICKS;
   \   000001F0   1210A0E3           MOV      R1,#+18
   \   000001F4   28108DE5           STR      R1,[SP, #+40]
    129            ItemInfo.y0 = RectClient.y0 + 1;
   \   000001F8   FA00DDE1           LDRSH    R0,[SP, #+10]
    130            ItemInfo.y1 = RectClient.y1 - 1;
   \   000001FC   FE10DDE1           LDRSH    R1,[SP, #+14]
    131            ItemInfo.x0 = RectClient.x0 + 1;
   \   00000200   F820DDE1           LDRSH    R2,[SP, #+8]
    132            ItemInfo.x1 = RectClient.x1 - 1;
   \   00000204   FC30DDE1           LDRSH    R3,[SP, #+12]
   \   00000208   010080E2           ADD      R0,R0,#+1
   \   0000020C   34008DE5           STR      R0,[SP, #+52]
   \   00000210   011041E2           SUB      R1,R1,#+1
   \   00000214   012082E2           ADD      R2,R2,#+1
   \   00000218   013043E2           SUB      R3,R3,#+1
    133            _CopyItemInfo2Rect(&ItemInfo, &RectClip);
   \   0000021C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000220   3C108DE5           STR      R1,[SP, #+60]
   \   00000224   30208DE5           STR      R2,[SP, #+48]
   \   00000228   38308DE5           STR      R3,[SP, #+56]
   \   0000022C   B020CDE1           STRH     R2,[SP, #+0]
   \   00000230   B430CDE1           STRH     R3,[SP, #+4]
   \   00000234   B610CDE1           STRH     R1,[SP, #+6]
    134            WM_SetUserClipRect(&RectClip);
   \   00000238   0D00A0E1           MOV      R0,SP
   \   0000023C   ........           BL       WM_SetUserClipRect
    135            pfDrawSkin(&ItemInfo);
   \   00000240   24008DE2           ADD      R0,SP,#+36
   \   00000244   35FF2FE1           BLX      R5
    136            WM_SetUserClipRect(NULL);
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   ........           BL       WM_SetUserClipRect
    137            //
    138            // Draw focus
    139            //
    140            if (HasFocus) {
   \   00000250   44009DE5           LDR      R0,[SP, #+68]
   \   00000254   000050E3           CMP      R0,#+0
   \   00000258   1300000A           BEQ      ??_Paint_3
    141              ItemInfo.Cmd = WIDGET_ITEM_DRAW_FOCUS;
   \   0000025C   0810A0E3           MOV      R1,#+8
   \   00000260   28108DE5           STR      R1,[SP, #+40]
    142              ItemInfo.y0 = RectClient.y0;
   \   00000264   FA00DDE1           LDRSH    R0,[SP, #+10]
    143              ItemInfo.y1 = RectClient.y1;
   \   00000268   FE10DDE1           LDRSH    R1,[SP, #+14]
    144              ItemInfo.x0 = RectClient.x0;
   \   0000026C   F820DDE1           LDRSH    R2,[SP, #+8]
    145              ItemInfo.x1 = RectClient.x1;
   \   00000270   FC30DDE1           LDRSH    R3,[SP, #+12]
   \   00000274   34008DE5           STR      R0,[SP, #+52]
    146              _CopyItemInfo2Rect(&ItemInfo, &RectClip);
   \   00000278   B200CDE1           STRH     R0,[SP, #+2]
   \   0000027C   3C108DE5           STR      R1,[SP, #+60]
   \   00000280   30208DE5           STR      R2,[SP, #+48]
   \   00000284   38308DE5           STR      R3,[SP, #+56]
   \   00000288   B020CDE1           STRH     R2,[SP, #+0]
   \   0000028C   B430CDE1           STRH     R3,[SP, #+4]
   \   00000290   B610CDE1           STRH     R1,[SP, #+6]
    147              WM_SetUserClipRect(&RectClip);
   \   00000294   0D00A0E1           MOV      R0,SP
   \   00000298   ........           BL       WM_SetUserClipRect
    148              pfDrawSkin(&ItemInfo);
   \   0000029C   24008DE2           ADD      R0,SP,#+36
   \   000002A0   35FF2FE1           BLX      R5
    149              WM_SetUserClipRect(NULL);
   \   000002A4   0000A0E3           MOV      R0,#+0
   \   000002A8   ........           BL       WM_SetUserClipRect
    150            }
    151          }
   \                     ??_Paint_3:
   \   000002AC   4CD08DE2           ADD      SP,SP,#+76       ;; stack cleaning
   \   000002B0   F08FBDE8           POP      {R4-R11,PC}      ;; return
    152          
    153          /*********************************************************************
    154          *
    155          *       _Create
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          static void _Create(SLIDER_Handle hObj) {
   \                     _Create:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
    158            SLIDER_Obj * pObj;
    159            WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;
    160            WIDGET_ITEM_DRAW_INFO ItemInfo;
    161          
    162            //
    163            // Get properties
    164            //
    165            pObj = SLIDER_LOCK_H(hObj);
    166            pfDrawSkin   = pObj->Props.SkinPrivate.pfDrawSkin;
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   445090E5           LDR      R5,[R0, #+68]
    167            GUI_UNLOCK_H(pObj);
   \   00000014   ........           BL       GUI_ALLOC_UnlockH
    168            //
    169            // Create
    170            //
    171            ItemInfo.Cmd = WIDGET_ITEM_CREATE;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   04008DE5           STR      R0,[SP, #+4]
    172            ItemInfo.hWin = hObj;
    173            ItemInfo.p = NULL;
   \   00000020   1C008DE5           STR      R0,[SP, #+28]
   \   00000024   00408DE5           STR      R4,[SP, #+0]
    174            pfDrawSkin(&ItemInfo);
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   35FF2FE1           BLX      R5
    175          }
   \   00000030   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    176          
    177          /*********************************************************************
    178          *
    179          *        Private data
    180          *
    181          **********************************************************************
    182          */
    183          /*********************************************************************
    184          *
    185          *       _Skin
    186          */

   \                                 In section .data, align 4
    187          static WIDGET_SKIN _Skin = {
   \                     _Skin:
   \   00000000   ............       DC32 _Paint, _Create, SLIDER__DefaultProps + 10H
   \              ............
    188            _Paint,
    189            _Create,
    190            &SLIDER__DefaultProps.SkinPrivate,
    191          };
    192          
    193          /*********************************************************************
    194          *
    195          *        Public code
    196          *
    197          **********************************************************************
    198          */
    199          /*********************************************************************
    200          *
    201          *       SLIDER_SetSkin
    202          */

   \                                 In section .text, align 4, keep-with-next
    203          void SLIDER_SetSkin(SLIDER_Handle hObj, WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
   \                     SLIDER_SetSkin:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    204            SLIDER_Obj * pObj;
    205          
    206            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    207            pObj = SLIDER_LOCK_H(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    208            //
    209            // Enable skinning
    210            //
    211            pObj->pWidgetSkin = &_Skin;
   \   0000001C   ........           LDR      R1,??DataTable2_1
   \   00000020   481080E5           STR      R1,[R0, #+72]
    212            //
    213            // Set private callback function
    214            //
    215            pObj->Props.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   00000024   445080E5           STR      R5,[R0, #+68]
    216            GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    217            //
    218            // Invalidate widget
    219            //
    220            WM_SetHasTrans(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_SetHasTrans
    221            WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    222            WM_UNLOCK();
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   ........           B        GUI_Unlock       ;; tailcall
    223          }
    224          
    225          /*********************************************************************
    226          *
    227          *       SLIDER_SetDefaultSkin
    228          */

   \                                 In section .text, align 4, keep-with-next
    229          void SLIDER_SetDefaultSkin(WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
    230            SLIDER__pSkinDefault = &_Skin;
   \                     SLIDER_SetDefaultSkin:
   \   00000000   ........           LDR      R1,??DataTable2_2
   \   00000004   ........           LDR      R2,??DataTable2_1
   \   00000008   002081E5           STR      R2,[R1, #+0]
    231            SLIDER__DefaultProps.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   0000000C   ........           LDR      R1,??DataTable2_3
   \   00000010   100081E5           STR      R0,[R1, #+16]
    232          }
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     _Skin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   ........           DC32     SLIDER__pSkinDefault

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   ........           DC32     SLIDER__DefaultProps
    233          
    234          #else
    235            void SLIDER_Skin_C(void);
    236            void SLIDER_Skin_C(void) {} /* avoid empty object files */
    237          #endif /* GUI_WINSUPPORT */
    238          
    239          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function              .cstack
     --------              -------
     SLIDER_SetDefaultSkin      0
     SLIDER_SetSkin            16
     _Create                   48
     _Paint                   112


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     _Paint                 692
     _Create                 56
     _Skin                   12
     SLIDER_SetSkin          72
     SLIDER_SetDefaultSkin   24
     ??DataTable2             4
     ??DataTable2_1           4
     ??DataTable2_2           4
     ??DataTable2_3           4

 
  12 bytes in section .data
 860 bytes in section .text
 
 860 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
