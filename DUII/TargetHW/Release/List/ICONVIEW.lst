###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:01 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\ICONVIEW.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\ICONVIEW.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\ICONVIEW.lst               #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\ICONVIEW.o                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\ICONVIEW.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : ICONVIEW.c
     19          Purpose     : Implementation of listbox widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "ICONVIEW_Private.h"
     26          #include "GUI_Private.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *       Private config defaults
     33          *
     34          **********************************************************************
     35          */
     36          /* Define default fonts */
     37          #ifndef   ICONVIEW_FONT_DEFAULT
     38            #if   WIDGET_USE_SCHEME_SMALL
     39              #define ICONVIEW_FONT_DEFAULT &GUI_Font13_1
     40            #elif WIDGET_USE_SCHEME_MEDIUM
     41              #define ICONVIEW_FONT_DEFAULT &GUI_Font16_1
     42            #elif WIDGET_USE_SCHEME_LARGE
     43              #define ICONVIEW_FONT_DEFAULT &GUI_Font24_1
     44            #endif
     45          #endif
     46          
     47          /* Define colors */
     48          #ifndef   ICONVIEW_BKCOLOR0_DEFAULT
     49            #define ICONVIEW_BKCOLOR0_DEFAULT GUI_WHITE               /* Not selected */
     50          #endif
     51          
     52          #ifndef   ICONVIEW_BKCOLOR1_DEFAULT
     53            #define ICONVIEW_BKCOLOR1_DEFAULT GUI_BLUE                /* Selected */
     54          #endif
     55          
     56          #ifndef   ICONVIEW_BKCOLOR2_DEFAULT
     57            #define ICONVIEW_BKCOLOR2_DEFAULT 0xC0C0C0                /* Disabled */
     58          #endif
     59          
     60          #ifndef   ICONVIEW_TEXTCOLOR0_DEFAULT
     61            #define ICONVIEW_TEXTCOLOR0_DEFAULT GUI_WHITE             /* Not selected */
     62          #endif
     63          
     64          #ifndef   ICONVIEW_TEXTCOLOR1_DEFAULT
     65            #define ICONVIEW_TEXTCOLOR1_DEFAULT GUI_WHITE             /* Selected */
     66          #endif
     67          
     68          #ifndef   ICONVIEW_TEXTCOLOR2_DEFAULT
     69            #define ICONVIEW_TEXTCOLOR2_DEFAULT GUI_GRAY              /* Disabled */
     70          #endif
     71          
     72          #ifndef   ICONVIEW_FRAMEX_DEFAULT
     73            #define ICONVIEW_FRAMEX_DEFAULT 5
     74          #endif
     75          
     76          #ifndef   ICONVIEW_FRAMEY_DEFAULT
     77            #define ICONVIEW_FRAMEY_DEFAULT 5
     78          #endif
     79          
     80          #ifndef   ICONVIEW_SPACEX_DEFAULT
     81            #define ICONVIEW_SPACEX_DEFAULT 5
     82          #endif
     83          
     84          #ifndef   ICONVIEW_SPACEY_DEFAULT
     85            #define ICONVIEW_SPACEY_DEFAULT 5
     86          #endif
     87          
     88          #ifndef   ICONVIEW_ALIGN_DEFAULT
     89            #define ICONVIEW_ALIGN_DEFAULT GUI_TA_HCENTER | GUI_TA_BOTTOM
     90          #endif
     91          
     92          /*********************************************************************
     93          *
     94          *       Static data
     95          *
     96          **********************************************************************
     97          */

   \                                 In section .data, align 4
     98          ICONVIEW_PROPS ICONVIEW__DefaultProps = {
   \                     ICONVIEW__DefaultProps:
   \   00000000   ........FFFF       DC32 GUI_Font13_1, 16777215, 4278190080, 12632256, 16777215, 16777215
   \              FF00000000FF
   \              C0C0C000FFFF
   \              FF00FFFFFF00
   \   00000018   808080000500       DC32 8421504, 5, 5, 5, 5, 6
   \              000005000000
   \              050000000500
   \              000006000000
     99            ICONVIEW_FONT_DEFAULT,
    100            {
    101              ICONVIEW_BKCOLOR0_DEFAULT,
    102              ICONVIEW_BKCOLOR1_DEFAULT,
    103              ICONVIEW_BKCOLOR2_DEFAULT,
    104            },
    105            {
    106              ICONVIEW_TEXTCOLOR0_DEFAULT,
    107              ICONVIEW_TEXTCOLOR1_DEFAULT,
    108              ICONVIEW_TEXTCOLOR2_DEFAULT,
    109            },
    110            ICONVIEW_FRAMEX_DEFAULT,
    111            ICONVIEW_FRAMEY_DEFAULT,
    112            ICONVIEW_SPACEX_DEFAULT,
    113            ICONVIEW_SPACEY_DEFAULT,
    114            ICONVIEW_ALIGN_DEFAULT,
    115          };
    116          
    117          /*********************************************************************
    118          *
    119          *       Static routines
    120          *
    121          **********************************************************************
    122          */
    123          /*********************************************************************
    124          *
    125          *       ICONVIEW_LockH
    126          */
    127          #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
    128          ICONVIEW_OBJ * ICONVIEW_LockH(ICONVIEW_Handle h) {
    129            ICONVIEW_OBJ * p = (ICONVIEW_OBJ *)GUI_LOCK_H(h);
    130            if (p) {
    131              if (p->DebugId != ICONVIEW_ID) {
    132                GUI_DEBUG_ERROROUT("ICONVIEW.c: Wrong handle type or Object not init'ed");
    133                return 0;
    134              }
    135            }
    136            return p;
    137          }
    138          #endif
    139          
    140          /*********************************************************************
    141          *
    142          *       _LightRect
    143          */
    144          static void _LightRect(GUI_RECT * pRectItem, GUI_COLOR AlphaColor) {
    145            GUI_COLOR Color;
    146            U8 Alpha;
    147            Color = AlphaColor & 0x00FFFFFF;
    148            Alpha = AlphaColor >> 24;
    149            GUI_SetColor(Color);
    150            GUI_SetAlpha(Alpha);
    151            GUI_FillRectEx(pRectItem);
    152            GUI_SetAlpha(0);
    153          }
    154          
    155          /*********************************************************************
    156          *
    157          *       _GetNumItemsPerLine
    158          */
    159          static int _GetNumItemsPerLine(ICONVIEW_Handle hObj) {
    160            ICONVIEW_OBJ * pObj;
    161            GUI_RECT RectInside;
    162            int ItemsPerLine;
    163            WM_GetInsideRectExScrollbar(hObj, &RectInside);
    164            pObj = ICONVIEW_LOCK_H(hObj);
    165            ItemsPerLine = (RectInside.x1 - RectInside.x0 + 1 + pObj->Props.SpaceX) / (pObj->xSizeItems + pObj->Props.SpaceX);
    166            GUI_UNLOCK_H(pObj);
    167            return ItemsPerLine;
    168          }
    169          
    170          /*********************************************************************
    171          *
    172          *       _GetNumLines
    173          */
    174          static int _GetNumLines(ICONVIEW_Handle hObj, ICONVIEW_OBJ * pObj) {
    175            GUI_RECT RectInside;
    176            int ItemsPerLine;
    177            int NumLines;
    178            int NumItems;
    179            WM_GetInsideRectExScrollbar(hObj, &RectInside);
    180            ItemsPerLine = _GetNumItemsPerLine(hObj);
    181            NumItems = GUI_ARRAY_GetNumItems(pObj->ItemArray);
    182            NumLines = (NumItems + ItemsPerLine - 1) / ItemsPerLine;
    183            return NumLines;
    184          }
    185          
    186          /*********************************************************************
    187          *
    188          *       _GetNumVisLines
    189          */
    190          static int _GetNumVisLines(ICONVIEW_Handle hObj, ICONVIEW_OBJ * pObj) {
    191            GUI_RECT RectInside;
    192            int NumVisLines;
    193            WM_GetInsideRectExScrollbar(hObj, &RectInside);
    194            NumVisLines = (RectInside.y1 - RectInside.y0 + 1 + pObj->Props.SpaceY) / (pObj->ySizeItems + pObj->Props.SpaceY);
    195            return NumVisLines;
    196          }
    197          
    198          /*********************************************************************
    199          *
    200          *       _GetRelRectFromIndex
    201          */

   \                                 In section .text, align 4, keep-with-next
    202          static void _GetRelRectFromIndex(ICONVIEW_Handle hObj, GUI_RECT * pRect, int Index) {
   \                     _GetRelRectFromIndex:
   \   00000000   70432DE9           PUSH     {R4-R6,R8,R9,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0080A0E1           MOV      R8,R0
   \   00000010   0250A0E1           MOV      R5,R2
    203            ICONVIEW_OBJ * pObj;
    204            GUI_RECT RectInside;
    205            int ItemsPerLine;
    206            int Row, Col;
    207            WM_GetInsideRectExScrollbar(hObj, &RectInside);
   \   00000014   08108DE2           ADD      R1,SP,#+8
   \   00000018   ........           BL       WM_GetInsideRectExScrollbar
    208            ItemsPerLine = _GetNumItemsPerLine(hObj);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   0800A0E1           MOV      R0,R8
   \   00000024   ........           BL       WM_GetInsideRectExScrollbar
   \   00000028   0800A0E1           MOV      R0,R8
   \   0000002C   ........           BL       GUI_ALLOC_LockH
   \   00000030   0010A0E1           MOV      R1,R0
   \   00000034   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000038   F030DDE1           LDRSH    R3,[SP, #+0]
   \   0000003C   702091E5           LDR      R2,[R1, #+112]
   \   00000040   801091E5           LDR      R1,[R1, #+128]
   \   00000044   030040E0           SUB      R0,R0,R3
   \   00000048   000082E0           ADD      R0,R2,R0
   \   0000004C   010080E2           ADD      R0,R0,#+1
   \   00000050   011082E0           ADD      R1,R2,R1
   \   00000054   ........           BL       __aeabi_idiv
   \   00000058   0060A0E1           MOV      R6,R0
   \   0000005C   ........           BL       GUI_ALLOC_UnlockH
    209            pObj = ICONVIEW_LOCK_H(hObj);
   \   00000060   0800A0E1           MOV      R0,R8
   \   00000064   ........           BL       GUI_ALLOC_LockH
   \   00000068   0080A0E1           MOV      R8,R0
    210            Row = Index / ItemsPerLine - pObj->ScrollStateV.v;
   \   0000006C   0500A0E1           MOV      R0,R5
   \   00000070   0610A0E1           MOV      R1,R6
   \   00000074   ........           BL       __aeabi_idiv
   \   00000078   389098E5           LDR      R9,[R8, #+56]
    211            Col = Index - (Row + pObj->ScrollStateV.v) * ItemsPerLine;
    212            pRect->x0 = pObj->Props.FrameX + Col * (pObj->xSizeItems + pObj->Props.SpaceX);
   \   0000007C   801098E5           LDR      R1,[R8, #+128]
   \   00000080   090040E0           SUB      R0,R0,R9
   \   00000084   003089E0           ADD      R3,R9,R0
   \   00000088   960303E0           MUL      R3,R6,R3
   \   0000008C   70C098E5           LDR      R12,[R8, #+112]
   \   00000090   682098E5           LDR      R2,[R8, #+104]
   \   00000094   033045E0           SUB      R3,R5,R3
   \   00000098   01C08CE0           ADD      R12,R12,R1
   \   0000009C   9C2322E0           MLA      R2,R12,R3,R2
   \   000000A0   B020C4E1           STRH     R2,[R4, #+0]
    213            pRect->y0 = pObj->Props.FrameY + Row * (pObj->ySizeItems + pObj->Props.SpaceY);
   \   000000A4   842098E5           LDR      R2,[R8, #+132]
   \   000000A8   74C098E5           LDR      R12,[R8, #+116]
   \   000000AC   6C3098E5           LDR      R3,[R8, #+108]
   \   000000B0   02C08CE0           ADD      R12,R12,R2
   \   000000B4   9C3020E0           MLA      R0,R12,R0,R3
   \   000000B8   B200C4E1           STRH     R0,[R4, #+2]
    214            pRect->x1 = pRect->x0 + pObj->xSizeItems - 1;
   \   000000BC   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000000C0   000081E0           ADD      R0,R1,R0
   \   000000C4   010040E2           SUB      R0,R0,#+1
   \   000000C8   B400C4E1           STRH     R0,[R4, #+4]
    215            pRect->y1 = pRect->y0 + pObj->ySizeItems - 1;
   \   000000CC   F200D4E1           LDRSH    R0,[R4, #+2]
   \   000000D0   000082E0           ADD      R0,R2,R0
   \   000000D4   010040E2           SUB      R0,R0,#+1
   \   000000D8   B600C4E1           STRH     R0,[R4, #+6]
    216            GUI_UNLOCK_H(pObj);
   \   000000DC   ........           BL       GUI_ALLOC_UnlockH
    217          }
   \   000000E0   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000000E4   7083BDE8           POP      {R4-R6,R8,R9,PC}  ;; return
    218          
    219          /*********************************************************************
    220          *
    221          *       _OnPaint
    222          */

   \                                 In section .text, align 4, keep-with-next
    223          static void _OnPaint(ICONVIEW_Handle hObj, WM_MESSAGE * pMsg) {
   \                     _OnPaint:
   \   00000000   F24F2DE9           PUSH     {R1,R4-R11,LR}
   \   00000004   30D04DE2           SUB      SP,SP,#+48
   \   00000008   0040A0E1           MOV      R4,R0
    224            ICONVIEW_OBJ * pObj;
    225            int NumItems, ColorIndex, ItemIndex, ItemsPerLine;
    226            GUI_RECT RectInside, RectItem, ClipRect, RectWin;
    227            ICONVIEW_ITEM * pItem;
    228            const void * pData;
    229            tDrawImage * pfDrawImage;
    230            int Sel, i;
    231            GUI_COLOR BkColor_BK, BkColor_SEL;
    232            GUI_COLOR aTextColor[3];
    233            GUI_ARRAY ItemArray;
    234            const GUI_FONT GUI_UNI_PTR * pFont;
    235            WM_SCROLL_STATE ScrollStateV;
    236          
    237            /* Get object properties */
    238            pObj = ICONVIEW_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
    239            Sel          = pObj->Sel;
   \   00000010   881090E5           LDR      R1,[R0, #+136]
    240            BkColor_BK   = pObj->Props.aBkColor[ICONVIEW_CI_BK];
    241            BkColor_SEL  = pObj->Props.aBkColor[ICONVIEW_CI_SEL];
    242            ItemArray    = pObj->ItemArray;
    243            RectWin      = pObj->Widget.Win.Rect;
    244            pFont        = pObj->Props.pFont;
    245            ScrollStateV = pObj->ScrollStateV;
    246            for (i = 0; i < GUI_COUNTOF(pObj->Props.aTextColor); i++) {
   \   00000014   0320A0E3           MOV      R2,#+3
   \   00000018   10108DE5           STR      R1,[SP, #+16]
   \   0000001C   507090E5           LDR      R7,[R0, #+80]
   \   00000020   545090E5           LDR      R5,[R0, #+84]
   \   00000024   7C6090E5           LDR      R6,[R0, #+124]
   \   00000028   F0A0D0E1           LDRSH    R10,[R0, #+0]
   \   0000002C   F2B0D0E1           LDRSH    R11,[R0, #+2]
   \   00000030   4C8090E5           LDR      R8,[R0, #+76]
   \   00000034   389090E5           LDR      R9,[R0, #+56]
   \   00000038   24108DE2           ADD      R1,SP,#+36
    247              aTextColor[i] = pObj->Props.aTextColor[i];
   \                     ??_OnPaint_0:
   \   0000003C   5C3090E5           LDR      R3,[R0, #+92]
    248            }
   \   00000040   040080E2           ADD      R0,R0,#+4
   \   00000044   043081E4           STR      R3,[R1], #+4
   \   00000048   012052E2           SUBS     R2,R2,#+1
   \   0000004C   FAFFFF1A           BNE      ??_OnPaint_0
    249            GUI_UNLOCK_H(pObj);
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
    250          
    251          
    252            ClipRect = *(const GUI_RECT*)pMsg->Data.p;
   \   00000054   30109DE5           LDR      R1,[SP, #+48]
   \   00000058   08008DE2           ADD      R0,SP,#+8
   \   0000005C   0C1091E5           LDR      R1,[R1, #+12]
   \   00000060   0820A0E3           MOV      R2,#+8
   \   00000064   ........           BL       __aeabi_memcpy
    253            GUI_MoveRect(&ClipRect, -RectWin.x0, -RectWin.y0);
   \   00000068   00206BE2           RSB      R2,R11,#+0
   \   0000006C   00106AE2           RSB      R1,R10,#+0
   \   00000070   08008DE2           ADD      R0,SP,#+8
   \   00000074   ........           BL       GUI_MoveRect
    254            WM_GetInsideRectExScrollbar(hObj, &RectInside);
   \   00000078   1C108DE2           ADD      R1,SP,#+28
   \   0000007C   0400A0E1           MOV      R0,R4
   \   00000080   ........           BL       WM_GetInsideRectExScrollbar
    255            GUI__IntersectRect(&ClipRect, &RectInside);
   \   00000084   1C108DE2           ADD      R1,SP,#+28
   \   00000088   08008DE2           ADD      R0,SP,#+8
   \   0000008C   ........           BL       GUI__IntersectRect
    256            #if WM_SUPPORT_TRANSPARENCY
    257              if (WM_GetHasTrans(hObj) == 0) {
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       WM_GetHasTrans
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0600001A           BNE      ??_OnPaint_1
    258                GUI_SetBkColor(BkColor_BK);
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   ........           BL       GUI_SetBkColor
    259                GUI_ClearRect(ClipRect.x0, ClipRect.y0, ClipRect.x1, ClipRect.y1);
   \   000000A8   FE30DDE1           LDRSH    R3,[SP, #+14]
   \   000000AC   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   000000B0   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   000000B4   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000000B8   ........           BL       GUI_ClearRect
    260              }
    261            #endif
    262          
    263            NumItems = GUI_ARRAY_GetNumItems(ItemArray);
   \                     ??_OnPaint_1:
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   ........           BL       GUI_ARRAY_GetNumItems
   \   000000C4   0070A0E1           MOV      R7,R0
    264            ItemsPerLine = _GetNumItemsPerLine(hObj);
   \   000000C8   14108DE2           ADD      R1,SP,#+20
   \   000000CC   0400A0E1           MOV      R0,R4
   \   000000D0   ........           BL       WM_GetInsideRectExScrollbar
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   ........           BL       GUI_ALLOC_LockH
   \   000000DC   0010A0E1           MOV      R1,R0
   \   000000E0   F801DDE1           LDRSH    R0,[SP, #+24]
   \   000000E4   F431DDE1           LDRSH    R3,[SP, #+20]
   \   000000E8   702091E5           LDR      R2,[R1, #+112]
   \   000000EC   801091E5           LDR      R1,[R1, #+128]
   \   000000F0   030040E0           SUB      R0,R0,R3
   \   000000F4   000082E0           ADD      R0,R2,R0
   \   000000F8   010080E2           ADD      R0,R0,#+1
   \   000000FC   011082E0           ADD      R1,R2,R1
   \   00000100   ........           BL       __aeabi_idiv
   \   00000104   00B0A0E1           MOV      R11,R0
   \   00000108   ........           BL       GUI_ALLOC_UnlockH
    265            GUI_SetTextMode(GUI_TM_TRANS);
   \   0000010C   0200A0E3           MOV      R0,#+2
   \   00000110   ........           BL       GUI_SetTextMode
    266            GUI_SetFont(pFont);
   \   00000114   0800A0E1           MOV      R0,R8
   \   00000118   ........           BL       GUI_SetFont
    267            ItemIndex = ScrollStateV.v * ItemsPerLine;
   \   0000011C   9B090AE0           MUL      R10,R11,R9
   \   00000120   07005AE1           CMP      R10,R7
   \   00000124   570000AA           BGE      ??_OnPaint_2
   \   00000128   0504A0E1           LSL      R0,R5,#+8
   \   0000012C   2084A0E1           LSR      R8,R0,#+8
    268            while (ItemIndex < NumItems) {
    269              _GetRelRectFromIndex(hObj, &RectItem, ItemIndex);
   \                     ??_OnPaint_3:
   \   00000130   0A20A0E1           MOV      R2,R10
   \   00000134   0D10A0E1           MOV      R1,SP
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           BL       _GetRelRectFromIndex
    270              if (RectItem.y0 > ClipRect.y1) {
   \   00000140   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   00000144   F210DDE1           LDRSH    R1,[SP, #+2]
   \   00000148   010050E1           CMP      R0,R1
   \   0000014C   4D0000BA           BLT      ??_OnPaint_2
    271                break;
    272              }
    273              if ((RectItem.y1 >= ClipRect.y0) && 
    274                  (RectItem.y0 <= ClipRect.y1) && 
    275                  (RectItem.x1 >= ClipRect.x0) && 
    276                  (RectItem.x0 <= ClipRect.x1)) {
   \   00000150   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000154   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   00000158   010050E1           CMP      R0,R1
   \   0000015C   460000BA           BLT      ??_OnPaint_4
   \   00000160   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000164   F810DDE1           LDRSH    R1,[SP, #+8]
   \   00000168   010050E1           CMP      R0,R1
   \   0000016C   420000BA           BLT      ??_OnPaint_4
   \   00000170   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000174   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000178   010050E1           CMP      R0,R1
   \   0000017C   3E0000BA           BLT      ??_OnPaint_4
    277                /* Manage background of selected image */
    278                if (WM_GetFocussedWindow() == hObj) {
   \   00000180   ........           BL       WM_GetFocussedWindow
   \   00000184   040050E1           CMP      R0,R4
    279                  if (Sel == ItemIndex) {
   \   00000188   10009D05           LDREQ    R0,[SP, #+16]
   \   0000018C   0A005001           CMPEQ    R0,R10
   \   00000190   1100001A           BNE      ??_OnPaint_5
    280                    if (BkColor_SEL & 0xFF000000) {
   \   00000194   FF0415E3           TST      R5,#0xFF000000
   \   00000198   0800000A           BEQ      ??_OnPaint_6
    281                      _LightRect(&RectItem, BkColor_SEL);
   \   0000019C   0800A0E1           MOV      R0,R8
   \   000001A0   ........           BL       GUI_SetColor
   \   000001A4   250CA0E1           LSR      R0,R5,#+24
   \   000001A8   ........           BL       GUI_SetAlpha
   \   000001AC   0D00A0E1           MOV      R0,SP
   \   000001B0   ........           BL       GUI_FillRectEx
   \   000001B4   0000A0E3           MOV      R0,#+0
   \   000001B8   ........           BL       GUI_SetAlpha
    282                    } else {
   \   000001BC   060000EA           B        ??_OnPaint_5
    283                      GUI_SetColor(BkColor_SEL);
   \                     ??_OnPaint_6:
   \   000001C0   0500A0E1           MOV      R0,R5
   \   000001C4   ........           BL       GUI_SetColor
    284                      GUI_FillRect(RectItem.x0, RectItem.y0, RectItem.x1, RectItem.y1);
   \   000001C8   F630DDE1           LDRSH    R3,[SP, #+6]
   \   000001CC   F420DDE1           LDRSH    R2,[SP, #+4]
   \   000001D0   F210DDE1           LDRSH    R1,[SP, #+2]
   \   000001D4   F000DDE1           LDRSH    R0,[SP, #+0]
   \   000001D8   ........           BL       GUI_FillRect
    285                    }
    286                  }
    287                }
    288                /* Get pointer to item */
    289                pItem = (ICONVIEW_ITEM *)GUI_ARRAY_GetpItemLocked(ItemArray, ItemIndex);
   \                     ??_OnPaint_5:
   \   000001DC   0A10A0E1           MOV      R1,R10
   \   000001E0   0600A0E1           MOV      R0,R6
   \   000001E4   ........           BL       GUI_ARRAY_GetpItemLocked
   \   000001E8   0090A0E1           MOV      R9,R0
    290                /* Draw image */
    291                if (pItem->pfDrawImage) {
   \   000001EC   00B099E5           LDR      R11,[R9, #+0]
   \   000001F0   00005BE3           CMP      R11,#+0
   \   000001F4   0800000A           BEQ      ??_OnPaint_7
    292                  pData = pItem->pData;
   \   000001F8   089099E5           LDR      R9,[R9, #+8]
    293                  pfDrawImage = pItem->pfDrawImage;
    294                  GUI_UNLOCK_H(pItem);
   \   000001FC   ........           BL       GUI_ALLOC_UnlockH
    295                  pfDrawImage(&RectItem, pData);
   \   00000200   0910A0E1           MOV      R1,R9
   \   00000204   0D00A0E1           MOV      R0,SP
   \   00000208   3BFF2FE1           BLX      R11
    296                  pItem = (ICONVIEW_ITEM *)GUI_ARRAY_GetpItemLocked(ItemArray, ItemIndex);
   \   0000020C   0A10A0E1           MOV      R1,R10
   \   00000210   0600A0E1           MOV      R0,R6
   \   00000214   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000218   0090A0E1           MOV      R9,R0
    297                }
    298                /* Set right color for drawing the text */
    299                if (WM__IsEnabled(hObj)) {
   \                     ??_OnPaint_7:
   \   0000021C   0400A0E1           MOV      R0,R4
   \   00000220   ........           BL       WM__IsEnabled
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   0400000A           BEQ      ??_OnPaint_8
    300                  if (Sel == ItemIndex) {
   \   0000022C   10009DE5           LDR      R0,[SP, #+16]
   \   00000230   0A0050E1           CMP      R0,R10
    301                    ColorIndex = ICONVIEW_CI_SEL;
   \   00000234   0100A003           MOVEQ    R0,#+1
   \   00000238   0000A013           MOVNE    R0,#+0
   \   0000023C   000000EA           B        ??_OnPaint_9
    302                  } else {
    303                    ColorIndex = ICONVIEW_CI_UNSEL;
    304                  }
    305                } else {
    306                  ColorIndex = ICONVIEW_CI_DISABLED;
   \                     ??_OnPaint_8:
   \   00000240   0200A0E3           MOV      R0,#+2
    307                }
    308                GUI_SetColor(aTextColor[ColorIndex]);
   \                     ??_OnPaint_9:
   \   00000244   24108DE2           ADD      R1,SP,#+36
   \   00000248   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   0000024C   ........           BL       GUI_SetColor
    309                /* Draw image text */
    310                if (pItem->pfDrawText) {
   \   00000250   040099E5           LDR      R0,[R9, #+4]
   \   00000254   000050E3           CMP      R0,#+0
   \   00000258   0600000A           BEQ      ??_OnPaint_10
    311                  pObj = ICONVIEW_LOCK_H(hObj);
   \   0000025C   0400A0E1           MOV      R0,R4
   \   00000260   ........           BL       GUI_ALLOC_LockH
    312                  pItem->pfDrawText(pObj, &RectItem, pItem->acText);
   \   00000264   102089E2           ADD      R2,R9,#+16
   \   00000268   0D10A0E1           MOV      R1,SP
   \   0000026C   043099E5           LDR      R3,[R9, #+4]
   \   00000270   33FF2FE1           BLX      R3
    313                  GUI_UNLOCK_H(pObj);
   \   00000274   ........           BL       GUI_ALLOC_UnlockH
    314                }
    315                GUI_UNLOCK_H(pItem);
   \                     ??_OnPaint_10:
   \   00000278   ........           BL       GUI_ALLOC_UnlockH
    316              }
    317              ItemIndex++;
   \                     ??_OnPaint_4:
   \   0000027C   01A08AE2           ADD      R10,R10,#+1
    318            }
   \   00000280   07005AE1           CMP      R10,R7
   \   00000284   A9FFFFBA           BLT      ??_OnPaint_3
    319          }
   \                     ??_OnPaint_2:
   \   00000288   34D08DE2           ADD      SP,SP,#+52       ;; stack cleaning
   \   0000028C   F08FBDE8           POP      {R4-R11,PC}      ;; return
    320          
    321          /*********************************************************************
    322          *
    323          *       _ManageAutoScroll
    324          */

   \                                 In section .text, align 4, keep-with-next
    325          static void _ManageAutoScroll(ICONVIEW_Handle hObj) {
   \                     _ManageAutoScroll:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
    326            ICONVIEW_OBJ * pObj;
    327            WM_SCROLL_STATE ScrollStateV;
    328            GUI_RECT Rect;
    329            int IsRequiredV;
    330            int NumLines;
    331            int NumVisLines;
    332            U16 Flags;
    333            static int IsActive;
    334            if (IsActive == 0) {
   \   00000004   ........           LDR      R5,??DataTable2
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   2CD04DE2           SUB      SP,SP,#+44
   \   00000014   0040A0E3           MOV      R4,#+0
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   5000001A           BNE      ??_ManageAutoScroll_0
    335              IsActive = 1;
   \   00000020   0170A0E3           MOV      R7,#+1
   \   00000024   007085E5           STR      R7,[R5, #+0]
    336              pObj = ICONVIEW_LOCK_H(hObj);
   \   00000028   0600A0E1           MOV      R0,R6
   \   0000002C   ........           BL       GUI_ALLOC_LockH
   \   00000030   00A0A0E1           MOV      R10,R0
    337              NumLines    = _GetNumLines(hObj, pObj);
   \   00000034   1C108DE2           ADD      R1,SP,#+28
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   ........           BL       WM_GetInsideRectExScrollbar
   \   00000040   14108DE2           ADD      R1,SP,#+20
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   ........           BL       WM_GetInsideRectExScrollbar
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       GUI_ALLOC_LockH
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   F801DDE1           LDRSH    R0,[SP, #+24]
   \   0000005C   F431DDE1           LDRSH    R3,[SP, #+20]
   \   00000060   701092E5           LDR      R1,[R2, #+112]
   \   00000064   802092E5           LDR      R2,[R2, #+128]
   \   00000068   030040E0           SUB      R0,R0,R3
   \   0000006C   000081E0           ADD      R0,R1,R0
   \   00000070   010080E2           ADD      R0,R0,#+1
   \   00000074   021081E0           ADD      R1,R1,R2
   \   00000078   ........           BL       __aeabi_idiv
   \   0000007C   0080A0E1           MOV      R8,R0
   \   00000080   ........           BL       GUI_ALLOC_UnlockH
   \   00000084   7C009AE5           LDR      R0,[R10, #+124]
   \   00000088   ........           BL       GUI_ARRAY_GetNumItems
   \   0000008C   000088E0           ADD      R0,R8,R0
   \   00000090   010040E2           SUB      R0,R0,#+1
   \   00000094   0810A0E1           MOV      R1,R8
   \   00000098   ........           BL       __aeabi_idiv
   \   0000009C   0080A0E1           MOV      R8,R0
    338              NumVisLines = _GetNumVisLines(hObj, pObj);
   \   000000A0   0C108DE2           ADD      R1,SP,#+12
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   ........           BL       WM_GetInsideRectExScrollbar
   \   000000AC   F201DDE1           LDRSH    R0,[SP, #+18]
   \   000000B0   FE20DDE1           LDRSH    R2,[SP, #+14]
   \   000000B4   74109AE5           LDR      R1,[R10, #+116]
   \   000000B8   020040E0           SUB      R0,R0,R2
   \   000000BC   84209AE5           LDR      R2,[R10, #+132]
   \   000000C0   000081E0           ADD      R0,R1,R0
   \   000000C4   010080E2           ADD      R0,R0,#+1
   \   000000C8   021081E0           ADD      R1,R1,R2
   \   000000CC   ........           BL       __aeabi_idiv
    339              ScrollStateV = pObj->ScrollStateV;
   \   000000D0   34108AE2           ADD      R1,R10,#+52
   \   000000D4   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000000D8   0090A0E1           MOV      R9,R0
   \   000000DC   0D00A0E1           MOV      R0,SP
   \   000000E0   0C10A0E8           STM      R0!,{R2,R3,R12}
    340              Flags = pObj->Flags;
   \   000000E4   BCA8DAE1           LDRH     R10,[R10, #+140]
    341              GUI_UNLOCK_H(pObj);
   \   000000E8   ........           BL       GUI_ALLOC_UnlockH
    342              WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   000000EC   24108DE2           ADD      R1,SP,#+36
   \   000000F0   0600A0E1           MOV      R0,R6
   \   000000F4   ........           BL       WM_GetInsideRectExScrollbar
    343              /*
    344              * Manage vertical scroll bar
    345              */
    346              IsRequiredV = (NumLines > NumVisLines) ? 1 : 0;
   \   000000F8   080059E1           CMP      R9,R8
   \   000000FC   030000AA           BGE      ??_ManageAutoScroll_1
   \   00000100   01B0A0E3           MOV      R11,#+1
    347              if (IsRequiredV) {
    348                ScrollStateV.NumItems = NumLines;
   \   00000104   00808DE5           STR      R8,[SP, #+0]
    349                ScrollStateV.PageSize = NumVisLines;
   \   00000108   08908DE5           STR      R9,[SP, #+8]
   \   0000010C   010000EA           B        ??_ManageAutoScroll_2
    350              } else {
   \                     ??_ManageAutoScroll_1:
   \   00000110   00B0A0E3           MOV      R11,#+0
    351                ScrollStateV.v = 0;
   \   00000114   04408DE5           STR      R4,[SP, #+4]
    352              }
    353              if (Flags & ICONVIEW_SF_AUTOSCROLLBAR_V) {
   \                     ??_ManageAutoScroll_2:
   \   00000118   02001AE3           TST      R10,#0x2
   \   0000011C   1300000A           BEQ      ??_ManageAutoScroll_3
    354                WM_SetScrollbarV(hObj, IsRequiredV);
   \   00000120   0B10A0E1           MOV      R1,R11
   \   00000124   0600A0E1           MOV      R0,R6
   \   00000128   ........           BL       WM_SetScrollbarV
    355              } else {
    356                WM_HWIN hWin;
    357                hWin = WM_GetScrollbarV(hObj);
    358                if (hWin) {
    359                  if (IsRequiredV == 0) {
    360                    ScrollStateV.NumItems = 1;
    361                    ScrollStateV.PageSize = 1;
    362                    IsRequiredV                 = 1;
    363                  }
    364                }
    365              }
    366              /*
    367              * Set scroll state
    368              */
    369              if (IsRequiredV) {
   \                     ??_ManageAutoScroll_4:
   \   0000012C   00005BE3           CMP      R11,#+0
   \   00000130   0400000A           BEQ      ??_ManageAutoScroll_5
    370                WM_HWIN hScroll;
    371                hScroll = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
   \                     ??_ManageAutoScroll_6:
   \   00000134   FE10A0E3           MOV      R1,#+254
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   ........           BL       WM_GetDialogItem
    372                WM_SetScrollState(hScroll, &ScrollStateV);
   \   00000140   0D10A0E1           MOV      R1,SP
   \   00000144   ........           BL       WM_SetScrollState
    373              }
    374              pObj = ICONVIEW_LOCK_H(hObj);
   \                     ??_ManageAutoScroll_5:
   \   00000148   0600A0E1           MOV      R0,R6
   \   0000014C   ........           BL       GUI_ALLOC_LockH
    375              pObj->ScrollStateV = ScrollStateV;
   \   00000150   0D10A0E1           MOV      R1,SP
   \   00000154   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   00000158   340080E2           ADD      R0,R0,#+52
   \   0000015C   0C10A0E8           STM      R0!,{R2,R3,R12}
    376              GUI_UNLOCK_H(pObj);
   \   00000160   ........           BL       GUI_ALLOC_UnlockH
    377            }
    378            IsActive = 0;
   \                     ??_ManageAutoScroll_0:
   \   00000164   004085E5           STR      R4,[R5, #+0]
    379          }
   \   00000168   2CD08DE2           ADD      SP,SP,#+44
   \   0000016C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   \                     ??_ManageAutoScroll_3:
   \   00000170   0600A0E1           MOV      R0,R6
   \   00000174   ........           BL       WM_GetScrollbarV
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   EAFFFF0A           BEQ      ??_ManageAutoScroll_4
   \   00000180   00005BE3           CMP      R11,#+0
   \   00000184   E8FFFF1A           BNE      ??_ManageAutoScroll_4
   \   00000188   00708DE5           STR      R7,[SP, #+0]
   \   0000018C   08708DE5           STR      R7,[SP, #+8]
   \   00000190   E7FFFFEA           B        ??_ManageAutoScroll_6

   \                                 In section .bss, align 4
   \                     ??IsActive:
   \   00000000                      DS8 4
    380          
    381          /*********************************************************************
    382          *
    383          *       _UpdateScrollPos
    384          */

   \                                 In section .text, align 4, keep-with-next
    385          static int _UpdateScrollPos(ICONVIEW_Handle hObj, ICONVIEW_OBJ * pObj) {
   \                     _UpdateScrollPos:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0040A0E1           MOV      R4,R0
    386            WM_HWIN hScroll;
    387            int ItemsPerLine;
    388            int CurrentLine;
    389            int NumVisLines;
    390            ItemsPerLine = _GetNumItemsPerLine(hObj);
   \   00000010   08108DE2           ADD      R1,SP,#+8
   \   00000014   ........           BL       WM_GetInsideRectExScrollbar
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0010A0E1           MOV      R1,R0
   \   00000024   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000028   F830DDE1           LDRSH    R3,[SP, #+8]
   \   0000002C   702091E5           LDR      R2,[R1, #+112]
   \   00000030   801091E5           LDR      R1,[R1, #+128]
   \   00000034   030040E0           SUB      R0,R0,R3
   \   00000038   000082E0           ADD      R0,R2,R0
   \   0000003C   010080E2           ADD      R0,R0,#+1
   \   00000040   011082E0           ADD      R1,R2,R1
   \   00000044   ........           BL       __aeabi_idiv
   \   00000048   0070A0E1           MOV      R7,R0
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
    391            CurrentLine = pObj->Sel / ItemsPerLine;
   \   00000050   880095E5           LDR      R0,[R5, #+136]
   \   00000054   0710A0E1           MOV      R1,R7
   \   00000058   ........           BL       __aeabi_idiv
   \   0000005C   0070A0E1           MOV      R7,R0
    392            NumVisLines = _GetNumVisLines(hObj, pObj);
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       WM_GetInsideRectExScrollbar
   \   0000006C   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000070   F220DDE1           LDRSH    R2,[SP, #+2]
   \   00000074   741095E5           LDR      R1,[R5, #+116]
   \   00000078   020040E0           SUB      R0,R0,R2
   \   0000007C   842095E5           LDR      R2,[R5, #+132]
   \   00000080   000081E0           ADD      R0,R1,R0
   \   00000084   010080E2           ADD      R0,R0,#+1
   \   00000088   021081E0           ADD      R1,R1,R2
   \   0000008C   ........           BL       __aeabi_idiv
    393            if (CurrentLine >= (pObj->ScrollStateV.v + NumVisLines)) {
   \   00000090   381095E5           LDR      R1,[R5, #+56]
   \   00000094   012080E0           ADD      R2,R0,R1
   \   00000098   020057E1           CMP      R7,R2
   \   0000009C   030000BA           BLT      ??_UpdateScrollPos_0
    394              pObj->ScrollStateV.v = CurrentLine - NumVisLines + 1;
   \   000000A0   000047E0           SUB      R0,R7,R0
   \   000000A4   010080E2           ADD      R0,R0,#+1
   \   000000A8   380085E5           STR      R0,[R5, #+56]
    395              hScroll = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
   \   000000AC   020000EA           B        ??_UpdateScrollPos_1
    396              WM_SetScrollState(hScroll, &pObj->ScrollStateV);
    397              WM_InvalidateWindow(hObj);
    398            } else if (pObj->ScrollStateV.v > CurrentLine) {
   \                     ??_UpdateScrollPos_0:
   \   000000B0   010057E1           CMP      R7,R1
   \   000000B4   070000AA           BGE      ??_UpdateScrollPos_2
    399              pObj->ScrollStateV.v = CurrentLine;
   \   000000B8   387085E5           STR      R7,[R5, #+56]
    400              hScroll = WM_GetDialogItem(hObj, GUI_ID_VSCROLL);
   \                     ??_UpdateScrollPos_1:
   \   000000BC   FE10A0E3           MOV      R1,#+254
   \   000000C0   0400A0E1           MOV      R0,R4
   \   000000C4   ........           BL       WM_GetDialogItem
    401              WM_SetScrollState(hScroll, &pObj->ScrollStateV);
   \   000000C8   341085E2           ADD      R1,R5,#+52
   \   000000CC   ........           BL       WM_SetScrollState
    402              WM_InvalidateWindow(hObj);
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           BL       WM_InvalidateWindow
    403            }
    404            return 0;
   \                     ??_UpdateScrollPos_2:
   \   000000D8   0000A0E3           MOV      R0,#+0
   \   000000DC   10D08DE2           ADD      SP,SP,#+16
   \   000000E0   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    405          }
    406          
    407          /*********************************************************************
    408          *
    409          *       _SetSel
    410          */
    411          static void _SetSel(ICONVIEW_Handle hObj, int Sel) {
    412            ICONVIEW_OBJ * pObj;
    413            GUI_RECT Rect;
    414            int SelOld;
    415            pObj = ICONVIEW_LOCK_H(hObj);
    416            SelOld = pObj->Sel;
    417            if (pObj->Sel != Sel) {
    418              pObj->Sel = Sel;
    419              _GetRelRectFromIndex(hObj, &Rect, SelOld);
    420              WM_InvalidateRect(hObj, &Rect);
    421              _GetRelRectFromIndex(hObj, &Rect, pObj->Sel);
    422              WM_InvalidateRect(hObj, &Rect);
    423              _UpdateScrollPos(hObj, pObj);
    424              GUI_UNLOCK_H(pObj);
    425              WM_NotifyParent(hObj, WM_NOTIFICATION_SEL_CHANGED);
    426            } else {
    427              GUI_UNLOCK_H(pObj);
    428            }
    429          }
    430          
    431          /*********************************************************************
    432          *
    433          *       _OnKey
    434          */

   \                                 In section .text, align 4, keep-with-next
    435          static void _OnKey(ICONVIEW_Handle hObj, WM_MESSAGE * pMsg) {
   \                     _OnKey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0160A0E1           MOV      R6,R1
    436            ICONVIEW_OBJ * pObj;
    437            const WM_KEY_INFO  * pInfo;
    438            int SelOld, SelNew, Key, NumItems, ItemsPerLine;
    439            GUI_RECT RectInside;
    440            pInfo = (const WM_KEY_INFO *)pMsg->Data.p;
   \   00000008   0C4096E5           LDR      R4,[R6, #+12]
   \   0000000C   0050A0E1           MOV      R5,R0
    441            if (pInfo->PressedCnt == 0) {
   \   00000010   040094E5           LDR      R0,[R4, #+4]
   \   00000014   14D04DE2           SUB      SP,SP,#+20
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   5C00000A           BEQ      ??_OnKey_1
    442              return;
    443            }
    444            pObj = ICONVIEW_LOCK_H(hObj);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   00A0A0E1           MOV      R10,R0
    445            WM_GetInsideRectExScrollbar(hObj, &RectInside);
   \   0000002C   08108DE2           ADD      R1,SP,#+8
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           BL       WM_GetInsideRectExScrollbar
    446            ItemsPerLine = (RectInside.x1 - RectInside.x0 + 1 + pObj->Props.SpaceX) / (pObj->xSizeItems + pObj->Props.SpaceX);
   \   00000038   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   0000003C   F820DDE1           LDRSH    R2,[SP, #+8]
   \   00000040   70109AE5           LDR      R1,[R10, #+112]
   \   00000044   020040E0           SUB      R0,R0,R2
   \   00000048   80209AE5           LDR      R2,[R10, #+128]
   \   0000004C   000081E0           ADD      R0,R1,R0
   \   00000050   010080E2           ADD      R0,R0,#+1
   \   00000054   021081E0           ADD      R1,R1,R2
   \   00000058   ........           BL       __aeabi_idiv
   \   0000005C   0070A0E1           MOV      R7,R0
    447            NumItems = GUI_ARRAY_GetNumItems(pObj->ItemArray);
   \   00000060   7C009AE5           LDR      R0,[R10, #+124]
   \   00000064   ........           BL       GUI_ARRAY_GetNumItems
    448            Key   = pInfo->Key;
    449            SelOld = SelNew = pObj->Sel;
   \   00000068   88A09AE5           LDR      R10,[R10, #+136]
   \   0000006C   0080A0E1           MOV      R8,R0
   \   00000070   009094E5           LDR      R9,[R4, #+0]
   \   00000074   0AB0A0E1           MOV      R11,R10
    450            GUI_UNLOCK_H(pObj);
   \   00000078   ........           BL       GUI_ALLOC_UnlockH
    451            if (SelOld < 0) {
   \   0000007C   00005BE3           CMP      R11,#+0
    452              SelOld = 0;
   \   00000080   00B0A043           MOVMI    R11,#+0
    453            }
    454            switch (Key) {
   \   00000084   109049E2           SUB      R9,R9,#+16
   \   00000088   080059E3           CMP      R9,#+8
   \   0000008C   09F18F90           ADDLS    PC,PC,R9, LSL #+2
   \                     ??_OnKey_0:
   \   00000090   1E00008A           BHI      ??_OnKey_2
   \   00000094   0C0000EA           B        ??_OnKey_3
   \   00000098   140000EA           B        ??_OnKey_4
   \   0000009C   050000EA           B        ??_OnKey_5
   \   000000A0   0D0000EA           B        ??_OnKey_6
   \   000000A4   190000EA           B        ??_OnKey_2
   \   000000A8   180000EA           B        ??_OnKey_2
   \   000000AC   170000EA           B        ??_OnKey_2
   \   000000B0   120000EA           B        ??_OnKey_7
   \   000000B4   130000EA           B        ??_OnKey_8
    455            case GUI_KEY_RIGHT:
    456              if (SelOld < (NumItems - 1)) {
   \                     ??_OnKey_5:
   \   000000B8   010048E2           SUB      R0,R8,#+1
   \   000000BC   00005BE1           CMP      R11,R0
   \   000000C0   140000AA           BGE      ??_OnKey_9
    457                SelNew = SelOld + 1;
   \   000000C4   01A08BE2           ADD      R10,R11,#+1
   \   000000C8   120000EA           B        ??_OnKey_9
    458              }
    459              break;
    460            case GUI_KEY_LEFT:
    461              if (SelOld > 0) {
   \                     ??_OnKey_3:
   \   000000CC   01005BE3           CMP      R11,#+1
   \   000000D0   100000BA           BLT      ??_OnKey_9
    462                SelNew = SelOld - 1;
   \   000000D4   01A04BE2           SUB      R10,R11,#+1
   \   000000D8   0E0000EA           B        ??_OnKey_9
    463              }
    464              break;
    465            case GUI_KEY_DOWN:
    466              if ((SelOld + ItemsPerLine) < NumItems) {
   \                     ??_OnKey_6:
   \   000000DC   0B0087E0           ADD      R0,R7,R11
   \   000000E0   080050E1           CMP      R0,R8
   \   000000E4   0B0000AA           BGE      ??_OnKey_9
    467                SelNew = SelOld + ItemsPerLine;
   \   000000E8   00A0A0E1           MOV      R10,R0
   \   000000EC   090000EA           B        ??_OnKey_9
    468              }
    469              break;
    470            case GUI_KEY_UP:
    471              if (SelOld >= ItemsPerLine) {
   \                     ??_OnKey_4:
   \   000000F0   07005BE1           CMP      R11,R7
   \   000000F4   070000BA           BLT      ??_OnKey_9
    472                SelNew = SelOld - ItemsPerLine;
   \   000000F8   07A04BE0           SUB      R10,R11,R7
   \   000000FC   050000EA           B        ??_OnKey_9
    473              }
    474              break;
    475            case GUI_KEY_HOME:
    476              SelNew = 0;
   \                     ??_OnKey_7:
   \   00000100   00A0A0E3           MOV      R10,#+0
    477              break;
   \   00000104   030000EA           B        ??_OnKey_9
    478            case GUI_KEY_END:
    479              SelNew = NumItems - 1;
   \                     ??_OnKey_8:
   \   00000108   01A048E2           SUB      R10,R8,#+1
    480              break;
   \   0000010C   010000EA           B        ??_OnKey_9
    481            default:
    482              WM_DefaultProc(pMsg);
   \                     ??_OnKey_2:
   \   00000110   0600A0E1           MOV      R0,R6
   \   00000114   ........           BL       WM_DefaultProc
    483            }
    484            if (SelOld != SelNew) {
   \                     ??_OnKey_9:
   \   00000118   0A005BE1           CMP      R11,R10
   \   0000011C   1C00000A           BEQ      ??_OnKey_1
    485              _SetSel(hObj, SelNew);
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   ........           BL       GUI_ALLOC_LockH
   \   00000128   0060A0E1           MOV      R6,R0
   \   0000012C   882096E5           LDR      R2,[R6, #+136]
   \   00000130   0A0052E1           CMP      R2,R10
   \   00000134   0100001A           BNE      ??_OnKey_10
   \   00000138   ........           BL       GUI_ALLOC_UnlockH
   \   0000013C   140000EA           B        ??_OnKey_1
   \                     ??_OnKey_10:
   \   00000140   88A086E5           STR      R10,[R6, #+136]
   \   00000144   0D10A0E1           MOV      R1,SP
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           BL       _GetRelRectFromIndex
   \   00000150   0D10A0E1           MOV      R1,SP
   \   00000154   0500A0E1           MOV      R0,R5
   \   00000158   ........           BL       WM_InvalidateRect
   \   0000015C   882096E5           LDR      R2,[R6, #+136]
   \   00000160   0D10A0E1           MOV      R1,SP
   \   00000164   0500A0E1           MOV      R0,R5
   \   00000168   ........           BL       _GetRelRectFromIndex
   \   0000016C   0D10A0E1           MOV      R1,SP
   \   00000170   0500A0E1           MOV      R0,R5
   \   00000174   ........           BL       WM_InvalidateRect
   \   00000178   0610A0E1           MOV      R1,R6
   \   0000017C   0500A0E1           MOV      R0,R5
   \   00000180   ........           BL       _UpdateScrollPos
   \   00000184   ........           BL       GUI_ALLOC_UnlockH
   \   00000188   0410A0E3           MOV      R1,#+4
   \   0000018C   0500A0E1           MOV      R0,R5
   \   00000190   ........           BL       WM_NotifyParent
   \                     ??_OnKey_1:
   \   00000194   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000198   F08FBDE8           POP      {R4-R11,PC}      ;; return
    486            }
    487          }
    488          
    489          /*********************************************************************
    490          *
    491          *       _OnDelete
    492          */
    493          static void _OnDelete(ICONVIEW_Handle hObj) {
    494            ICONVIEW_OBJ * pObj;
    495            pObj = ICONVIEW_LOCK_H(hObj);
    496            GUI_ARRAY_Delete(pObj->ItemArray);
    497            GUI_UNLOCK_H(pObj);
    498          }
    499          
    500          /*********************************************************************
    501          *
    502          *       _GetIndexFromPos
    503          */

   \                                 In section .text, align 4, keep-with-next
    504          static int _GetIndexFromPos(ICONVIEW_Handle hObj, int xPos, int yPos) {
   \                     _GetIndexFromPos:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   0240A0E1           MOV      R4,R2
    505            ICONVIEW_OBJ * pObj;
    506            int Row, Col, Skip = 0;
    507            int NumItemsPerLine, Index, NumItems;
    508            pObj = ICONVIEW_LOCK_H(hObj);
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   0050A0E1           MOV      R5,R0
    509            NumItems = GUI_ARRAY_GetNumItems(pObj->ItemArray);
   \   0000001C   7C0095E5           LDR      R0,[R5, #+124]
   \   00000020   ........           BL       GUI_ARRAY_GetNumItems
   \   00000024   0060A0E1           MOV      R6,R0
    510            NumItemsPerLine = _GetNumItemsPerLine(hObj);
   \   00000028   0D10A0E1           MOV      R1,SP
   \   0000002C   0800A0E1           MOV      R0,R8
   \   00000030   ........           BL       WM_GetInsideRectExScrollbar
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       GUI_ALLOC_LockH
   \   0000003C   0010A0E1           MOV      R1,R0
   \   00000040   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000044   F030DDE1           LDRSH    R3,[SP, #+0]
   \   00000048   702091E5           LDR      R2,[R1, #+112]
   \   0000004C   801091E5           LDR      R1,[R1, #+128]
   \   00000050   030040E0           SUB      R0,R0,R3
   \   00000054   000082E0           ADD      R0,R2,R0
   \   00000058   010080E2           ADD      R0,R0,#+1
   \   0000005C   011082E0           ADD      R1,R2,R1
   \   00000060   ........           BL       __aeabi_idiv
   \   00000064   0080A0E1           MOV      R8,R0
   \   00000068   ........           BL       GUI_ALLOC_UnlockH
    511            Row = (yPos - pObj->Props.FrameY) / (pObj->ySizeItems + pObj->Props.SpaceY);
    512            Col = (xPos - pObj->Props.FrameX) / (pObj->xSizeItems + pObj->Props.SpaceX);
   \   0000006C   680095E5           LDR      R0,[R5, #+104]
   \   00000070   801095E5           LDR      R1,[R5, #+128]
   \   00000074   702095E5           LDR      R2,[R5, #+112]
   \   00000078   000047E0           SUB      R0,R7,R0
   \   0000007C   011082E0           ADD      R1,R2,R1
   \   00000080   ........           BL       __aeabi_idiv
   \   00000084   0070A0E1           MOV      R7,R0
    513            if (Col > NumItemsPerLine) {
   \   00000088   070058E1           CMP      R8,R7
   \   0000008C   0A0000BA           BLT      ??_GetIndexFromPos_0
    514              Skip = 1;
    515            }
    516            if (Skip == 0) {
    517              Index = (Row + pObj->ScrollStateV.v) * NumItemsPerLine + Col;
   \   00000090   6C0095E5           LDR      R0,[R5, #+108]
   \   00000094   841095E5           LDR      R1,[R5, #+132]
   \   00000098   742095E5           LDR      R2,[R5, #+116]
   \   0000009C   000044E0           SUB      R0,R4,R0
   \   000000A0   011082E0           ADD      R1,R2,R1
   \   000000A4   ........           BL       __aeabi_idiv
   \   000000A8   381095E5           LDR      R1,[R5, #+56]
   \   000000AC   000081E0           ADD      R0,R1,R0
   \   000000B0   987024E0           MLA      R4,R8,R0,R7
    518              if (Index > NumItems) {
   \   000000B4   040056E1           CMP      R6,R4
   \   000000B8   000000AA           BGE      ??_GetIndexFromPos_1
    519                Index = -1;
   \                     ??_GetIndexFromPos_0:
   \   000000BC   0040E0E3           MVN      R4,#+0
    520              }
    521            } else {
    522              Index = -1;
    523            }
    524            GUI_UNLOCK_H(pObj);
   \                     ??_GetIndexFromPos_1:
   \   000000C0   ........           BL       GUI_ALLOC_UnlockH
    525            return Index;
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   08D08DE2           ADD      SP,SP,#+8
   \   000000CC   F081BDE8           POP      {R4-R8,PC}       ;; return
    526          }
    527          
    528          /*********************************************************************
    529          *
    530          *       _OnPidStateChange
    531          */

   \                                 In section .text, align 4, keep-with-next
    532          static void _OnPidStateChange(ICONVIEW_Handle hObj, WM_MESSAGE * pMsg) {
   \                     _OnPidStateChange:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    533            int Index;
    534            const WM_PID_STATE_CHANGED_INFO * pState;
    535            pState = (const WM_PID_STATE_CHANGED_INFO *)pMsg->Data.p;
   \   00000008   0C0091E5           LDR      R0,[R1, #+12]
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
    536            if ((pState->StatePrev == 0) && (pState->State == 1)) {
   \   00000010   0910D0E5           LDRB     R1,[R0, #+9]
   \   00000014   000051E3           CMP      R1,#+0
   \   00000018   2700001A           BNE      ??_OnPidStateChange_0
   \   0000001C   0810D0E5           LDRB     R1,[R0, #+8]
   \   00000020   010051E3           CMP      R1,#+1
   \   00000024   2B00001A           BNE      ??_OnPidStateChange_1
    537              Index = _GetIndexFromPos(hObj, pState->x, pState->y);
   \   00000028   042090E5           LDR      R2,[R0, #+4]
   \   0000002C   001090E5           LDR      R1,[R0, #+0]
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       _GetIndexFromPos
   \   00000038   0050B0E1           MOVS     R5,R0
    538              if (Index >= 0) {
   \   0000003C   1C00004A           BMI      ??_OnPidStateChange_2
    539                _SetSel(hObj, Index);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       GUI_ALLOC_LockH
   \   00000048   0060A0E1           MOV      R6,R0
   \   0000004C   882096E5           LDR      R2,[R6, #+136]
   \   00000050   050052E1           CMP      R2,R5
   \   00000054   0100001A           BNE      ??_OnPidStateChange_3
   \   00000058   ........           BL       GUI_ALLOC_UnlockH
   \   0000005C   140000EA           B        ??_OnPidStateChange_2
   \                     ??_OnPidStateChange_3:
   \   00000060   885086E5           STR      R5,[R6, #+136]
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       _GetRelRectFromIndex
   \   00000070   0D10A0E1           MOV      R1,SP
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       WM_InvalidateRect
   \   0000007C   882096E5           LDR      R2,[R6, #+136]
   \   00000080   0D10A0E1           MOV      R1,SP
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       _GetRelRectFromIndex
   \   0000008C   0D10A0E1           MOV      R1,SP
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       WM_InvalidateRect
   \   00000098   0610A0E1           MOV      R1,R6
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       _UpdateScrollPos
   \   000000A4   ........           BL       GUI_ALLOC_UnlockH
   \   000000A8   0410A0E3           MOV      R1,#+4
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   ........           BL       WM_NotifyParent
    540              }
    541              WM_NotifyParent(hObj, WM_NOTIFICATION_CLICKED);
   \                     ??_OnPidStateChange_2:
   \   000000B4   0110A0E3           MOV      R1,#+1
   \   000000B8   040000EA           B        ??_OnPidStateChange_4
    542            } else if ((pState->StatePrev == 1) && (pState->State == 0)) {
   \                     ??_OnPidStateChange_0:
   \   000000BC   010051E3           CMP      R1,#+1
   \   000000C0   0800D005           LDRBEQ   R0,[R0, #+8]
   \   000000C4   00005003           CMPEQ    R0,#+0
   \   000000C8   0200001A           BNE      ??_OnPidStateChange_1
    543              WM_NotifyParent(hObj, WM_NOTIFICATION_RELEASED);
   \   000000CC   0210A0E3           MOV      R1,#+2
   \                     ??_OnPidStateChange_4:
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           BL       WM_NotifyParent
    544            }
    545          }
   \                     ??_OnPidStateChange_1:
   \   000000D8   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000DC   7080BDE8           POP      {R4-R6,PC}       ;; return
    546          
    547          /*********************************************************************
    548          *
    549          *       _OnTouch
    550          */
    551          static void _OnTouch(ICONVIEW_Handle hObj, WM_MESSAGE * pMsg) {
    552            if (pMsg->Data.p == NULL) {
    553              WM_NotifyParent(hObj, WM_NOTIFICATION_MOVED_OUT);
    554            }
    555          }
    556          
    557          /*********************************************************************
    558          *
    559          *       Private routines
    560          *
    561          **********************************************************************
    562          */
    563          /*********************************************************************
    564          *
    565          *       ICONVIEW__DrawBitmap
    566          */

   \                                 In section .text, align 4, keep-with-next
    567          static void ICONVIEW__DrawBitmap(GUI_RECT * pRect, const void * pData) {
   \                     ICONVIEW__DrawBitmap:
   \   00000000   0020A0E1           MOV      R2,R0
   \   00000004   0100A0E1           MOV      R0,R1
    568            const GUI_BITMAP * pBitmap;
    569            pBitmap = (const GUI_BITMAP *)pData;
    570            GUI_DrawBitmap(pBitmap, pRect->x0 + (pRect->x1 - pRect->x0 + 1 - pBitmap->XSize) / 2, pRect->y0);
   \   00000008   F010D2E1           LDRSH    R1,[R2, #+0]
   \   0000000C   F430D2E1           LDRSH    R3,[R2, #+4]
   \   00000010   B0C0D0E1           LDRH     R12,[R0, #+0]
   \   00000014   F220D2E1           LDRSH    R2,[R2, #+2]
   \   00000018   013043E0           SUB      R3,R3,R1
   \   0000001C   013083E2           ADD      R3,R3,#+1
   \   00000020   0C3043E0           SUB      R3,R3,R12
   \   00000024   A33F83E0           ADD      R3,R3,R3, LSR #+31
   \   00000028   C31081E0           ADD      R1,R1,R3, ASR #+1
   \   0000002C   ........           B        GUI_DrawBitmap   ;; tailcall
    571          }
    572          
    573          /*********************************************************************
    574          *
    575          *       ICONVIEW__DrawText
    576          */

   \                                 In section .text, align 4, keep-with-next
    577          static void ICONVIEW__DrawText(ICONVIEW_OBJ * pObj, GUI_RECT * pRect, const char * s) {
   \                     ICONVIEW__DrawText:
   \   00000000   0230A0E1           MOV      R3,R2
    578            GUI_DispStringInRect(s, pRect, pObj->Props.TextAlign);
   \   00000004   782090E5           LDR      R2,[R0, #+120]
   \   00000008   0300A0E1           MOV      R0,R3
   \   0000000C   ........           B        GUI_DispStringInRect  ;; tailcall
    579          }
    580          
    581          /*********************************************************************
    582          *
    583          *       Public routines
    584          *
    585          **********************************************************************
    586          */
    587          /*********************************************************************
    588          *
    589          *       ICONVIEW_Callback
    590          */

   \                                 In section .text, align 4, keep-with-next
    591          void ICONVIEW_Callback(WM_MESSAGE * pMsg) {
   \                     ICONVIEW_Callback:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    592            ICONVIEW_Handle hObj;
    593            ICONVIEW_OBJ  * pObj;
    594            WM_SCROLL_STATE ScrollState;
    595            hObj = pMsg->hWin;
   \   00000008   044095E5           LDR      R4,[R5, #+4]
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
    596            /* Let widget handle the standard messages */
    597            if (WIDGET_HandleActive(hObj, pMsg) == 0) {
   \   00000010   0510A0E1           MOV      R1,R5
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       WIDGET_HandleActive
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   5E00000A           BEQ      ??ICONVIEW_Callback_1
    598              return;
    599            }
    600            switch (pMsg->MsgId) {
   \   00000024   000095E5           LDR      R0,[R5, #+0]
   \   00000028   0B0040E2           SUB      R0,R0,#+11
   \   0000002C   1B0050E3           CMP      R0,#+27
   \   00000030   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ICONVIEW_Callback_0:
   \   00000034   5900008A           BHI      ??ICONVIEW_Callback_1
   \   00000038   1A0000EA           B        ??ICONVIEW_Callback_2
   \   0000003C   230000EA           B        ??ICONVIEW_Callback_3
   \   00000040   560000EA           B        ??ICONVIEW_Callback_1
   \   00000044   2C0000EA           B        ??ICONVIEW_Callback_4
   \   00000048   1C0000EA           B        ??ICONVIEW_Callback_5
   \   0000004C   530000EA           B        ??ICONVIEW_Callback_1
   \   00000050   250000EA           B        ??ICONVIEW_Callback_6
   \   00000054   510000EA           B        ??ICONVIEW_Callback_1
   \   00000058   500000EA           B        ??ICONVIEW_Callback_1
   \   0000005C   4F0000EA           B        ??ICONVIEW_Callback_1
   \   00000060   4E0000EA           B        ??ICONVIEW_Callback_1
   \   00000064   4D0000EA           B        ??ICONVIEW_Callback_1
   \   00000068   4C0000EA           B        ??ICONVIEW_Callback_1
   \   0000006C   4B0000EA           B        ??ICONVIEW_Callback_1
   \   00000070   4A0000EA           B        ??ICONVIEW_Callback_1
   \   00000074   490000EA           B        ??ICONVIEW_Callback_1
   \   00000078   480000EA           B        ??ICONVIEW_Callback_1
   \   0000007C   470000EA           B        ??ICONVIEW_Callback_1
   \   00000080   460000EA           B        ??ICONVIEW_Callback_1
   \   00000084   450000EA           B        ??ICONVIEW_Callback_1
   \   00000088   440000EA           B        ??ICONVIEW_Callback_1
   \   0000008C   430000EA           B        ??ICONVIEW_Callback_1
   \   00000090   420000EA           B        ??ICONVIEW_Callback_1
   \   00000094   410000EA           B        ??ICONVIEW_Callback_1
   \   00000098   400000EA           B        ??ICONVIEW_Callback_1
   \   0000009C   3F0000EA           B        ??ICONVIEW_Callback_1
   \   000000A0   3E0000EA           B        ??ICONVIEW_Callback_1
   \   000000A4   180000EA           B        ??ICONVIEW_Callback_7
    601            case WM_DELETE:
    602              _OnDelete(hObj);
   \                     ??ICONVIEW_Callback_2:
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           BL       GUI_ALLOC_LockH
   \   000000B0   7C0090E5           LDR      R0,[R0, #+124]
   \   000000B4   ........           BL       GUI_ARRAY_Delete
   \   000000B8   ........           BL       GUI_ALLOC_UnlockH
    603              break;
   \   000000BC   370000EA           B        ??ICONVIEW_Callback_1
    604            case WM_PAINT:
    605              _OnPaint(hObj, pMsg);
   \                     ??ICONVIEW_Callback_5:
   \   000000C0   0510A0E1           MOV      R1,R5
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   ........           BL       _OnPaint
    606              break;
   \   000000CC   330000EA           B        ??ICONVIEW_Callback_1
    607            case WM_TOUCH:
    608              _OnTouch(hObj, pMsg);
   \                     ??ICONVIEW_Callback_3:
   \   000000D0   0C0095E5           LDR      R0,[R5, #+12]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   3000001A           BNE      ??ICONVIEW_Callback_1
   \   000000DC   0310A0E3           MOV      R1,#+3
   \                     ??ICONVIEW_Callback_8:
   \   000000E0   0400A0E1           MOV      R0,R4
   \   000000E4   ........           BL       WM_NotifyParent
   \   000000E8   2C0000EA           B        ??ICONVIEW_Callback_1
    609              break;
    610            case WM_PID_STATE_CHANGED:
    611              _OnPidStateChange(hObj, pMsg);
   \                     ??ICONVIEW_Callback_6:
   \   000000EC   0510A0E1           MOV      R1,R5
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           BL       _OnPidStateChange
    612              break;
   \   000000F8   280000EA           B        ??ICONVIEW_Callback_1
    613            case WM_KEY:
    614              _OnKey(hObj, pMsg);
   \                     ??ICONVIEW_Callback_4:
   \   000000FC   0510A0E1           MOV      R1,R5
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       _OnKey
    615              break;
   \   00000108   240000EA           B        ??ICONVIEW_Callback_1
    616            case WM_NOTIFY_PARENT:
    617              switch (pMsg->Data.v) {
   \                     ??ICONVIEW_Callback_7:
   \   0000010C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000110   050050E3           CMP      R0,#+5
   \   00000114   0400000A           BEQ      ??ICONVIEW_Callback_9
   \   00000118   2000003A           BCC      ??ICONVIEW_Callback_1
   \   0000011C   060050E3           CMP      R0,#+6
   \   00000120   0400A001           MOVEQ    R0,R4
   \   00000124   ........           BLEQ     _ManageAutoScroll
   \   00000128   1C0000EA           B        ??ICONVIEW_Callback_1
    618              case WM_NOTIFICATION_VALUE_CHANGED:
    619                pObj = ICONVIEW_LOCK_H(hObj);
   \                     ??ICONVIEW_Callback_9:
   \   0000012C   0400A0E1           MOV      R0,R4
   \   00000130   ........           BL       GUI_ALLOC_LockH
   \   00000134   0060A0E1           MOV      R6,R0
    620                if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
   \   00000138   0400A0E1           MOV      R0,R4
   \   0000013C   ........           BL       WM_GetScrollbarV
   \   00000140   0010A0E1           MOV      R1,R0
   \   00000144   080095E5           LDR      R0,[R5, #+8]
   \   00000148   010050E1           CMP      R0,R1
   \   0000014C   0400001A           BNE      ??ICONVIEW_Callback_10
    621                  WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
   \   00000150   0D10A0E1           MOV      R1,SP
   \   00000154   ........           BL       WM_GetScrollState
    622                  pObj->ScrollStateV.v = ScrollState.v;
   \   00000158   04009DE5           LDR      R0,[SP, #+4]
   \   0000015C   380086E5           STR      R0,[R6, #+56]
   \   00000160   090000EA           B        ??ICONVIEW_Callback_11
    623                } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
   \                     ??ICONVIEW_Callback_10:
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   ........           BL       WM_GetScrollbarH
   \   0000016C   0010A0E1           MOV      R1,R0
   \   00000170   080095E5           LDR      R0,[R5, #+8]
   \   00000174   010050E1           CMP      R0,R1
   \   00000178   0300001A           BNE      ??ICONVIEW_Callback_11
    624                  WM_GetScrollState(pMsg->hWinSrc, &ScrollState);
   \   0000017C   0D10A0E1           MOV      R1,SP
   \   00000180   ........           BL       WM_GetScrollState
    625                  pObj->ScrollStateH.v = ScrollState.v;
   \   00000184   04009DE5           LDR      R0,[SP, #+4]
   \   00000188   440086E5           STR      R0,[R6, #+68]
    626                }
    627                GUI_UNLOCK_H(pObj);
   \                     ??ICONVIEW_Callback_11:
   \   0000018C   ........           BL       GUI_ALLOC_UnlockH
    628                WM_InvalidateWindow(hObj);
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   ........           BL       WM_InvalidateWindow
    629                WM_NotifyParent(hObj, WM_NOTIFICATION_SCROLL_CHANGED);
   \   00000198   0A10A0E3           MOV      R1,#+10
   \   0000019C   CFFFFFEA           B        ??ICONVIEW_Callback_8
   \                     ??ICONVIEW_Callback_1:
   \   000001A0   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000001A4   7080BDE8           POP      {R4-R6,PC}       ;; return
    630                break;
    631              case WM_NOTIFICATION_SCROLLBAR_ADDED:
    632                #if WIDGET_USE_PARENT_EFFECT
    633                  pObj = ICONVIEW_LOCK_H(hObj);
    634                  WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
    635                  GUI_UNLOCK_H(pObj);
    636                #endif
    637                _ManageAutoScroll(hObj);
    638                break;
    639              }
    640              break;
    641            }
    642          }
    643          
    644          /*********************************************************************
    645          *
    646          *       ICONVIEW_CreateEx
    647          */

   \                                 In section .text, align 4, keep-with-next
    648          ICONVIEW_Handle ICONVIEW_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent, int WinFlags, int ExFlags, int Id, int xSizeItems, int ySizeItems) {
   \                     ICONVIEW_CreateEx:
   \   00000000   F34F2DE9           PUSH     {R0,R1,R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0280A0E1           MOV      R8,R2
   \   0000000C   0390A0E1           MOV      R9,R3
   \   00000010   40A09DE5           LDR      R10,[SP, #+64]
   \   00000014   44B09DE5           LDR      R11,[SP, #+68]
   \   00000018   48409DE5           LDR      R4,[SP, #+72]
   \   0000001C   4C509DE5           LDR      R5,[SP, #+76]
   \   00000020   50609DE5           LDR      R6,[SP, #+80]
   \   00000024   54709DE5           LDR      R7,[SP, #+84]
    649            ICONVIEW_Handle hObj;
    650            ICONVIEW_OBJ * pObj;
    651            GUI_ARRAY ItemArray;
    652            WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
    653            hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, ICONVIEW_Callback,
    654                                          sizeof(ICONVIEW_OBJ) - sizeof(WM_Obj));
   \   0000002C   6400A0E3           MOV      R0,#+100
   \   00000030   0C008DE5           STR      R0,[SP, #+12]
   \   00000034   ........           LDR      R0,??DataTable2_1
   \   00000038   04B08DE5           STR      R11,[SP, #+4]
   \   0000003C   08008DE5           STR      R0,[SP, #+8]
   \   00000040   00A08DE5           STR      R10,[SP, #+0]
   \   00000044   0930A0E1           MOV      R3,R9
   \   00000048   0820A0E1           MOV      R2,R8
   \   0000004C   18109DE5           LDR      R1,[SP, #+24]
   \   00000050   14009DE5           LDR      R0,[SP, #+20]
   \   00000054   ........           BL       WM_CreateWindowAsChild
   \   00000058   0080B0E1           MOVS     R8,R0
    655            if (hObj) {
   \   0000005C   3400000A           BEQ      ??ICONVIEW_CreateEx_0
    656              ItemArray = GUI_ARRAY_Create();
   \   00000060   ........           BL       GUI_ARRAY_Create
   \   00000064   00A0A0E1           MOV      R10,R0
    657              pObj = (ICONVIEW_OBJ *)GUI_LOCK_H(hObj);
   \   00000068   0800A0E1           MOV      R0,R8
   \   0000006C   ........           BL       GUI_ALLOC_LockH
   \   00000070   0090A0E1           MOV      R9,R0
    658              /* Create array of items */
    659              pObj->ItemArray = ItemArray;
   \   00000074   7CA089E5           STR      R10,[R9, #+124]
    660              /* Init widget specific variables */
    661              WIDGET__Init(&pObj->Widget, Id, WIDGET_STATE_FOCUSSABLE);
   \   00000078   1020A0E3           MOV      R2,#+16
   \   0000007C   0510A0E1           MOV      R1,R5
   \   00000080   ........           BL       WIDGET__Init
    662              pObj->Widget.pEffect = &WIDGET_Effect_None;
   \   00000084   ........           LDR      R0,??DataTable2_2
    663              /* Init member variables */
    664              ICONVIEW_INIT_ID(pObj);
    665              pObj->Sel        = -1;
    666              pObj->Props      = ICONVIEW__DefaultProps;
   \   00000088   ........           LDR      R1,??DataTable2_3
   \   0000008C   2C0089E5           STR      R0,[R9, #+44]
   \   00000090   0000E0E3           MVN      R0,#+0
   \   00000094   880089E5           STR      R0,[R9, #+136]
   \   00000098   2C54B1E8           LDM      R1!,{R2,R3,R5,R10,R12,LR}
   \   0000009C   4C0089E2           ADD      R0,R9,#+76
   \   000000A0   2C54A0E8           STM      R0!,{R2,R3,R5,R10,R12,LR}
   \   000000A4   2C54B1E8           LDM      R1!,{R2,R3,R5,R10,R12,LR}
   \   000000A8   2C54A0E8           STM      R0!,{R2,R3,R5,R10,R12,LR}
    667              pObj->xSizeItems = xSizeItems;
   \   000000AC   806089E5           STR      R6,[R9, #+128]
    668              pObj->ySizeItems = ySizeItems;
   \   000000B0   847089E5           STR      R7,[R9, #+132]
    669              pObj->Flags      = ExFlags;
   \   000000B4   BC48C9E1           STRH     R4,[R9, #+140]
    670              GUI_UNLOCK_H(pObj);
   \   000000B8   ........           BL       GUI_ALLOC_UnlockH
    671              _SetSel(hObj, 0);
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   ........           BL       GUI_ALLOC_LockH
   \   000000C4   0040A0E1           MOV      R4,R0
   \   000000C8   882094E5           LDR      R2,[R4, #+136]
   \   000000CC   0050A0E3           MOV      R5,#+0
   \   000000D0   000052E3           CMP      R2,#+0
   \   000000D4   0100001A           BNE      ??ICONVIEW_CreateEx_1
   \   000000D8   ........           BL       GUI_ALLOC_UnlockH
   \   000000DC   140000EA           B        ??ICONVIEW_CreateEx_0
   \                     ??ICONVIEW_CreateEx_1:
   \   000000E0   885084E5           STR      R5,[R4, #+136]
   \   000000E4   0D10A0E1           MOV      R1,SP
   \   000000E8   0800A0E1           MOV      R0,R8
   \   000000EC   ........           BL       _GetRelRectFromIndex
   \   000000F0   0D10A0E1           MOV      R1,SP
   \   000000F4   0800A0E1           MOV      R0,R8
   \   000000F8   ........           BL       WM_InvalidateRect
   \   000000FC   882094E5           LDR      R2,[R4, #+136]
   \   00000100   0D10A0E1           MOV      R1,SP
   \   00000104   0800A0E1           MOV      R0,R8
   \   00000108   ........           BL       _GetRelRectFromIndex
   \   0000010C   0D10A0E1           MOV      R1,SP
   \   00000110   0800A0E1           MOV      R0,R8
   \   00000114   ........           BL       WM_InvalidateRect
   \   00000118   0410A0E1           MOV      R1,R4
   \   0000011C   0800A0E1           MOV      R0,R8
   \   00000120   ........           BL       _UpdateScrollPos
   \   00000124   ........           BL       GUI_ALLOC_UnlockH
   \   00000128   0410A0E3           MOV      R1,#+4
   \   0000012C   0800A0E1           MOV      R0,R8
   \   00000130   ........           BL       WM_NotifyParent
    672            }
    673            WM_UNLOCK();
   \                     ??ICONVIEW_CreateEx_0:
   \   00000134   ........           BL       GUI_Unlock
    674            return hObj;
   \   00000138   0800A0E1           MOV      R0,R8
   \   0000013C   1CD08DE2           ADD      SP,SP,#+28
   \   00000140   F08FBDE8           POP      {R4-R11,PC}      ;; return
    675          }
    676          
    677          /*********************************************************************
    678          *
    679          *       ICONVIEW_AddBitmapItem
    680          */

   \                                 In section .text, align 4, keep-with-next
    681          int ICONVIEW_AddBitmapItem(ICONVIEW_Handle hObj, const GUI_BITMAP * pBitmap, const char * pText) {
   \                     ICONVIEW_AddBitmapItem:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   0250A0E1           MOV      R5,R2
    682            ICONVIEW_OBJ  * pObj;
    683            ICONVIEW_ITEM   Item;
    684            ICONVIEW_ITEM * pItem;
    685            GUI_ARRAY ItemArray;
    686            int Index, Len;
    687            int r = 1;
   \   00000014   0160A0E3           MOV      R6,#+1
    688            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   2100000A           BEQ      ??ICONVIEW_AddBitmapItem_0
    689              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
    690              Item.pfDrawImage = ICONVIEW__DrawBitmap;
   \   00000024   ........           LDR      R1,??DataTable2_4
    691              Item.pfDrawText  = ICONVIEW__DrawText;
    692              Item.pData       = pBitmap;
   \   00000028   08708DE5           STR      R7,[SP, #+8]
   \   0000002C   00108DE5           STR      R1,[SP, #+0]
   \   00000030   ........           LDR      R1,??DataTable2_5
    693              Item.SizeofData  = 0; /* Not used for internal bitmap format */
    694              pObj = ICONVIEW_LOCK_H(hObj);
    695              ItemArray = pObj->ItemArray;
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   04108DE5           STR      R1,[SP, #+4]
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0C108DE5           STR      R1,[SP, #+12]
   \   00000044   ........           BL       GUI_ALLOC_LockH
   \   00000048   7C7090E5           LDR      R7,[R0, #+124]
    696              GUI_UNLOCK_H(pObj);
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
    697              Index = GUI_ARRAY_GetNumItems(ItemArray);
   \   00000050   0700A0E1           MOV      R0,R7
   \   00000054   ........           BL       GUI_ARRAY_GetNumItems
   \   00000058   0080A0E1           MOV      R8,R0
    698              Len = strlen(pText);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           BL       strlen
    699              if (GUI_ARRAY_AddItem(ItemArray, &Item, sizeof(ICONVIEW_ITEM) + Len + 1) == 0) {
   \   00000064   152080E2           ADD      R2,R0,#+21
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   0700A0E1           MOV      R0,R7
   \   00000070   ........           BL       GUI_ARRAY_AddItem
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   0700001A           BNE      ??ICONVIEW_AddBitmapItem_1
    700                pItem = (ICONVIEW_ITEM *)GUI_ARRAY_GetpItemLocked(ItemArray, Index);
   \   0000007C   0810A0E1           MOV      R1,R8
   \   00000080   0700A0E1           MOV      R0,R7
   \   00000084   ........           BL       GUI_ARRAY_GetpItemLocked
    701                strcpy(pItem->acText, pText);
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   100080E2           ADD      R0,R0,#+16
   \   00000090   ........           BL       strcpy
    702                GUI_UNLOCK_H(pItem);
   \   00000094   ........           BL       GUI_ALLOC_UnlockH
    703                r = 0;
   \   00000098   0060A0E3           MOV      R6,#+0
    704              }
    705              _ManageAutoScroll(hObj);
   \                     ??ICONVIEW_AddBitmapItem_1:
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       _ManageAutoScroll
    706              WM_UNLOCK();
   \   000000A4   ........           BL       GUI_Unlock
    707            }
    708            return r;
   \                     ??ICONVIEW_AddBitmapItem_0:
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   18D08DE2           ADD      SP,SP,#+24
   \   000000B0   F081BDE8           POP      {R4-R8,PC}       ;; return
    709          }
    710          
    711          /*********************************************************************
    712          *
    713          *       ICONVIEW_SetBkColor
    714          */

   \                                 In section .text, align 4, keep-with-next
    715          void ICONVIEW_SetBkColor(ICONVIEW_Handle hObj, int Index, GUI_COLOR Color) {
   \                     ICONVIEW_SetBkColor:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
    716            ICONVIEW_OBJ  * pObj;
    717            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??ICONVIEW_SetBkColor_0
    718              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    719              pObj = ICONVIEW_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    720              if (Index < GUI_COUNTOF(pObj->Props.aBkColor)) {
   \   00000024   030055E3           CMP      R5,#+3
   \   00000028   0600002A           BCS      ??ICONVIEW_SetBkColor_1
    721                if (pObj->Props.aBkColor[Index] != Color) {
   \   0000002C   050180E0           ADD      R0,R0,R5, LSL #+2
   \   00000030   501090E5           LDR      R1,[R0, #+80]
   \   00000034   060051E1           CMP      R1,R6
   \   00000038   0200000A           BEQ      ??ICONVIEW_SetBkColor_1
    722                  pObj->Props.aBkColor[Index] = Color;
   \   0000003C   506080E5           STR      R6,[R0, #+80]
    723                  WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
    724                }
    725              }
    726              GUI_UNLOCK_H(pObj);
   \                     ??ICONVIEW_SetBkColor_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
    727              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
    728            }
    729          }
   \                     ??ICONVIEW_SetBkColor_0:
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
    730          
    731          /*********************************************************************
    732          *
    733          *       ICONVIEW_SetTextColor
    734          */

   \                                 In section .text, align 4, keep-with-next
    735          void ICONVIEW_SetTextColor(ICONVIEW_Handle hObj, int Index, GUI_COLOR Color) {
   \                     ICONVIEW_SetTextColor:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
    736            ICONVIEW_OBJ  * pObj;
    737            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??ICONVIEW_SetTextColor_0
    738              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    739              pObj = ICONVIEW_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    740              if (Index < GUI_COUNTOF(pObj->Props.aTextColor)) {
   \   00000024   030055E3           CMP      R5,#+3
   \   00000028   0600002A           BCS      ??ICONVIEW_SetTextColor_1
    741                if (pObj->Props.aTextColor[Index] != Color) {
   \   0000002C   050180E0           ADD      R0,R0,R5, LSL #+2
   \   00000030   5C1090E5           LDR      R1,[R0, #+92]
   \   00000034   060051E1           CMP      R1,R6
   \   00000038   0200000A           BEQ      ??ICONVIEW_SetTextColor_1
    742                  pObj->Props.aTextColor[Index] = Color;
   \   0000003C   5C6080E5           STR      R6,[R0, #+92]
    743                  WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
    744                }
    745              }
    746              GUI_UNLOCK_H(pObj);
   \                     ??ICONVIEW_SetTextColor_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
    747              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
    748            }
    749          }
   \                     ??ICONVIEW_SetTextColor_0:
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
    750          
    751          /*********************************************************************
    752          *
    753          *       ICONVIEW_SetFont
    754          */

   \                                 In section .text, align 4, keep-with-next
    755          void ICONVIEW_SetFont(ICONVIEW_Handle hObj, const GUI_FONT GUI_UNI_PTR * pFont) {
   \                     ICONVIEW_SetFont:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    756            ICONVIEW_OBJ  * pObj;
    757            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??ICONVIEW_SetFont_0
    758              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    759              pObj = ICONVIEW_LOCK_H(hObj);
    760              pObj->Props.pFont = pFont;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   4C5080E5           STR      R5,[R0, #+76]
    761              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    762              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
    763              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
    764            }
    765          }
   \                     ??ICONVIEW_SetFont_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
    766          
    767          /*********************************************************************
    768          *
    769          *       ICONVIEW_GetSel
    770          */

   \                                 In section .text, align 4, keep-with-next
    771          int ICONVIEW_GetSel(ICONVIEW_Handle hObj) {
   \                     ICONVIEW_GetSel:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    772            int Sel = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    773            ICONVIEW_OBJ  * pObj;
    774            if (hObj) {
   \   00000010   0500000A           BEQ      ??ICONVIEW_GetSel_0
    775              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    776              pObj = ICONVIEW_LOCK_H(hObj);
    777              Sel = pObj->Sel;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   885090E5           LDR      R5,[R0, #+136]
    778              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    779              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    780            }
    781            return Sel;
   \                     ??ICONVIEW_GetSel_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    782          }
    783          
    784          /*********************************************************************
    785          *
    786          *       ICONVIEW_SetSel
    787          */

   \                                 In section .text, align 4, keep-with-next
    788          void ICONVIEW_SetSel(ICONVIEW_Handle hObj, int Sel) {
   \                     ICONVIEW_SetSel:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0150A0E1           MOV      R5,R1
    789            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1E00000A           BEQ      ??ICONVIEW_SetSel_0
    790              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    791              _SetSel(hObj, Sel);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0060A0E1           MOV      R6,R0
   \   00000028   882096E5           LDR      R2,[R6, #+136]
   \   0000002C   050052E1           CMP      R2,R5
   \   00000030   0100001A           BNE      ??ICONVIEW_SetSel_1
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
   \   00000038   140000EA           B        ??ICONVIEW_SetSel_2
   \                     ??ICONVIEW_SetSel_1:
   \   0000003C   885086E5           STR      R5,[R6, #+136]
   \   00000040   0D10A0E1           MOV      R1,SP
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       _GetRelRectFromIndex
   \   0000004C   0D10A0E1           MOV      R1,SP
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       WM_InvalidateRect
   \   00000058   882096E5           LDR      R2,[R6, #+136]
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       _GetRelRectFromIndex
   \   00000068   0D10A0E1           MOV      R1,SP
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       WM_InvalidateRect
   \   00000074   0610A0E1           MOV      R1,R6
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       _UpdateScrollPos
   \   00000080   ........           BL       GUI_ALLOC_UnlockH
   \   00000084   0410A0E3           MOV      R1,#+4
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       WM_NotifyParent
    792              WM_UNLOCK();
   \                     ??ICONVIEW_SetSel_2:
   \   00000090   ........           BL       GUI_Unlock
    793            }
    794          }
   \                     ??ICONVIEW_SetSel_0:
   \   00000094   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000098   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     ??IsActive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     ICONVIEW_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   ........           DC32     WIDGET_Effect_None

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   ........           DC32     ICONVIEW__DefaultProps

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   ........           DC32     ICONVIEW__DrawBitmap

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   ........           DC32     ICONVIEW__DrawText
    795          
    796          #else                            /* Avoid problems with empty object modules */
    797            void ICONVIEW_C(void);
    798            void ICONVIEW_C(void) {}
    799          #endif /* GUI_WINSUPPORT */
    800          
    801          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     ICONVIEW_AddBitmapItem     48
     ICONVIEW_Callback          32
     ICONVIEW_CreateEx          64
     ICONVIEW_GetSel            16
     ICONVIEW_SetBkColor        16
     ICONVIEW_SetFont           16
     ICONVIEW_SetSel            32
     ICONVIEW_SetTextColor      16
     ICONVIEW__DrawBitmap        8
     ICONVIEW__DrawText          8
     _GetIndexFromPos           40
     _GetRelRectFromIndex       48
     _ManageAutoScroll          80
     _OnKey                     56
     _OnPaint                   88
     _OnPidStateChange          32
     _UpdateScrollPos           40


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     ICONVIEW__DefaultProps   48
     _GetRelRectFromIndex    232
     _OnPaint                656
     _ManageAutoScroll       404
     IsActive                  4
     _UpdateScrollPos        228
     _OnKey                  412
     _GetIndexFromPos        208
     _OnPidStateChange       224
     ICONVIEW__DrawBitmap     48
     ICONVIEW__DrawText       16
     ICONVIEW_Callback       424
     ICONVIEW_CreateEx       324
     ICONVIEW_AddBitmapItem  180
     ICONVIEW_SetBkColor      84
     ICONVIEW_SetTextColor    84
     ICONVIEW_SetFont         64
     ICONVIEW_GetSel          56
     ICONVIEW_SetSel         156
     ??DataTable2              4
     ??DataTable2_1            4
     ??DataTable2_2            4
     ??DataTable2_3            4
     ??DataTable2_4            4
     ??DataTable2_5            4

 
     4 bytes in section .bss
    48 bytes in section .data
 3 824 bytes in section .text
 
 3 824 bytes of CODE memory
    52 bytes of DATA memory

Errors: none
Warnings: none
