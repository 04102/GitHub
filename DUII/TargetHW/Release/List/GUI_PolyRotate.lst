###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_PolyRotate.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_PolyRotate.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_PolyRotate.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_PolyRotate.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_PolyRotate.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_PolyRotate.c
     19          Purpose     : Polygon rotation
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "GUI.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_RotatePolygon
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_RotatePolygon(GUI_POINT * pDest, const GUI_POINT * pSrc, int NumPoints, float Angle) {
   \                     GUI_RotatePolygon:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0160A0E1           MOV      R6,R1
   \   0000000C   0270A0E1           MOV      R7,R2
   \   00000010   0310A0E1           MOV      R1,R3
     36            int x, y, j;
     37            I32 AngDEG_1000, SinHQ, CosHQ;
     38          
     39            AngDEG_1000 = (I32)((Angle * 180000) / 3.1415926f);
   \   00000014   FC009FE5           LDR      R0,??GUI_RotatePolygon_0  ;; 0x482fc800
   \   00000018   ........           BL       __aeabi_fmul
   \   0000001C   F8109FE5           LDR      R1,??GUI_RotatePolygon_0+0x4  ;; 0x40490fda
   \   00000020   ........           BL       __aeabi_fdiv
   \   00000024   ........           BL       __aeabi_f2iz
   \   00000028   0080A0E1           MOV      R8,R0
     40            CosHQ = GUI__CosHQ(AngDEG_1000);
   \   0000002C   ........           BL       GUI__CosHQ
   \   00000030   0050A0E1           MOV      R5,R0
     41            SinHQ = GUI__SinHQ(AngDEG_1000);
   \   00000034   0800A0E1           MOV      R0,R8
   \   00000038   ........           BL       GUI__SinHQ
     42            for (j = 0; j < NumPoints; j++) {
   \   0000003C   010057E3           CMP      R7,#+1
   \   00000040   330000BA           BLT      ??GUI_RotatePolygon_1
   \   00000044   012047E2           SUB      R2,R7,#+1
   \   00000048   F010D6E1           LDRSH    R1,[R6, #+0]
   \   0000004C   F2C0D6E1           LDRSH    R12,[R6, #+2]
   \   00000050   043086E2           ADD      R3,R6,#+4
   \   00000054   010012E3           TST      R2,#0x1
   \   00000058   0A00000A           BEQ      ??GUI_RotatePolygon_2
     43              x = (pSrc + j)->x;
     44              y = (pSrc + j)->y;
     45              (pDest + j)->x = (int)(( x * CosHQ + y * SinHQ) >> 16);
   \   0000005C   900C0EE0           MUL      LR,R0,R12
   \   00000060   95E12EE0           MLA      LR,R5,R1,LR
     46              (pDest + j)->y = (int)((-x * SinHQ + y * CosHQ) >> 16);
   \   00000064   950C0CE0           MUL      R12,R5,R12
   \   00000068   900101E0           MUL      R1,R0,R1
   \   0000006C   4EE8A0E1           ASR      LR,LR,#+16
   \   00000070   01104CE0           SUB      R1,R12,R1
   \   00000074   B2E0C4E0           STRH     LR,[R4], #+2
   \   00000078   4118A0E1           ASR      R1,R1,#+16
   \   0000007C   B210C4E0           STRH     R1,[R4], #+2
   \   00000080   F210D3E0           LDRSH    R1,[R3], #+2
   \   00000084   F2C0D3E0           LDRSH    R12,[R3], #+2
   \                     ??GUI_RotatePolygon_2:
   \   00000088   A220B0E1           LSRS     R2,R2,#+1
   \   0000008C   1700000A           BEQ      ??GUI_RotatePolygon_3
   \                     ??GUI_RotatePolygon_4:
   \   00000090   900C0EE0           MUL      LR,R0,R12
   \   00000094   95E12EE0           MLA      LR,R5,R1,LR
   \   00000098   950C0CE0           MUL      R12,R5,R12
   \   0000009C   900101E0           MUL      R1,R0,R1
   \   000000A0   4EE8A0E1           ASR      LR,LR,#+16
   \   000000A4   01104CE0           SUB      R1,R12,R1
   \   000000A8   B2E0C4E0           STRH     LR,[R4], #+2
   \   000000AC   4118A0E1           ASR      R1,R1,#+16
   \   000000B0   B210C4E0           STRH     R1,[R4], #+2
   \   000000B4   F210D3E0           LDRSH    R1,[R3], #+2
   \   000000B8   F2C0D3E0           LDRSH    R12,[R3], #+2
   \   000000BC   012052E2           SUBS     R2,R2,#+1
   \   000000C0   900C0EE0           MUL      LR,R0,R12
   \   000000C4   95E12EE0           MLA      LR,R5,R1,LR
   \   000000C8   950C0CE0           MUL      R12,R5,R12
   \   000000CC   900101E0           MUL      R1,R0,R1
   \   000000D0   4EE8A0E1           ASR      LR,LR,#+16
   \   000000D4   01104CE0           SUB      R1,R12,R1
   \   000000D8   B2E0C4E0           STRH     LR,[R4], #+2
   \   000000DC   4118A0E1           ASR      R1,R1,#+16
   \   000000E0   B210C4E0           STRH     R1,[R4], #+2
   \   000000E4   F210D3E0           LDRSH    R1,[R3], #+2
   \   000000E8   F2C0D3E0           LDRSH    R12,[R3], #+2
   \   000000EC   E7FFFF1A           BNE      ??GUI_RotatePolygon_4
   \                     ??GUI_RotatePolygon_3:
   \   000000F0   900C02E0           MUL      R2,R0,R12
   \   000000F4   952122E0           MLA      R2,R5,R1,R2
   \   000000F8   4228A0E1           ASR      R2,R2,#+16
   \   000000FC   B020C4E1           STRH     R2,[R4, #+0]
   \   00000100   950C02E0           MUL      R2,R5,R12
   \   00000104   900101E0           MUL      R1,R0,R1
   \   00000108   010042E0           SUB      R0,R2,R1
   \   0000010C   4008A0E1           ASR      R0,R0,#+16
   \   00000110   B200C4E1           STRH     R0,[R4, #+2]
     47            }
     48          }
   \                     ??GUI_RotatePolygon_1:
   \   00000114   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??GUI_RotatePolygon_0:
   \   00000118   00C82F48           DC32     0x482fc800
   \   0000011C   DA0F4940           DC32     0x40490fda
     49          
     50          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_RotatePolygon     24


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_RotatePolygon  288

 
 288 bytes in section .text
 
 288 bytes of CODE memory

Errors: none
Warnings: none
