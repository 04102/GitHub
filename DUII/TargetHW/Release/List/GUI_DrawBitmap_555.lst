###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:00 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawBitmap_555.c                #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawBitmap_555.c -D DEBUG=1 -D  #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_DrawBitmap_555.lst     #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_DrawBitmap_555.o        #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawBitmap_555.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LCD_DrawBitmap_555.c
     19          Purpose     : Methods for drawing a 16bpp bitmap
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _DrawBitmap
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          static void _DrawBitmap(int x0, int y0, int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
   \                     _DrawBitmap:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   28C09DE5           LDR      R12,[SP, #+40]
   \   0000000C   2CE09DE5           LDR      LR,[SP, #+44]
   \   00000010   30409DE5           LDR      R4,[SP, #+48]
   \   00000014   34509DE5           LDR      R5,[SP, #+52]
     36            GUI__DrawBitmap16bpp(x0, y0, xsize, ysize, pPixel, pLogPal, xMag, yMag, GUI_BitmapMethods555.pfIndex2Color);
   \   00000018   ........           LDR      R6,??DataTable3
   \   0000001C   0C508DE5           STR      R5,[SP, #+12]
   \   00000020   10608DE5           STR      R6,[SP, #+16]
   \   00000024   08408DE5           STR      R4,[SP, #+8]
   \   00000028   04E08DE5           STR      LR,[SP, #+4]
   \   0000002C   00C08DE5           STR      R12,[SP, #+0]
   \   00000030   ........           BL       GUI__DrawBitmap16bpp
     37          }
   \   00000034   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
     38          
     39          /*********************************************************************
     40          *
     41          *       _DrawBitmapSwapRB
     42          */

   \                                 In section .text, align 4, keep-with-next
     43          static void _DrawBitmapSwapRB(int x0, int y0, int xsize, int ysize, const U8 GUI_UNI_PTR * pPixel, const LCD_LOGPALETTE GUI_UNI_PTR * pLogPal, int xMag, int yMag) {
   \                     _DrawBitmapSwapRB:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   28C09DE5           LDR      R12,[SP, #+40]
   \   0000000C   2CE09DE5           LDR      LR,[SP, #+44]
   \   00000010   30409DE5           LDR      R4,[SP, #+48]
   \   00000014   34509DE5           LDR      R5,[SP, #+52]
     44            GUI__DrawBitmap16bpp(x0, y0, xsize, ysize, pPixel, pLogPal, xMag, yMag, GUI_BitmapMethodsM555.pfIndex2Color);
   \   00000018   ........           LDR      R6,??DataTable3_1
   \   0000001C   0C508DE5           STR      R5,[SP, #+12]
   \   00000020   10608DE5           STR      R6,[SP, #+16]
   \   00000024   08408DE5           STR      R4,[SP, #+8]
   \   00000028   04E08DE5           STR      LR,[SP, #+4]
   \   0000002C   00C08DE5           STR      R12,[SP, #+0]
   \   00000030   ........           BL       GUI__DrawBitmap16bpp
     45          }
   \   00000034   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
     46          
     47          /*********************************************************************
     48          *
     49          *       Public data
     50          *
     51          **********************************************************************
     52          */
     53          /*********************************************************************
     54          *
     55          *       GUI_BitmapMethods555
     56          */

   \                                 In section .rodata, align 4, keep-with-next
     57          const GUI_BITMAP_METHODS GUI_BitmapMethods555 = {
   \                     GUI_BitmapMethods555:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _DrawBitmap, LCD_Index2Color_555
   \              ....        
   \   00000008   00000000           DC8 0, 0, 0, 0
     58            _DrawBitmap,
     59            LCD_Index2Color_555
     60          };
     61          
     62          /*********************************************************************
     63          *
     64          *       GUI_BitmapMethodsM555
     65          */

   \                                 In section .rodata, align 4, keep-with-next
     66          const GUI_BITMAP_METHODS GUI_BitmapMethodsM555 = {
   \                     GUI_BitmapMethodsM555:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _DrawBitmapSwapRB, LCD_Index2Color_M555
   \              ....        
   \   00000008   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     LCD_Index2Color_555

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     LCD_Index2Color_M555
     67            _DrawBitmapSwapRB,
     68            LCD_Index2Color_M555
     69          };
     70          
     71          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     _DrawBitmap           40
     _DrawBitmapSwapRB     40


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     _DrawBitmap             60
     _DrawBitmapSwapRB       60
     GUI_BitmapMethods555    12
     GUI_BitmapMethodsM555   12
     ??DataTable3             4
     ??DataTable3_1           4

 
  24 bytes in section .rodata
 128 bytes in section .text
 
 128 bytes of CODE  memory
  24 bytes of CONST memory

Errors: none
Warnings: none
