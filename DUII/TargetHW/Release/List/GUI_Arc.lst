###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:08:37 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Arc.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Arc.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_Arc.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_Arc.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Arc.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIARCFloat.C
     19          Purpose     : Draw Arc routines based on floating point
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          #include <math.h>
     25          
     26          #include "GUI_Private.h"
     27          
     28          /*********************************************************************
     29          *
     30          *       Static code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       _CalcX
     37          */
     38          static void _CalcX(int*px, int y, U32 r2) {
     39            int x;
     40            U32 y2, r2y2, x2;
     41          
     42            x    = *px;
     43            y2   = (U32)y * (U32)y;
     44            r2y2 = r2 - y2;
     45            if (y2 >= r2) {
     46              *px = 0;
     47              return;
     48            }
     49            //
     50            // x2 = r2 - y2
     51            //
     52            do {
     53              x++;
     54              x2 = (U32)x * (U32)x;
     55            } while (x2 < r2y2);
     56            *px = x - 1;
     57          }
     58          
     59          /*********************************************************************
     60          *
     61          *       _CalcInterSectLin
     62          */
     63          static float _CalcInterSectLin(float y, float y0, float y1, float x0, float x1) {
     64            float Slope, r;
     65            
     66            if (y1 == y0) {
     67              r = y0;
     68            } else {
     69              Slope = (x1 - x0) / (y1 - y0);
     70              r     = (y - y0) * Slope + x0;
     71            }
     72            return r;
     73          }
     74          
     75          /*********************************************************************
     76          *
     77          *       _DrawArc
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          static void _DrawArc(int x0, int y0, int rx, int ry, int Angle0, int Angle1, int xMul, int yMul) {
   \                     _DrawArc:
   \   00000000   F34F2DE9           PUSH     {R0,R1,R4-R11,LR}
   \   00000004   ........           LDR      R0,??DataTable2
   \   00000008   4CD04DE2           SUB      SP,SP,#+76
   \   0000000C   0240A0E1           MOV      R4,R2
   \   00000010   78709DE5           LDR      R7,[SP, #+120]
   \   00000014   7C509DE5           LDR      R5,[SP, #+124]
   \   00000018   1800D0E5           LDRB     R0,[R0, #+24]
   \   0000001C   ........           BL       __aeabi_ui2f
   \   00000020   FC15A0E3           MOV      R1,#+1056964608
   \   00000024   ........           BL       __aeabi_fmul
   \   00000028   0060A0E1           MOV      R6,R0
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       __aeabi_i2f
   \   00000034   0080A0E1           MOV      R8,R0
   \   00000038   0610A0E1           MOV      R1,R6
   \   0000003C   ........           BL       __aeabi_fsub
   \   00000040   0040A0E1           MOV      R4,R0
     80            float afx[4], afy[4], ri, ro;
     81            I32   Sin0_HQ, Sin1_HQ, Cos0_HQ, Cos1_HQ;
     82            U32   ri2, ro2;
     83            int   y, yMax, yMin;
     84          
     85            ri      = rx - ((float)GUI_Context.PenSize) / 2;
     86            ro      = rx + ((float)GUI_Context.PenSize) / 2;
   \   00000044   0800A0E1           MOV      R0,R8
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   ........           BL       __aeabi_fadd
     87            Sin0_HQ = GUI__SinHQ(Angle0 * 1000); 
   \   00000050   FA8FA0E3           MOV      R8,#+1000
   \   00000054   980709E0           MUL      R9,R8,R7
   \   00000058   0060A0E1           MOV      R6,R0
   \   0000005C   0900A0E1           MOV      R0,R9
   \   00000060   ........           BL       GUI__SinHQ
     88            Sin1_HQ = GUI__SinHQ(Angle1 * 1000); 
   \   00000064   98050AE0           MUL      R10,R8,R5
   \   00000068   0070A0E1           MOV      R7,R0
   \   0000006C   0A00A0E1           MOV      R0,R10
   \   00000070   ........           BL       GUI__SinHQ
   \   00000074   0050A0E1           MOV      R5,R0
     89            Cos0_HQ = GUI__CosHQ(Angle0 * 1000); 
   \   00000078   0900A0E1           MOV      R0,R9
   \   0000007C   ........           BL       GUI__CosHQ
   \   00000080   0090A0E1           MOV      R9,R0
     90            Cos1_HQ = GUI__CosHQ(Angle1 * 1000); 
   \   00000084   0A00A0E1           MOV      R0,R10
   \   00000088   ........           BL       GUI__CosHQ
   \   0000008C   0080A0E1           MOV      R8,R0
     91            ri2     = (U32)(ri * ri);
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   0410A0E1           MOV      R1,R4
   \   00000098   ........           BL       __aeabi_fmul
   \   0000009C   ........           BL       __aeabi_f2uiz
   \   000000A0   24008DE5           STR      R0,[SP, #+36]
     92            ro2     = (U32)(ro * ro);
   \   000000A4   0600A0E1           MOV      R0,R6
   \   000000A8   0610A0E1           MOV      R1,R6
   \   000000AC   ........           BL       __aeabi_fmul
   \   000000B0   ........           BL       __aeabi_f2uiz
   \   000000B4   20008DE5           STR      R0,[SP, #+32]
     93            afy[0]  = (float)((I32)(ri * Sin0_HQ) >> 16);
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           BL       __aeabi_i2f
   \   000000C0   0070A0E1           MOV      R7,R0
   \   000000C4   0410A0E1           MOV      R1,R4
   \   000000C8   ........           BL       __aeabi_fmul
   \   000000CC   ........           BL       __aeabi_f2iz
   \   000000D0   4008A0E1           ASR      R0,R0,#+16
   \   000000D4   ........           BL       __aeabi_i2f
   \   000000D8   28008DE5           STR      R0,[SP, #+40]
     94            afy[1]  = (float)((I32)(ro * Sin0_HQ) >> 16);
   \   000000DC   0700A0E1           MOV      R0,R7
   \   000000E0   0610A0E1           MOV      R1,R6
   \   000000E4   ........           BL       __aeabi_fmul
   \   000000E8   ........           BL       __aeabi_f2iz
   \   000000EC   4008A0E1           ASR      R0,R0,#+16
   \   000000F0   ........           BL       __aeabi_i2f
   \   000000F4   28708DE2           ADD      R7,SP,#+40
   \   000000F8   0C008DE5           STR      R0,[SP, #+12]
   \   000000FC   040087E5           STR      R0,[R7, #+4]
     95            afy[2]  = (float)((I32)(ri * Sin1_HQ) >> 16);
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   ........           BL       __aeabi_i2f
   \   00000108   00A0A0E1           MOV      R10,R0
   \   0000010C   0410A0E1           MOV      R1,R4
   \   00000110   ........           BL       __aeabi_fmul
   \   00000114   ........           BL       __aeabi_f2iz
   \   00000118   4008A0E1           ASR      R0,R0,#+16
   \   0000011C   ........           BL       __aeabi_i2f
   \   00000120   0050A0E1           MOV      R5,R0
   \   00000124   085087E5           STR      R5,[R7, #+8]
     96            afy[3]  = (float)((I32)(ro * Sin1_HQ) >> 16);
   \   00000128   0A00A0E1           MOV      R0,R10
   \   0000012C   0610A0E1           MOV      R1,R6
   \   00000130   ........           BL       __aeabi_fmul
   \   00000134   ........           BL       __aeabi_f2iz
   \   00000138   4008A0E1           ASR      R0,R0,#+16
   \   0000013C   ........           BL       __aeabi_i2f
   \   00000140   1C008DE5           STR      R0,[SP, #+28]
   \   00000144   0C0087E5           STR      R0,[R7, #+12]
     97            afx[0]  = (float)((I32)(ri * Cos0_HQ) >> 16);
   \   00000148   0900A0E1           MOV      R0,R9
   \   0000014C   ........           BL       __aeabi_i2f
   \   00000150   0090A0E1           MOV      R9,R0
   \   00000154   0410A0E1           MOV      R1,R4
   \   00000158   ........           BL       __aeabi_fmul
   \   0000015C   ........           BL       __aeabi_f2iz
   \   00000160   4008A0E1           ASR      R0,R0,#+16
   \   00000164   ........           BL       __aeabi_i2f
   \   00000168   38008DE5           STR      R0,[SP, #+56]
     98            afx[1]  = (float)((I32)(ro * Cos0_HQ) >> 16);
   \   0000016C   0900A0E1           MOV      R0,R9
   \   00000170   0610A0E1           MOV      R1,R6
   \   00000174   ........           BL       __aeabi_fmul
   \   00000178   ........           BL       __aeabi_f2iz
   \   0000017C   4008A0E1           ASR      R0,R0,#+16
   \   00000180   ........           BL       __aeabi_i2f
   \   00000184   38908DE2           ADD      R9,SP,#+56
   \   00000188   18008DE5           STR      R0,[SP, #+24]
   \   0000018C   040089E5           STR      R0,[R9, #+4]
     99            afx[2]  = (float)((I32)(ri * Cos1_HQ) >> 16);
   \   00000190   0800A0E1           MOV      R0,R8
   \   00000194   ........           BL       __aeabi_i2f
   \   00000198   0080A0E1           MOV      R8,R0
   \   0000019C   0410A0E1           MOV      R1,R4
   \   000001A0   ........           BL       __aeabi_fmul
   \   000001A4   ........           BL       __aeabi_f2iz
   \   000001A8   4008A0E1           ASR      R0,R0,#+16
   \   000001AC   ........           BL       __aeabi_i2f
   \   000001B0   14008DE5           STR      R0,[SP, #+20]
   \   000001B4   080089E5           STR      R0,[R9, #+8]
    100            afx[3]  = (float)((I32)(ro * Cos1_HQ) >> 16);
   \   000001B8   0800A0E1           MOV      R0,R8
   \   000001BC   0610A0E1           MOV      R1,R6
   \   000001C0   ........           BL       __aeabi_fmul
   \   000001C4   ........           BL       __aeabi_f2iz
   \   000001C8   4008A0E1           ASR      R0,R0,#+16
   \   000001CC   ........           BL       __aeabi_i2f
   \   000001D0   10008DE5           STR      R0,[SP, #+16]
   \   000001D4   0C0089E5           STR      R0,[R9, #+12]
    101            yMin    = (int)ceil(afy[0]);
   \   000001D8   28009DE5           LDR      R0,[SP, #+40]
   \   000001DC   ........           BL       __aeabi_f2d
   \   000001E0   ........           BL       ceil
   \   000001E4   ........           BL       __aeabi_d2iz
   \   000001E8   08008DE5           STR      R0,[SP, #+8]
    102            yMax    = (int)floor(afy[3]);
   \   000001EC   0C0097E5           LDR      R0,[R7, #+12]
   \   000001F0   ........           BL       __aeabi_f2d
   \   000001F4   ........           BL       floor
   \   000001F8   ........           BL       __aeabi_d2iz
    103            //
    104            // Use Clipping rect to reduce calculation (if possible)
    105            //
    106            if (GUI_Context.pClipRect_HL) {
   \   000001FC   ........           LDR      R1,??DataTable2
   \   00000200   141091E5           LDR      R1,[R1, #+20]
   \   00000204   000051E3           CMP      R1,#+0
   \   00000208   1B00000A           BEQ      ??_DrawArc_0
    107              if (yMul == 1) {
   \   0000020C   84209DE5           LDR      R2,[SP, #+132]
   \   00000210   010052E3           CMP      R2,#+1
   \   00000214   0B00001A           BNE      ??_DrawArc_1
    108                if (yMax > (GUI_Context.pClipRect_HL->y1 - y0)) {
   \   00000218   F620D1E1           LDRSH    R2,[R1, #+6]
   \   0000021C   50309DE5           LDR      R3,[SP, #+80]
    109                  yMax = (GUI_Context.pClipRect_HL->y1 - y0);
    110                }
    111                if (yMin < (GUI_Context.pClipRect_HL->y0 - y0)) {
   \   00000220   F210D1E1           LDRSH    R1,[R1, #+2]
   \   00000224   032042E0           SUB      R2,R2,R3
   \   00000228   000052E1           CMP      R2,R0
   \   0000022C   0200A0B1           MOVLT    R0,R2
   \   00000230   08209DE5           LDR      R2,[SP, #+8]
   \   00000234   031041E0           SUB      R1,R1,R3
   \   00000238   010052E1           CMP      R2,R1
   \   0000023C   0E0000AA           BGE      ??_DrawArc_0
    112                  yMin = (GUI_Context.pClipRect_HL->y0 - y0);
   \   00000240   08108DE5           STR      R1,[SP, #+8]
   \   00000244   0C0000EA           B        ??_DrawArc_0
    113                }
    114              }
    115              if (yMul == -1) {
   \                     ??_DrawArc_1:
   \   00000248   010072E3           CMN      R2,#+1
   \   0000024C   0A00001A           BNE      ??_DrawArc_0
    116                if (yMin > (GUI_Context.pClipRect_HL->y1 - y0)) {
   \   00000250   F620D1E1           LDRSH    R2,[R1, #+6]
   \   00000254   50309DE5           LDR      R3,[SP, #+80]
   \   00000258   032042E0           SUB      R2,R2,R3
   \   0000025C   08309DE5           LDR      R3,[SP, #+8]
   \   00000260   030052E1           CMP      R2,R3
    117                  yMin = (GUI_Context.pClipRect_HL->y1 - y0);
   \   00000264   08208DB5           STRLT    R2,[SP, #+8]
    118                }
    119                if (yMax < (GUI_Context.pClipRect_HL->y0 - y0)) {
   \   00000268   F210D1E1           LDRSH    R1,[R1, #+2]
   \   0000026C   50209DE5           LDR      R2,[SP, #+80]
   \   00000270   021041E0           SUB      R1,R1,R2
   \   00000274   010050E1           CMP      R0,R1
    120                  yMax = (GUI_Context.pClipRect_HL->y0 - y0);
   \   00000278   0100A0B1           MOVLT    R0,R1
    121                }
    122              }
    123            }
    124            //
    125            // Start drawing lines ...
    126            //
    127            {
    128            int xMinDisp, xMaxDisp, xMin = 0, xMax = 0;
    129              for (y = yMax; y >= yMin; y--) {
   \                     ??_DrawArc_0:
   \   0000027C   0060A0E1           MOV      R6,R0
   \   00000280   08009DE5           LDR      R0,[SP, #+8]
   \   00000284   0070A0E3           MOV      R7,#+0
   \   00000288   0080A0E3           MOV      R8,#+0
   \   0000028C   000056E1           CMP      R6,R0
   \   00000290   730000BA           BLT      ??_DrawArc_2
    130                _CalcX(&xMin, y, ri2);
   \                     ??_DrawArc_3:
   \   00000294   960600E0           MUL      R0,R6,R6
   \   00000298   24109DE5           LDR      R1,[SP, #+36]
   \   0000029C   24209DE5           LDR      R2,[SP, #+36]
   \   000002A0   001041E0           SUB      R1,R1,R0
   \   000002A4   020050E1           CMP      R0,R2
   \   000002A8   0500002A           BCS      ??_DrawArc_4
   \                     ??_DrawArc_5:
   \   000002AC   017087E2           ADD      R7,R7,#+1
   \   000002B0   970702E0           MUL      R2,R7,R7
   \   000002B4   010052E1           CMP      R2,R1
   \   000002B8   FBFFFF3A           BCC      ??_DrawArc_5
   \   000002BC   017047E2           SUB      R7,R7,#+1
   \   000002C0   000000EA           B        ??_DrawArc_6
   \                     ??_DrawArc_4:
   \   000002C4   0070A0E3           MOV      R7,#+0
    131                _CalcX(&xMax, y, ro2);
   \                     ??_DrawArc_6:
   \   000002C8   20109DE5           LDR      R1,[SP, #+32]
   \   000002CC   20209DE5           LDR      R2,[SP, #+32]
   \   000002D0   001041E0           SUB      R1,R1,R0
   \   000002D4   020050E1           CMP      R0,R2
   \   000002D8   0500002A           BCS      ??_DrawArc_7
   \                     ??_DrawArc_8:
   \   000002DC   018088E2           ADD      R8,R8,#+1
   \   000002E0   980800E0           MUL      R0,R8,R8
   \   000002E4   010050E1           CMP      R0,R1
   \   000002E8   FBFFFF3A           BCC      ??_DrawArc_8
   \   000002EC   018048E2           SUB      R8,R8,#+1
   \   000002F0   000000EA           B        ??_DrawArc_9
   \                     ??_DrawArc_7:
   \   000002F4   0080A0E3           MOV      R8,#+0
    132                if ((float)y < afy[1]) {
   \                     ??_DrawArc_9:
   \   000002F8   0600A0E1           MOV      R0,R6
   \   000002FC   ........           BL       __aeabi_i2f
   \   00000300   0C109DE5           LDR      R1,[SP, #+12]
   \   00000304   ........           BL       __aeabi_cfcmple
   \   00000308   00B0A0E1           MOV      R11,R0
   \   0000030C   1C00002A           BCS      ??_DrawArc_10
    133                  xMaxDisp = (int)_CalcInterSectLin(y, afy[0], afy[1], afx[0], afx[1]);
   \   00000310   28A09DE5           LDR      R10,[SP, #+40]
   \   00000314   0190A0E1           MOV      R9,R1
   \   00000318   0900A0E1           MOV      R0,R9
   \   0000031C   0A10A0E1           MOV      R1,R10
   \   00000320   ........           BL       __aeabi_cfcmpeq
   \   00000324   38409DE5           LDR      R4,[SP, #+56]
   \   00000328   1100000A           BEQ      ??_DrawArc_11
   \   0000032C   0B00A0E1           MOV      R0,R11
   \   00000330   ........           BL       __aeabi_fsub
   \   00000334   04008DE5           STR      R0,[SP, #+4]
   \   00000338   18009DE5           LDR      R0,[SP, #+24]
   \   0000033C   0410A0E1           MOV      R1,R4
   \   00000340   ........           BL       __aeabi_fsub
   \   00000344   00008DE5           STR      R0,[SP, #+0]
   \   00000348   0900A0E1           MOV      R0,R9
   \   0000034C   0A10A0E1           MOV      R1,R10
   \   00000350   ........           BL       __aeabi_fsub
   \   00000354   0010A0E1           MOV      R1,R0
   \   00000358   00009DE5           LDR      R0,[SP, #+0]
   \   0000035C   ........           BL       __aeabi_fdiv
   \   00000360   04109DE5           LDR      R1,[SP, #+4]
   \   00000364   ........           BL       __aeabi_fmul
   \   00000368   0410A0E1           MOV      R1,R4
   \   0000036C   ........           BL       __aeabi_fadd
   \   00000370   000000EA           B        ??_DrawArc_12
   \                     ??_DrawArc_11:
   \   00000374   0A00A0E1           MOV      R0,R10
    134                } else {
   \                     ??_DrawArc_12:
   \   00000378   ........           BL       __aeabi_f2iz
   \   0000037C   0090A0E1           MOV      R9,R0
   \   00000380   000000EA           B        ??_DrawArc_13
    135                  xMaxDisp = xMax;      
   \                     ??_DrawArc_10:
   \   00000384   0890A0E1           MOV      R9,R8
    136                }
    137                if ((float)y > afy[2]) {
   \                     ??_DrawArc_13:
   \   00000388   0500A0E1           MOV      R0,R5
   \   0000038C   0B10A0E1           MOV      R1,R11
   \   00000390   ........           BL       __aeabi_cfcmple
   \   00000394   1B00002A           BCS      ??_DrawArc_14
    138                  xMinDisp = (int)_CalcInterSectLin(y, afy[2], afy[3], afx[2], afx[3]);
   \   00000398   14109DE5           LDR      R1,[SP, #+20]
   \   0000039C   1CA09DE5           LDR      R10,[SP, #+28]
   \   000003A0   04108DE5           STR      R1,[SP, #+4]
   \   000003A4   0A00A0E1           MOV      R0,R10
   \   000003A8   0510A0E1           MOV      R1,R5
   \   000003AC   ........           BL       __aeabi_cfcmpeq
   \   000003B0   1100000A           BEQ      ??_DrawArc_15
   \   000003B4   0B00A0E1           MOV      R0,R11
   \   000003B8   ........           BL       __aeabi_fsub
   \   000003BC   00008DE5           STR      R0,[SP, #+0]
   \   000003C0   10009DE5           LDR      R0,[SP, #+16]
   \   000003C4   04109DE5           LDR      R1,[SP, #+4]
   \   000003C8   ........           BL       __aeabi_fsub
   \   000003CC   00B0A0E1           MOV      R11,R0
   \   000003D0   0A00A0E1           MOV      R0,R10
   \   000003D4   0510A0E1           MOV      R1,R5
   \   000003D8   ........           BL       __aeabi_fsub
   \   000003DC   0010A0E1           MOV      R1,R0
   \   000003E0   0B00A0E1           MOV      R0,R11
   \   000003E4   ........           BL       __aeabi_fdiv
   \   000003E8   00109DE5           LDR      R1,[SP, #+0]
   \   000003EC   ........           BL       __aeabi_fmul
   \   000003F0   04109DE5           LDR      R1,[SP, #+4]
   \   000003F4   ........           BL       __aeabi_fadd
   \   000003F8   000000EA           B        ??_DrawArc_16
   \                     ??_DrawArc_15:
   \   000003FC   0500A0E1           MOV      R0,R5
    139                } else {
   \                     ??_DrawArc_16:
   \   00000400   ........           BL       __aeabi_f2iz
   \   00000404   000000EA           B        ??_DrawArc_17
    140                  xMinDisp = xMin;      
   \                     ??_DrawArc_14:
   \   00000408   0700A0E1           MOV      R0,R7
    141                }
    142                if (xMul > 0) {
   \                     ??_DrawArc_17:
   \   0000040C   ........           LDR      R1,??DataTable2
   \   00000410   50209DE5           LDR      R2,[SP, #+80]
   \   00000414   941091E5           LDR      R1,[R1, #+148]
   \   00000418   003091E5           LDR      R3,[R1, #+0]
   \   0000041C   84109DE5           LDR      R1,[SP, #+132]
   \   00000420   962121E0           MLA      R1,R6,R1,R2
   \   00000424   80209DE5           LDR      R2,[SP, #+128]
   \   00000428   010052E3           CMP      R2,#+1
   \   0000042C   4C209DE5           LDR      R2,[SP, #+76]
   \   00000430   030000BA           BLT      ??_DrawArc_18
    143                  LCD_HL_DrawHLine( xMinDisp + x0, yMul * y + y0,  xMaxDisp + x0);
   \   00000434   4CC09DE5           LDR      R12,[SP, #+76]
   \   00000438   092082E0           ADD      R2,R2,R9
   \   0000043C   00008CE0           ADD      R0,R12,R0
   \   00000440   020000EA           B        ??_DrawArc_19
    144                } else {
    145                  LCD_HL_DrawHLine(-xMaxDisp + x0, yMul * y + y0, -xMinDisp + x0);
   \                     ??_DrawArc_18:
   \   00000444   002042E0           SUB      R2,R2,R0
   \   00000448   4C009DE5           LDR      R0,[SP, #+76]
   \   0000044C   090040E0           SUB      R0,R0,R9
   \                     ??_DrawArc_19:
   \   00000450   33FF2FE1           BLX      R3
    146                }
    147              }
   \   00000454   08009DE5           LDR      R0,[SP, #+8]
   \   00000458   016046E2           SUB      R6,R6,#+1
   \   0000045C   000056E1           CMP      R6,R0
   \   00000460   8BFFFFAA           BGE      ??_DrawArc_3
    148            }
    149          
    150          #if 0  /* Test code */
    151          {
    152            int i;
    153            GUI_SetColor(GUI_WHITE); 
    154            for (i = 0; i < 4; i++) {
    155              LCD_HL_DrawPixel(afx[i] + x0, afy[i] + y0);
    156            }
    157          }
    158          #endif
    159          
    160            GUI_USE_PARA(ry);
    161          }
   \                     ??_DrawArc_2:
   \   00000464   54D08DE2           ADD      SP,SP,#+84       ;; stack cleaning
   \   00000468   F08FBDE8           POP      {R4-R11,PC}      ;; return
    162          
    163          /*********************************************************************
    164          *
    165          *       Public code
    166          *
    167          **********************************************************************
    168          */
    169          /*********************************************************************
    170          *
    171          *       GL_DrawArc
    172          */

   \                                 In section .text, align 4, keep-with-next
    173          void GL_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
   \                     GL_DrawArc:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   30009DE5           LDR      R0,[SP, #+48]
   \   00000014   34109DE5           LDR      R1,[SP, #+52]
    174            int aEnd;
    175            a0 += 360;
   \   00000018   5A8F80E2           ADD      R8,R0,#+360
   \   0000001C   0260A0E1           MOV      R6,R2
   \   00000020   0370A0E1           MOV      R7,R3
    176            a1 += 360;
   \   00000024   5A9F81E2           ADD      R9,R1,#+360
   \   00000028   5A0F58E3           CMP      R8,#+360
   \   0000002C   1F0000BA           BLT      ??GL_DrawArc_0
   \   00000030   ........           LDR      R0,??DataTable2_1  ;; 0xb60b60b7
   \   00000034   9810C0E0           SMULL    R1,R0,R8,R0
   \   00000038   6710E0E3           MVN      R1,#+103
   \   0000003C   080080E0           ADD      R0,R0,R8
   \   00000040   4004B0E1           ASRS     R0,R0,#+8
   \   00000044   01008042           ADDMI    R0,R0,#+1
   \   00000048   401FC1E3           BIC      R1,R1,#0x100
   \   0000004C   910000E0           MUL      R0,R1,R0
   \   00000050   099080E0           ADD      R9,R0,R9
   \   00000054   088080E0           ADD      R8,R0,R8
   \   00000058   140000EA           B        ??GL_DrawArc_0
    177            while (a0 >= 360) {
    178              a0 -= 360;
    179              a1 -= 360;
    180            }
    181          /* Do first quadrant 0-90 degree */
    182          DoFirst:
    183            if (a1 <= 0) {
    184              return;
    185            }
    186            if (a0 < 90) {
    187              if (a0 < 0) {
    188                a0 = 0;
    189              }
    190              aEnd = (a1 < 90) ? a1 : 90;
    191              _DrawArc(x0, y0, rx, ry, a0, aEnd, 1, -1);
    192            }
    193            a1 -= 90;
    194            a0 -= 90;
    195          /* Do second quadrant 90-180 degree */
    196            if (a1 <= 0) {
    197              return;
    198            }
    199            if (a0 < 90) {
    200              if (a0 < 0) {
    201                a0 = 0;
    202              }
    203              aEnd = (a1 < 90) ? a1 : 90;
    204              _DrawArc(x0, y0, rx, ry, 90 - aEnd, 90 - a0, -1, -1);
    205            }
    206            a1 -= 90;
    207            a0 -= 90;
    208          /* Do third quadrant 180-270 degree */
    209            if (a1 <= 0) {
    210              return;
    211            }
    212            if (a0 < 90) {
    213              if (a0 < 0) {
    214                a0 = 0;
    215              }
    216              aEnd = (a1 < 90) ? a1 : 90;
    217              _DrawArc(x0, y0, rx, ry, a0, aEnd, -1, 1);
    218            }
    219            a1 -= 90;
    220            a0 -= 90;
    221          /* Do last quadrant 270-360 degree */
    222            if (a1 <= 0) {
    223              return;
    224            }
    225            if (a0 < 90) {
   \                     ??GL_DrawArc_1:
   \   0000005C   5A0058E3           CMP      R8,#+90
   \   00000060   100000AA           BGE      ??GL_DrawArc_2
    226              if (a0 < 0) {
   \   00000064   000058E3           CMP      R8,#+0
    227                a0 = 0;
   \   00000068   0080A043           MOVMI    R8,#+0
    228              }
    229              aEnd = (a1 < 90) ? a1 : 90;
   \   0000006C   5A00A0E3           MOV      R0,#+90
   \   00000070   5A0059E3           CMP      R9,#+90
    230              _DrawArc(x0, y0, rx, ry, 90 - aEnd, 90 - a0, 1, 1);
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   0900A0D1           MOVLE    R0,R9
   \   0000007C   0C108DE5           STR      R1,[SP, #+12]
   \   00000080   08108DE5           STR      R1,[SP, #+8]
   \   00000084   5A1068E2           RSB      R1,R8,#+90
   \   00000088   5A0060E2           RSB      R0,R0,#+90
   \   0000008C   04108DE5           STR      R1,[SP, #+4]
   \   00000090   00008DE5           STR      R0,[SP, #+0]
   \   00000094   0730A0E1           MOV      R3,R7
   \   00000098   0620A0E1           MOV      R2,R6
   \   0000009C   0510A0E1           MOV      R1,R5
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           BL       _DrawArc
    231            }
    232            a1 -= 90;
   \                     ??GL_DrawArc_2:
   \   000000A8   5A9049E2           SUB      R9,R9,#+90
    233            a0 -= 90;
   \   000000AC   5A8048E2           SUB      R8,R8,#+90
    234            goto DoFirst;
   \                     ??GL_DrawArc_0:
   \   000000B0   010059E3           CMP      R9,#+1
   \   000000B4   420000BA           BLT      ??GL_DrawArc_3
   \   000000B8   5A0058E3           CMP      R8,#+90
   \   000000BC   0F0000AA           BGE      ??GL_DrawArc_4
   \   000000C0   000058E3           CMP      R8,#+0
   \   000000C4   0080A043           MOVMI    R8,#+0
   \   000000C8   0010E0E3           MVN      R1,#+0
   \   000000CC   5A00A0E3           MOV      R0,#+90
   \   000000D0   5A0059E3           CMP      R9,#+90
   \   000000D4   0C108DE5           STR      R1,[SP, #+12]
   \   000000D8   0900A0D1           MOVLE    R0,R9
   \   000000DC   0110A0E3           MOV      R1,#+1
   \   000000E0   08108DE5           STR      R1,[SP, #+8]
   \   000000E4   04008DE5           STR      R0,[SP, #+4]
   \   000000E8   00808DE5           STR      R8,[SP, #+0]
   \   000000EC   0730A0E1           MOV      R3,R7
   \   000000F0   0620A0E1           MOV      R2,R6
   \   000000F4   0510A0E1           MOV      R1,R5
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       _DrawArc
   \                     ??GL_DrawArc_4:
   \   00000100   5A9049E2           SUB      R9,R9,#+90
   \   00000104   5A8048E2           SUB      R8,R8,#+90
   \   00000108   010059E3           CMP      R9,#+1
   \   0000010C   2C0000BA           BLT      ??GL_DrawArc_3
   \   00000110   5A0058E3           CMP      R8,#+90
   \   00000114   100000AA           BGE      ??GL_DrawArc_5
   \   00000118   000058E3           CMP      R8,#+0
   \   0000011C   0080A043           MOVMI    R8,#+0
   \   00000120   5A00A0E3           MOV      R0,#+90
   \   00000124   5A0059E3           CMP      R9,#+90
   \   00000128   0010E0E3           MVN      R1,#+0
   \   0000012C   0900A0D1           MOVLE    R0,R9
   \   00000130   0C108DE5           STR      R1,[SP, #+12]
   \   00000134   08108DE5           STR      R1,[SP, #+8]
   \   00000138   5A1068E2           RSB      R1,R8,#+90
   \   0000013C   5A0060E2           RSB      R0,R0,#+90
   \   00000140   04108DE5           STR      R1,[SP, #+4]
   \   00000144   00008DE5           STR      R0,[SP, #+0]
   \   00000148   0730A0E1           MOV      R3,R7
   \   0000014C   0620A0E1           MOV      R2,R6
   \   00000150   0510A0E1           MOV      R1,R5
   \   00000154   0400A0E1           MOV      R0,R4
   \   00000158   ........           BL       _DrawArc
   \                     ??GL_DrawArc_5:
   \   0000015C   5A9049E2           SUB      R9,R9,#+90
   \   00000160   5A8048E2           SUB      R8,R8,#+90
   \   00000164   010059E3           CMP      R9,#+1
   \   00000168   150000BA           BLT      ??GL_DrawArc_3
   \   0000016C   5A0058E3           CMP      R8,#+90
   \   00000170   0F0000AA           BGE      ??GL_DrawArc_6
   \   00000174   000058E3           CMP      R8,#+0
   \   00000178   0080A043           MOVMI    R8,#+0
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   5A00A0E3           MOV      R0,#+90
   \   00000184   5A0059E3           CMP      R9,#+90
   \   00000188   0C108DE5           STR      R1,[SP, #+12]
   \   0000018C   0900A0D1           MOVLE    R0,R9
   \   00000190   001061E2           RSB      R1,R1,#+0
   \   00000194   08108DE5           STR      R1,[SP, #+8]
   \   00000198   04008DE5           STR      R0,[SP, #+4]
   \   0000019C   00808DE5           STR      R8,[SP, #+0]
   \   000001A0   0730A0E1           MOV      R3,R7
   \   000001A4   0620A0E1           MOV      R2,R6
   \   000001A8   0510A0E1           MOV      R1,R5
   \   000001AC   0400A0E1           MOV      R0,R4
   \   000001B0   ........           BL       _DrawArc
   \                     ??GL_DrawArc_6:
   \   000001B4   5A9049E2           SUB      R9,R9,#+90
   \   000001B8   5A8048E2           SUB      R8,R8,#+90
   \   000001BC   010059E3           CMP      R9,#+1
   \   000001C0   A5FFFFAA           BGE      ??GL_DrawArc_1
   \                     ??GL_DrawArc_3:
   \   000001C4   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000001C8   F083BDE8           POP      {R4-R9,PC}       ;; return
    235          }
    236          
    237          /*********************************************************************
    238          *
    239          *       GUI_DrawArc
    240          */

   \                                 In section .text, align 4, keep-with-next
    241          void GUI_DrawArc(int x0, int y0, int rx, int ry, int a0, int a1) {
   \                     GUI_DrawArc:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0090A0E1           MOV      R9,R0
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   0240A0E1           MOV      R4,R2
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   28609DE5           LDR      R6,[SP, #+40]
   \   0000001C   2C709DE5           LDR      R7,[SP, #+44]
    242            GUI_LOCK();
   \   00000020   ........           BL       GUI_Lock
    243            #if (GUI_WINSUPPORT)
    244              WM_ADDORG(x0,y0);
   \   00000024   ........           LDR      R0,??DataTable2
   \   00000028   401090E5           LDR      R1,[R0, #+64]
   \   0000002C   440090E5           LDR      R0,[R0, #+68]
   \   00000030   099081E0           ADD      R9,R1,R9
   \   00000034   088080E0           ADD      R8,R0,R8
    245              WM_ITERATE_START(NULL) {
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   ........           BL       WM__InitIVRSearch
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0900000A           BEQ      ??GUI_DrawArc_0
    246            #endif
    247            GL_DrawArc( x0, y0, rx, ry, a0, a1);
   \                     ??GUI_DrawArc_1:
   \   00000048   04708DE5           STR      R7,[SP, #+4]
   \   0000004C   00608DE5           STR      R6,[SP, #+0]
   \   00000050   0530A0E1           MOV      R3,R5
   \   00000054   0420A0E1           MOV      R2,R4
   \   00000058   0810A0E1           MOV      R1,R8
   \   0000005C   0900A0E1           MOV      R0,R9
   \   00000060   ........           BL       GL_DrawArc
    248            #if (GUI_WINSUPPORT)
    249              } WM_ITERATE_END();
   \   00000064   ........           BL       WM__GetNextIVR
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   F5FFFF1A           BNE      ??GUI_DrawArc_1
    250            #endif
    251            GUI_UNLOCK();
   \                     ??GUI_DrawArc_0:
   \   00000070   0CD08DE2           ADD      SP,SP,#+12
   \   00000074   F043BDE8           POP      {R4-R9,LR}
   \   00000078   ........           B        GUI_Unlock       ;; tailcall
    252          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   B7600BB6           DC32     0xb60b60b7
    253          
    254          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     GL_DrawArc      48
     GUI_DrawArc     40
     _DrawArc       120


   Section sizes:

     Function/Label Bytes
     -------------- -----
     _DrawArc       1132
     GL_DrawArc      460
     GUI_DrawArc     124
     ??DataTable2      4
     ??DataTable2_1    4

 
 1 724 bytes in section .text
 
 1 724 bytes of CODE memory

Errors: none
Warnings: none
