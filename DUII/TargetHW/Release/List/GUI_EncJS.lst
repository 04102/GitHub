###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_EncJS.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_EncJS.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_EncJS.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_EncJS.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_EncJS.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIEncSJ.C
     19          Purpose     : Implementation of Shift JIS decoding
     20          ----------------------------------------------------------------------
     21          Version-Date---Author-Explanation
     22          ---------------------------END-OF-HEADER------------------------------
     23          */
     24          
     25          #include <stddef.h>           /* needed for definition of NULL */
     26          
     27          #include "GUI_Private.h"
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       DB2SJIS
     38          */
     39          static U16 DB2SJIS(U8 Byte0, U8 Byte1) {
     40            return Byte1 | (((U16)Byte0)<<8);
     41          }
     42          
     43          /*********************************************************************
     44          *
     45          *       _GetLineDistX_SJIS
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          static int _GetLineDistX_SJIS(const char GUI_UNI_PTR *s, int Len) {
   \                     _GetLineDistX_SJIS:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     48            int Dist =0;
   \   0000000C   0060A0E3           MOV      R6,#+0
     49            if (s) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0300001A           BNE      ??_GetLineDistX_SJIS_0
     50              U8 c0;
     51              while (((c0=*(const U8*)s) !=0) && Len >=0) {
     52                s++; Len--;
     53                if (c0 > 127) {
     54                  U8  c1 = *(const U8*)s++;
     55                  Len--;
     56                  Dist += GUI_GetCharDistX(DB2SJIS(c0, c1));
     57                } else {
     58                  Dist += GUI_GetCharDistX(c0);
     59                }
     60              }
     61            }
     62            return Dist;
   \                     ??_GetLineDistX_SJIS_1:
   \   00000018   0600A0E1           MOV      R0,R6
   \   0000001C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??_GetLineDistX_SJIS_2:
   \   00000020   ........           BL       GUI_GetCharDistX
   \   00000024   066080E0           ADD      R6,R0,R6
   \                     ??_GetLineDistX_SJIS_0:
   \   00000028   0110D4E4           LDRB     R1,[R4], #+1
   \   0000002C   0100B0E1           MOVS     R0,R1
   \   00000030   F8FFFF0A           BEQ      ??_GetLineDistX_SJIS_1
   \   00000034   000055E3           CMP      R5,#+0
   \   00000038   F6FFFF4A           BMI      ??_GetLineDistX_SJIS_1
   \   0000003C   800051E3           CMP      R1,#+128
   \   00000040   0110D4A4           LDRBGE   R1,[R4], #+1
   \   00000044   015045E2           SUB      R5,R5,#+1
   \   00000048   015045A2           SUBGE    R5,R5,#+1
   \   0000004C   000481A1           ORRGE    R0,R1,R0, LSL #+8
   \   00000050   F2FFFFEA           B        ??_GetLineDistX_SJIS_2
     63          }
     64          
     65          /*********************************************************************
     66          *
     67          *       _GetLineLen_SJIS
     68          * Purpose:
     69          *   Returns the number of characters in a string.
     70          *
     71          * NOTE:
     72          *   The return value can be used as offset into the
     73          *   string, which means that double characters count double
     74          */

   \                                 In section .text, align 4, keep-with-next
     75          static int _GetLineLen_SJIS(const char GUI_UNI_PTR *s, int MaxLen) {
     76            int Len =0;
   \                     _GetLineLen_SJIS:
   \   00000000   0020A0E3           MOV      R2,#+0
   \   00000004   020000EA           B        ??_GetLineLen_SJIS_0
     77            U8 c0;
     78            while (((c0=*(const U8*)s) !=0) && Len < MaxLen) {
     79              s++;
     80              if (c0 > 127) {
     81                Len++; s++;
   \                     ??_GetLineLen_SJIS_1:
   \   00000008   012082E2           ADD      R2,R2,#+1
   \   0000000C   010080E2           ADD      R0,R0,#+1
     82              } else {
     83                switch (c0) {
     84                case '\n': return Len;
     85                }
     86              }
     87              Len++;
   \                     ??_GetLineLen_SJIS_2:
   \   00000010   012082E2           ADD      R2,R2,#+1
   \                     ??_GetLineLen_SJIS_0:
   \   00000014   0130D0E4           LDRB     R3,[R0], #+1
   \   00000018   000053E3           CMP      R3,#+0
   \   0000001C   0500000A           BEQ      ??_GetLineLen_SJIS_3
   \   00000020   010052E1           CMP      R2,R1
   \   00000024   030000AA           BGE      ??_GetLineLen_SJIS_3
   \   00000028   800053E3           CMP      R3,#+128
   \   0000002C   F5FFFF2A           BCS      ??_GetLineLen_SJIS_1
   \   00000030   0A0053E3           CMP      R3,#+10
   \   00000034   F5FFFF1A           BNE      ??_GetLineLen_SJIS_2
   \                     ??_GetLineLen_SJIS_3:
   \   00000038   0200A0E1           MOV      R0,R2
   \   0000003C   1EFF2FE1           BX       LR               ;; return
     88            }
     89            return Len;
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       _DispLine_SJIS
     95          */

   \                                 In section .text, align 4, keep-with-next
     96          static void _DispLine_SJIS(const char GUI_UNI_PTR *s, int Len) {
   \                     _DispLine_SJIS:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   000000EA           B        ??_DispLine_SJIS_0
     97            U8 c0;
     98            while (--Len >=0) {
     99              c0=*(const U8*)s++;
    100              if (c0 > 127) {
    101                U8  c1 = *(const U8*)s++;
    102                Len--;
    103                GL_DispChar (DB2SJIS(c0, c1));
    104              } else {
    105                GL_DispChar(c0);
   \                     ??_DispLine_SJIS_1:
   \   00000014   ........           BL       GL_DispChar
   \                     ??_DispLine_SJIS_0:
   \   00000018   015055E2           SUBS     R5,R5,#+1
   \   0000001C   0600004A           BMI      ??_DispLine_SJIS_2
   \   00000020   0110D4E4           LDRB     R1,[R4], #+1
   \   00000024   0100A0E1           MOV      R0,R1
   \   00000028   800051E3           CMP      R1,#+128
   \   0000002C   0110D4A4           LDRBGE   R1,[R4], #+1
   \   00000030   015045A2           SUBGE    R5,R5,#+1
   \   00000034   000481A1           ORRGE    R0,R1,R0, LSL #+8
   \   00000038   F5FFFFEA           B        ??_DispLine_SJIS_1
    106              }
    107            }
    108          }
   \                     ??_DispLine_SJIS_2:
   \   0000003C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
    109          
    110          /*********************************************************************
    111          *
    112          *       GUI_ENC_APIList_SJIS, API list
    113          */

   \                                 In section .rodata, align 4, keep-with-next
    114          const tGUI_ENC_APIList GUI_ENC_APIList_SJIS = {
   \                     GUI_ENC_APIList_SJIS:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _GetLineDistX_SJIS, _GetLineLen_SJIS, _DispLine_SJIS
   \              ............
    115            _GetLineDistX_SJIS,
    116            _GetLineLen_SJIS,
    117            _DispLine_SJIS
    118          };
    119          
    120          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     _DispLine_SJIS         16
     _GetLineDistX_SJIS     16
     _GetLineLen_SJIS        0


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     _GetLineDistX_SJIS     84
     _GetLineLen_SJIS       64
     _DispLine_SJIS         68
     GUI_ENC_APIList_SJIS   12

 
  12 bytes in section .rodata
 216 bytes in section .text
 
 216 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
