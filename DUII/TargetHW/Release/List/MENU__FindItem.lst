###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\MENU__FindItem.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\MENU__FindItem.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\MENU__FindItem.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\MENU__FindItem.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\MENU__FindItem.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MENU__FindItem.c
     19          Purpose     : Implementation of menu widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "MENU.h"
     24          #include "MENU_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       MENU__FindItem
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          int MENU__FindItem(MENU_Handle hObj, U16 ItemId, MENU_Handle * phMenu) {
   \                     MENU__FindItem:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
     39            int ItemIndex = -1;
   \   0000000C   0060E0E3           MVN      R6,#+0
     40            MENU_Obj * pObj;
     41            if (hObj) {
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   2000000A           BEQ      ??MENU__FindItem_0
     42              GUI_ARRAY ItemArray;
     43              unsigned NumItems, i;
     44              pObj = MENU_LOCK_H(hObj);
   \   00000018   ........           BL       GUI_ALLOC_LockH
   \   0000001C   0080A0E1           MOV      R8,R0
     45              NumItems = MENU__GetNumItems(pObj);
   \   00000020   ........           BL       MENU__GetNumItems
   \   00000024   0070A0E1           MOV      R7,R0
     46              ItemArray = pObj->ItemArray;
   \   00000028   648098E5           LDR      R8,[R8, #+100]
     47              GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
     48              for (i = 0; (i < NumItems) && (ItemIndex < 0); i++) {
   \   00000030   0090A0E3           MOV      R9,#+0
   \   00000034   000057E3           CMP      R7,#+0
   \   00000038   1700000A           BEQ      ??MENU__FindItem_0
     49                MENU_ITEM * pItem;
     50                MENU_Handle hSubmenu;
     51                U16         Id;
     52                pItem = (MENU_ITEM *)GUI_ARRAY_GetpItemLocked(ItemArray, i);
   \                     ??MENU__FindItem_1:
   \   0000003C   0910A0E1           MOV      R1,R9
   \   00000040   0800A0E1           MOV      R0,R8
   \   00000044   ........           BL       GUI_ARRAY_GetpItemLocked
     53                hSubmenu = pItem->hSubmenu;
   \   00000048   00A090E5           LDR      R10,[R0, #+0]
     54                Id       = pItem->Id;
   \   0000004C   B4B0D0E1           LDRH     R11,[R0, #+4]
     55                GUI_UNLOCK_H(pItem);
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
     56                if (Id == ItemId) {
   \   00000054   04005BE1           CMP      R11,R4
   \   00000058   0300001A           BNE      ??MENU__FindItem_2
     57                  *phMenu   = hObj;
   \   0000005C   00009DE5           LDR      R0,[SP, #+0]
     58                  ItemIndex = i;
   \   00000060   0960A0E1           MOV      R6,R9
   \   00000064   000085E5           STR      R0,[R5, #+0]
   \   00000068   060000EA           B        ??MENU__FindItem_3
     59                } else if (hSubmenu) {
   \                     ??MENU__FindItem_2:
   \   0000006C   00005AE3           CMP      R10,#+0
   \   00000070   0400000A           BEQ      ??MENU__FindItem_3
     60                  ItemIndex = MENU__FindItem(hSubmenu, ItemId, phMenu);
   \   00000074   0520A0E1           MOV      R2,R5
   \   00000078   0410A0E1           MOV      R1,R4
   \   0000007C   0A00A0E1           MOV      R0,R10
   \   00000080   ........           BL       MENU__FindItem
   \   00000084   0060A0E1           MOV      R6,R0
     61                }
     62              }
   \                     ??MENU__FindItem_3:
   \   00000088   019089E2           ADD      R9,R9,#+1
   \   0000008C   070059E1           CMP      R9,R7
   \   00000090   0100002A           BCS      ??MENU__FindItem_0
   \   00000094   000056E3           CMP      R6,#+0
   \   00000098   E7FFFF4A           BMI      ??MENU__FindItem_1
     63            }
     64            return ItemIndex;
   \                     ??MENU__FindItem_0:
   \   0000009C   0600A0E1           MOV      R0,R6
   \   000000A0   04D08DE2           ADD      SP,SP,#+4
   \   000000A4   F08FBDE8           POP      {R4-R11,PC}      ;; return
     65          }
     66          
     67          #else  /* avoid empty object files */
     68            void MENU__FindItem_C(void) {}
     69          #endif
     70          
     71          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     MENU__FindItem     40


   Section sizes:

     Function/Label Bytes
     -------------- -----
     MENU__FindItem  168

 
 168 bytes in section .text
 
 168 bytes of CODE memory

Errors: none
Warnings: none
