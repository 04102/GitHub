###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:36 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_Broadcast.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\WM_Broadcast.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_Broadcast.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_Broadcast.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_Broadcast.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_Broadcast.C
     19          Purpose     : Windows manager, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *                   Broadcast message
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_BroadcastMessage
     36          *
     37          * Note
     38          *   (1) Rather than sending the same message to all windows, we send
     39          *       a copy of the message.
     40          *       This is so because the callback may modify the message, so
     41          *       that without copy only the first window would receive the
     42          *       real, unmodified message.
     43          */

   \                                 In section .text, align 4, keep-with-next
     44          int WM_BroadcastMessage( WM_MESSAGE* pMsg) {
   \                     WM_BroadcastMessage:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040A0E1           MOV      R4,R0
     45            WM_HWIN hWin;
     46            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     47            for (hWin = WM__FirstWin; hWin; ) {
   \   00000010   48009FE5           LDR      R0,??WM_BroadcastMessage_0
   \   00000014   005090E5           LDR      R5,[R0, #+0]
   \   00000018   000055E3           CMP      R5,#+0
   \   0000001C   0B00000A           BEQ      ??WM_BroadcastMessage_1
     48              WM_MESSAGE Msg;
     49              Msg = *pMsg;                  /* Note (1) */
   \                     ??WM_BroadcastMessage_2:
   \   00000020   0E10B4E8           LDM      R4!,{R1-R3,R12}
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   0000002C   104044E2           SUB      R4,R4,#+16
     50              WM__SendMessage(hWin, &Msg);
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           BL       WM__SendMessage
     51              hWin = WM_H2P(hWin)->hNextLin;
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           BL       GUI_ALLOC_h2p
   \   00000044   145090E5           LDR      R5,[R0, #+20]
   \   00000048   000055E3           CMP      R5,#+0
   \   0000004C   F3FFFF1A           BNE      ??WM_BroadcastMessage_2
     52            }
     53            WM_UNLOCK();
   \                     ??WM_BroadcastMessage_1:
   \   00000050   ........           BL       GUI_Unlock
     54            return 0;
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   14D08DE2           ADD      SP,SP,#+20
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??WM_BroadcastMessage_0:
   \   00000060   ........           DC32     WM__FirstWin
     55          }
     56          
     57          #else
     58            void WM_Broadcast(void) {} /* avoid empty object files */
     59          #endif   /* GUI_WINSUPPORT */
     60          
     61          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     WM_BroadcastMessage     32


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     WM_BroadcastMessage  100

 
 100 bytes in section .text
 
 100 bytes of CODE memory

Errors: none
Warnings: none
