###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:46 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\EDIT_Default.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\EDIT_Default.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\EDIT_Default.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\EDIT_Default.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\EDIT_Default.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : EDIT_Default.c
     19          Purpose     : Implementation of edit widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "EDIT.h"
     24          #include "EDIT_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       EDIT_SetDefaultFont
     31          */

   \                                 In section .text, align 4, keep-with-next
     32          void EDIT_SetDefaultFont(const GUI_FONT* pFont) {
     33            EDIT__DefaultProps.pFont = pFont;
   \                     EDIT_SetDefaultFont:
   \   00000000   ........           LDR      R1,??DataTable7
   \   00000004   080081E5           STR      R0,[R1, #+8]
     34          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     35          
     36          /*********************************************************************
     37          *
     38          *       EDIT_GetDefaultFont
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          const GUI_FONT GUI_UNI_PTR * EDIT_GetDefaultFont(void) {
     41            return EDIT__DefaultProps.pFont;
   \                     EDIT_GetDefaultFont:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   080090E5           LDR      R0,[R0, #+8]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     42          }
     43          
     44          /*********************************************************************
     45          *
     46          *       EDIT_SetDefaultTextAlign
     47          */

   \                                 In section .text, align 4, keep-with-next
     48          void EDIT_SetDefaultTextAlign(int Align) {
     49            EDIT__DefaultProps.Align = Align;
   \                     EDIT_SetDefaultTextAlign:
   \   00000000   ........           LDR      R1,??DataTable7
   \   00000004   000081E5           STR      R0,[R1, #+0]
     50          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     51          
     52          /*********************************************************************
     53          *
     54          *       EDIT_GetDefaultTextAlign
     55          */

   \                                 In section .text, align 4, keep-with-next
     56          int EDIT_GetDefaultTextAlign(void) {
     57            return EDIT__DefaultProps.Align;
   \                     EDIT_GetDefaultTextAlign:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     58          }
     59          
     60          /*********************************************************************
     61          *
     62          *       EDIT_SetDefaultTextColor
     63          */

   \                                 In section .text, align 4, keep-with-next
     64          void EDIT_SetDefaultTextColor(unsigned int Index, GUI_COLOR Color) {
     65            if (Index <= GUI_COUNTOF(EDIT__DefaultProps.aTextColor)) {
   \                     EDIT_SetDefaultTextColor:
   \   00000000   030050E3           CMP      R0,#+3
     66              EDIT__DefaultProps.aTextColor[Index] = Color;
   \   00000004   ........           LDRCC    R2,??DataTable7
   \   00000008   00018230           ADDCC    R0,R2,R0, LSL #+2
   \   0000000C   0C108035           STRCC    R1,[R0, #+12]
     67            }
     68          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     69          
     70          /*********************************************************************
     71          *
     72          *       EDIT_SetDefaultBkColor
     73          */

   \                                 In section .text, align 4, keep-with-next
     74          void EDIT_SetDefaultBkColor(unsigned int Index, GUI_COLOR Color) {
     75            if (Index <= GUI_COUNTOF(EDIT__DefaultProps.aBkColor)) {
   \                     EDIT_SetDefaultBkColor:
   \   00000000   030050E3           CMP      R0,#+3
     76              EDIT__DefaultProps.aBkColor[Index] = Color;
   \   00000004   ........           LDRCC    R2,??DataTable7
   \   00000008   00018230           ADDCC    R0,R2,R0, LSL #+2
   \   0000000C   14108035           STRCC    R1,[R0, #+20]
     77            }
     78          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
     79          
     80          /*********************************************************************
     81          *
     82          *       EDIT_GetDefaultTextColor
     83          */

   \                                 In section .text, align 4, keep-with-next
     84          GUI_COLOR EDIT_GetDefaultTextColor(unsigned int Index) {
     85            GUI_COLOR Color = 0;
   \                     EDIT_GetDefaultTextColor:
   \   00000000   0010A0E3           MOV      R1,#+0
     86            if (Index <= GUI_COUNTOF(EDIT__DefaultProps.aTextColor)) {
   \   00000004   030050E3           CMP      R0,#+3
     87              Color = EDIT__DefaultProps.aTextColor[Index];
   \   00000008   ........           LDRCC    R1,??DataTable7
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   0C109035           LDRCC    R1,[R0, #+12]
     88            }
     89            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       EDIT_GetDefaultBkColor
     95          */

   \                                 In section .text, align 4, keep-with-next
     96          GUI_COLOR EDIT_GetDefaultBkColor(unsigned int Index) {
     97            GUI_COLOR Color = 0;
   \                     EDIT_GetDefaultBkColor:
   \   00000000   0010A0E3           MOV      R1,#+0
     98            if (Index <= GUI_COUNTOF(EDIT__DefaultProps.aBkColor)) {
   \   00000004   030050E3           CMP      R0,#+3
     99              Color = EDIT__DefaultProps.aBkColor[Index];
   \   00000008   ........           LDRCC    R1,??DataTable7
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   14109035           LDRCC    R1,[R0, #+20]
    100            }
    101            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
    102          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     EDIT__DefaultProps
    103          
    104          #else  /* avoid empty object files */
    105          
    106          void EDIT_Default_C(void) {}
    107          
    108          #endif

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     EDIT_GetDefaultBkColor        0
     EDIT_GetDefaultFont           0
     EDIT_GetDefaultTextAlign      0
     EDIT_GetDefaultTextColor      0
     EDIT_SetDefaultBkColor        0
     EDIT_SetDefaultFont           0
     EDIT_SetDefaultTextAlign      0
     EDIT_SetDefaultTextColor      0


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     EDIT_SetDefaultFont        12
     EDIT_GetDefaultFont        12
     EDIT_SetDefaultTextAlign   12
     EDIT_GetDefaultTextAlign   12
     EDIT_SetDefaultTextColor   20
     EDIT_SetDefaultBkColor     20
     EDIT_GetDefaultTextColor   28
     EDIT_GetDefaultBkColor     28
     ??DataTable7                4

 
 148 bytes in section .text
 
 148 bytes of CODE memory

Errors: none
Warnings: none
