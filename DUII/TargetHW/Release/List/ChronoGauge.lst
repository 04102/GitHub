###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:22 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\ChronoGauge.cpp                             #
#    Command line =  C:\DUII\DUII\ChronoGauge.cpp -D DEBUG=1 -D               #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --eec++ --no_static_destruction                          #
#    List file    =  C:\DUII\TargetHW\Release\List\ChronoGauge.lst            #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\ChronoGauge.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\ChronoGauge.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: ChronoGauge.cpp
      5          Description: The Chrono Gauge object
      6          -----------------------------------------------------------------
      7          */
      8          #include "ChronoGauge.hpp"
      9          
     10          //
     11          // KMC - 9/15/12 - modified to accept input pointer to graphic to allow us to easily
     12          // alter the background of the gauge screen.  Note that positioning of the redline and
     13          // scale still depends on the image having the same proportions.
     14          //

   \                                 In section .bss, align 4
     15          	float holdValue;
   \                     holdValue:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     16          	int holdTime;
   \                     holdTime:
   \   00000000                      DS8 4
     17          

   \                                 In section .text, align 4, keep-with-next
     18          ChronoGauge::ChronoGauge(int x, int y, int Radius, float MinValue, float MaxValue, char *Name, char *Units, char *pInputNum, Alarm *AlarmList,
     19          				 float MajorTicRange, float MinorTicRange, int Precision, int Multiplier, char showMultiplier,
     20          				 WM_HWIN _hParent, const GUI_BITMAP *_pBitmap) : Gauge(x, y, Radius, MinValue, MaxValue, Name, Units, pInputNum, AlarmList,
   \                     _ZN11ChronoGaugeC1EiiiffPcS0_S0_P5AlarmffiiclPK10GUI_BITMAP:
   \   00000000   FE4F2DE9           PUSH     {R1-R11,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   68009DE5           LDR      R0,[SP, #+104]
   \   00000010   6C109DE5           LDR      R1,[SP, #+108]
   \   00000014   70209DE5           LDR      R2,[SP, #+112]
   \   00000018   74309DE5           LDR      R3,[SP, #+116]
   \   0000001C   9090DDE5           LDRB     R9,[SP, #+144]
   \   00000020   78C09DE5           LDR      R12,[SP, #+120]
   \   00000024   7CE09DE5           LDR      LR,[SP, #+124]
   \   00000028   80509DE5           LDR      R5,[SP, #+128]
   \   0000002C   84609DE5           LDR      R6,[SP, #+132]
   \   00000030   88709DE5           LDR      R7,[SP, #+136]
   \   00000034   8C809DE5           LDR      R8,[SP, #+140]
   \   00000038   94A09DE5           LDR      R10,[SP, #+148]
   \   0000003C   98B09DE5           LDR      R11,[SP, #+152]
     21          				 MajorTicRange, MinorTicRange, Precision, Multiplier, showMultiplier,
     22          				 _hParent, _pBitmap)
     23          {
   \   00000040   0C308DE5           STR      R3,[SP, #+12]
   \   00000044   08208DE5           STR      R2,[SP, #+8]
   \   00000048   04108DE5           STR      R1,[SP, #+4]
   \   0000004C   00008DE5           STR      R0,[SP, #+0]
   \   00000050   30B08DE5           STR      R11,[SP, #+48]
   \   00000054   2CA08DE5           STR      R10,[SP, #+44]
   \   00000058   28908DE5           STR      R9,[SP, #+40]
   \   0000005C   24808DE5           STR      R8,[SP, #+36]
   \   00000060   20708DE5           STR      R7,[SP, #+32]
   \   00000064   1C608DE5           STR      R6,[SP, #+28]
   \   00000068   18508DE5           STR      R5,[SP, #+24]
   \   0000006C   14E08DE5           STR      LR,[SP, #+20]
   \   00000070   10C08DE5           STR      R12,[SP, #+16]
   \   00000074   40309DE5           LDR      R3,[SP, #+64]
   \   00000078   3C209DE5           LDR      R2,[SP, #+60]
   \   0000007C   38109DE5           LDR      R1,[SP, #+56]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       _ZN5GaugeC2EiiiffPcS0_S0_P5AlarmffiiclPK10GUI_BITMAP
     24          	 holdValue = 0;
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   FC0084E5           STR      R0,[R4, #+252]
     25          	 holdTime = 0;
   \   00000090   000184E5           STR      R0,[R4, #+256]
     26          }
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   44D08DE2           ADD      SP,SP,#+68
   \   0000009C   F08FBDE8           POP      {R4-R11,PC}      ;; return
     27          

   \                                 In section .text, align 4, keep-with-next
     28          ChronoGauge::~ChronoGauge()
     29          {
   \                     _ZN11ChronoGaugeD1Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     30          }
   \   00000008   ........           BL       _ZN5GaugeD2Ev
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   1080BDE8           POP      {R4,PC}          ;; return
     31          
     32          /****************************************************************
     33          *
     34          *       SetValue(float value)
     35          *		Set the value of the gauge to the value specified
     36          *
     37          ******************************************************************/
     38          #define	HOLD_TIME	500
     39          

   \                                 In section .text, align 4, keep-with-next
     40          void ChronoGauge::SetValue(float dValue)
     41          {
   \                     _ZN11ChronoGauge8SetValueEf:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     42          //	Value = dValue;
     43          	if (dValue < holdValue)			// if value is lower than our hold point
   \   0000000C   0500A0E1           MOV      R0,R5
   \   00000010   FC1094E5           LDR      R1,[R4, #+252]
   \   00000014   ........           BL       __aeabi_cfcmple
   \   00000018   04D04DE2           SUB      SP,SP,#+4
   \   0000001C   1000002A           BCS      ??SetValue_0
     44          	{
     45          		if (holdTime == 0)			// if this is the first decreasing value
   \   00000020   000194E5           LDR      R0,[R4, #+256]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0100001A           BNE      ??SetValue_1
     46          		{
     47          			holdTime = GUI_GetTime();				// start hold time
   \                     ??SetValue_2:
   \   0000002C   ........           BL       GUI_GetTime
   \   00000030   100000EA           B        ??SetValue_3
     48          		}
     49          		else if ((GUI_GetTime() - holdTime) > HOLD_TIME)	// If it has been falling for HOLD_TIME
   \                     ??SetValue_1:
   \   00000034   ........           BL       GUI_GetTime
   \   00000038   001194E5           LDR      R1,[R4, #+256]
   \   0000003C   010040E0           SUB      R0,R0,R1
   \   00000040   F510A0E3           MOV      R1,#+245
   \   00000044   401F81E3           ORR      R1,R1,#0x100
   \   00000048   010050E1           CMP      R0,R1
   \   0000004C   0A0000BA           BLT      ??SetValue_4
     50          		{
     51          			Gauge::SetValue(holdValue = dValue);	// update to new value
   \   00000050   FC5084E5           STR      R5,[R4, #+252]
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       _ZN5Gauge8SetValueEf
     52          			holdTime = GUI_GetTime();				// and restart hold time
   \   00000060   F1FFFFEA           B        ??SetValue_2
     53          		}
     54          		// otherwise keep waiting
     55          	}
     56          	else								// else value is rising - update display normally
     57          	{
     58          		Gauge::SetValue(holdValue = dValue);
   \                     ??SetValue_0:
   \   00000064   0010A0E1           MOV      R1,R0
   \   00000068   FC5084E5           STR      R5,[R4, #+252]
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       _ZN5Gauge8SetValueEf
     59          		holdTime = 0;
   \   00000074   0000A0E3           MOV      R0,#+0
   \                     ??SetValue_3:
   \   00000078   000184E5           STR      R0,[R4, #+256]
     60          	}
     61          }
   \                     ??SetValue_4:
   \   0000007C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000080   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp ChronoGauge::subobject ChronoGauge(int, int, int, float, float, char *, char *, char *, Alarm *, float, float, int, int, char, GUI_HWIN, GUI_BITMAP const *)
   \                     _ZN11ChronoGaugeC2EiiiffPcS0_S0_P5AlarmffiiclPK10GUI_BITMAP:
   \   00000000   FE4F2DE9           PUSH     {R1-R11,LR}
   \   00000004   38D04DE2           SUB      SP,SP,#+56
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   68009DE5           LDR      R0,[SP, #+104]
   \   00000010   6C109DE5           LDR      R1,[SP, #+108]
   \   00000014   70209DE5           LDR      R2,[SP, #+112]
   \   00000018   74309DE5           LDR      R3,[SP, #+116]
   \   0000001C   9090DDE5           LDRB     R9,[SP, #+144]
   \   00000020   78C09DE5           LDR      R12,[SP, #+120]
   \   00000024   7CE09DE5           LDR      LR,[SP, #+124]
   \   00000028   80509DE5           LDR      R5,[SP, #+128]
   \   0000002C   84609DE5           LDR      R6,[SP, #+132]
   \   00000030   88709DE5           LDR      R7,[SP, #+136]
   \   00000034   8C809DE5           LDR      R8,[SP, #+140]
   \   00000038   94A09DE5           LDR      R10,[SP, #+148]
   \   0000003C   98B09DE5           LDR      R11,[SP, #+152]
   \   00000040   0C308DE5           STR      R3,[SP, #+12]
   \   00000044   08208DE5           STR      R2,[SP, #+8]
   \   00000048   04108DE5           STR      R1,[SP, #+4]
   \   0000004C   00008DE5           STR      R0,[SP, #+0]
   \   00000050   30B08DE5           STR      R11,[SP, #+48]
   \   00000054   2CA08DE5           STR      R10,[SP, #+44]
   \   00000058   28908DE5           STR      R9,[SP, #+40]
   \   0000005C   24808DE5           STR      R8,[SP, #+36]
   \   00000060   20708DE5           STR      R7,[SP, #+32]
   \   00000064   1C608DE5           STR      R6,[SP, #+28]
   \   00000068   18508DE5           STR      R5,[SP, #+24]
   \   0000006C   14E08DE5           STR      LR,[SP, #+20]
   \   00000070   10C08DE5           STR      R12,[SP, #+16]
   \   00000074   40309DE5           LDR      R3,[SP, #+64]
   \   00000078   3C209DE5           LDR      R2,[SP, #+60]
   \   0000007C   38109DE5           LDR      R1,[SP, #+56]
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       _ZN5GaugeC2EiiiffPcS0_S0_P5AlarmffiiclPK10GUI_BITMAP
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   FC0084E5           STR      R0,[R4, #+252]
   \   00000090   000184E5           STR      R0,[R4, #+256]
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   44D08DE2           ADD      SP,SP,#+68
   \   0000009C   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp ChronoGauge::subobject ~ChronoGauge()
   \                     _ZN11ChronoGaugeD2Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           BL       _ZN5GaugeD2Ev
   \   0000000C   0400A0E1           MOV      R0,R4
   \   00000010   1080BDE8           POP      {R4,PC}          ;; return
     62          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     ChronoGauge::ChronoGauge(int, int, int, float, float, char *, char *, char *, Alarm *, float, float, int, int, char, GUI_HWIN, GUI_BITMAP const *)
                                       104
     ChronoGauge::SetValue(float)       16
     ChronoGauge::subobject ChronoGauge(int, int, int, float, float, char *, char *, char *, Alarm *, float, float, int, int, char, GUI_HWIN, GUI_BITMAP const *)
                                       104
     ChronoGauge::subobject ~ChronoGauge()
                                         8
     ChronoGauge::~ChronoGauge()         8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     holdValue                         4
     holdTime                          4
     ChronoGauge::ChronoGauge(int, int, int, float, float, char *, char *, char *, Alarm *, float, float, int, int, char, GUI_HWIN, GUI_BITMAP const *)
                                     160
     ChronoGauge::~ChronoGauge()      20
     ChronoGauge::SetValue(float)    132
     ChronoGauge::subobject ChronoGauge(int, int, int, float, float, char *, char *, char *, Alarm *, float, float, int, int, char, GUI_HWIN, GUI_BITMAP const *)
                                     160
     ChronoGauge::subobject ~ChronoGauge()
                                      20

 
   8 bytes in section .bss
 492 bytes in section .text
 
 492 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
