###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:54 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\MULTIPAGE_SetRotation.c             #
#    Command line =  C:\DUII\TargetHW\GUI\MULTIPAGE_SetRotation.c -D DEBUG=1  #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\MULTIPAGE_SetRotation.lst  #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\MULTIPAGE_SetRotation.o     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\MULTIPAGE_SetRotation.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MULTIPAGE_SetRotation.c
     19          Purpose     : Implementation of MULTIPAGE widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "MULTIPAGE_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _DrawTextItemV
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          static void _DrawTextItemV(MULTIPAGE_Obj* pObj, const char* pText, unsigned Index,
     40                                    const GUI_RECT* pRect, int y0, int w, int ColorIndex) {
   \                     _DrawTextItemV:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0310A0E1           MOV      R1,R3
   \   00000018   28809DE5           LDR      R8,[SP, #+40]
   \   0000001C   2C909DE5           LDR      R9,[SP, #+44]
   \   00000020   30709DE5           LDR      R7,[SP, #+48]
     41            GUI_RECT r;
     42            int Len;
     43            r = *pRect;
   \   00000024   04008DE2           ADD      R0,SP,#+4
   \   00000028   0820A0E3           MOV      R2,#+8
   \   0000002C   ........           BL       __aeabi_memcpy
     44            r.y0 += y0;
   \   00000030   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000034   000088E0           ADD      R0,R8,R0
   \   00000038   B600CDE1           STRH     R0,[SP, #+6]
     45            r.y1  = r.y0 + w;
   \   0000003C   000089E0           ADD      R0,R9,R0
   \   00000040   BA00CDE1           STRH     R0,[SP, #+10]
     46            pObj->Widget.pEffect->pfDrawUpRect(&r);
   \   00000044   2C1094E5           LDR      R1,[R4, #+44]
   \   00000048   04008DE2           ADD      R0,SP,#+4
   \   0000004C   081091E5           LDR      R1,[R1, #+8]
   \   00000050   31FF2FE1           BLX      R1
     47            GUI__ReduceRect(&r, &r, pObj->Widget.pEffect->EffectSize);
   \   00000054   2C0094E5           LDR      R0,[R4, #+44]
   \   00000058   04108DE2           ADD      R1,SP,#+4
   \   0000005C   002090E5           LDR      R2,[R0, #+0]
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   ........           BL       GUI__ReduceRect
     48            if (pObj->Selection == Index) {
   \   00000068   3C0094E5           LDR      R0,[R4, #+60]
   \   0000006C   060050E1           CMP      R0,R6
   \   00000070   3400001A           BNE      ??_DrawTextItemV_0
     49              if (pObj->Props.Align & MULTIPAGE_ALIGN_BOTTOM) {
   \   00000074   4800D4E5           LDRB     R0,[R4, #+72]
   \   00000078   040010E3           TST      R0,#0x4
   \   0000007C   1800000A           BEQ      ??_DrawTextItemV_1
     50                r.x1 += pObj->Widget.pEffect->EffectSize + 1;
   \   00000080   2C1094E5           LDR      R1,[R4, #+44]
   \   00000084   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000088   001091E5           LDR      R1,[R1, #+0]
   \   0000008C   011081E2           ADD      R1,R1,#+1
   \   00000090   000081E0           ADD      R0,R1,R0
   \   00000094   B800CDE1           STRH     R0,[SP, #+8]
     51          	    if (pObj->Widget.pEffect->EffectSize > 1) {
   \   00000098   2C0094E5           LDR      R0,[R4, #+44]
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   020050E3           CMP      R0,#+2
   \   000000A4   270000BA           BLT      ??_DrawTextItemV_0
     52          		    LCD_SetColor(MULTIPAGE__aEffectColor[0]);
   \   000000A8   ........           LDR      R8,??DataTable1
   \   000000AC   000098E5           LDR      R0,[R8, #+0]
   \   000000B0   ........           BL       LCD_SetColor
     53          		    GUI_DrawHLine(r.y0 - 1, r.x1 - 2, r.x1 - 1);
   \   000000B4   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000000B8   012040E2           SUB      R2,R0,#+1
   \   000000BC   021040E2           SUB      R1,R0,#+2
   \   000000C0   F600DDE1           LDRSH    R0,[SP, #+6]
   \   000000C4   010040E2           SUB      R0,R0,#+1
   \   000000C8   ........           BL       GUI_DrawHLine
     54          		    LCD_SetColor(MULTIPAGE__aEffectColor[1]);
   \   000000CC   040098E5           LDR      R0,[R8, #+4]
   \   000000D0   ........           BL       LCD_SetColor
     55          		    GUI_DrawHLine(r.y1 + 1, r.x1 - 2, r.x1 - 1);
   \   000000D4   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000000D8   012040E2           SUB      R2,R0,#+1
   \   000000DC   021040E2           SUB      R1,R0,#+2
   \   000000E0   150000EA           B        ??_DrawTextItemV_2
     56          	    }
     57              } else {
     58                r.x0 -= pObj->Widget.pEffect->EffectSize + 1;
   \                     ??_DrawTextItemV_1:
   \   000000E4   2C1094E5           LDR      R1,[R4, #+44]
   \   000000E8   F400DDE1           LDRSH    R0,[SP, #+4]
   \   000000EC   001091E5           LDR      R1,[R1, #+0]
   \   000000F0   010040E0           SUB      R0,R0,R1
   \   000000F4   010040E2           SUB      R0,R0,#+1
   \   000000F8   B400CDE1           STRH     R0,[SP, #+4]
     59          	    if (pObj->Widget.pEffect->EffectSize > 1) {
   \   000000FC   2C0094E5           LDR      R0,[R4, #+44]
   \   00000100   000090E5           LDR      R0,[R0, #+0]
   \   00000104   020050E3           CMP      R0,#+2
   \   00000108   0E0000BA           BLT      ??_DrawTextItemV_0
     60          		    LCD_SetColor(MULTIPAGE__aEffectColor[0]);
   \   0000010C   ........           LDR      R8,??DataTable1
   \   00000110   000098E5           LDR      R0,[R8, #+0]
   \   00000114   ........           BL       LCD_SetColor
     61          		    GUI_DrawHLine(r.y0 - 1, r.x0, r.x0 + 1);
   \   00000118   F410DDE1           LDRSH    R1,[SP, #+4]
   \   0000011C   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000120   012081E2           ADD      R2,R1,#+1
   \   00000124   010040E2           SUB      R0,R0,#+1
   \   00000128   ........           BL       GUI_DrawHLine
     62          		    LCD_SetColor(MULTIPAGE__aEffectColor[1]);
   \   0000012C   040098E5           LDR      R0,[R8, #+4]
   \   00000130   ........           BL       LCD_SetColor
     63          		    GUI_DrawHLine(r.y1 + 1, r.x0, r.x0 + 1);
   \   00000134   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000138   012081E2           ADD      R2,R1,#+1
   \                     ??_DrawTextItemV_2:
   \   0000013C   FA00DDE1           LDRSH    R0,[SP, #+10]
   \   00000140   010080E2           ADD      R0,R0,#+1
   \   00000144   ........           BL       GUI_DrawHLine
     64          	    }
     65              }
     66            }
     67            LCD_SetColor(pObj->Props.aBkColor[ColorIndex]);
   \                     ??_DrawTextItemV_0:
   \   00000148   077184E0           ADD      R7,R4,R7, LSL #+2
   \   0000014C   4C0097E5           LDR      R0,[R7, #+76]
   \   00000150   ........           BL       LCD_SetColor
     68            GUI_FillRectEx(&r);
   \   00000154   04008DE2           ADD      R0,SP,#+4
   \   00000158   ........           BL       GUI_FillRectEx
     69            LCD_SetBkColor(pObj->Props.aBkColor[ColorIndex]);
   \   0000015C   4C0097E5           LDR      R0,[R7, #+76]
   \   00000160   ........           BL       LCD_SetBkColor
     70            LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
   \   00000164   540097E5           LDR      R0,[R7, #+84]
   \   00000168   ........           BL       LCD_SetColor
     71            r.y0 += 4;
   \   0000016C   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000170   040080E2           ADD      R0,R0,#+4
   \   00000174   B600CDE1           STRH     R0,[SP, #+6]
     72            r.x1 -= 1;
   \   00000178   F800DDE1           LDRSH    R0,[SP, #+8]
   \   0000017C   010040E2           SUB      R0,R0,#+1
   \   00000180   B800CDE1           STRH     R0,[SP, #+8]
     73            if ((pObj->Selection == Index) && (pObj->Props.Align & MULTIPAGE_ALIGN_BOTTOM)) {
   \   00000184   3C1094E5           LDR      R1,[R4, #+60]
   \   00000188   060051E1           CMP      R1,R6
   \   0000018C   0700001A           BNE      ??_DrawTextItemV_3
   \   00000190   4810D4E5           LDRB     R1,[R4, #+72]
   \   00000194   040011E3           TST      R1,#0x4
   \   00000198   0400000A           BEQ      ??_DrawTextItemV_3
     74              r.x1 -= pObj->Widget.pEffect->EffectSize + 1;
   \   0000019C   2C1094E5           LDR      R1,[R4, #+44]
   \   000001A0   001091E5           LDR      R1,[R1, #+0]
   \   000001A4   010040E0           SUB      R0,R0,R1
   \   000001A8   010040E2           SUB      R0,R0,#+1
   \   000001AC   B800CDE1           STRH     R0,[SP, #+8]
     75            }
     76            Len = strlen(pText);
   \                     ??_DrawTextItemV_3:
   \   000001B0   0500A0E1           MOV      R0,R5
   \   000001B4   ........           BL       strlen
     77            #if GUI_SUPPORT_ROTATION
     78              GUI_DispStringInRectEx(pText, &r, GUI_TA_LEFT, Len, GUI_ROTATE_CW);
   \   000001B8   ........           LDR      R1,??DataTable1_1
   \   000001BC   0030A0E1           MOV      R3,R0
   \   000001C0   00108DE5           STR      R1,[SP, #+0]
   \   000001C4   0020A0E3           MOV      R2,#+0
   \   000001C8   04108DE2           ADD      R1,SP,#+4
   \   000001CC   0500A0E1           MOV      R0,R5
   \   000001D0   ........           BL       GUI_DispStringInRectEx
     79            #endif
     80          }
   \   000001D4   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000001D8   F083BDE8           POP      {R4-R9,PC}       ;; return
     81          
     82          /*********************************************************************
     83          *
     84          *       Public code
     85          *
     86          **********************************************************************
     87          */
     88          /*********************************************************************
     89          *
     90          *       MULTIPAGE_SetRotation
     91          */

   \                                 In section .text, align 4, keep-with-next
     92          void MULTIPAGE_SetRotation(MULTIPAGE_Handle hObj, unsigned Rotation) {
   \                     MULTIPAGE_SetRotation:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0160A0E1           MOV      R6,R1
     93            MULTIPAGE_Obj* pObj;
     94            GUI_RECT rClient;
     95            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   2000000A           BEQ      ??MULTIPAGE_SetRotation_0
     96              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     97              pObj = MULTIPAGE_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0050A0E1           MOV      R5,R0
     98              Rotation &= MULTIPAGE_CF_ROTATE_CW;
     99              if (( (pObj->Widget.State & WIDGET_STATE_VERTICAL) && (Rotation == 0)) ||
    100                  (!(pObj->Widget.State & WIDGET_STATE_VERTICAL) && (Rotation == MULTIPAGE_CF_ROTATE_CW))) {
   \   00000028   B203D5E1           LDRH     R0,[R5, #+50]
   \   0000002C   086006E2           AND      R6,R6,#0x8
   \   00000030   080010E3           TST      R0,#0x8
   \   00000034   1A00000A           BEQ      ??MULTIPAGE_SetRotation_1
   \   00000038   000056E3           CMP      R6,#+0
   \   0000003C   0400001A           BNE      ??MULTIPAGE_SetRotation_2
    101                if (Rotation == MULTIPAGE_CF_ROTATE_CW) {
    102                  pObj->Widget.State |= WIDGET_STATE_VERTICAL;
    103                  pObj->pfDrawTextItem = _DrawTextItemV;
    104                } else {
    105                  pObj->Widget.State &= ~WIDGET_STATE_VERTICAL;
   \   00000040   F710A0E3           MOV      R1,#+247
   \   00000044   FF1C81E3           ORR      R1,R1,#0xFF00
   \   00000048   000001E0           AND      R0,R1,R0
    106                  pObj->pfDrawTextItem = MULTIPAGE__DrawTextItemH;
   \   0000004C   ........           LDR      R1,??DataTable1_2
   \                     ??MULTIPAGE_SetRotation_3:
   \   00000050   5C1085E5           STR      R1,[R5, #+92]
   \                     ??MULTIPAGE_SetRotation_2:
   \   00000054   B203C5E1           STRH     R0,[R5, #+50]
    107                }
    108              }
    109              MULTIPAGE__DeleteScrollbar(hObj);
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       MULTIPAGE__DeleteScrollbar
    110              MULTIPAGE__CalcClientRect(hObj, &rClient);
   \   00000060   0D10A0E1           MOV      R1,SP
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       MULTIPAGE__CalcClientRect
    111              WM_MoveTo(pObj->hClient, rClient.x0 + pObj->Widget.Win.Rect.x0,
    112                                       rClient.y0 + pObj->Widget.Win.Rect.y0);
   \   0000006C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000070   F210D5E1           LDRSH    R1,[R5, #+2]
   \   00000074   002081E0           ADD      R2,R1,R0
   \   00000078   F000DDE1           LDRSH    R0,[SP, #+0]
   \   0000007C   F010D5E1           LDRSH    R1,[R5, #+0]
   \   00000080   001081E0           ADD      R1,R1,R0
   \   00000084   340095E5           LDR      R0,[R5, #+52]
   \   00000088   ........           BL       WM_MoveTo
    113              GUI_UNLOCK_H(pObj);
   \   0000008C   ........           BL       GUI_ALLOC_UnlockH
    114              MULTIPAGE__UpdatePositions(hObj);
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       MULTIPAGE__UpdatePositions
    115              WM_UNLOCK();
   \   00000098   ........           BL       GUI_Unlock
    116            }
    117          }
   \                     ??MULTIPAGE_SetRotation_0:
   \   0000009C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000A0   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??MULTIPAGE_SetRotation_1:
   \   000000A4   080056E3           CMP      R6,#+8
   \   000000A8   E9FFFF1A           BNE      ??MULTIPAGE_SetRotation_2
   \   000000AC   080080E3           ORR      R0,R0,#0x8
   \   000000B0   ........           LDR      R1,??DataTable1_3
   \   000000B4   E5FFFFEA           B        ??MULTIPAGE_SetRotation_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     MULTIPAGE__aEffectColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     LCD_APIListCW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     MULTIPAGE__DrawTextItemH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   ........           DC32     _DrawTextItemV
    118          
    119          #else
    120            void MULTIPAGE_SetRotation_C(void);
    121            void MULTIPAGE_SetRotation_C(void) {} /* avoid empty object files */
    122          #endif
    123          
    124          /*************************** End of file ****************************/
    125          

   Maximum stack usage in bytes:

     Function              .cstack
     --------              -------
     MULTIPAGE_SetRotation     24
     _DrawTextItemV            40


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     _DrawTextItemV         476
     MULTIPAGE_SetRotation  184
     ??DataTable1             4
     ??DataTable1_1           4
     ??DataTable1_2           4
     ??DataTable1_3           4

 
 676 bytes in section .text
 
 676 bytes of CODE memory

Errors: none
Warnings: none
