###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:29 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\DROPDOWN_Default.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\DROPDOWN_Default.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\DROPDOWN_Default.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\DROPDOWN_Default.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\DROPDOWN_Default.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : DROPDOWN_Default.c
     19          Purpose     : Implementation of dropdown widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "DROPDOWN_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Public routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       DROPDOWN_SetDefaultFont
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void DROPDOWN_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
     38            DROPDOWN__DefaultProps.pFont = pFont;
   \                     DROPDOWN_SetDefaultFont:
   \   00000000   ........           LDR      R1,??DataTable7
   \   00000004   000081E5           STR      R0,[R1, #+0]
     39          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     40          
     41          /*********************************************************************
     42          *
     43          *       DROPDOWN_GetDefaultFont
     44          */

   \                                 In section .text, align 4, keep-with-next
     45          const GUI_FONT GUI_UNI_PTR * DROPDOWN_GetDefaultFont(void) {
     46            return DROPDOWN__DefaultProps.pFont;
   \                     DROPDOWN_GetDefaultFont:
   \   00000000   ........           LDR      R0,??DataTable7
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     47          }
     48          
     49          /*********************************************************************
     50          *
     51          *       DROPDOWN_SetDefaultColor
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          GUI_COLOR DROPDOWN_SetDefaultColor(int Index, GUI_COLOR Color) {
     54            GUI_COLOR OldColor = 0;
   \                     DROPDOWN_SetDefaultColor:
   \   00000000   0020A0E3           MOV      R2,#+0
     55            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aColor)) {
   \   00000004   020050E3           CMP      R0,#+2
   \   00000008   0300002A           BCS      ??DROPDOWN_SetDefaultColor_0
     56              OldColor = DROPDOWN__DefaultProps.aColor[Index];
   \   0000000C   ........           LDR      R2,??DataTable7
   \   00000010   000182E0           ADD      R0,R2,R0, LSL #+2
   \   00000014   1C2090E5           LDR      R2,[R0, #+28]
     57              DROPDOWN__DefaultProps.aColor[Index] = Color;
   \   00000018   1C1080E5           STR      R1,[R0, #+28]
     58            }
     59            return OldColor;
   \                     ??DROPDOWN_SetDefaultColor_0:
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   1EFF2FE1           BX       LR               ;; return
     60          }
     61          
     62          /*********************************************************************
     63          *
     64          *       DROPDOWN_SetDefaultBkColor
     65          */

   \                                 In section .text, align 4, keep-with-next
     66          GUI_COLOR DROPDOWN_SetDefaultBkColor(int Index, GUI_COLOR Color) {
     67            GUI_COLOR OldColor = 0;
   \                     DROPDOWN_SetDefaultBkColor:
   \   00000000   0020A0E3           MOV      R2,#+0
     68            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aBackColor)) {
   \   00000004   030050E3           CMP      R0,#+3
   \   00000008   0300002A           BCS      ??DROPDOWN_SetDefaultBkColor_0
     69              OldColor = DROPDOWN__DefaultProps.aBackColor[Index];
   \   0000000C   ........           LDR      R2,??DataTable7
   \   00000010   000182E0           ADD      R0,R2,R0, LSL #+2
   \   00000014   042090E5           LDR      R2,[R0, #+4]
     70              DROPDOWN__DefaultProps.aBackColor[Index] = Color;
   \   00000018   041080E5           STR      R1,[R0, #+4]
     71            }
     72            return OldColor;
   \                     ??DROPDOWN_SetDefaultBkColor_0:
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   1EFF2FE1           BX       LR               ;; return
     73          }
     74          
     75          /*********************************************************************
     76          *
     77          *       DROPDOWN_GetDefaultBkColor
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          GUI_COLOR DROPDOWN_GetDefaultBkColor(int Index) {
     80            GUI_COLOR Color = 0;
   \                     DROPDOWN_GetDefaultBkColor:
   \   00000000   0010A0E3           MOV      R1,#+0
     81            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aBackColor)) {
   \   00000004   030050E3           CMP      R0,#+3
     82              Color = DROPDOWN__DefaultProps.aBackColor[Index];
   \   00000008   ........           LDRCC    R1,??DataTable7
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   04109035           LDRCC    R1,[R0, #+4]
     83            }
     84            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
     85          }
     86          
     87          /*********************************************************************
     88          *
     89          *       DROPDOWN_SetDefaultScrollbarColor
     90          */

   \                                 In section .text, align 4, keep-with-next
     91          GUI_COLOR DROPDOWN_SetDefaultScrollbarColor(int Index, GUI_COLOR Color) {
     92            GUI_COLOR OldColor = 0;
   \                     DROPDOWN_SetDefaultScrollbarColor:
   \   00000000   0020A0E3           MOV      R2,#+0
     93            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aScrollbarColor)) {
   \   00000004   030050E3           CMP      R0,#+3
   \   00000008   0300002A           BCS      ??DROPDOWN_SetDefaultScrollbarColor_0
     94              OldColor = DROPDOWN__DefaultProps.aScrollbarColor[Index];
   \   0000000C   ........           LDR      R2,??DataTable7
   \   00000010   000182E0           ADD      R0,R2,R0, LSL #+2
   \   00000014   242090E5           LDR      R2,[R0, #+36]
     95              DROPDOWN__DefaultProps.aScrollbarColor[Index] = Color;
   \   00000018   241080E5           STR      R1,[R0, #+36]
     96            }
     97            return OldColor;
   \                     ??DROPDOWN_SetDefaultScrollbarColor_0:
   \   0000001C   0200A0E1           MOV      R0,R2
   \   00000020   1EFF2FE1           BX       LR               ;; return
     98          }
     99          
    100          /*********************************************************************
    101          *
    102          *       DROPDOWN_GetDefaultColor
    103          */

   \                                 In section .text, align 4, keep-with-next
    104          GUI_COLOR DROPDOWN_GetDefaultColor(int Index) {
    105            GUI_COLOR Color = 0;
   \                     DROPDOWN_GetDefaultColor:
   \   00000000   0010A0E3           MOV      R1,#+0
    106            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aColor)) {
   \   00000004   020050E3           CMP      R0,#+2
    107              Color = DROPDOWN__DefaultProps.aColor[Index];
   \   00000008   ........           LDRCC    R1,??DataTable7
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   1C109035           LDRCC    R1,[R0, #+28]
    108            }
    109            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
    110          }
    111          
    112          /*********************************************************************
    113          *
    114          *       DROPDOWN_GetDefaultScrollbarColor
    115          */

   \                                 In section .text, align 4, keep-with-next
    116          GUI_COLOR DROPDOWN_GetDefaultScrollbarColor(int Index) {
    117            GUI_COLOR Color = 0;
   \                     DROPDOWN_GetDefaultScrollbarColor:
   \   00000000   0010A0E3           MOV      R1,#+0
    118            if (Index < GUI_COUNTOF(DROPDOWN__DefaultProps.aScrollbarColor)) {
   \   00000004   030050E3           CMP      R0,#+3
    119              Color = DROPDOWN__DefaultProps.aScrollbarColor[Index];
   \   00000008   ........           LDRCC    R1,??DataTable7
   \   0000000C   00018130           ADDCC    R0,R1,R0, LSL #+2
   \   00000010   24109035           LDRCC    R1,[R0, #+36]
    120            }
    121            return Color;
   \   00000014   0100A0E1           MOV      R0,R1
   \   00000018   1EFF2FE1           BX       LR               ;; return
    122          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   ........           DC32     DROPDOWN__DefaultProps
    123          
    124          #else                            /* Avoid problems with empty object modules */
    125            void DROPDOWN_Default_C(void);
    126            void DROPDOWN_Default_C(void) {}
    127          #endif

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     DROPDOWN_GetDefaultBkColor          0
     DROPDOWN_GetDefaultColor            0
     DROPDOWN_GetDefaultFont             0
     DROPDOWN_GetDefaultScrollbarColor
                                         0
     DROPDOWN_SetDefaultBkColor          0
     DROPDOWN_SetDefaultColor            0
     DROPDOWN_SetDefaultFont             0
     DROPDOWN_SetDefaultScrollbarColor
                                         0


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     DROPDOWN_SetDefaultFont          12
     DROPDOWN_GetDefaultFont          12
     DROPDOWN_SetDefaultColor         36
     DROPDOWN_SetDefaultBkColor       36
     DROPDOWN_GetDefaultBkColor       28
     DROPDOWN_SetDefaultScrollbarColor
                                      36
     DROPDOWN_GetDefaultColor         28
     DROPDOWN_GetDefaultScrollbarColor
                                      28
     ??DataTable7                      4

 
 220 bytes in section .text
 
 220 bytes of CODE memory

Errors: none
Warnings: none
