###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:41 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_GetOrg.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\WM_GetOrg.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_GetOrg.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_GetOrg.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_GetOrg.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_GetOrg.c
     19          Purpose     : Implementation of WM_GetOrg and related functions
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_GetWindowOrgX
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          int WM_GetWindowOrgX(WM_HWIN hWin) {
   \                     WM_GetWindowOrgX:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     38            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     39            if (hWin) {
   \   00000010   0400000A           BEQ      ??WM_GetWindowOrgX_0
     40              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     41              r = WM_HANDLE2PTR(hWin)->Rect.x0;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_h2p
   \   00000020   F050D0E1           LDRSH    R5,[R0, #+0]
     42              WM_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
     43            }
     44            return r;
   \                     ??WM_GetWindowOrgX_0:
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   04D08DE2           ADD      SP,SP,#+4
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
     45          }
     46          
     47          /*********************************************************************
     48          *
     49          *       WM_GetWindowOrgY
     50          */

   \                                 In section .text, align 4, keep-with-next
     51          int WM_GetWindowOrgY(WM_HWIN hWin) {
   \                     WM_GetWindowOrgY:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     52            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     53            if (hWin) {
   \   00000010   0400000A           BEQ      ??WM_GetWindowOrgY_0
     54              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     55              r = WM_HANDLE2PTR(hWin)->Rect.y0;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_h2p
   \   00000020   F250D0E1           LDRSH    R5,[R0, #+2]
     56              WM_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
     57            }
     58            return r;
   \                     ??WM_GetWindowOrgY_0:
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   04D08DE2           ADD      SP,SP,#+4
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
     59          }
     60          
     61          /*********************************************************************
     62          *
     63          *       WM_GetOrgX
     64          */

   \                                 In section .text, align 4, keep-with-next
     65          int WM_GetOrgX(void) {
   \                     WM_GetOrgX:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     66            return WM_GetWindowOrgX(GUI_Context.hAWin);
   \   00000004   ........           LDR      R0,??DataTable1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   3C4090E5           LDR      R4,[R0, #+60]
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   0400000A           BEQ      ??WM_GetOrgX_0
   \   0000001C   ........           BL       GUI_Lock
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_h2p
   \   00000028   F050D0E1           LDRSH    R5,[R0, #+0]
   \   0000002C   ........           BL       GUI_Unlock
   \                     ??WM_GetOrgX_0:
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   04D08DE2           ADD      SP,SP,#+4
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
     67          }
     68          
     69          /*********************************************************************
     70          *
     71          *       WM_GetOrgY
     72          */

   \                                 In section .text, align 4, keep-with-next
     73          int WM_GetOrgY(void) {
   \                     WM_GetOrgY:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
     74            return WM_GetWindowOrgY(GUI_Context.hAWin);
   \   00000004   ........           LDR      R0,??DataTable1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   3C4090E5           LDR      R4,[R0, #+60]
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   0400000A           BEQ      ??WM_GetOrgY_0
   \   0000001C   ........           BL       GUI_Lock
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_h2p
   \   00000028   F250D0E1           LDRSH    R5,[R0, #+2]
   \   0000002C   ........           BL       GUI_Unlock
   \                     ??WM_GetOrgY_0:
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   04D08DE2           ADD      SP,SP,#+4
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
     75          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context
     76          
     77          
     78          #else
     79            void WM_GetOrg_C(void) {} /* avoid empty object files */
     80          #endif
     81          
     82          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     WM_GetOrgX           16
     WM_GetOrgY           16
     WM_GetWindowOrgX     16
     WM_GetWindowOrgY     16


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     WM_GetWindowOrgX   52
     WM_GetWindowOrgY   52
     WM_GetOrgX         60
     WM_GetOrgY         60
     ??DataTable1        4

 
 228 bytes in section .text
 
 228 bytes of CODE memory

Errors: none
Warnings: none
