###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:16 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\DigitalDisplay.cpp                          #
#    Command line =  C:\DUII\DUII\DigitalDisplay.cpp -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --eec++ --no_static_destruction                          #
#    List file    =  C:\DUII\TargetHW\Release\List\DigitalDisplay.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\DigitalDisplay.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\DigitalDisplay.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: DigitalDisplay.cpp
      5          Description: The digital display object
      6          -----------------------------------------------------------------
      7          */
      8          #include "DigitalDisplay.hpp"
      9          #include <string.h>
     10          
     11          

   \                                 In section .text, align 4, keep-with-next
     12          DigitalDisplay::DigitalDisplay(int xLoc, int yLoc, int xSize, int ySize, char *Name, char *Units, float dMin, float dMax, int iPrecision, int iDividerLock, DigitalOptions Options, Alarm *AlarmList, bool bShowLabel, GUI_FONT fNumberFont, GUI_FONT fLabelFont, WM_HWIN _hParent) : ControlBase(xLoc, yLoc, Name, Units, AlarmList)
   \                     _ZN14DigitalDisplayC1EiiiiPcS0_ffii14DigitalOptionsP5Alarmb8GUI_FONTS4_l:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   38009DE5           LDR      R0,[SP, #+56]
   \   00000010   50C09DE5           LDR      R12,[SP, #+80]
     13          {
   \   00000014   00008DE5           STR      R0,[SP, #+0]
   \   00000018   30509DE5           LDR      R5,[SP, #+48]
   \   0000001C   34309DE5           LDR      R3,[SP, #+52]
   \   00000020   3C609DE5           LDR      R6,[SP, #+60]
   \   00000024   40709DE5           LDR      R7,[SP, #+64]
   \   00000028   44809DE5           LDR      R8,[SP, #+68]
   \   0000002C   48909DE5           LDR      R9,[SP, #+72]
   \   00000030   4CA0DDE5           LDRB     R10,[SP, #+76]
   \   00000034   54B0DDE5           LDRB     R11,[SP, #+84]
   \   00000038   04C08DE5           STR      R12,[SP, #+4]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
     14          	Width = xSize;
   \   00000044   08009DE5           LDR      R0,[SP, #+8]
   \   00000048   500084E5           STR      R0,[R4, #+80]
     15          	Height = ySize;
   \   0000004C   545084E5           STR      R5,[R4, #+84]
     16          
     17          	Precision = iPrecision;
   \   00000050   588084E5           STR      R8,[R4, #+88]
     18          	Min = dMin;
   \   00000054   486084E5           STR      R6,[R4, #+72]
     19          	Max = dMax;
   \   00000058   4C7084E5           STR      R7,[R4, #+76]
     20          	DividerLoc = iDividerLock;
   \   0000005C   709084E5           STR      R9,[R4, #+112]
     21          	DisplayOptions = Options;
   \   00000060   74A0C4E5           STRB     R10,[R4, #+116]
     22          
     23          	Value = 0.0;
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   440084E5           STR      R0,[R4, #+68]
     24          	ShowLabel = bShowLabel;
   \   0000006C   7CB0C4E5           STRB     R11,[R4, #+124]
     25          	
     26          	// Create memory device (whether used or not)
     27          	mem = GUI_MEMDEV_Create(x, y, Width, Height);
   \   00000070   543094E5           LDR      R3,[R4, #+84]
   \   00000074   502094E5           LDR      R2,[R4, #+80]
   \   00000078   081094E5           LDR      R1,[R4, #+8]
   \   0000007C   040094E5           LDR      R0,[R4, #+4]
   \   00000080   ........           BL       GUI_MEMDEV_Create
   \   00000084   8C0084E5           STR      R0,[R4, #+140]
     28          
     29          	fTextFont = fNumberFont;
   \   00000088   58108DE2           ADD      R1,SP,#+88
   \   0000008C   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   00000090   900084E2           ADD      R0,R4,#+144
   \   00000094   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   00000098   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   0000009C   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
     30          	fUnitsFont = fLabelFont;
   \   000000A0   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   000000A4   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   000000A8   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   000000AC   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
     31          
     32          	MaxStrLen = GetMaxTextLength();
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
   \   000000B8   780084E5           STR      R0,[R4, #+120]
     33          }
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   0CD08DE2           ADD      SP,SP,#+12
   \   000000C4   F08FBDE8           POP      {R4-R11,PC}      ;; return
     34          

   \                                 In section .text, align 4, keep-with-next
     35          DigitalDisplay::DigitalDisplay(int xLoc, int yLoc, int xSize, int ySize, char *sName, char *sUnits, float dMin, float dMax, int iPrecision, int iDividerLoc, DigitalOptions Options, Alarm *AlarmList, bool bShowLabel, WM_HWIN _hParent) : ControlBase(xLoc, yLoc, sName, sUnits, AlarmList)
   \                     _ZN14DigitalDisplayC1EiiiiPcS0_ffii14DigitalOptionsP5Alarmbl:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   38009DE5           LDR      R0,[SP, #+56]
   \   00000010   50C09DE5           LDR      R12,[SP, #+80]
     36          {
   \   00000014   00008DE5           STR      R0,[SP, #+0]
   \   00000018   30509DE5           LDR      R5,[SP, #+48]
   \   0000001C   34309DE5           LDR      R3,[SP, #+52]
   \   00000020   3C609DE5           LDR      R6,[SP, #+60]
   \   00000024   40709DE5           LDR      R7,[SP, #+64]
   \   00000028   44809DE5           LDR      R8,[SP, #+68]
   \   0000002C   48909DE5           LDR      R9,[SP, #+72]
   \   00000030   4CA0DDE5           LDRB     R10,[SP, #+76]
   \   00000034   54B0DDE5           LDRB     R11,[SP, #+84]
   \   00000038   04C08DE5           STR      R12,[SP, #+4]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
     37          	Width = xSize;
   \   00000044   08009DE5           LDR      R0,[SP, #+8]
   \   00000048   500084E5           STR      R0,[R4, #+80]
     38          	Height = ySize;
   \   0000004C   545084E5           STR      R5,[R4, #+84]
     39          	Precision = iPrecision;
   \   00000050   588084E5           STR      R8,[R4, #+88]
     40          	Min = dMin;
   \   00000054   486084E5           STR      R6,[R4, #+72]
     41          	Max = dMax;
   \   00000058   4C7084E5           STR      R7,[R4, #+76]
     42          	DividerLoc = iDividerLoc;
   \   0000005C   709084E5           STR      R9,[R4, #+112]
     43          	DisplayOptions = Options;
   \   00000060   74A0C4E5           STRB     R10,[R4, #+116]
     44          
     45          	Value = 0.0;
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   440084E5           STR      R0,[R4, #+68]
     46          	ShowLabel = bShowLabel;
   \   0000006C   7CB0C4E5           STRB     R11,[R4, #+124]
     47          	
     48          	mem = GUI_MEMDEV_Create(x, y, Width, Height);
   \   00000070   543094E5           LDR      R3,[R4, #+84]
   \   00000074   502094E5           LDR      R2,[R4, #+80]
   \   00000078   081094E5           LDR      R1,[R4, #+8]
   \   0000007C   040094E5           LDR      R0,[R4, #+4]
   \   00000080   ........           BL       GUI_MEMDEV_Create
   \   00000084   8C0084E5           STR      R0,[R4, #+140]
     49          	PickFont();
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       _ZN14DigitalDisplay8PickFontEv
     50          	fUnitsFont = fTextFont;
   \   00000090   901084E2           ADD      R1,R4,#+144
   \   00000094   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   00000098   B40084E2           ADD      R0,R4,#+180
   \   0000009C   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   000000A0   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   000000A4   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
     51          
     52          	MaxStrLen = GetMaxTextLength();
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
   \   000000B0   780084E5           STR      R0,[R4, #+120]
     53          }
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   0CD08DE2           ADD      SP,SP,#+12
   \   000000BC   F08FBDE8           POP      {R4-R11,PC}      ;; return
     54          

   \                                 In section .text, align 4, keep-with-next
     55          DigitalDisplay::~DigitalDisplay()
     56          {
   \                     _ZN14DigitalDisplayD1Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     57          	GUI_MEMDEV_Delete(mem);
   \   00000008   8C0094E5           LDR      R0,[R4, #+140]
   \   0000000C   ........           BL       GUI_MEMDEV_Delete
     58          }
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return
     59          
     60          

   \                                 In section .text, align 4, keep-with-next
     61          void DigitalDisplay::DrawControl()
     62          {
   \                     _ZN14DigitalDisplay11DrawControlEv:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     63          	char strValue[20];
     64          	int txt_length, txt_diff;
     65          	GUI_COLOR Color = GUI_WHITE;
   \   00000008   FF54E0E3           MVN      R5,#-16777216
   \   0000000C   50D04DE2           SUB      SP,SP,#+80
   \   00000010   0560A0E1           MOV      R6,R5
     66          	GUI_RECT rect;
     67          
     68          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   00000014   0200A0E3           MOV      R0,#+2
   \   00000018   ........           BL       GUI_SetTextMode
     69          
     70          	GUI_SetFont(&fTextFont);
   \   0000001C   900084E2           ADD      R0,R4,#+144
   \   00000020   ........           BL       GUI_SetFont
     71          	if(AlarmList != NULL)
   \   00000024   402094E5           LDR      R2,[R4, #+64]
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0F00000A           BEQ      ??DrawControl_0
     72          	{
     73          		Alarm *pAlarm;
     74          		pAlarm = AlarmList;
   \   00000030   443094E5           LDR      R3,[R4, #+68]
     75          		while(pAlarm != NULL)
     76          		{
     77          			if(pAlarm->Enabled == true)
   \                     ??DrawControl_1:
   \   00000034   0000D2E5           LDRB     R0,[R2, #+0]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0800000A           BEQ      ??DrawControl_2
     78          			{
     79          				if(Value >= pAlarm->MinValue && Value <= pAlarm->MaxValue)
   \   00000040   0300A0E1           MOV      R0,R3
   \   00000044   041092E5           LDR      R1,[R2, #+4]
   \   00000048   ........           BL       __aeabi_cfrcmple
   \   0000004C   0400008A           BHI      ??DrawControl_2
   \   00000050   080092E5           LDR      R0,[R2, #+8]
   \   00000054   0310A0E1           MOV      R1,R3
   \   00000058   ........           BL       __aeabi_cfrcmple
     80          				{
     81          					Color = GUI_BLACK;
   \   0000005C   0060A093           MOVLS    R6,#+0
     82          					break;
   \   00000060   0200009A           BLS      ??DrawControl_0
     83          				}
     84          				else
     85          				{
     86          					Color = GUI_WHITE;
     87          				}
     88          			}
     89          			else
     90          			{
     91          				Color = GUI_WHITE;
     92          			}
     93          
     94          			pAlarm = pAlarm->Next;
   \                     ??DrawControl_2:
   \   00000064   182092E5           LDR      R2,[R2, #+24]
     95          		}
   \   00000068   000052E3           CMP      R2,#+0
   \   0000006C   F0FFFF1A           BNE      ??DrawControl_1
     96          	}
     97          	else
     98          	{
     99          		Color = GUI_WHITE;
    100          	}
    101          
    102          	GUI_SetColor(Color);
   \                     ??DrawControl_0:
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       GUI_SetColor
    103          
    104          	strcpy(strValue, GetDisplayText());
   \   00000078   4C0094E5           LDR      R0,[R4, #+76]
   \   0000007C   ........           BL       __aeabi_f2d
   \   00000080   0020A0E1           MOV      R2,R0
   \   00000084   0130A0E1           MOV      R3,R1
   \   00000088   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000090   30008DE2           ADD      R0,SP,#+48
   \   00000094   ........           BL       sprintf
   \   00000098   30008DE2           ADD      R0,SP,#+48
   \   0000009C   ........           BL       strlen
   \   000000A0   0020A0E1           MOV      R2,R0
   \   000000A4   583094E5           LDR      R3,[R4, #+88]
   \   000000A8   ............       ADRL     R1,`?<Constant "%%%d.%df">`
   \              ....        
   \   000000B0   08008DE2           ADD      R0,SP,#+8
   \   000000B4   ........           BL       sprintf
   \   000000B8   440094E5           LDR      R0,[R4, #+68]
   \   000000BC   ........           BL       __aeabi_f2d
   \   000000C0   0020A0E1           MOV      R2,R0
   \   000000C4   0130A0E1           MOV      R3,R1
   \   000000C8   08108DE2           ADD      R1,SP,#+8
   \   000000CC   5C0084E2           ADD      R0,R4,#+92
   \   000000D0   ........           BL       sprintf
   \   000000D4   5C1084E2           ADD      R1,R4,#+92
   \   000000D8   1C008DE2           ADD      R0,SP,#+28
   \   000000DC   ........           BL       strcpy
    105          	txt_length = GUI_GetStringDistX(strValue);
   \   000000E0   1C008DE2           ADD      R0,SP,#+28
   \   000000E4   ........           BL       GUI_GetStringDistX
    106          
    107          	rect.x0 = x;
   \   000000E8   041094E5           LDR      R1,[R4, #+4]
   \   000000EC   B010CDE1           STRH     R1,[SP, #+0]
    108          	rect.y0 = y;
   \   000000F0   082094E5           LDR      R2,[R4, #+8]
    109          	rect.x1 = x + txt_length;
   \   000000F4   010080E0           ADD      R0,R0,R1
   \   000000F8   B220CDE1           STRH     R2,[SP, #+2]
   \   000000FC   B400CDE1           STRH     R0,[SP, #+4]
    110          	rect.y1 = y + Height;
   \   00000100   540094E5           LDR      R0,[R4, #+84]
   \   00000104   020080E0           ADD      R0,R0,R2
   \   00000108   B600CDE1           STRH     R0,[SP, #+6]
    111          
    112          	if(ShowLabel)
   \   0000010C   7C00D4E5           LDRB     R0,[R4, #+124]
   \   00000110   000050E3           CMP      R0,#+0
   \   00000114   1600000A           BEQ      ??DrawControl_3
    113          	{
    114          		txt_diff = GUI_GetStringDistX(sName);
   \   00000118   0C0084E2           ADD      R0,R4,#+12
   \   0000011C   ........           BL       GUI_GetStringDistX
   \   00000120   0060A0E1           MOV      R6,R0
    115          
    116          		GUI_SetFont(&fUnitsFont);
   \   00000124   B40084E2           ADD      R0,R4,#+180
   \   00000128   ........           BL       GUI_SetFont
    117          		rect.x1 = x + txt_diff;
   \   0000012C   040094E5           LDR      R0,[R4, #+4]
    118          		GUI_DispStringInRect(sName, &rect, GUI_TA_VCENTER | GUI_TA_RIGHT);
   \   00000130   0D20A0E3           MOV      R2,#+13
   \   00000134   000086E0           ADD      R0,R6,R0
   \   00000138   B400CDE1           STRH     R0,[SP, #+4]
   \   0000013C   0D10A0E1           MOV      R1,SP
   \   00000140   0C0084E2           ADD      R0,R4,#+12
   \   00000144   ........           BL       GUI_DispStringInRect
    119          		rect.x0 = rect.x1 + 1;
   \   00000148   F400DDE1           LDRSH    R0,[SP, #+4]
   \   0000014C   010080E2           ADD      R0,R0,#+1
   \   00000150   B000CDE1           STRH     R0,[SP, #+0]
    120          		rect.x1 = x + Width - GUI_GetStringDistX(sUnits) - 5;
   \   00000154   250084E2           ADD      R0,R4,#+37
   \   00000158   ........           BL       GUI_GetStringDistX
   \   0000015C   041094E5           LDR      R1,[R4, #+4]
   \   00000160   502094E5           LDR      R2,[R4, #+80]
   \   00000164   011082E0           ADD      R1,R2,R1
   \   00000168   000041E0           SUB      R0,R1,R0
   \   0000016C   050040E2           SUB      R0,R0,#+5
   \   00000170   B400CDE1           STRH     R0,[SP, #+4]
    121          	}
    122          
    123          	GUI_SetFont(&fTextFont);
   \                     ??DrawControl_3:
   \   00000174   900084E2           ADD      R0,R4,#+144
   \   00000178   ........           BL       GUI_SetFont
    124          	GUI_DispStringInRect(strValue, &rect, GUI_TA_VCENTER | GUI_TA_RIGHT);
   \   0000017C   0D20A0E3           MOV      R2,#+13
   \   00000180   0D10A0E1           MOV      R1,SP
   \   00000184   1C008DE2           ADD      R0,SP,#+28
   \   00000188   ........           BL       GUI_DispStringInRect
    125          
    126          	GUI_SetFont(&fUnitsFont);
   \   0000018C   B40084E2           ADD      R0,R4,#+180
   \   00000190   ........           BL       GUI_SetFont
    127          	rect.x0 = rect.x1 + 5;
   \   00000194   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000198   050080E2           ADD      R0,R0,#+5
   \   0000019C   B000CDE1           STRH     R0,[SP, #+0]
    128          	rect.x1 = x + Width;
   \   000001A0   040094E5           LDR      R0,[R4, #+4]
   \   000001A4   501094E5           LDR      R1,[R4, #+80]
   \   000001A8   000081E0           ADD      R0,R1,R0
   \   000001AC   B400CDE1           STRH     R0,[SP, #+4]
    129          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000001B0   ........           LDR      R0,??DataTable6  ;; 0xd3d3d3
   \   000001B4   ........           BL       GUI_SetColor
    130          	GUI_DispStringInRect(sUnits, &rect, GUI_TA_VCENTER | GUI_TA_LEFT);
   \   000001B8   0C20A0E3           MOV      R2,#+12
   \   000001BC   0D10A0E1           MOV      R1,SP
   \   000001C0   250084E2           ADD      R0,R4,#+37
   \   000001C4   ........           BL       GUI_DispStringInRect
    131          	GUI_SetColor(GUI_WHITE);
   \   000001C8   0500A0E1           MOV      R0,R5
   \   000001CC   ........           BL       GUI_SetColor
    132          }
   \   000001D0   50D08DE2           ADD      SP,SP,#+80       ;; stack cleaning
   \   000001D4   7080BDE8           POP      {R4-R6,PC}       ;; return
    133          
    134          
    135          

   \                                 In section .text, align 4, keep-with-next
    136          char *DigitalDisplay::GetDisplayText()
    137          {
   \                     _ZN14DigitalDisplay14GetDisplayTextEv:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   30D04DE2           SUB      SP,SP,#+48
    138          	char str[25];
    139          	char strFormat[20];
    140          	sprintf(str, "%.0f", Max);
   \   0000000C   4C0094E5           LDR      R0,[R4, #+76]
   \   00000010   ........           BL       __aeabi_f2d
   \   00000014   0020A0E1           MOV      R2,R0
   \   00000018   0130A0E1           MOV      R3,R1
   \   0000001C   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000024   14008DE2           ADD      R0,SP,#+20
   \   00000028   ........           BL       sprintf
    141          	sprintf(strFormat, "%%%d.%df", strlen(str), Precision);
   \   0000002C   14008DE2           ADD      R0,SP,#+20
   \   00000030   ........           BL       strlen
   \   00000034   0020A0E1           MOV      R2,R0
   \   00000038   583094E5           LDR      R3,[R4, #+88]
   \   0000003C   ............       ADRL     R1,`?<Constant "%%%d.%df">`
   \              ....        
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           BL       sprintf
    142          
    143          	sprintf(strValue, strFormat, Value);
   \   0000004C   440094E5           LDR      R0,[R4, #+68]
   \   00000050   ........           BL       __aeabi_f2d
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   0130A0E1           MOV      R3,R1
   \   0000005C   0D10A0E1           MOV      R1,SP
   \   00000060   5C0084E2           ADD      R0,R4,#+92
   \   00000064   ........           BL       sprintf
    144          
    145          	return strValue;
   \   00000068   5C0084E2           ADD      R0,R4,#+92
   \   0000006C   30D08DE2           ADD      SP,SP,#+48
   \   00000070   1080BDE8           POP      {R4,PC}          ;; return
    146          }
    147          
    148          /****************************************************************
    149          *
    150          *       SetValue(float value)
    151          *		Set the value of the gauge to the value specified
    152          *
    153          ******************************************************************/

   \                                 In section .text, align 4, keep-with-next
    154          void DigitalDisplay::SetValue(float dValue)
    155          {
    156          	Value = dValue;
   \                     _ZN14DigitalDisplay8SetValueEf:
   \   00000000   441080E5           STR      R1,[R0, #+68]
    157          }
   \   00000004   1EFF2FE1           BX       LR               ;; return
    158          

   \                                 In section .text, align 4, keep-with-next
    159          int DigitalDisplay::GetMaxTextLength()
    160          {
   \                     _ZN14DigitalDisplay16GetMaxTextLengthEv:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   94D04DE2           SUB      SP,SP,#+148
    161          	int txt_length;
    162          	float old_value;
    163          	char str[100];
    164          
    165          	GUI_SetFont(&fTextFont);
   \   0000000C   900084E2           ADD      R0,R4,#+144
   \   00000010   ........           BL       GUI_SetFont
    166          
    167          	old_value = Value;
    168          	Value = Max;
   \   00000014   4C0094E5           LDR      R0,[R4, #+76]
   \   00000018   445094E5           LDR      R5,[R4, #+68]
   \   0000001C   440084E5           STR      R0,[R4, #+68]
    169          	if(ShowLabel)
   \   00000020   7C00D4E5           LDRB     R0,[R4, #+124]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0300000A           BEQ      ??GetMaxTextLength_0
    170          		strcpy(str, sName);
   \   0000002C   0C1084E2           ADD      R1,R4,#+12
   \   00000030   30008DE2           ADD      R0,SP,#+48
   \   00000034   ........           BL       strcpy
   \   00000038   030000EA           B        ??GetMaxTextLength_1
    171          	else
    172          		strcpy(str, "");
   \                     ??GetMaxTextLength_0:
   \   0000003C   ........           ADR      R0,??DataTable5  ;; ""
   \   00000040   0020D0E5           LDRB     R2,[R0, #0]
   \   00000044   30108DE2           ADD      R1,SP,#+48
   \   00000048   0020C1E5           STRB     R2,[R1, #+0]
    173          
    174          	strcat(str, GetDisplayText());
   \                     ??GetMaxTextLength_1:
   \   0000004C   4C0094E5           LDR      R0,[R4, #+76]
   \   00000050   ........           BL       __aeabi_f2d
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   0130A0E1           MOV      R3,R1
   \   0000005C   ............       ADRL     R1,`?<Constant "%.0f">`
   \              ....        
   \   00000064   14008DE2           ADD      R0,SP,#+20
   \   00000068   ........           BL       sprintf
   \   0000006C   14008DE2           ADD      R0,SP,#+20
   \   00000070   ........           BL       strlen
   \   00000074   0020A0E1           MOV      R2,R0
   \   00000078   583094E5           LDR      R3,[R4, #+88]
   \   0000007C   ............       ADRL     R1,`?<Constant "%%%d.%df">`
   \              ....        
   \   00000084   0D00A0E1           MOV      R0,SP
   \   00000088   ........           BL       sprintf
   \   0000008C   440094E5           LDR      R0,[R4, #+68]
   \   00000090   ........           BL       __aeabi_f2d
   \   00000094   0020A0E1           MOV      R2,R0
   \   00000098   0130A0E1           MOV      R3,R1
   \   0000009C   0D10A0E1           MOV      R1,SP
   \   000000A0   5C0084E2           ADD      R0,R4,#+92
   \   000000A4   ........           BL       sprintf
   \   000000A8   5C1084E2           ADD      R1,R4,#+92
   \   000000AC   30008DE2           ADD      R0,SP,#+48
   \   000000B0   ........           BL       strcat
    175          
    176          	Value = old_value;
   \   000000B4   445084E5           STR      R5,[R4, #+68]
    177          
    178          	txt_length = GUI_GetStringDistX(str);
    179          
    180          	return txt_length;
   \   000000B8   30008DE2           ADD      R0,SP,#+48
   \   000000BC   ........           BL       GUI_GetStringDistX
   \   000000C0   94D08DE2           ADD      SP,SP,#+148      ;; stack cleaning
   \   000000C4   3080BDE8           POP      {R4,R5,PC}       ;; return
    181          }
    182          
    183          
    184          

   \                                 In section .text, align 4, keep-with-next
    185          void DigitalDisplay::PickFont()
    186          {
   \                     _ZN14DigitalDisplay8PickFontEv:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    187          	int txt_height, txt_width;
    188          
    189          	// pick the right size font
    190          	fTextFont = DIGITAL_LARGE_FONT;
   \   00000004   ........           LDR      R5,??DataTable6_1
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   00000010   900084E2           ADD      R0,R4,#+144
   \   00000014   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   00000018   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \   0000001C   245045E2           SUB      R5,R5,#+36
   \   00000020   0E10A0E8           STM      R0!,{R1-R3,R12}
   \   00000024   04D04DE2           SUB      SP,SP,#+4
    191          	txt_height = GUI_GetYDistOfFont(&DIGITAL_LARGE_FONT);
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   ........           BL       GUI_GetYDistOfFont
   \   00000030   0070A0E1           MOV      R7,R0
    192          	txt_width = GetMaxTextLength();
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
    193          	if(txt_height < Height && txt_width < Width)
   \   0000003C   541094E5           LDR      R1,[R4, #+84]
   \   00000040   010057E1           CMP      R7,R1
   \   00000044   501094B5           LDRLT    R1,[R4, #+80]
   \   00000048   010050B1           CMPLT    R0,R1
   \   0000004C   040000AA           BGE      ??PickFont_0
    194          	{
    195          		fTextFont = DIGITAL_LARGE_FONT;
   \                     ??PickFont_1:
   \   00000050   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   00000054   900084E2           ADD      R0,R4,#+144
   \   00000058   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   0000005C   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \   00000060   360000EA           B        ??PickFont_2
    196          		return;
    197          	}
    198          
    199          	fTextFont = DIGITAL_MEDIUM_FONT;
   \                     ??PickFont_0:
   \   00000064   ........           LDR      R5,??DataTable6_2
   \   00000068   900084E2           ADD      R0,R4,#+144
   \   0000006C   0E50B5E8           LDM      R5!,{R1-R3,R12,LR}
   \   00000070   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   00000074   0E10B5E8           LDM      R5!,{R1-R3,R12}
   \   00000078   245045E2           SUB      R5,R5,#+36
   \   0000007C   0E10A0E8           STM      R0!,{R1-R3,R12}
    200          	txt_height = GUI_GetYDistOfFont(&DIGITAL_MEDIUM_FONT);
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   ........           BL       GUI_GetYDistOfFont
   \   00000088   0070A0E1           MOV      R7,R0
    201          	txt_width = GetMaxTextLength();
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
    202          	if(txt_height < Height && txt_width < Width)
   \   00000094   541094E5           LDR      R1,[R4, #+84]
   \   00000098   010057E1           CMP      R7,R1
   \   0000009C   501094B5           LDRLT    R1,[R4, #+80]
   \   000000A0   010050B1           CMPLT    R0,R1
   \   000000A4   E9FFFFBA           BLT      ??PickFont_1
    203          	{
    204          		fTextFont = DIGITAL_MEDIUM_FONT;
    205          		return;
    206          	}
    207          	
    208          	fTextFont = DIGITAL_SMALL_FONT;
   \                     ??PickFont_3:
   \   000000A8   ........           LDR      R6,??DataTable6_3
   \   000000AC   900084E2           ADD      R0,R4,#+144
   \   000000B0   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   000000B4   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   000000B8   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \   000000BC   246046E2           SUB      R6,R6,#+36
   \   000000C0   0E10A0E8           STM      R0!,{R1-R3,R12}
    209          	txt_height = GUI_GetYDistOfFont(&DIGITAL_SMALL_FONT);
   \   000000C4   0600A0E1           MOV      R0,R6
   \   000000C8   ........           BL       GUI_GetYDistOfFont
   \   000000CC   0070A0E1           MOV      R7,R0
    210          	txt_width = GetMaxTextLength();
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
    211          	if(txt_height < Height && txt_width < Width)
   \   000000D8   541094E5           LDR      R1,[R4, #+84]
   \   000000DC   010057E1           CMP      R7,R1
   \   000000E0   501094B5           LDRLT    R1,[R4, #+80]
   \   000000E4   010050B1           CMPLT    R0,R1
   \   000000E8   100000BA           BLT      ??PickFont_4
    212          	{
    213          		fTextFont = DIGITAL_SMALL_FONT;
    214          		return;
    215          	}
    216          	
    217          	fTextFont = DIGITAL_TINY_FONT;
   \   000000EC   ........           LDR      R6,??DataTable6_4
   \   000000F0   900084E2           ADD      R0,R4,#+144
   \   000000F4   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   000000F8   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   000000FC   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \   00000100   246046E2           SUB      R6,R6,#+36
   \   00000104   0E10A0E8           STM      R0!,{R1-R3,R12}
    218          	txt_height = GUI_GetYDistOfFont(&DIGITAL_TINY_FONT);
   \   00000108   0600A0E1           MOV      R0,R6
   \   0000010C   ........           BL       GUI_GetYDistOfFont
   \   00000110   0070A0E1           MOV      R7,R0
    219          	txt_width = GetMaxTextLength();
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
    220          	if(txt_height < Height && txt_width < Width)
   \   0000011C   541094E5           LDR      R1,[R4, #+84]
   \   00000120   010057E1           CMP      R7,R1
   \   00000124   501094B5           LDRLT    R1,[R4, #+80]
   \   00000128   010050B1           CMPLT    R0,R1
   \   0000012C   C7FFFFAA           BGE      ??PickFont_1
    221          	{
    222          		fTextFont = DIGITAL_TINY_FONT;
   \                     ??PickFont_4:
   \   00000130   0E50B6E8           LDM      R6!,{R1-R3,R12,LR}
   \   00000134   900084E2           ADD      R0,R4,#+144
   \   00000138   0E50A0E8           STM      R0!,{R1-R3,R12,LR}
   \   0000013C   0E10B6E8           LDM      R6!,{R1-R3,R12}
   \                     ??PickFont_2:
   \   00000140   0E10A0E8           STM      R0!,{R1-R3,R12}
    223          		return;
   \   00000144   04D08DE2           ADD      SP,SP,#+4
   \   00000148   F080BDE8           POP      {R4-R7,PC}       ;; return
    224          	}
    225          	
    226          	fTextFont = DIGITAL_MEDIUM_FONT;		// KMC - MUST pick some font - otherwise text measurement will crash
    227          }
    228          

   \                                 In section .text, align 4, keep-with-next
    229          GUI_MEMDEV_Handle DigitalDisplay::DrawToMemArea()
    230          {
   \                     _ZN14DigitalDisplay13DrawToMemAreaEv:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    231          	char strValue[20];
    232          	int txt_length, txt_diff, x1, y1, iTemp;
    233          	GUI_COLOR BkColor = GUI_BLACK, Color = GUI_WHITE;
   \   00000008   FF54E0E3           MVN      R5,#-16777216
   \   0000000C   50D04DE2           SUB      SP,SP,#+80
   \   00000010   0070A0E3           MOV      R7,#+0
   \   00000014   0560A0E1           MOV      R6,R5
    234          	GUI_RECT rect;
    235          	GUI_MEMDEV_Select(mem);
   \   00000018   8C0094E5           LDR      R0,[R4, #+140]
   \   0000001C   ........           BL       GUI_MEMDEV_Select
    236          	GUI_ClearRect(x, y, x + Width, y + Height);
   \   00000020   081094E5           LDR      R1,[R4, #+8]
   \   00000024   542094E5           LDR      R2,[R4, #+84]
   \   00000028   040094E5           LDR      R0,[R4, #+4]
   \   0000002C   013082E0           ADD      R3,R2,R1
   \   00000030   502094E5           LDR      R2,[R4, #+80]
   \   00000034   002082E0           ADD      R2,R2,R0
   \   00000038   ........           BL       GUI_ClearRect
    237          
    238          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   ........           BL       GUI_SetTextMode
    239          
    240          	GUI_SetFont(&fTextFont);
   \   00000044   900084E2           ADD      R0,R4,#+144
   \   00000048   ........           BL       GUI_SetFont
    241          	if(AlarmList != NULL)
   \   0000004C   402094E5           LDR      R2,[R4, #+64]
   \   00000050   000052E3           CMP      R2,#+0
   \   00000054   1000000A           BEQ      ??DrawToMemArea_0
    242          	{
    243          		Alarm *pAlarm;
    244          		pAlarm = AlarmList;
   \   00000058   443094E5           LDR      R3,[R4, #+68]
    245          		while(pAlarm != NULL)
    246          		{
    247          			if(pAlarm->Enabled == true)
   \                     ??DrawToMemArea_1:
   \   0000005C   0000D2E5           LDRB     R0,[R2, #+0]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0900000A           BEQ      ??DrawToMemArea_2
    248          			{
    249          				if(Value >= pAlarm->MinValue && Value <= pAlarm->MaxValue)
   \   00000068   0300A0E1           MOV      R0,R3
   \   0000006C   041092E5           LDR      R1,[R2, #+4]
   \   00000070   ........           BL       __aeabi_cfrcmple
   \   00000074   0500008A           BHI      ??DrawToMemArea_2
   \   00000078   080092E5           LDR      R0,[R2, #+8]
   \   0000007C   0310A0E1           MOV      R1,R3
   \   00000080   ........           BL       __aeabi_cfrcmple
    250          				{
    251          					BkColor = pAlarm->Color;
   \   00000084   0C709295           LDRLS    R7,[R2, #+12]
    252          					Color = GUI_BLACK;
   \   00000088   0060A093           MOVLS    R6,#+0
    253          					break;
   \   0000008C   0200009A           BLS      ??DrawToMemArea_0
    254          				}
    255          				else
    256          				{
    257          					BkColor = GUI_BLACK;
    258          					Color = GUI_WHITE;
    259          				}
    260          			}
    261          			else
    262          			{
    263          				BkColor = GUI_BLACK;
    264          				Color = GUI_WHITE;
    265          			}
    266          
    267          			pAlarm = pAlarm->Next;
   \                     ??DrawToMemArea_2:
   \   00000090   182092E5           LDR      R2,[R2, #+24]
    268          		}
   \   00000094   000052E3           CMP      R2,#+0
   \   00000098   EFFFFF1A           BNE      ??DrawToMemArea_1
    269          	}
    270          	else
    271          	{
    272          		BkColor = GUI_BLACK;
    273          		Color = GUI_WHITE;
    274          	}
    275          
    276          	GUI_SetColor(BkColor);
   \                     ??DrawToMemArea_0:
   \   0000009C   0700A0E1           MOV      R0,R7
   \   000000A0   ........           BL       GUI_SetColor
    277          	GUI_FillRect(x, y, x + Width, y + Height);
   \   000000A4   081094E5           LDR      R1,[R4, #+8]
   \   000000A8   542094E5           LDR      R2,[R4, #+84]
   \   000000AC   040094E5           LDR      R0,[R4, #+4]
   \   000000B0   013082E0           ADD      R3,R2,R1
   \   000000B4   502094E5           LDR      R2,[R4, #+80]
   \   000000B8   002082E0           ADD      R2,R2,R0
   \   000000BC   ........           BL       GUI_FillRect
    278          	GUI_SetColor(Color);
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   ........           BL       GUI_SetColor
    279          
    280          	y1 = y + Height / 2 - GUI_GetYDistOfFont(&fTextFont) / 2;
   \   000000C8   900084E2           ADD      R0,R4,#+144
   \   000000CC   ........           BL       GUI_GetYDistOfFont
    281          
    282          	strcpy(strValue, GetDisplayText());
   \   000000D0   4C0094E5           LDR      R0,[R4, #+76]
   \   000000D4   ........           BL       __aeabi_f2d
   \   000000D8   0020A0E1           MOV      R2,R0
   \   000000DC   0130A0E1           MOV      R3,R1
   \   000000E0   ........           ADR      R1,`?<Constant "%.0f">`
   \   000000E4   30008DE2           ADD      R0,SP,#+48
   \   000000E8   ........           BL       sprintf
   \   000000EC   30008DE2           ADD      R0,SP,#+48
   \   000000F0   ........           BL       strlen
   \   000000F4   0020A0E1           MOV      R2,R0
   \   000000F8   583094E5           LDR      R3,[R4, #+88]
   \   000000FC   ........           ADR      R1,`?<Constant "%%%d.%df">`
   \   00000100   1C008DE2           ADD      R0,SP,#+28
   \   00000104   ........           BL       sprintf
   \   00000108   440094E5           LDR      R0,[R4, #+68]
   \   0000010C   ........           BL       __aeabi_f2d
   \   00000110   0020A0E1           MOV      R2,R0
   \   00000114   0130A0E1           MOV      R3,R1
   \   00000118   1C108DE2           ADD      R1,SP,#+28
   \   0000011C   5C0084E2           ADD      R0,R4,#+92
   \   00000120   ........           BL       sprintf
   \   00000124   5C1084E2           ADD      R1,R4,#+92
   \   00000128   08008DE2           ADD      R0,SP,#+8
   \   0000012C   ........           BL       strcpy
    283          	txt_length = GUI_GetStringDistX(strValue);
   \   00000130   08008DE2           ADD      R0,SP,#+8
   \   00000134   ........           BL       GUI_GetStringDistX
    284          
    285          	rect.x0 = x;
   \   00000138   041094E5           LDR      R1,[R4, #+4]
   \   0000013C   B010CDE1           STRH     R1,[SP, #+0]
    286          	rect.y0 = y;
   \   00000140   082094E5           LDR      R2,[R4, #+8]
    287          	rect.x1 = x + txt_length;
   \   00000144   010080E0           ADD      R0,R0,R1
   \   00000148   B220CDE1           STRH     R2,[SP, #+2]
   \   0000014C   B400CDE1           STRH     R0,[SP, #+4]
    288          	rect.y1 = y + Height;
   \   00000150   540094E5           LDR      R0,[R4, #+84]
   \   00000154   020080E0           ADD      R0,R0,R2
   \   00000158   B600CDE1           STRH     R0,[SP, #+6]
    289          
    290          	if(ShowLabel)
   \   0000015C   7C00D4E5           LDRB     R0,[R4, #+124]
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   1600000A           BEQ      ??DrawToMemArea_3
    291          	{
    292          		txt_diff = GUI_GetStringDistX(sName);
   \   00000168   0C0084E2           ADD      R0,R4,#+12
   \   0000016C   ........           BL       GUI_GetStringDistX
   \   00000170   0060A0E1           MOV      R6,R0
    293          
    294          		GUI_SetFont(&fUnitsFont);
   \   00000174   B40084E2           ADD      R0,R4,#+180
   \   00000178   ........           BL       GUI_SetFont
    295          		rect.x1 = x + txt_diff;
   \   0000017C   040094E5           LDR      R0,[R4, #+4]
    296          		GUI_DispStringInRect(sName, &rect, GUI_TA_RIGHT);
   \   00000180   0120A0E3           MOV      R2,#+1
   \   00000184   000086E0           ADD      R0,R6,R0
   \   00000188   B400CDE1           STRH     R0,[SP, #+4]
   \   0000018C   0D10A0E1           MOV      R1,SP
   \   00000190   0C0084E2           ADD      R0,R4,#+12
   \   00000194   ........           BL       GUI_DispStringInRect
    297          		rect.x0 = rect.x1 + 1;
   \   00000198   F400DDE1           LDRSH    R0,[SP, #+4]
   \   0000019C   010080E2           ADD      R0,R0,#+1
   \   000001A0   B000CDE1           STRH     R0,[SP, #+0]
    298          		rect.x1 = x + Width - GUI_GetStringDistX(sUnits) - 5;
   \   000001A4   250084E2           ADD      R0,R4,#+37
   \   000001A8   ........           BL       GUI_GetStringDistX
   \   000001AC   041094E5           LDR      R1,[R4, #+4]
   \   000001B0   502094E5           LDR      R2,[R4, #+80]
   \   000001B4   011082E0           ADD      R1,R2,R1
   \   000001B8   000041E0           SUB      R0,R1,R0
   \   000001BC   050040E2           SUB      R0,R0,#+5
   \   000001C0   B400CDE1           STRH     R0,[SP, #+4]
    299          	}
    300          
    301          	GUI_SetFont(&fTextFont);
   \                     ??DrawToMemArea_3:
   \   000001C4   900084E2           ADD      R0,R4,#+144
   \   000001C8   ........           BL       GUI_SetFont
    302          	x1 = rect.x1 - GUI_GetStringDistX(strValue) - 2;
   \   000001CC   08008DE2           ADD      R0,SP,#+8
   \   000001D0   ........           BL       GUI_GetStringDistX
   \   000001D4   F410DDE1           LDRSH    R1,[SP, #+4]
   \   000001D8   000041E0           SUB      R0,R1,R0
   \   000001DC   028040E2           SUB      R8,R0,#+2
    303          	txt_diff = GUI_GetYSizeOfFont(&fUnitsFont);
   \   000001E0   B40084E2           ADD      R0,R4,#+180
   \   000001E4   ........           BL       GUI_GetYSizeOfFont
    304          	y1 = y + (Height / 2) - (txt_diff / 2);
    305          	iTemp = y + (Height / 2) + txt_diff;
   \   000001E8   547094E5           LDR      R7,[R4, #+84]
   \   000001EC   081094E5           LDR      R1,[R4, #+8]
   \   000001F0   A72F87E0           ADD      R2,R7,R7, LSR #+31
   \   000001F4   C21081E0           ADD      R1,R1,R2, ASR #+1
   \   000001F8   016080E0           ADD      R6,R0,R1
    306          	GUI_DispStringAt(strValue, x1, y1);
   \   000001FC   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000200   C02041E0           SUB      R2,R1,R0, ASR #+1
   \   00000204   0810A0E1           MOV      R1,R8
   \   00000208   08008DE2           ADD      R0,SP,#+8
   \   0000020C   ........           BL       GUI_DispStringAt
    307          
    308          	GUI_SetFont(&fUnitsFont);
   \   00000210   B40084E2           ADD      R0,R4,#+180
   \   00000214   ........           BL       GUI_SetFont
    309          	rect.x0 = rect.x1 + 5;
   \   00000218   F400DDE1           LDRSH    R0,[SP, #+4]
   \   0000021C   050080E2           ADD      R0,R0,#+5
   \   00000220   B000CDE1           STRH     R0,[SP, #+0]
    310          	rect.x1 = x + Width;
   \   00000224   040094E5           LDR      R0,[R4, #+4]
   \   00000228   501094E5           LDR      R1,[R4, #+80]
   \   0000022C   000081E0           ADD      R0,R1,R0
   \   00000230   B400CDE1           STRH     R0,[SP, #+4]
    311          	GUI_SetColor(GUI_LIGHTGRAY);
   \   00000234   ........           LDR      R0,??DataTable6  ;; 0xd3d3d3
   \   00000238   ........           BL       GUI_SetColor
    312          	x1 = rect.x0;
   \   0000023C   F080DDE1           LDRSH    R8,[SP, #+0]
    313          	y1 = iTemp - GUI_GetYSizeOfFont(&fUnitsFont) - 10;
   \   00000240   B40084E2           ADD      R0,R4,#+180
   \   00000244   ........           BL       GUI_GetYSizeOfFont
    314          	GUI_DispStringAt(sUnits, x1, y1);
   \   00000248   000046E0           SUB      R0,R6,R0
   \   0000024C   0A2040E2           SUB      R2,R0,#+10
   \   00000250   0810A0E1           MOV      R1,R8
   \   00000254   250084E2           ADD      R0,R4,#+37
   \   00000258   ........           BL       GUI_DispStringAt
    315          	GUI_SetColor(GUI_WHITE);
   \   0000025C   0500A0E1           MOV      R0,R5
   \   00000260   ........           BL       GUI_SetColor
    316          
    317          	GUI_SelectLCD();
   \   00000264   ........           BL       GUI_SelectLCD
    318          	return mem;
   \   00000268   8C0094E5           LDR      R0,[R4, #+140]
   \   0000026C   50D08DE2           ADD      SP,SP,#+80
   \   00000270   F081BDE8           POP      {R4-R8,PC}       ;; return
    319          }

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_HWIN)
   \                     _ZN14DigitalDisplayC2EiiiiPcS0_ffii14DigitalOptionsP5Alarmbl:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   38009DE5           LDR      R0,[SP, #+56]
   \   00000010   50C09DE5           LDR      R12,[SP, #+80]
   \   00000014   00008DE5           STR      R0,[SP, #+0]
   \   00000018   30509DE5           LDR      R5,[SP, #+48]
   \   0000001C   34309DE5           LDR      R3,[SP, #+52]
   \   00000020   3C609DE5           LDR      R6,[SP, #+60]
   \   00000024   40709DE5           LDR      R7,[SP, #+64]
   \   00000028   44809DE5           LDR      R8,[SP, #+68]
   \   0000002C   48909DE5           LDR      R9,[SP, #+72]
   \   00000030   4CA0DDE5           LDRB     R10,[SP, #+76]
   \   00000034   54B0DDE5           LDRB     R11,[SP, #+84]
   \   00000038   04C08DE5           STR      R12,[SP, #+4]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
   \   00000044   08009DE5           LDR      R0,[SP, #+8]
   \   00000048   500084E5           STR      R0,[R4, #+80]
   \   0000004C   545084E5           STR      R5,[R4, #+84]
   \   00000050   588084E5           STR      R8,[R4, #+88]
   \   00000054   486084E5           STR      R6,[R4, #+72]
   \   00000058   4C7084E5           STR      R7,[R4, #+76]
   \   0000005C   709084E5           STR      R9,[R4, #+112]
   \   00000060   74A0C4E5           STRB     R10,[R4, #+116]
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   440084E5           STR      R0,[R4, #+68]
   \   0000006C   7CB0C4E5           STRB     R11,[R4, #+124]
   \   00000070   543094E5           LDR      R3,[R4, #+84]
   \   00000074   502094E5           LDR      R2,[R4, #+80]
   \   00000078   081094E5           LDR      R1,[R4, #+8]
   \   0000007C   040094E5           LDR      R0,[R4, #+4]
   \   00000080   ........           BL       GUI_MEMDEV_Create
   \   00000084   8C0084E5           STR      R0,[R4, #+140]
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       _ZN14DigitalDisplay8PickFontEv
   \   00000090   901084E2           ADD      R1,R4,#+144
   \   00000094   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   00000098   B40084E2           ADD      R0,R4,#+180
   \   0000009C   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   000000A0   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   000000A4   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
   \   000000B0   780084E5           STR      R0,[R4, #+120]
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   0CD08DE2           ADD      SP,SP,#+12
   \   000000BC   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_FONT, GUI_FONT, GUI_HWIN)
   \                     _ZN14DigitalDisplayC2EiiiiPcS0_ffii14DigitalOptionsP5Alarmb8GUI_FONTS4_l:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   38009DE5           LDR      R0,[SP, #+56]
   \   00000010   50C09DE5           LDR      R12,[SP, #+80]
   \   00000014   00008DE5           STR      R0,[SP, #+0]
   \   00000018   30509DE5           LDR      R5,[SP, #+48]
   \   0000001C   34309DE5           LDR      R3,[SP, #+52]
   \   00000020   3C609DE5           LDR      R6,[SP, #+60]
   \   00000024   40709DE5           LDR      R7,[SP, #+64]
   \   00000028   44809DE5           LDR      R8,[SP, #+68]
   \   0000002C   48909DE5           LDR      R9,[SP, #+72]
   \   00000030   4CA0DDE5           LDRB     R10,[SP, #+76]
   \   00000034   54B0DDE5           LDRB     R11,[SP, #+84]
   \   00000038   04C08DE5           STR      R12,[SP, #+4]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       _ZN11ControlBaseC2EiiPcS0_P5Alarm
   \   00000044   08009DE5           LDR      R0,[SP, #+8]
   \   00000048   500084E5           STR      R0,[R4, #+80]
   \   0000004C   545084E5           STR      R5,[R4, #+84]
   \   00000050   588084E5           STR      R8,[R4, #+88]
   \   00000054   486084E5           STR      R6,[R4, #+72]
   \   00000058   4C7084E5           STR      R7,[R4, #+76]
   \   0000005C   709084E5           STR      R9,[R4, #+112]
   \   00000060   74A0C4E5           STRB     R10,[R4, #+116]
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   440084E5           STR      R0,[R4, #+68]
   \   0000006C   7CB0C4E5           STRB     R11,[R4, #+124]
   \   00000070   543094E5           LDR      R3,[R4, #+84]
   \   00000074   502094E5           LDR      R2,[R4, #+80]
   \   00000078   081094E5           LDR      R1,[R4, #+8]
   \   0000007C   040094E5           LDR      R0,[R4, #+4]
   \   00000080   ........           BL       GUI_MEMDEV_Create
   \   00000084   8C0084E5           STR      R0,[R4, #+140]
   \   00000088   58108DE2           ADD      R1,SP,#+88
   \   0000008C   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   00000090   900084E2           ADD      R0,R4,#+144
   \   00000094   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   00000098   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   0000009C   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
   \   000000A0   2C50B1E8           LDM      R1!,{R2,R3,R5,R12,LR}
   \   000000A4   2C50A0E8           STM      R0!,{R2,R3,R5,R12,LR}
   \   000000A8   0C50B1E8           LDM      R1!,{R2,R3,R12,LR}
   \   000000AC   0C50A0E8           STM      R0!,{R2,R3,R12,LR}
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       _ZN14DigitalDisplay16GetMaxTextLengthEv
   \   000000B8   780084E5           STR      R0,[R4, #+120]
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   0CD08DE2           ADD      SP,SP,#+12
   \   000000C4   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp DigitalDisplay::subobject ~DigitalDisplay()
   \                     _ZN14DigitalDisplayD2Ev:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   8C0094E5           LDR      R0,[R4, #+140]
   \   0000000C   ........           BL       GUI_MEMDEV_Delete
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   D3D3D300           DC32     0xd3d3d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   ........           DC32     GUI_Font32B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   ........           DC32     GUI_Font16_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   ........           DC32     GUI_Font13_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.0f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   252E30660000       DC8 37, 46, 48, 102, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%%%d.%df">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   252525642E25       DC8 37, 37, 37, 100, 46, 37, 100, 102, 0, 0
   \              64660000    
   \   0000000A   0000               DC8 0, 0

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     DigitalDisplay::DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_FONT, GUI_FONT, GUI_HWIN)
                                        48
     DigitalDisplay::DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_HWIN)
                                        48
     DigitalDisplay::DrawControl()      96
     DigitalDisplay::DrawToMemArea()
                                       104
     DigitalDisplay::GetDisplayText()
                                        56
     DigitalDisplay::GetMaxTextLength()
                                       160
     DigitalDisplay::PickFont()         24
     DigitalDisplay::SetValue(float)
                                         0
     DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_FONT, GUI_FONT, GUI_HWIN)
                                        48
     DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_HWIN)
                                        48
     DigitalDisplay::subobject ~DigitalDisplay()
                                         8
     DigitalDisplay::~DigitalDisplay()
                                         8


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     DigitalDisplay::DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_FONT, GUI_FONT, GUI_HWIN)
                                     200
     DigitalDisplay::DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_HWIN)
                                     192
     DigitalDisplay::~DigitalDisplay()
                                      24
     DigitalDisplay::DrawControl()   472
     DigitalDisplay::GetDisplayText()
                                     116
     DigitalDisplay::SetValue(float)
                                       8
     DigitalDisplay::GetMaxTextLength()
                                     200
     DigitalDisplay::PickFont()      332
     DigitalDisplay::DrawToMemArea()
                                     628
     ?<Constant "">                    1
     DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_HWIN)
                                     192
     DigitalDisplay::subobject DigitalDisplay(int, int, int, int, char *, char *, float, float, int, int, DigitalOptions, Alarm *, bool, GUI_FONT, GUI_FONT, GUI_HWIN)
                                     200
     DigitalDisplay::subobject ~DigitalDisplay()
                                      24
     ??DataTable5                      4
     ??DataTable6                      4
     ??DataTable6_1                    4
     ??DataTable6_2                    4
     ??DataTable6_3                    4
     ??DataTable6_4                    4
     ?<Constant "%.0f">                8
     ?<Constant "%%%d.%df">           12

 
     1 byte  in section .rodata
 2 632 bytes in section .text
 
 2 632 bytes of CODE  memory
     1 byte  of CONST memory

Errors: none
Warnings: none
