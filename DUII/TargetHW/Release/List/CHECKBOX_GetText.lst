###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:18 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\CHECKBOX_GetText.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\CHECKBOX_GetText.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\CHECKBOX_GetText.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\CHECKBOX_GetText.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\CHECKBOX_GetText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : CHECKBOX_GetText.c
     19          Purpose     : Implementation of CHECKBOX_GetText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "CHECKBOX_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       CHECKBOX_GetText
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          int CHECKBOX_GetText(CHECKBOX_Handle hObj, char * pBuffer, int MaxLen) {
   \                     CHECKBOX_GetText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0060A0E1           MOV      R6,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   0270A0E1           MOV      R7,R2
     39            int Len = 0;
   \   00000014   0050A0E3           MOV      R5,#+0
     40            if (hObj) {
   \   00000018   000056E3           CMP      R6,#+0
   \   0000001C   1800000A           BEQ      ??CHECKBOX_GetText_0
     41              CHECKBOX_Obj  * pObj;
     42              WM_HMEM hpText;
     43              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
     44              pObj = CHECKBOX_LOCK_H(hObj);
     45              hpText = pObj->hpText;
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           BL       GUI_ALLOC_LockH
   \   0000002C   786090E5           LDR      R6,[R0, #+120]
     46              GUI_UNLOCK_H(pObj);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
     47              if (pObj->hpText) {
   \   00000034   7800A0E3           MOV      R0,#+120
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0E00000A           BEQ      ??CHECKBOX_GetText_1
     48                const char * pText;
     49                pText = (const char *)GUI_LOCK_H(hpText);
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   ........           BL       GUI_ALLOC_LockH
   \   0000004C   0060A0E1           MOV      R6,R0
     50                Len = strlen(pText);
   \   00000050   ........           BL       strlen
   \   00000054   0050A0E1           MOV      R5,R0
     51                if (Len > (MaxLen - 1)) {
   \   00000058   010047E2           SUB      R0,R7,#+1
   \   0000005C   050050E1           CMP      R0,R5
     52                  Len = MaxLen - 1;
   \   00000060   0050A0B1           MOVLT    R5,R0
     53                }
     54                GUI_MEMCPY(pBuffer, pText, Len);
   \   00000064   0520A0E1           MOV      R2,R5
   \   00000068   0610A0E1           MOV      R1,R6
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       __aeabi_memcpy
     55                GUI_UNLOCK_H(pText);
   \   00000074   ........           BL       GUI_ALLOC_UnlockH
     56                *(pBuffer + Len) = 0;
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   0400C5E7           STRB     R0,[R5, +R4]
     57              }
     58              WM_UNLOCK();
   \                     ??CHECKBOX_GetText_1:
   \   00000080   ........           BL       GUI_Unlock
     59            }
     60            return Len;
   \                     ??CHECKBOX_GetText_0:
   \   00000084   0500A0E1           MOV      R0,R5
   \   00000088   04D08DE2           ADD      SP,SP,#+4
   \   0000008C   F080BDE8           POP      {R4-R7,PC}       ;; return
     61          }
     62          
     63          #else  /* avoid empty object files */
     64          
     65          void CHECKBOX_GetText_c(void);
     66          void CHECKBOX_GetText_c(void) {}
     67          
     68          #endif  /* #if GUI_WINSUPPORT */
     69          
     70          /************************* end of file ******************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     CHECKBOX_GetText     24


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     CHECKBOX_GetText  144

 
 144 bytes in section .text
 
 144 bytes of CODE memory

Errors: none
Warnings: none
