###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:00 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_Truncate.c                        #
#    Command line =  C:\DUII\TargetHW\FS\FS_Truncate.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FS_Truncate.lst            #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FS_Truncate.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_Truncate.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_Truncate.c
     19          Purpose     : Implementation of FS_Truncate
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          
     30          #include "FS_Int.h"
     31          
     32          /*********************************************************************
     33          *
     34          *       Public code
     35          *
     36          **********************************************************************
     37          */
     38          
     39          
     40          /*********************************************************************
     41          *
     42          *       FS_Truncate
     43          *
     44          *  Function description:
     45          *    Truncates a open file.
     46          *
     47          *  Parameters:
     48          *    pFile        - Pointer to a valid opened file with write access.
     49          *    NewSize      - New size of the file.
     50          *
     51          *  Return value:
     52          *    == 0        - File has been truncated.
     53          *    ==-1        - An error has occurred.
     54          *
     55          */

   \                                 In section .text, align 4, keep-with-next
     56          int FS_Truncate(FS_FILE * pFile, U32 NewSize) {
   \                     FS_Truncate:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     57            int           r;
     58            FS_LOCK();
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       FS_OS_Lock
     59            r = -1;
     60            if (pFile->pFileObj->Size > NewSize) {
   \   00000014   000094E5           LDR      R0,[R4, #+0]
   \   00000018   0060E0E3           MVN      R6,#+0
   \   0000001C   040090E5           LDR      R0,[R0, #+4]
   \   00000020   000055E1           CMP      R5,R0
   \   00000024   0600002A           BCS      ??FS_Truncate_0
     61              FS__FSeek(pFile, (I32)NewSize, FS_FILE_BEGIN);
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       FS__FSeek
     62              r = FS__SetEndOfFile(pFile);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       FS__SetEndOfFile
   \   00000040   0060A0E1           MOV      R6,R0
     63            }
     64            FS_UNLOCK();
   \                     ??FS_Truncate_0:
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       FS_OS_Unlock
     65            return r;
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
     66          }
     67          
     68          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     FS_Truncate     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     FS_Truncate      84

 
 84 bytes in section .text
 
 84 bytes of CODE memory

Errors: none
Warnings: none
