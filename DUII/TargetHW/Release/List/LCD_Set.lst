###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:01 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LCD_Set.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\LCD_Set.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\LCD_Set.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\LCD_Set.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LCD_Set.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LCD_SetAlphaEx.c
     19          Purpose     : Setting the alpha blending factor of a layer
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          #include "LCD_SIM.h"
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       LCD_SetAlphaEx
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          int LCD_SetAlphaEx(int LayerIndex, int Alpha) {
   \                     LCD_SetAlphaEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
     39            GUI_DEVICE * pDevice;
     40            void (* pFunc)(GUI_DEVICE *, int);
     41            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
     42          
     43            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
     44            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_SetAlphaEx_0
     45              pFunc = (void (*)(GUI_DEVICE *, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SETALPHA);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   0210A0E3           MOV      R1,#+2
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
     46              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_SetAlphaEx_0
     47                pFunc(pDevice, Alpha);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
     48                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
     49              }
     50              #ifdef WIN32
     51                LCDSIM_SetAlpha(Alpha, pDevice->LayerIndex);
     52              #endif
     53            }
     54            return r;
   \                     ??LCD_SetAlphaEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     55          }
     56          
     57          /*********************************************************************
     58          *
     59          *       LCD_SetVRAMAddrEx
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          int LCD_SetVRAMAddrEx(int LayerIndex, void * pVRAM) {
   \                     LCD_SetVRAMAddrEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
     62            GUI_DEVICE * pDevice;
     63            void (* pFunc)(GUI_DEVICE *, void *);
     64            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
     65          
     66            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
     67            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_SetVRAMAddrEx_0
     68              pFunc = (void (*)(GUI_DEVICE *, void *))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SET_VRAM_ADDR);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   0910A0E3           MOV      R1,#+9
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
     69              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_SetVRAMAddrEx_0
     70                pFunc(pDevice, pVRAM);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
     71                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
     72              }
     73            }
     74            return r;
   \                     ??LCD_SetVRAMAddrEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     75          }
     76          
     77          /*********************************************************************
     78          *
     79          *       LCD_SetVSizeEx
     80          */

   \                                 In section .text, align 4, keep-with-next
     81          int LCD_SetVSizeEx(int LayerIndex, int xSize, int ySize) {
   \                     LCD_SetVSizeEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
     82            GUI_DEVICE * pDevice;
     83            void (* pFunc)(GUI_DEVICE *, int, int);
     84            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
     85          
     86            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
     87            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetVSizeEx_0
     88              pFunc = (void (*)(GUI_DEVICE *, int, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SET_VSIZE);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   0A10A0E3           MOV      R1,#+10
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
     89              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetVSizeEx_0
     90                pFunc(pDevice, xSize, ySize);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
     91                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
     92              }
     93            }
     94            return r;
   \                     ??LCD_SetVSizeEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
     95          }
     96          
     97          /*********************************************************************
     98          *
     99          *       LCD_SetSizeEx
    100          */

   \                                 In section .text, align 4, keep-with-next
    101          int LCD_SetSizeEx(int LayerIndex, int xSize, int ySize) {
   \                     LCD_SetSizeEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    102            GUI_DEVICE * pDevice;
    103            void (* pFunc)(GUI_DEVICE *, int, int);
    104            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    105          
    106            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    107            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetSizeEx_0
    108              pFunc = (void (*)(GUI_DEVICE *, int, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SET_SIZE);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   0B10A0E3           MOV      R1,#+11
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    109              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetSizeEx_0
    110                pFunc(pDevice, xSize, ySize);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    111                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    112              }
    113              #ifdef WIN32
    114                LCDSIM_SetSize(LayerIndex, xSize, ySize);
    115              #endif
    116            }
    117            return r;
   \                     ??LCD_SetSizeEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    118          }
    119          
    120          /*********************************************************************
    121          *
    122          *       LCD_SetVisEx
    123          */

   \                                 In section .text, align 4, keep-with-next
    124          int LCD_SetVisEx(int LayerIndex, int OnOff) {
   \                     LCD_SetVisEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
    125            GUI_DEVICE * pDevice;
    126            void (* pFunc)(GUI_DEVICE *, int);
    127            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
    128          
    129            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
    130            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_SetVisEx_0
    131              pFunc = (void (*)(GUI_DEVICE *, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SETVIS);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   0610A0E3           MOV      R1,#+6
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
    132              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_SetVisEx_0
    133                pFunc(pDevice, OnOff);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
    134                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
    135              }
    136              #ifdef WIN32
    137                LCDSIM_SetLayerVis(OnOff, LayerIndex);
    138              #endif
    139            }
    140            return r;
   \                     ??LCD_SetVisEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
    141          }
    142          
    143          /*********************************************************************
    144          *
    145          *       LCD_SetPosEx
    146          */

   \                                 In section .text, align 4, keep-with-next
    147          int LCD_SetPosEx(int LayerIndex, int xPos, int yPos) {
   \                     LCD_SetPosEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    148            GUI_DEVICE * pDevice;
    149            void (* pFunc)(GUI_DEVICE *, int, int);
    150            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    151          
    152            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    153            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetPosEx_0
    154              pFunc = (void (*)(GUI_DEVICE *, int, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SETPOS);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   0310A0E3           MOV      R1,#+3
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    155              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetPosEx_0
    156                pFunc(pDevice, xPos, yPos);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    157                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    158              }
    159              #ifdef WIN32
    160                LCDSIM_SetLayerPos(xPos, yPos, LayerIndex);
    161              #endif
    162            }
    163            return r;
   \                     ??LCD_SetPosEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    164          }
    165          
    166          /*********************************************************************
    167          *
    168          *       LCD_SetAlphaModeEx
    169          */

   \                                 In section .text, align 4, keep-with-next
    170          int LCD_SetAlphaModeEx(int LayerIndex, int AlphaMode) {
   \                     LCD_SetAlphaModeEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
    171            GUI_DEVICE * pDevice;
    172            void (* pFunc)(GUI_DEVICE *, int);
    173            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
    174          
    175            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
    176            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_SetAlphaModeEx_0
    177              pFunc = (void (*)(GUI_DEVICE *, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_ALPHAMODE);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   1310A0E3           MOV      R1,#+19
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
    178              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_SetAlphaModeEx_0
    179                pFunc(pDevice, AlphaMode);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
    180                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
    181              }
    182              #ifdef WIN32
    183                //SIM_GUI_SetTransMode(LayerIndex, AlphaMode);
    184              #endif
    185            }
    186            return r;
   \                     ??LCD_SetAlphaModeEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
    187          }
    188          
    189          /*********************************************************************
    190          *
    191          *       LCD_SetChromaModeEx
    192          */

   \                                 In section .text, align 4, keep-with-next
    193          int LCD_SetChromaModeEx(int LayerIndex, int ChromaMode) {
   \                     LCD_SetChromaModeEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
    194            GUI_DEVICE * pDevice;
    195            void (* pFunc)(GUI_DEVICE *, int);
    196            int r = 1;
   \   0000000C   0150A0E3           MOV      R5,#+1
    197          
    198            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000010   ........           BL       GUI_DEVICE__GetpDriver
   \   00000014   00008DE5           STR      R0,[SP, #+0]
    199            if (pDevice) {
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   0B00000A           BEQ      ??LCD_SetChromaModeEx_0
    200              pFunc = (void (*)(GUI_DEVICE *, int))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_CHROMAMODE);
   \   00000020   00209DE5           LDR      R2,[SP, #+0]
   \   00000024   1410A0E3           MOV      R1,#+20
   \   00000028   0C2092E5           LDR      R2,[R2, #+12]
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   242092E5           LDR      R2,[R2, #+36]
   \   00000034   32FF2FE1           BLX      R2
   \   00000038   0020B0E1           MOVS     R2,R0
    201              if (pFunc) {
   \   0000003C   0300000A           BEQ      ??LCD_SetChromaModeEx_0
    202                pFunc(pDevice, ChromaMode);
   \   00000040   0410A0E1           MOV      R1,R4
   \   00000044   00009DE5           LDR      R0,[SP, #+0]
   \   00000048   32FF2FE1           BLX      R2
    203                r = 0;
   \   0000004C   0050A0E3           MOV      R5,#+0
    204              }
    205              #ifdef WIN32
    206                SIM_GUI_SetTransMode(LayerIndex, ChromaMode);
    207              #endif
    208            }
    209            return r;
   \                     ??LCD_SetChromaModeEx_0:
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   04D08DE2           ADD      SP,SP,#+4
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
    210          }
    211          
    212          /*********************************************************************
    213          *
    214          *       LCD_SetChromaEx
    215          */

   \                                 In section .text, align 4, keep-with-next
    216          int LCD_SetChromaEx(int LayerIndex, LCD_COLOR ChromaMin, LCD_COLOR ChromaMax) {
   \                     LCD_SetChromaEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    217            GUI_DEVICE * pDevice;
    218            void (* pFunc)(GUI_DEVICE *, LCD_COLOR, LCD_COLOR);
    219            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    220          
    221            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    222            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetChromaEx_0
    223              pFunc = (void (*)(GUI_DEVICE *, LCD_COLOR, LCD_COLOR))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_CHROMA);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   1510A0E3           MOV      R1,#+21
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    224              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetChromaEx_0
    225                pFunc(pDevice, ChromaMin, ChromaMax);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    226                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    227              }
    228              #ifdef WIN32
    229                SIM_GUI_SetChroma(LayerIndex, ChromaMin, ChromaMax);
    230              #endif
    231            }
    232            return r;
   \                     ??LCD_SetChromaEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    233          }
    234          
    235          /*********************************************************************
    236          *
    237          *       LCD_SetLUTEntryEx
    238          */

   \                                 In section .text, align 4, keep-with-next
    239          int LCD_SetLUTEntryEx(int LayerIndex, U8 Pos, LCD_COLOR Color) {
   \                     LCD_SetLUTEntryEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    240            GUI_DEVICE * pDevice;
    241            void (* pFunc)(GUI_DEVICE *, U8, LCD_COLOR);
    242            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    243          
    244            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    245            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetLUTEntryEx_0
    246              pFunc = (void (*)(GUI_DEVICE *, U8, LCD_COLOR))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SETLUTENTRY);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   1010A0E3           MOV      R1,#+16
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    247              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetLUTEntryEx_0
    248                pFunc(pDevice, Pos, Color);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    249                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    250              }
    251              #ifdef WIN32
    252                LCDSIM_SetLUTEntry(Pos, ((Color & 0xFF0000) >> 16) | (Color & 0x00FF00) | ((Color & 0x0000FF) << 16), LayerIndex);
    253              #endif
    254            }
    255            return r;
   \                     ??LCD_SetLUTEntryEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    256          }
    257          
    258          /*********************************************************************
    259          *
    260          *       LCD_GetPosEx
    261          */

   \                                 In section .text, align 4, keep-with-next
    262          int LCD_GetPosEx(int LayerIndex, int * pxPos, int * pyPos) {
   \                     LCD_GetPosEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    263            GUI_DEVICE * pDevice;
    264            void (* pFunc)(GUI_DEVICE *, int *, int *);
    265            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    266          
    267            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    268            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_GetPosEx_0
    269              pFunc = (void (*)(GUI_DEVICE *, int *, int *))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_GETPOS);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   0410A0E3           MOV      R1,#+4
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    270              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_GetPosEx_0
    271                pFunc(pDevice, pxPos, pyPos);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    272                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    273              }
    274            }
    275            return r;
   \                     ??LCD_GetPosEx_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    276          }
    277          
    278          /*********************************************************************
    279          *
    280          *       The functions above without layer index for easier use...
    281          */

   \                                 In section .text, align 4, keep-with-next
    282          int LCD_SetAlpha     (int Alpha)                                { return LCD_SetAlphaEx     (GUI_Context.SelLayer, Alpha); }
   \                     LCD_SetAlpha:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_SetAlpha_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   0210A0E3           MOV      R1,#+2
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_SetAlpha_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_SetAlpha_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    283          int LCD_SetVRAMAddr  (void * pVRAM)                             { return LCD_SetVRAMAddrEx  (GUI_Context.SelLayer, pVRAM); }
   \                     LCD_SetVRAMAddr:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_SetVRAMAddr_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   0910A0E3           MOV      R1,#+9
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_SetVRAMAddr_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_SetVRAMAddr_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    284          int LCD_SetVSize     (int xSize, int ySize)                     { return LCD_SetVSizeEx     (GUI_Context.SelLayer, xSize, ySize); }
   \                     LCD_SetVSize:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_SetVSize_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   0A10A0E3           MOV      R1,#+10
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_SetVSize_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_SetVSize_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    285          int LCD_SetSize      (int xSize, int ySize)                     { return LCD_SetSizeEx      (GUI_Context.SelLayer, xSize, ySize); }
   \                     LCD_SetSize:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_SetSize_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   0B10A0E3           MOV      R1,#+11
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_SetSize_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_SetSize_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    286          int LCD_SetVis       (int OnOff)                                { return LCD_SetVisEx       (GUI_Context.SelLayer, OnOff); }
   \                     LCD_SetVis:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_SetVis_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   0610A0E3           MOV      R1,#+6
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_SetVis_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_SetVis_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    287          int LCD_SetPos       (int xPos, int yPos)                       { return LCD_SetPosEx       (GUI_Context.SelLayer, xPos, yPos); }
   \                     LCD_SetPos:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_SetPos_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   0310A0E3           MOV      R1,#+3
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_SetPos_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_SetPos_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    288          int LCD_SetAlphaMode (int AlphaMode)                            { return LCD_SetAlphaModeEx (GUI_Context.SelLayer, AlphaMode); }
   \                     LCD_SetAlphaMode:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_SetAlphaMode_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   1310A0E3           MOV      R1,#+19
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_SetAlphaMode_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_SetAlphaMode_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    289          int LCD_SetChromaMode(int ChromaMode)                           { return LCD_SetChromaModeEx(GUI_Context.SelLayer, ChromaMode); }
   \                     LCD_SetChromaMode:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0150A0E3           MOV      R5,#+1
   \   00000014   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000018   ........           BL       GUI_DEVICE__GetpDriver
   \   0000001C   00008DE5           STR      R0,[SP, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0B00000A           BEQ      ??LCD_SetChromaMode_0
   \   00000028   00209DE5           LDR      R2,[SP, #+0]
   \   0000002C   1410A0E3           MOV      R1,#+20
   \   00000030   0C2092E5           LDR      R2,[R2, #+12]
   \   00000034   0D00A0E1           MOV      R0,SP
   \   00000038   242092E5           LDR      R2,[R2, #+36]
   \   0000003C   32FF2FE1           BLX      R2
   \   00000040   0020B0E1           MOVS     R2,R0
   \   00000044   0300000A           BEQ      ??LCD_SetChromaMode_0
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   32FF2FE1           BLX      R2
   \   00000054   0050A0E3           MOV      R5,#+0
   \                     ??LCD_SetChromaMode_0:
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    290          int LCD_SetChroma    (LCD_COLOR ChromaMin, LCD_COLOR ChromaMax) { return LCD_SetChromaEx    (GUI_Context.SelLayer, ChromaMin, ChromaMax); }
   \                     LCD_SetChroma:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_SetChroma_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   1510A0E3           MOV      R1,#+21
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_SetChroma_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_SetChroma_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    291          int LCD_SetLUTEntry  (U8 Pos, LCD_COLOR Color)                  { return LCD_SetLUTEntryEx  (GUI_Context.SelLayer, Pos, Color); }
   \                     LCD_SetLUTEntry:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_SetLUTEntry_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   1010A0E3           MOV      R1,#+16
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_SetLUTEntry_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_SetLUTEntry_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
    292          int LCD_GetPos       (int * pxPos, int * pyPos)                 { return LCD_GetPosEx       (GUI_Context.SelLayer, pxPos, pyPos); }
   \                     LCD_GetPos:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   ........           LDR      R0,??DataTable10
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   1100D0E5           LDRB     R0,[R0, #+17]
   \   0000001C   ........           BL       GUI_DEVICE__GetpDriver
   \   00000020   00008DE5           STR      R0,[SP, #+0]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0C00000A           BEQ      ??LCD_GetPos_0
   \   0000002C   00209DE5           LDR      R2,[SP, #+0]
   \   00000030   0410A0E3           MOV      R1,#+4
   \   00000034   0C2092E5           LDR      R2,[R2, #+12]
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   242092E5           LDR      R2,[R2, #+36]
   \   00000040   32FF2FE1           BLX      R2
   \   00000044   0030B0E1           MOVS     R3,R0
   \   00000048   0400000A           BEQ      ??LCD_GetPos_0
   \   0000004C   0520A0E1           MOV      R2,R5
   \   00000050   0410A0E1           MOV      R1,R4
   \   00000054   00009DE5           LDR      R0,[SP, #+0]
   \   00000058   33FF2FE1           BLX      R3
   \   0000005C   0060A0E3           MOV      R6,#+0
   \                     ??LCD_GetPos_0:
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   08D08DE2           ADD      SP,SP,#+8
   \   00000068   7080BDE8           POP      {R4-R6,PC}       ;; return
    293          
    294          /*********************************************************************
    295          *
    296          *       LCD_SetDevFunc
    297          */

   \                                 In section .text, align 4, keep-with-next
    298          int LCD_SetDevFunc(int LayerIndex, int IdFunc, void (* pDriverFunc)(void)) {
   \                     LCD_SetDevFunc:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
    299            GUI_DEVICE * pDevice;
    300            void (* pFunc)(GUI_DEVICE *, int, void (*)(void));
    301            int r = 1;
   \   00000010   0160A0E3           MOV      R6,#+1
    302          
    303            pDevice = GUI_DEVICE__GetpDriver(LayerIndex);
   \   00000014   ........           BL       GUI_DEVICE__GetpDriver
   \   00000018   00008DE5           STR      R0,[SP, #+0]
    304            if (pDevice) {
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0C00000A           BEQ      ??LCD_SetDevFunc_0
    305              pFunc = (void (*)(GUI_DEVICE *, int, void (*)(void)))pDevice->pDeviceAPI->pfGetDevFunc(&pDevice, LCD_DEVFUNC_SETFUNC);
   \   00000024   00209DE5           LDR      R2,[SP, #+0]
   \   00000028   1610A0E3           MOV      R1,#+22
   \   0000002C   0C2092E5           LDR      R2,[R2, #+12]
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   242092E5           LDR      R2,[R2, #+36]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0030B0E1           MOVS     R3,R0
    306              if (pFunc) {
   \   00000040   0400000A           BEQ      ??LCD_SetDevFunc_0
    307                pFunc(pDevice, IdFunc, pDriverFunc);
   \   00000044   0520A0E1           MOV      R2,R5
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   00009DE5           LDR      R0,[SP, #+0]
   \   00000050   33FF2FE1           BLX      R3
    308                r = 0;
   \   00000054   0060A0E3           MOV      R6,#+0
    309              }
    310            }
    311            return r;
   \                     ??LCD_SetDevFunc_0:
   \   00000058   0600A0E1           MOV      R0,R6
   \   0000005C   08D08DE2           ADD      SP,SP,#+8
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
    312          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     GUI_Context
    313          
    314          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     LCD_GetPos              24
     LCD_GetPosEx            24
     LCD_SetAlpha            16
     LCD_SetAlphaEx          16
     LCD_SetAlphaMode        16
     LCD_SetAlphaModeEx      16
     LCD_SetChroma           24
     LCD_SetChromaEx         24
     LCD_SetChromaMode       16
     LCD_SetChromaModeEx     16
     LCD_SetDevFunc          24
     LCD_SetLUTEntry         24
     LCD_SetLUTEntryEx       24
     LCD_SetPos              24
     LCD_SetPosEx            24
     LCD_SetSize             24
     LCD_SetSizeEx           24
     LCD_SetVRAMAddr         16
     LCD_SetVRAMAddrEx       16
     LCD_SetVSize            24
     LCD_SetVSizeEx          24
     LCD_SetVis              16
     LCD_SetVisEx            16


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     LCD_SetAlphaEx        92
     LCD_SetVRAMAddrEx     92
     LCD_SetVSizeEx       100
     LCD_SetSizeEx        100
     LCD_SetVisEx          92
     LCD_SetPosEx         100
     LCD_SetAlphaModeEx    92
     LCD_SetChromaModeEx   92
     LCD_SetChromaEx      100
     LCD_SetLUTEntryEx    100
     LCD_GetPosEx         100
     LCD_SetAlpha         100
     LCD_SetVRAMAddr      100
     LCD_SetVSize         108
     LCD_SetSize          108
     LCD_SetVis           100
     LCD_SetPos           108
     LCD_SetAlphaMode     100
     LCD_SetChromaMode    100
     LCD_SetChroma        108
     LCD_SetLUTEntry      108
     LCD_GetPos           108
     LCD_SetDevFunc       100
     ??DataTable10          4

 
 2 312 bytes in section .text
 
 2 312 bytes of CODE memory

Errors: none
Warnings: none
