###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:31 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SetPixelIndex.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SetPixelIndex.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_SetPixelIndex.lst      #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_SetPixelIndex.o         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SetPixelIndex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LCD_SetPixelIndex.c
     19          Purpose     : Implementation of optional routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Defines
     28          *
     29          **********************************************************************
     30          */
     31          
     32          #define RETURN_IF_Y_OUT() \
     33            if (y < GUI_Context.ClipRect.y0) return;             \
     34            if (y > GUI_Context.ClipRect.y1) return;
     35          
     36          #define RETURN_IF_X_OUT() \
     37            if (x < GUI_Context.ClipRect.x0) return;             \
     38            if (x > GUI_Context.ClipRect.x1) return;
     39          
     40          /*********************************************************************
     41          *
     42          *       Public code
     43          *
     44          **********************************************************************
     45          */
     46          /*********************************************************************
     47          *
     48          *       LCD_SetPixelIndex
     49          *
     50          * Purpose:
     51          *   Writes 1 pixel into the display.
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          void LCD_SetPixelIndex(int x, int y, int ColorIndex) {
   \                     LCD_SetPixelIndex:
   \   00000000   00C0A0E1           MOV      R12,R0
     54            RETURN_IF_X_OUT();
   \   00000004   58009FE5           LDR      R0,??LCD_SetPixelIndex_0
   \   00000008   F830D0E1           LDRSH    R3,[R0, #+8]
   \   0000000C   03005CE1           CMP      R12,R3
   \   00000010   FC30D0A1           LDRSHGE  R3,[R0, #+12]
   \   00000014   0C0053A1           CMPGE    R3,R12
     55            RETURN_IF_Y_OUT();
   \   00000018   FA30D0A1           LDRSHGE  R3,[R0, #+10]
   \   0000001C   030051A1           CMPGE    R1,R3
   \   00000020   FE30D0A1           LDRSHGE  R3,[R0, #+14]
   \   00000024   010053A1           CMPGE    R3,R1
   \   00000028   000000AA           BGE      ??LCD_SetPixelIndex_1
   \   0000002C   1EFF2FE1           BX       LR
   \                     ??LCD_SetPixelIndex_1:
   \   00000030   00402DE9           PUSH     {LR}
   \   00000034   1130D0E5           LDRB     R3,[R0, #+17]
   \   00000038   04D04DE2           SUB      SP,SP,#+4
   \   0000003C   030180E0           ADD      R0,R0,R3, LSL #+2
   \   00000040   0230A0E1           MOV      R3,R2
   \   00000044   480090E5           LDR      R0,[R0, #+72]
   \   00000048   0120A0E1           MOV      R2,R1
   \   0000004C   0C10A0E1           MOV      R1,R12
   \   00000050   0CC090E5           LDR      R12,[R0, #+12]
   \   00000054   18C09CE5           LDR      R12,[R12, #+24]
     56            LCDDEV_L0_SetPixelIndex(GUI_Context.apDevice[GUI_Context.SelLayer], x, y, ColorIndex);
   \   00000058   3CFF2FE1           BLX      R12
     57          }
   \   0000005C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000060   0080BDE8           POP      {PC}             ;; return
   \                     ??LCD_SetPixelIndex_0:
   \   00000064   ........           DC32     GUI_Context
     58          
     59          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     LCD_SetPixelIndex      8


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     LCD_SetPixelIndex  104

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
