###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetFocusOnNextChild.c            #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetFocusOnNextChild.c -D         #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    NOPROFILER -D OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN        #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_SetFocusOnNextChild.lst #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_SetFocusOnNextChild.o    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetFocusOnNextChild.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetFocusOnNextChild.c
     19          Purpose     : Implementation of WM_SetFocusOnNextChild
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _GetNextChild
     36          *
     37          * Purpose:
     38          *   Returns a handle to the next child of a window.
     39          *
     40          * Parameters:
     41          *   hParent:  handle of parent window.
     42          *   hChild:   handle of child to begin our search to its next sibling.
     43          *
     44          * Return value:
     45          *   Handle to next child if we found one.
     46          *   0 if window has no other children.
     47          */
     48          static WM_HWIN _GetNextChild(WM_HWIN hParent, WM_HWIN hChild) {
     49            WM_HWIN hObj = 0;
     50            WM_Obj* pObj;
     51            if (hChild) {
     52              pObj = WM_HANDLE2PTR(hChild);
     53              hObj = pObj->hNext;
     54            }
     55            if (!hObj) {
     56              pObj = WM_HANDLE2PTR(hParent);
     57              hObj = pObj->hFirstChild;
     58            }
     59            if (hObj != hChild) {
     60              return hObj;
     61            }
     62            return 0;
     63          }
     64          
     65          /*********************************************************************
     66          *
     67          *       _SetFocusOnNextChild
     68          *
     69          * Purpose:
     70          *   Sets the focus on next focussable child of a window.
     71          *
     72          * Return value:
     73          *   Handle of focussed child, if we found an other focussable child
     74          *   as the current. Otherwise the return value is zero.
     75          */

   \                                 In section .text, align 4, keep-with-next
     76          static WM_HWIN _SetFocusOnNextChild(WM_HWIN hParent) {
   \                     _SetFocusOnNextChild:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     77            WM_HWIN hChild, hWin;
     78            hChild = WM__GetFocussedChild(hParent);
   \   00000008   ........           BL       WM__GetFocussedChild
   \   0000000C   0050B0E1           MOVS     R5,R0
     79            hChild = _GetNextChild(hParent, hChild);
   \   00000010   0300000A           BEQ      ??_SetFocusOnNextChild_0
   \   00000014   ........           BL       GUI_ALLOC_h2p
   \   00000018   206090E5           LDR      R6,[R0, #+32]
   \   0000001C   000056E3           CMP      R6,#+0
   \   00000020   0200001A           BNE      ??_SetFocusOnNextChild_1
   \                     ??_SetFocusOnNextChild_0:
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_h2p
   \   0000002C   1C6090E5           LDR      R6,[R0, #+28]
   \                     ??_SetFocusOnNextChild_1:
   \   00000030   050056E1           CMP      R6,R5
   \   00000034   0060A003           MOVEQ    R6,#+0
     80            hWin   = hChild;
   \   00000038   0650A0E1           MOV      R5,R6
     81            while ((WM_IsFocussable(hWin) == 0) && hWin) {
   \                     ??_SetFocusOnNextChild_2:
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           BL       WM_IsFocussable
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0E00001A           BNE      ??_SetFocusOnNextChild_3
   \   0000004C   000055E3           CMP      R5,#+0
   \   00000050   1A00000A           BEQ      ??_SetFocusOnNextChild_4
     82              hWin = _GetNextChild(hParent, hWin);
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   ........           BL       GUI_ALLOC_h2p
   \   0000005C   200090E5           LDR      R0,[R0, #+32]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0200001A           BNE      ??_SetFocusOnNextChild_5
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       GUI_ALLOC_h2p
   \   00000070   1C0090E5           LDR      R0,[R0, #+28]
   \                     ??_SetFocusOnNextChild_5:
   \   00000074   050050E1           CMP      R0,R5
   \   00000078   0050A003           MOVEQ    R5,#+0
   \   0000007C   0050A011           MOVNE    R5,R0
     83              if (hWin == hChild) {
   \   00000080   060055E1           CMP      R5,R6
   \   00000084   ECFFFF1A           BNE      ??_SetFocusOnNextChild_2
     84                break;
     85              }
     86            }
     87            if (hWin) {
   \                     ??_SetFocusOnNextChild_3:
   \   00000088   000055E3           CMP      R5,#+0
   \   0000008C   0B00000A           BEQ      ??_SetFocusOnNextChild_4
     88              int r;
     89              #if (GUI_NUM_LAYERS > 1)
     90                int OldTouchedLayer;
     91                OldTouchedLayer  = WM__TouchedLayer;
   \   00000090   ........           LDR      R4,??DataTable0
     92                WM__TouchedLayer = WM__GetTopLevelLayer(hWin);
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   006094E5           LDR      R6,[R4, #+0]
   \   0000009C   ........           BL       WM__GetTopLevelLayer
   \   000000A0   000084E5           STR      R0,[R4, #+0]
     93              #endif
     94              r = WM_SetFocus(hWin);
   \   000000A4   0500A0E1           MOV      R0,R5
   \   000000A8   ........           BL       WM_SetFocus
     95              #if (GUI_NUM_LAYERS > 1)
     96                WM__TouchedLayer = OldTouchedLayer;
   \   000000AC   006084E5           STR      R6,[R4, #+0]
     97              #endif
     98              if (r == 0) {
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   0100001A           BNE      ??_SetFocusOnNextChild_4
     99                return hWin;
   \   000000B8   0500A0E1           MOV      R0,R5
   \   000000BC   7080BDE8           POP      {R4-R6,PC}
    100              }
    101            }
    102            return 0;
   \                     ??_SetFocusOnNextChild_4:
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   7080BDE8           POP      {R4-R6,PC}       ;; return
    103          }
    104          
    105          /*********************************************************************
    106          *
    107          *       Public code
    108          *
    109          **********************************************************************
    110          */
    111          /*********************************************************************
    112          *
    113          *       WM_SetFocusOnNextChild
    114          */

   \                                 In section .text, align 4, keep-with-next
    115          WM_HWIN WM_SetFocusOnNextChild(WM_HWIN hParent) {
   \                     WM_SetFocusOnNextChild:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    116            WM_HWIN r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    117            if (hParent) {
   \   00000010   0400000A           BEQ      ??WM_SetFocusOnNextChild_0
    118              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    119              r = _SetFocusOnNextChild(hParent);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       _SetFocusOnNextChild
   \   00000020   0050A0E1           MOV      R5,R0
    120              WM_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
    121            }
    122            return r;
   \                     ??WM_SetFocusOnNextChild_0:
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   04D08DE2           ADD      SP,SP,#+4
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
    123          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     WM__TouchedLayer
    124          
    125          #else
    126            void WM_SetFocusOnNextChild_C(void) {} /* avoid empty object files */
    127          #endif
    128          
    129          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     WM_SetFocusOnNextChild     16
     _SetFocusOnNextChild       16


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     _SetFocusOnNextChild    200
     WM_SetFocusOnNextChild   52
     ??DataTable0              4

 
 256 bytes in section .text
 
 256 bytes of CODE memory

Errors: none
Warnings: none
