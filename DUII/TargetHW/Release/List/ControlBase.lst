###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:09 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\ControlBase.cpp                             #
#    Command line =  C:\DUII\DUII\ControlBase.cpp -D DEBUG=1 -D               #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --eec++ --no_static_destruction                          #
#    List file    =  C:\DUII\TargetHW\Release\List\ControlBase.lst            #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\ControlBase.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\ControlBase.cpp
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: ControlBase.cpp
      5          Description: The base class for each display control.  gauge, digital display, etc
      6          -----------------------------------------------------------------
      7          */
      8          
      9          #include "ControlBase.hpp"
     10          #include <string.h>
     11          

   \                                 In section .text, align 4, keep-with-next
     12          ControlBase::ControlBase(int X, int Y, char *Name, char *Units, Alarm *aAlarmList)
     13          {
   \                     _ZN11ControlBaseC1EiiPcS0_P5Alarm:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   10509DE5           LDR      R5,[SP, #+16]
   \   0000000C   14609DE5           LDR      R6,[SP, #+20]
     14          	x = X;
   \   00000010   041084E5           STR      R1,[R4, #+4]
     15          	y = Y;
   \   00000014   082084E5           STR      R2,[R4, #+8]
     16          	strcpy(sName, Name);
   \   00000018   0310A0E1           MOV      R1,R3
   \   0000001C   0C0084E2           ADD      R0,R4,#+12
   \   00000020   ........           BL       strcpy
     17          	strcpy(sUnits, Units);
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   250084E2           ADD      R0,R4,#+37
   \   0000002C   ........           BL       strcpy
     18          	AlarmList = aAlarmList;
   \   00000030   406084E5           STR      R6,[R4, #+64]
     19          }
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
     20          

   \                                 In section .text, align 4, keep-with-next
     21          void ControlBase::SetValue(float dValue)
     22          {
     23          	Value = dValue;
   \                     _ZN11ControlBase8SetValueEf:
   \   00000000   001080E5           STR      R1,[R0, #+0]
     24          }
   \   00000004   1EFF2FE1           BX       LR               ;; return
     25          

   \                                 In section .text, align 4, keep-with-next
     26          float ControlBase::GetValue()
     27          {
     28          	return Value;
   \                     _ZN11ControlBase8GetValueEv:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return
     29          }

   \                                 In section .text, align 4, keep-with-next
   \   __code __interwork __softfp ControlBase::subobject ControlBase(int, int, char *, char *, Alarm *)
   \                     _ZN11ControlBaseC2EiiPcS0_P5Alarm:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   10509DE5           LDR      R5,[SP, #+16]
   \   0000000C   14609DE5           LDR      R6,[SP, #+20]
   \   00000010   041084E5           STR      R1,[R4, #+4]
   \   00000014   082084E5           STR      R2,[R4, #+8]
   \   00000018   0310A0E1           MOV      R1,R3
   \   0000001C   0C0084E2           ADD      R0,R4,#+12
   \   00000020   ........           BL       strcpy
   \   00000024   0510A0E1           MOV      R1,R5
   \   00000028   250084E2           ADD      R0,R4,#+37
   \   0000002C   ........           BL       strcpy
   \   00000030   406084E5           STR      R6,[R4, #+64]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   7080BDE8           POP      {R4-R6,PC}       ;; return
     30          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     ControlBase::ControlBase(int, int, char *, char *, Alarm *)
                                        16
     ControlBase::GetValue()             0
     ControlBase::SetValue(float)        0
     ControlBase::subobject ControlBase(int, int, char *, char *, Alarm *)
                                        16


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     ControlBase::ControlBase(int, int, char *, char *, Alarm *)
                                      60
     ControlBase::SetValue(float)      8
     ControlBase::GetValue()           8
     ControlBase::subobject ControlBase(int, int, char *, char *, Alarm *)
                                      60

 
 136 bytes in section .text
 
 136 bytes of CODE memory

Errors: none
Warnings: none
