###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\Setup\FS_ConfigMMC_CM_Atmel_AT91SAM9RL6 #
#                    4.c                                                      #
#    Command line =  C:\DUII\TargetHW\Setup\FS_ConfigMMC_CM_Atmel_AT91SAM9RL6 #
#                    4.c -D DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED    #
#                    -D NOPROFILER -D OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN     #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FS_ConfigMMC_CM_Atmel_AT91 #
#                    SAM9RL64.lst                                             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FS_ConfigMMC_CM_Atmel_AT91S #
#                    AM9RL64.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\Setup\FS_ConfigMMC_CM_Atmel_AT91SAM9RL64.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2007     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          ----------------------------------------------------------------------
     19          File        : FS_ConfigMMC_CM_Atmel_AT91SAM9RL64.c
     20          Purpose     : Configuration file for FS with MMC SPI mode driver
     21          ---------------------------END-OF-HEADER------------------------------
     22          */
     23          
     24          
     25          #include <stdio.h>
     26          #include "SPI_API.h"
     27          #include "FS.h"
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines, configurable
     32          *
     33          *       This section is the only section which requires changes
     34          *       using the MMC/SD card mode disk driver as a single device.
     35          *
     36          **********************************************************************
     37          */
     38          extern const FS_DEVICE_TYPE FS_MMC_CM_Driver4Atmel;
     39          
     40          /*********************************************************************
     41          *
     42          *       Static data
     43          *
     44          **********************************************************************
     45          */
     46          // *** GAS TEST
     47          //static U32   _aMemBlock[ALLOC_SIZE / 4];      // Memory pool used for semi-dynamic allocation.

   \                                 In section .data, align 4
     48          U32 *_aMemBlock = (U32 *) (TOP_OF_ISRAM	- DMA_SIZE - FS_ALLOC_SIZE);		// just below DMA buffer
   \                     _aMemBlock:
   \   00000000   00C03000           DC32 30C000H
     49          
     50          /*********************************************************************
     51          *
     52          *       Public code
     53          *
     54          *       This section does not require modifications in most systems.
     55          *
     56          **********************************************************************
     57          */
     58          
     59          /*********************************************************************
     60          *
     61          *       FS_X_AddDevices
     62          *
     63          *  Function description
     64          *    This function is called by the FS during FS_Init().
     65          *    It is supposed to add all devices, using primarily FS_AddDevice().
     66          *
     67          *  Note
     68          *    (1) Other API functions
     69          *        Other API functions may NOT be called, since this function is called
     70          *        during initialization. The devices are not yet ready at this point.
     71          */

   \                                 In section .text, align 4, keep-with-next
     72          void FS_X_AddDevices(void) {
   \                     FS_X_AddDevices:
   \   00000000   00402DE9           PUSH     {LR}
     73          // *** GAS TEST
     74          //  FS_AssignMemory(&_aMemBlock[0], sizeof(_aMemBlock));
     75          //	FS_ConfigFileBufferDefault(512, 0);		// this does not work. don't do it.
     76          //	FS_ConfigFileBufferDefault(ALLOC_SIZE, 0);		// this works. does not help.
     77          	FS_AssignMemory(_aMemBlock, FS_ALLOC_SIZE);
   \   00000004   ........           LDR      R0,??DataTable0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   801DA0E3           MOV      R1,#+8192
   \   00000010   000090E5           LDR      R0,[R0, #+0]
   \   00000014   ........           BL       FS_AssignMemory
     78            FS_AddDevice(&FS_MMC_CM_Driver4Atmel);
   \   00000018   04D08DE2           ADD      SP,SP,#+4
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   ........           LDR      R0,??DataTable0_1
   \   00000024   ........           B        FS_AddDevice     ;; tailcall
     79          }
     80          
     81          /*********************************************************************
     82          *
     83          *       FS_X_GetTimeDate
     84          *
     85          *  Description:
     86          *    Current time and date in a format suitable for the file system.
     87          *
     88          *    Bit 0-4:   2-second count (0-29)
     89          *    Bit 5-10:  Minutes (0-59)
     90          *    Bit 11-15: Hours (0-23)
     91          *    Bit 16-20: Day of month (1-31)
     92          *    Bit 21-24: Month of year (1-12)
     93          *    Bit 25-31: Count of years from 1980 (0-127)
     94          *
     95          */
     96          
     97          extern U32 getTimeStamp ( void );
     98          

   \                                 In section .text, align 4, keep-with-next
     99          U32 FS_X_GetTimeDate(void) {
   \                     FS_X_GetTimeDate:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    100          	U32 r;
    101          
    102          	if (0 == (r = getTimeStamp())) {
   \   00000008   ........           BL       getTimeStamp
   \   0000000C   000050E3           CMP      R0,#+0
    103          		// if no GPS Time yet, set to Jan 1, 2011 at midnight
    104          		U16 Sec   = 0;			// 0 based.  Valid range: 0..59
    105          		U16 Min   = 0;			// 0 based.  Valid range: 0..59
    106          		U16 Hour  = 0;			// 0 based.  Valid range: 0..23
    107          		U16 Day   = 1;			// 1 based.    Means that 1 is 1. Valid range is 1..31 (depending on month)
    108          		U16 Month = 1;			// 1 based.    Means that January is 1. Valid range is 1..12.
    109          		U16 Year  = 31;			// 1980 based. Means that 2007 would be 27.
    110          
    111          		r   = Sec / 2 + (Min << 5) + (Hour  << 11);
    112          		r  |= (U32)(Day + (Month << 5) + (Year  << 9)) << 16;
   \   00000010   F805A003           MOVEQ    R0,#+1040187392
   \   00000014   84098003           ORREQ    R0,R0,#0x210000
    113          	} // if
    114          
    115            return r;
   \   00000018   04D08DE2           ADD      SP,SP,#+4
   \   0000001C   0080BDE8           POP      {PC}             ;; return
    116          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     _aMemBlock

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   ........           DC32     FS_MMC_CM_Driver4Atmel
    117          
    118          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     FS_X_AddDevices       8
     FS_X_GetTimeDate      8


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     _aMemBlock          4
     FS_X_AddDevices    40
     FS_X_GetTimeDate   32
     ??DataTable0        4
     ??DataTable0_1      4

 
  4 bytes in section .data
 80 bytes in section .text
 
 80 bytes of CODE memory
  4 bytes of DATA memory

Errors: none
Warnings: none
