###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:08:13 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DRAW.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DRAW.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_DRAW.lst               #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_DRAW.o                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DRAW.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DRAW.c
     19          Purpose     : member functions of GUI_DRAW Object
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI.h"
     24          #include "GUI_Private.h"
     25          #include "WIDGET.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Public code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_DRAW__Draw
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          void GUI_DRAW__Draw(GUI_DRAW_HANDLE hDrawObj, WM_HWIN hWin, int x, int y) {
   \                     GUI_DRAW__Draw:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
     40            GUI_DRAW * pDrawObj;
     41            void (* pfDraw)(GUI_DRAW_HANDLE hDrawObj, WM_HWIN hWin, int x, int y);
     42          
     43            if (hDrawObj) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   0800000A           BEQ      ??GUI_DRAW__Draw_0
     44              pDrawObj = (GUI_DRAW *)GUI_LOCK_H(hDrawObj);
     45              pfDraw = pDrawObj->pConsts->pfDraw;
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   008090E5           LDR      R8,[R0, #+0]
     46              GUI_UNLOCK_H(pDrawObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     47              pfDraw(hDrawObj, hWin, x, y);
   \   0000002C   0730A0E1           MOV      R3,R7
   \   00000030   0620A0E1           MOV      R2,R6
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   38FF2FE1           BLX      R8
     48            }
     49          }
   \                     ??GUI_DRAW__Draw_0:
   \   00000040   F081BDE8           POP      {R4-R8,PC}       ;; return
     50          
     51          /*********************************************************************
     52          *
     53          *       GUI_DRAW__GetXSize
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          int GUI_DRAW__GetXSize(GUI_DRAW_HANDLE hDrawObj) {
   \                     GUI_DRAW__GetXSize:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
     56            GUI_DRAW * pDrawObj;
     57            int  (* pfGetXSize)(GUI_DRAW_HANDLE hDrawObj);
     58            int r = 0;
   \   0000000C   0000A0E3           MOV      R0,#+0
     59          
     60            if (hDrawObj) {
   \   00000010   0600000A           BEQ      ??GUI_DRAW__GetXSize_0
     61              pDrawObj = (GUI_DRAW *)GUI_LOCK_H(hDrawObj);
     62              pfGetXSize = pDrawObj->pConsts->pfGetXSize;
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   045090E5           LDR      R5,[R0, #+4]
     63              GUI_UNLOCK_H(pDrawObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     64              r = pfGetXSize(hDrawObj);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   35FF2FE1           BLX      R5
     65            }
     66            return r;
   \                     ??GUI_DRAW__GetXSize_0:
   \   00000030   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     67          }
     68          
     69          /*********************************************************************
     70          *
     71          *       GUI_DRAW__GetYSize
     72          */

   \                                 In section .text, align 4, keep-with-next
     73          int GUI_DRAW__GetYSize(GUI_DRAW_HANDLE hDrawObj) {
   \                     GUI_DRAW__GetYSize:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
     74            GUI_DRAW * pDrawObj;
     75            int  (* pfGetYSize)(GUI_DRAW_HANDLE hDrawObj);
     76            int r = 0;
   \   0000000C   0000A0E3           MOV      R0,#+0
     77          
     78            if (hDrawObj) {
   \   00000010   0600000A           BEQ      ??GUI_DRAW__GetYSize_0
     79              pDrawObj = (GUI_DRAW *)GUI_LOCK_H(hDrawObj);
     80              pfGetYSize = pDrawObj->pConsts->pfGetYSize;
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   085090E5           LDR      R5,[R0, #+8]
     81              GUI_UNLOCK_H(pDrawObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     82              r = pfGetYSize(hDrawObj);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   35FF2FE1           BLX      R5
     83            }
     84            return r;
   \                     ??GUI_DRAW__GetYSize_0:
   \   00000030   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
     85          }
     86          
     87          #else                            /* Avoid problems with empty object modules */
     88            void GUI_DRAW_C(void) {}
     89          #endif
     90          
     91          /*************************** End of file ****************************/
     92          

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     GUI_DRAW__Draw         24
     GUI_DRAW__GetXSize     16
     GUI_DRAW__GetYSize     16


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     GUI_DRAW__Draw       68
     GUI_DRAW__GetXSize   56
     GUI_DRAW__GetYSize   56

 
 180 bytes in section .text
 
 180 bytes of CODE memory

Errors: none
Warnings: none
