###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:57 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\HEADER_Color.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\HEADER_Color.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\HEADER_Color.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\HEADER_Color.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\HEADER_Color.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : HEADER.c
     19          Purpose     : Implementation of header widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          
     26          #include "HEADER_Private.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *       Public code
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       HEADER_SetTextColor
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          void HEADER_SetTextColor(HEADER_Handle hObj, GUI_COLOR Color) {
   \                     HEADER_SetTextColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     41            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??HEADER_SetTextColor_0
     42              HEADER_Obj * pObj;
     43              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     44              pObj = HEADER_LOCK_H(hObj);
     45              pObj->Props.TextColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   3C5080E5           STR      R5,[R0, #+60]
     46              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     47              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
     48              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
     49            }
     50          }
   \                     ??HEADER_SetTextColor_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     51          
     52          /*********************************************************************
     53          *
     54          *       HEADER_SetBkColor
     55          */

   \                                 In section .text, align 4, keep-with-next
     56          void HEADER_SetBkColor(HEADER_Handle hObj, GUI_COLOR Color) {
   \                     HEADER_SetBkColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     57            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??HEADER_SetBkColor_0
     58              HEADER_Obj * pObj;
     59              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     60              pObj = HEADER_LOCK_H(hObj);
     61              pObj->Props.BkColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   385080E5           STR      R5,[R0, #+56]
     62              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     63              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
     64              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
     65            }
     66          }
   \                     ??HEADER_SetBkColor_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     67          
     68          /*********************************************************************
     69          *
     70          *       HEADER_SetArrowColor
     71          */

   \                                 In section .text, align 4, keep-with-next
     72          void HEADER_SetArrowColor(HEADER_Handle hObj, GUI_COLOR Color) {
   \                     HEADER_SetArrowColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     73            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??HEADER_SetArrowColor_0
     74              HEADER_Obj * pObj;
     75              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     76              pObj = HEADER_LOCK_H(hObj);
     77              pObj->Props.ArrowColor = Color;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   405080E5           STR      R5,[R0, #+64]
     78              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     79              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
     80              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
     81            }
     82          }
   \                     ??HEADER_SetArrowColor_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     83          
     84          /*********************************************************************
     85          *
     86          *       HEADER_GetTextColor
     87          */

   \                                 In section .text, align 4, keep-with-next
     88          GUI_COLOR HEADER_GetTextColor(HEADER_Handle hObj) {
   \                     HEADER_GetTextColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     89            GUI_COLOR Color;
     90            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     91            if (hObj) {
   \   00000010   0500000A           BEQ      ??HEADER_GetTextColor_0
     92              HEADER_Obj * pObj;
     93              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     94              pObj = HEADER_LOCK_H(hObj);
     95              Color = pObj->Props.TextColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   3C5090E5           LDR      R5,[R0, #+60]
     96              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
     97              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
     98            }
     99            return Color;
   \                     ??HEADER_GetTextColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    100          }
    101          
    102          /*********************************************************************
    103          *
    104          *       HEADER_GetBkColor
    105          */

   \                                 In section .text, align 4, keep-with-next
    106          GUI_COLOR HEADER_GetBkColor(HEADER_Handle hObj) {
   \                     HEADER_GetBkColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    107            GUI_COLOR Color;
    108            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    109            if (hObj) {
   \   00000010   0500000A           BEQ      ??HEADER_GetBkColor_0
    110              HEADER_Obj * pObj;
    111              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    112              pObj = HEADER_LOCK_H(hObj);
    113              Color = pObj->Props.BkColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   385090E5           LDR      R5,[R0, #+56]
    114              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    115              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    116            }
    117            return Color;
   \                     ??HEADER_GetBkColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    118          }
    119          
    120          /*********************************************************************
    121          *
    122          *       HEADER_GetArrowColor
    123          */

   \                                 In section .text, align 4, keep-with-next
    124          GUI_COLOR HEADER_GetArrowColor(HEADER_Handle hObj) {
   \                     HEADER_GetArrowColor:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    125            GUI_COLOR Color;
    126            Color = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    127            if (hObj) {
   \   00000010   0500000A           BEQ      ??HEADER_GetArrowColor_0
    128              HEADER_Obj * pObj;
    129              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    130              pObj = HEADER_LOCK_H(hObj);
    131              Color = pObj->Props.ArrowColor;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   405090E5           LDR      R5,[R0, #+64]
    132              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    133              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    134            }
    135            return Color;
   \                     ??HEADER_GetArrowColor_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    136          }
    137          
    138          #else /* avoid empty object files */
    139          
    140          void HEADER_Color_C(void);
    141          void HEADER_Color_C(void){}
    142          
    143          #endif  /* #if GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     HEADER_GetArrowColor     16
     HEADER_GetBkColor        16
     HEADER_GetTextColor      16
     HEADER_SetArrowColor     16
     HEADER_SetBkColor        16
     HEADER_SetTextColor      16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     HEADER_SetTextColor    64
     HEADER_SetBkColor      64
     HEADER_SetArrowColor   64
     HEADER_GetTextColor    56
     HEADER_GetBkColor      56
     HEADER_GetArrowColor   56

 
 360 bytes in section .text
 
 360 bytes of CODE memory

Errors: none
Warnings: none
