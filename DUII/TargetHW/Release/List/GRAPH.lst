###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:12 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GRAPH.c                             #
#    Command line =  C:\DUII\TargetHW\GUI\GRAPH.c -D DEBUG=1 -D               #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GRAPH.lst                  #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GRAPH.o                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GRAPH.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GRAPH.c
     19          Purpose     : Implementation of GRAPH widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GRAPH_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Private config defaults
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   GRAPH_BKCOLOR_DEFAULT
     36            #define GRAPH_BKCOLOR_DEFAULT GUI_BLACK
     37          #endif
     38          #ifndef   GRAPH_BORDERCOLOR_DEFAULT
     39            #define GRAPH_BORDERCOLOR_DEFAULT 0xc0c0c0
     40          #endif
     41          #ifndef   GRAPH_FRAMECOLOR_DEFAULT
     42            #define GRAPH_FRAMECOLOR_DEFAULT GUI_WHITE
     43          #endif
     44          #ifndef   GRAPH_GRIDCOLOR_DEFAULT
     45            #define GRAPH_GRIDCOLOR_DEFAULT GUI_DARKGRAY
     46          #endif
     47          #ifndef   GRAPH_GRIDSPACING_X_DEFAULT
     48            #define GRAPH_GRIDSPACING_X_DEFAULT 50
     49          #endif
     50          #ifndef   GRAPH_GRIDSPACING_Y_DEFAULT
     51            #define GRAPH_GRIDSPACING_Y_DEFAULT 50
     52          #endif
     53          #ifndef   GRAPH_BORDER_L_DEFAULT
     54            #define GRAPH_BORDER_L_DEFAULT 0
     55          #endif
     56          #ifndef   GRAPH_BORDER_T_DEFAULT
     57            #define GRAPH_BORDER_T_DEFAULT 0
     58          #endif
     59          #ifndef   GRAPH_BORDER_R_DEFAULT
     60            #define GRAPH_BORDER_R_DEFAULT 0
     61          #endif
     62          #ifndef   GRAPH_BORDER_B_DEFAULT
     63            #define GRAPH_BORDER_B_DEFAULT 0
     64          #endif
     65          
     66          /*********************************************************************
     67          *
     68          *       Static data
     69          *
     70          **********************************************************************
     71          */

   \                                 In section .data, align 4
     72          GRAPH_PROPS GRAPH__DefaultProps = {
   \                     GRAPH__DefaultProps:
   \   00000000   00000000C0C0       DC32 0, 12632256, 16777215, 4210752, 50, 50, 0, 0, 0, 0
   \              C000FFFFFF00
   \              404040003200
   \              000032000000
   \              000000000000
   \              000000000000
   \              00000000    
   \   00000028   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
     73            {
     74              GRAPH_BKCOLOR_DEFAULT,
     75              GRAPH_BORDERCOLOR_DEFAULT,
     76              GRAPH_FRAMECOLOR_DEFAULT,
     77              GRAPH_GRIDCOLOR_DEFAULT,
     78            },
     79            GRAPH_GRIDSPACING_X_DEFAULT,
     80            GRAPH_GRIDSPACING_Y_DEFAULT,
     81            GRAPH_BORDER_L_DEFAULT,
     82            GRAPH_BORDER_T_DEFAULT,
     83            GRAPH_BORDER_R_DEFAULT,
     84            GRAPH_BORDER_B_DEFAULT,
     85          };
     86          
     87          /*********************************************************************
     88          *
     89          *       Static routines
     90          *
     91          **********************************************************************
     92          */
     93          /*********************************************************************
     94          *
     95          *       _DrawGrid
     96          */

   \                                 In section .text, align 4, keep-with-next
     97          static void _DrawGrid(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
   \                     _DrawGrid:
   \   00000000   F84F2DE9           PUSH     {R3-R11,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   10D04DE2           SUB      SP,SP,#+16
   \   0000000C   0100A0E1           MOV      R0,R1
   \   00000010   0250A0E1           MOV      R5,R2
   \   00000014   3C609DE5           LDR      R6,[SP, #+60]
     98            GUI_RECT Rect;
     99            U8 LineStyleOld;
    100            int i, xSize, ySize, xSpace, ySpace, EffectSize;
    101            WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   00000018   0D10A0E1           MOV      R1,SP
   \   0000001C   ........           BL       WM_GetInsideRectExScrollbar
    102            EffectSize = pObj->Widget.pEffect->EffectSize;
   \   00000020   2C1094E5           LDR      R1,[R4, #+44]
    103            xSpace = pObj->Props.GridSpacingX;
    104            ySpace = pObj->Props.GridSpacingY;
    105            xSize = Rect.x1 - Rect.x0 + 1 - BorderL - BorderR;
   \   00000024   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000028   001091E5           LDR      R1,[R1, #+0]
   \   0000002C   0C108DE5           STR      R1,[SP, #+12]
   \   00000030   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000034   447094E5           LDR      R7,[R4, #+68]
   \   00000038   488094E5           LDR      R8,[R4, #+72]
   \   0000003C   010040E0           SUB      R0,R0,R1
   \   00000040   010080E2           ADD      R0,R0,#+1
   \   00000044   38109DE5           LDR      R1,[SP, #+56]
   \   00000048   050040E0           SUB      R0,R0,R5
   \   0000004C   019040E0           SUB      R9,R0,R1
    106            ySize = Rect.y1 - Rect.y0 + 1 - BorderT - BorderB;
   \   00000050   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000054   F210DDE1           LDRSH    R1,[SP, #+2]
   \   00000058   010040E0           SUB      R0,R0,R1
   \   0000005C   10109DE5           LDR      R1,[SP, #+16]
   \   00000060   010080E2           ADD      R0,R0,#+1
   \   00000064   010040E0           SUB      R0,R0,R1
   \   00000068   06A040E0           SUB      R10,R0,R6
    107            GUI_SetColor(pObj->Props.aColor[GRAPH_CI_GRID]);
   \   0000006C   400094E5           LDR      R0,[R4, #+64]
   \   00000070   ........           BL       GUI_SetColor
    108            LineStyleOld = GUI_GetLineStyle();
   \   00000074   ........           BL       GUI_GetLineStyle
   \   00000078   0800CDE5           STRB     R0,[SP, #+8]
    109            if (xSpace) {
   \   0000007C   000057E3           CMP      R7,#+0
   \   00000080   2200000A           BEQ      ??_DrawGrid_0
    110              int FirstPosX;
    111              FirstPosX = xSpace + pObj->Props.GridOffX + ((pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 0 : pObj->ScrollStateH.v);
   \   00000084   7800D4E5           LDRB     R0,[R4, #+120]
   \   00000088   4C1094E5           LDR      R1,[R4, #+76]
   \   0000008C   010010E3           TST      R0,#0x1
   \   00000090   8C009405           LDREQ    R0,[R4, #+140]
   \   00000094   0000A013           MOVNE    R0,#+0
   \   00000098   071081E0           ADD      R1,R1,R7
   \   0000009C   01B080E0           ADD      R11,R0,R1
    112              while (FirstPosX >= xSpace) FirstPosX -= xSpace;
   \   000000A0   07005BE1           CMP      R11,R7
   \   000000A4   020000BA           BLT      ??_DrawGrid_1
   \                     ??_DrawGrid_2:
   \   000000A8   07B04BE0           SUB      R11,R11,R7
   \   000000AC   07005BE1           CMP      R11,R7
   \   000000B0   FCFFFFAA           BGE      ??_DrawGrid_2
    113              GUI_SetLineStyle(pObj->LineStyleV);
   \                     ??_DrawGrid_1:
   \   000000B4   7A00D4E5           LDRB     R0,[R4, #+122]
   \   000000B8   ........           BL       GUI_SetLineStyle
    114              for (i = FirstPosX; i < xSize; i += xSpace) {
   \   000000BC   09005BE1           CMP      R11,R9
   \   000000C0   120000AA           BGE      ??_DrawGrid_0
    115                int x, y0, y1;
    116                x  = i + BorderL + EffectSize;
    117                y0 = Rect.y0 + BorderT;
   \                     ??_DrawGrid_3:
   \   000000C4   F210DDE1           LDRSH    R1,[SP, #+2]
   \   000000C8   10209DE5           LDR      R2,[SP, #+16]
   \   000000CC   0C009DE5           LDR      R0,[SP, #+12]
   \   000000D0   011082E0           ADD      R1,R2,R1
    118                y1 = Rect.y1 - BorderB;
   \   000000D4   F620DDE1           LDRSH    R2,[SP, #+6]
    119                if (pObj->LineStyleV != GUI_LS_SOLID) {
   \   000000D8   7A30D4E5           LDRB     R3,[R4, #+122]
   \   000000DC   000085E0           ADD      R0,R5,R0
   \   000000E0   00008BE0           ADD      R0,R11,R0
   \   000000E4   062042E0           SUB      R2,R2,R6
   \   000000E8   000053E3           CMP      R3,#+0
   \   000000EC   0300000A           BEQ      ??_DrawGrid_4
    120                  GUI_DrawLine(x, y0, x, y1);
   \   000000F0   0230A0E1           MOV      R3,R2
   \   000000F4   0020A0E1           MOV      R2,R0
   \   000000F8   ........           BL       GUI_DrawLine
   \   000000FC   000000EA           B        ??_DrawGrid_5
    121                } else {
    122                  GUI_DrawVLine(x, y0, y1);
   \                     ??_DrawGrid_4:
   \   00000100   ........           BL       GUI_DrawVLine
    123                }
    124              }
   \                     ??_DrawGrid_5:
   \   00000104   0BB087E0           ADD      R11,R7,R11
   \   00000108   09005BE1           CMP      R11,R9
   \   0000010C   ECFFFFBA           BLT      ??_DrawGrid_3
    125            }
    126            if (ySpace) {
   \                     ??_DrawGrid_0:
   \   00000110   000058E3           CMP      R8,#+0
   \   00000114   2000000A           BEQ      ??_DrawGrid_6
    127              int FirstPosY;
    128              FirstPosY = ySpace + pObj->Props.GridOffY - pObj->ScrollStateV.v;
   \   00000118   500094E5           LDR      R0,[R4, #+80]
   \   0000011C   801094E5           LDR      R1,[R4, #+128]
   \   00000120   080080E0           ADD      R0,R0,R8
   \   00000124   01B040E0           SUB      R11,R0,R1
    129              while (FirstPosY >= ySpace) FirstPosY -= ySpace;
   \   00000128   08005BE1           CMP      R11,R8
   \   0000012C   020000BA           BLT      ??_DrawGrid_7
   \                     ??_DrawGrid_8:
   \   00000130   08B04BE0           SUB      R11,R11,R8
   \   00000134   08005BE1           CMP      R11,R8
   \   00000138   FCFFFFAA           BGE      ??_DrawGrid_8
    130              GUI_SetLineStyle(pObj->LineStyleH);
   \                     ??_DrawGrid_7:
   \   0000013C   7B00D4E5           LDRB     R0,[R4, #+123]
   \   00000140   ........           BL       GUI_SetLineStyle
    131              for (i = FirstPosY; i < ySize; i += ySpace) {
   \   00000144   0A005BE1           CMP      R11,R10
   \   00000148   130000AA           BGE      ??_DrawGrid_6
    132                int y, x0, x1;
    133                y  = Rect.y1 - BorderB - i;
   \                     ??_DrawGrid_9:
   \   0000014C   F600DDE1           LDRSH    R0,[SP, #+6]
    134                x0 = Rect.x0 + BorderL;
    135                x1 = Rect.x1 - BorderR;
   \   00000150   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000154   38209DE5           LDR      R2,[SP, #+56]
   \   00000158   060040E0           SUB      R0,R0,R6
   \   0000015C   0B3040E0           SUB      R3,R0,R11
   \   00000160   022041E0           SUB      R2,R1,R2
   \   00000164   F000DDE1           LDRSH    R0,[SP, #+0]
    136                if (pObj->LineStyleH != GUI_LS_SOLID) {
   \   00000168   7B10D4E5           LDRB     R1,[R4, #+123]
   \   0000016C   000085E0           ADD      R0,R5,R0
   \   00000170   000051E3           CMP      R1,#+0
   \   00000174   0200000A           BEQ      ??_DrawGrid_10
    137                  GUI_DrawLine(x0, y, x1, y);
   \   00000178   0310A0E1           MOV      R1,R3
   \   0000017C   ........           BL       GUI_DrawLine
   \   00000180   020000EA           B        ??_DrawGrid_11
    138                } else {
    139                  GUI_DrawHLine(y, x0, x1);
   \                     ??_DrawGrid_10:
   \   00000184   0010A0E1           MOV      R1,R0
   \   00000188   0300A0E1           MOV      R0,R3
   \   0000018C   ........           BL       GUI_DrawHLine
    140                }
    141              }
   \                     ??_DrawGrid_11:
   \   00000190   0BB088E0           ADD      R11,R8,R11
   \   00000194   0A005BE1           CMP      R11,R10
   \   00000198   EBFFFFBA           BLT      ??_DrawGrid_9
    142            }
    143            GUI_SetLineStyle(LineStyleOld);
   \                     ??_DrawGrid_6:
   \   0000019C   0800DDE5           LDRB     R0,[SP, #+8]
   \   000001A0   ........           BL       GUI_SetLineStyle
    144          }
   \   000001A4   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000001A8   F08FBDE8           POP      {R4-R11,PC}      ;; return
    145          
    146          /*********************************************************************
    147          *
    148          *       _DrawBorder
    149          */

   \                                 In section .text, align 4, keep-with-next
    150          static void _DrawBorder(GRAPH_OBJ * pObj, GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB, GUI_RECT * pRectInvalid) {
   \                     _DrawBorder:
   \   00000000   F54F2DE9           PUSH     {R0,R2,R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0340A0E1           MOV      R4,R3
   \   00000010   40B09DE5           LDR      R11,[SP, #+64]
   \   00000014   44509DE5           LDR      R5,[SP, #+68]
    151            if (BorderL || BorderT || BorderR || BorderB) {
   \   00000018   021084E1           ORR      R1,R4,R2
   \   0000001C   01108BE1           ORR      R1,R11,R1
   \   00000020   48609DE5           LDR      R6,[SP, #+72]
   \   00000024   011095E1           ORRS     R1,R5,R1
   \   00000028   6800000A           BEQ      ??_DrawBorder_0
    152              int OrgX, OrgY, x0, y0, x1, y1, x0_Clear, y0_Clear, x1_Clear, y1_Clear;
    153              GUI_RECT Rect;
    154              int EffectSize;
    155              EffectSize = pObj->Widget.pEffect->EffectSize;
   \   0000002C   14109DE5           LDR      R1,[SP, #+20]
   \   00000030   2C1091E5           LDR      R1,[R1, #+44]
   \   00000034   007091E5           LDR      R7,[R1, #+0]
    156              WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   ........           BL       WM_GetInsideRectExScrollbar
    157              OrgX = WM_GetOrgX();
   \   00000040   ........           BL       WM_GetOrgX
   \   00000044   0080A0E1           MOV      R8,R0
    158              OrgY = WM_GetOrgY();
   \   00000048   ........           BL       WM_GetOrgY
    159              x0 = Rect.x0 + BorderL;
   \   0000004C   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000050   18209DE5           LDR      R2,[SP, #+24]
   \   00000054   0090A0E1           MOV      R9,R0
   \   00000058   011082E0           ADD      R1,R2,R1
   \   0000005C   10108DE5           STR      R1,[SP, #+16]
    160              y0 = Rect.y0 + BorderT;
   \   00000060   F210DDE1           LDRSH    R1,[SP, #+2]
    161              x1 = Rect.x1 - BorderR;
    162              y1 = Rect.y1 - BorderB;
   \   00000064   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000068   011084E0           ADD      R1,R4,R1
   \   0000006C   0C108DE5           STR      R1,[SP, #+12]
   \   00000070   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000074   05A040E0           SUB      R10,R0,R5
    163              GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BORDER]);
   \   00000078   14009DE5           LDR      R0,[SP, #+20]
   \   0000007C   0B1041E0           SUB      R1,R1,R11
   \   00000080   08108DE5           STR      R1,[SP, #+8]
   \   00000084   380090E5           LDR      R0,[R0, #+56]
   \   00000088   ........           BL       GUI_SetBkColor
    164              GUI_SetColor(pObj->Props.aColor[GRAPH_CI_FRAME]);
   \   0000008C   14009DE5           LDR      R0,[SP, #+20]
   \   00000090   3C0090E5           LDR      R0,[R0, #+60]
   \   00000094   ........           BL       GUI_SetColor
    165              if (BorderL) {
   \   00000098   18009DE5           LDR      R0,[SP, #+24]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   1100000A           BEQ      ??_DrawBorder_1
    166                x1_Clear = BorderL - 1 + EffectSize;
   \   000000A4   000087E0           ADD      R0,R7,R0
   \   000000A8   012040E2           SUB      R2,R0,#+1
    167                if ((pRectInvalid->x0 - OrgX) <= x1_Clear) {
   \   000000AC   F000D6E1           LDRSH    R0,[R6, #+0]
   \   000000B0   080040E0           SUB      R0,R0,R8
   \   000000B4   000052E1           CMP      R2,R0
   \   000000B8   0B0000BA           BLT      ??_DrawBorder_1
    168                  x0_Clear = Rect.x0;
    169                  y0_Clear = BorderT + EffectSize;
    170                  y1_Clear = Rect.y1 - BorderB + 1;
    171                  GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
   \   000000BC   F600DDE1           LDRSH    R0,[SP, #+6]
   \   000000C0   041087E0           ADD      R1,R7,R4
   \   000000C4   050040E0           SUB      R0,R0,R5
   \   000000C8   013080E2           ADD      R3,R0,#+1
   \   000000CC   F000DDE1           LDRSH    R0,[SP, #+0]
   \   000000D0   ........           BL       GUI_ClearRect
    172                  GUI_DrawVLine(x0 - 1, y0 - 1, y1 + 1);
   \   000000D4   0C009DE5           LDR      R0,[SP, #+12]
   \   000000D8   01208AE2           ADD      R2,R10,#+1
   \   000000DC   011040E2           SUB      R1,R0,#+1
   \   000000E0   10009DE5           LDR      R0,[SP, #+16]
   \   000000E4   010040E2           SUB      R0,R0,#+1
   \   000000E8   ........           BL       GUI_DrawVLine
    173                }
    174              }
    175              if (BorderT) {
   \                     ??_DrawBorder_1:
   \   000000EC   000054E3           CMP      R4,#+0
   \   000000F0   1000000A           BEQ      ??_DrawBorder_2
    176                y1_Clear = BorderT - 1 + EffectSize;
   \   000000F4   040087E0           ADD      R0,R7,R4
   \   000000F8   013040E2           SUB      R3,R0,#+1
    177                if ((pRectInvalid->y0 - OrgY) <= y1_Clear) {
   \   000000FC   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000100   090040E0           SUB      R0,R0,R9
   \   00000104   000053E1           CMP      R3,R0
   \   00000108   0A0000BA           BLT      ??_DrawBorder_2
    178                  x0_Clear = Rect.x0;
    179                  y0_Clear = Rect.y0;
    180                  x1_Clear = Rect.x1;
    181                  GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
   \   0000010C   F420DDE1           LDRSH    R2,[SP, #+4]
   \   00000110   F210DDE1           LDRSH    R1,[SP, #+2]
   \   00000114   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000118   ........           BL       GUI_ClearRect
    182                  GUI_DrawHLine(y0 - 1, x0 - 1, x1 + 1);
   \   0000011C   08009DE5           LDR      R0,[SP, #+8]
   \   00000120   012080E2           ADD      R2,R0,#+1
   \   00000124   10009DE5           LDR      R0,[SP, #+16]
   \   00000128   011040E2           SUB      R1,R0,#+1
   \   0000012C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000130   010040E2           SUB      R0,R0,#+1
   \   00000134   ........           BL       GUI_DrawHLine
    183                }
    184              }
    185              if (BorderR) {
   \                     ??_DrawBorder_2:
   \   00000138   00005BE3           CMP      R11,#+0
   \   0000013C   1100000A           BEQ      ??_DrawBorder_3
    186                x0_Clear = Rect.x1 - BorderR + 1;
   \   00000140   F420DDE1           LDRSH    R2,[SP, #+4]
    187                if ((pRectInvalid->x1 - OrgX) >= x0_Clear) {
   \   00000144   F410D6E1           LDRSH    R1,[R6, #+4]
   \   00000148   0B0042E0           SUB      R0,R2,R11
   \   0000014C   010080E2           ADD      R0,R0,#+1
   \   00000150   081041E0           SUB      R1,R1,R8
   \   00000154   000051E1           CMP      R1,R0
   \   00000158   0A0000BA           BLT      ??_DrawBorder_3
    188                  y0_Clear = BorderT + EffectSize;
    189                  x1_Clear = Rect.x1;
    190                  y1_Clear = Rect.y1 - BorderB + 1;
    191                  GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
   \   0000015C   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000160   051041E0           SUB      R1,R1,R5
   \   00000164   013081E2           ADD      R3,R1,#+1
   \   00000168   041087E0           ADD      R1,R7,R4
   \   0000016C   ........           BL       GUI_ClearRect
    192                  GUI_DrawVLine(x1 + 1, y0 - 1, y1 + 1);
   \   00000170   0C009DE5           LDR      R0,[SP, #+12]
   \   00000174   01208AE2           ADD      R2,R10,#+1
   \   00000178   011040E2           SUB      R1,R0,#+1
   \   0000017C   08009DE5           LDR      R0,[SP, #+8]
   \   00000180   010080E2           ADD      R0,R0,#+1
   \   00000184   ........           BL       GUI_DrawVLine
    193                }
    194              }
    195              if (BorderB) {
   \                     ??_DrawBorder_3:
   \   00000188   000055E3           CMP      R5,#+0
   \   0000018C   0F00000A           BEQ      ??_DrawBorder_0
    196                y0_Clear = Rect.y1 - BorderB + 1;
   \   00000190   F630DDE1           LDRSH    R3,[SP, #+6]
   \   00000194   050043E0           SUB      R0,R3,R5
   \   00000198   011080E2           ADD      R1,R0,#+1
    197                if ((pRectInvalid->y1 - OrgY) >= y0_Clear) {
   \   0000019C   F600D6E1           LDRSH    R0,[R6, #+6]
   \   000001A0   090040E0           SUB      R0,R0,R9
   \   000001A4   010050E1           CMP      R0,R1
   \   000001A8   080000BA           BLT      ??_DrawBorder_0
    198                  x0_Clear = Rect.x0;
    199                  x1_Clear = Rect.x1;
    200                  y1_Clear = Rect.y1;
    201                  GUI_ClearRect(x0_Clear, y0_Clear, x1_Clear, y1_Clear);
   \   000001AC   F420DDE1           LDRSH    R2,[SP, #+4]
   \   000001B0   F000DDE1           LDRSH    R0,[SP, #+0]
   \   000001B4   ........           BL       GUI_ClearRect
    202                  GUI_DrawHLine(y1 + 1, x0 - 1, x1 + 1);
   \   000001B8   08009DE5           LDR      R0,[SP, #+8]
   \   000001BC   012080E2           ADD      R2,R0,#+1
   \   000001C0   10009DE5           LDR      R0,[SP, #+16]
   \   000001C4   011040E2           SUB      R1,R0,#+1
   \   000001C8   01008AE2           ADD      R0,R10,#+1
   \   000001CC   ........           BL       GUI_DrawHLine
    203                }
    204              }
    205            }
    206          }
   \                     ??_DrawBorder_0:
   \   000001D0   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000001D4   F08FBDE8           POP      {R4-R11,PC}      ;; return
    207          
    208          /*********************************************************************
    209          *
    210          *       _GetParams
    211          */
    212          static void _GetParams(GRAPH_OBJ * pObj, unsigned * pBorderL, unsigned * pBorderT, unsigned * pBorderR, unsigned * pBorderB, unsigned * pEffectSize) {
    213            *pBorderL    = pObj->Props.BorderL;
    214            *pBorderT    = pObj->Props.BorderT;
    215            *pBorderR    = pObj->Props.BorderR;
    216            *pBorderB    = pObj->Props.BorderB;
    217            *pEffectSize = pObj->Widget.pEffect->EffectSize;
    218          }
    219          
    220          /*********************************************************************
    221          *
    222          *       _OnPaint
    223          */

   \                                 In section .text, align 4, keep-with-next
    224          static void _OnPaint(GRAPH_Handle hObj, GUI_RECT * pRectInvalid) {
   \                     _OnPaint:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    225            GRAPH_OBJ * pObj;
    226            unsigned BorderL, BorderT, BorderR, BorderB, EffectSize, i, NumItems;
    227            GUI_RECT RectClient, Rect;
    228            pObj = GRAPH_LOCK_H(hObj);
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0060A0E1           MOV      R6,R0
    229            _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
   \   00000018   2C0096E5           LDR      R0,[R6, #+44]
   \   0000001C   547096E5           LDR      R7,[R6, #+84]
   \   00000020   009090E5           LDR      R9,[R0, #+0]
   \   00000024   588096E5           LDR      R8,[R6, #+88]
   \   00000028   5CB096E5           LDR      R11,[R6, #+92]
   \   0000002C   60A096E5           LDR      R10,[R6, #+96]
    230            WM_GetClientRect(&RectClient);
   \   00000030   14008DE2           ADD      R0,SP,#+20
   \   00000034   ........           BL       WM_GetClientRect
    231            WIDGET__EFFECT_DrawDownRect(&pObj->Widget, &RectClient);
   \   00000038   14108DE2           ADD      R1,SP,#+20
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   ........           BL       WIDGET__EFFECT_DrawDownRect
    232            Rect = RectClient;
   \   00000044   14308DE2           ADD      R3,SP,#+20
   \   00000048   000093E5           LDR      R0,[R3, #+0]
   \   0000004C   041093E5           LDR      R1,[R3, #+4]
   \   00000050   0C208DE2           ADD      R2,SP,#+12
   \   00000054   030082E8           STM      R2,{R0,R1}
    233            Rect.y0 += BorderT + EffectSize;
   \   00000058   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   0000005C   081089E0           ADD      R1,R9,R8
   \   00000060   000081E0           ADD      R0,R1,R0
   \   00000064   BE00CDE1           STRH     R0,[SP, #+14]
    234            Rect.y1 -= BorderB + EffectSize;
   \   00000068   F201DDE1           LDRSH    R0,[SP, #+18]
    235            Rect.x0 += BorderL + EffectSize;
   \   0000006C   071089E0           ADD      R1,R9,R7
   \   00000070   0A0040E0           SUB      R0,R0,R10
   \   00000074   090040E0           SUB      R0,R0,R9
   \   00000078   B201CDE1           STRH     R0,[SP, #+18]
   \   0000007C   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000080   000081E0           ADD      R0,R1,R0
   \   00000084   BC00CDE1           STRH     R0,[SP, #+12]
    236            Rect.x1 -= BorderR + EffectSize;
   \   00000088   F001DDE1           LDRSH    R0,[SP, #+16]
   \   0000008C   0B0040E0           SUB      R0,R0,R11
   \   00000090   090040E0           SUB      R0,R0,R9
   \   00000094   B001CDE1           STRH     R0,[SP, #+16]
    237            WM_SetUserClipRect(&Rect);
   \   00000098   0C008DE2           ADD      R0,SP,#+12
   \   0000009C   ........           BL       WM_SetUserClipRect
    238            GUI_SetBkColor(pObj->Props.aColor[GRAPH_CI_BK]);
   \   000000A0   340096E5           LDR      R0,[R6, #+52]
   \   000000A4   ........           BL       GUI_SetBkColor
    239            GUI_Clear();
   \   000000A8   ........           BL       GUI_Clear
    240            //
    241            // Give the application a chance to draw something at the beginning
    242            // of the drawing process
    243            //
    244            if (pObj->pUserDraw) {
   \   000000AC   942096E5           LDR      R2,[R6, #+148]
   \   000000B0   000052E3           CMP      R2,#+0
   \   000000B4   0200000A           BEQ      ??_OnPaint_0
    245              pObj->pUserDraw(hObj, GRAPH_DRAW_FIRST);
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   32FF2FE1           BLX      R2
    246            }
    247            //
    248            // Draw grid lines if visible
    249            //
    250            if (pObj->ShowGrid) {
   \                     ??_OnPaint_0:
   \   000000C4   6C00D6E5           LDRB     R0,[R6, #+108]
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0600000A           BEQ      ??_OnPaint_1
    251              _DrawGrid(pObj, hObj, BorderL, BorderT, BorderR, BorderB);
   \   000000D0   04A08DE5           STR      R10,[SP, #+4]
   \   000000D4   00B08DE5           STR      R11,[SP, #+0]
   \   000000D8   0830A0E1           MOV      R3,R8
   \   000000DC   0720A0E1           MOV      R2,R7
   \   000000E0   0410A0E1           MOV      R1,R4
   \   000000E4   0600A0E1           MOV      R0,R6
   \   000000E8   ........           BL       _DrawGrid
    252            }
    253            //
    254            // Draw border between effect rectangle and the graph area itself
    255            //
    256            GUI__ReduceRect(&Rect, &RectClient, EffectSize);
   \                     ??_OnPaint_1:
   \   000000EC   0920A0E1           MOV      R2,R9
   \   000000F0   14108DE2           ADD      R1,SP,#+20
   \   000000F4   0C008DE2           ADD      R0,SP,#+12
   \   000000F8   ........           BL       GUI__ReduceRect
    257            WM_SetUserClipRect(&Rect);
   \   000000FC   0C008DE2           ADD      R0,SP,#+12
   \   00000100   ........           BL       WM_SetUserClipRect
    258            _DrawBorder(pObj, hObj, BorderL, BorderT, BorderR, BorderB, pRectInvalid);
   \   00000104   08508DE5           STR      R5,[SP, #+8]
   \   00000108   04A08DE5           STR      R10,[SP, #+4]
   \   0000010C   00B08DE5           STR      R11,[SP, #+0]
   \   00000110   0830A0E1           MOV      R3,R8
   \   00000114   0720A0E1           MOV      R2,R7
   \   00000118   0410A0E1           MOV      R1,R4
   \   0000011C   0600A0E1           MOV      R0,R6
   \   00000120   ........           BL       _DrawBorder
    259            //
    260            // Give the application a chance to draw something at the beginning
    261            // of the drawing process
    262            //
    263            if (pObj->pUserDraw) {
   \   00000124   942096E5           LDR      R2,[R6, #+148]
   \   00000128   000052E3           CMP      R2,#+0
   \   0000012C   0200000A           BEQ      ??_OnPaint_2
    264              pObj->pUserDraw(hObj, GRAPH_DRAW_AFTER_BORDER);
   \   00000130   0110A0E3           MOV      R1,#+1
   \   00000134   0400A0E1           MOV      R0,R4
   \   00000138   32FF2FE1           BLX      R2
    265            }
    266            //
    267            // Draw all graph objects
    268            //
    269            NumItems = GUI_ARRAY_GetNumItems(pObj->GraphArray);
   \                     ??_OnPaint_2:
   \   0000013C   640096E5           LDR      R0,[R6, #+100]
   \   00000140   ........           BL       GUI_ARRAY_GetNumItems
   \   00000144   0080A0E1           MOV      R8,R0
    270            for (i = 0; i < NumItems; i++) {
   \   00000148   0090A0E3           MOV      R9,#+0
   \   0000014C   000058E3           CMP      R8,#+0
   \   00000150   1300000A           BEQ      ??_OnPaint_3
    271              WM_HMEM hMem;
    272              WM_HMEM * phMem;
    273              hMem  = GUI_ARRAY_GethItem(pObj->GraphArray, i); /* Handle of array item */
   \                     ??_OnPaint_4:
   \   00000154   0910A0E1           MOV      R1,R9
   \   00000158   640096E5           LDR      R0,[R6, #+100]
   \   0000015C   ........           BL       GUI_ARRAY_GethItem
    274              phMem = (WM_HMEM *)GUI_LOCK_H(hMem);                      /* Pointer to handle */
   \   00000160   ........           BL       GUI_ALLOC_LockH
    275              if (phMem) {
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   0A00000A           BEQ      ??_OnPaint_5
    276                GRAPH_DATA_Handle hDataObj;
    277                GRAPH_DATA_OBJ *  pDataObj;
    278                hDataObj = *(WM_HMEM *)phMem;
   \   0000016C   00A090E5           LDR      R10,[R0, #+0]
    279                pDataObj = (GRAPH_DATA_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000170   0A00A0E1           MOV      R0,R10
   \   00000174   ........           BL       GUI_ALLOC_LockH
   \   00000178   0020B0E1           MOVS     R2,R0
    280                if (pDataObj) {
   \   0000017C   0400000A           BEQ      ??_OnPaint_6
    281                  pDataObj->PaintObj.pfOnPaint(hDataObj, pRectInvalid);
   \   00000180   0510A0E1           MOV      R1,R5
   \   00000184   0A00A0E1           MOV      R0,R10
   \   00000188   002092E5           LDR      R2,[R2, #+0]
   \   0000018C   32FF2FE1           BLX      R2
    282                  GUI_UNLOCK_H(pDataObj);
   \   00000190   ........           BL       GUI_ALLOC_UnlockH
    283                }
    284                GUI_UNLOCK_H(phMem);
   \                     ??_OnPaint_6:
   \   00000194   ........           BL       GUI_ALLOC_UnlockH
    285              }
    286            }
   \                     ??_OnPaint_5:
   \   00000198   019089E2           ADD      R9,R9,#+1
   \   0000019C   080059E1           CMP      R9,R8
   \   000001A0   EBFFFF3A           BCC      ??_OnPaint_4
    287            //
    288            // Draw scale objects
    289            //
    290            NumItems = GUI_ARRAY_GetNumItems(pObj->ScaleArray);
   \                     ??_OnPaint_3:
   \   000001A4   680096E5           LDR      R0,[R6, #+104]
   \   000001A8   ........           BL       GUI_ARRAY_GetNumItems
   \   000001AC   0080A0E1           MOV      R8,R0
    291            for (i = 0; i < NumItems; i++) {
   \   000001B0   0090A0E3           MOV      R9,#+0
   \   000001B4   000058E3           CMP      R8,#+0
   \   000001B8   1300000A           BEQ      ??_OnPaint_7
    292              WM_HMEM hMem;
    293              WM_HMEM * phMem;
    294              hMem  = GUI_ARRAY_GethItem(pObj->ScaleArray, i); /* Handle of array item */
   \                     ??_OnPaint_8:
   \   000001BC   0910A0E1           MOV      R1,R9
   \   000001C0   680096E5           LDR      R0,[R6, #+104]
   \   000001C4   ........           BL       GUI_ARRAY_GethItem
    295              phMem = (WM_HMEM *)GUI_LOCK_H(hMem);                      /* Pointer to handle */
   \   000001C8   ........           BL       GUI_ALLOC_LockH
    296              if (phMem) {
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   0A00000A           BEQ      ??_OnPaint_9
    297                GRAPH_SCALE_Handle hScaleObj;
    298                GRAPH_SCALE_OBJ *  pScaleObj;
    299                hScaleObj = *(WM_HMEM *)phMem;
   \   000001D4   00A090E5           LDR      R10,[R0, #+0]
    300                pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScaleObj);
   \   000001D8   0A00A0E1           MOV      R0,R10
   \   000001DC   ........           BL       GUI_ALLOC_LockH
   \   000001E0   0020B0E1           MOVS     R2,R0
    301                if (pScaleObj) {
   \   000001E4   0400000A           BEQ      ??_OnPaint_10
    302                  pScaleObj->PaintObj.pfOnPaint(hScaleObj, pRectInvalid);
   \   000001E8   0510A0E1           MOV      R1,R5
   \   000001EC   0A00A0E1           MOV      R0,R10
   \   000001F0   002092E5           LDR      R2,[R2, #+0]
   \   000001F4   32FF2FE1           BLX      R2
    303                  GUI_UNLOCK_H(pScaleObj);
   \   000001F8   ........           BL       GUI_ALLOC_UnlockH
    304                }
    305                GUI_UNLOCK_H(phMem);
   \                     ??_OnPaint_10:
   \   000001FC   ........           BL       GUI_ALLOC_UnlockH
    306              }
    307            }
   \                     ??_OnPaint_9:
   \   00000200   019089E2           ADD      R9,R9,#+1
   \   00000204   080059E1           CMP      R9,R8
   \   00000208   EBFFFF3A           BCC      ??_OnPaint_8
    308            //
    309            // Give the application a chance to draw something above all
    310            //
    311            WM_SetUserClipRect(0);
   \                     ??_OnPaint_7:
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   ........           BL       WM_SetUserClipRect
    312            if (pObj->pUserDraw) {
   \   00000214   942096E5           LDR      R2,[R6, #+148]
   \   00000218   000052E3           CMP      R2,#+0
   \   0000021C   0200000A           BEQ      ??_OnPaint_11
    313              pObj->pUserDraw(hObj, GRAPH_DRAW_LAST);
   \   00000220   0210A0E3           MOV      R1,#+2
   \   00000224   0400A0E1           MOV      R0,R4
   \   00000228   32FF2FE1           BLX      R2
    314            }
    315            GUI_UNLOCK_H(pObj);
   \                     ??_OnPaint_11:
   \   0000022C   ........           BL       GUI_ALLOC_UnlockH
    316          }
   \   00000230   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   00000234   F08FBDE8           POP      {R4-R11,PC}      ;; return
    317          
    318          /*********************************************************************
    319          *
    320          *       _OnDelete
    321          */

   \                                 In section .text, align 4, keep-with-next
    322          static void _OnDelete(GRAPH_Handle hObj) {
   \                     _OnDelete:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    323            GRAPH_OBJ * pObj;
    324            int i, NumItems;
    325            pObj = GRAPH_LOCK_H(hObj);
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   0040A0E1           MOV      R4,R0
    326            NumItems = GUI_ARRAY_GetNumItems(pObj->GraphArray);
   \   00000010   640094E5           LDR      R0,[R4, #+100]
   \   00000014   ........           BL       GUI_ARRAY_GetNumItems
   \   00000018   0050A0E1           MOV      R5,R0
    327            for (i = 0; i < NumItems; i++) {
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   010055E3           CMP      R5,#+1
   \   00000024   120000BA           BLT      ??_OnDelete_0
    328              WM_HMEM hMem;
    329              WM_HMEM * phMem;
    330              hMem  = GUI_ARRAY_GethItem(pObj->GraphArray, i); /* Handle of array item */
   \                     ??_OnDelete_1:
   \   00000028   0610A0E1           MOV      R1,R6
   \   0000002C   640094E5           LDR      R0,[R4, #+100]
   \   00000030   ........           BL       GUI_ARRAY_GethItem
    331              phMem = (WM_HMEM *)GUI_LOCK_H(hMem);                      /* Pointer to handle */
   \   00000034   ........           BL       GUI_ALLOC_LockH
    332              if (phMem) {
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0900000A           BEQ      ??_OnDelete_2
    333                GRAPH_DATA_Handle hDataObj;
    334                GRAPH_DATA_OBJ *  pDataObj;
    335                hDataObj = *(WM_HMEM *)phMem;
   \   00000040   007090E5           LDR      R7,[R0, #+0]
    336                pDataObj = (GRAPH_DATA_OBJ *)GUI_LOCK_H(hDataObj);
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   ........           BL       GUI_ALLOC_LockH
   \   0000004C   0010B0E1           MOVS     R1,R0
    337                if (pDataObj) {
   \   00000050   0300000A           BEQ      ??_OnDelete_3
    338                  pDataObj->PaintObj.pfOnDelete(hDataObj);
   \   00000054   0700A0E1           MOV      R0,R7
   \   00000058   041091E5           LDR      R1,[R1, #+4]
   \   0000005C   31FF2FE1           BLX      R1
    339                  GUI_UNLOCK_H(pDataObj);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
    340                }
    341                GUI_UNLOCK_H(phMem);
   \                     ??_OnDelete_3:
   \   00000064   ........           BL       GUI_ALLOC_UnlockH
    342              }
    343            }
   \                     ??_OnDelete_2:
   \   00000068   016086E2           ADD      R6,R6,#+1
   \   0000006C   050056E1           CMP      R6,R5
   \   00000070   ECFFFFBA           BLT      ??_OnDelete_1
    344            NumItems = GUI_ARRAY_GetNumItems(pObj->ScaleArray);
   \                     ??_OnDelete_0:
   \   00000074   680094E5           LDR      R0,[R4, #+104]
   \   00000078   ........           BL       GUI_ARRAY_GetNumItems
   \   0000007C   0050A0E1           MOV      R5,R0
    345            for (i = 0; i < NumItems; i++) {
   \   00000080   0060A0E3           MOV      R6,#+0
   \   00000084   010055E3           CMP      R5,#+1
   \   00000088   230000BA           BLT      ??_OnDelete_4
   \   0000008C   010015E3           TST      R5,#0x1
   \   00000090   0900000A           BEQ      ??_OnDelete_5
    346              WM_HMEM hMem;
    347              WM_HMEM * phMem;
    348              hMem  = GUI_ARRAY_GethItem(pObj->ScaleArray, i); /* Handle of array item */
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   680094E5           LDR      R0,[R4, #+104]
   \   0000009C   ........           BL       GUI_ARRAY_GethItem
    349              phMem = (WM_HMEM *)GUI_LOCK_H(hMem);                      /* Pointer to handle */
   \   000000A0   ........           BL       GUI_ALLOC_LockH
    350              if (phMem) {
   \   000000A4   000050E3           CMP      R0,#+0
   \   000000A8   0200000A           BEQ      ??_OnDelete_6
    351                GRAPH_SCALE_Handle hScaleObj;
    352                hScaleObj = *(WM_HMEM *)phMem;
    353                GUI_ALLOC_Free(hScaleObj);
   \   000000AC   000090E5           LDR      R0,[R0, #+0]
   \   000000B0   ........           BL       GUI_ALLOC_Free
    354                GUI_UNLOCK_H(phMem);
   \   000000B4   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_OnDelete_6:
   \   000000B8   0160A0E3           MOV      R6,#+1
   \                     ??_OnDelete_5:
   \   000000BC   A550B0E1           LSRS     R5,R5,#+1
   \   000000C0   1500000A           BEQ      ??_OnDelete_4
   \                     ??_OnDelete_7:
   \   000000C4   0610A0E1           MOV      R1,R6
   \   000000C8   680094E5           LDR      R0,[R4, #+104]
   \   000000CC   ........           BL       GUI_ARRAY_GethItem
   \   000000D0   ........           BL       GUI_ALLOC_LockH
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   0200000A           BEQ      ??_OnDelete_8
   \   000000DC   000090E5           LDR      R0,[R0, #+0]
   \   000000E0   ........           BL       GUI_ALLOC_Free
   \   000000E4   ........           BL       GUI_ALLOC_UnlockH
   \                     ??_OnDelete_8:
   \   000000E8   016086E2           ADD      R6,R6,#+1
   \   000000EC   0610A0E1           MOV      R1,R6
   \   000000F0   680094E5           LDR      R0,[R4, #+104]
   \   000000F4   ........           BL       GUI_ARRAY_GethItem
   \   000000F8   ........           BL       GUI_ALLOC_LockH
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0200000A           BEQ      ??_OnDelete_9
   \   00000104   000090E5           LDR      R0,[R0, #+0]
   \   00000108   ........           BL       GUI_ALLOC_Free
   \   0000010C   ........           BL       GUI_ALLOC_UnlockH
    355              }
    356            }
   \                     ??_OnDelete_9:
   \   00000110   016086E2           ADD      R6,R6,#+1
   \   00000114   015055E2           SUBS     R5,R5,#+1
   \   00000118   E9FFFF1A           BNE      ??_OnDelete_7
    357            GUI_ARRAY_Delete(pObj->GraphArray);
   \                     ??_OnDelete_4:
   \   0000011C   640094E5           LDR      R0,[R4, #+100]
   \   00000120   ........           BL       GUI_ARRAY_Delete
    358            GUI_ARRAY_Delete(pObj->ScaleArray);
   \   00000124   680094E5           LDR      R0,[R4, #+104]
   \   00000128   ........           BL       GUI_ARRAY_Delete
    359            GUI_UNLOCK_H(pObj);
   \   0000012C   04D08DE2           ADD      SP,SP,#+4
   \   00000130   F040BDE8           POP      {R4-R7,LR}
   \   00000134   ........           B        GUI_ALLOC_UnlockH  ;; tailcall
    360          }
    361          
    362          /*********************************************************************
    363          *
    364          *       _InvalidateGraph
    365          */
    366          static void _InvalidateGraph(GRAPH_Handle hObj) {
    367            unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
    368            GUI_RECT Rect;
    369            GRAPH_OBJ * pObj;
    370            pObj = GRAPH_LOCK_H(hObj);
    371            _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
    372            GUI_UNLOCK_H(pObj);
    373            WM_GetInsideRectExScrollbar(hObj, &Rect);
    374            Rect.x0 += BorderL;
    375            Rect.y0 += BorderT;
    376            Rect.x1 -= BorderR;
    377            Rect.y1 -= BorderB;
    378            WM_InvalidateRect(hObj, &Rect);
    379          }
    380          
    381          /*********************************************************************
    382          *
    383          *       _ManageScrollBars
    384          */

   \                                 In section .text, align 4, keep-with-next
    385          static void _ManageScrollBars(GRAPH_Handle hObj) {
   \                     _ManageScrollBars:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   20D04DE2           SUB      SP,SP,#+32
   \   00000008   0040A0E1           MOV      R4,R0
    386            GRAPH_OBJ * pObj;
    387            int IsRequired, PageSize;
    388            GUI_RECT Rect;
    389            unsigned BorderL, BorderT, BorderR, BorderB, EffectSize;
    390            WM_SCROLL_STATE ScrollStateV, ScrollStateH;
    391            WM_GetInsideRectExScrollbar(hObj, &Rect);
   \   0000000C   0D10A0E1           MOV      R1,SP
   \   00000010   ........           BL       WM_GetInsideRectExScrollbar
    392            pObj = GRAPH_LOCK_H(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    393            _GetParams(pObj, &BorderL, &BorderT, &BorderR, &BorderB, &EffectSize);
    394            PageSize   = Rect.y1 - Rect.y0 - BorderT - BorderB;
   \   0000001C   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000020   F220DDE1           LDRSH    R2,[SP, #+2]
   \   00000024   545090E5           LDR      R5,[R0, #+84]
   \   00000028   5C6090E5           LDR      R6,[R0, #+92]
   \   0000002C   021041E0           SUB      R1,R1,R2
   \   00000030   582090E5           LDR      R2,[R0, #+88]
   \   00000034   021041E0           SUB      R1,R1,R2
   \   00000038   602090E5           LDR      R2,[R0, #+96]
    395            IsRequired = ((int)pObj->RangeY > PageSize) ? 1 : 0;
   \   0000003C   740090E5           LDR      R0,[R0, #+116]
   \   00000040   027041E0           SUB      R7,R1,R2
   \   00000044   000057E1           CMP      R7,R0
   \   00000048   0180A0B3           MOVLT    R8,#+1
   \   0000004C   0080A0A3           MOVGE    R8,#+0
    396            GUI_UNLOCK_H(pObj);
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
    397            WM_SetScrollbarV(hObj, IsRequired);
   \   00000054   0810A0E1           MOV      R1,R8
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       WM_SetScrollbarV
    398            pObj = GRAPH_LOCK_H(hObj);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       GUI_ALLOC_LockH
    399            pObj->ScrollStateV.NumItems = pObj->RangeY;
   \   00000068   741090E5           LDR      R1,[R0, #+116]
   \   0000006C   7C1080E5           STR      R1,[R0, #+124]
    400            pObj->ScrollStateV.PageSize = PageSize;
   \   00000070   847080E5           STR      R7,[R0, #+132]
    401            PageSize   = Rect.x1 - Rect.x0 - BorderL - BorderR;
   \   00000074   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000078   F020DDE1           LDRSH    R2,[SP, #+0]
    402            IsRequired = ((int)pObj->RangeX > PageSize) ? 1 : 0;
   \   0000007C   700090E5           LDR      R0,[R0, #+112]
   \   00000080   021041E0           SUB      R1,R1,R2
   \   00000084   051041E0           SUB      R1,R1,R5
   \   00000088   066041E0           SUB      R6,R1,R6
   \   0000008C   000056E1           CMP      R6,R0
   \   00000090   0150A0B3           MOVLT    R5,#+1
   \   00000094   0050A0A3           MOVGE    R5,#+0
    403            GUI_UNLOCK_H(pObj);
   \   00000098   ........           BL       GUI_ALLOC_UnlockH
    404            WM_SetScrollbarH(hObj, IsRequired);
   \   0000009C   0510A0E1           MOV      R1,R5
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   ........           BL       WM_SetScrollbarH
    405            pObj = GRAPH_LOCK_H(hObj);
   \   000000A8   0400A0E1           MOV      R0,R4
   \   000000AC   ........           BL       GUI_ALLOC_LockH
   \   000000B0   0050A0E1           MOV      R5,R0
    406            pObj->ScrollStateH.NumItems = pObj->RangeX;
   \   000000B4   700095E5           LDR      R0,[R5, #+112]
   \   000000B8   880085E5           STR      R0,[R5, #+136]
    407            pObj->ScrollStateH.PageSize = PageSize;
   \   000000BC   906085E5           STR      R6,[R5, #+144]
    408            WM_CheckScrollBounds(&pObj->ScrollStateV);
   \   000000C0   7C0085E2           ADD      R0,R5,#+124
   \   000000C4   ........           BL       WM_CheckScrollBounds
    409            WM_CheckScrollBounds(&pObj->ScrollStateH);
   \   000000C8   880085E2           ADD      R0,R5,#+136
   \   000000CC   ........           BL       WM_CheckScrollBounds
    410            ScrollStateV = pObj->ScrollStateV;
   \   000000D0   7C1085E2           ADD      R1,R5,#+124
   \   000000D4   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000000D8   14008DE2           ADD      R0,SP,#+20
   \   000000DC   0C10A0E8           STM      R0!,{R2,R3,R12}
    411            ScrollStateH = pObj->ScrollStateH;
   \   000000E0   0C10B1E8           LDM      R1!,{R2,R3,R12}
   \   000000E4   08008DE2           ADD      R0,SP,#+8
   \   000000E8   0C10A0E8           STM      R0!,{R2,R3,R12}
    412            GUI_UNLOCK_H(pObj);
   \   000000EC   ........           BL       GUI_ALLOC_UnlockH
    413            WIDGET__SetScrollState(hObj, &ScrollStateV, &ScrollStateH);
   \   000000F0   08208DE2           ADD      R2,SP,#+8
   \   000000F4   14108DE2           ADD      R1,SP,#+20
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       WIDGET__SetScrollState
    414          }
   \   00000100   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   00000104   F081BDE8           POP      {R4-R8,PC}       ;; return
    415          
    416          /*********************************************************************
    417          *
    418          *       _OnScrollValueChanged
    419          */
    420          static void _OnScrollValueChanged(GRAPH_Handle hObj, WM_HWIN hScroll) {
    421            GRAPH_OBJ * pObj;
    422            int Value, Id;
    423            pObj = GRAPH_LOCK_H(hObj);
    424            Value = SCROLLBAR_GetValue(hScroll);
    425            Id = WM_GetId(hScroll);
    426            if (Id == GUI_ID_VSCROLL) {
    427              pObj->ScrollStateV.v = Value;
    428            } else {
    429              pObj->ScrollStateH.v = Value;
    430            }
    431            WM_InvalidateWindow(hObj);
    432            GUI_UNLOCK_H(pObj);
    433          }
    434          
    435          /*********************************************************************
    436          *
    437          *       Private routines
    438          *
    439          **********************************************************************
    440          */
    441          /*********************************************************************
    442          *
    443          *       GRAPH_LockH
    444          */
    445          #if GUI_DEBUG_LEVEL >= GUI_DEBUG_LEVEL_CHECK_ALL
    446          GRAPH_OBJ * GRAPH_LockH(GRAPH_Handle h) {
    447            GRAPH_OBJ * p = (GRAPH_OBJ *)GUI_LOCK_H(h);
    448            if (p) {
    449              if (p->DebugId != GRAPH_ID) {
    450                GUI_DEBUG_ERROROUT("GRAPH.c: Wrong handle type or Object not init'ed");
    451                return 0;
    452              }
    453            }
    454            return p;
    455          }
    456          #endif
    457          
    458          /*********************************************************************
    459          *
    460          *       Exported routines:  Private functions
    461          *
    462          **********************************************************************
    463          */
    464          /*********************************************************************
    465          *
    466          *       GRAPH__AddValue
    467          */

   \                                 In section .text, align 4, keep-with-next
    468          void GRAPH__AddValue(GRAPH_DATA_OBJ * pDataObj, void * pData, void * pValue, int Size) {
   \                     GRAPH__AddValue:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    469            if (pDataObj->PaintObj.hGraph) {
   \   00000008   080094E5           LDR      R0,[R4, #+8]
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   0270A0E1           MOV      R7,R2
   \   00000018   0360A0E1           MOV      R6,R3
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   2D00000A           BEQ      ??GRAPH__AddValue_0
    470              if (pDataObj->NumItems == pDataObj->MaxNumItems) {
   \   00000024   100094E5           LDR      R0,[R4, #+16]
   \   00000028   0C3094E5           LDR      R3,[R4, #+12]
   \   0000002C   000053E1           CMP      R3,R0
   \   00000030   0900001A           BNE      ??GRAPH__AddValue_1
    471                memmove((U8 *)pData, (U8 *)pData + Size, Size * (pDataObj->MaxNumItems - 1));
   \   00000034   010040E2           SUB      R0,R0,#+1
   \   00000038   900602E0           MUL      R2,R0,R6
   \   0000003C   051086E0           ADD      R1,R6,R5
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       __aeabi_memmove
    472                memmove((U8 *)pData + Size * (pDataObj->NumItems - 1), pValue, Size);
   \   00000048   0C0094E5           LDR      R0,[R4, #+12]
   \   0000004C   0620A0E1           MOV      R2,R6
   \   00000050   0710A0E1           MOV      R1,R7
   \   00000054   013040E2           SUB      R3,R0,#+1
   \   00000058   030000EA           B        ??GRAPH__AddValue_2
    473              } else {
    474                memmove((U8 *)pData + Size * pDataObj->NumItems++, pValue, Size);
   \                     ??GRAPH__AddValue_1:
   \   0000005C   010083E2           ADD      R0,R3,#+1
   \   00000060   0C0084E5           STR      R0,[R4, #+12]
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0710A0E1           MOV      R1,R7
   \                     ??GRAPH__AddValue_2:
   \   0000006C   935620E0           MLA      R0,R3,R6,R5
   \   00000070   ........           BL       __aeabi_memmove
    475              }
    476              _InvalidateGraph(pDataObj->PaintObj.hGraph);
   \   00000074   084094E5           LDR      R4,[R4, #+8]
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       GUI_ALLOC_LockH
   \   00000080   548090E5           LDR      R8,[R0, #+84]
   \   00000084   585090E5           LDR      R5,[R0, #+88]
   \   00000088   5C6090E5           LDR      R6,[R0, #+92]
   \   0000008C   607090E5           LDR      R7,[R0, #+96]
   \   00000090   ........           BL       GUI_ALLOC_UnlockH
   \   00000094   0D10A0E1           MOV      R1,SP
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       WM_GetInsideRectExScrollbar
   \   000000A0   F000DDE1           LDRSH    R0,[SP, #+0]
   \   000000A4   0D10A0E1           MOV      R1,SP
   \   000000A8   000088E0           ADD      R0,R8,R0
   \   000000AC   B000CDE1           STRH     R0,[SP, #+0]
   \   000000B0   F200DDE1           LDRSH    R0,[SP, #+2]
   \   000000B4   000085E0           ADD      R0,R5,R0
   \   000000B8   B200CDE1           STRH     R0,[SP, #+2]
   \   000000BC   F400DDE1           LDRSH    R0,[SP, #+4]
   \   000000C0   060040E0           SUB      R0,R0,R6
   \   000000C4   B400CDE1           STRH     R0,[SP, #+4]
   \   000000C8   F600DDE1           LDRSH    R0,[SP, #+6]
   \   000000CC   070040E0           SUB      R0,R0,R7
   \   000000D0   B600CDE1           STRH     R0,[SP, #+6]
   \   000000D4   0400A0E1           MOV      R0,R4
   \   000000D8   ........           BL       WM_InvalidateRect
    477            }
    478          }
   \                     ??GRAPH__AddValue_0:
   \   000000DC   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000E0   F081BDE8           POP      {R4-R8,PC}       ;; return
    479          
    480          /*********************************************************************
    481          *
    482          *       Exported routines:  Callback
    483          *
    484          **********************************************************************
    485          */
    486          /*********************************************************************
    487          *
    488          *       GRAPH_Callback
    489          */

   \                                 In section .text, align 4, keep-with-next
    490          void GRAPH_Callback (WM_MESSAGE * pMsg) {
   \                     GRAPH_Callback:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    491            int Result, ManageScrollBars = 0;
    492            GRAPH_Handle hObj;
    493            hObj = pMsg->hWin;
    494            /* Let widget handle the standard messages */
    495            if (pMsg->MsgId == WM_WIDGET_SET_EFFECT) {
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   045094E5           LDR      R5,[R4, #+4]
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   C00F50E3           CMP      R0,#+768
    496              ManageScrollBars = 1;
   \   00000018   0160A003           MOVEQ    R6,#+1
    497            }
    498            Result = WIDGET_HandleActive(hObj, pMsg);
   \   0000001C   0410A0E1           MOV      R1,R4
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       WIDGET_HandleActive
   \   00000028   0070A0E1           MOV      R7,R0
    499            if (ManageScrollBars) {
   \   0000002C   000056E3           CMP      R6,#+0
   \   00000030   0100000A           BEQ      ??GRAPH_Callback_1
    500              _ManageScrollBars(hObj);
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           BL       _ManageScrollBars
    501            }
    502            if (!Result) {
   \                     ??GRAPH_Callback_1:
   \   0000003C   000057E3           CMP      R7,#+0
   \   00000040   5C00000A           BEQ      ??GRAPH_Callback_2
    503              return;
    504            }
    505            switch (pMsg->MsgId) {
   \   00000044   000094E5           LDR      R0,[R4, #+0]
   \   00000048   050040E2           SUB      R0,R0,#+5
   \   0000004C   210050E3           CMP      R0,#+33
   \   00000050   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GRAPH_Callback_0:
   \   00000054   5500008A           BHI      ??GRAPH_Callback_3
   \   00000058   200000EA           B        ??GRAPH_Callback_4
   \   0000005C   530000EA           B        ??GRAPH_Callback_3
   \   00000060   520000EA           B        ??GRAPH_Callback_3
   \   00000064   510000EA           B        ??GRAPH_Callback_3
   \   00000068   500000EA           B        ??GRAPH_Callback_3
   \   0000006C   4F0000EA           B        ??GRAPH_Callback_3
   \   00000070   210000EA           B        ??GRAPH_Callback_5
   \   00000074   4D0000EA           B        ??GRAPH_Callback_3
   \   00000078   4C0000EA           B        ??GRAPH_Callback_3
   \   0000007C   4B0000EA           B        ??GRAPH_Callback_3
   \   00000080   190000EA           B        ??GRAPH_Callback_6
   \   00000084   490000EA           B        ??GRAPH_Callback_3
   \   00000088   480000EA           B        ??GRAPH_Callback_3
   \   0000008C   470000EA           B        ??GRAPH_Callback_3
   \   00000090   460000EA           B        ??GRAPH_Callback_3
   \   00000094   450000EA           B        ??GRAPH_Callback_3
   \   00000098   440000EA           B        ??GRAPH_Callback_3
   \   0000009C   430000EA           B        ??GRAPH_Callback_3
   \   000000A0   420000EA           B        ??GRAPH_Callback_3
   \   000000A4   410000EA           B        ??GRAPH_Callback_3
   \   000000A8   400000EA           B        ??GRAPH_Callback_3
   \   000000AC   3F0000EA           B        ??GRAPH_Callback_3
   \   000000B0   3E0000EA           B        ??GRAPH_Callback_3
   \   000000B4   3D0000EA           B        ??GRAPH_Callback_3
   \   000000B8   3C0000EA           B        ??GRAPH_Callback_3
   \   000000BC   3B0000EA           B        ??GRAPH_Callback_3
   \   000000C0   3A0000EA           B        ??GRAPH_Callback_3
   \   000000C4   390000EA           B        ??GRAPH_Callback_3
   \   000000C8   380000EA           B        ??GRAPH_Callback_3
   \   000000CC   370000EA           B        ??GRAPH_Callback_3
   \   000000D0   360000EA           B        ??GRAPH_Callback_3
   \   000000D4   350000EA           B        ??GRAPH_Callback_3
   \   000000D8   340000EA           B        ??GRAPH_Callback_3
   \   000000DC   090000EA           B        ??GRAPH_Callback_7
    506            case WM_SIZE:
    507              _ManageScrollBars(hObj);
   \                     ??GRAPH_Callback_4:
   \   000000E0   0500A0E1           MOV      R0,R5
   \   000000E4   ........           BL       _ManageScrollBars
    508              break;
   \   000000E8   300000EA           B        ??GRAPH_Callback_3
    509            case WM_PAINT:
    510              _OnPaint(hObj, (GUI_RECT *)pMsg->Data.p);
   \                     ??GRAPH_Callback_6:
   \   000000EC   0C1094E5           LDR      R1,[R4, #+12]
   \   000000F0   0500A0E1           MOV      R0,R5
   \   000000F4   F041BDE8           POP      {R4-R8,LR}
   \   000000F8   ........           B        _OnPaint         ;; tailcall
    511              return;
    512            case WM_DELETE:
    513              _OnDelete(hObj);
   \                     ??GRAPH_Callback_5:
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   F041BDE8           POP      {R4-R8,LR}
   \   00000104   ........           B        _OnDelete        ;; tailcall
    514              return;
    515            case WM_NOTIFY_PARENT:
    516              switch (pMsg->Data.v) {
   \                     ??GRAPH_Callback_7:
   \   00000108   0C0094E5           LDR      R0,[R4, #+12]
   \   0000010C   050050E3           CMP      R0,#+5
   \   00000110   2600001A           BNE      ??GRAPH_Callback_3
    517              case WM_NOTIFICATION_VALUE_CHANGED:
    518                if (pMsg->hWinSrc  == WM_GetScrollbarV(hObj)) {
   \   00000114   0500A0E1           MOV      R0,R5
   \   00000118   ........           BL       WM_GetScrollbarV
   \   0000011C   086094E5           LDR      R6,[R4, #+8]
   \   00000120   000056E1           CMP      R6,R0
   \   00000124   0D00001A           BNE      ??GRAPH_Callback_8
    519                  _OnScrollValueChanged(pMsg->hWin, pMsg->hWinSrc);
   \   00000128   045094E5           LDR      R5,[R4, #+4]
   \   0000012C   0500A0E1           MOV      R0,R5
   \   00000130   ........           BL       GUI_ALLOC_LockH
   \   00000134   0070A0E1           MOV      R7,R0
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   ........           BL       SCROLLBAR_GetValue
   \   00000140   0080A0E1           MOV      R8,R0
   \   00000144   0600A0E1           MOV      R0,R6
   \   00000148   ........           BL       WM_GetId
   \   0000014C   FE0050E3           CMP      R0,#+254
   \   00000150   8C808715           STRNE    R8,[R7, #+140]
   \   00000154   80808705           STREQ    R8,[R7, #+128]
   \   00000158   0500A0E1           MOV      R0,R5
   \   0000015C   110000EA           B        ??GRAPH_Callback_9
    520                } else if (pMsg->hWinSrc == WM_GetScrollbarH(hObj)) {
   \                     ??GRAPH_Callback_8:
   \   00000160   0500A0E1           MOV      R0,R5
   \   00000164   ........           BL       WM_GetScrollbarH
   \   00000168   085094E5           LDR      R5,[R4, #+8]
   \   0000016C   000055E1           CMP      R5,R0
   \   00000170   0E00001A           BNE      ??GRAPH_Callback_3
    521                  _OnScrollValueChanged(pMsg->hWin, pMsg->hWinSrc);
   \   00000174   046094E5           LDR      R6,[R4, #+4]
   \   00000178   0600A0E1           MOV      R0,R6
   \   0000017C   ........           BL       GUI_ALLOC_LockH
   \   00000180   0070A0E1           MOV      R7,R0
   \   00000184   0500A0E1           MOV      R0,R5
   \   00000188   ........           BL       SCROLLBAR_GetValue
   \   0000018C   0080A0E1           MOV      R8,R0
   \   00000190   0500A0E1           MOV      R0,R5
   \   00000194   ........           BL       WM_GetId
   \   00000198   FE0050E3           CMP      R0,#+254
   \   0000019C   8C808715           STRNE    R8,[R7, #+140]
   \   000001A0   80808705           STREQ    R8,[R7, #+128]
   \   000001A4   0600A0E1           MOV      R0,R6
   \                     ??GRAPH_Callback_9:
   \   000001A8   ........           BL       WM_InvalidateWindow
   \   000001AC   ........           BL       GUI_ALLOC_UnlockH
    522                }
    523                break;
    524              case WM_NOTIFICATION_SCROLLBAR_ADDED:
    525                #if WIDGET_USE_PARENT_EFFECT
    526                {
    527                  GRAPH_OBJ * pObj;
    528                  pObj = GRAPH_LOCK_H(hObj);
    529                  WIDGET_SetEffect(pMsg->hWinSrc, pObj->Widget.pEffect);
    530                  GUI_UNLOCK_H(pObj);
    531                }
    532                #endif
    533                break;
    534              }
    535            }
    536            WM_DefaultProc(pMsg);
   \                     ??GRAPH_Callback_3:
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   ........           BL       WM_DefaultProc
    537          }
   \                     ??GRAPH_Callback_2:
   \   000001B8   F081BDE8           POP      {R4-R8,PC}       ;; return
    538          
    539          /*********************************************************************
    540          *
    541          *       Exported routines:  Create
    542          *
    543          **********************************************************************
    544          */
    545          /*********************************************************************
    546          *
    547          *       GRAPH_CreateEx
    548          */

   \                                 In section .text, align 4, keep-with-next
    549          GRAPH_Handle GRAPH_CreateEx(int x0, int y0, int xsize, int ysize, WM_HWIN hParent,
    550                                      int WinFlags, int ExFlags, int Id)
    551          {
   \                     GRAPH_CreateEx:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   0280A0E1           MOV      R8,R2
   \   00000014   0390A0E1           MOV      R9,R3
   \   00000018   38A09DE5           LDR      R10,[SP, #+56]
   \   0000001C   3CB09DE5           LDR      R11,[SP, #+60]
   \   00000020   40409DE5           LDR      R4,[SP, #+64]
   \   00000024   44509DE5           LDR      R5,[SP, #+68]
    552            GRAPH_Handle hObj;
    553            WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
    554            hObj = WM_CreateWindowAsChild(x0, y0, xsize, ysize, hParent, WinFlags, GRAPH_Callback,
    555                                          sizeof(GRAPH_OBJ) - sizeof(WM_Obj));
   \   0000002C   6C00A0E3           MOV      R0,#+108
   \   00000030   0C008DE5           STR      R0,[SP, #+12]
   \   00000034   ........           LDR      R0,??DataTable0
   \   00000038   04B08DE5           STR      R11,[SP, #+4]
   \   0000003C   08008DE5           STR      R0,[SP, #+8]
   \   00000040   00A08DE5           STR      R10,[SP, #+0]
   \   00000044   0930A0E1           MOV      R3,R9
   \   00000048   0820A0E1           MOV      R2,R8
   \   0000004C   0710A0E1           MOV      R1,R7
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   ........           BL       WM_CreateWindowAsChild
   \   00000058   0060B0E1           MOVS     R6,R0
    556            if (hObj) {
   \   0000005C   1300000A           BEQ      ??GRAPH_CreateEx_0
    557              GRAPH_OBJ * pObj;
    558              GUI_ARRAY GraphArray, ScaleArray;
    559              /* Init sub-classes */
    560              GraphArray = GUI_ARRAY_Create();
   \   00000060   ........           BL       GUI_ARRAY_Create
   \   00000064   0080A0E1           MOV      R8,R0
    561              ScaleArray = GUI_ARRAY_Create();
   \   00000068   ........           BL       GUI_ARRAY_Create
   \   0000006C   0090A0E1           MOV      R9,R0
    562              pObj = (GRAPH_OBJ *)GUI_LOCK_H(hObj); /* Don't use use WIDGET_H2P because WIDGET_INIT_ID() has not be called at this point */
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       GUI_ALLOC_LockH
   \   00000078   0070A0E1           MOV      R7,R0
    563              pObj->GraphArray = GraphArray;
   \   0000007C   648087E5           STR      R8,[R7, #+100]
    564              pObj->ScaleArray = ScaleArray;
   \   00000080   689087E5           STR      R9,[R7, #+104]
    565              /* Init widget specific variables */
    566              WIDGET__Init(&pObj->Widget, Id, 0);
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   ........           BL       WIDGET__Init
    567              /* Init member variables */
    568              GRAPH_INIT_ID(pObj);
    569              pObj->Props = GRAPH__DefaultProps;
   \   00000090   ........           LDR      R1,??DataTable0_1
   \   00000094   340087E2           ADD      R0,R7,#+52
   \   00000098   2C51B1E8           LDM      R1!,{R2,R3,R5,R8,R12,LR}
   \   0000009C   2C51A0E8           STM      R0!,{R2,R3,R5,R8,R12,LR}
   \   000000A0   2C51B1E8           LDM      R1!,{R2,R3,R5,R8,R12,LR}
   \   000000A4   2C51A0E8           STM      R0!,{R2,R3,R5,R8,R12,LR}
    570              pObj->Flags = ExFlags;
   \   000000A8   B847C7E1           STRH     R4,[R7, #+120]
    571              GUI_UNLOCK_H(pObj);
   \   000000AC   ........           BL       GUI_ALLOC_UnlockH
    572            }
    573            WM_UNLOCK();
   \                     ??GRAPH_CreateEx_0:
   \   000000B0   ........           BL       GUI_Unlock
    574            return hObj;
   \   000000B4   0600A0E1           MOV      R0,R6
   \   000000B8   14D08DE2           ADD      SP,SP,#+20
   \   000000BC   F08FBDE8           POP      {R4-R11,PC}      ;; return
    575          }
    576          
    577          /*********************************************************************
    578          *
    579          *       GRAPH_AttachData
    580          */

   \                                 In section .text, align 4, keep-with-next
    581          void GRAPH_AttachData(GRAPH_Handle hObj, GRAPH_DATA_Handle hData) {
   \                     GRAPH_AttachData:
   \   00000000   32402DE9           PUSH     {R1,R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    582            if (hObj) {
   \   00000008   0F00000A           BEQ      ??GRAPH_AttachData_0
    583              GUI_ARRAY GraphArray;
    584              GRAPH_OBJ * pObj;
    585              GRAPH_DATA_OBJ * pDataObj;
    586              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
    587              pObj = GRAPH_LOCK_H(hObj);
    588              GraphArray = pObj->GraphArray;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   645090E5           LDR      R5,[R0, #+100]
    589              GUI_UNLOCK_H(pObj);
   \   0000001C   ........           BL       GUI_ALLOC_UnlockH
    590              pDataObj = (GRAPH_DATA_OBJ *)GUI_LOCK_H(hData);
    591              pDataObj->PaintObj.hGraph = hObj;
   \   00000020   00009DE5           LDR      R0,[SP, #+0]
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   084080E5           STR      R4,[R0, #+8]
    592              GUI_UNLOCK_H(pDataObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    593              GUI_ARRAY_AddItem(GraphArray, &hData, sizeof(GRAPH_DATA_Handle));
   \   00000030   0420A0E3           MOV      R2,#+4
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           BL       GUI_ARRAY_AddItem
    594              WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
    595              WM_UNLOCK();
   \   00000048   ........           BL       GUI_Unlock
    596            }
    597          }
   \                     ??GRAPH_AttachData_0:
   \   0000004C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
    598          
    599          /*********************************************************************
    600          *
    601          *       GRAPH_DetachData
    602          */

   \                                 In section .text, align 4, keep-with-next
    603          void GRAPH_DetachData(GRAPH_Handle hObj, GRAPH_DATA_Handle hData) {
   \                     GRAPH_DetachData:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    604            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1E00000A           BEQ      ??GRAPH_DetachData_0
    605              GUI_ARRAY GraphArray;
    606              GRAPH_OBJ * pObj;
    607              int i, NumItems;
    608              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    609              pObj = GRAPH_LOCK_H(hObj);
    610              GraphArray = pObj->GraphArray;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   646090E5           LDR      R6,[R0, #+100]
    611              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    612              NumItems = GUI_ARRAY_GetNumItems(GraphArray);
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       GUI_ARRAY_GetNumItems
   \   00000034   0070A0E1           MOV      R7,R0
    613              for (i = 0; i < NumItems; i++) {
   \   00000038   0080A0E3           MOV      R8,#+0
   \   0000003C   010057E3           CMP      R7,#+1
   \   00000040   100000BA           BLT      ??GRAPH_DetachData_1
    614                GRAPH_DATA_Handle hi;
    615                hi = GUI_ARRAY_GethItem(GraphArray, i);
   \                     ??GRAPH_DetachData_2:
   \   00000044   0810A0E1           MOV      R1,R8
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       GUI_ARRAY_GethItem
   \   00000050   0090B0E1           MOVS     R9,R0
    616                if (hi) {
   \   00000054   0800000A           BEQ      ??GRAPH_DetachData_3
    617                  GRAPH_DATA_Handle * pi;
    618                  pi = (GRAPH_DATA_Handle *)GUI_LOCK_H(hi);
    619                  hi = *pi;
   \   00000058   ........           BL       GUI_ALLOC_LockH
   \   0000005C   009090E5           LDR      R9,[R0, #+0]
    620                  GUI_UNLOCK_H(pi);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
    621                  if (hi == hData) {
   \   00000064   050059E1           CMP      R9,R5
   \   00000068   0300001A           BNE      ??GRAPH_DetachData_3
    622                    GUI_ARRAY_DeleteItem(GraphArray, i);
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       GUI_ARRAY_DeleteItem
    623                    break;
   \   00000078   020000EA           B        ??GRAPH_DetachData_1
    624                  }
    625                }
    626              }
   \                     ??GRAPH_DetachData_3:
   \   0000007C   018088E2           ADD      R8,R8,#+1
   \   00000080   070058E1           CMP      R8,R7
   \   00000084   EEFFFFBA           BLT      ??GRAPH_DetachData_2
    627              WM_InvalidateWindow(hObj);
   \                     ??GRAPH_DetachData_1:
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       WM_InvalidateWindow
    628              WM_UNLOCK();
   \   00000090   ........           BL       GUI_Unlock
    629            }
    630          }
   \                     ??GRAPH_DetachData_0:
   \   00000094   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000098   F083BDE8           POP      {R4-R9,PC}       ;; return
    631          
    632          /*********************************************************************
    633          *
    634          *       GRAPH_AttachScale
    635          */

   \                                 In section .text, align 4, keep-with-next
    636          void GRAPH_AttachScale(GRAPH_Handle hObj, GRAPH_SCALE_Handle hScale) {
   \                     GRAPH_AttachScale:
   \   00000000   32402DE9           PUSH     {R1,R4,R5,LR}
   \   00000004   0040B0E1           MOVS     R4,R0
    637            if (hObj) {
   \   00000008   0F00000A           BEQ      ??GRAPH_AttachScale_0
    638              GUI_ARRAY ScaleArray;
    639              GRAPH_OBJ * pObj;
    640              GRAPH_SCALE_OBJ * pScaleObj;
    641              WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
    642              pObj = GRAPH_LOCK_H(hObj);
    643              ScaleArray = pObj->ScaleArray;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_ALLOC_LockH
   \   00000018   685090E5           LDR      R5,[R0, #+104]
    644              GUI_UNLOCK_H(pObj);
   \   0000001C   ........           BL       GUI_ALLOC_UnlockH
    645              pScaleObj = (GRAPH_SCALE_OBJ *)GUI_LOCK_H(hScale);
    646              pScaleObj->PaintObj.hGraph = hObj;
   \   00000020   00009DE5           LDR      R0,[SP, #+0]
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   084080E5           STR      R4,[R0, #+8]
    647              GUI_UNLOCK_H(pScaleObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    648              GUI_ARRAY_AddItem(ScaleArray, &hScale, sizeof(GRAPH_SCALE_Handle));
   \   00000030   0420A0E3           MOV      R2,#+4
   \   00000034   0D10A0E1           MOV      R1,SP
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           BL       GUI_ARRAY_AddItem
    649              WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
    650              WM_UNLOCK();
   \   00000048   ........           BL       GUI_Unlock
    651            }
    652          }
   \                     ??GRAPH_AttachScale_0:
   \   0000004C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
    653          
    654          /*********************************************************************
    655          *
    656          *       GRAPH_DetachScale
    657          */

   \                                 In section .text, align 4, keep-with-next
    658          void GRAPH_DetachScale(GRAPH_Handle hObj, GRAPH_SCALE_Handle hScale) {
   \                     GRAPH_DetachScale:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    659            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1E00000A           BEQ      ??GRAPH_DetachScale_0
    660              GUI_ARRAY ScaleArray;
    661              GRAPH_OBJ * pObj;
    662              int i, NumItems;
    663              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    664              pObj = GRAPH_LOCK_H(hObj);
    665              ScaleArray = pObj->ScaleArray;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   686090E5           LDR      R6,[R0, #+104]
    666              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    667              NumItems = GUI_ARRAY_GetNumItems(ScaleArray);
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       GUI_ARRAY_GetNumItems
   \   00000034   0070A0E1           MOV      R7,R0
    668              for (i = 0; i < NumItems; i++) {
   \   00000038   0080A0E3           MOV      R8,#+0
   \   0000003C   010057E3           CMP      R7,#+1
   \   00000040   100000BA           BLT      ??GRAPH_DetachScale_1
    669                GRAPH_SCALE_Handle hi;
    670                hi = GUI_ARRAY_GethItem(ScaleArray, i);
   \                     ??GRAPH_DetachScale_2:
   \   00000044   0810A0E1           MOV      R1,R8
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       GUI_ARRAY_GethItem
   \   00000050   0090B0E1           MOVS     R9,R0
    671                if (hi) {
   \   00000054   0800000A           BEQ      ??GRAPH_DetachScale_3
    672                  GRAPH_SCALE_Handle * pi;
    673                  pi = (GRAPH_SCALE_Handle *)GUI_LOCK_H(hi);
    674                  hi = *pi;
   \   00000058   ........           BL       GUI_ALLOC_LockH
   \   0000005C   009090E5           LDR      R9,[R0, #+0]
    675                  GUI_UNLOCK_H(pi);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
    676                  if (hi == hScale) {
   \   00000064   050059E1           CMP      R9,R5
   \   00000068   0300001A           BNE      ??GRAPH_DetachScale_3
    677                    GUI_ARRAY_DeleteItem(ScaleArray, i);
   \   0000006C   0810A0E1           MOV      R1,R8
   \   00000070   0600A0E1           MOV      R0,R6
   \   00000074   ........           BL       GUI_ARRAY_DeleteItem
    678                    break;
   \   00000078   020000EA           B        ??GRAPH_DetachScale_1
    679                  }
    680                }
    681              }
   \                     ??GRAPH_DetachScale_3:
   \   0000007C   018088E2           ADD      R8,R8,#+1
   \   00000080   070058E1           CMP      R8,R7
   \   00000084   EEFFFFBA           BLT      ??GRAPH_DetachScale_2
    682              WM_InvalidateWindow(hObj);
   \                     ??GRAPH_DetachScale_1:
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       WM_InvalidateWindow
    683              WM_UNLOCK();
   \   00000090   ........           BL       GUI_Unlock
    684            }
    685          }
   \                     ??GRAPH_DetachScale_0:
   \   00000094   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000098   F083BDE8           POP      {R4-R9,PC}       ;; return
    686          
    687          /*********************************************************************
    688          *
    689          *       GRAPH_SetColor
    690          */

   \                                 In section .text, align 4, keep-with-next
    691          GUI_COLOR GRAPH_SetColor(GRAPH_Handle hObj, GUI_COLOR Color, unsigned Index) {
   \                     GRAPH_SetColor:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
    692            GUI_COLOR OldColor = 0;
   \   00000014   0070A0E3           MOV      R7,#+0
    693            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   0D00000A           BEQ      ??GRAPH_SetColor_0
    694              GRAPH_OBJ * pObj;
    695              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
    696              pObj = GRAPH_LOCK_H(hObj);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_LockH
    697              if (Index < GUI_COUNTOF(pObj->Props.aColor)) {
   \   0000002C   040056E3           CMP      R6,#+4
   \   00000030   0600002A           BCS      ??GRAPH_SetColor_1
    698                OldColor = pObj->Props.aColor[Index];
   \   00000034   060180E0           ADD      R0,R0,R6, LSL #+2
   \   00000038   347090E5           LDR      R7,[R0, #+52]
    699                if (pObj->Props.aColor[Index] != Color) {
   \   0000003C   050057E1           CMP      R7,R5
   \   00000040   0200000A           BEQ      ??GRAPH_SetColor_1
    700                  pObj->Props.aColor[Index] = Color;
   \   00000044   345080E5           STR      R5,[R0, #+52]
    701                  WM_InvalidateWindow(hObj);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       WM_InvalidateWindow
    702                }
    703              }
    704              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetColor_1:
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
    705              WM_UNLOCK();
   \   00000054   ........           BL       GUI_Unlock
    706            }
    707            return OldColor;
   \                     ??GRAPH_SetColor_0:
   \   00000058   0700A0E1           MOV      R0,R7
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   F080BDE8           POP      {R4-R7,PC}       ;; return
    708          }
    709          
    710          /*********************************************************************
    711          *
    712          *       GRAPH_SetGridVis
    713          */

   \                                 In section .text, align 4, keep-with-next
    714          unsigned GRAPH_SetGridVis(GRAPH_Handle hObj, unsigned OnOff) {
   \                     GRAPH_SetGridVis:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    715            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    716            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??GRAPH_SetGridVis_0
    717              GRAPH_OBJ * pObj;
    718              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    719              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   6C60D0E5           LDRB     R6,[R0, #+108]
    720              OldValue = pObj->ShowGrid;
    721              if ((unsigned)pObj->ShowGrid != OnOff) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0500000A           BEQ      ??GRAPH_SetGridVis_1
    722                pObj->ShowGrid = OnOff ? 1 : 0;
   \   00000030   000055E3           CMP      R5,#+0
   \   00000034   0110A013           MOVNE    R1,#+1
   \   00000038   0010A003           MOVEQ    R1,#+0
   \   0000003C   6C10C0E5           STRB     R1,[R0, #+108]
    723                WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
    724              }
    725              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetGridVis_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
    726              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
    727            }
    728            return OldValue;
   \                     ??GRAPH_SetGridVis_0:
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   7080BDE8           POP      {R4-R6,PC}       ;; return
    729          }
    730          
    731          /*********************************************************************
    732          *
    733          *       GRAPH_SetGridDistX
    734          */

   \                                 In section .text, align 4, keep-with-next
    735          unsigned GRAPH_SetGridDistX(GRAPH_Handle hObj, unsigned Value) {
   \                     GRAPH_SetGridDistX:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    736            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    737            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SetGridDistX_0
    738              GRAPH_OBJ * pObj;
    739              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    740              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    741              OldValue = pObj->Props.GridSpacingX;
   \   00000024   446090E5           LDR      R6,[R0, #+68]
    742              if (pObj->Props.GridSpacingX != Value) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SetGridDistX_1
    743                pObj->Props.GridSpacingX = Value;
   \   00000030   445080E5           STR      R5,[R0, #+68]
    744                WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    745              }
    746              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetGridDistX_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    747              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    748            }
    749            return OldValue;
   \                     ??GRAPH_SetGridDistX_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    750          }
    751          
    752          /*********************************************************************
    753          *
    754          *       GRAPH_SetGridDistY
    755          */

   \                                 In section .text, align 4, keep-with-next
    756          unsigned GRAPH_SetGridDistY(GRAPH_Handle hObj, unsigned Value) {
   \                     GRAPH_SetGridDistY:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    757            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    758            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SetGridDistY_0
    759              GRAPH_OBJ * pObj;
    760              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    761              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    762              OldValue = pObj->Props.GridSpacingY;
   \   00000024   486090E5           LDR      R6,[R0, #+72]
    763              if (pObj->Props.GridSpacingY != Value) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SetGridDistY_1
    764                pObj->Props.GridSpacingY = Value;
   \   00000030   485080E5           STR      R5,[R0, #+72]
    765                WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    766              }
    767              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetGridDistY_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    768              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    769            }
    770            return OldValue;
   \                     ??GRAPH_SetGridDistY_0:
   \   00000044   0600A0E1           MOV      R0,R6
   \   00000048   7080BDE8           POP      {R4-R6,PC}       ;; return
    771          }
    772          
    773          /*********************************************************************
    774          *
    775          *       GRAPH_SetGridOffY
    776          */

   \                                 In section .text, align 4, keep-with-next
    777          unsigned GRAPH_SetGridOffY(GRAPH_Handle hObj, unsigned Value) {
   \                     GRAPH_SetGridOffY:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   0160A0E1           MOV      R6,R1
    778            unsigned OldValue = 0;
   \   00000010   0040A0E3           MOV      R4,#+0
    779            if (hObj) {
   \   00000014   000055E3           CMP      R5,#+0
   \   00000018   2100000A           BEQ      ??GRAPH_SetGridOffY_0
    780              GRAPH_OBJ * pObj;
    781              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
    782              pObj = GRAPH_LOCK_H(hObj);
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       GUI_ALLOC_LockH
    783              OldValue = pObj->Props.GridOffY;
   \   00000028   504090E5           LDR      R4,[R0, #+80]
    784              if (pObj->Props.GridOffY != Value) {
   \   0000002C   060054E1           CMP      R4,R6
   \   00000030   1900000A           BEQ      ??GRAPH_SetGridOffY_1
    785                pObj->Props.GridOffY = Value;
   \   00000034   506080E5           STR      R6,[R0, #+80]
    786                _InvalidateGraph(hObj);
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   ........           BL       GUI_ALLOC_LockH
   \   00000040   546090E5           LDR      R6,[R0, #+84]
   \   00000044   587090E5           LDR      R7,[R0, #+88]
   \   00000048   5C8090E5           LDR      R8,[R0, #+92]
   \   0000004C   609090E5           LDR      R9,[R0, #+96]
   \   00000050   ........           BL       GUI_ALLOC_UnlockH
   \   00000054   0D10A0E1           MOV      R1,SP
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       WM_GetInsideRectExScrollbar
   \   00000060   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000064   0D10A0E1           MOV      R1,SP
   \   00000068   000086E0           ADD      R0,R6,R0
   \   0000006C   B000CDE1           STRH     R0,[SP, #+0]
   \   00000070   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000074   000087E0           ADD      R0,R7,R0
   \   00000078   B200CDE1           STRH     R0,[SP, #+2]
   \   0000007C   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000080   080040E0           SUB      R0,R0,R8
   \   00000084   B400CDE1           STRH     R0,[SP, #+4]
   \   00000088   F600DDE1           LDRSH    R0,[SP, #+6]
   \   0000008C   090040E0           SUB      R0,R0,R9
   \   00000090   B600CDE1           STRH     R0,[SP, #+6]
   \   00000094   0500A0E1           MOV      R0,R5
   \   00000098   ........           BL       WM_InvalidateRect
    787              }
    788              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetGridOffY_1:
   \   0000009C   ........           BL       GUI_ALLOC_UnlockH
    789              WM_UNLOCK();
   \   000000A0   ........           BL       GUI_Unlock
    790            }
    791            return OldValue;
   \                     ??GRAPH_SetGridOffY_0:
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   0CD08DE2           ADD      SP,SP,#+12
   \   000000AC   F083BDE8           POP      {R4-R9,PC}       ;; return
    792          }
    793          
    794          /*********************************************************************
    795          *
    796          *       GRAPH_SetBorder
    797          */

   \                                 In section .text, align 4, keep-with-next
    798          void GRAPH_SetBorder(GRAPH_Handle hObj, unsigned BorderL, unsigned BorderT, unsigned BorderR, unsigned BorderB) {
   \                     GRAPH_SetBorder:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
   \   00000014   18809DE5           LDR      R8,[SP, #+24]
    799            if (hObj) {
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   0C00000A           BEQ      ??GRAPH_SetBorder_0
    800              GRAPH_OBJ * pObj;
    801              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
    802              pObj = GRAPH_LOCK_H(hObj);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_LockH
    803              pObj->Props.BorderL = BorderL;
   \   0000002C   545080E5           STR      R5,[R0, #+84]
    804              pObj->Props.BorderT = BorderT;
   \   00000030   586080E5           STR      R6,[R0, #+88]
    805              pObj->Props.BorderR = BorderR;
   \   00000034   5C7080E5           STR      R7,[R0, #+92]
    806              pObj->Props.BorderB = BorderB;
   \   00000038   608080E5           STR      R8,[R0, #+96]
    807              GUI_UNLOCK_H(pObj);
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    808              _ManageScrollBars(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       _ManageScrollBars
    809              WM_InvalidateWindow(hObj);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       WM_InvalidateWindow
    810              WM_UNLOCK();
   \   00000050   ........           BL       GUI_Unlock
    811            }
    812          }
   \                     ??GRAPH_SetBorder_0:
   \   00000054   F081BDE8           POP      {R4-R8,PC}       ;; return
    813          
    814          /*********************************************************************
    815          *
    816          *       GRAPH_SetUserDraw
    817          */

   \                                 In section .text, align 4, keep-with-next
    818          void GRAPH_SetUserDraw(GRAPH_Handle hObj, void (* pUserDraw)(WM_HWIN hObj, int Stage)) {
   \                     GRAPH_SetUserDraw:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    819            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??GRAPH_SetUserDraw_0
    820              GRAPH_OBJ * pObj;
    821              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    822              pObj = GRAPH_LOCK_H(hObj);
    823              pObj->pUserDraw = pUserDraw;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   945080E5           STR      R5,[R0, #+148]
    824              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    825              WM_InvalidateWindow(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
    826              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
    827            }
    828          }
   \                     ??GRAPH_SetUserDraw_0:
   \   00000038   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
    829          
    830          /*********************************************************************
    831          *
    832          *       GRAPH_SetVSizeX
    833          */

   \                                 In section .text, align 4, keep-with-next
    834          unsigned GRAPH_SetVSizeX(GRAPH_Handle hObj, unsigned Value) {
   \                     GRAPH_SetVSizeX:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    835            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    836            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0E00000A           BEQ      ??GRAPH_SetVSizeX_0
    837              GRAPH_OBJ * pObj;
    838              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    839              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    840              OldValue = pObj->RangeX;
   \   00000024   706090E5           LDR      R6,[R0, #+112]
    841              if (pObj->RangeX != Value) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0600000A           BEQ      ??GRAPH_SetVSizeX_1
    842                pObj->RangeX = Value;
   \   00000030   705080E5           STR      R5,[R0, #+112]
    843                GUI_UNLOCK_H(pObj);
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
    844                _ManageScrollBars(hObj);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       _ManageScrollBars
    845                WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
   \   00000048   000000EA           B        ??GRAPH_SetVSizeX_2
    846              } else {
    847                GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetVSizeX_1:
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
    848              }
    849              WM_UNLOCK();
   \                     ??GRAPH_SetVSizeX_2:
   \   00000050   ........           BL       GUI_Unlock
    850            }
    851            return OldValue;
   \                     ??GRAPH_SetVSizeX_0:
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return
    852          }
    853          
    854          /*********************************************************************
    855          *
    856          *       GRAPH_SetVSizeY
    857          */

   \                                 In section .text, align 4, keep-with-next
    858          unsigned GRAPH_SetVSizeY(GRAPH_Handle hObj, unsigned Value) {
   \                     GRAPH_SetVSizeY:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    859            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    860            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0E00000A           BEQ      ??GRAPH_SetVSizeY_0
    861              GRAPH_OBJ * pObj;
    862              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    863              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    864              OldValue = pObj->RangeY;
   \   00000024   746090E5           LDR      R6,[R0, #+116]
    865              if (pObj->RangeY != Value) {
   \   00000028   050056E1           CMP      R6,R5
   \   0000002C   0600000A           BEQ      ??GRAPH_SetVSizeY_1
    866                pObj->RangeY = Value;
   \   00000030   745080E5           STR      R5,[R0, #+116]
    867                GUI_UNLOCK_H(pObj);
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
    868                _ManageScrollBars(hObj);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       _ManageScrollBars
    869                WM_InvalidateWindow(hObj);
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       WM_InvalidateWindow
   \   00000048   000000EA           B        ??GRAPH_SetVSizeY_2
    870              } else {
    871                GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetVSizeY_1:
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
    872              }
    873              WM_UNLOCK();
   \                     ??GRAPH_SetVSizeY_2:
   \   00000050   ........           BL       GUI_Unlock
    874            }
    875            return OldValue;
   \                     ??GRAPH_SetVSizeY_0:
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   7080BDE8           POP      {R4-R6,PC}       ;; return
    876          }
    877          
    878          /*********************************************************************
    879          *
    880          *       GRAPH_SetGridFixedX
    881          */

   \                                 In section .text, align 4, keep-with-next
    882          unsigned GRAPH_SetGridFixedX(GRAPH_Handle hObj, unsigned OnOff) {
   \                     GRAPH_SetGridFixedX:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    883            unsigned OldValue = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    884            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1600000A           BEQ      ??GRAPH_SetGridFixedX_0
    885              GRAPH_OBJ * pObj;
    886              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    887              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    888              OldValue = (pObj->Flags & GRAPH_CF_GRID_FIXED_X) ? 1 : 0;
   \   00000024   B817D0E1           LDRH     R1,[R0, #+120]
    889              if (OldValue & !OnOff) {
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   0120A003           MOVEQ    R2,#+1
   \   00000030   016001E2           AND      R6,R1,#0x1
   \   00000034   0020A013           MOVNE    R2,#+0
   \   00000038   060012E1           TST      R2,R6
    890                pObj->Flags &= ~GRAPH_CF_GRID_FIXED_X;
   \   0000003C   0110C113           BICNE    R1,R1,#0x1
   \   00000040   0600001A           BNE      ??GRAPH_SetGridFixedX_1
    891                WM_InvalidateWindow(hObj);
    892              } else if (!OldValue & OnOff) {
   \   00000044   000056E3           CMP      R6,#+0
   \   00000048   0120A003           MOVEQ    R2,#+1
   \   0000004C   0020A013           MOVNE    R2,#+0
   \   00000050   013005E2           AND      R3,R5,#0x1
   \   00000054   020013E1           TST      R3,R2
   \   00000058   0300000A           BEQ      ??GRAPH_SetGridFixedX_2
    893                pObj->Flags |= GRAPH_CF_GRID_FIXED_X;
   \   0000005C   011081E3           ORR      R1,R1,#0x1
   \                     ??GRAPH_SetGridFixedX_1:
   \   00000060   B817C0E1           STRH     R1,[R0, #+120]
    894                WM_InvalidateWindow(hObj);
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       WM_InvalidateWindow
    895              }
    896              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetGridFixedX_2:
   \   0000006C   ........           BL       GUI_ALLOC_UnlockH
    897              WM_UNLOCK();
   \   00000070   ........           BL       GUI_Unlock
    898            }
    899            return OldValue;
   \                     ??GRAPH_SetGridFixedX_0:
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
    900          }
    901          
    902          /*********************************************************************
    903          *
    904          *       GRAPH_SetLineStyleH
    905          */

   \                                 In section .text, align 4, keep-with-next
    906          U8 GRAPH_SetLineStyleH(GRAPH_Handle hObj, U8 Value) {
   \                     GRAPH_SetLineStyleH:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    907            U8 OldValue = 0;
   \   0000000C   0070A0E3           MOV      R7,#+0
    908            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SetLineStyleH_0
    909              GRAPH_OBJ * pObj;
    910              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    911              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    912              OldValue = pObj->LineStyleH;
   \   00000024   7B70D0E5           LDRB     R7,[R0, #+123]
    913              if (OldValue != Value) {
   \   00000028   050057E1           CMP      R7,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SetLineStyleH_1
    914                pObj->LineStyleH = Value;
   \   00000030   7B50C0E5           STRB     R5,[R0, #+123]
    915                WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    916              }
    917              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetLineStyleH_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    918              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    919            }
    920            return OldValue;
   \                     ??GRAPH_SetLineStyleH_0:
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    921          }
    922          
    923          /*********************************************************************
    924          *
    925          *       GRAPH_SetLineStyleV
    926          */

   \                                 In section .text, align 4, keep-with-next
    927          U8 GRAPH_SetLineStyleV(GRAPH_Handle hObj, U8 Value) {
   \                     GRAPH_SetLineStyleV:
   \   00000000   B0402DE9           PUSH     {R4,R5,R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    928            U8 OldValue = 0;
   \   0000000C   0070A0E3           MOV      R7,#+0
    929            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0A00000A           BEQ      ??GRAPH_SetLineStyleV_0
    930              GRAPH_OBJ * pObj;
    931              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    932              pObj = GRAPH_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    933              OldValue = pObj->LineStyleV;
   \   00000024   7A70D0E5           LDRB     R7,[R0, #+122]
    934              if (OldValue != Value) {
   \   00000028   050057E1           CMP      R7,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SetLineStyleV_1
    935                pObj->LineStyleV = Value;
   \   00000030   7A50C0E5           STRB     R5,[R0, #+122]
    936                WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    937              }
    938              GUI_UNLOCK_H(pObj);
   \                     ??GRAPH_SetLineStyleV_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    939              WM_UNLOCK();
   \   00000040   ........           BL       GUI_Unlock
    940            }
    941            return OldValue;
   \                     ??GRAPH_SetLineStyleV_0:
   \   00000044   0700A0E1           MOV      R0,R7
   \   00000048   B080BDE8           POP      {R4,R5,R7,PC}    ;; return
    942          }
    943          
    944          /*********************************************************************
    945          *
    946          *       GRAPH_SetLineStyle
    947          */

   \                                 In section .text, align 4, keep-with-next
    948          void GRAPH_SetLineStyle(GRAPH_Handle hObj, U8 Value) {
   \                     GRAPH_SetLineStyle:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    949            GRAPH_SetLineStyleV(hObj, Value);
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   1500000A           BEQ      ??GRAPH_SetLineStyle_0
   \   00000018   ........           BL       GUI_Lock
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   7A10D0E5           LDRB     R1,[R0, #+122]
   \   00000028   050051E1           CMP      R1,R5
   \   0000002C   0200000A           BEQ      ??GRAPH_SetLineStyle_1
   \   00000030   7A50C0E5           STRB     R5,[R0, #+122]
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
   \                     ??GRAPH_SetLineStyle_1:
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
   \   00000040   ........           BL       GUI_Unlock
   \   00000044   ........           BL       GUI_Lock
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       GUI_ALLOC_LockH
   \   00000050   7B10D0E5           LDRB     R1,[R0, #+123]
   \   00000054   050051E1           CMP      R1,R5
   \   00000058   0200000A           BEQ      ??GRAPH_SetLineStyle_2
   \   0000005C   7B50C0E5           STRB     R5,[R0, #+123]
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WM_InvalidateWindow
   \                     ??GRAPH_SetLineStyle_2:
   \   00000068   ........           BL       GUI_ALLOC_UnlockH
   \   0000006C   ........           BL       GUI_Unlock
    950            GRAPH_SetLineStyleH(hObj, Value);
    951          }
   \                     ??GRAPH_SetLineStyle_0:
   \   00000070   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GRAPH_Callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   ........           DC32     GRAPH__DefaultProps
    952          
    953          
    954          #else                            /* Avoid problems with empty object modules */
    955            void GRAPH_C(void);
    956            void GRAPH_C(void) {}
    957          #endif  /* #if GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     GRAPH_AttachData        16
     GRAPH_AttachScale       16
     GRAPH_Callback          24
     GRAPH_CreateEx          56
     GRAPH_DetachData        32
     GRAPH_DetachScale       32
     GRAPH_SetBorder         24
     GRAPH_SetColor          24
     GRAPH_SetGridDistX      16
     GRAPH_SetGridDistY      16
     GRAPH_SetGridFixedX     16
     GRAPH_SetGridOffY       40
     GRAPH_SetGridVis        16
     GRAPH_SetLineStyle      16
     GRAPH_SetLineStyleH     24
     GRAPH_SetLineStyleV     24
     GRAPH_SetUserDraw       16
     GRAPH_SetVSizeX         24
     GRAPH_SetVSizeY         24
     GRAPH__AddValue         32
     _DrawBorder             64
     _DrawGrid               56
     _ManageScrollBars       56
     _OnDelete               24
     _OnPaint                64


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     GRAPH__DefaultProps   48
     _DrawGrid            428
     _DrawBorder          472
     _OnPaint             568
     _OnDelete            312
     _ManageScrollBars    264
     GRAPH__AddValue      228
     GRAPH_Callback       444
     GRAPH_CreateEx       192
     GRAPH_AttachData      84
     GRAPH_DetachData     156
     GRAPH_AttachScale     84
     GRAPH_DetachScale    156
     GRAPH_SetColor       100
     GRAPH_SetGridVis      88
     GRAPH_SetGridDistX    76
     GRAPH_SetGridDistY    76
     GRAPH_SetGridOffY    176
     GRAPH_SetBorder       88
     GRAPH_SetUserDraw     64
     GRAPH_SetVSizeX       92
     GRAPH_SetVSizeY       92
     GRAPH_SetGridFixedX  124
     GRAPH_SetLineStyleH   76
     GRAPH_SetLineStyleV   76
     GRAPH_SetLineStyle   120
     ??DataTable0           4
     ??DataTable0_1         4

 
    48 bytes in section .data
 4 644 bytes in section .text
 
 4 644 bytes of CODE memory
    48 bytes of DATA memory

Errors: none
Warnings: none
