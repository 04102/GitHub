###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:45 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__ExpandPixelIndices.c           #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__ExpandPixelIndices.c -D        #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    NOPROFILER -D OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN        #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI__ExpandPixelIndices.ls #
#                    t                                                        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI__ExpandPixelIndices.o   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__ExpandPixelIndices.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI__ExpandPixelIndices.c
     19          Purpose     : ...
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI__ExpandPixelIndices
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI__ExpandPixelIndices(void * pBuffer, int NumPixels, int BitsPerPixel) {
     36            int BytesPerPixel;
     37            U32 * pDest;
     38          
     39            pDest = (U32 *)pBuffer;
     40            if (BitsPerPixel <= 8) {
   \                     GUI__ExpandPixelIndices:
   \   00000000   090052E3           CMP      R2,#+9
   \   00000004   080000BA           BLT      ??GUI__ExpandPixelIndices_0
     41              BytesPerPixel = 1;
     42            } else if (BitsPerPixel <= 16) {
   \   00000008   110052E3           CMP      R2,#+17
   \   0000000C   0C0000AA           BGE      ??GUI__ExpandPixelIndices_1
     43              BytesPerPixel = 2;
     44            } else {
     45              BytesPerPixel = 4;
     46            }
     47            if (BytesPerPixel < GUI_BYTESPERPIXEL) {
     48              #if   (GUI_BYTESPERPIXEL == 4)
     49                switch (BytesPerPixel) {
     50                case 2: { // Convert from U16 to U32
     51                    U16 * pSrc;
     52                    pSrc = (U16 *)pBuffer;
     53                    pSrc  += NumPixels;
   \   00000010   812080E0           ADD      R2,R0,R1, LSL #+1
     54                    pDest += NumPixels;
   \   00000014   010180E0           ADD      R0,R0,R1, LSL #+2
     55                    do {
     56                      *--pDest = *--pSrc;
   \                     ??GUI__ExpandPixelIndices_2:
   \   00000018   B23072E1           LDRH     R3,[R2, #-2]!
     57                    } while (--NumPixels);
   \   0000001C   011051E2           SUBS     R1,R1,#+1
   \   00000020   043020E5           STR      R3,[R0, #-4]!
   \   00000024   FBFFFF1A           BNE      ??GUI__ExpandPixelIndices_2
   \   00000028   1EFF2FE1           BX       LR
     58                  }
     59                  break;
     60                case 1: { // Convert from U8 to U32
     61                    U8 * pSrc;
     62                    pSrc = (U8 *)pBuffer;
     63                    pSrc  += NumPixels;
   \                     ??GUI__ExpandPixelIndices_0:
   \   0000002C   002081E0           ADD      R2,R1,R0
     64                    pDest += NumPixels;
   \   00000030   010180E0           ADD      R0,R0,R1, LSL #+2
     65                    do {
     66                      *--pDest = *--pSrc;
   \                     ??GUI__ExpandPixelIndices_3:
   \   00000034   013072E5           LDRB     R3,[R2, #-1]!
     67                    } while (--NumPixels);
   \   00000038   011051E2           SUBS     R1,R1,#+1
   \   0000003C   043020E5           STR      R3,[R0, #-4]!
   \   00000040   FBFFFF1A           BNE      ??GUI__ExpandPixelIndices_3
     68                  }
     69                  break;
     70                }
     71              #elif (GUI_BYTESPERPIXEL == 2)
     72                {
     73                  U8 * pSrc;
     74                  pSrc = (U8 *)pBuffer;
     75                  pSrc  += NumPixels;
     76                  pDest += NumPixels;
     77                  do {
     78                    *--pDest = *--pSrc;
     79                  } while (--NumPixels);
     80                }
     81              #endif
     82            }
     83          }
   \                     ??GUI__ExpandPixelIndices_1:
   \   00000044   1EFF2FE1           BX       LR               ;; return
     84          
     85          /*********************************************************************
     86          *
     87          *       GUI__ExpandPixelIndicesEx
     88          */

   \                                 In section .text, align 4, keep-with-next
     89          void GUI__ExpandPixelIndicesEx(void * pBuffer, int NumPixels, int BitsPerPixel, tLCDDEV_Index2Color * pfIndex2Color) {
   \                     GUI__ExpandPixelIndicesEx:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0350A0E1           MOV      R5,R3
     90            int BytesPerPixel;
     91            U32 * pDest;
     92          
     93            pDest = (U32 *)pBuffer;
     94            if (BitsPerPixel <= 8) {
   \   00000010   090052E3           CMP      R2,#+9
   \   00000014   090000BA           BLT      ??GUI__ExpandPixelIndicesEx_0
     95              BytesPerPixel = 1;
     96            } else if (BitsPerPixel <= 16) {
   \   00000018   110052E3           CMP      R2,#+17
   \   0000001C   0E0000AA           BGE      ??GUI__ExpandPixelIndicesEx_1
     97              BytesPerPixel = 2;
     98            } else {
     99              BytesPerPixel = 4;
    100            }
    101            if (BytesPerPixel < GUI_BYTESPERPIXEL) {
    102              #if   (GUI_BYTESPERPIXEL == 4)
    103                switch (BytesPerPixel) {
    104                case 2: { // Convert from U16 to U32
    105                    U16 * pSrc;
    106                    pSrc = (U16 *)pBuffer;
    107                    pSrc  += NumPixels;
   \   00000020   846080E0           ADD      R6,R0,R4, LSL #+1
    108                    pDest += NumPixels;
   \   00000024   047180E0           ADD      R7,R0,R4, LSL #+2
    109                    do {
    110                      *--pDest = pfIndex2Color(*--pSrc);
   \                     ??GUI__ExpandPixelIndicesEx_2:
   \   00000028   B20076E1           LDRH     R0,[R6, #-2]!
   \   0000002C   35FF2FE1           BLX      R5
   \   00000030   040027E5           STR      R0,[R7, #-4]!
    111                    } while (--NumPixels);
   \   00000034   014054E2           SUBS     R4,R4,#+1
   \   00000038   FAFFFF1A           BNE      ??GUI__ExpandPixelIndicesEx_2
   \   0000003C   060000EA           B        ??GUI__ExpandPixelIndicesEx_1
    112                  }
    113                  break;
    114                case 1: { // Convert from U8 to U32
    115                    U8 * pSrc;
    116                    pSrc = (U8 *)pBuffer;
    117                    pSrc  += NumPixels;
   \                     ??GUI__ExpandPixelIndicesEx_0:
   \   00000040   006084E0           ADD      R6,R4,R0
    118                    pDest += NumPixels;
   \   00000044   047180E0           ADD      R7,R0,R4, LSL #+2
    119                    do {
    120                      *--pDest = pfIndex2Color(*--pSrc);
   \                     ??GUI__ExpandPixelIndicesEx_3:
   \   00000048   010076E5           LDRB     R0,[R6, #-1]!
   \   0000004C   35FF2FE1           BLX      R5
   \   00000050   040027E5           STR      R0,[R7, #-4]!
    121                    } while (--NumPixels);
   \   00000054   014054E2           SUBS     R4,R4,#+1
   \   00000058   FAFFFF1A           BNE      ??GUI__ExpandPixelIndicesEx_3
    122                  }
    123                  break;
    124                }
    125              #elif (GUI_BYTESPERPIXEL == 2)
    126                {
    127                  U8 * pSrc;
    128                  pSrc = (U8 *)pBuffer;
    129                  pSrc  += NumPixels;
    130                  pDest += NumPixels;
    131                  do {
    132                    *--pDest = pfIndex2Color(*--pSrc);
    133                  } while (--NumPixels);
    134                }
    135              #endif
    136            }
    137          }
   \                     ??GUI__ExpandPixelIndicesEx_1:
   \   0000005C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000060   F080BDE8           POP      {R4-R7,PC}       ;; return
    138          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     GUI__ExpandPixelIndices        0
     GUI__ExpandPixelIndicesEx     24


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     GUI__ExpandPixelIndices     72
     GUI__ExpandPixelIndicesEx  100

 
 172 bytes in section .text
 
 172 bytes of CODE memory

Errors: none
Warnings: none
