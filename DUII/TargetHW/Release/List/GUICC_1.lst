###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:53 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUICC_1.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\GUICC_1.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUICC_1.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUICC_1.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUICC_1.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICC_1.c
     19          Purpose     : Color conversion routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LCD_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       LCD_Color2Index_1
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          static unsigned LCD_Color2Index_1(LCD_COLOR Color) {
     36            int r, g, b;
     37            r =  Color        & 255;
     38            g = (Color >>  8) & 255;
     39            b = (Color >> 16) & 255;
     40            return (r + g + b + 383) / (3 * 255);
   \                     LCD_Color2Index_1:
   \   00000000   FF1000E2           AND      R1,R0,#0xFF
   \   00000004   2024A0E1           LSR      R2,R0,#+8
   \   00000008   FF2002E2           AND      R2,R2,#0xFF
   \   0000000C   2008A0E1           LSR      R0,R0,#+16
   \   00000010   011082E0           ADD      R1,R2,R1
   \   00000014   FF0000E2           AND      R0,R0,#0xFF
   \   00000018   010080E0           ADD      R0,R0,R1
   \   0000001C   7F10A0E3           MOV      R1,#+127
   \   00000020   401F81E3           ORR      R1,R1,#0x100
   \   00000024   000081E0           ADD      R0,R1,R0
   \   00000028   5610A0E3           MOV      R1,#+86
   \   0000002C   0008A0E1           LSL      R0,R0,#+16
   \   00000030   AB1C81E3           ORR      R1,R1,#0xAB00
   \   00000034   2008A0E1           LSR      R0,R0,#+16
   \   00000038   910000E0           MUL      R0,R1,R0
   \   0000003C   001081E0           ADD      R1,R1,R0
   \   00000040   A10CA0E1           LSR      R0,R1,#+25
   \   00000044   1EFF2FE1           BX       LR               ;; return
     41          }
     42          
     43          /*********************************************************************
     44          *
     45          *       _Index2Color_1
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          static LCD_COLOR _Index2Color_1(unsigned Index) {
     48            return Index ? 0xFFFFFF : 0;
   \                     _Index2Color_1:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   FF04E013           MVNNE    R0,#-16777216
   \   00000008   1EFF2FE1           BX       LR               ;; return
     49          }
     50          
     51          /*********************************************************************
     52          *
     53          *       _GetIndexMask_1
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          static unsigned _GetIndexMask_1(void) {
     56            return 0x01;
   \                     _GetIndexMask_1:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     57          }
     58          
     59          /*********************************************************************
     60          *
     61          *       LCD_API_ColorConv_1
     62          *
     63          * Purpose
     64          *   API table for this color conversion mode. Only used by memory
     65          *   devices in this mode.
     66          */

   \                                 In section .rodata, align 4, keep-with-next
     67          const LCD_API_COLOR_CONV LCD_API_ColorConv_1 = {
   \                     LCD_API_ColorConv_1:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 LCD_Color2Index_1, _Index2Color_1, _GetIndexMask_1
   \              ............
     68            LCD_Color2Index_1,
     69            _Index2Color_1,
     70            _GetIndexMask_1
     71          };
     72          
     73          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     LCD_Color2Index_1      0
     _GetIndexMask_1        0
     _Index2Color_1         0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     LCD_Color2Index_1     72
     _Index2Color_1        12
     _GetIndexMask_1        8
     LCD_API_ColorConv_1   12

 
 12 bytes in section .rodata
 92 bytes in section .text
 
 92 bytes of CODE  memory
 12 bytes of CONST memory

Errors: none
Warnings: none
