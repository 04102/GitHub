###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:17 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\SCROLLBAR_SkinFlex.c                #
#    Command line =  C:\DUII\TargetHW\GUI\SCROLLBAR_SkinFlex.c -D DEBUG=1 -D  #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\SCROLLBAR_SkinFlex.lst     #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\SCROLLBAR_SkinFlex.o        #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\SCROLLBAR_SkinFlex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : SCROLLBAR_SkinFlex.c
     19          Purpose     : Implementation of framewindow default skin
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "SCROLLBAR_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines (configuration defaults)
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   SCROLLBAR_SKINPROPS_PRESSED

   \                                 In section .data, align 4
     36            static SCROLLBAR_SKINFLEX_PROPS _PropsPressed = {
     37              { 0x00B17F3C, 0x00FFFEFD, 0x00E0E0E0 },
     38              { 0x00FCF4E3, 0x00FBEED6 },
     39              { 0x00F6DBA9, 0x00E3CA9C },
     40              { 0x00E0E0E0, 0x00F0F0F0 },
     41              0x00000000,
     42              0x00A37D37
     43            };
     44            #define SCROLLBAR_SKINPROPS_PRESSED   &_PropsPressed
     45          #endif
     46          
     47          #ifndef   SCROLLBAR_SKINPROPS_UNPRESSED
     48            static SCROLLBAR_SKINFLEX_PROPS _PropsUnpressed = {
   \                     _PropsUnpressed:
   \   00000000   95959500F3F3       DC32 9803157, 15987699, 14737632, 15921906, 15263976, 14211288
   \              F300E0E0E000
   \              F2F2F200E8E8
   \              E800D8D8D800
   \   00000018   BCBCBC00E0E0       DC32 12369084, 14737632, 15790320, 4210752, 4210752
   \              E000F0F0F000
   \              404040004040
   \              4000        
   \                     _PropsPressed:
   \   0000002C   3C7FB100FDFE       DC32 11632444, 16776957, 14737632, 16577763, 16510678, 16178089
   \              FF00E0E0E000
   \              E3F4FC00D6EE
   \              FB00A9DBF600
   \   00000044   9CCAE300E0E0       DC32 14928540, 14737632, 15790320, 0, 10714423
   \              E000F0F0F000
   \              00000000377D
   \              A300        
     49              { 0x00959595, 0x00F3F3F3, 0x00E0E0E0 },
     50              { 0x00F2F2F2, 0x00E8E8E8 },
     51              { 0x00D8D8D8, 0x00BCBCBC },
     52              { 0x00E0E0E0, 0x00F0F0F0 },
     53              0x00404040,
     54              0x00404040,
     55            };
     56            #define SCROLLBAR_SKINPROPS_UNPRESSED &_PropsUnpressed
     57          #endif
     58          
     59          /*********************************************************************
     60          *
     61          *       Static data
     62          *
     63          **********************************************************************
     64          */

   \                                 In section .text, align 4, keep-with-next
     65          static SCROLLBAR_SKINFLEX_PROPS * const _apProps[] = {
   \                     _apProps:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   ............       DC32 _PropsPressed, _PropsUnpressed
   \              ....        
     66            SCROLLBAR_SKINPROPS_PRESSED,
     67            SCROLLBAR_SKINPROPS_UNPRESSED
     68          };
     69          
     70          /*********************************************************************
     71          *
     72          *       Static code
     73          *
     74          **********************************************************************
     75          */
     76          /*********************************************************************
     77          *
     78          *       _DrawFrame
     79          */

   \                                 In section .text, align 4, keep-with-next
     80          static void _DrawFrame(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps) {
   \                     _DrawFrame:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
     81            GUI_SetColor(pProps->aColorFrame[0]);
   \   00000010   000095E5           LDR      R0,[R5, #+0]
   \   00000014   ........           BL       GUI_SetColor
     82            GUI_DrawHLine(pRect->y0, pRect->x0 + 1, pRect->x1 - 1);
   \   00000018   F400D4E1           LDRSH    R0,[R4, #+4]
   \   0000001C   012040E2           SUB      R2,R0,#+1
   \   00000020   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000024   011080E2           ADD      R1,R0,#+1
   \   00000028   F200D4E1           LDRSH    R0,[R4, #+2]
   \   0000002C   ........           BL       GUI_DrawHLine
     83            GUI_DrawHLine(pRect->y1, pRect->x0 + 1, pRect->x1 - 1);
   \   00000030   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000034   012040E2           SUB      R2,R0,#+1
   \   00000038   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000003C   011080E2           ADD      R1,R0,#+1
   \   00000040   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000044   ........           BL       GUI_DrawHLine
     84            GUI_DrawVLine(pRect->x0, pRect->y0 + 1, pRect->y1 - 1);
   \   00000048   F600D4E1           LDRSH    R0,[R4, #+6]
   \   0000004C   012040E2           SUB      R2,R0,#+1
   \   00000050   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000054   011080E2           ADD      R1,R0,#+1
   \   00000058   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000005C   ........           BL       GUI_DrawVLine
     85            GUI_DrawVLine(pRect->x1, pRect->y0 + 1, pRect->y1 - 1);
   \   00000060   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000064   012040E2           SUB      R2,R0,#+1
   \   00000068   F200D4E1           LDRSH    R0,[R4, #+2]
   \   0000006C   011080E2           ADD      R1,R0,#+1
   \   00000070   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000074   ........           BL       GUI_DrawVLine
     86            GUI_SetColor(pProps->aColorFrame[1]);
   \   00000078   040095E5           LDR      R0,[R5, #+4]
   \   0000007C   ........           BL       GUI_SetColor
     87            GUI_DrawHLine(pRect->y0 + 1, pRect->x0 + 1, pRect->x1 - 1);
   \   00000080   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000084   012040E2           SUB      R2,R0,#+1
   \   00000088   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000008C   011080E2           ADD      R1,R0,#+1
   \   00000090   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000094   010080E2           ADD      R0,R0,#+1
   \   00000098   ........           BL       GUI_DrawHLine
     88            GUI_DrawHLine(pRect->y1 - 1, pRect->x0 + 1, pRect->x1 - 1);
   \   0000009C   F400D4E1           LDRSH    R0,[R4, #+4]
   \   000000A0   012040E2           SUB      R2,R0,#+1
   \   000000A4   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000000A8   011080E2           ADD      R1,R0,#+1
   \   000000AC   F600D4E1           LDRSH    R0,[R4, #+6]
   \   000000B0   010040E2           SUB      R0,R0,#+1
   \   000000B4   ........           BL       GUI_DrawHLine
     89            GUI_DrawVLine(pRect->x0 + 1, pRect->y0 + 2, pRect->y1 - 2);
   \   000000B8   F600D4E1           LDRSH    R0,[R4, #+6]
   \   000000BC   022040E2           SUB      R2,R0,#+2
   \   000000C0   F200D4E1           LDRSH    R0,[R4, #+2]
   \   000000C4   021080E2           ADD      R1,R0,#+2
   \   000000C8   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000000CC   010080E2           ADD      R0,R0,#+1
   \   000000D0   ........           BL       GUI_DrawVLine
     90            GUI_DrawVLine(pRect->x1 - 1, pRect->y0 + 2, pRect->y1 - 2);
   \   000000D4   F600D4E1           LDRSH    R0,[R4, #+6]
   \   000000D8   022040E2           SUB      R2,R0,#+2
   \   000000DC   F200D4E1           LDRSH    R0,[R4, #+2]
   \   000000E0   021080E2           ADD      R1,R0,#+2
   \   000000E4   F400D4E1           LDRSH    R0,[R4, #+4]
   \   000000E8   010040E2           SUB      R0,R0,#+1
   \   000000EC   ........           BL       GUI_DrawVLine
     91            GUI_SetColor(pProps->aColorFrame[2]);
   \   000000F0   080095E5           LDR      R0,[R5, #+8]
   \   000000F4   ........           BL       GUI_SetColor
     92            GUI_DrawPixel(pRect->x0, pRect->y0);
   \   000000F8   F210D4E1           LDRSH    R1,[R4, #+2]
   \   000000FC   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000100   ........           BL       GUI_DrawPixel
     93            GUI_DrawPixel(pRect->x0, pRect->y1);
   \   00000104   F610D4E1           LDRSH    R1,[R4, #+6]
   \   00000108   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000010C   ........           BL       GUI_DrawPixel
     94            GUI_DrawPixel(pRect->x1, pRect->y0);
   \   00000110   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000114   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000118   ........           BL       GUI_DrawPixel
     95            GUI_DrawPixel(pRect->x1, pRect->y1);
   \   0000011C   F610D4E1           LDRSH    R1,[R4, #+6]
   \   00000120   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000124   04D08DE2           ADD      SP,SP,#+4
   \   00000128   3040BDE8           POP      {R4,R5,LR}
   \   0000012C   ........           B        GUI_DrawPixel    ;; tailcall
     96          }
     97          
     98          /*********************************************************************
     99          *
    100          *       _DrawBackgroundV
    101          */

   \                                 In section .text, align 4, keep-with-next
    102          static void _DrawBackgroundV(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps) {
   \                     _DrawBackgroundV:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    103            _DrawFrame(pRect, pProps);
   \   00000010   ........           BL       _DrawFrame
    104            GUI_DrawGradientH(pRect->x0 + 2,                      pRect->y0 + 2, ((pRect->x0 + pRect->x1) >> 1), pRect->y1 - 2, pProps->aColorUpper[0], pProps->aColorUpper[1]);
   \   00000014   101095E5           LDR      R1,[R5, #+16]
   \   00000018   F000D4E1           LDRSH    R0,[R4, #+0]
   \   0000001C   04108DE5           STR      R1,[SP, #+4]
   \   00000020   0C1095E5           LDR      R1,[R5, #+12]
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   F610D4E1           LDRSH    R1,[R4, #+6]
   \   0000002C   023041E2           SUB      R3,R1,#+2
   \   00000030   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000034   001081E0           ADD      R1,R1,R0
   \   00000038   C120A0E1           ASR      R2,R1,#+1
   \   0000003C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000040   020080E2           ADD      R0,R0,#+2
   \   00000044   021081E2           ADD      R1,R1,#+2
   \   00000048   ........           BL       GUI_DrawGradientH
   \   0000004C   181095E5           LDR      R1,[R5, #+24]
   \   00000050   F400D4E1           LDRSH    R0,[R4, #+4]
   \   00000054   04108DE5           STR      R1,[SP, #+4]
   \   00000058   141095E5           LDR      R1,[R5, #+20]
   \   0000005C   022040E2           SUB      R2,R0,#+2
   \   00000060   00108DE5           STR      R1,[SP, #+0]
   \   00000064   F610D4E1           LDRSH    R1,[R4, #+6]
   \   00000068   F0C0D4E1           LDRSH    R12,[R4, #+0]
   \   0000006C   023041E2           SUB      R3,R1,#+2
   \   00000070   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000074   0C0080E0           ADD      R0,R0,R12
   \   00000078   01C0A0E3           MOV      R12,#+1
   \   0000007C   021081E2           ADD      R1,R1,#+2
   \   00000080   C0008CE0           ADD      R0,R12,R0, ASR #+1
    105            GUI_DrawGradientH(((pRect->x0 + pRect->x1) >> 1) + 1, pRect->y0 + 2, pRect->x1 - 2,                  pRect->y1 - 2, pProps->aColorLower[0], pProps->aColorLower[1]);
   \   00000084   ........           BL       GUI_DrawGradientH
    106          }
   \   00000088   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000008C   3080BDE8           POP      {R4,R5,PC}       ;; return
    107          
    108          /*********************************************************************
    109          *
    110          *       _DrawBackgroundH
    111          */

   \                                 In section .text, align 4, keep-with-next
    112          static void _DrawBackgroundH(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps) {
   \                     _DrawBackgroundH:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    113            _DrawFrame(pRect, pProps);
   \   00000010   ........           BL       _DrawFrame
   \   00000014   101095E5           LDR      R1,[R5, #+16]
   \   00000018   F200D4E1           LDRSH    R0,[R4, #+2]
   \   0000001C   04108DE5           STR      R1,[SP, #+4]
   \   00000020   0C1095E5           LDR      R1,[R5, #+12]
   \   00000024   00108DE5           STR      R1,[SP, #+0]
   \   00000028   F610D4E1           LDRSH    R1,[R4, #+6]
   \   0000002C   001081E0           ADD      R1,R1,R0
   \   00000030   C130A0E1           ASR      R3,R1,#+1
   \   00000034   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000038   022041E2           SUB      R2,R1,#+2
   \   0000003C   021080E2           ADD      R1,R0,#+2
   \   00000040   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000044   020080E2           ADD      R0,R0,#+2
    114            GUI_DrawGradientV(pRect->x0 + 2, pRect->y0 + 2,                      pRect->x1 - 2, ((pRect->y0 + pRect->y1) >> 1), pProps->aColorUpper[0], pProps->aColorUpper[1]);
   \   00000048   ........           BL       GUI_DrawGradientV
   \   0000004C   181095E5           LDR      R1,[R5, #+24]
   \   00000050   F600D4E1           LDRSH    R0,[R4, #+6]
   \   00000054   04108DE5           STR      R1,[SP, #+4]
   \   00000058   141095E5           LDR      R1,[R5, #+20]
   \   0000005C   023040E2           SUB      R3,R0,#+2
   \   00000060   00108DE5           STR      R1,[SP, #+0]
   \   00000064   F410D4E1           LDRSH    R1,[R4, #+4]
   \   00000068   022041E2           SUB      R2,R1,#+2
   \   0000006C   F210D4E1           LDRSH    R1,[R4, #+2]
   \   00000070   010080E0           ADD      R0,R0,R1
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   C01081E0           ADD      R1,R1,R0, ASR #+1
   \   0000007C   F000D4E1           LDRSH    R0,[R4, #+0]
   \   00000080   020080E2           ADD      R0,R0,#+2
    115            GUI_DrawGradientV(pRect->x0 + 2, ((pRect->y0 + pRect->y1) >> 1) + 1, pRect->x1 - 2, pRect->y1 - 2,                  pProps->aColorLower[0], pProps->aColorLower[1]);
   \   00000084   ........           BL       GUI_DrawGradientV
    116          }
   \   00000088   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000008C   3080BDE8           POP      {R4,R5,PC}       ;; return
    117          
    118          /*********************************************************************
    119          *
    120          *       _GetHeight
    121          */
    122          static int _GetHeight(GUI_RECT * pRect, int IsVertical) {
    123            int r;
    124          
    125            if (IsVertical) {
    126              r = pRect->x1 - pRect->x0 + 1;
    127            } else {
    128              r = pRect->y1 - pRect->y0 + 1;
    129            }
    130            return r;
    131          }
    132          
    133          /*********************************************************************
    134          *
    135          *       _GetLength
    136          */
    137          static int _GetLength(GUI_RECT * pRect, int IsVertical) {
    138            int r;
    139          
    140            if (IsVertical) {
    141              r = pRect->y1 - pRect->y0 + 1;
    142            } else {
    143              r = pRect->x1 - pRect->x0 + 1;
    144            }
    145            return r;
    146          }
    147          
    148          /*********************************************************************
    149          *
    150          *       _GetArrowPara
    151          */
    152          static void _GetArrowPara(GUI_RECT * pRect, int IsVertical, int * pArrowSize, int * pArrowOff) {
    153            int ButtonSize;
    154          
    155            ButtonSize  = _GetHeight(pRect, IsVertical);
    156            *pArrowSize = (ButtonSize - 4) / 3;
    157            *pArrowOff  = ButtonSize - ((ButtonSize - *pArrowSize) >> 1) - 1;
    158          }
    159          
    160          /*********************************************************************
    161          *
    162          *       _DrawGraspH
    163          */

   \                                 In section .text, align 4, keep-with-next
    164          static void _DrawGraspH(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps) {
   \                     _DrawGraspH:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    165            int xm, o, y0, y1;
    166          
    167            xm = (pRect->x1 + pRect->x0) >> 1;
   \   00000004   F420D0E1           LDRSH    R2,[R0, #+4]
   \   00000008   F030D0E1           LDRSH    R3,[R0, #+0]
   \   0000000C   022083E0           ADD      R2,R3,R2
   \   00000010   C240A0E1           ASR      R4,R2,#+1
   \   00000014   F220D0E1           LDRSH    R2,[R0, #+2]
   \   00000018   F600D0E1           LDRSH    R0,[R0, #+6]
   \   0000001C   023040E0           SUB      R3,R0,R2
   \   00000020   033083E2           ADD      R3,R3,#+3
    168            o = ((pRect->y1 - pRect->y0) + 3) >> 2;
    169            y0 = pRect->y0 + o;
    170            y1 = pRect->y1 - o;
   \   00000024   436140E0           SUB      R6,R0,R3, ASR #+2
   \   00000028   435182E0           ADD      R5,R2,R3, ASR #+2
    171            GUI_SetColor(pProps->ColorGrasp);
   \   0000002C   280091E5           LDR      R0,[R1, #+40]
   \   00000030   ........           BL       GUI_SetColor
    172            GUI_DrawVLine(xm + 0, y0, y1);
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       GUI_DrawVLine
    173            GUI_DrawVLine(xm + 2, y0, y1);
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   020084E2           ADD      R0,R4,#+2
   \   00000050   ........           BL       GUI_DrawVLine
    174            GUI_DrawVLine(xm + 4, y0, y1);
   \   00000054   0620A0E1           MOV      R2,R6
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   040084E2           ADD      R0,R4,#+4
   \   00000060   ........           BL       GUI_DrawVLine
    175            GUI_DrawVLine(xm - 2, y0, y1);
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   020044E2           SUB      R0,R4,#+2
   \   00000070   ........           BL       GUI_DrawVLine
    176            GUI_DrawVLine(xm - 4, y0, y1);
   \   00000074   0620A0E1           MOV      R2,R6
   \   00000078   0510A0E1           MOV      R1,R5
   \   0000007C   040044E2           SUB      R0,R4,#+4
   \   00000080   7040BDE8           POP      {R4-R6,LR}
   \   00000084   ........           B        GUI_DrawVLine    ;; tailcall
    177          }
    178          
    179          /*********************************************************************
    180          *
    181          *       _DrawGraspV
    182          */

   \                                 In section .text, align 4, keep-with-next
    183          static void _DrawGraspV(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps) {
   \                     _DrawGraspV:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    184            int ym, o, x0, x1;
    185          
    186            ym = (pRect->y1 + pRect->y0) >> 1;
   \   00000004   F620D0E1           LDRSH    R2,[R0, #+6]
   \   00000008   F230D0E1           LDRSH    R3,[R0, #+2]
   \   0000000C   022083E0           ADD      R2,R3,R2
   \   00000010   C240A0E1           ASR      R4,R2,#+1
   \   00000014   F420D0E1           LDRSH    R2,[R0, #+4]
   \   00000018   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000001C   003042E0           SUB      R3,R2,R0
   \   00000020   033083E2           ADD      R3,R3,#+3
    187            o = ((pRect->x1 - pRect->x0) + 3) >> 2;
    188            x0 = pRect->x0 + o;
   \   00000024   435180E0           ADD      R5,R0,R3, ASR #+2
    189            x1 = pRect->x1 - o;
   \   00000028   436142E0           SUB      R6,R2,R3, ASR #+2
    190            GUI_SetColor(pProps->ColorGrasp);
   \   0000002C   280091E5           LDR      R0,[R1, #+40]
   \   00000030   ........           BL       GUI_SetColor
    191            GUI_DrawHLine(ym + 0, x0, x1);
   \   00000034   0620A0E1           MOV      R2,R6
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       GUI_DrawHLine
    192            GUI_DrawHLine(ym + 2, x0, x1);
   \   00000044   0620A0E1           MOV      R2,R6
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   020084E2           ADD      R0,R4,#+2
   \   00000050   ........           BL       GUI_DrawHLine
    193            GUI_DrawHLine(ym + 4, x0, x1);
   \   00000054   0620A0E1           MOV      R2,R6
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   040084E2           ADD      R0,R4,#+4
   \   00000060   ........           BL       GUI_DrawHLine
    194            GUI_DrawHLine(ym - 2, x0, x1);
   \   00000064   0620A0E1           MOV      R2,R6
   \   00000068   0510A0E1           MOV      R1,R5
   \   0000006C   020044E2           SUB      R0,R4,#+2
   \   00000070   ........           BL       GUI_DrawHLine
    195            GUI_DrawHLine(ym - 4, x0, x1);
   \   00000074   0620A0E1           MOV      R2,R6
   \   00000078   0510A0E1           MOV      R1,R5
   \   0000007C   040044E2           SUB      R0,R4,#+4
   \   00000080   7040BDE8           POP      {R4-R6,LR}
   \   00000084   ........           B        GUI_DrawHLine    ;; tailcall
    196          }
    197          
    198          /*********************************************************************
    199          *
    200          *       Public code
    201          *
    202          **********************************************************************
    203          */
    204          /*********************************************************************
    205          *
    206          *       SCROLLBAR_DrawSkinFlex
    207          */

   \                                 In section .text, align 4, keep-with-next
    208          int SCROLLBAR_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     SCROLLBAR_DrawSkinFlex:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   00B0A0E1           MOV      R11,R0
   \   00000008   14D04DE2           SUB      SP,SP,#+20
    209            SCROLLBAR_OBJ * pObj;
    210            int ArrowSize, ArrowOff;
    211            const SCROLLBAR_SKINFLEX_PROPS * pProps;
    212            GUI_RECT Rect, RectOrg;
    213            void (* pfDrawBackground)(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps);
    214            void (* pfDrawGradient)(int x0, int y0, int x1, int y1, GUI_COLOR Color0, GUI_COLOR Color1);
    215            void (* pfDrawGrasp)(GUI_RECT * pRect, const SCROLLBAR_SKINFLEX_PROPS * pProps);
    216            WIDGET * pWidget;
    217            SCROLLBAR_SKINFLEX_INFO * pSkinInfo;
    218          
    219            //
    220            // Get object properties
    221            //
    222            pObj = SCROLLBAR_LOCK_H(pDrawItemInfo->hWin);
    223            pWidget = &pObj->Widget;
   \   0000000C   00009BE5           LDR      R0,[R11, #+0]
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0040A0E1           MOV      R4,R0
    224            GUI_UNLOCK_H(pObj);
   \   00000018   ........           BL       GUI_ALLOC_UnlockH
    225            pSkinInfo = (SCROLLBAR_SKINFLEX_INFO *)pDrawItemInfo->p;
    226            //
    227            // Get rectangle to be filled
    228            //
    229            Rect.x0 = pDrawItemInfo->x0;
   \   0000001C   0C009BE5           LDR      R0,[R11, #+12]
   \   00000020   1C509BE5           LDR      R5,[R11, #+28]
   \   00000024   B800CDE1           STRH     R0,[SP, #+8]
    230            Rect.y0 = pDrawItemInfo->y0;
   \   00000028   10009BE5           LDR      R0,[R11, #+16]
    231            Rect.x1 = pDrawItemInfo->x1;
    232            Rect.y1 = pDrawItemInfo->y1;
    233            RectOrg = Rect;
   \   0000002C   F860DDE1           LDRSH    R6,[SP, #+8]
   \   00000030   BA00CDE1           STRH     R0,[SP, #+10]
   \   00000034   14009BE5           LDR      R0,[R11, #+20]
   \   00000038   FA70DDE1           LDRSH    R7,[SP, #+10]
   \   0000003C   BC00CDE1           STRH     R0,[SP, #+12]
   \   00000040   18009BE5           LDR      R0,[R11, #+24]
   \   00000044   FC80DDE1           LDRSH    R8,[SP, #+12]
   \   00000048   BE00CDE1           STRH     R0,[SP, #+14]
    234            //
    235            // Get function pointers
    236            //
    237            if (pSkinInfo->IsVertical) {
   \   0000004C   000095E5           LDR      R0,[R5, #+0]
   \   00000050   FE90DDE1           LDRSH    R9,[SP, #+14]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0700000A           BEQ      ??SCROLLBAR_DrawSkinFlex_1
    238              WIDGET__RotateRect90(pWidget, &Rect, &Rect);
   \   0000005C   08208DE2           ADD      R2,SP,#+8
   \   00000060   08108DE2           ADD      R1,SP,#+8
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       WIDGET__RotateRect90
    239              pfDrawBackground = _DrawBackgroundV;
   \   0000006C   ........           LDR      R2,??DataTable1
    240              pfDrawGradient   = GUI_DrawGradientH;
   \   00000070   ........           LDR      R12,??DataTable1_1
    241              pfDrawGrasp      = _DrawGraspV;
   \   00000074   ........           LDR      R10,??DataTable1_2
   \   00000078   020000EA           B        ??SCROLLBAR_DrawSkinFlex_2
    242            } else {
    243              pfDrawBackground = _DrawBackgroundH;
   \                     ??SCROLLBAR_DrawSkinFlex_1:
   \   0000007C   ........           LDR      R2,??DataTable1_3
    244              pfDrawGradient   = GUI_DrawGradientV;
   \   00000080   ........           LDR      R12,??DataTable1_4
    245              pfDrawGrasp      = _DrawGraspH;
   \   00000084   ........           LDR      R10,??DataTable1_5
    246            }
    247            //
    248            // Draw
    249            //
    250            switch (pDrawItemInfo->Cmd) {
   \                     ??SCROLLBAR_DrawSkinFlex_2:
   \   00000088   04009BE5           LDR      R0,[R11, #+4]
   \   0000008C   060040E2           SUB      R0,R0,#+6
   \   00000090   110050E3           CMP      R0,#+17
   \   00000094   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SCROLLBAR_DrawSkinFlex_0:
   \   00000098   7600008A           BHI      ??SCROLLBAR_DrawSkinFlex_3
   \   0000009C   190000EA           B        ??SCROLLBAR_DrawSkinFlex_4
   \   000000A0   560000EA           B        ??SCROLLBAR_DrawSkinFlex_5
   \   000000A4   730000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000A8   720000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000AC   330000EA           B        ??SCROLLBAR_DrawSkinFlex_6
   \   000000B0   700000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000B4   6F0000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000B8   6E0000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000BC   2F0000EA           B        ??SCROLLBAR_DrawSkinFlex_6
   \   000000C0   2E0000EA           B        ??SCROLLBAR_DrawSkinFlex_6
   \   000000C4   6B0000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000C8   370000EA           B        ??SCROLLBAR_DrawSkinFlex_7
   \   000000CC   690000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000D0   680000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000D4   670000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000D8   660000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000DC   650000EA           B        ??SCROLLBAR_DrawSkinFlex_3
   \   000000E0   FFFFFFEA           B        ??SCROLLBAR_DrawSkinFlex_8
    251            case WIDGET_ITEM_GET_BUTTONSIZE:
    252              if (pSkinInfo->IsVertical) {
   \                     ??SCROLLBAR_DrawSkinFlex_8:
   \   000000E4   000095E5           LDR      R0,[R5, #+0]
   \   000000E8   000050E3           CMP      R0,#+0
    253                return pDrawItemInfo->x1 - pDrawItemInfo->x0 + 1;
   \   000000EC   14009B15           LDRNE    R0,[R11, #+20]
   \   000000F0   0C109B15           LDRNE    R1,[R11, #+12]
   \   000000F4   18009B05           LDREQ    R0,[R11, #+24]
   \   000000F8   10109B05           LDREQ    R1,[R11, #+16]
   \   000000FC   010040E0           SUB      R0,R0,R1
   \   00000100   010080E2           ADD      R0,R0,#+1
   \   00000104   5C0000EA           B        ??SCROLLBAR_DrawSkinFlex_9
    254              } else {
    255                return pDrawItemInfo->y1 - pDrawItemInfo->y0 + 1;
    256              }
    257            case WIDGET_ITEM_DRAW_BUTTON_L:
    258              //
    259              // Get right parameter pointer
    260              //
    261              pProps = (pSkinInfo->State == PRESSED_STATE_LEFT) ? _apProps[SCROLLBAR_SKINFLEX_PI_PRESSED] : _apProps[SCROLLBAR_SKINFLEX_PI_UNPRESSED];
   \                     ??SCROLLBAR_DrawSkinFlex_4:
   \   00000108   040095E5           LDR      R0,[R5, #+4]
   \   0000010C   ........           LDR      R11,??DataTable1_6
   \   00000110   020050E3           CMP      R0,#+2
   \   00000114   2CB08B02           ADDEQ    R11,R11,#+44
    262              //
    263              // Draw background
    264              //
    265              pfDrawBackground(&Rect, pProps);
   \   00000118   0B10A0E1           MOV      R1,R11
   \   0000011C   08008DE2           ADD      R0,SP,#+8
   \   00000120   32FF2FE1           BLX      R2
    266              //
    267              // Draw arrow
    268              //
    269              _GetArrowPara(&RectOrg, pSkinInfo->IsVertical, &ArrowSize, &ArrowOff);
   \   00000124   000095E5           LDR      R0,[R5, #+0]
   \   00000128   077049E0           SUB      R7,R9,R7
   \   0000012C   000050E3           CMP      R0,#+0
   \   00000130   017087E2           ADD      R7,R7,#+1
   \   00000134   06004810           SUBNE    R0,R8,R6
   \   00000138   01808012           ADDNE    R8,R0,#+1
   \   0000013C   0780A001           MOVEQ    R8,R7
   \   00000140   ........           LDR      R1,??DataTable1_7  ;; 0x55555556
   \   00000144   040048E2           SUB      R0,R8,#+4
   \   00000148   9021C1E0           SMULL    R2,R1,R0,R1
    270              GUI_SetColor(pProps->ColorArrow);
   \   0000014C   24009BE5           LDR      R0,[R11, #+36]
   \   00000150   0150B0E1           MOVS     R5,R1
   \   00000154   01508142           ADDMI    R5,R1,#+1
   \   00000158   ........           BL       GUI_SetColor
    271              WIDGET__DrawTriangle(pWidget, RectOrg.x0 + ArrowOff, (RectOrg.y1 - RectOrg.y0 + 1) >> 1, ArrowSize, -1);
   \   0000015C   0000E0E3           MVN      R0,#+0
   \   00000160   00008DE5           STR      R0,[SP, #+0]
   \   00000164   060088E0           ADD      R0,R8,R6
   \   00000168   051048E0           SUB      R1,R8,R5
   \   0000016C   C10040E0           SUB      R0,R0,R1, ASR #+1
   \   00000170   0530A0E1           MOV      R3,R5
   \   00000174   C720A0E1           ASR      R2,R7,#+1
   \   00000178   011040E2           SUB      R1,R0,#+1
   \   0000017C   3B0000EA           B        ??SCROLLBAR_DrawSkinFlex_10
    272              break;
    273            case WIDGET_ITEM_DRAW_OVERLAP:
    274            case WIDGET_ITEM_DRAW_SHAFT_L:
    275            case WIDGET_ITEM_DRAW_SHAFT_R:
    276              //
    277              // Get right parameter pointer
    278              //
    279              pProps = _apProps[SCROLLBAR_SKINFLEX_PI_UNPRESSED];
    280              //
    281              // Draw background
    282              //
    283              pfDrawGradient(Rect.x0, Rect.y0, Rect.x1, Rect.y1, pProps->aColorShaft[0], pProps->aColorShaft[1]);
   \                     ??SCROLLBAR_DrawSkinFlex_6:
   \   00000180   ........           LDR      R11,??DataTable1_6
   \   00000184   FE30DDE1           LDRSH    R3,[SP, #+14]
   \   00000188   20009BE5           LDR      R0,[R11, #+32]
   \   0000018C   FC20DDE1           LDRSH    R2,[SP, #+12]
   \   00000190   04008DE5           STR      R0,[SP, #+4]
   \   00000194   1C009BE5           LDR      R0,[R11, #+28]
   \   00000198   FA10DDE1           LDRSH    R1,[SP, #+10]
   \   0000019C   00008DE5           STR      R0,[SP, #+0]
   \   000001A0   F800DDE1           LDRSH    R0,[SP, #+8]
   \   000001A4   3CFF2FE1           BLX      R12
    284              break;
   \   000001A8   320000EA           B        ??SCROLLBAR_DrawSkinFlex_3
    285            case WIDGET_ITEM_DRAW_THUMB:
    286              //
    287              // Get right parameter pointer
    288              //
    289              pProps = (pSkinInfo->State == PRESSED_STATE_THUMB) ? _apProps[SCROLLBAR_SKINFLEX_PI_PRESSED] : _apProps[SCROLLBAR_SKINFLEX_PI_UNPRESSED];
   \                     ??SCROLLBAR_DrawSkinFlex_7:
   \   000001AC   040095E5           LDR      R0,[R5, #+4]
   \   000001B0   ........           LDR      R11,??DataTable1_6
   \   000001B4   030050E3           CMP      R0,#+3
   \   000001B8   2CB08B02           ADDEQ    R11,R11,#+44
    290              //
    291              // Draw background
    292              //
    293              pfDrawBackground(&Rect, pProps);
   \   000001BC   0B10A0E1           MOV      R1,R11
   \   000001C0   08008DE2           ADD      R0,SP,#+8
   \   000001C4   32FF2FE1           BLX      R2
    294              //
    295              // Draw grasp
    296              //
    297              if (_GetLength(&Rect, pSkinInfo->IsVertical) >= 15) {
   \   000001C8   000095E5           LDR      R0,[R5, #+0]
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   FE00DD11           LDRSHNE  R0,[SP, #+14]
   \   000001D4   FA10DD11           LDRSHNE  R1,[SP, #+10]
   \   000001D8   FC00DD01           LDRSHEQ  R0,[SP, #+12]
   \   000001DC   F810DD01           LDRSHEQ  R1,[SP, #+8]
   \   000001E0   010040E0           SUB      R0,R0,R1
   \   000001E4   010080E2           ADD      R0,R0,#+1
   \   000001E8   0F0050E3           CMP      R0,#+15
   \   000001EC   210000BA           BLT      ??SCROLLBAR_DrawSkinFlex_3
    298                pfDrawGrasp(&Rect, pProps);
   \   000001F0   0B10A0E1           MOV      R1,R11
   \   000001F4   08008DE2           ADD      R0,SP,#+8
   \   000001F8   3AFF2FE1           BLX      R10
   \   000001FC   1D0000EA           B        ??SCROLLBAR_DrawSkinFlex_3
    299              }
    300              break;
    301            case WIDGET_ITEM_DRAW_BUTTON_R:
    302              //
    303              // Get right parameter pointer
    304              //
    305              pProps = (pSkinInfo->State == PRESSED_STATE_RIGHT) ? _apProps[SCROLLBAR_SKINFLEX_PI_PRESSED] : _apProps[SCROLLBAR_SKINFLEX_PI_UNPRESSED];
   \                     ??SCROLLBAR_DrawSkinFlex_5:
   \   00000200   040095E5           LDR      R0,[R5, #+4]
   \   00000204   ........           LDR      R11,??DataTable1_6
   \   00000208   010050E3           CMP      R0,#+1
   \   0000020C   2CB08B02           ADDEQ    R11,R11,#+44
    306              //
    307              // Draw background
    308              //
    309              pfDrawBackground(&Rect, pProps);
   \   00000210   0B10A0E1           MOV      R1,R11
   \   00000214   08008DE2           ADD      R0,SP,#+8
   \   00000218   32FF2FE1           BLX      R2
    310              //
    311              // Draw arrow
    312              //
    313              _GetArrowPara(&RectOrg, pSkinInfo->IsVertical, &ArrowSize, &ArrowOff);
   \   0000021C   000095E5           LDR      R0,[R5, #+0]
   \   00000220   077049E0           SUB      R7,R9,R7
   \   00000224   000050E3           CMP      R0,#+0
   \   00000228   06004810           SUBNE    R0,R8,R6
   \   0000022C   01608012           ADDNE    R6,R0,#+1
   \   00000230   01608702           ADDEQ    R6,R7,#+1
   \   00000234   ........           LDR      R1,??DataTable1_7  ;; 0x55555556
   \   00000238   040046E2           SUB      R0,R6,#+4
   \   0000023C   9021C1E0           SMULL    R2,R1,R0,R1
    314              GUI_SetColor(pProps->ColorArrow);
   \   00000240   24009BE5           LDR      R0,[R11, #+36]
   \   00000244   0150B0E1           MOVS     R5,R1
   \   00000248   01508142           ADDMI    R5,R1,#+1
   \   0000024C   ........           BL       GUI_SetColor
    315              WIDGET__DrawTriangle(pWidget, RectOrg.x1 - ArrowOff, (RectOrg.y1 - RectOrg.y0) >> 1, ArrowSize, 1);
   \   00000250   0100A0E3           MOV      R0,#+1
   \   00000254   00008DE5           STR      R0,[SP, #+0]
   \   00000258   060048E0           SUB      R0,R8,R6
   \   0000025C   051046E0           SUB      R1,R6,R5
   \   00000260   C10080E0           ADD      R0,R0,R1, ASR #+1
   \   00000264   0530A0E1           MOV      R3,R5
   \   00000268   C720A0E1           ASR      R2,R7,#+1
   \   0000026C   011080E2           ADD      R1,R0,#+1
   \                     ??SCROLLBAR_DrawSkinFlex_10:
   \   00000270   0400A0E1           MOV      R0,R4
   \   00000274   ........           BL       WIDGET__DrawTriangle
    316              break;
    317            }
    318          
    319            return 0;
   \                     ??SCROLLBAR_DrawSkinFlex_3:
   \   00000278   0000A0E3           MOV      R0,#+0
   \                     ??SCROLLBAR_DrawSkinFlex_9:
   \   0000027C   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000280   F08FBDE8           POP      {R4-R11,PC}      ;; return
    320          }
    321          
    322          /*********************************************************************
    323          *
    324          *       SCROLLBAR_SetSkinFlexProps
    325          */

   \                                 In section .text, align 4, keep-with-next
    326          void SCROLLBAR_SetSkinFlexProps(const SCROLLBAR_SKINFLEX_PROPS * pProps, int Index) {
    327            if (Index < GUI_COUNTOF(_apProps)) {
   \                     SCROLLBAR_SetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??SCROLLBAR_SetSkinFlexProps_0
    328              *_apProps[Index] = *pProps;
   \   00000008   1EFF2FE1           BX       LR
    329            }
   \                     ??SCROLLBAR_SetSkinFlexProps_0:
   \   0000000C   30402DE9           PUSH     {R4,R5,LR}
   \   00000010   ........           ADR      R2,_apProps
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   3C50B0E8           LDM      R0!,{R2-R5,R12,LR}
   \   0000001C   3C50A1E8           STM      R1!,{R2-R5,R12,LR}
   \   00000020   1C50B0E8           LDM      R0!,{R2-R4,R12,LR}
   \   00000024   1C50A1E8           STM      R1!,{R2-R4,R12,LR}
    330          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
    331          
    332          /*********************************************************************
    333          *
    334          *       SCROLLBAR_GetSkinFlexProps
    335          */

   \                                 In section .text, align 4, keep-with-next
    336          void SCROLLBAR_GetSkinFlexProps(SCROLLBAR_SKINFLEX_PROPS * pProps, int Index) {
    337            if (Index < GUI_COUNTOF(_apProps)) {
   \                     SCROLLBAR_GetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??SCROLLBAR_GetSkinFlexProps_0
    338              *pProps = *_apProps[Index];
   \   00000008   1EFF2FE1           BX       LR
    339            }
   \                     ??SCROLLBAR_GetSkinFlexProps_0:
   \   0000000C   30402DE9           PUSH     {R4,R5,LR}
   \   00000010   ........           ADR      R2,_apProps
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   3C50B1E8           LDM      R1!,{R2-R5,R12,LR}
   \   0000001C   3C50A0E8           STM      R0!,{R2-R5,R12,LR}
   \   00000020   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   00000024   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
    340          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _DrawBackgroundV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     GUI_DrawGradientH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     _DrawGraspV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   ........           DC32     _DrawBackgroundH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   ........           DC32     GUI_DrawGradientV

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   ........           DC32     _DrawGraspH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   ........           DC32     _PropsUnpressed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   56555555           DC32     0x55555556
    341          
    342          #else
    343            void SCROLLBAR_SkinFlex_C(void);
    344            void SCROLLBAR_SkinFlex_C(void) {} /* avoid empty object files */
    345          #endif /* GUI_WINSUPPORT */
    346          
    347          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     SCROLLBAR_DrawSkinFlex         56
     SCROLLBAR_GetSkinFlexProps     12
     SCROLLBAR_SetSkinFlexProps     12
     _DrawBackgroundH               24
     _DrawBackgroundV               24
     _DrawFrame                     16
     _DrawGraspH                    16
     _DrawGraspV                    16


   Section sizes:

     Function/Label             Bytes
     --------------             -----
     _PropsUnpressed              88
     _PropsPressed
     _apProps                      8
     _DrawFrame                  304
     _DrawBackgroundV            144
     _DrawBackgroundH            144
     _DrawGraspH                 136
     _DrawGraspV                 136
     SCROLLBAR_DrawSkinFlex      644
     SCROLLBAR_SetSkinFlexProps   44
     SCROLLBAR_GetSkinFlexProps   44
     ??DataTable1                  4
     ??DataTable1_1                4
     ??DataTable1_2                4
     ??DataTable1_3                4
     ??DataTable1_4                4
     ??DataTable1_5                4
     ??DataTable1_6                4
     ??DataTable1_7                4

 
    88 bytes in section .data
 1 636 bytes in section .text
 
 1 636 bytes of CODE memory
    88 bytes of DATA memory

Errors: none
Warnings: none
