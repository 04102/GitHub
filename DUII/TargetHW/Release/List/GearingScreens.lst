###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:30 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\GearingScreens.c                            #
#    Command line =  C:\DUII\DUII\GearingScreens.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GearingScreens.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GearingScreens.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\GearingScreens.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          #include <stdio.h>
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include "DUII.h"
     26          #include "GUI.h"
     27          #include "commondefs.h"
     28          #include "DIALOG.h"
     29          #include "ConfigScreens.h"
     30          #include "GeneralConfig.h"
     31          #include "FlashReadWrite.h"
     32          #include "DataHandler.h"
     33          #include "StandardList.h"
     34          #include "GearingScreens.h"
     35          #include "GearRatios.h"
     36          #include "Utilities.h"
     37          #include "KeyboardAccess.h"
     38          
     39          
     40          /*********************************************************************
     41          *
     42          *       Public Variables
     43          *
     44          **********************************************************************
     45          */
     46          
     47          /*********************************************************************
     48          *
     49          *       External data and code
     50          *
     51          **********************************************************************
     52          */
     53          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
     54          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
     55          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenButton;
     56          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
     57          extern GUI_CONST_STORAGE GUI_BITMAP bmNarrowSpinner;
     58          extern GUI_CONST_STORAGE GUI_BITMAP bmBackgroundWithPanel;
     59          extern GUI_CONST_STORAGE GUI_BITMAP bmTireSize;
     60          extern GUI_CONST_STORAGE GUI_BITMAP bmDiffRatio;
     61          extern GUI_CONST_STORAGE GUI_BITMAP bmTransRatio;
     62          extern GUI_CONST_STORAGE GUI_BITMAP bmHelp;
     63          extern GUI_CONST_STORAGE GUI_BITMAP bmGearRatioButton;
     64          
     65          /*********************************************************************
     66          *
     67          *       Local Prototypes
     68          *
     69          **********************************************************************
     70          */
     71          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen);
     72          void DisplayTireSize(void);
     73          void DisplayTireCircumference(void);
     74          void DisplayDiffRatio(WM_HWIN);
     75          void DisplayTransRatio(WM_HWIN);
     76          void DisplayHelp(WM_HWIN);
     77          
     78          void TireSizePaint(WM_HWIN);
     79          void DiffRatioPaint(WM_HWIN);
     80          void TransRatioPaint(WM_HWIN);
     81          void HelpPaint(WM_HWIN);
     82          void SetGearButtonText(int button);
     83          int ButtonToScreenID(int Id);
     84          void DisplayTireSizeSelection(WM_HWIN hParent);
     85          void TireSizeSelectionPaint(WM_HWIN hParent);
     86          static void TireSizeScreenCallback(WM_MESSAGE * pMsg);
     87          void TCKeyboardSaveButton(void);
     88          void TCKillKeyboard(void);
     89          void UpdateTireCircumference(void);
     90          
     91          
     92          /*********************************************************************
     93          *
     94          *       Tables and Constants
     95          *
     96          **********************************************************************
     97          */
     98          struct SCREEN_LIST GearingScreenList[NUM_GEARING_SCREENS+1] = {
     99          	{ TIRESIZE_SELECTION_SCREEN, DisplayTireSizeSelection, TireSizeSelectionPaint },
    100          	{ DIFFRATIO_SCREEN, DisplayDiffRatio, DiffRatioPaint },
    101          	{ TRANSRATIO_SCREEN, DisplayTransRatio, TransRatioPaint },
    102          	{ HELP_SCREEN, DisplayHelp, HelpPaint },
    103          	{ -1, NULL, NULL }
    104          };
    105          
    106          #define	TREAD_WIDTH_WHEEL		GUI_ID_LISTWHEEL1
    107          #define	ASPECT_RATIO_WHEEL		GUI_ID_LISTWHEEL2
    108          #define	WHEEL_DIAMETER_WHEEL	GUI_ID_LISTWHEEL3
    109          #define	DIFF_WHEEL_1			GUI_ID_LISTWHEEL4
    110          #define	DIFF_WHEEL_2			GUI_ID_LISTWHEEL5
    111          #define	DIFF_WHEEL_3			GUI_ID_LISTWHEEL6
    112          
    113          #define	TIRE_CIRCUMFERENCE_BUTTON		GUI_ID_USER + 1
    114          // Note: the gear 8 buttons definitions MUST BE SEQUENTIAL
    115          #define	FIRST_BUTTON					(GUI_ID_USER + 2)
    116          #define	SECOND_BUTTON					GUI_ID_USER + 3 
    117          #define	THIRD_BUTTON					GUI_ID_USER + 4
    118          #define	FORTH_BUTTON					GUI_ID_USER + 5
    119          #define	FIFTH_BUTTON					GUI_ID_USER + 6
    120          #define	SIXTH_BUTTON					GUI_ID_USER + 7
    121          #define	SEVENTH_BUTTON					GUI_ID_USER + 8
    122          #define	EIGHTH_BUTTON					GUI_ID_USER + 9
    123          #define	TIRE_DIMENSIONS_BUTTON			GUI_ID_USER + 10
    124          
    125          char *ZeroThroughNine[] = {
    126          	"0",
    127          	"1",
    128          	"2",
    129          	"3",
    130          	"4",
    131          	"5",
    132          	"6",
    133          	"7",
    134          	"8",
    135          	"9",
    136          	NULL
    137          };
    138          
    139          char *ZeroThroughNinty[] = {
    140          	"00",
    141          	"10",
    142          	"20",
    143          	"30",
    144          	"40",
    145          	"50",
    146          	"60",
    147          	"70",
    148          	"80",
    149          	"90",
    150          	NULL
    151          };
    152          
    153          #define	TREAD_WIDTH_START	355
    154          char *TreadWidth[] = {
    155          	"355",
    156          	"345",
    157          	"335",
    158          	"325",
    159          	"315",
    160          	"305",
    161          	"295",
    162          	"285",
    163          	"275",
    164          	"265",
    165          	"255",
    166          	"245",
    167          	"235",
    168          	"225",
    169          	"215",
    170          	"205",
    171          	"195",
    172          	"185",
    173          	"175",
    174          	"165",
    175          	"155",
    176          	"145",
    177          	"135",
    178          	NULL
    179          };
    180          
    181          #define	ASPECT_RATIO_START	80
    182          char *AspectRatio[] = {
    183          	"80",
    184          	"75",
    185          	"70",
    186          	"65",
    187          	"60",
    188          	"55",
    189          	"50",
    190          	"45",
    191          	"40",
    192          	"35",
    193          	"30",
    194          	"25",
    195          	"20",
    196          	NULL
    197          };
    198          
    199          #define	WHEEL_DIAMETER_START	20
    200          char *WheelDiameter[] = {
    201          	"20",
    202          	"19",
    203          	"18",
    204          	"17",
    205          	"16",
    206          	"15",
    207          	"14",
    208          	"13",
    209          	"12",
    210          	"11",
    211          	"10",
    212          	NULL
    213          };
    214          
    215          #define	NUMLEN				10
    216          #define	ZERO_DIFF_RATIO		(0.0001F)
    217          
    218          
    219          /*********************************************************************
    220          *
    221          *       Local Variables
    222          *
    223          **********************************************************************
    224          */
    225          static WM_HWIN hGearingScreens, hTireSizeScreen;
    226          //static int KMCDialogSemaphone = 0;
    227          //static int clickedOnThisScreen;
    228          
    229          static LISTWHEEL_Handle hTreadWidthListWheel, hAspectRatioWheel, hWheelDiameterWheel;
    230          static LISTWHEEL_Handle hDiffWheel1, hDiffWheel2, hDiffWheel3;

   \                                 In section .bss, align 4
    231          BUTTON_Handle hGearButton[8], hTireDimensionButton, hTireCircumferenceButton;
   \                     hTireDimensionButton:
   \   00000000                      DS8 4
   \                     hTireCircumferenceButton:
   \   00000004                      DS8 4

   \                                 In section .data, align 4
   \                     hGearButton:
   \   00000000   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \                     GearingScreenList:
   \   00000020   00000000....       DC32 0, DisplayTireSizeSelection, TireSizeSelectionPaint, 1
   \              ............
   \              01000000    
   \   00000030   ............       DC32 DisplayDiffRatio, DiffRatioPaint, 2, DisplayTransRatio
   \              ....02000000
   \              ........    
   \   00000040   ........0300       DC32 TransRatioPaint, 3, DisplayHelp, HelpPaint, -1, 0H, 0H
   \              0000........
   \              ........FFFF
   \              FFFF00000000
   \              00000000    
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   00000000           DC8 0, 0, 0, 0
   \   00000064   00000000           DC8 0, 0, 0, 0
   \   00000068   00000000           DC8 0, 0, 0, 0
   \   0000006C   00000000           DC8 0, 0, 0, 0
   \   00000070   00000000           DC32 0H
   \   00000074   00000000           DC32 0
   \   00000078   00                 DC8 0
   \   00000079   000000             DC8 0, 0, 0
   \                     ZeroThroughNine:
   \   0000007C   ............       DC32 `?<Constant "0">`, `?<Constant "1">`, `?<Constant "2">`
   \              ............
   \   00000088   ............       DC32 `?<Constant "3">`, `?<Constant "4">`, `?<Constant "5">`
   \              ............
   \   00000094   ............       DC32 `?<Constant "6">`, `?<Constant "7">`, `?<Constant "8">`
   \              ............
   \   000000A0   ........0000       DC32 `?<Constant "9">`, 0H
   \              0000        
   \                     TreadWidth:
   \   000000A8   ............       DC32 `?<Constant "355">`, `?<Constant "345">`, `?<Constant "335">`
   \              ............
   \   000000B4   ............       DC32 `?<Constant "325">`, `?<Constant "315">`, `?<Constant "305">`
   \              ............
   \   000000C0   ............       DC32 `?<Constant "295">`, `?<Constant "285">`, `?<Constant "275">`
   \              ............
   \   000000CC   ............       DC32 `?<Constant "265">`, `?<Constant "255">`, `?<Constant "245">`
   \              ............
   \   000000D8   ............       DC32 `?<Constant "235">`, `?<Constant "225">`, `?<Constant "215">`
   \              ............
   \   000000E4   ............       DC32 `?<Constant "205">`, `?<Constant "195">`, `?<Constant "185">`
   \              ............
   \   000000F0   ............       DC32 `?<Constant "175">`, `?<Constant "165">`, `?<Constant "155">`
   \              ............
   \   000000FC   ............       DC32 `?<Constant "145">`, `?<Constant "135">`, 0H
   \              ....00000000
   \                     AspectRatio:
   \   00000108   ............       DC32 `?<Constant "80">`, `?<Constant "75">`, `?<Constant "70">`
   \              ............
   \   00000114   ............       DC32 `?<Constant "65">`, `?<Constant "60">`, `?<Constant "55">`
   \              ............
   \   00000120   ............       DC32 `?<Constant "50">`, `?<Constant "45">`, `?<Constant "40">`
   \              ............
   \   0000012C   ............       DC32 `?<Constant "35">`, `?<Constant "30">`, `?<Constant "25">`
   \              ............
   \   00000138   ........0000       DC32 `?<Constant "20">`, 0H
   \              0000        
   \                     WheelDiameter:
   \   00000140   ............       DC32 `?<Constant "20">`, `?<Constant "19">`, `?<Constant "18">`
   \              ............
   \   0000014C   ............       DC32 `?<Constant "17">`, `?<Constant "16">`, `?<Constant "15">`
   \              ............
   \   00000158   ............       DC32 `?<Constant "14">`, `?<Constant "13">`, `?<Constant "12">`
   \              ............
   \   00000164   ............       DC32 `?<Constant "11">`, `?<Constant "10">`, 0H
   \              ....00000000
   \   00000170   00000000           DC8 0, 0, 0, 0
   \   00000174   00000000           DC8 0, 0, 0, 0
   \   00000178   00000000           DC8 0, 0, 0, 0
    232          static char buttonsCreated = false;
    233          static void *pEntryKeyboard = 0;
    234          char tireCircumference[NUMLEN+1];
   \                     tireCircumference:
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000

   \                                 In section .data, align 4
   \                     ZeroThroughNinty:
   \   00000000   ............       DC32 `?<Constant "00">`, `?<Constant "10">`, `?<Constant "20">`
   \              ............
   \   0000000C   ............       DC32 `?<Constant "30">`, `?<Constant "40">`, `?<Constant "50">`
   \              ............
   \   00000018   ............       DC32 `?<Constant "60">`, `?<Constant "70">`, `?<Constant "80">`
   \              ............
   \   00000024   ........0000       DC32 `?<Constant "90">`, 0H
   \              0000        
    235          static int gearingScreenSuspended = false;
    236          
    237          /*********************************************************************
    238          *
    239          *       Public code
    240          *
    241          **********************************************************************
    242          */

   \                                 In section .text, align 4, keep-with-next
    243          WM_HWIN GetGearingWindowHandle(void)
    244          {
    245          	return hGearingScreens;
   \                     GetGearingWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable110_4
   \   00000004   5C0090E5           LDR      R0,[R0, #+92]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    246          }
    247          

   \                                 In section .text, align 4, keep-with-next
    248          void SetGearingWindowHandle(WM_HWIN hWin)
    249          {
    250          	hGearingScreens = hWin;
   \                     SetGearingWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable110_4
   \   00000004   5C0081E5           STR      R0,[R1, #+92]
    251          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    252          

   \                                 In section .text, align 4, keep-with-next
    253          void GearingScreensCallback(WM_MESSAGE * pMsg)
    254          {
   \                     GearingScreensCallback:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    255          	int NCode, Id;
    256          	int Sel;
    257          
    258          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   010050E2           SUBS     R0,R0,#+1
   \   00000010   D600000A           BEQ      ??GearingScreensCallback_1
   \   00000014   0A0050E2           SUBS     R0,R0,#+10
   \   00000018   1400000A           BEQ      ??GearingScreensCallback_2
   \   0000001C   040050E2           SUBS     R0,R0,#+4
   \   00000020   3000000A           BEQ      ??GearingScreensCallback_3
   \   00000024   0C0050E2           SUBS     R0,R0,#+12
   \   00000028   1400000A           BEQ      ??GearingScreensCallback_4
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   2500000A           BEQ      ??GearingScreensCallback_5
   \   00000034   0A0050E2           SUBS     R0,R0,#+10
   \   00000038   3B00000A           BEQ      ??GearingScreensCallback_6
   \   0000003C   ED0050E2           SUBS     R0,R0,#+237
   \   00000040   9500001A           BNE      ??GearingScreensCallback_7
    259          	{
    260          		case WM_TIMER:
    261          			if (pMsg->Data.v == hScreenTimer)
   \   00000044   ........           LDR      R0,??DataTable110
   \   00000048   0C1095E5           LDR      R1,[R5, #+12]
   \   0000004C   000090E5           LDR      R0,[R0, #+0]
   \   00000050   000051E1           CMP      R1,R0
   \   00000054   C500001A           BNE      ??GearingScreensCallback_1
    262          			{
    263          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000058   7D10A0E3           MOV      R1,#+125
   \   0000005C   ........           BL       WM_RestartTimer
    264          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   00000060   040095E5           LDR      R0,[R5, #+4]
   \   00000064   F041BDE8           POP      {R4-R8,LR}
   \   00000068   ........           LDR      R1,??DataTable110_1
   \   0000006C   ........           B        WM_InvalidateRect  ;; tailcall
    265          			}
    266          			break;
    267          
    268          		case WM_CREATE:
    269          			GearingIgnoreNextKeyRelease();
    270          			break;
    271          
    272          		case WM_DELETE:
    273          			buttonsCreated = false;
   \                     ??GearingScreensCallback_2:
   \   00000070   ........           LDR      R0,??DataTable110_4
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   7810C0E5           STRB     R1,[R0, #+120]
    274          			break;
   \   0000007C   F081BDE8           POP      {R4-R8,PC}
    275          
    276          		case KB_CANCEL_MSG:
    277          			if (pMsg->Data.p == pEntryKeyboard)
   \                     ??GearingScreensCallback_4:
   \   00000080   ........           LDR      R6,??DataTable110_4
   \   00000084   0C1095E5           LDR      R1,[R5, #+12]
   \   00000088   700096E5           LDR      R0,[R6, #+112]
   \   0000008C   000051E1           CMP      R1,R0
   \   00000090   B600001A           BNE      ??GearingScreensCallback_1
    278          				TCKillKeyboard();
   \   00000094   0040A0E3           MOV      R4,#+0
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0100000A           BEQ      ??GearingScreensCallback_8
   \   000000A0   ........           BL       DestroyKeyboard
   \   000000A4   704086E5           STR      R4,[R6, #+112]
   \                     ??GearingScreensCallback_8:
   \   000000A8   ........           LDR      R0,??DataTable110_2
   \   000000AC   0110A0E3           MOV      R1,#+1
   \   000000B0   001080E5           STR      R1,[R0, #+0]
   \   000000B4   744086E5           STR      R4,[R6, #+116]
   \   000000B8   0E00A0E3           MOV      R0,#+14
   \   000000BC   ........           BL       SetScreenType
   \   000000C0   5C0096E5           LDR      R0,[R6, #+92]
   \   000000C4   F041BDE8           POP      {R4-R8,LR}
   \   000000C8   ........           B        WM_InvalidateWindow  ;; tailcall
    279          			break;
    280          
    281          		case KB_SAVE_AND_EXIT_MSG:
    282          			if (pMsg->Data.p == pEntryKeyboard)
   \                     ??GearingScreensCallback_5:
   \   000000CC   ........           LDR      R1,??DataTable110_4
   \   000000D0   0C0095E5           LDR      R0,[R5, #+12]
   \   000000D4   701091E5           LDR      R1,[R1, #+112]
   \   000000D8   010050E1           CMP      R0,R1
   \   000000DC   A300001A           BNE      ??GearingScreensCallback_1
    283          				TCKeyboardSaveButton();
   \   000000E0   F041BDE8           POP      {R4-R8,LR}
   \   000000E4   ........           B        TCKeyboardSaveButton  ;; tailcall
    284          			break;
    285          
    286          		case WM_PAINT:
    287          			if ((GetScreenType() == GEARING_SCREENS_TYPE) && (!gearingScreenSuspended))
   \                     ??GearingScreensCallback_3:
   \   000000E8   ........           BL       GetScreenType
   \   000000EC   0E0050E3           CMP      R0,#+14
   \   000000F0   9E00001A           BNE      ??GearingScreensCallback_1
   \   000000F4   ........           LDR      R6,??DataTable110_4
   \   000000F8   740096E5           LDR      R0,[R6, #+116]
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   9A00001A           BNE      ??GearingScreensCallback_1
    288          			{
    289          				// Call paint method of center screen
    290          				GearingScreenList[GetLastScreen(GEARING_SCREENS_TYPE)].paint(hGearingScreens);
   \   00000104   0E00A0E3           MOV      R0,#+14
   \   00000108   ........           BL       GetLastScreen
   \   0000010C   0010A0E1           MOV      R1,R0
   \   00000110   0C20A0E3           MOV      R2,#+12
   \   00000114   926121E0           MLA      R1,R2,R1,R6
   \   00000118   5C0096E5           LDR      R0,[R6, #+92]
   \   0000011C   281091E5           LDR      R1,[R1, #+40]
   \   00000120   31FF2FE1           BLX      R1
    291          				DrawSignalStrength();
   \   00000124   F041BDE8           POP      {R4-R8,LR}
   \   00000128   ........           B        DrawSignalStrength  ;; tailcall
    292          			}
    293          			break;
    294          
    295          		case WM_NOTIFY_PARENT:
    296          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??GearingScreensCallback_6:
   \   0000012C   080095E5           LDR      R0,[R5, #+8]
   \   00000130   ........           BL       WM_GetId
   \   00000134   0040A0E1           MOV      R4,R0
    297          			NCode = pMsg->Data.v;				// Notification code
    298          			switch (NCode)
   \   00000138   0C0095E5           LDR      R0,[R5, #+12]
   \   0000013C   010050E2           SUBS     R0,R0,#+1
   \   00000140   4E00000A           BEQ      ??GearingScreensCallback_9
   \   00000144   010050E2           SUBS     R0,R0,#+1
   \   00000148   5600000A           BEQ      ??GearingScreensCallback_10
   \   0000014C   020050E2           SUBS     R0,R0,#+2
   \   00000150   8600001A           BNE      ??GearingScreensCallback_1
    299          			{
    300          				case WM_NOTIFICATION_SEL_CHANGED:
    301          					if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \   00000154   080095E5           LDR      R0,[R5, #+8]
   \   00000158   ........           BL       LISTWHEEL_GetVelocity
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   00006042           RSBMI    R0,R0,#+0
   \   00000164   020050E3           CMP      R0,#+2
   \   00000168   800000AA           BGE      ??GearingScreensCallback_1
    302          					{
    303          						switch(Id)
   \   0000016C   994F54E2           SUBS     R4,R4,#+612
   \   00000170   0400000A           BEQ      ??GearingScreensCallback_11
   \   00000174   014054E2           SUBS     R4,R4,#+1
   \   00000178   2400000A           BEQ      ??GearingScreensCallback_12
   \   0000017C   014054E2           SUBS     R4,R4,#+1
   \   00000180   2E00000A           BEQ      ??GearingScreensCallback_13
   \   00000184   F081BDE8           POP      {R4-R8,PC}
    304          						{
    305          						case DIFF_WHEEL_1:
    306          							if ((vehicleData.diffRatio = ((float)(((Sel = LISTWHEEL_GetPos(hDiffWheel1)) * 100) + (LISTWHEEL_GetPos(hDiffWheel2) * 10) + LISTWHEEL_GetPos(hDiffWheel3)) / 100.0) + .00001) < ZERO_DIFF_RATIO)
   \                     ??GearingScreensCallback_11:
   \   00000188   ........           LDR      R6,??DataTable110_4
   \   0000018C   640096E5           LDR      R0,[R6, #+100]
   \   00000190   ........           BL       LISTWHEEL_GetPos
   \   00000194   0040A0E1           MOV      R4,R0
   \   00000198   680096E5           LDR      R0,[R6, #+104]
   \   0000019C   ........           BL       LISTWHEEL_GetPos
   \   000001A0   0A20A0E3           MOV      R2,#+10
   \   000001A4   920000E0           MUL      R0,R2,R0
   \   000001A8   6410A0E3           MOV      R1,#+100
   \   000001AC   910427E0           MLA      R7,R1,R4,R0
   \                     ??GearingScreensCallback_14:
   \   000001B0   6C0096E5           LDR      R0,[R6, #+108]
   \   000001B4   ........           BL       LISTWHEEL_GetPos
   \   000001B8   070080E0           ADD      R0,R0,R7
   \                     ??GearingScreensCallback_15:
   \   000001BC   ........           BL       __aeabi_i2f
   \   000001C0   ........           BL       __aeabi_f2d
   \   000001C4   4034A0E3           MOV      R3,#+1073741824
   \   000001C8   0020A0E3           MOV      R2,#+0
   \   000001CC   593883E3           ORR      R3,R3,#0x590000
   \   000001D0   ........           BL       __aeabi_ddiv
   \   000001D4   0020A0E1           MOV      R2,R0
   \   000001D8   0130A0E1           MOV      R3,R1
   \   000001DC   ........           ADR      R0,??DataTable103
   \   000001E0   030090E8           LDM      R0,{R0,R1}
   \   000001E4   ........           BL       __aeabi_dadd
   \   000001E8   ........           BL       __aeabi_d2f
   \   000001EC   ........           LDR      R1,??DataTable112_1  ;; 0x38d1b717
   \   000001F0   ........           BL       __aeabi_cfcmple
    307          								vehicleData.diffRatio = 0.0;
   \   000001F4   ........           LDR      R1,??DataTable112_2
   \   000001F8   0000A033           MOVCC    R0,#+0
   \   000001FC   500081E5           STR      R0,[R1, #+80]
    308          							LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   00000200   0410A0E1           MOV      R1,R4
   \   00000204   080095E5           LDR      R0,[R5, #+8]
   \   00000208   F041BDE8           POP      {R4-R8,LR}
   \   0000020C   ........           B        LISTWHEEL_SetSel  ;; tailcall
    309          							break;
    310          						case DIFF_WHEEL_2:
    311          							if ((vehicleData.diffRatio = ((float)((LISTWHEEL_GetPos(hDiffWheel1) * 100) + ((Sel = LISTWHEEL_GetPos(hDiffWheel2)) * 10) + LISTWHEEL_GetPos(hDiffWheel3)) / 100.0) + .00001) < ZERO_DIFF_RATIO)
   \                     ??GearingScreensCallback_12:
   \   00000210   ........           LDR      R6,??DataTable110_4
   \   00000214   640096E5           LDR      R0,[R6, #+100]
   \   00000218   ........           BL       LISTWHEEL_GetPos
   \   0000021C   0070A0E1           MOV      R7,R0
   \   00000220   680096E5           LDR      R0,[R6, #+104]
   \   00000224   ........           BL       LISTWHEEL_GetPos
   \   00000228   0040A0E1           MOV      R4,R0
   \   0000022C   0A20A0E3           MOV      R2,#+10
   \   00000230   920000E0           MUL      R0,R2,R0
   \   00000234   6410A0E3           MOV      R1,#+100
   \   00000238   910727E0           MLA      R7,R1,R7,R0
   \   0000023C   DBFFFFEA           B        ??GearingScreensCallback_14
    312          								vehicleData.diffRatio = 0.0;
    313          							LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
    314          							break;
    315          						case DIFF_WHEEL_3:
    316          							if ((vehicleData.diffRatio = ((float)((LISTWHEEL_GetPos(hDiffWheel1) * 100) + (LISTWHEEL_GetPos(hDiffWheel2) * 10) + (Sel = LISTWHEEL_GetPos(hDiffWheel3))) / 100.0) + .00001) < ZERO_DIFF_RATIO)
   \                     ??GearingScreensCallback_13:
   \   00000240   ........           LDR      R6,??DataTable110_4
   \   00000244   640096E5           LDR      R0,[R6, #+100]
   \   00000248   ........           BL       LISTWHEEL_GetPos
   \   0000024C   0070A0E1           MOV      R7,R0
   \   00000250   680096E5           LDR      R0,[R6, #+104]
   \   00000254   ........           BL       LISTWHEEL_GetPos
   \   00000258   0080A0E1           MOV      R8,R0
   \   0000025C   6C0096E5           LDR      R0,[R6, #+108]
   \   00000260   ........           BL       LISTWHEEL_GetPos
   \   00000264   0A20A0E3           MOV      R2,#+10
   \   00000268   920803E0           MUL      R3,R2,R8
   \   0000026C   6410A0E3           MOV      R1,#+100
   \   00000270   913722E0           MLA      R2,R1,R7,R3
   \   00000274   0040A0E1           MOV      R4,R0
   \   00000278   020080E0           ADD      R0,R0,R2
   \   0000027C   CEFFFFEA           B        ??GearingScreensCallback_15
    317          								vehicleData.diffRatio = 0.0;
    318          							LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
    319          							break;
    320          						}
    321          					}
    322          					break;
    323          
    324          				case WM_NOTIFICATION_CLICKED:
    325          //					clickedOnThisScreen = true;
    326          					switch (Id)
   \                     ??GearingScreensCallback_9:
   \   00000280   994F44E2           SUB      R4,R4,#+612
   \   00000284   020054E3           CMP      R4,#+2
   \   00000288   0300008A           BHI      ??GearingScreensCallback_7
    327          					{
    328          						//case TREAD_WIDTH_WHEEL:
    329          						//case ASPECT_RATIO_WHEEL:
    330          						//case WHEEL_DIAMETER_WHEEL:
    331          						case DIFF_WHEEL_1:
    332          						case DIFF_WHEEL_2:
    333          						case DIFF_WHEEL_3:
    334          							pressingbutton_semaphore = 1;
   \   0000028C   ........           LDR      R0,??DataTable112_3
   \   00000290   0110A0E3           MOV      R1,#+1
   \   00000294   001080E5           STR      R1,[R0, #+0]
    335          							break;
   \   00000298   F081BDE8           POP      {R4-R8,PC}
    336          
    337          						default:
    338          							WM_DefaultProc(pMsg);
   \                     ??GearingScreensCallback_7:
   \   0000029C   0500A0E1           MOV      R0,R5
   \   000002A0   F041BDE8           POP      {R4-R8,LR}
   \   000002A4   ........           B        WM_DefaultProc   ;; tailcall
    339          					}
    340          					break;
    341          
    342          				case WM_NOTIFICATION_RELEASED:
    343          					pressingbutton_semaphore = 0;
   \                     ??GearingScreensCallback_10:
   \   000002A8   ........           LDR      R0,??DataTable112_3
   \   000002AC   0010A0E3           MOV      R1,#+0
   \   000002B0   001080E5           STR      R1,[R0, #+0]
    344          
    345          					if (Id == TIRE_CIRCUMFERENCE_BUTTON)
   \   000002B4   0100A0E3           MOV      R0,#+1
   \   000002B8   800E80E3           ORR      R0,R0,#0x800
   \   000002BC   000054E1           CMP      R4,R0
   \   000002C0   0100001A           BNE      ??GearingScreensCallback_16
    346          					{
    347          						DisplayTireCircumference();
   \   000002C4   F041BDE8           POP      {R4-R8,LR}
   \   000002C8   ........           B        DisplayTireCircumference  ;; tailcall
    348          					}
    349          					else if (Id == TIRE_DIMENSIONS_BUTTON)
   \                     ??GearingScreensCallback_16:
   \   000002CC   090080E2           ADD      R0,R0,#+9
   \   000002D0   000054E1           CMP      R4,R0
   \   000002D4   0100001A           BNE      ??GearingScreensCallback_17
    350          					{
    351          						DisplayTireSize();
   \   000002D8   F041BDE8           POP      {R4-R8,LR}
   \   000002DC   ........           B        DisplayTireSize  ;; tailcall
    352          					}
    353          
    354          					else if (buttonsCreated)
   \                     ??GearingScreensCallback_17:
   \   000002E0   ........           LDR      R6,??DataTable110_4
   \   000002E4   7800D6E5           LDRB     R0,[R6, #+120]
   \   000002E8   000050E3           CMP      R0,#+0
   \   000002EC   1F00000A           BEQ      ??GearingScreensCallback_1
    355          						switch (Id)
   \   000002F0   020044E2           SUB      R0,R4,#+2
   \   000002F4   800E40E2           SUB      R0,R0,#+2048
   \   000002F8   070050E3           CMP      R0,#+7
   \   000002FC   1B00008A           BHI      ??GearingScreensCallback_1
    356          						{
    357          						case FIRST_BUTTON:
    358          						case SECOND_BUTTON:
    359          						case THIRD_BUTTON:
    360          						case FORTH_BUTTON:
    361          						case FIFTH_BUTTON:
    362          						case SIXTH_BUTTON:
    363          						case SEVENTH_BUTTON:
    364          						case EIGHTH_BUTTON:
    365          							DisplayNewScreenList(GEAR_RATIOS, ButtonToScreenID(Id), hGearingScreens);
   \   00000300   034044E2           SUB      R4,R4,#+3
   \   00000304   804E44E2           SUB      R4,R4,#+2048
   \   00000308   060054E3           CMP      R4,#+6
   \   0000030C   04F18F90           ADDLS    PC,PC,R4, LSL #+2
   \                     ??GearingScreensCallback_0:
   \   00000310   1300008A           BHI      ??GearingScreensCallback_18
   \   00000314   110000EA           B        ??GearingScreensCallback_19
   \   00000318   0E0000EA           B        ??GearingScreensCallback_20
   \   0000031C   0B0000EA           B        ??GearingScreensCallback_21
   \   00000320   080000EA           B        ??GearingScreensCallback_22
   \   00000324   050000EA           B        ??GearingScreensCallback_23
   \   00000328   020000EA           B        ??GearingScreensCallback_24
   \   0000032C   FFFFFFEA           B        ??GearingScreensCallback_25
   \                     ??GearingScreensCallback_25:
   \   00000330   0710A0E3           MOV      R1,#+7
   \   00000334   0A0000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_24:
   \   00000338   0610A0E3           MOV      R1,#+6
   \   0000033C   080000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_23:
   \   00000340   0510A0E3           MOV      R1,#+5
   \   00000344   060000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_22:
   \   00000348   0410A0E3           MOV      R1,#+4
   \   0000034C   040000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_21:
   \   00000350   0310A0E3           MOV      R1,#+3
   \   00000354   020000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_20:
   \   00000358   0210A0E3           MOV      R1,#+2
   \   0000035C   000000EA           B        ??GearingScreensCallback_18
   \                     ??GearingScreensCallback_19:
   \   00000360   0110A0E3           MOV      R1,#+1
   \                     ??GearingScreensCallback_18:
   \   00000364   5C2096E5           LDR      R2,[R6, #+92]
   \   00000368   1300A0E3           MOV      R0,#+19
   \   0000036C   ........           BL       DisplayNewScreenList
    366          							break;
    367          						}
    368          					break;
    369          			}
    370          			break;
    371          
    372          		default:
    373          			WM_DefaultProc(pMsg);
    374          	}
    375          }
   \                     ??GearingScreensCallback_1:
   \   00000370   F081BDE8           POP      {R4-R8,PC}       ;; return
    376          

   \                                 In section .text, align 4, keep-with-next
    377          int ButtonToScreenID(int Id)
    378           {
    379          	 switch (Id)
   \                     ButtonToScreenID:
   \   00000000   030040E2           SUB      R0,R0,#+3
   \   00000004   800E40E2           SUB      R0,R0,#+2048
   \   00000008   060050E3           CMP      R0,#+6
   \   0000000C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ButtonToScreenID_0:
   \   00000010   0600008A           BHI      ??ButtonToScreenID_1
   \   00000014   070000EA           B        ??ButtonToScreenID_2
   \   00000018   080000EA           B        ??ButtonToScreenID_3
   \   0000001C   090000EA           B        ??ButtonToScreenID_4
   \   00000020   0A0000EA           B        ??ButtonToScreenID_5
   \   00000024   0B0000EA           B        ??ButtonToScreenID_6
   \   00000028   0C0000EA           B        ??ButtonToScreenID_7
   \   0000002C   0D0000EA           B        ??ButtonToScreenID_8
    380          	 {
    381          		case FIRST_BUTTON:		return FIRST_GEAR_SCREEN;
   \                     ??ButtonToScreenID_1:
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   1EFF2FE1           BX       LR
    382          		case SECOND_BUTTON:		return SECOND_GEAR_SCREEN;
   \                     ??ButtonToScreenID_2:
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   1EFF2FE1           BX       LR
    383          		case THIRD_BUTTON:		return THIRD_GEAR_SCREEN;
   \                     ??ButtonToScreenID_3:
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   1EFF2FE1           BX       LR
    384          		case FORTH_BUTTON:		return FOURTH_GEAR_SCREEN;
   \                     ??ButtonToScreenID_4:
   \   00000048   0300A0E3           MOV      R0,#+3
   \   0000004C   1EFF2FE1           BX       LR
    385          		case FIFTH_BUTTON:		return FIFTH_GEAR_SCREEN;
   \                     ??ButtonToScreenID_5:
   \   00000050   0400A0E3           MOV      R0,#+4
   \   00000054   1EFF2FE1           BX       LR
    386          		case SIXTH_BUTTON:		return SIXTH_GEAR_SCREEN;
   \                     ??ButtonToScreenID_6:
   \   00000058   0500A0E3           MOV      R0,#+5
   \   0000005C   1EFF2FE1           BX       LR
    387          		case SEVENTH_BUTTON:	return SEVENTH_GEAR_SCREEN;
   \                     ??ButtonToScreenID_7:
   \   00000060   0600A0E3           MOV      R0,#+6
   \   00000064   1EFF2FE1           BX       LR
    388          		case EIGHTH_BUTTON:		return EIGHTH_GEAR_SCREEN;
   \                     ??ButtonToScreenID_8:
   \   00000068   0700A0E3           MOV      R0,#+7
   \   0000006C   1EFF2FE1           BX       LR               ;; return
    389          		default:				return 0;
    390          	 }
    391           }
    392          

   \                                 In section .text, align 4, keep-with-next
    393          WM_HWIN GetTireSizeScreenWindowHandle(void)
    394          {
    395          	return hTireSizeScreen;
   \                     GetTireSizeScreenWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable114
   \   00000004   600090E5           LDR      R0,[R0, #+96]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    396          }
    397          
    398          

   \                                 In section .text, align 4, keep-with-next
    399          void DisplayTireCircumference(void)
    400          {
   \                     DisplayTireCircumference:
   \   00000000   10402DE9           PUSH     {R4,LR}
    401          	SetScreenScrollingHOnly();
   \   00000004   ........           LDR      R0,??DataTable110_2
   \   00000008   0210A0E3           MOV      R1,#+2
   \   0000000C   001080E5           STR      R1,[R0, #+0]
    402          
    403          	gearingScreenSuspended = true;
   \   00000010   ........           LDR      R4,??DataTable110_4
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   740084E5           STR      R0,[R4, #+116]
   \   0000001C   10D04DE2           SUB      SP,SP,#+16
    404          
    405          	SetScreenType(TIRE_DIMENSIONS_SCREEN_TYPE);
   \   00000020   1600A0E3           MOV      R0,#+22
   \   00000024   ........           BL       SetScreenType
    406          	SetLastScreen(TIRE_DIMENSIONS_SCREEN_TYPE, TIRECIRCUMFERENCE_SCREEN);
   \   00000028   0510A0E3           MOV      R1,#+5
   \   0000002C   1600A0E3           MOV      R0,#+22
   \   00000030   ........           BL       SetLastScreen
    407          
    408          	if (pEntryKeyboard)
   \   00000034   700094E5           LDR      R0,[R4, #+112]
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   0000000A           BEQ      ??DisplayTireCircumference_0
    409          		DestroyKeyboard(pEntryKeyboard);
   \   00000040   ........           BL       DestroyKeyboard
   \                     ??DisplayTireCircumference_0:
   \   00000044   ........           LDR      R1,??DataTable114_1
   \   00000048   ........           LDR      R0,??DataTable112_2
   \   0000004C   641091E5           LDR      R1,[R1, #+100]
   \   00000050   540090E5           LDR      R0,[R0, #+84]
   \   00000054   010051E3           CMP      R1,#+1
   \   00000058   0100001A           BNE      ??DisplayTireCircumference_1
    410          
    411          	GetTireCircumferenceString(false, tireCircumference);
   \   0000005C   ........           LDR      R1,??DataTable115  ;; 0x40228f5c
   \   00000060   ........           BL       __aeabi_fmul
   \                     ??DisplayTireCircumference_1:
   \   00000064   ........           BL       __aeabi_f2d
   \   00000068   0020A0E1           MOV      R2,R0
   \   0000006C   0130A0E1           MOV      R3,R1
   \   00000070   ............       ADRL     R1,`?<Constant "%.2f">`
   \              ....        
   \   00000078   5F0F84E2           ADD      R0,R4,#+380
   \   0000007C   ........           BL       sprintf
   \   00000080   5F0F84E2           ADD      R0,R4,#+380
   \   00000084   ........           BL       trim
    412          
    413          	pEntryKeyboard = CreateKeyboard("Enter Tire Circumference", tireCircumference, NUMERIC, true, NUMLEN, 0, hGearingScreens, false);
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   0C008DE5           STR      R0,[SP, #+12]
   \   00000090   5C0094E5           LDR      R0,[R4, #+92]
   \   00000094   0130A0E3           MOV      R3,#+1
   \   00000098   08008DE5           STR      R0,[SP, #+8]
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   04008DE5           STR      R0,[SP, #+4]
   \   000000A4   0A00A0E3           MOV      R0,#+10
   \   000000A8   00008DE5           STR      R0,[SP, #+0]
   \   000000AC   0220A0E3           MOV      R2,#+2
   \   000000B0   5F1F84E2           ADD      R1,R4,#+380
   \   000000B4   ............       ADRL     R0,`?<Constant "Enter Tire Circumference">`
   \              ....        
   \   000000BC   ........           BL       CreateKeyboard
   \   000000C0   700084E5           STR      R0,[R4, #+112]
    414          }
   \   000000C4   10D08DE2           ADD      SP,SP,#+16
   \   000000C8   1080BDE8           POP      {R4,PC}          ;; return
    415          
    416          //
    417          // Get the current tire circumference in the current units.
    418          // If withUnits is true display the text of the units aswell
    419          // Put the string at the pointer provided
    420          //

   \                                 In section .text, align 4, keep-with-next
    421          void GetTireCircumferenceString(char withUnits, char *scratch)
    422          {
   \                     GetTireCircumferenceString:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0160A0E1           MOV      R6,R1
   \   00000008   ........           LDR      R1,??DataTable114_1
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   ........           LDR      R0,??DataTable112_2
   \   00000014   641091E5           LDR      R1,[R1, #+100]
   \   00000018   540090E5           LDR      R0,[R0, #+84]
   \   0000001C   010051E3           CMP      R1,#+1
   \   00000020   0300001A           BNE      ??GetTireCircumferenceString_0
    423          	float circumference;
    424          	char *pUnits;
    425          
    426          	if (sysData.units == METRIC)
    427          	{
    428          		circumference = vehicleData.tireCircumference * INCHES_TO_CM;
   \   00000024   ........           LDR      R1,??DataTable115  ;; 0x40228f5c
   \   00000028   ........           BL       __aeabi_fmul
    429          		pUnits = " cm";
   \   0000002C   ........           ADR      R5,??DataTable106  ;; " cm"
   \   00000030   000000EA           B        ??GetTireCircumferenceString_1
    430          	}
    431          	else
    432          	{
    433          		circumference = vehicleData.tireCircumference;
    434          		pUnits = " in";
   \                     ??GetTireCircumferenceString_0:
   \   00000034   ........           ADR      R5,??DataTable106_1  ;; " in"
    435          	}
    436          
    437          	sprintf(scratch, "%.2f", circumference);
   \                     ??GetTireCircumferenceString_1:
   \   00000038   ........           BL       __aeabi_f2d
   \   0000003C   0020A0E1           MOV      R2,R0
   \   00000040   0130A0E1           MOV      R3,R1
   \   00000044   ............       ADRL     R1,`?<Constant "%.2f">`
   \              ....        
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       sprintf
    438          	trim(scratch);
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   ........           BL       trim
    439          
    440          	if (withUnits)
   \   0000005C   000054E3           CMP      R4,#+0
   \   00000060   0200000A           BEQ      ??GetTireCircumferenceString_2
    441          		strcat(scratch, pUnits);
   \   00000064   0510A0E1           MOV      R1,R5
   \   00000068   0600A0E1           MOV      R0,R6
   \   0000006C   ........           BL       strcat
    442          }
   \                     ??GetTireCircumferenceString_2:
   \   00000070   7080BDE8           POP      {R4-R6,PC}       ;; return
    443          

   \                                 In section .text, align 4, keep-with-next
    444          void TCKeyboardSaveButton(void)
    445          {
   \                     TCKeyboardSaveButton:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    446          	TCKillKeyboard();
   \   00000004   ........           LDR      R5,??DataTable110_4
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   700095E5           LDR      R0,[R5, #+112]
   \   00000010   0040A0E3           MOV      R4,#+0
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100000A           BEQ      ??TCKeyboardSaveButton_0
   \   0000001C   ........           BL       DestroyKeyboard
   \   00000020   704085E5           STR      R4,[R5, #+112]
   \                     ??TCKeyboardSaveButton_0:
   \   00000024   ........           LDR      R0,??DataTable110_2
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   001080E5           STR      R1,[R0, #+0]
   \   00000030   744085E5           STR      R4,[R5, #+116]
   \   00000034   0E00A0E3           MOV      R0,#+14
   \   00000038   ........           BL       SetScreenType
   \   0000003C   5C0095E5           LDR      R0,[R5, #+92]
   \   00000040   ........           BL       WM_InvalidateWindow
    447          	EnsurePositive(tireCircumference);
   \   00000044   5F0F85E2           ADD      R0,R5,#+380
   \   00000048   ........           BL       EnsurePositive
    448          	vehicleData.tireCircumference = atof(tireCircumference);
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   5F0F85E2           ADD      R0,R5,#+380
   \   00000058   ........           BL       __iar_Stod
   \   0000005C   ........           BL       __aeabi_d2f
    449          	if (sysData.units == METRIC)
   \   00000060   ........           LDR      R1,??DataTable114_1
   \   00000064   641091E5           LDR      R1,[R1, #+100]
   \   00000068   010051E3           CMP      R1,#+1
   \   0000006C   0100001A           BNE      ??TCKeyboardSaveButton_1
    450          		vehicleData.tireCircumference *= CM_TO_INCHES;		// Store circumference natively as inches
   \   00000070   ........           LDR      R1,??DataTable115_1  ;; 0x3ec99326
   \   00000074   ........           BL       __aeabi_fmul
    451          
    452          	// Range check circumference
    453          	if (vehicleData.tireCircumference > 199.0)
   \                     ??TCKeyboardSaveButton_1:
   \   00000078   ........           LDR      R1,??DataTable115_2  ;; 0x43470001
   \   0000007C   ........           BL       __aeabi_cfrcmple
    454          		vehicleData.tireCircumference = 199.0;
   \   00000080   0100C193           BICLS    R0,R1,#0x1
   \   00000084   ........           LDR      R1,??DataTable112_2
    455          
    456          	vehicleData.userEnteredTireDimensions = false;
    457          }
   \   00000088   04D08DE2           ADD      SP,SP,#+4
   \   0000008C   540081E5           STR      R0,[R1, #+84]
   \   00000090   6440C1E5           STRB     R4,[R1, #+100]
   \   00000094   3080BDE8           POP      {R4,R5,PC}       ;; return
    458          

   \                                 In section .text, align 4, keep-with-next
    459          void TCKillKeyboard(void)
    460          {
   \                     TCKillKeyboard:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    461          	if (pEntryKeyboard)		// Should alwaye be there - but just in case!
   \   00000004   ........           LDR      R4,??DataTable110_4
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   700094E5           LDR      R0,[R4, #+112]
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0100000A           BEQ      ??TCKillKeyboard_0
    462          	{
    463          		DestroyKeyboard(pEntryKeyboard);
   \   0000001C   ........           BL       DestroyKeyboard
    464          		pEntryKeyboard = 0;
   \   00000020   705084E5           STR      R5,[R4, #+112]
    465          	}
    466          	ResumeScreenScrolling();
   \                     ??TCKillKeyboard_0:
   \   00000024   ........           LDR      R0,??DataTable110_2
   \   00000028   0110A0E3           MOV      R1,#+1
   \   0000002C   001080E5           STR      R1,[R0, #+0]
    467          
    468          	gearingScreenSuspended = false;
   \   00000030   745084E5           STR      R5,[R4, #+116]
    469          	SetScreenType(GEARING_SCREENS_TYPE);
   \   00000034   0E00A0E3           MOV      R0,#+14
   \   00000038   ........           BL       SetScreenType
    470          	WM_InvalidateWindow(hGearingScreens);
   \   0000003C   5C0094E5           LDR      R0,[R4, #+92]
   \   00000040   04D08DE2           ADD      SP,SP,#+4
   \   00000044   3040BDE8           POP      {R4,R5,LR}
   \   00000048   ........           B        WM_InvalidateWindow  ;; tailcall
    471          }
    472          

   \                                 In section .text, align 4, keep-with-next
    473          void DisplayTireSize(void)
    474          {
   \                     DisplayTireSize:
   \   00000000   10402DE9           PUSH     {R4,LR}
    475          	WM_DeleteWindow(hGearingScreens);
   \   00000004   ........           LDR      R4,??DataTable110_4
   \   00000008   30D04DE2           SUB      SP,SP,#+48
   \   0000000C   5C0094E5           LDR      R0,[R4, #+92]
   \   00000010   ........           BL       WM_DeleteWindow
    476          	SetScreenScrollingHOnly();
   \   00000014   ........           LDR      R0,??DataTable110_2
   \   00000018   0210A0E3           MOV      R1,#+2
   \   0000001C   001080E5           STR      R1,[R0, #+0]
    477          	SetScreenType(TIRE_DIMENSIONS_SCREEN_TYPE);
   \   00000020   1600A0E3           MOV      R0,#+22
   \   00000024   ........           BL       SetScreenType
    478          	SetLastScreen(TIRE_DIMENSIONS_SCREEN_TYPE, TIRESIZE_SCREEN);
   \   00000028   0410A0E3           MOV      R1,#+4
   \   0000002C   1600A0E3           MOV      R0,#+22
   \   00000030   ........           BL       SetLastScreen
    479          
    480          	if ((hTireSizeScreen = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, TireSizeScreenCallback, 0)) <= 0)
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   08008DE5           STR      R0,[SP, #+8]
   \   0000003C   ........           LDR      R0,??DataTable116_2
   \   00000040   443FA0E3           MOV      R3,#+272
   \   00000044   04008DE5           STR      R0,[SP, #+4]
   \   00000048   0200A0E3           MOV      R0,#+2
   \   0000004C   800D80E3           ORR      R0,R0,#0x2000
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   782FA0E3           MOV      R2,#+480
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   ........           BL       WM_CreateWindow
   \   00000064   600084E5           STR      R0,[R4, #+96]
   \   00000068   010050E3           CMP      R0,#+1
   \   0000006C   000000AA           BGE      ??DisplayTireSize_0
    481          		SystemError();
   \   00000070   ........           BL       SystemError
    482          
    483          	DisplayTripleListScreen(hTireSizeScreen,
    484          		TreadWidth, TREAD_WIDTH_WHEEL, &hTreadWidthListWheel, (TREAD_WIDTH_START - vehicleData.treadWidth) / 10,
    485          		AspectRatio, ASPECT_RATIO_WHEEL, &hAspectRatioWheel, (ASPECT_RATIO_START - vehicleData.aspectRatio) / 5,
    486          		WheelDiameter, WHEEL_DIAMETER_WHEEL, &hWheelDiameterWheel, WHEEL_DIAMETER_START - vehicleData.wheelDiameter,
    487          		"Select Tire Size",
    488          		0, 0);
   \                     ??DisplayTireSize_0:
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   2C108DE5           STR      R1,[SP, #+44]
   \   0000007C   28108DE5           STR      R1,[SP, #+40]
   \   00000080   ............       ADRL     R1,`?<Constant "Select Tire Size">`
   \              ....        
   \   00000088   ........           LDR      R0,??DataTable112_2
   \   0000008C   24108DE5           STR      R1,[SP, #+36]
   \   00000090   5C1090E5           LDR      R1,[R0, #+92]
   \   00000094   ........           LDR      R2,??DataTable116_4  ;; 0x66666667
   \   00000098   141061E2           RSB      R1,R1,#+20
   \   0000009C   20108DE5           STR      R1,[SP, #+32]
   \   000000A0   5E1F84E2           ADD      R1,R4,#+376
   \   000000A4   1C108DE5           STR      R1,[SP, #+28]
   \   000000A8   6310A0E3           MOV      R1,#+99
   \   000000AC   801F81E3           ORR      R1,R1,#0x200
   \   000000B0   18108DE5           STR      R1,[SP, #+24]
   \   000000B4   501F84E2           ADD      R1,R4,#+320
   \   000000B8   14108DE5           STR      R1,[SP, #+20]
   \   000000BC   601090E5           LDR      R1,[R0, #+96]
   \   000000C0   580090E5           LDR      R0,[R0, #+88]
   \   000000C4   501061E2           RSB      R1,R1,#+80
   \   000000C8   9132C2E0           SMULL    R3,R2,R1,R2
   \   000000CC   5C3F84E2           ADD      R3,R4,#+368
   \   000000D0   C210B0E1           ASRS     R1,R2,#+1
   \   000000D4   01108142           ADDMI    R1,R1,#+1
   \   000000D8   10108DE5           STR      R1,[SP, #+16]
   \   000000DC   5D1F84E2           ADD      R1,R4,#+372
   \   000000E0   0C108DE5           STR      R1,[SP, #+12]
   \   000000E4   6210A0E3           MOV      R1,#+98
   \   000000E8   801F81E3           ORR      R1,R1,#0x200
   \   000000EC   08108DE5           STR      R1,[SP, #+8]
   \   000000F0   421F84E2           ADD      R1,R4,#+264
   \   000000F4   04108DE5           STR      R1,[SP, #+4]
   \   000000F8   6310A0E3           MOV      R1,#+99
   \   000000FC   401F81E3           ORR      R1,R1,#0x100
   \   00000100   000041E0           SUB      R0,R1,R0
   \   00000104   ........           LDR      R1,??DataTable116_4  ;; 0x66666667
   \   00000108   9021C1E0           SMULL    R2,R1,R0,R1
   \   0000010C   6120A0E3           MOV      R2,#+97
   \   00000110   4101B0E1           ASRS     R0,R1,#+2
   \   00000114   01008042           ADDMI    R0,R0,#+1
   \   00000118   00008DE5           STR      R0,[SP, #+0]
   \   0000011C   802F82E3           ORR      R2,R2,#0x200
   \   00000120   A81084E2           ADD      R1,R4,#+168
   \   00000124   600094E5           LDR      R0,[R4, #+96]
   \   00000128   ........           BL       DisplayTripleListScreen
    489          
    490          	hScreenTimer = WM_CreateTimer(hTireSizeScreen, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   0000012C   0030A0E3           MOV      R3,#+0
   \   00000130   7D20A0E3           MOV      R2,#+125
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   600094E5           LDR      R0,[R4, #+96]
   \   0000013C   ........           BL       WM_CreateTimer
   \   00000140   ........           LDR      R1,??DataTable110
    491          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   00000144   30D08DE2           ADD      SP,SP,#+48
   \   00000148   000081E5           STR      R0,[R1, #+0]
   \   0000014C   1040BDE8           POP      {R4,LR}
   \   00000150   ........           B        ResetNewScreen   ;; tailcall
    492          }
    493          

   \                                 In section .text, align 4, keep-with-next
    494          static void TireSizeScreenCallback(WM_MESSAGE * pMsg)
    495          {
   \                     TireSizeScreenCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    496          	int NCode, Id, Sel;
    497          
    498          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0F0050E2           SUBS     R0,R0,#+15
   \   00000014   0E00000A           BEQ      ??TireSizeScreenCallback_0
   \   00000018   170050E2           SUBS     R0,R0,#+23
   \   0000001C   1000000A           BEQ      ??TireSizeScreenCallback_1
   \   00000020   ED0050E2           SUBS     R0,R0,#+237
   \   00000024   5800001A           BNE      ??TireSizeScreenCallback_2
    499          	{
    500          	case WM_TIMER:
    501          		if (pMsg->Data.v == hScreenTimer)
   \   00000028   ........           LDR      R0,??DataTable110
   \   0000002C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000051E1           CMP      R1,R0
   \   00000038   5500001A           BNE      ??TireSizeScreenCallback_3
    502          		{
    503          			WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   0000003C   7D10A0E3           MOV      R1,#+125
   \   00000040   ........           BL       WM_RestartTimer
    504          			WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   00000044   ........           LDR      R1,??DataTable110_1
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   ........           BL       WM_InvalidateRect
   \   00000050   4F0000EA           B        ??TireSizeScreenCallback_3
    505          		}
    506          		break;
    507          
    508          	case WM_PAINT:
    509          		TireSizePaint(hTireSizeScreen);
   \                     ??TireSizeScreenCallback_0:
   \   00000054   ........           LDR      R0,??DataTable110_4
   \   00000058   600090E5           LDR      R0,[R0, #+96]
   \   0000005C   ........           BL       TireSizePaint
    510          		break;
   \   00000060   4B0000EA           B        ??TireSizeScreenCallback_3
    511          
    512          	case WM_NOTIFY_PARENT:
    513          		Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??TireSizeScreenCallback_1:
   \   00000064   080094E5           LDR      R0,[R4, #+8]
   \   00000068   ........           BL       WM_GetId
   \   0000006C   0050A0E1           MOV      R5,R0
    514          		NCode = pMsg->Data.v;                 // Notification code
    515          		switch(NCode)
   \   00000070   0C0094E5           LDR      R0,[R4, #+12]
   \   00000074   040050E3           CMP      R0,#+4
   \   00000078   4300001A           BNE      ??TireSizeScreenCallback_2
    516          		{
    517          		case WM_NOTIFICATION_SEL_CHANGED:
    518          			if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \   0000007C   080094E5           LDR      R0,[R4, #+8]
   \   00000080   ........           BL       LISTWHEEL_GetVelocity
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   00006042           RSBMI    R0,R0,#+0
   \   0000008C   020050E3           CMP      R0,#+2
   \   00000090   3F0000AA           BGE      ??TireSizeScreenCallback_3
    519          			{
    520          				switch(Id)
   \   00000094   615045E2           SUB      R5,R5,#+97
   \   00000098   805F55E2           SUBS     R5,R5,#+512
   \   0000009C   0400000A           BEQ      ??TireSizeScreenCallback_4
   \   000000A0   015055E2           SUBS     R5,R5,#+1
   \   000000A4   2900000A           BEQ      ??TireSizeScreenCallback_5
   \   000000A8   015055E2           SUBS     R5,R5,#+1
   \   000000AC   2F00000A           BEQ      ??TireSizeScreenCallback_6
   \   000000B0   370000EA           B        ??TireSizeScreenCallback_3
    521          				{
    522          				case TREAD_WIDTH_WHEEL:
    523          					vehicleData.treadWidth = TREAD_WIDTH_START - ((Sel = LISTWHEEL_GetPos(pMsg->hWinSrc)) * 10);
   \                     ??TireSizeScreenCallback_4:
   \   000000B4   080094E5           LDR      R0,[R4, #+8]
   \   000000B8   ........           BL       LISTWHEEL_GetPos
   \   000000BC   0A20A0E3           MOV      R2,#+10
   \   000000C0   920003E0           MUL      R3,R2,R0
   \   000000C4   6310A0E3           MOV      R1,#+99
   \   000000C8   ........           LDR      R5,??DataTable112_2
   \   000000CC   401F81E3           ORR      R1,R1,#0x100
   \   000000D0   031041E0           SUB      R1,R1,R3
   \   000000D4   581085E5           STR      R1,[R5, #+88]
    524          					LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   000000D8   0010A0E1           MOV      R1,R0
   \                     ??TireSizeScreenCallback_7:
   \   000000DC   080094E5           LDR      R0,[R4, #+8]
   \   000000E0   ........           BL       LISTWHEEL_SetSel
    525          					UpdateTireCircumference();
   \   000000E4   0100A0E3           MOV      R0,#+1
   \   000000E8   6400C5E5           STRB     R0,[R5, #+100]
   \   000000EC   580095E5           LDR      R0,[R5, #+88]
   \   000000F0   601095E5           LDR      R1,[R5, #+96]
   \   000000F4   910000E0           MUL      R0,R1,R0
   \   000000F8   ........           BL       __aeabi_i2f
   \   000000FC   ........           LDR      R1,??DataTable117  ;; 0x3d214270
   \   00000100   ........           BL       __aeabi_fmul
   \   00000104   4014A0E3           MOV      R1,#+1073741824
   \   00000108   ........           BL       __aeabi_fmul
   \   0000010C   4014A0E3           MOV      R1,#+1073741824
   \   00000110   B21781E3           ORR      R1,R1,#0x2C80000
   \   00000114   ........           BL       __aeabi_fdiv
   \   00000118   0040A0E1           MOV      R4,R0
   \   0000011C   5C0095E5           LDR      R0,[R5, #+92]
   \   00000120   ........           BL       __aeabi_i2f
   \   00000124   0410A0E1           MOV      R1,R4
   \   00000128   ........           BL       __aeabi_fadd
   \   0000012C   ........           BL       __aeabi_f2d
   \   00000130   0020A0E1           MOV      R2,R0
   \   00000134   0130A0E1           MOV      R3,R1
   \   00000138   ........           ADR      R0,??DataTable110_3
   \   0000013C   030090E8           LDM      R0,{R0,R1}
   \   00000140   ........           BL       __aeabi_dmul
   \   00000144   ........           BL       __aeabi_d2f
   \   00000148   540085E5           STR      R0,[R5, #+84]
    526          					break;
   \   0000014C   100000EA           B        ??TireSizeScreenCallback_3
    527          				case ASPECT_RATIO_WHEEL:
    528          					vehicleData.aspectRatio = ASPECT_RATIO_START - ((Sel = LISTWHEEL_GetPos(pMsg->hWinSrc)) * 5);
   \                     ??TireSizeScreenCallback_5:
   \   00000150   080094E5           LDR      R0,[R4, #+8]
   \   00000154   ........           BL       LISTWHEEL_GetPos
   \   00000158   0010A0E1           MOV      R1,R0
   \   0000015C   ........           LDR      R5,??DataTable112_2
   \   00000160   010181E0           ADD      R0,R1,R1, LSL #+2
   \   00000164   500060E2           RSB      R0,R0,#+80
   \   00000168   600085E5           STR      R0,[R5, #+96]
    529          					LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   0000016C   DAFFFFEA           B        ??TireSizeScreenCallback_7
    530          					UpdateTireCircumference();
    531          					break;
    532          				case WHEEL_DIAMETER_WHEEL:
    533          					vehicleData.wheelDiameter = WHEEL_DIAMETER_START - (Sel = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??TireSizeScreenCallback_6:
   \   00000170   080094E5           LDR      R0,[R4, #+8]
   \   00000174   ........           BL       LISTWHEEL_GetPos
   \   00000178   ........           LDR      R5,??DataTable112_2
   \   0000017C   141060E2           RSB      R1,R0,#+20
   \   00000180   5C1085E5           STR      R1,[R5, #+92]
    534          					LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   00000184   0010A0E1           MOV      R1,R0
   \   00000188   D3FFFFEA           B        ??TireSizeScreenCallback_7
    535          					UpdateTireCircumference();
    536          					break;
    537          				}
    538          			}
    539          			break;
    540          
    541          		default:
    542          			WM_DefaultProc(pMsg);
   \                     ??TireSizeScreenCallback_2:
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   ........           BL       WM_DefaultProc
    543          		};
    544          		break;
    545          
    546          	default:
    547          		WM_DefaultProc(pMsg);
    548          	};
    549          }
   \                     ??TireSizeScreenCallback_3:
   \   00000194   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000198   3080BDE8           POP      {R4,R5,PC}       ;; return
    550          

   \                                 In section .text, align 4, keep-with-next
    551          void UpdateTireCircumference(void)
    552          {
   \                     UpdateTireCircumference:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    553          	vehicleData.userEnteredTireDimensions = true;
   \   00000004   ........           LDR      R4,??DataTable112_2
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   6400C4E5           STRB     R0,[R4, #+100]
    554          	vehicleData.tireCircumference = ((vehicleData.treadWidth * vehicleData.aspectRatio * MILLIMETERS_TO_INCHES * 2 / 100) + vehicleData.wheelDiameter) * PI;
   \   00000010   580094E5           LDR      R0,[R4, #+88]
   \   00000014   601094E5           LDR      R1,[R4, #+96]
   \   00000018   910000E0           MUL      R0,R1,R0
   \   0000001C   ........           BL       __aeabi_i2f
   \   00000020   ........           LDR      R1,??DataTable117  ;; 0x3d214270
   \   00000024   ........           BL       __aeabi_fmul
   \   00000028   4014A0E3           MOV      R1,#+1073741824
   \   0000002C   ........           BL       __aeabi_fmul
   \   00000030   4014A0E3           MOV      R1,#+1073741824
   \   00000034   B21781E3           ORR      R1,R1,#0x2C80000
   \   00000038   ........           BL       __aeabi_fdiv
   \   0000003C   0050A0E1           MOV      R5,R0
   \   00000040   5C0094E5           LDR      R0,[R4, #+92]
   \   00000044   ........           BL       __aeabi_i2f
   \   00000048   0510A0E1           MOV      R1,R5
   \   0000004C   ........           BL       __aeabi_fadd
   \   00000050   ........           BL       __aeabi_f2d
   \   00000054   0020A0E1           MOV      R2,R0
   \   00000058   0130A0E1           MOV      R3,R1
   \   0000005C   ........           ADR      R0,??DataTable110_3
   \   00000060   030090E8           LDM      R0,{R0,R1}
   \   00000064   ........           BL       __aeabi_dmul
   \   00000068   ........           BL       __aeabi_d2f
   \   0000006C   540084E5           STR      R0,[R4, #+84]
    555          }
   \   00000070   3080BDE8           POP      {R4,R5,PC}       ;; return
    556          
    557          

   \                                 In section .text, align 4, keep-with-next
    558          void DisplayTireSizeSelection(WM_HWIN hParent)
    559          {
   \                     DisplayTireSizeSelection:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   10D04DE2           SUB      SP,SP,#+16
    560          	BUTTON_SetDefaultFont(&GUI_Font24B_ASCII);
   \   0000000C   ........           LDR      R0,??DataTable117_1
   \   00000010   ........           BL       BUTTON_SetDefaultFont
    561          
    562          	hTireDimensionButton = BUTTON_CreateEx(BUTTON_LEFT, 174, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, TIRE_DIMENSIONS_BUTTON);
   \   00000014   0A00A0E3           MOV      R0,#+10
   \   00000018   800E80E3           ORR      R0,R0,#0x800
   \   0000001C   0C008DE5           STR      R0,[SP, #+12]
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   08008DE5           STR      R0,[SP, #+8]
   \   00000028   0250A0E3           MOV      R5,#+2
   \   0000002C   0200A0E3           MOV      R0,#+2
   \   00000030   405F85E3           ORR      R5,R5,#0x100
   \   00000034   04008DE5           STR      R0,[SP, #+4]
   \   00000038   00408DE5           STR      R4,[SP, #+0]
   \   0000003C   2730A0E3           MOV      R3,#+39
   \   00000040   CA20A0E3           MOV      R2,#+202
   \   00000044   AE10A0E3           MOV      R1,#+174
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           BL       BUTTON_CreateEx
   \   00000050   ........           LDR      R6,??DataTable117_2
    563          	BUTTON_SetBitmap(hTireDimensionButton, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   00000054   ........           LDR      R2,??DataTable117_3
   \   00000058   000086E5           STR      R0,[R6, #+0]
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   ........           BL       BUTTON_SetBitmap
    564          	BUTTON_SetText(hTireDimensionButton, "Tire Size");
   \   00000064   ............       ADRL     R1,`?<Constant "Tire Size">`
   \              ....        
   \   0000006C   000096E5           LDR      R0,[R6, #+0]
   \   00000070   ........           BL       BUTTON_SetText
    565          	BUTTON_SetTextColor(hTireDimensionButton, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000074   0020A0E3           MOV      R2,#+0
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   000096E5           LDR      R0,[R6, #+0]
   \   00000080   ........           BL       BUTTON_SetTextColor
    566          
    567          	hTireCircumferenceButton = BUTTON_CreateEx(BUTTON_LEFT, 218, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, TIRE_CIRCUMFERENCE_BUTTON);
   \   00000084   0100A0E3           MOV      R0,#+1
   \   00000088   800E80E3           ORR      R0,R0,#0x800
   \   0000008C   0C008DE5           STR      R0,[SP, #+12]
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   08008DE5           STR      R0,[SP, #+8]
   \   00000098   0200A0E3           MOV      R0,#+2
   \   0000009C   04008DE5           STR      R0,[SP, #+4]
   \   000000A0   00408DE5           STR      R4,[SP, #+0]
   \   000000A4   2730A0E3           MOV      R3,#+39
   \   000000A8   CA20A0E3           MOV      R2,#+202
   \   000000AC   DA10A0E3           MOV      R1,#+218
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   ........           BL       BUTTON_CreateEx
   \   000000B8   040086E5           STR      R0,[R6, #+4]
    568          	BUTTON_SetBitmap(hTireCircumferenceButton, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   000000BC   ........           LDR      R2,??DataTable117_4
   \   000000C0   0010A0E3           MOV      R1,#+0
   \   000000C4   ........           BL       BUTTON_SetBitmap
    569          	BUTTON_SetText(hTireCircumferenceButton, "Tire Circumference");
   \   000000C8   ............       ADRL     R1,`?<Constant "Tire Circumference">`
   \              ....        
   \   000000D0   040096E5           LDR      R0,[R6, #+4]
   \   000000D4   ........           BL       BUTTON_SetText
    570          	BUTTON_SetTextColor(hTireCircumferenceButton, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   000000D8   040096E5           LDR      R0,[R6, #+4]
   \   000000DC   10D08DE2           ADD      SP,SP,#+16
   \   000000E0   7040BDE8           POP      {R4-R6,LR}
   \   000000E4   FF24E0E3           MVN      R2,#-16777216
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   ........           B        BUTTON_SetTextColor  ;; tailcall
    571          }
    572          

   \                                 In section .text, align 4, keep-with-next
    573          void DisplayDiffRatio(WM_HWIN hParent)
    574          {
   \                     DisplayDiffRatio:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    575          	int hundreds, tens, ones, temp;
    576          
    577          	temp = (int)((vehicleData.diffRatio * 100.0) + 0.5);
   \   00000008   ........           LDR      R0,??DataTable112_2
   \   0000000C   30D04DE2           SUB      SP,SP,#+48
   \   00000010   500090E5           LDR      R0,[R0, #+80]
   \   00000014   ........           BL       __aeabi_f2d
   \   00000018   0130A0E1           MOV      R3,R1
   \   0000001C   0020A0E1           MOV      R2,R0
   \   00000020   4014A0E3           MOV      R1,#+1073741824
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   591881E3           ORR      R1,R1,#0x590000
   \   0000002C   ........           BL       __aeabi_dmul
   \   00000030   0130A0E1           MOV      R3,R1
   \   00000034   0020A0E1           MOV      R2,R0
   \   00000038   C015A0E3           MOV      R1,#+805306368
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   FE1681E3           ORR      R1,R1,#0xFE00000
   \   00000044   ........           BL       __aeabi_dadd
   \   00000048   ........           BL       __aeabi_d2iz
    578          	hundreds = temp / 100;
    579          	tens = (temp / 10) % 10;
   \   0000004C   ........           LDR      R1,??DataTable116_4  ;; 0x66666667
    580          	ones = temp % 10;
    581          	DisplayTripleListScreen(hParent,
    582          		ZeroThroughNine, DIFF_WHEEL_1, &hDiffWheel1, hundreds,
    583          		ZeroThroughNine, DIFF_WHEEL_2, &hDiffWheel2, tens,
    584          		ZeroThroughNine, DIFF_WHEEL_3, &hDiffWheel3, ones,
    585          		"Select Diff Ratio",
    586          		0, 0);
   \   00000050   00C0A0E3           MOV      R12,#+0
   \   00000054   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000058   2CC08DE5           STR      R12,[SP, #+44]
   \   0000005C   28C08DE5           STR      R12,[SP, #+40]
   \   00000060   ............       ADRL     R12,`?<Constant "Select Diff Ratio">`
   \              ....        
   \   00000068   4131B0E1           ASRS     R3,R1,#+2
   \   0000006C   01308342           ADDMI    R3,R3,#+1
   \   00000070   0A20A0E3           MOV      R2,#+10
   \   00000074   24C08DE5           STR      R12,[SP, #+36]
   \   00000078   92030CE0           MUL      R12,R2,R3
   \   0000007C   ........           LDR      R1,??DataTable110_4
   \   00000080   0CC040E0           SUB      R12,R0,R12
   \   00000084   20C08DE5           STR      R12,[SP, #+32]
   \   00000088   6CC081E2           ADD      R12,R1,#+108
   \   0000008C   1CC08DE5           STR      R12,[SP, #+28]
   \   00000090   97CF82E2           ADD      R12,R2,#+604
   \   00000094   18C08DE5           STR      R12,[SP, #+24]
   \   00000098   7CC081E2           ADD      R12,R1,#+124
   \   0000009C   14C08DE5           STR      R12,[SP, #+20]
   \   000000A0   ........           LDR      R12,??DataTable116_4  ;; 0x66666667
   \   000000A4   93ECCCE0           SMULL    LR,R12,R3,R12
   \   000000A8   4CC1B0E1           ASRS     R12,R12,#+2
   \   000000AC   01C08C42           ADDMI    R12,R12,#+1
   \   000000B0   920C0CE0           MUL      R12,R2,R12
   \   000000B4   0C2043E0           SUB      R2,R3,R12
   \   000000B8   10208DE5           STR      R2,[SP, #+16]
   \   000000BC   682081E2           ADD      R2,R1,#+104
   \   000000C0   0C208DE5           STR      R2,[SP, #+12]
   \   000000C4   6520A0E3           MOV      R2,#+101
   \   000000C8   802F82E3           ORR      R2,R2,#0x200
   \   000000CC   08208DE5           STR      R2,[SP, #+8]
   \   000000D0   7C2081E2           ADD      R2,R1,#+124
   \   000000D4   04208DE5           STR      R2,[SP, #+4]
   \   000000D8   ........           LDR      R2,??DataTable117_5  ;; 0x51eb851f
   \   000000DC   9032C2E0           SMULL    R3,R2,R0,R2
   \   000000E0   643081E2           ADD      R3,R1,#+100
   \   000000E4   C202B0E1           ASRS     R0,R2,#+5
   \   000000E8   01008042           ADDMI    R0,R0,#+1
   \   000000EC   00008DE5           STR      R0,[SP, #+0]
   \   000000F0   992FA0E3           MOV      R2,#+612
   \   000000F4   7C1081E2           ADD      R1,R1,#+124
   \   000000F8   0400A0E1           MOV      R0,R4
   \   000000FC   ........           BL       DisplayTripleListScreen
    587          }
   \   00000100   30D08DE2           ADD      SP,SP,#+48       ;; stack cleaning
   \   00000104   1080BDE8           POP      {R4,PC}          ;; return
    588          

   \                                 In section .text, align 4, keep-with-next
    589          void DisplayTransRatio(WM_HWIN hParent)
    590          {
   \                     DisplayTransRatio:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0080A0E1           MOV      R8,R0
   \   00000008   A4D04DE2           SUB      SP,SP,#+164
    591          	BUTTON_SetDefaultFont(&GUI_Font24B_ASCII);
   \   0000000C   ........           LDR      R0,??DataTable117_1
   \   00000010   ........           BL       BUTTON_SetDefaultFont
    592          	BUTTON_SetDefaultBkColor(GUI_BLACK, BUTTON_BI_UNPRESSED);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   ........           BL       BUTTON_SetDefaultBkColor
    593          	BUTTON_SetDefaultTextColor(GUI_GREEN, BUTTON_BI_UNPRESSED);
   \   00000020   0010A0E3           MOV      R1,#+0
   \   00000024   FF0CA0E3           MOV      R0,#+65280
   \   00000028   ........           BL       BUTTON_SetDefaultTextColor
    594          	BUTTON_SetDefaultTextColor(GUI_RED, BUTTON_BI_PRESSED);
   \   0000002C   0110A0E3           MOV      R1,#+1
   \   00000030   FF00A0E3           MOV      R0,#+255
   \   00000034   ........           BL       BUTTON_SetDefaultTextColor
    595          
    596          	hGearButton[0] = BUTTON_CreateEx(30, 50, 119, 45, hParent, WM_CF_SHOW, 0, FIRST_BUTTON);
   \   00000038   0200A0E3           MOV      R0,#+2
   \   0000003C   800E80E3           ORR      R0,R0,#0x800
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   08008DE5           STR      R0,[SP, #+8]
   \   0000004C   0200A0E3           MOV      R0,#+2
   \   00000050   04008DE5           STR      R0,[SP, #+4]
   \   00000054   00808DE5           STR      R8,[SP, #+0]
   \   00000058   2D30A0E3           MOV      R3,#+45
   \   0000005C   7720A0E3           MOV      R2,#+119
   \   00000060   3210A0E3           MOV      R1,#+50
   \   00000064   1E00A0E3           MOV      R0,#+30
   \   00000068   ........           BL       BUTTON_CreateEx
   \   0000006C   ........           LDR      R4,??DataTable114
    597          	BUTTON_SetBitmap(hGearButton[0], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   00000070   ........           LDR      R5,??DataTable117_6
   \   00000074   000084E5           STR      R0,[R4, #+0]
   \   00000078   0520A0E1           MOV      R2,R5
   \   0000007C   0010A0E3           MOV      R1,#+0
   \   00000080   ........           BL       BUTTON_SetBitmap
    598          	SetGearButtonText(0);
   \   00000084   ........           LDR      R7,??DataTable112_2
   \   00000088   ........           ADR      R6,??DataTable112  ;; 0x25, 0x66, 0x00, 0x00
   \   0000008C   300097E5           LDR      R0,[R7, #+48]
   \   00000090   ........           BL       __aeabi_f2d
   \   00000094   0020A0E1           MOV      R2,R0
   \   00000098   0130A0E1           MOV      R3,R1
   \   0000009C   0610A0E1           MOV      R1,R6
   \   000000A0   8C008DE2           ADD      R0,SP,#+140
   \   000000A4   ........           BL       sprintf
   \   000000A8   8C008DE2           ADD      R0,SP,#+140
   \   000000AC   ........           BL       trim
   \   000000B0   8C108DE2           ADD      R1,SP,#+140
   \   000000B4   000094E5           LDR      R0,[R4, #+0]
   \   000000B8   ........           BL       BUTTON_SetText
    599          
    600          	hGearButton[1] = BUTTON_CreateEx(180, 50, 119, 45, hParent, WM_CF_SHOW, 0, SECOND_BUTTON);
   \   000000BC   0300A0E3           MOV      R0,#+3
   \   000000C0   800E80E3           ORR      R0,R0,#0x800
   \   000000C4   0C008DE5           STR      R0,[SP, #+12]
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   08008DE5           STR      R0,[SP, #+8]
   \   000000D0   0200A0E3           MOV      R0,#+2
   \   000000D4   04008DE5           STR      R0,[SP, #+4]
   \   000000D8   00808DE5           STR      R8,[SP, #+0]
   \   000000DC   2D30A0E3           MOV      R3,#+45
   \   000000E0   7720A0E3           MOV      R2,#+119
   \   000000E4   3210A0E3           MOV      R1,#+50
   \   000000E8   B400A0E3           MOV      R0,#+180
   \   000000EC   ........           BL       BUTTON_CreateEx
   \   000000F0   040084E5           STR      R0,[R4, #+4]
    601          	BUTTON_SetBitmap(hGearButton[1], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   000000F4   0520A0E1           MOV      R2,R5
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   ........           BL       BUTTON_SetBitmap
    602          	SetGearButtonText(1);
   \   00000100   340097E5           LDR      R0,[R7, #+52]
   \   00000104   ........           BL       __aeabi_f2d
   \   00000108   0020A0E1           MOV      R2,R0
   \   0000010C   0130A0E1           MOV      R3,R1
   \   00000110   0610A0E1           MOV      R1,R6
   \   00000114   78008DE2           ADD      R0,SP,#+120
   \   00000118   ........           BL       sprintf
   \   0000011C   78008DE2           ADD      R0,SP,#+120
   \   00000120   ........           BL       trim
   \   00000124   78108DE2           ADD      R1,SP,#+120
   \   00000128   040094E5           LDR      R0,[R4, #+4]
   \   0000012C   ........           BL       BUTTON_SetText
    603          
    604          	hGearButton[2] = BUTTON_CreateEx(330, 50, 119, 45, hParent, WM_CF_SHOW, 0, THIRD_BUTTON);
   \   00000130   0400A0E3           MOV      R0,#+4
   \   00000134   800E80E3           ORR      R0,R0,#0x800
   \   00000138   0C008DE5           STR      R0,[SP, #+12]
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   08008DE5           STR      R0,[SP, #+8]
   \   00000144   4A90A0E3           MOV      R9,#+74
   \   00000148   0200A0E3           MOV      R0,#+2
   \   0000014C   409F89E3           ORR      R9,R9,#0x100
   \   00000150   04008DE5           STR      R0,[SP, #+4]
   \   00000154   00808DE5           STR      R8,[SP, #+0]
   \   00000158   2D30A0E3           MOV      R3,#+45
   \   0000015C   7720A0E3           MOV      R2,#+119
   \   00000160   3210A0E3           MOV      R1,#+50
   \   00000164   0900A0E1           MOV      R0,R9
   \   00000168   ........           BL       BUTTON_CreateEx
   \   0000016C   080084E5           STR      R0,[R4, #+8]
    605          	BUTTON_SetBitmap(hGearButton[2], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   00000170   0520A0E1           MOV      R2,R5
   \   00000174   0010A0E3           MOV      R1,#+0
   \   00000178   ........           BL       BUTTON_SetBitmap
    606          	SetGearButtonText(2);
   \   0000017C   380097E5           LDR      R0,[R7, #+56]
   \   00000180   ........           BL       __aeabi_f2d
   \   00000184   0020A0E1           MOV      R2,R0
   \   00000188   0130A0E1           MOV      R3,R1
   \   0000018C   0610A0E1           MOV      R1,R6
   \   00000190   64008DE2           ADD      R0,SP,#+100
   \   00000194   ........           BL       sprintf
   \   00000198   64008DE2           ADD      R0,SP,#+100
   \   0000019C   ........           BL       trim
   \   000001A0   64108DE2           ADD      R1,SP,#+100
   \   000001A4   080094E5           LDR      R0,[R4, #+8]
   \   000001A8   ........           BL       BUTTON_SetText
    607          
    608          	hGearButton[3] = BUTTON_CreateEx(30, 120, 119, 45, hParent, WM_CF_SHOW, 0, FORTH_BUTTON);
   \   000001AC   0500A0E3           MOV      R0,#+5
   \   000001B0   800E80E3           ORR      R0,R0,#0x800
   \   000001B4   0C008DE5           STR      R0,[SP, #+12]
   \   000001B8   0000A0E3           MOV      R0,#+0
   \   000001BC   08008DE5           STR      R0,[SP, #+8]
   \   000001C0   0200A0E3           MOV      R0,#+2
   \   000001C4   04008DE5           STR      R0,[SP, #+4]
   \   000001C8   00808DE5           STR      R8,[SP, #+0]
   \   000001CC   2D30A0E3           MOV      R3,#+45
   \   000001D0   7720A0E3           MOV      R2,#+119
   \   000001D4   7810A0E3           MOV      R1,#+120
   \   000001D8   1E00A0E3           MOV      R0,#+30
   \   000001DC   ........           BL       BUTTON_CreateEx
   \   000001E0   0C0084E5           STR      R0,[R4, #+12]
    609          	BUTTON_SetBitmap(hGearButton[3], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   000001E4   0520A0E1           MOV      R2,R5
   \   000001E8   0010A0E3           MOV      R1,#+0
   \   000001EC   ........           BL       BUTTON_SetBitmap
    610          	SetGearButtonText(3);
   \   000001F0   3C0097E5           LDR      R0,[R7, #+60]
   \   000001F4   ........           BL       __aeabi_f2d
   \   000001F8   0020A0E1           MOV      R2,R0
   \   000001FC   0130A0E1           MOV      R3,R1
   \   00000200   0610A0E1           MOV      R1,R6
   \   00000204   50008DE2           ADD      R0,SP,#+80
   \   00000208   ........           BL       sprintf
   \   0000020C   50008DE2           ADD      R0,SP,#+80
   \   00000210   ........           BL       trim
   \   00000214   50108DE2           ADD      R1,SP,#+80
   \   00000218   0C0094E5           LDR      R0,[R4, #+12]
   \   0000021C   ........           BL       BUTTON_SetText
    611          
    612          	hGearButton[4] = BUTTON_CreateEx(180, 120, 119, 45, hParent, WM_CF_SHOW, 0, FIFTH_BUTTON);
   \   00000220   0600A0E3           MOV      R0,#+6
   \   00000224   800E80E3           ORR      R0,R0,#0x800
   \   00000228   0C008DE5           STR      R0,[SP, #+12]
   \   0000022C   0000A0E3           MOV      R0,#+0
   \   00000230   08008DE5           STR      R0,[SP, #+8]
   \   00000234   0200A0E3           MOV      R0,#+2
   \   00000238   04008DE5           STR      R0,[SP, #+4]
   \   0000023C   00808DE5           STR      R8,[SP, #+0]
   \   00000240   2D30A0E3           MOV      R3,#+45
   \   00000244   7720A0E3           MOV      R2,#+119
   \   00000248   7810A0E3           MOV      R1,#+120
   \   0000024C   B400A0E3           MOV      R0,#+180
   \   00000250   ........           BL       BUTTON_CreateEx
   \   00000254   100084E5           STR      R0,[R4, #+16]
    613          	BUTTON_SetBitmap(hGearButton[4], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   00000258   0520A0E1           MOV      R2,R5
   \   0000025C   0010A0E3           MOV      R1,#+0
   \   00000260   ........           BL       BUTTON_SetBitmap
    614          	SetGearButtonText(4);
   \   00000264   400097E5           LDR      R0,[R7, #+64]
   \   00000268   ........           BL       __aeabi_f2d
   \   0000026C   0020A0E1           MOV      R2,R0
   \   00000270   0130A0E1           MOV      R3,R1
   \   00000274   0610A0E1           MOV      R1,R6
   \   00000278   3C008DE2           ADD      R0,SP,#+60
   \   0000027C   ........           BL       sprintf
   \   00000280   3C008DE2           ADD      R0,SP,#+60
   \   00000284   ........           BL       trim
   \   00000288   3C108DE2           ADD      R1,SP,#+60
   \   0000028C   100094E5           LDR      R0,[R4, #+16]
   \   00000290   ........           BL       BUTTON_SetText
    615          
    616          	hGearButton[5] = BUTTON_CreateEx(330, 120, 119, 45, hParent, WM_CF_SHOW, 0, SIXTH_BUTTON);
   \   00000294   0700A0E3           MOV      R0,#+7
   \   00000298   800E80E3           ORR      R0,R0,#0x800
   \   0000029C   0C008DE5           STR      R0,[SP, #+12]
   \   000002A0   0000A0E3           MOV      R0,#+0
   \   000002A4   08008DE5           STR      R0,[SP, #+8]
   \   000002A8   0200A0E3           MOV      R0,#+2
   \   000002AC   04008DE5           STR      R0,[SP, #+4]
   \   000002B0   00808DE5           STR      R8,[SP, #+0]
   \   000002B4   2D30A0E3           MOV      R3,#+45
   \   000002B8   7720A0E3           MOV      R2,#+119
   \   000002BC   7810A0E3           MOV      R1,#+120
   \   000002C0   0900A0E1           MOV      R0,R9
   \   000002C4   ........           BL       BUTTON_CreateEx
   \   000002C8   140084E5           STR      R0,[R4, #+20]
    617          	BUTTON_SetBitmap(hGearButton[5], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   000002CC   0520A0E1           MOV      R2,R5
   \   000002D0   0010A0E3           MOV      R1,#+0
   \   000002D4   ........           BL       BUTTON_SetBitmap
    618          	SetGearButtonText(5);
   \   000002D8   440097E5           LDR      R0,[R7, #+68]
   \   000002DC   ........           BL       __aeabi_f2d
   \   000002E0   0020A0E1           MOV      R2,R0
   \   000002E4   0130A0E1           MOV      R3,R1
   \   000002E8   0610A0E1           MOV      R1,R6
   \   000002EC   28008DE2           ADD      R0,SP,#+40
   \   000002F0   ........           BL       sprintf
   \   000002F4   28008DE2           ADD      R0,SP,#+40
   \   000002F8   ........           BL       trim
   \   000002FC   28108DE2           ADD      R1,SP,#+40
   \   00000300   140094E5           LDR      R0,[R4, #+20]
   \   00000304   ........           BL       BUTTON_SetText
    619          
    620          	hGearButton[6] = BUTTON_CreateEx(30, 190, 119, 45, hParent, WM_CF_SHOW, 0, SEVENTH_BUTTON);
   \   00000308   0800A0E3           MOV      R0,#+8
   \   0000030C   800E80E3           ORR      R0,R0,#0x800
   \   00000310   0C008DE5           STR      R0,[SP, #+12]
   \   00000314   0000A0E3           MOV      R0,#+0
   \   00000318   08008DE5           STR      R0,[SP, #+8]
   \   0000031C   0200A0E3           MOV      R0,#+2
   \   00000320   04008DE5           STR      R0,[SP, #+4]
   \   00000324   00808DE5           STR      R8,[SP, #+0]
   \   00000328   2D30A0E3           MOV      R3,#+45
   \   0000032C   7720A0E3           MOV      R2,#+119
   \   00000330   BE10A0E3           MOV      R1,#+190
   \   00000334   1E00A0E3           MOV      R0,#+30
   \   00000338   ........           BL       BUTTON_CreateEx
   \   0000033C   180084E5           STR      R0,[R4, #+24]
    621          	BUTTON_SetBitmap(hGearButton[6], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   00000340   0520A0E1           MOV      R2,R5
   \   00000344   0010A0E3           MOV      R1,#+0
   \   00000348   ........           BL       BUTTON_SetBitmap
    622          	SetGearButtonText(6);
   \   0000034C   480097E5           LDR      R0,[R7, #+72]
   \   00000350   ........           BL       __aeabi_f2d
   \   00000354   0020A0E1           MOV      R2,R0
   \   00000358   0130A0E1           MOV      R3,R1
   \   0000035C   0610A0E1           MOV      R1,R6
   \   00000360   14008DE2           ADD      R0,SP,#+20
   \   00000364   ........           BL       sprintf
   \   00000368   14008DE2           ADD      R0,SP,#+20
   \   0000036C   ........           BL       trim
   \   00000370   14108DE2           ADD      R1,SP,#+20
   \   00000374   180094E5           LDR      R0,[R4, #+24]
   \   00000378   ........           BL       BUTTON_SetText
    623          
    624          	hGearButton[7] = BUTTON_CreateEx(180, 190, 119, 45, hParent, WM_CF_SHOW, 0, EIGHTH_BUTTON);
   \   0000037C   0900A0E3           MOV      R0,#+9
   \   00000380   800E80E3           ORR      R0,R0,#0x800
   \   00000384   0C008DE5           STR      R0,[SP, #+12]
   \   00000388   0000A0E3           MOV      R0,#+0
   \   0000038C   08008DE5           STR      R0,[SP, #+8]
   \   00000390   0200A0E3           MOV      R0,#+2
   \   00000394   04008DE5           STR      R0,[SP, #+4]
   \   00000398   00808DE5           STR      R8,[SP, #+0]
   \   0000039C   2D30A0E3           MOV      R3,#+45
   \   000003A0   7720A0E3           MOV      R2,#+119
   \   000003A4   BE10A0E3           MOV      R1,#+190
   \   000003A8   B400A0E3           MOV      R0,#+180
   \   000003AC   ........           BL       BUTTON_CreateEx
   \   000003B0   1C0084E5           STR      R0,[R4, #+28]
    625          	BUTTON_SetBitmap(hGearButton[7], BUTTON_BI_UNPRESSED, &bmGearRatioButton);
   \   000003B4   0520A0E1           MOV      R2,R5
   \   000003B8   0010A0E3           MOV      R1,#+0
   \   000003BC   ........           BL       BUTTON_SetBitmap
    626          	SetGearButtonText(7);
   \   000003C0   4C0097E5           LDR      R0,[R7, #+76]
   \   000003C4   ........           BL       __aeabi_f2d
   \   000003C8   0020A0E1           MOV      R2,R0
   \   000003CC   0130A0E1           MOV      R3,R1
   \   000003D0   0610A0E1           MOV      R1,R6
   \   000003D4   0D00A0E1           MOV      R0,SP
   \   000003D8   ........           BL       sprintf
   \   000003DC   0D00A0E1           MOV      R0,SP
   \   000003E0   ........           BL       trim
   \   000003E4   0D10A0E1           MOV      R1,SP
   \   000003E8   1C0094E5           LDR      R0,[R4, #+28]
   \   000003EC   ........           BL       BUTTON_SetText
    627          
    628          	buttonsCreated = true;
   \   000003F0   0100A0E3           MOV      R0,#+1
   \   000003F4   7800C4E5           STRB     R0,[R4, #+120]
    629          }
   \   000003F8   A4D08DE2           ADD      SP,SP,#+164
   \   000003FC   F083BDE8           POP      {R4-R9,PC}       ;; return
    630          

   \                                 In section .text, align 4, keep-with-next
    631          void SetGearButtonText(int index)
    632          {
   \                     SetGearButtonText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    633          	char scratch[20];
    634          
    635          	sprintf(scratch, "%f", vehicleData.gearRatios[index]);
   \   00000008   ........           LDR      R0,??DataTable112_2
   \   0000000C   18D04DE2           SUB      SP,SP,#+24
   \   00000010   040180E0           ADD      R0,R0,R4, LSL #+2
   \   00000014   300090E5           LDR      R0,[R0, #+48]
   \   00000018   ........           BL       __aeabi_f2d
   \   0000001C   0020A0E1           MOV      R2,R0
   \   00000020   0130A0E1           MOV      R3,R1
   \   00000024   ........           ADR      R1,??DataTable112  ;; 0x25, 0x66, 0x00, 0x00
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       sprintf
    636          	trim(scratch);
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           BL       trim
    637          	BUTTON_SetText(hGearButton[index], scratch);
   \   00000038   ........           LDR      R0,??DataTable114
   \   0000003C   0D10A0E1           MOV      R1,SP
   \   00000040   040190E7           LDR      R0,[R0, +R4, LSL #+2]
   \   00000044   ........           BL       BUTTON_SetText
    638          }
   \   00000048   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
    639          
    640          

   \                                 In section .text, align 4, keep-with-next
    641          void DisplayHelp(WM_HWIN hParent)
    642          {
    643          }
   \                     DisplayHelp:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    644          
    645          

   \                                 In section .text, align 4, keep-with-next
    646          void TireSizePaint(WM_HWIN hParent)
    647          {
   \                     TireSizePaint:
   \   00000000   10402DE9           PUSH     {R4,LR}
    648          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   00000004   0200A0E3           MOV      R0,#+2
   \   00000008   ........           BL       GUI_SetTextMode
    649          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           LDR      R0,??DataTable117_7
   \   00000018   ........           BL       GUI_DrawBitmap
    650          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_1, 49);
   \   0000001C   ........           LDR      R4,??DataTable117_8
   \   00000020   3120A0E3           MOV      R2,#+49
   \   00000024   E110A0E3           MOV      R1,#+225
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       GUI_DrawBitmap
    651          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_2, 49);
   \   00000030   3120A0E3           MOV      R2,#+49
   \   00000034   4C1FA0E3           MOV      R1,#+304
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       GUI_DrawBitmap
    652          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_3, 49);
   \   00000040   7F10A0E3           MOV      R1,#+127
   \   00000044   3120A0E3           MOV      R2,#+49
   \   00000048   401F81E3           ORR      R1,R1,#0x100
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           BL       GUI_DrawBitmap
    653          	GUI_DrawBitmap(&bmTireSize, 60, 0);
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   3C10A0E3           MOV      R1,#+60
   \   0000005C   ........           LDR      R0,??DataTable117_9
   \   00000060   ........           BL       GUI_DrawBitmap
    654          
    655          	GUI_SetFont(&GUI_Font20_ASCII);
   \   00000064   ........           LDR      R0,??DataTable117_10
   \   00000068   ........           BL       GUI_SetFont
    656          	GUI_SetColor(GUI_GREEN);
   \   0000006C   FF0CA0E3           MOV      R0,#+65280
   \   00000070   ........           BL       GUI_SetColor
    657          	GUI_DispStringHCenterAt("ex = 205 / 50 x 15", TRIPLE_SPINNER_TEXT_START + (BUTTON_WIDTH / 2), 165);
   \   00000074   A520A0E3           MOV      R2,#+165
   \   00000078   7B10A0E3           MOV      R1,#+123
   \   0000007C   ............       ADRL     R0,`?<Constant "ex = 205 / 50 x 15">`
   \              ....        
   \   00000084   ........           BL       GUI_DispStringHCenterAt
    658          
    659          	// Draw characters "/" and "x" between spinners
    660          	GUI_SetColor(GUI_LIGHTBLUE);
   \   00000088   ........           LDR      R0,??DataTable117_11  ;; 0xff8080
   \   0000008C   ........           BL       GUI_SetColor
    661          	GUI_DispStringHCenterAt("/", TRIPLE_SPINNER_START_1 + 73, 140);
   \   00000090   8C20A0E3           MOV      R2,#+140
   \   00000094   9E1082E2           ADD      R1,R2,#+158
   \   00000098   ........           ADR      R0,??DataTable116  ;; "/"
   \   0000009C   ........           BL       GUI_DispStringHCenterAt
    662          	GUI_DispStringHCenterAt("x", TRIPLE_SPINNER_START_2 + 74, 138);
   \   000000A0   8A20A0E3           MOV      R2,#+138
   \   000000A4   F01082E2           ADD      R1,R2,#+240
   \   000000A8   ........           ADR      R0,??DataTable116_1  ;; "x"
   \   000000AC   ........           BL       GUI_DispStringHCenterAt
    663          
    664          	GUI_SetFont(&GUI_Font16_ASCII);
   \   000000B0   ........           LDR      R0,??DataTable117_12
   \   000000B4   ........           BL       GUI_SetFont
    665          	GUI_SetColor(GUI_WHITE);
   \   000000B8   FF04E0E3           MVN      R0,#-16777216
   \   000000BC   ........           BL       GUI_SetColor
    666          	GUI_DispStringHCenterAt("Width / Aspect Ratio x Rim Size", TRIPLE_SPINNER_TEXT_START + (BUTTON_WIDTH / 2), 190);
   \   000000C0   BE20A0E3           MOV      R2,#+190
   \   000000C4   7B10A0E3           MOV      R1,#+123
   \   000000C8   ............       ADRL     R0,`?<Constant "Width / Aspect Ratio ...">`
   \              ....        
   \   000000D0   ........           BL       GUI_DispStringHCenterAt
    667          
    668          	GUI_DrawBitmap(GetNavigationArrow(TIRESIZE_SCREEN), 0, 229);
   \   000000D4   E520A0E3           MOV      R2,#+229
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   ........           LDR      R0,??DataTable117_13
   \   000000E0   ........           BL       GUI_DrawBitmap
    669          	
    670          	DrawSignalStrength();
   \   000000E4   1040BDE8           POP      {R4,LR}
   \   000000E8   ........           B        DrawSignalStrength  ;; tailcall
    671          }
    672          

   \                                 In section .text, align 4, keep-with-next
    673          void DiffRatioPaint(WM_HWIN hParent)
    674          {
   \                     DiffRatioPaint:
   \   00000000   10402DE9           PUSH     {R4,LR}
    675          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   ........           LDR      R0,??DataTable117_7
   \   00000010   ........           BL       GUI_DrawBitmap
    676          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_1, 49);
   \   00000014   ........           LDR      R4,??DataTable117_8
   \   00000018   3120A0E3           MOV      R2,#+49
   \   0000001C   E110A0E3           MOV      R1,#+225
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_DrawBitmap
    677          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_2, 49);
   \   00000028   3120A0E3           MOV      R2,#+49
   \   0000002C   4C1FA0E3           MOV      R1,#+304
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       GUI_DrawBitmap
    678          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_3, 49);
   \   00000038   7F10A0E3           MOV      R1,#+127
   \   0000003C   3120A0E3           MOV      R2,#+49
   \   00000040   401F81E3           ORR      R1,R1,#0x100
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       GUI_DrawBitmap
    679          #if 1
    680          	GUI_DrawBitmap(&bmDiffRatio, 60, 0);
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   3C10A0E3           MOV      R1,#+60
   \   00000054   ........           LDR      R0,??DataTable117_14
   \   00000058   ........           BL       GUI_DrawBitmap
    681          #else
    682          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
    683          	GUI_SetFont(&GUI_Font24B_ASCII);
    684          	GUI_DispStringHCenterAt("Diff Ratio", XSIZE_PHYS/2, 4);
    685          #endif
    686          	// Draw "." between spinners
    687          	GUI_SetFont(&GUI_FontD32);
   \   0000005C   ........           LDR      R0,??DataTable117_15
   \   00000060   ........           BL       GUI_SetFont
    688          	GUI_SetColor(GUI_LIGHTBLUE);
   \   00000064   ........           LDR      R0,??DataTable117_11  ;; 0xff8080
   \   00000068   ........           BL       GUI_SetColor
    689          	GUI_DispStringHCenterAt(".", TRIPLE_SPINNER_START_2 - 5, 125);
   \   0000006C   7D20A0E3           MOV      R2,#+125
   \   00000070   AE1082E2           ADD      R1,R2,#+174
   \   00000074   ........           ADR      R0,??DataTable116_3  ;; "."
   \   00000078   ........           BL       GUI_DispStringHCenterAt
    690          
    691          	GUI_DrawBitmap(GetNavigationArrow(DIFFRATIO_SCREEN), 0, 229);
   \   0000007C   1040BDE8           POP      {R4,LR}
   \   00000080   E520A0E3           MOV      R2,#+229
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   ........           LDR      R0,??DataTable117_13
   \   0000008C   ........           B        GUI_DrawBitmap   ;; tailcall
    692          }
    693          

   \                                 In section .text, align 4, keep-with-next
    694          void TransRatioPaint(WM_HWIN hParent)
    695          {
   \                     TransRatioPaint:
   \   00000000   10402DE9           PUSH     {R4,LR}
    696          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   ........           LDR      R0,??DataTable117_7
   \   00000010   ........           BL       GUI_DrawBitmap
    697          #if 1
    698          	GUI_DrawBitmap(&bmTransRatio, 60, 0);
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   3C10A0E3           MOV      R1,#+60
   \   0000001C   ........           LDR      R0,??DataTable117_16
   \   00000020   ........           BL       GUI_DrawBitmap
    699          #else
    700          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
    701          	GUI_SetFont(&GUI_Font24B_ASCII);
    702          	GUI_DispStringHCenterAt("Trans Ratio", XSIZE_PHYS/2, 4);
    703          #endif
    704          
    705          
    706          	GUI_SetColor(GUI_WHITE);
   \   00000024   FF04E0E3           MVN      R0,#-16777216
   \   00000028   ........           BL       GUI_SetColor
    707          	GUI_SetFont(&GUI_Font20B_ASCII);
   \   0000002C   ........           LDR      R0,??DataTable117_17
   \   00000030   ........           BL       GUI_SetFont
    708          	GUI_SetTextMode(GUI_TM_TRANS);
   \   00000034   0200A0E3           MOV      R0,#+2
   \   00000038   ........           BL       GUI_SetTextMode
    709          	GUI_DispStringHCenterAt("1st Gear",  90, 95);
   \   0000003C   5F20A0E3           MOV      R2,#+95
   \   00000040   5A10A0E3           MOV      R1,#+90
   \   00000044   ............       ADRL     R0,`?<Constant "1st Gear">`
   \              ....        
   \   0000004C   ........           BL       GUI_DispStringHCenterAt
    710          	GUI_DispStringHCenterAt("2nd Gear", 240, 95);
   \   00000050   5F20A0E3           MOV      R2,#+95
   \   00000054   F010A0E3           MOV      R1,#+240
   \   00000058   ............       ADRL     R0,`?<Constant "2nd Gear">`
   \              ....        
   \   00000060   ........           BL       GUI_DispStringHCenterAt
    711          	GUI_DispStringHCenterAt("3rd Gear", 390, 95);
   \   00000064   8640A0E3           MOV      R4,#+134
   \   00000068   404F84E3           ORR      R4,R4,#0x100
   \   0000006C   5F20A0E3           MOV      R2,#+95
   \   00000070   0410A0E1           MOV      R1,R4
   \   00000074   ............       ADRL     R0,`?<Constant "3rd Gear">`
   \              ....        
   \   0000007C   ........           BL       GUI_DispStringHCenterAt
    712          	GUI_DispStringHCenterAt("4th Gear",  90, 166);
   \   00000080   A620A0E3           MOV      R2,#+166
   \   00000084   5A10A0E3           MOV      R1,#+90
   \   00000088   ............       ADRL     R0,`?<Constant "4th Gear">`
   \              ....        
   \   00000090   ........           BL       GUI_DispStringHCenterAt
    713          	GUI_DispStringHCenterAt("5th Gear", 240, 166);
   \   00000094   A620A0E3           MOV      R2,#+166
   \   00000098   F010A0E3           MOV      R1,#+240
   \   0000009C   ............       ADRL     R0,`?<Constant "5th Gear">`
   \              ....        
   \   000000A4   ........           BL       GUI_DispStringHCenterAt
    714          	GUI_DispStringHCenterAt("6th Gear", 390, 166);
   \   000000A8   A620A0E3           MOV      R2,#+166
   \   000000AC   0410A0E1           MOV      R1,R4
   \   000000B0   ............       ADRL     R0,`?<Constant "6th Gear">`
   \              ....        
   \   000000B8   ........           BL       GUI_DispStringHCenterAt
    715          	GUI_DispStringHCenterAt("7th Gear",  90, 236);
   \   000000BC   EC20A0E3           MOV      R2,#+236
   \   000000C0   5A10A0E3           MOV      R1,#+90
   \   000000C4   ............       ADRL     R0,`?<Constant "7th Gear">`
   \              ....        
   \   000000CC   ........           BL       GUI_DispStringHCenterAt
    716          	GUI_DispStringHCenterAt("8th Gear", 240, 236);
   \   000000D0   EC20A0E3           MOV      R2,#+236
   \   000000D4   F010A0E3           MOV      R1,#+240
   \   000000D8   ............       ADRL     R0,`?<Constant "8th Gear">`
   \              ....        
   \   000000E0   ........           BL       GUI_DispStringHCenterAt
    717          
    718          	GUI_SetColor(GUI_YELLOW);
   \   000000E4   FF00A0E3           MOV      R0,#+255
   \   000000E8   FF0C80E3           ORR      R0,R0,#0xFF00
   \   000000EC   ........           BL       GUI_SetColor
    719          	GUI_SetFont(&GUI_Font20_ASCII);
   \   000000F0   ........           LDR      R0,??DataTable117_10
   \   000000F4   ........           BL       GUI_SetFont
    720          	GUI_DispStringHCenterAt("Touch to Enter\nTransmission\nRatios", 390, 190);
   \   000000F8   BE20A0E3           MOV      R2,#+190
   \   000000FC   0410A0E1           MOV      R1,R4
   \   00000100   ............       ADRL     R0,`?<Constant "Touch to Enter\\nTransm...">`
   \              ....        
   \   00000108   ........           BL       GUI_DispStringHCenterAt
    721          
    722          	GUI_DrawBitmap(GetNavigationArrow(TRANSRATIO_SCREEN), 0, 229);
   \   0000010C   1040BDE8           POP      {R4,LR}
   \   00000110   E520A0E3           MOV      R2,#+229
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   ........           LDR      R0,??DataTable117_13
   \   0000011C   ........           B        GUI_DrawBitmap   ;; tailcall
    723          }
    724          
    725          #define	LINE_HEIGHT		15
    726          #define	PARA_1_START	70
    727          #define	PARA_2_START	205
    728          #define	LEFT_MARGIN		40
    729          

   \                                 In section .text, align 4, keep-with-next
    730          void HelpPaint(WM_HWIN hParent)
    731          {
   \                     HelpPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    732          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable117_7
   \   00000014   ........           BL       GUI_DrawBitmap
    733          	GUI_DrawBitmap(&bmHelp, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable117_18
   \   00000024   ........           BL       GUI_DrawBitmap
    734          
    735          	GUI_SetColor(GUI_WHITE);
   \   00000028   FF04E0E3           MVN      R0,#-16777216
   \   0000002C   ........           BL       GUI_SetColor
    736          	GUI_SetTextMode(GUI_TM_TRANS);
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   ........           BL       GUI_SetTextMode
    737          
    738          	GUI_SetFont(&GUI_Font16B_ASCII);
   \   00000038   ........           LDR      R0,??DataTable117_19
   \   0000003C   ........           BL       GUI_SetFont
    739          	GUI_DispStringAt("GEAR RATIOS AND TIRE SIZES", LEFT_MARGIN, 55);
   \   00000040   3720A0E3           MOV      R2,#+55
   \   00000044   2810A0E3           MOV      R1,#+40
   \   00000048   ............       ADRL     R0,`?<Constant "GEAR RATIOS AND TIRE ...">`
   \              ....        
   \   00000050   ........           BL       GUI_DispStringAt
    740          
    741          	GUI_SetFont(&GUI_Font16_ASCII);
   \   00000054   ........           LDR      R0,??DataTable117_12
   \   00000058   ........           BL       GUI_SetFont
    742          	GUI_DispStringAt("In order to determine which gear is selected in the vehicle the",			LEFT_MARGIN, PARA_1_START);
   \   0000005C   4620A0E3           MOV      R2,#+70
   \   00000060   2810A0E3           MOV      R1,#+40
   \   00000064   ............       ADRL     R0,`?<Constant "In order to determine...">`
   \              ....        
   \   0000006C   ........           BL       GUI_DispStringAt
    743          	GUI_DispStringAt("complete gearing information about the vehicle must be known.  This",		LEFT_MARGIN, PARA_1_START + LINE_HEIGHT);
   \   00000070   5520A0E3           MOV      R2,#+85
   \   00000074   2810A0E3           MOV      R1,#+40
   \   00000078   ............       ADRL     R0,`?<Constant "complete gearing info...">`
   \              ....        
   \   00000080   ........           BL       GUI_DispStringAt
    744          	GUI_DispStringAt("includes the gear ratios as well as the differential ratio and the",		LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*2));
   \   00000084   6420A0E3           MOV      R2,#+100
   \   00000088   2810A0E3           MOV      R1,#+40
   \   0000008C   ............       ADRL     R0,`?<Constant "includes the gear rat...">`
   \              ....        
   \   00000094   ........           BL       GUI_DispStringAt
    745          	GUI_DispStringAt("tire rolling circumference.  However, if you do not wish to use this",	LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*3));
   \   00000098   7320A0E3           MOV      R2,#+115
   \   0000009C   2810A0E3           MOV      R1,#+40
   \   000000A0   ............       ADRL     R0,`?<Constant "tire rolling circumfe...">`
   \              ....        
   \   000000A8   ........           BL       GUI_DispStringAt
    746          	GUI_DispStringAt("feature it can be disabled by entering a differential ratio of 0.00.",	LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*4));
   \   000000AC   8220A0E3           MOV      R2,#+130
   \   000000B0   2810A0E3           MOV      R1,#+40
   \   000000B4   ............       ADRL     R0,`?<Constant "feature it can be dis...">`
   \              ....        
   \   000000BC   ........           BL       GUI_DispStringAt
    747          	GUI_DispStringAt("If this value is entered you will be asked to confirm that you do not",	LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*5));
   \   000000C0   9120A0E3           MOV      R2,#+145
   \   000000C4   2810A0E3           MOV      R1,#+40
   \   000000C8   ............       ADRL     R0,`?<Constant "If this value is ente...">`
   \              ....        
   \   000000D0   ........           BL       GUI_DispStringAt
    748          	GUI_DispStringAt("wish to calculate gear ratios.  If accepted then the calculated gear",	LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*6));
   \   000000D4   A020A0E3           MOV      R2,#+160
   \   000000D8   2810A0E3           MOV      R1,#+40
   \   000000DC   ............       ADRL     R0,`?<Constant "wish to calculate gea...">`
   \              ....        
   \   000000E4   ........           BL       GUI_DispStringAt
    749          	GUI_DispStringAt("position will not be displayed.",											LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*7));
   \   000000E8   AF20A0E3           MOV      R2,#+175
   \   000000EC   2810A0E3           MOV      R1,#+40
   \   000000F0   ............       ADRL     R0,`?<Constant "position will not be ...">`
   \              ....        
   \   000000F8   ........           BL       GUI_DispStringAt
    750          
    751          	GUI_DrawBitmap(GetNavigationArrow(HELP_SCREEN), 0, 229);
   \   000000FC   04D08DE2           ADD      SP,SP,#+4
   \   00000100   0040BDE8           POP      {LR}
   \   00000104   E520A0E3           MOV      R2,#+229
   \   00000108   0010A0E3           MOV      R1,#+0
   \   0000010C   ........           LDR      R0,??DataTable117_13
   \   00000110   ........           B        GUI_DrawBitmap   ;; tailcall
    752          }
    753          

   \                                 In section .text, align 4, keep-with-next
    754          void TireSizeSelectionPaint(WM_HWIN hParent)
    755          {
   \                     TireSizeSelectionPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    756          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable117_7
   \   00000014   ........           BL       GUI_DrawBitmap
    757          	GUI_DrawBitmap(&bmTireSize, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable117_9
   \   00000024   ........           BL       GUI_DrawBitmap
    758          
    759          	GUI_SetColor(GUI_WHITE);
   \   00000028   FF04E0E3           MVN      R0,#-16777216
   \   0000002C   ........           BL       GUI_SetColor
    760          	GUI_SetTextMode(GUI_TM_TRANS);
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   ........           BL       GUI_SetTextMode
    761          
    762          	GUI_SetFont(&GUI_Font16B_ASCII);
   \   00000038   ........           LDR      R0,??DataTable117_19
   \   0000003C   ........           BL       GUI_SetFont
    763          	GUI_DispStringAt("TIRE SIZE", LEFT_MARGIN, 55);
   \   00000040   3720A0E3           MOV      R2,#+55
   \   00000044   2810A0E3           MOV      R1,#+40
   \   00000048   ............       ADRL     R0,`?<Constant "TIRE SIZE">`
   \              ....        
   \   00000050   ........           BL       GUI_DispStringAt
    764          	GUI_SetFont(&GUI_Font16_ASCII);
   \   00000054   ........           LDR      R0,??DataTable117_12
   \   00000058   ........           BL       GUI_SetFont
    765          	GUI_DispStringAt("In order to determine which gear is selected in the vehicle, the",		LEFT_MARGIN, PARA_1_START);
   \   0000005C   4620A0E3           MOV      R2,#+70
   \   00000060   2810A0E3           MOV      R1,#+40
   \   00000064   ............       ADRL     R0,`?<Constant "In order to determine...">_1`
   \              ....        
   \   0000006C   ........           BL       GUI_DispStringAt
    766          	GUI_DispStringAt("circumference. (distance around) the tire must be measured.  This is",	LEFT_MARGIN, PARA_1_START + LINE_HEIGHT);
   \   00000070   5520A0E3           MOV      R2,#+85
   \   00000074   2810A0E3           MOV      R1,#+40
   \   00000078   ............       ADRL     R0,`?<Constant "circumference. (dista...">`
   \              ....        
   \   00000080   ........           BL       GUI_DispStringAt
    767          	GUI_DispStringAt("the distance the vehicle travels for every revolution of the tire.",		LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*2));
   \   00000084   6420A0E3           MOV      R2,#+100
   \   00000088   2810A0E3           MOV      R1,#+40
   \   0000008C   ............       ADRL     R0,`?<Constant "the distance the vehi...">`
   \              ....        
   \   00000094   ........           BL       GUI_DispStringAt
    768          	GUI_DispStringAt("You may enter the number on the sidewall of the tire using the",			LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*3));
   \   00000098   7320A0E3           MOV      R2,#+115
   \   0000009C   2810A0E3           MOV      R1,#+40
   \   000000A0   ............       ADRL     R0,`?<Constant "You may enter the num...">`
   \              ....        
   \   000000A8   ........           BL       GUI_DispStringAt
    769          	GUI_DispStringAt("calculator or you can measure the distance around the tire with a tape",	LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*4));
   \   000000AC   8220A0E3           MOV      R2,#+130
   \   000000B0   2810A0E3           MOV      R1,#+40
   \   000000B4   ............       ADRL     R0,`?<Constant "calculator or you can...">`
   \              ....        
   \   000000BC   ........           BL       GUI_DispStringAt
    770          	GUI_DispStringAt("measure.  Most tire circumferences are in the range of 50in (127cm)",		LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*5));
   \   000000C0   9120A0E3           MOV      R2,#+145
   \   000000C4   2810A0E3           MOV      R1,#+40
   \   000000C8   ............       ADRL     R0,`?<Constant "measure.  Most tire c...">`
   \              ....        
   \   000000D0   ........           BL       GUI_DispStringAt
    771          	GUI_DispStringAt("to 150in (381cm).",														LEFT_MARGIN, PARA_1_START + (LINE_HEIGHT*6));
   \   000000D4   A020A0E3           MOV      R2,#+160
   \   000000D8   2810A0E3           MOV      R1,#+40
   \   000000DC   ............       ADRL     R0,`?<Constant "to 150in (381cm).">`
   \              ....        
   \   000000E4   ........           BL       GUI_DispStringAt
    772          
    773          	GUI_DrawBitmap(GetNavigationArrow(TIRESIZE_SELECTION_SCREEN), 0, 229);
   \   000000E8   04D08DE2           ADD      SP,SP,#+4
   \   000000EC   0040BDE8           POP      {LR}
   \   000000F0   E520A0E3           MOV      R2,#+229
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   ........           LDR      R0,??DataTable117_13
   \   000000FC   ........           B        GUI_DrawBitmap   ;; tailcall
    774          }
    775          
    776          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen)
    777          {
    778          	return &bmleftarrow;
    779          }
    780          

   \                                 In section .text, align 4, keep-with-next
    781          void GearingIgnoreNextKeyRelease(void)
    782          {
    783          //	clickedOnThisScreen = false;
    784          }
   \                     GearingIgnoreNextKeyRelease:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable103:
   \   00000000   F168E388B5F8       DC32     0x88E368F1,0x3EE4F8B5
   \              E43E        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable106:
   \   00000000   20636D00           DC8      " cm"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable106_1:
   \   00000000   20696E00           DC8      " in"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable110:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable110_1:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable110_2:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable110_3:
   \   00000000   1E264454FB21       DC32     0x5444261E,0x400921FB
   \              0940        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable110_4:
   \   00000000   ........           DC32     hGearButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable112:
   \   00000000   25660000           DC8      0x25, 0x66, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable112_1:
   \   00000000   17B7D138           DC32     0x38d1b717

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable112_2:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable112_3:
   \   00000000   ........           DC32     pressingbutton_semaphore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable114:
   \   00000000   ........           DC32     hGearButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable114_1:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable115:
   \   00000000   5C8F2240           DC32     0x40228f5c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable115_1:
   \   00000000   2693C93E           DC32     0x3ec99326

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable115_2:
   \   00000000   01004743           DC32     0x43470001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable116:
   \   00000000   2F000000           DC8      "/",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable116_1:
   \   00000000   78000000           DC8      "x",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable116_2:
   \   00000000   ........           DC32     TireSizeScreenCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable116_3:
   \   00000000   2E000000           DC8      ".",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable116_4:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117:
   \   00000000   7042213D           DC32     0x3d214270

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_1:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_2:
   \   00000000   ........           DC32     hTireDimensionButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_3:
   \   00000000   ........           DC32     bmGreenButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_4:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_5:
   \   00000000   1F85EB51           DC32     0x51eb851f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_6:
   \   00000000   ........           DC32     bmGearRatioButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_7:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_8:
   \   00000000   ........           DC32     bmNarrowSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_9:
   \   00000000   ........           DC32     bmTireSize

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_10:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_11:
   \   00000000   8080FF00           DC32     0xff8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_12:
   \   00000000   ........           DC32     GUI_Font16_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_13:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_14:
   \   00000000   ........           DC32     bmDiffRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_15:
   \   00000000   ........           DC32     GUI_FontD32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_16:
   \   00000000   ........           DC32     bmTransRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_17:
   \   00000000   ........           DC32     GUI_Font20B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_18:
   \   00000000   ........           DC32     bmHelp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable117_19:
   \   00000000   ........           DC32     GUI_Font16B_ASCII

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "0">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3000               DC8 48, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "1">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3100               DC8 49, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "2">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3200               DC8 50, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "3">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3300               DC8 51, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "4">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3400               DC8 52, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "5">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3500               DC8 53, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "6">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3600               DC8 54, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "7">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3700               DC8 55, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "8">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3800               DC8 56, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "9">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3900               DC8 57, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "00">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   30300000           DC8 48, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "10">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31300000           DC8 49, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "20">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32300000           DC8 50, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "30">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33300000           DC8 51, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "40">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   34300000           DC8 52, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "50">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   35300000           DC8 53, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "60">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   36300000           DC8 54, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "70">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   37300000           DC8 55, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "80">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   38300000           DC8 56, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "90">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   39300000           DC8 57, 48, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "355">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33353500           DC8 51, 53, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "345">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33343500           DC8 51, 52, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "335">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33333500           DC8 51, 51, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "325">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33323500           DC8 51, 50, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "315">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33313500           DC8 51, 49, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "305">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33303500           DC8 51, 48, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "295">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32393500           DC8 50, 57, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "285">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32383500           DC8 50, 56, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "275">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32373500           DC8 50, 55, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "265">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32363500           DC8 50, 54, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "255">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32353500           DC8 50, 53, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "245">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32343500           DC8 50, 52, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "235">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32333500           DC8 50, 51, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "225">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32323500           DC8 50, 50, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "215">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32313500           DC8 50, 49, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "205">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32303500           DC8 50, 48, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "195">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31393500           DC8 49, 57, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "185">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31383500           DC8 49, 56, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "175">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31373500           DC8 49, 55, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "165">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31363500           DC8 49, 54, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "155">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31353500           DC8 49, 53, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "145">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31343500           DC8 49, 52, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "135">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31333500           DC8 49, 51, 53, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "75">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   37350000           DC8 55, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "65">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   36350000           DC8 54, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "55">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   35350000           DC8 53, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "45">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   34350000           DC8 52, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "35">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   33350000           DC8 51, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "25">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   32350000           DC8 50, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "19">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31390000           DC8 49, 57, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "18">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31380000           DC8 49, 56, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "17">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31370000           DC8 49, 55, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "16">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31360000           DC8 49, 54, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "15">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31350000           DC8 49, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "14">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31340000           DC8 49, 52, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "13">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31330000           DC8 49, 51, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "12">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31320000           DC8 49, 50, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "11">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   31310000           DC8 49, 49, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant " cm">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   20636D00           DC8 32, 99, 109, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant " in">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   20696E00           DC8 32, 105, 110, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%f">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25660000           DC8 37, 102, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "/">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   2F00               DC8 47, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Tire Circumference">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 84, 105, 114, 101
   \              54697265    
   \   0000000A   204369726375       DC8 32, 67, 105, 114, 99, 117, 109, 102, 101, 114
   \              6D666572    
   \   00000014   656E63650000       DC8 101, 110, 99, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.2f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   252E32660000       DC8 37, 46, 50, 102, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select Tire Size">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 84, 105, 114
   \              20546972    
   \   0000000A   652053697A65       DC8 101, 32, 83, 105, 122, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tire Size">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   546972652053       DC8 84, 105, 114, 101, 32, 83, 105, 122, 101, 0
   \              697A6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tire Circumference">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   546972652043       DC8 84, 105, 114, 101, 32, 67, 105, 114, 99, 117
   \              69726375    
   \   0000000A   6D666572656E       DC8 109, 102, 101, 114, 101, 110, 99, 101, 0, 0
   \              63650000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select Diff Ratio">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 68, 105, 102
   \              20446966    
   \   0000000A   662052617469       DC8 102, 32, 82, 97, 116, 105, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ex = 205 / 50 x 15">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   6578203D2032       DC8 101, 120, 32, 61, 32, 50, 48, 53, 32, 47
   \              3035202F    
   \   0000000A   203530207820       DC8 32, 53, 48, 32, 120, 32, 49, 53, 0, 0
   \              31350000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Width / Aspect Ratio ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   576964746820       DC8 87, 105, 100, 116, 104, 32, 47, 32, 65, 115
   \              2F204173    
   \   0000000A   706563742052       DC8 112, 101, 99, 116, 32, 82, 97, 116, 105, 111
   \              6174696F    
   \   00000014   20782052696D       DC8 32, 120, 32, 82, 105, 109, 32, 83, 105, 122
   \              2053697A    
   \   0000001E   6500               DC8 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1st Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   317374204765       DC8 49, 115, 116, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "2nd Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   326E64204765       DC8 50, 110, 100, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3rd Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   337264204765       DC8 51, 114, 100, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "4th Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   347468204765       DC8 52, 116, 104, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5th Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   357468204765       DC8 53, 116, 104, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "6th Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   367468204765       DC8 54, 116, 104, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7th Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   377468204765       DC8 55, 116, 104, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8th Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   387468204765       DC8 56, 116, 104, 32, 71, 101, 97, 114, 0, 0
   \              61720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Touch to Enter\\nTransm...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   546F75636820       DC8 84, 111, 117, 99, 104, 32, 116, 111, 32, 69
   \              746F2045    
   \   0000000A   6E7465720A54       DC8 110, 116, 101, 114, 10, 84, 114, 97, 110, 115
   \              72616E73    
   \   00000014   6D697373696F       DC8 109, 105, 115, 115, 105, 111, 110, 10, 82, 97
   \              6E0A5261    
   \   0000001E   74696F730000       DC8 116, 105, 111, 115, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "GEAR RATIOS AND TIRE ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   474541522052       DC8 71, 69, 65, 82, 32, 82, 65, 84, 73, 79
   \              4154494F    
   \   0000000A   5320414E4420       DC8 83, 32, 65, 78, 68, 32, 84, 73, 82, 69
   \              54495245    
   \   00000014   2053495A4553       DC8 32, 83, 73, 90, 69, 83, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "In order to determine...">`:
   \   00000000                      ; Initializer data, 64 bytes
   \   00000000   496E206F7264       DC8 73, 110, 32, 111, 114, 100, 101, 114, 32, 116
   \              65722074    
   \   0000000A   6F2064657465       DC8 111, 32, 100, 101, 116, 101, 114, 109, 105, 110
   \              726D696E    
   \   00000014   652077686963       DC8 101, 32, 119, 104, 105, 99, 104, 32, 103, 101
   \              68206765    
   \   0000001E   617220697320       DC8 97, 114, 32, 105, 115, 32, 115, 101, 108, 101
   \              73656C65    
   \   00000028   637465642069       DC8 99, 116, 101, 100, 32, 105, 110, 32, 116, 104
   \              6E207468    
   \   00000032   652076656869       DC8 101, 32, 118, 101, 104, 105, 99, 108, 101, 32
   \              636C6520    
   \   0000003C   74686500           DC8 116, 104, 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "complete gearing info...">`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   636F6D706C65       DC8 99, 111, 109, 112, 108, 101, 116, 101, 32, 103
   \              74652067    
   \   0000000A   656172696E67       DC8 101, 97, 114, 105, 110, 103, 32, 105, 110, 102
   \              20696E66    
   \   00000014   6F726D617469       DC8 111, 114, 109, 97, 116, 105, 111, 110, 32, 97
   \              6F6E2061    
   \   0000001E   626F75742074       DC8 98, 111, 117, 116, 32, 116, 104, 101, 32, 118
   \              68652076    
   \   00000028   656869636C65       DC8 101, 104, 105, 99, 108, 101, 32, 109, 117, 115
   \              206D7573    
   \   00000032   74206265206B       DC8 116, 32, 98, 101, 32, 107, 110, 111, 119, 110
   \              6E6F776E    
   \   0000003C   2E2020546869       DC8 46, 32, 32, 84, 104, 105, 115, 0
   \              7300        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "includes the gear rat...">`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   696E636C7564       DC8 105, 110, 99, 108, 117, 100, 101, 115, 32, 116
   \              65732074    
   \   0000000A   686520676561       DC8 104, 101, 32, 103, 101, 97, 114, 32, 114, 97
   \              72207261    
   \   00000014   74696F732061       DC8 116, 105, 111, 115, 32, 97, 115, 32, 119, 101
   \              73207765    
   \   0000001E   6C6C20617320       DC8 108, 108, 32, 97, 115, 32, 116, 104, 101, 32
   \              74686520    
   \   00000028   646966666572       DC8 100, 105, 102, 102, 101, 114, 101, 110, 116, 105
   \              656E7469    
   \   00000032   616C20726174       DC8 97, 108, 32, 114, 97, 116, 105, 111, 32, 97
   \              696F2061    
   \   0000003C   6E6420746865       DC8 110, 100, 32, 116, 104, 101, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "tire rolling circumfe...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   746972652072       DC8 116, 105, 114, 101, 32, 114, 111, 108, 108, 105
   \              6F6C6C69    
   \   0000000A   6E6720636972       DC8 110, 103, 32, 99, 105, 114, 99, 117, 109, 102
   \              63756D66    
   \   00000014   6572656E6365       DC8 101, 114, 101, 110, 99, 101, 46, 32, 32, 72
   \              2E202048    
   \   0000001E   6F7765766572       DC8 111, 119, 101, 118, 101, 114, 44, 32, 105, 102
   \              2C206966    
   \   00000028   20796F752064       DC8 32, 121, 111, 117, 32, 100, 111, 32, 110, 111
   \              6F206E6F    
   \   00000032   742077697368       DC8 116, 32, 119, 105, 115, 104, 32, 116, 111, 32
   \              20746F20    
   \   0000003C   757365207468       DC8 117, 115, 101, 32, 116, 104, 105, 115, 0, 0
   \              69730000    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "feature it can be dis...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   666561747572       DC8 102, 101, 97, 116, 117, 114, 101, 32, 105, 116
   \              65206974    
   \   0000000A   2063616E2062       DC8 32, 99, 97, 110, 32, 98, 101, 32, 100, 105
   \              65206469    
   \   00000014   7361626C6564       DC8 115, 97, 98, 108, 101, 100, 32, 98, 121, 32
   \              20627920    
   \   0000001E   656E74657269       DC8 101, 110, 116, 101, 114, 105, 110, 103, 32, 97
   \              6E672061    
   \   00000028   206469666665       DC8 32, 100, 105, 102, 102, 101, 114, 101, 110, 116
   \              72656E74    
   \   00000032   69616C207261       DC8 105, 97, 108, 32, 114, 97, 116, 105, 111, 32
   \              74696F20    
   \   0000003C   6F6620302E30       DC8 111, 102, 32, 48, 46, 48, 48, 46, 0, 0
   \              302E0000    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "If this value is ente...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   496620746869       DC8 73, 102, 32, 116, 104, 105, 115, 32, 118, 97
   \              73207661    
   \   0000000A   6C7565206973       DC8 108, 117, 101, 32, 105, 115, 32, 101, 110, 116
   \              20656E74    
   \   00000014   657265642079       DC8 101, 114, 101, 100, 32, 121, 111, 117, 32, 119
   \              6F752077    
   \   0000001E   696C6C206265       DC8 105, 108, 108, 32, 98, 101, 32, 97, 115, 107
   \              2061736B    
   \   00000028   656420746F20       DC8 101, 100, 32, 116, 111, 32, 99, 111, 110, 102
   \              636F6E66    
   \   00000032   69726D207468       DC8 105, 114, 109, 32, 116, 104, 97, 116, 32, 121
   \              61742079    
   \   0000003C   6F7520646F20       DC8 111, 117, 32, 100, 111, 32, 110, 111, 116, 0
   \              6E6F7400    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "wish to calculate gea...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   776973682074       DC8 119, 105, 115, 104, 32, 116, 111, 32, 99, 97
   \              6F206361    
   \   0000000A   6C63756C6174       DC8 108, 99, 117, 108, 97, 116, 101, 32, 103, 101
   \              65206765    
   \   00000014   617220726174       DC8 97, 114, 32, 114, 97, 116, 105, 111, 115, 46
   \              696F732E    
   \   0000001E   202049662061       DC8 32, 32, 73, 102, 32, 97, 99, 99, 101, 112
   \              63636570    
   \   00000028   746564207468       DC8 116, 101, 100, 32, 116, 104, 101, 110, 32, 116
   \              656E2074    
   \   00000032   68652063616C       DC8 104, 101, 32, 99, 97, 108, 99, 117, 108, 97
   \              63756C61    
   \   0000003C   746564206765       DC8 116, 101, 100, 32, 103, 101, 97, 114, 0, 0
   \              61720000    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "position will not be ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   706F73697469       DC8 112, 111, 115, 105, 116, 105, 111, 110, 32, 119
   \              6F6E2077    
   \   0000000A   696C6C206E6F       DC8 105, 108, 108, 32, 110, 111, 116, 32, 98, 101
   \              74206265    
   \   00000014   20646973706C       DC8 32, 100, 105, 115, 112, 108, 97, 121, 101, 100
   \              61796564    
   \   0000001E   2E00               DC8 46, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TIRE SIZE">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   544952452053       DC8 84, 73, 82, 69, 32, 83, 73, 90, 69, 0
   \              495A4500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "In order to determine...">_1`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   496E206F7264       DC8 73, 110, 32, 111, 114, 100, 101, 114, 32, 116
   \              65722074    
   \   0000000A   6F2064657465       DC8 111, 32, 100, 101, 116, 101, 114, 109, 105, 110
   \              726D696E    
   \   00000014   652077686963       DC8 101, 32, 119, 104, 105, 99, 104, 32, 103, 101
   \              68206765    
   \   0000001E   617220697320       DC8 97, 114, 32, 105, 115, 32, 115, 101, 108, 101
   \              73656C65    
   \   00000028   637465642069       DC8 99, 116, 101, 100, 32, 105, 110, 32, 116, 104
   \              6E207468    
   \   00000032   652076656869       DC8 101, 32, 118, 101, 104, 105, 99, 108, 101, 44
   \              636C652C    
   \   0000003C   207468650000       DC8 32, 116, 104, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "circumference. (dista...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   63697263756D       DC8 99, 105, 114, 99, 117, 109, 102, 101, 114, 101
   \              66657265    
   \   0000000A   6E63652E2028       DC8 110, 99, 101, 46, 32, 40, 100, 105, 115, 116
   \              64697374    
   \   00000014   616E63652061       DC8 97, 110, 99, 101, 32, 97, 114, 111, 117, 110
   \              726F756E    
   \   0000001E   642920746865       DC8 100, 41, 32, 116, 104, 101, 32, 116, 105, 114
   \              20746972    
   \   00000028   65206D757374       DC8 101, 32, 109, 117, 115, 116, 32, 98, 101, 32
   \              20626520    
   \   00000032   6D6561737572       DC8 109, 101, 97, 115, 117, 114, 101, 100, 46, 32
   \              65642E20    
   \   0000003C   205468697320       DC8 32, 84, 104, 105, 115, 32, 105, 115, 0, 0
   \              69730000    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "the distance the vehi...">`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   746865206469       DC8 116, 104, 101, 32, 100, 105, 115, 116, 97, 110
   \              7374616E    
   \   0000000A   636520746865       DC8 99, 101, 32, 116, 104, 101, 32, 118, 101, 104
   \              20766568    
   \   00000014   69636C652074       DC8 105, 99, 108, 101, 32, 116, 114, 97, 118, 101
   \              72617665    
   \   0000001E   6C7320666F72       DC8 108, 115, 32, 102, 111, 114, 32, 101, 118, 101
   \              20657665    
   \   00000028   727920726576       DC8 114, 121, 32, 114, 101, 118, 111, 108, 117, 116
   \              6F6C7574    
   \   00000032   696F6E206F66       DC8 105, 111, 110, 32, 111, 102, 32, 116, 104, 101
   \              20746865    
   \   0000003C   20746972652E       DC8 32, 116, 105, 114, 101, 46, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "You may enter the num...">`:
   \   00000000                      ; Initializer data, 64 bytes
   \   00000000   596F75206D61       DC8 89, 111, 117, 32, 109, 97, 121, 32, 101, 110
   \              7920656E    
   \   0000000A   746572207468       DC8 116, 101, 114, 32, 116, 104, 101, 32, 110, 117
   \              65206E75    
   \   00000014   6D626572206F       DC8 109, 98, 101, 114, 32, 111, 110, 32, 116, 104
   \              6E207468    
   \   0000001E   652073696465       DC8 101, 32, 115, 105, 100, 101, 119, 97, 108, 108
   \              77616C6C    
   \   00000028   206F66207468       DC8 32, 111, 102, 32, 116, 104, 101, 32, 116, 105
   \              65207469    
   \   00000032   726520757369       DC8 114, 101, 32, 117, 115, 105, 110, 103, 32, 116
   \              6E672074    
   \   0000003C   68650000           DC8 104, 101, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "calculator or you can...">`:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   63616C63756C       DC8 99, 97, 108, 99, 117, 108, 97, 116, 111, 114
   \              61746F72    
   \   0000000A   206F7220796F       DC8 32, 111, 114, 32, 121, 111, 117, 32, 99, 97
   \              75206361    
   \   00000014   6E206D656173       DC8 110, 32, 109, 101, 97, 115, 117, 114, 101, 32
   \              75726520    
   \   0000001E   746865206469       DC8 116, 104, 101, 32, 100, 105, 115, 116, 97, 110
   \              7374616E    
   \   00000028   63652061726F       DC8 99, 101, 32, 97, 114, 111, 117, 110, 100, 32
   \              756E6420    
   \   00000032   746865207469       DC8 116, 104, 101, 32, 116, 105, 114, 101, 32, 119
   \              72652077    
   \   0000003C   697468206120       DC8 105, 116, 104, 32, 97, 32, 116, 97, 112, 101
   \              74617065    
   \   00000046   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "measure.  Most tire c...">`:
   \   00000000                      ; Initializer data, 68 bytes
   \   00000000   6D6561737572       DC8 109, 101, 97, 115, 117, 114, 101, 46, 32, 32
   \              652E2020    
   \   0000000A   4D6F73742074       DC8 77, 111, 115, 116, 32, 116, 105, 114, 101, 32
   \              69726520    
   \   00000014   63697263756D       DC8 99, 105, 114, 99, 117, 109, 102, 101, 114, 101
   \              66657265    
   \   0000001E   6E6365732061       DC8 110, 99, 101, 115, 32, 97, 114, 101, 32, 105
   \              72652069    
   \   00000028   6E2074686520       DC8 110, 32, 116, 104, 101, 32, 114, 97, 110, 103
   \              72616E67    
   \   00000032   65206F662035       DC8 101, 32, 111, 102, 32, 53, 48, 105, 110, 32
   \              30696E20    
   \   0000003C   28313237636D       DC8 40, 49, 50, 55, 99, 109, 41, 0
   \              2900        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "to 150in (381cm).">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   746F20313530       DC8 116, 111, 32, 49, 53, 48, 105, 110, 32, 40
   \              696E2028    
   \   0000000A   333831636D29       DC8 51, 56, 49, 99, 109, 41, 46, 0, 0, 0
   \              2E000000    

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "x">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   7800               DC8 120, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ".">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   2E00               DC8 46, 0
    785          
    786          
    787          /*************************** End of file ****************************/
    788          

   Maximum stack usage in bytes:

     Function                      .cstack
     --------                      -------
     ButtonToScreenID                   0
     DiffRatioPaint                     8
     DisplayDiffRatio                  56
     DisplayHelp                        0
     DisplayTireCircumference          24
     DisplayTireSize                   56
     DisplayTireSizeSelection          32
     DisplayTransRatio                192
     GearingIgnoreNextKeyRelease        0
     GearingScreensCallback            24
     GetGearingWindowHandle             0
     GetTireCircumferenceString        16
     GetTireSizeScreenWindowHandle      0
     HelpPaint                          8
     SetGearButtonText                 32
     SetGearingWindowHandle             0
     TCKeyboardSaveButton              16
     TCKillKeyboard                    16
     TireSizePaint                      8
     TireSizeScreenCallback            16
     TireSizeSelectionPaint             8
     TransRatioPaint                    8
     UpdateTireCircumference           12


   Section sizes:

     Function/Label                           Bytes
     --------------                           -----
     hTireDimensionButton                        8
     hTireCircumferenceButton
     hGearButton                               392
     GearingScreenList
     hGearingScreens
     hTireSizeScreen
     hDiffWheel1
     hDiffWheel2
     hDiffWheel3
     pEntryKeyboard
     gearingScreenSuspended
     buttonsCreated
     ZeroThroughNine
     TreadWidth
     AspectRatio
     WheelDiameter
     hTreadWidthListWheel
     hAspectRatioWheel
     hWheelDiameterWheel
     tireCircumference
     ZeroThroughNinty                           44
     GetGearingWindowHandle                     12
     SetGearingWindowHandle                     12
     GearingScreensCallback                    884
     ButtonToScreenID                          112
     GetTireSizeScreenWindowHandle              12
     DisplayTireCircumference                  204
     GetTireCircumferenceString                116
     TCKeyboardSaveButton                      152
     TCKillKeyboard                             76
     DisplayTireSize                           340
     TireSizeScreenCallback                    412
     UpdateTireCircumference                   116
     DisplayTireSizeSelection                  240
     DisplayDiffRatio                          264
     DisplayTransRatio                        1024
     SetGearButtonText                          80
     DisplayHelp                                 4
     TireSizePaint                             236
     DiffRatioPaint                            144
     TransRatioPaint                           288
     HelpPaint                                 276
     TireSizeSelectionPaint                    256
     GearingIgnoreNextKeyRelease                 4
     ??DataTable103                              8
     ??DataTable106                              4
     ??DataTable106_1                            4
     ??DataTable110                              4
     ??DataTable110_1                            4
     ??DataTable110_2                            4
     ??DataTable110_3                            8
     ??DataTable110_4                            4
     ??DataTable112                              4
     ??DataTable112_1                            4
     ??DataTable112_2                            4
     ??DataTable112_3                            4
     ??DataTable114                              4
     ??DataTable114_1                            4
     ??DataTable115                              4
     ??DataTable115_1                            4
     ??DataTable115_2                            4
     ??DataTable116                              4
     ??DataTable116_1                            4
     ??DataTable116_2                            4
     ??DataTable116_3                            4
     ??DataTable116_4                            4
     ??DataTable117                              4
     ??DataTable117_1                            4
     ??DataTable117_2                            4
     ??DataTable117_3                            4
     ??DataTable117_4                            4
     ??DataTable117_5                            4
     ??DataTable117_6                            4
     ??DataTable117_7                            4
     ??DataTable117_8                            4
     ??DataTable117_9                            4
     ??DataTable117_10                           4
     ??DataTable117_11                           4
     ??DataTable117_12                           4
     ??DataTable117_13                           4
     ??DataTable117_14                           4
     ??DataTable117_15                           4
     ??DataTable117_16                           4
     ??DataTable117_17                           4
     ??DataTable117_18                           4
     ??DataTable117_19                           4
     ?<Constant "0">                             2
     ?<Constant "1">                             2
     ?<Constant "2">                             2
     ?<Constant "3">                             2
     ?<Constant "4">                             2
     ?<Constant "5">                             2
     ?<Constant "6">                             2
     ?<Constant "7">                             2
     ?<Constant "8">                             2
     ?<Constant "9">                             2
     ?<Constant "00">                            4
     ?<Constant "10">                            4
     ?<Constant "20">                            4
     ?<Constant "30">                            4
     ?<Constant "40">                            4
     ?<Constant "50">                            4
     ?<Constant "60">                            4
     ?<Constant "70">                            4
     ?<Constant "80">                            4
     ?<Constant "90">                            4
     ?<Constant "355">                           4
     ?<Constant "345">                           4
     ?<Constant "335">                           4
     ?<Constant "325">                           4
     ?<Constant "315">                           4
     ?<Constant "305">                           4
     ?<Constant "295">                           4
     ?<Constant "285">                           4
     ?<Constant "275">                           4
     ?<Constant "265">                           4
     ?<Constant "255">                           4
     ?<Constant "245">                           4
     ?<Constant "235">                           4
     ?<Constant "225">                           4
     ?<Constant "215">                           4
     ?<Constant "205">                           4
     ?<Constant "195">                           4
     ?<Constant "185">                           4
     ?<Constant "175">                           4
     ?<Constant "165">                           4
     ?<Constant "155">                           4
     ?<Constant "145">                           4
     ?<Constant "135">                           4
     ?<Constant "75">                            4
     ?<Constant "65">                            4
     ?<Constant "55">                            4
     ?<Constant "45">                            4
     ?<Constant "35">                            4
     ?<Constant "25">                            4
     ?<Constant "19">                            4
     ?<Constant "18">                            4
     ?<Constant "17">                            4
     ?<Constant "16">                            4
     ?<Constant "15">                            4
     ?<Constant "14">                            4
     ?<Constant "13">                            4
     ?<Constant "12">                            4
     ?<Constant "11">                            4
     ?<Constant " cm">                           4
     ?<Constant " in">                           4
     ?<Constant "%f">                            4
     ?<Constant "/">                             2
     ?<Constant "Enter Tire Circumference">     28
     ?<Constant "%.2f">                          8
     ?<Constant "Select Tire Size">             20
     ?<Constant "Tire Size">                    12
     ?<Constant "Tire Circumference">           20
     ?<Constant "Select Diff Ratio">            20
     ?<Constant "ex = 205 / 50 x 15">           20
     ?<Constant "Width / Aspect Ratio ...">     32
     ?<Constant "1st Gear">                     12
     ?<Constant "2nd Gear">                     12
     ?<Constant "3rd Gear">                     12
     ?<Constant "4th Gear">                     12
     ?<Constant "5th Gear">                     12
     ?<Constant "6th Gear">                     12
     ?<Constant "7th Gear">                     12
     ?<Constant "8th Gear">                     12
     ?<Constant "Touch to Enter\nTransm...">    36
     ?<Constant "GEAR RATIOS AND TIRE ...">     28
     ?<Constant "In order to determine...">     64
     ?<Constant "complete gearing info...">     68
     ?<Constant "includes the gear rat...">     68
     ?<Constant "tire rolling circumfe...">     72
     ?<Constant "feature it can be dis...">     72
     ?<Constant "If this value is ente...">     72
     ?<Constant "wish to calculate gea...">     72
     ?<Constant "position will not be ...">     32
     ?<Constant "TIRE SIZE">                    12
     ?<Constant "In order to determine...">_1   68
     ?<Constant "circumference. (dista...">     72
     ?<Constant "the distance the vehi...">     68
     ?<Constant "You may enter the num...">     64
     ?<Constant "calculator or you can...">     72
     ?<Constant "measure.  Most tire c...">     68
     ?<Constant "to 150in (381cm).">            20
     ?<Constant "x">                             2
     ?<Constant ".">                             2

 
     8 bytes in section .bss
   436 bytes in section .data
   230 bytes in section .rodata
 6 724 bytes in section .text
 
 6 724 bytes of CODE  memory
   230 bytes of CONST memory
   444 bytes of DATA  memory

Errors: none
Warnings: none
