###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:16 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_GetTextExtend.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_GetTextExtend.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_GetTextExtend.lst      #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_GetTextExtend.o         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_GetTextExtend.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_GetTextExtend.c
     19          Purpose     : Implementation of GUI_GetTextExtend
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_GetTextExtend
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_GetTextExtend(GUI_RECT* pRect, const char GUI_UNI_PTR * s, int MaxNumChars) {
   \                     GUI_GetTextExtend:
   \   00000000   F2412DE9           PUSH     {R1,R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     36            int xMax, NumLines, LineSizeX;
     37            U16 Char;
     38            xMax = NumLines = LineSizeX = 0;
     39            pRect->x0 = GUI_Context.DispPosX;
   \   00000008   B8009FE5           LDR      R0,??GUI_GetTextExtend_0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   F212D0E1           LDRSH    R1,[R0, #+34]
   \   00000014   0260A0E1           MOV      R6,R2
   \   00000018   0070A0E3           MOV      R7,#+0
   \   0000001C   B010C4E1           STRH     R1,[R4, #+0]
     40            pRect->y0 = GUI_Context.DispPosY;
   \   00000020   F402D0E1           LDRSH    R0,[R0, #+36]
   \   00000024   0050A0E3           MOV      R5,#+0
   \   00000028   0080A0E3           MOV      R8,#+0
   \   0000002C   B200C4E1           STRH     R0,[R4, #+2]
     41            if (!s) {
   \   00000030   04009DE5           LDR      R0,[SP, #+4]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   2000000A           BEQ      ??GUI_GetTextExtend_1
     42              return;
     43            }
     44            if (*s) {
   \   0000003C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   1400000A           BEQ      ??GUI_GetTextExtend_2
     45              NumLines++;
   \   00000048   0150A0E3           MOV      R5,#+1
   \   0000004C   010000EA           B        ??GUI_GetTextExtend_3
     46              while (MaxNumChars--) {
     47                Char = GUI_UC__GetCharCodeInc(&s);
     48                if ((Char == '\n') || (Char == 0)) {
     49                  if (LineSizeX > xMax) {
     50                    xMax = LineSizeX;
     51                  }
     52                  LineSizeX = 0;
     53                  if (Char == '\n') {
     54                    NumLines++;
     55                  }
     56                  if (!Char) {
     57                    break;
     58                  }
     59                } else {
     60                  LineSizeX += GUI_GetCharDistX(Char);
   \                     ??GUI_GetTextExtend_4:
   \   00000050   ........           BL       GUI_GetCharDistX
   \   00000054   077080E0           ADD      R7,R0,R7
     61                }
   \                     ??GUI_GetTextExtend_3:
   \   00000058   000056E3           CMP      R6,#+0
   \   0000005C   0C00000A           BEQ      ??GUI_GetTextExtend_5
   \   00000060   016046E2           SUB      R6,R6,#+1
   \   00000064   04008DE2           ADD      R0,SP,#+4
   \   00000068   ........           BL       GUI_UC__GetCharCodeInc
   \   0000006C   0A0050E3           CMP      R0,#+10
   \   00000070   00005013           CMPNE    R0,#+0
   \   00000074   F5FFFF1A           BNE      ??GUI_GetTextExtend_4
   \   00000078   070058E1           CMP      R8,R7
   \   0000007C   0780A0B1           MOVLT    R8,R7
   \   00000080   0A0050E3           CMP      R0,#+10
   \   00000084   01508502           ADDEQ    R5,R5,#+1
   \   00000088   0070A0E3           MOV      R7,#+0
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   F0FFFF1A           BNE      ??GUI_GetTextExtend_3
     62              }
     63            }
     64            if (LineSizeX > xMax) {
   \                     ??GUI_GetTextExtend_5:
   \   00000094   070058E1           CMP      R8,R7
   \   00000098   0780A0B1           MOVLT    R8,R7
     65              xMax = LineSizeX;
     66            }
     67            pRect->x1 = pRect->x0 + xMax - 1;
   \                     ??GUI_GetTextExtend_2:
   \   0000009C   F000D4E1           LDRSH    R0,[R4, #+0]
   \   000000A0   000088E0           ADD      R0,R8,R0
   \   000000A4   010040E2           SUB      R0,R0,#+1
   \   000000A8   B400C4E1           STRH     R0,[R4, #+4]
     68            pRect->y1 = pRect->y0 + GUI__GetFontSizeY() * NumLines - 1;
   \   000000AC   ........           BL       GUI__GetFontSizeY
   \   000000B0   F210D4E1           LDRSH    R1,[R4, #+2]
   \   000000B4   801500E1           SMLABB   R0,R0,R5,R1
   \   000000B8   010040E2           SUB      R0,R0,#+1
   \   000000BC   B600C4E1           STRH     R0,[R4, #+6]
     69          }
   \                     ??GUI_GetTextExtend_1:
   \   000000C0   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000C4   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??GUI_GetTextExtend_0:
   \   000000C8   ........           DC32     GUI_Context
     70          
     71          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_GetTextExtend     32


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_GetTextExtend  204

 
 204 bytes in section .text
 
 204 bytes of CODE memory

Errors: none
Warnings: none
