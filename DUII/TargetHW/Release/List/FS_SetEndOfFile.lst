###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:57 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_SetEndOfFile.c                    #
#    Command line =  C:\DUII\TargetHW\FS\FS_SetEndOfFile.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FS_SetEndOfFile.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FS_SetEndOfFile.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_SetEndOfFile.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_SetEndOfFile.c
     19          Purpose     : Implementation of FS_SetEndOfFile
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          /*********************************************************************
     24          *
     25          *       #include Section
     26          *
     27          **********************************************************************
     28          */
     29          #include "FS_ConfDefaults.h"        /* FS Configuration */
     30          #include "FS_Int.h"
     31          #include "FS_OS.h"
     32          #include "FS_CLib.h"
     33          
     34          
     35          /*********************************************************************
     36          *
     37          *       Public code internal
     38          *
     39          **********************************************************************
     40          */
     41          
     42          /*********************************************************************
     43          *
     44          *       FS__SetEndOfFile
     45          *
     46          *  Function description:
     47          *    Internal version of the FS_SetEndOfFile
     48          *
     49          *  Parameters:
     50          *    pFile           - Pointer to a FS_FILE data structure.
     51          *
     52          *  Return value:
     53          *    == 0        - New End of File has been set.
     54          *    ==-1        - An error has occurred.
     55          *
     56          *  Notes
     57          *    (1) Move or copy
     58          *        If the files are on the same volume, the file is moved,
     59          *        otherwise copied and the original deleted.
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          int FS__SetEndOfFile(FS_FILE * pFile) {
   \                     FS__SetEndOfFile:
   \   00000000   00402DE9           PUSH     {LR}
     62            FS_VOLUME * pVolume;
     63            int            r;
     64          
     65            if ((pFile->AccessFlags & FS_FILE_ACCESS_FLAGS_ACW)) {
   \   00000004   0B10D0E5           LDRB     R1,[R0, #+11]
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   EA10D1E3           BICS     R1,R1,#0xEA
   \   00000010   0100000A           BEQ      ??FS__SetEndOfFile_0
     66              pVolume = pFile->pFileObj->pVolume;
     67              FS_LOCK_DRIVER(&pFile->pFileObj->pVolume->Partition.Device);
     68              FS_JOURNAL_BEGIN (pVolume);
     69              r = FS_SET_END_OF_FILE(pFile);
   \   00000014   ........           BL       FS_FAT_SetEndOfFile
     70              FS_JOURNAL_END  (pVolume);
   \   00000018   000000EA           B        ??FS__SetEndOfFile_1
     71              FS_UNLOCK_DRIVER(&pFile->pFileObj->pVolume->Partition.Device);
     72            } else {
     73              FS_DEBUG_ERROROUT((FS_MTYPE_API, "FS__SetEndOfFile: pFile does not have write permission.\n"));
     74              r = -1;
   \                     ??FS__SetEndOfFile_0:
   \   0000001C   0000E0E3           MVN      R0,#+0
     75            }
     76            return r;
   \                     ??FS__SetEndOfFile_1:
   \   00000020   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000024   0080BDE8           POP      {PC}             ;; return
     77          }
     78          
     79          /*********************************************************************
     80          *
     81          *       Public code
     82          *
     83          **********************************************************************
     84          */
     85          
     86          /*********************************************************************
     87          *
     88          *       FS_SetEndOfFile
     89          *
     90          *  Function description:
     91          *    Sets current position to the end of file.
     92          *
     93          *  Parameters:
     94          *    pFile           - Pointer to a FS_FILE data structure.
     95          *
     96          *  Return value:
     97          *    == 0        - New End of File has been set.
     98          *    ==-1        - An error has occurred.
     99          *
    100          *  Notes
    101          *    (1) Move or copy
    102          *        If the files are on the same volume, the file is moved,
    103          *        otherwise copied and the original deleted.
    104          */

   \                                 In section .text, align 4, keep-with-next
    105          int FS_SetEndOfFile(FS_FILE * pFile) {
   \                     FS_SetEndOfFile:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
    106            int           r;
    107          
    108            r = -1;
   \   0000000C   0050E0E3           MVN      R5,#+0
    109            FS_LOCK();
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   ........           BL       FS_OS_Lock
    110            if (pFile) {
   \   00000018   000054E3           CMP      R4,#+0
    111              r = FS__SetEndOfFile(pFile);
   \   0000001C   0B00D415           LDRBNE   R0,[R4, #+11]
   \   00000020   EA00D013           BICSNE   R0,R0,#0xEA
   \   00000024   0200000A           BEQ      ??FS_SetEndOfFile_0
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       FS_FAT_SetEndOfFile
   \   00000030   0050A0E1           MOV      R5,R0
    112            }
    113            FS_UNLOCK();
   \                     ??FS_SetEndOfFile_0:
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   ........           BL       FS_OS_Unlock
    114            return r;
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   04D08DE2           ADD      SP,SP,#+4
   \   00000044   3080BDE8           POP      {R4,R5,PC}       ;; return
    115          }
    116          
    117          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     FS_SetEndOfFile      16
     FS__SetEndOfFile      8


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     FS__SetEndOfFile   40
     FS_SetEndOfFile    72

 
 112 bytes in section .text
 
 112 bytes of CODE memory

Errors: none
Warnings: none
