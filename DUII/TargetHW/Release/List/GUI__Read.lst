###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__Read.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__Read.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI__Read.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI__Read.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__Read.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI__ReadData.c
     19          Purpose     : Implementation of reading data
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Exported code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI__Read16
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          U16 GUI__Read16(const U8 ** ppData) {
     36            const U8 * pData;
     37            U16  Value;
     38            pData = *ppData;
   \                     GUI__Read16:
   \   00000000   002090E5           LDR      R2,[R0, #+0]
     39            Value = *pData;
     40            Value |= (U16)(*(pData + 1) << 8);
   \   00000004   0010D2E5           LDRB     R1,[R2, #+0]
   \   00000008   0130D2E5           LDRB     R3,[R2, #+1]
     41            pData += 2;
     42            *ppData = pData;
   \   0000000C   022082E2           ADD      R2,R2,#+2
   \   00000010   002080E5           STR      R2,[R0, #+0]
   \   00000014   031481E1           ORR      R1,R1,R3, LSL #+8
     43            return Value;
   \   00000018   0100A0E1           MOV      R0,R1
   \   0000001C   1EFF2FE1           BX       LR               ;; return
     44          }
     45          
     46          /*********************************************************************
     47          *
     48          *       GUI__Read32
     49          */

   \                                 In section .text, align 4, keep-with-next
     50          U32 GUI__Read32(const U8 ** ppData) {
     51            const U8 * pData;
     52            U32  Value;
     53            pData = *ppData;
   \                     GUI__Read32:
   \   00000000   002090E5           LDR      R2,[R0, #+0]
     54            Value = *pData;
     55            Value |= ((U32)*(pData + 1) << 8);
     56            Value |= ((U32)*(pData + 2) << 16);
     57            Value |= ((U32)*(pData + 3) << 24);
   \   00000004   0010D2E5           LDRB     R1,[R2, #+0]
   \   00000008   0130D2E5           LDRB     R3,[R2, #+1]
   \   0000000C   031481E1           ORR      R1,R1,R3, LSL #+8
   \   00000010   0230D2E5           LDRB     R3,[R2, #+2]
   \   00000014   031881E1           ORR      R1,R1,R3, LSL #+16
   \   00000018   0330D2E5           LDRB     R3,[R2, #+3]
     58            pData += 4;
     59            *ppData = pData;
   \   0000001C   042082E2           ADD      R2,R2,#+4
   \   00000020   002080E5           STR      R2,[R0, #+0]
   \   00000024   031C81E1           ORR      R1,R1,R3, LSL #+24
     60            return Value;
   \   00000028   0100A0E1           MOV      R0,R1
   \   0000002C   1EFF2FE1           BX       LR               ;; return
     61          }
     62          

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     GUI__Read16      0
     GUI__Read32      0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI__Read16      32
     GUI__Read32      48

 
 80 bytes in section .text
 
 80 bytes of CODE memory

Errors: none
Warnings: none
