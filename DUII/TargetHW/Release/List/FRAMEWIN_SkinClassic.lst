###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:36 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\FRAMEWIN_SkinClassic.c              #
#    Command line =  C:\DUII\TargetHW\GUI\FRAMEWIN_SkinClassic.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FRAMEWIN_SkinClassic.lst   #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FRAMEWIN_SkinClassic.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\FRAMEWIN_SkinClassic.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FRAMEWIN_SkinRouned.c
     19          Purpose     : Implementation of framewindow widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "FRAMEWIN_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _Paint
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          static void _Paint(FRAMEWIN_Handle hObj) {
   \                     _Paint:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   40D04DE2           SUB      SP,SP,#+64
   \   00000008   0090A0E1           MOV      R9,R0
     40            FRAMEWIN_Obj * pObj;
     41            int xsize;
     42            int ysize;
     43            int BorderSize;
     44            int y0;
     45            FRAMEWIN_POSITIONS Pos;
     46            GUI_RECT r;
     47            WIDGET_ITEM_DRAW_INFO ItemInfo;
     48          
     49            pObj = FRAMEWIN_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0040A0E1           MOV      R4,R0
     50            xsize = WM_GetWindowSizeX(hObj);
   \   00000014   0900A0E1           MOV      R0,R9
   \   00000018   ........           BL       WM_GetWindowSizeX
   \   0000001C   0050A0E1           MOV      R5,R0
     51            ysize = WM_GetWindowSizeY(hObj);
   \   00000020   0900A0E1           MOV      R0,R9
   \   00000024   ........           BL       WM_GetWindowSizeY
   \   00000028   0060A0E1           MOV      R6,R0
     52            BorderSize = pObj->Props.BorderSize;
   \   0000002C   F675D4E1           LDRSH    R7,[R4, #+86]
     53            //
     54            // Perform computations
     55            //
     56            FRAMEWIN__CalcPositions(hObj, &Pos);
   \   00000030   08108DE2           ADD      R1,SP,#+8
   \   00000034   0900A0E1           MOV      R0,R9
   \   00000038   ........           BL       FRAMEWIN__CalcPositions
     57            y0 = Pos.TitleHeight + BorderSize;
   \   0000003C   F800DDE1           LDRSH    R0,[SP, #+8]
     58            //
     59            // Fill item info structure
     60            //
     61            ItemInfo.Cmd  = WIDGET_ITEM_DRAW;
   \   00000040   0110A0E3           MOV      R1,#+1
   \   00000044   20108DE5           STR      R1,[SP, #+32]
   \   00000048   008087E0           ADD      R8,R7,R0
     62            ItemInfo.hWin = hObj;
     63            ItemInfo.p  = &Pos;
     64            //
     65            // Calculate the clip rectangle for the title bar
     66            //
     67            ItemInfo.x0 = r.x0 = Pos.rClient.x0;
   \   0000004C   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   00000050   B000CDE1           STRH     R0,[SP, #+0]
   \   00000054   28008DE5           STR      R0,[SP, #+40]
     68            ItemInfo.x1 = r.x1 = Pos.rClient.x1;
   \   00000058   F001DDE1           LDRSH    R0,[SP, #+16]
   \   0000005C   B400CDE1           STRH     R0,[SP, #+4]
   \   00000060   30008DE5           STR      R0,[SP, #+48]
     69            ItemInfo.y0 = r.y0 = Pos.rTitleText.y0 - 1;
   \   00000064   F601DDE1           LDRSH    R0,[SP, #+22]
   \   00000068   08108DE2           ADD      R1,SP,#+8
   \   0000006C   1C908DE5           STR      R9,[SP, #+28]
   \   00000070   010040E2           SUB      R0,R0,#+1
   \   00000074   B200CDE1           STRH     R0,[SP, #+2]
   \   00000078   0008A0E1           LSL      R0,R0,#+16
   \   0000007C   4008A0E1           ASR      R0,R0,#+16
   \   00000080   2C008DE5           STR      R0,[SP, #+44]
     70            ItemInfo.y1 = r.y1 = Pos.rTitleText.y1;
   \   00000084   FA01DDE1           LDRSH    R0,[SP, #+26]
   \   00000088   B600CDE1           STRH     R0,[SP, #+6]
   \   0000008C   34008DE5           STR      R0,[SP, #+52]
     71            ItemInfo.y0++;
   \   00000090   2C009DE5           LDR      R0,[SP, #+44]
   \   00000094   38108DE5           STR      R1,[SP, #+56]
   \   00000098   010080E2           ADD      R0,R0,#+1
   \   0000009C   2C008DE5           STR      R0,[SP, #+44]
     72            //
     73            // Perform frame drawing operations
     74            //
     75            WM_ITERATE_START(NULL) {          // Let window manager iterate for every rectangle. This is optional; the idea is to accelerate drawing
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   ........           BL       WM__InitIVRSearch
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   3300000A           BEQ      ??_Paint_0
     76              //
     77              // Draw Title bar
     78              //
     79              WM_SetUserClipRect(&r);
   \                     ??_Paint_1:
   \   000000B0   0D00A0E1           MOV      R0,SP
   \   000000B4   ........           BL       WM_SetUserClipRect
     80              if (pObj->pfDrawItem) {
   \   000000B8   601094E5           LDR      R1,[R4, #+96]
   \   000000BC   000051E3           CMP      R1,#+0
   \   000000C0   0100000A           BEQ      ??_Paint_2
     81                pObj->pfDrawItem(&ItemInfo);
   \   000000C4   1C008DE2           ADD      R0,SP,#+28
   \   000000C8   31FF2FE1           BLX      R1
     82              }
     83              WM_SetUserClipRect(NULL);
   \                     ??_Paint_2:
   \   000000CC   0000A0E3           MOV      R0,#+0
   \   000000D0   ........           BL       WM_SetUserClipRect
     84              //
     85              // Draw Frame
     86              //
     87              LCD_SetColor(FRAMEWIN_FRAMECOLOR_DEFAULT);
   \   000000D4   ........           LDR      R0,??DataTable4  ;; 0xaaaaaa
   \   000000D8   ........           BL       LCD_SetColor
     88              GUI_FillRect(0, 0, xsize - 1, BorderSize - 1);
   \   000000DC   019045E2           SUB      R9,R5,#+1
   \   000000E0   013047E2           SUB      R3,R7,#+1
   \   000000E4   0920A0E1           MOV      R2,R9
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   0000A0E3           MOV      R0,#+0
   \   000000F0   ........           BL       GUI_FillRect
     89          	  GUI_FillRect(0, 0, Pos.rClient.x0 - 1, ysize - 1);
   \   000000F4   FC00DDE1           LDRSH    R0,[SP, #+12]
   \   000000F8   01A046E2           SUB      R10,R6,#+1
   \   000000FC   0A30A0E1           MOV      R3,R10
   \   00000100   012040E2           SUB      R2,R0,#+1
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0000A0E3           MOV      R0,#+0
   \   0000010C   ........           BL       GUI_FillRect
     90          	  GUI_FillRect(Pos.rClient.x1 + 1, 0, xsize - 1, ysize - 1);
   \   00000110   F001DDE1           LDRSH    R0,[SP, #+16]
   \   00000114   0A30A0E1           MOV      R3,R10
   \   00000118   0920A0E1           MOV      R2,R9
   \   0000011C   0010A0E3           MOV      R1,#+0
   \   00000120   010080E2           ADD      R0,R0,#+1
   \   00000124   ........           BL       GUI_FillRect
     91              GUI_FillRect(0, Pos.rClient.y1 + 1, xsize - 1, ysize - 1);
   \   00000128   F201DDE1           LDRSH    R0,[SP, #+18]
   \   0000012C   0A30A0E1           MOV      R3,R10
   \   00000130   0920A0E1           MOV      R2,R9
   \   00000134   011080E2           ADD      R1,R0,#+1
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   ........           BL       GUI_FillRect
     92              if (pObj->Widget.State & FRAMEWIN_SF_TITLEVIS) {
   \   00000140   3200D4E5           LDRB     R0,[R4, #+50]
   \   00000144   200010E3           TST      R0,#0x20
   \   00000148   0600000A           BEQ      ??_Paint_3
     93                GUI_FillRect(0, y0, xsize - 1, y0 + pObj->Props.IBorderSize - 1);
   \   0000014C   F805D4E1           LDRSH    R0,[R4, #+88]
   \   00000150   0920A0E1           MOV      R2,R9
   \   00000154   0810A0E1           MOV      R1,R8
   \   00000158   080080E0           ADD      R0,R0,R8
   \   0000015C   013040E2           SUB      R3,R0,#+1
   \   00000160   0000A0E3           MOV      R0,#+0
   \   00000164   ........           BL       GUI_FillRect
     94              }
     95              //
     96              // Draw the 3D effect (if configured)
     97              //
     98              if (BorderSize >= 2) {
   \                     ??_Paint_3:
   \   00000168   020057E3           CMP      R7,#+2
   \   0000016C   000000BA           BLT      ??_Paint_4
     99          //      pObj->Widget.pEffect->pfDrawUp(); // WIDGET_EFFECT_3D_DrawUp();
    100                WIDGET_EFFECT_3D_DrawUp();  // pObj->Widget.pEffect->pfDrawUp();
   \   00000170   ........           BL       WIDGET_EFFECT_3D_DrawUp
    101              }
    102            } WM_ITERATE_END();
   \                     ??_Paint_4:
   \   00000174   ........           BL       WM__GetNextIVR
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   CBFFFF1A           BNE      ??_Paint_1
    103            GUI_UNLOCK_H(pObj);
   \                     ??_Paint_0:
   \   00000180   ........           BL       GUI_ALLOC_UnlockH
    104          }
   \   00000184   40D08DE2           ADD      SP,SP,#+64       ;; stack cleaning
   \   00000188   F087BDE8           POP      {R4-R10,PC}      ;; return
    105          
    106          /*********************************************************************
    107          *
    108          *       FRAMEWIN_OwnerDraw
    109          */

   \                                 In section .text, align 4, keep-with-next
    110          int FRAMEWIN_OwnerDraw(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     FRAMEWIN_OwnerDraw:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   1CD04DE2           SUB      SP,SP,#+28
    111            FRAMEWIN_Obj * pObj;
    112            FRAMEWIN_POSITIONS    * pPos;
    113            const char   * pText;
    114            int Index;
    115            GUI_RECT r, rText, rTitleText;
    116          
    117            pObj = FRAMEWIN_LOCK_H(pDrawItemInfo->hWin);
   \   0000000C   000095E5           LDR      R0,[R5, #+0]
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   0040A0E1           MOV      R4,R0
    118            pPos = (FRAMEWIN_POSITIONS *)pDrawItemInfo->p;
    119            Index = (pObj->Flags & FRAMEWIN_SF_ACTIVE) ? 1 : 0;
   \   00000018   BC07D4E1           LDRH     R0,[R4, #+124]
   \   0000001C   0110A0E3           MOV      R1,#+1
   \   00000020   1C5095E5           LDR      R5,[R5, #+28]
   \   00000024   FF0000E2           AND      R0,R0,#0xFF
   \   00000028   A06101E0           AND      R6,R1,R0, LSR #+3
    120            if (pObj->hText) {
   \   0000002C   700094E5           LDR      R0,[R4, #+112]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0200000A           BEQ      ??FRAMEWIN_OwnerDraw_0
    121              pText = (const char *)GUI_LOCK_H(pObj->hText);
   \   00000038   ........           BL       GUI_ALLOC_LockH
   \   0000003C   0070A0E1           MOV      R7,R0
   \   00000040   000000EA           B        ??FRAMEWIN_OwnerDraw_1
    122            } else {
    123              pText = NULL;
   \                     ??FRAMEWIN_OwnerDraw_0:
   \   00000044   0070A0E3           MOV      R7,#+0
    124            }
    125            rTitleText = pPos->rTitleText;
   \                     ??FRAMEWIN_OwnerDraw_1:
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   0C1085E2           ADD      R1,R5,#+12
   \   00000050   0820A0E3           MOV      R2,#+8
   \   00000054   ........           BL       __aeabi_memcpy
    126            r.x0 = pPos->rClient.x0 - 1;
   \   00000058   F400D5E1           LDRSH    R0,[R5, #+4]
   \   0000005C   010040E2           SUB      R0,R0,#+1
   \   00000060   B800CDE1           STRH     R0,[SP, #+8]
    127            r.y0 = pPos->rTitleText.y0;
   \   00000064   FE10D5E1           LDRSH    R1,[R5, #+14]
   \   00000068   BA10CDE1           STRH     R1,[SP, #+10]
    128            r.x1 = pPos->rClient.x1 + 1;
   \   0000006C   F800D5E1           LDRSH    R0,[R5, #+8]
   \   00000070   010080E2           ADD      R0,R0,#+1
   \   00000074   BC00CDE1           STRH     R0,[SP, #+12]
    129            r.y1 = pPos->rTitleText.y1;
    130            rTitleText.x0++;
   \   00000078   F000DDE1           LDRSH    R0,[SP, #+0]
   \   0000007C   F211D5E1           LDRSH    R1,[R5, #+18]
   \   00000080   010080E2           ADD      R0,R0,#+1
   \   00000084   B000CDE1           STRH     R0,[SP, #+0]
    131            rTitleText.y0++;
   \   00000088   F200DDE1           LDRSH    R0,[SP, #+2]
   \   0000008C   BE10CDE1           STRH     R1,[SP, #+14]
   \   00000090   010080E2           ADD      R0,R0,#+1
   \   00000094   B200CDE1           STRH     R0,[SP, #+2]
    132            rTitleText.x1--;
   \   00000098   F400DDE1           LDRSH    R0,[SP, #+4]
   \   0000009C   010040E2           SUB      R0,R0,#+1
   \   000000A0   B400CDE1           STRH     R0,[SP, #+4]
    133            GUI_SetFont(pObj->Props.pFont);
   \   000000A4   340094E5           LDR      R0,[R4, #+52]
   \   000000A8   ........           BL       GUI_SetFont
    134            GUI__CalcTextRect(pText, &rTitleText, &rText, pObj->Props.TextAlign);
   \   000000AC   FA35D4E1           LDRSH    R3,[R4, #+90]
   \   000000B0   10208DE2           ADD      R2,SP,#+16
   \   000000B4   0D10A0E1           MOV      R1,SP
   \   000000B8   0700A0E1           MOV      R0,R7
   \   000000BC   ........           BL       GUI__CalcTextRect
    135            LCD_SetBkColor(pObj->Props.aBarColor[Index]);
   \   000000C0   064184E0           ADD      R4,R4,R6, LSL #+2
   \   000000C4   380094E5           LDR      R0,[R4, #+56]
   \   000000C8   ........           BL       LCD_SetBkColor
    136            LCD_SetColor(pObj->Props.aTextColor[Index]);
   \   000000CC   400094E5           LDR      R0,[R4, #+64]
   \   000000D0   ........           BL       LCD_SetColor
    137            WIDGET__FillStringInRect(pText, &r, &rTitleText, &rText);
   \   000000D4   10308DE2           ADD      R3,SP,#+16
   \   000000D8   0D20A0E1           MOV      R2,SP
   \   000000DC   08108DE2           ADD      R1,SP,#+8
   \   000000E0   0700A0E1           MOV      R0,R7
   \   000000E4   ........           BL       WIDGET__FillStringInRect
    138            GUI_UNLOCK_H(pObj);
   \   000000E8   ........           BL       GUI_ALLOC_UnlockH
    139            if (pText) {
   \   000000EC   000057E3           CMP      R7,#+0
   \   000000F0   0000000A           BEQ      ??FRAMEWIN_OwnerDraw_2
    140              GUI_UNLOCK_H(pText);
   \   000000F4   ........           BL       GUI_ALLOC_UnlockH
    141            }
    142            return 0;
   \                     ??FRAMEWIN_OwnerDraw_2:
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   1CD08DE2           ADD      SP,SP,#+28
   \   00000100   F080BDE8           POP      {R4-R7,PC}       ;; return
    143          }
    144          
    145          /*********************************************************************
    146          *
    147          *       _Create
    148          */

   \                                 In section .text, align 4, keep-with-next
    149          static void _Create(FRAMEWIN_Handle hObj) {
    150            FRAMEWIN_SetOwnerDraw(hObj, FRAMEWIN_OwnerDraw);
   \                     _Create:
   \   00000000   ........           LDR      R1,??DataTable4_1
   \   00000004   ........           B        FRAMEWIN_SetOwnerDraw  ;; tailcall
    151          }
    152          
    153          /*********************************************************************
    154          *
    155          *       _GetBorderSize
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          static unsigned _GetBorderSize(FRAMEWIN_Handle hObj, unsigned Index) {
   \                     _GetBorderSize:
   \   00000000   10402DE9           PUSH     {R4,LR}
    158            unsigned BorderSize;
    159            FRAMEWIN_Obj * pObj;
    160          
    161            GUI_USE_PARA(Index);
    162            pObj = FRAMEWIN_LOCK_H(hObj);
    163            BorderSize = pObj->Props.BorderSize;
   \   00000004   ........           BL       GUI_ALLOC_LockH
   \   00000008   F645D0E1           LDRSH    R4,[R0, #+86]
    164            GUI_UNLOCK_H(pObj);
   \   0000000C   ........           BL       GUI_ALLOC_UnlockH
    165            return BorderSize;
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   1080BDE8           POP      {R4,PC}          ;; return
    166          }
    167          
    168          /*********************************************************************
    169          *
    170          *        Private data
    171          *
    172          **********************************************************************
    173          */
    174          /*********************************************************************
    175          *
    176          *       _SkinPrivate
    177          */

   \                                 In section .data, align 4
    178          static FRAMEWIN_SKIN_PRIVATE _SkinPrivate = {
   \                     _SkinPrivate:
   \   00000000   ........           DC32 _GetBorderSize
   \   00000004   00000000           DC8 0, 0, 0, 0
    179            _GetBorderSize
    180          };
    181          
    182          /*********************************************************************
    183          *
    184          *       FRAMEWIN__SkinClassic
    185          */

   \                                 In section .text, align 4, keep-with-next
    186          const WIDGET_SKIN FRAMEWIN__SkinClassic = {
   \                     FRAMEWIN__SkinClassic:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Paint, _Create, _SkinPrivate
   \              ............
    187            _Paint,
    188            _Create,
    189            &_SkinPrivate
    190          };
    191          
    192          /*********************************************************************
    193          *
    194          *        Public code
    195          *
    196          **********************************************************************
    197          */
    198          /*********************************************************************
    199          *
    200          *       FRAMEWIN_SetSkinClassic
    201          */

   \                                 In section .text, align 4, keep-with-next
    202          void FRAMEWIN_SetSkinClassic(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_SetSkinClassic:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0040A0E1           MOV      R4,R0
    203            FRAMEWIN_Obj * pObj;
    204            FRAMEWIN_SKIN_PRIVATE * pSkinPrivate;
    205            int OldHeight, OldBorderSizeL, OldBorderSizeR, OldBorderSizeT;
    206          
    207            pObj = FRAMEWIN_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
    208            pSkinPrivate = (FRAMEWIN_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
   \   00000010   5C1090E5           LDR      R1,[R0, #+92]
   \   00000014   087091E5           LDR      R7,[R1, #+8]
    209            OldHeight = FRAMEWIN__CalcTitleHeight(pObj);
   \   00000018   ........           BL       FRAMEWIN__CalcTitleHeight
   \   0000001C   0050A0E1           MOV      R5,R0
    210            GUI_UNLOCK_H(pObj);
   \   00000020   ........           BL       GUI_ALLOC_UnlockH
    211            //
    212            // Get old border size
    213            //
    214            OldBorderSizeL = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_L);
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   002097E5           LDR      R2,[R7, #+0]
   \   00000030   32FF2FE1           BLX      R2
   \   00000034   0060A0E1           MOV      R6,R0
    215            OldBorderSizeR = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_R);
   \   00000038   0310A0E3           MOV      R1,#+3
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   002097E5           LDR      R2,[R7, #+0]
   \   00000044   32FF2FE1           BLX      R2
   \   00000048   0080A0E1           MOV      R8,R0
    216            OldBorderSizeT = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_T);
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   002097E5           LDR      R2,[R7, #+0]
   \   00000058   32FF2FE1           BLX      R2
   \   0000005C   0070A0E1           MOV      R7,R0
    217            //
    218            // Enable skinning
    219            //
    220            pObj = FRAMEWIN_LOCK_H(hObj);
    221            pObj->pWidgetSkin = &FRAMEWIN__SkinClassic;
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       GUI_ALLOC_LockH
   \   00000068   ........           ADR      R1,FRAMEWIN__SkinClassic
   \   0000006C   5C1080E5           STR      R1,[R0, #+92]
    222            GUI_UNLOCK_H(pObj);
   \   00000070   ........           BL       GUI_ALLOC_UnlockH
    223            //
    224            // Recalc positions and invalidate
    225            //
    226            FRAMEWIN__UpdatePositions(hObj);
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       FRAMEWIN__UpdatePositions
    227            FRAMEWIN__UpdateButtons(hObj, OldHeight, OldBorderSizeL, OldBorderSizeR, OldBorderSizeT);
   \   0000007C   00708DE5           STR      R7,[SP, #+0]
   \   00000080   0830A0E1           MOV      R3,R8
   \   00000084   0620A0E1           MOV      R2,R6
   \   00000088   0510A0E1           MOV      R1,R5
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       FRAMEWIN__UpdateButtons
    228            FRAMEWIN_SetOwnerDraw(hObj, FRAMEWIN_OwnerDraw);
   \   00000094   ........           LDR      R1,??DataTable4_1
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       FRAMEWIN_SetOwnerDraw
    229            WM_InvalidateWindow(hObj);
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   08D08DE2           ADD      SP,SP,#+8
   \   000000A8   F041BDE8           POP      {R4-R8,LR}
   \   000000AC   ........           B        WM_InvalidateWindow  ;; tailcall
    230          }
    231          
    232          /*********************************************************************
    233          *
    234          *       FRAMEWIN_SetDefaultSkinClassic
    235          */

   \                                 In section .text, align 4, keep-with-next
    236          void FRAMEWIN_SetDefaultSkinClassic(void) {
    237            FRAMEWIN__pSkinDefault = &FRAMEWIN__SkinClassic;
   \                     FRAMEWIN_SetDefaultSkinClassic:
   \   00000000   ........           LDR      R0,??DataTable4_2
   \   00000004   ........           ADR      R1,FRAMEWIN__SkinClassic
   \   00000008   001080E5           STR      R1,[R0, #+0]
    238          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   AAAAAA00           DC32     0xaaaaaa

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   ........           DC32     FRAMEWIN_OwnerDraw

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   ........           DC32     FRAMEWIN__pSkinDefault
    239          
    240          #else
    241            void FRAMEWIN_SkinClassic_C(void);
    242            void FRAMEWIN_SkinClassic_C(void) {} /* avoid empty object files */
    243          #endif /* GUI_WINSUPPORT */
    244          
    245          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     FRAMEWIN_OwnerDraw                 48
     FRAMEWIN_SetDefaultSkinClassic      0
     FRAMEWIN_SetSkinClassic            32
     _Create                             8
     _GetBorderSize                      8
     _Paint                             96


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Paint                          396
     FRAMEWIN_OwnerDraw              260
     _Create                           8
     _GetBorderSize                   24
     _SkinPrivate                      8
     FRAMEWIN__SkinClassic            12
     FRAMEWIN_SetSkinClassic         176
     FRAMEWIN_SetDefaultSkinClassic   16
     ??DataTable4                      4
     ??DataTable4_1                    4
     ??DataTable4_2                    4

 
   8 bytes in section .data
 904 bytes in section .text
 
 904 bytes of CODE memory
   8 bytes of DATA memory

Errors: none
Warnings: none
