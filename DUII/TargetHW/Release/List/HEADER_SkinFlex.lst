###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:58 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\HEADER_SkinFlex.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\HEADER_SkinFlex.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\HEADER_SkinFlex.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\HEADER_SkinFlex.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\HEADER_SkinFlex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : HEADER_SkinFlex.c
     19          Purpose     : Implementation of framewindow default skin
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "HEADER_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines (configuration defaults)
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   HEADER_SKINPROPS

   \                                 In section .data, align 4
     36            static HEADER_SKINFLEX_PROPS _Props = {
   \                     _Props:
   \   00000000   70707000FCFC       DC32 7368816, 16579836, 15987699, 15527148, 14671839, 13684944, 4210752
   \              FC00F3F3F300
   \              ECECEC00DFDF
   \              DF00D0D0D000
   \              40404000    
     37              { 0x00707070, 0x00FCFCFC },
     38              { 0x00F3F3F3, 0x00ECECEC },
     39              { 0x00DFDFDF, 0x00D0D0D0 },
     40              0x00404040,
     41            };
     42            #define HEADER_SKINPROPS &_Props
     43          #endif
     44          
     45          /*********************************************************************
     46          *
     47          *       Static data
     48          *
     49          **********************************************************************
     50          */
     51          static HEADER_SKINFLEX_PROPS * const _pProps = HEADER_SKINPROPS;
     52          
     53          /*********************************************************************
     54          *
     55          *       Static code
     56          *
     57          **********************************************************************
     58          */
     59          /*********************************************************************
     60          *
     61          *       _DrawBackground
     62          */

   \                                 In section .text, align 4, keep-with-next
     63          static void _DrawBackground(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     _DrawBackground:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     64            int ym;
     65          
     66            ym = (pDrawItemInfo->y1 + pDrawItemInfo->y0) >> 1;
   \   00000008   180094E5           LDR      R0,[R4, #+24]
   \   0000000C   101094E5           LDR      R1,[R4, #+16]
     67            GUI_SetColor(_pProps->aColorFrame[0]);
   \   00000010   ........           LDR      R6,??DataTable4
   \   00000014   000081E0           ADD      R0,R1,R0
   \   00000018   C050A0E1           ASR      R5,R0,#+1
   \   0000001C   08D04DE2           SUB      SP,SP,#+8
   \   00000020   000096E5           LDR      R0,[R6, #+0]
   \   00000024   ........           BL       GUI_SetColor
     68            GUI_DrawVLine(pDrawItemInfo->x1, pDrawItemInfo->y0, pDrawItemInfo->y1 - 1);
   \   00000028   180094E5           LDR      R0,[R4, #+24]
   \   0000002C   101094E5           LDR      R1,[R4, #+16]
   \   00000030   012040E2           SUB      R2,R0,#+1
   \   00000034   140094E5           LDR      R0,[R4, #+20]
   \   00000038   ........           BL       GUI_DrawVLine
     69            GUI_DrawHLine(pDrawItemInfo->y1, pDrawItemInfo->x0, pDrawItemInfo->x1);
   \   0000003C   142094E5           LDR      R2,[R4, #+20]
   \   00000040   0C1094E5           LDR      R1,[R4, #+12]
   \   00000044   180094E5           LDR      R0,[R4, #+24]
   \   00000048   ........           BL       GUI_DrawHLine
     70            GUI_SetColor(_pProps->aColorFrame[1]);
   \   0000004C   040096E5           LDR      R0,[R6, #+4]
   \   00000050   ........           BL       GUI_SetColor
     71            GUI_DrawVLine(pDrawItemInfo->x0, pDrawItemInfo->y0, pDrawItemInfo->y1 - 1);
   \   00000054   180094E5           LDR      R0,[R4, #+24]
   \   00000058   101094E5           LDR      R1,[R4, #+16]
   \   0000005C   012040E2           SUB      R2,R0,#+1
   \   00000060   0C0094E5           LDR      R0,[R4, #+12]
   \   00000064   ........           BL       GUI_DrawVLine
     72            GUI_DrawGradientV(pDrawItemInfo->x0 + 1, pDrawItemInfo->y0, pDrawItemInfo->x1 - 1, ym - 1, _pProps->aColorUpper[0],  _pProps->aColorUpper[1]);
   \   00000068   0C0096E5           LDR      R0,[R6, #+12]
   \   0000006C   013045E2           SUB      R3,R5,#+1
   \   00000070   04008DE5           STR      R0,[SP, #+4]
   \   00000074   080096E5           LDR      R0,[R6, #+8]
   \   00000078   00008DE5           STR      R0,[SP, #+0]
   \   0000007C   140094E5           LDR      R0,[R4, #+20]
   \   00000080   101094E5           LDR      R1,[R4, #+16]
   \   00000084   012040E2           SUB      R2,R0,#+1
   \   00000088   0C0094E5           LDR      R0,[R4, #+12]
   \   0000008C   010080E2           ADD      R0,R0,#+1
   \   00000090   ........           BL       GUI_DrawGradientV
     73            GUI_DrawGradientV(pDrawItemInfo->x0 + 1, ym, pDrawItemInfo->x1 - 1, pDrawItemInfo->y1 - 1, _pProps->aColorLower[0],  _pProps->aColorLower[1]);
   \   00000094   140096E5           LDR      R0,[R6, #+20]
   \   00000098   0510A0E1           MOV      R1,R5
   \   0000009C   04008DE5           STR      R0,[SP, #+4]
   \   000000A0   100096E5           LDR      R0,[R6, #+16]
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   180094E5           LDR      R0,[R4, #+24]
   \   000000AC   013040E2           SUB      R3,R0,#+1
   \   000000B0   140094E5           LDR      R0,[R4, #+20]
   \   000000B4   012040E2           SUB      R2,R0,#+1
   \   000000B8   0C0094E5           LDR      R0,[R4, #+12]
   \   000000BC   010080E2           ADD      R0,R0,#+1
   \   000000C0   ........           BL       GUI_DrawGradientV
     74          }
   \   000000C4   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   000000C8   7080BDE8           POP      {R4-R6,PC}       ;; return
     75          
     76          /*********************************************************************
     77          *
     78          *       _DrawBitmap
     79          */

   \                                 In section .text, align 4, keep-with-next
     80          static void _DrawBitmap(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     _DrawBitmap:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     81            HEADER_Obj * pObj;
     82            HEADER_COLUMN * pColumn;
     83            GUI_ARRAY Columns;
     84            WM_HMEM hDrawObj;
     85            int xOff, yOff, Align, Width, xSize, ySize;
     86          
     87            //
     88            // Get widget properties
     89            //
     90            pObj    = HEADER_LOCK_H(pDrawItemInfo->hWin);
     91            Columns = pObj->Columns;
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   4C5090E5           LDR      R5,[R0, #+76]
     92            GUI_UNLOCK_H(pObj);
   \   00000014   ........           BL       GUI_ALLOC_UnlockH
     93            //
     94            // Get column properties
     95            //
     96            pColumn  = (HEADER_COLUMN *)GUI_ARRAY_GetpItemLocked(Columns, pDrawItemInfo->ItemIndex);
   \   00000018   081094E5           LDR      R1,[R4, #+8]
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       GUI_ARRAY_GetpItemLocked
     97            Align    = pColumn->Align;
   \   00000024   F450D0E1           LDRSH    R5,[R0, #+4]
     98            Width    = pColumn->Width;
   \   00000028   007090E5           LDR      R7,[R0, #+0]
     99            hDrawObj = pColumn->hDrawObj;
   \   0000002C   086090E5           LDR      R6,[R0, #+8]
    100            GUI_UNLOCK_H(pColumn);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
    101            //
    102            // Get draw object properties
    103            //
    104            xSize = GUI_DRAW__GetXSize(hDrawObj);
   \   00000034   0600A0E1           MOV      R0,R6
   \   00000038   ........           BL       GUI_DRAW__GetXSize
   \   0000003C   0080A0E1           MOV      R8,R0
    105            ySize = GUI_DRAW__GetYSize(hDrawObj);
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           BL       GUI_DRAW__GetYSize
    106            //
    107            // Calculate offset
    108            //
    109            xOff = yOff = 0;
    110            switch (Align & GUI_TA_HORIZONTAL) {
   \   00000048   033005E2           AND      R3,R5,#0x3
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   010053E3           CMP      R3,#+1
   \   00000058   0500000A           BEQ      ??_DrawBitmap_0
   \   0000005C   0500003A           BCC      ??_DrawBitmap_1
   \   00000060   020053E3           CMP      R3,#+2
   \   00000064   08104700           SUBEQ    R1,R7,R8
   \   00000068   A11F8100           ADDEQ    R1,R1,R1, LSR #+31
   \   0000006C   C110A001           ASREQ    R1,R1,#+1
   \   00000070   000000EA           B        ??_DrawBitmap_1
    111            case GUI_TA_RIGHT:
    112              xOff = (Width - xSize);
   \                     ??_DrawBitmap_0:
   \   00000074   081047E0           SUB      R1,R7,R8
    113              break;
    114            case GUI_TA_HCENTER:
    115              xOff = (Width - xSize) / 2;
    116              break;
    117            }
    118            switch (Align & GUI_TA_VERTICAL) {
   \                     ??_DrawBitmap_1:
   \   00000078   0C3005E2           AND      R3,R5,#0xC
   \   0000007C   043053E2           SUBS     R3,R3,#+4
   \   00000080   0200000A           BEQ      ??_DrawBitmap_2
   \   00000084   083053E2           SUBS     R3,R3,#+8
   \   00000088   0600000A           BEQ      ??_DrawBitmap_3
   \   0000008C   0C0000EA           B        ??_DrawBitmap_4
    119          	case GUI_TA_BOTTOM:
    120              yOff = ((pDrawItemInfo->y1 - pDrawItemInfo->y0 + 1) - ySize);
   \                     ??_DrawBitmap_2:
   \   00000090   182094E5           LDR      R2,[R4, #+24]
   \   00000094   103094E5           LDR      R3,[R4, #+16]
   \   00000098   032042E0           SUB      R2,R2,R3
   \   0000009C   012082E2           ADD      R2,R2,#+1
   \   000000A0   002042E0           SUB      R2,R2,R0
    121              break;
   \   000000A4   060000EA           B        ??_DrawBitmap_4
    122          	case GUI_TA_VCENTER:
    123              yOff = ((pDrawItemInfo->y1 - pDrawItemInfo->y0 + 1) - ySize) / 2;
   \                     ??_DrawBitmap_3:
   \   000000A8   182094E5           LDR      R2,[R4, #+24]
   \   000000AC   103094E5           LDR      R3,[R4, #+16]
   \   000000B0   032042E0           SUB      R2,R2,R3
   \   000000B4   012082E2           ADD      R2,R2,#+1
   \   000000B8   000042E0           SUB      R0,R2,R0
   \   000000BC   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000000C0   C020A0E1           ASR      R2,R0,#+1
    124              break;
    125            }
    126            //
    127            // Draw bitmap
    128            //
    129            GUI_DRAW__Draw(hDrawObj, pDrawItemInfo->hWin, pDrawItemInfo->x0 + xOff, pDrawItemInfo->y0 + yOff);
   \                     ??_DrawBitmap_4:
   \   000000C4   100094E5           LDR      R0,[R4, #+16]
   \   000000C8   003082E0           ADD      R3,R2,R0
   \   000000CC   0C0094E5           LDR      R0,[R4, #+12]
   \   000000D0   002081E0           ADD      R2,R1,R0
   \   000000D4   001094E5           LDR      R1,[R4, #+0]
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   F041BDE8           POP      {R4-R8,LR}
   \   000000E0   ........           B        GUI_DRAW__Draw   ;; tailcall
    130          }
    131          
    132          /*********************************************************************
    133          *
    134          *       _GetArrowPara
    135          */
    136          static void _GetArrowPara(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, int * pArrowSize, int * pArrowPos) {
    137            *pArrowSize = ((pDrawItemInfo->y1 - pDrawItemInfo->y0 - 4) / 3) - 1;
    138            *pArrowPos  = pDrawItemInfo->x1 - 4 - *pArrowSize;
    139          }
    140          
    141          /*********************************************************************
    142          *
    143          *       _DrawText
    144          */

   \                                 In section .text, align 4, keep-with-next
    145          static void _DrawText(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     _DrawText:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
    146            HEADER_Obj * pObj;
    147            HEADER_COLUMN * pColumn;
    148            GUI_ARRAY Columns;
    149            int Align, DirIndicatorColumn, ArrowSize, ArrowPos;
    150            GUI_RECT Rect;
    151            GUI_COLOR TextColor;
    152            const GUI_FONT GUI_UNI_PTR * pFont;
    153            char * pText;
    154          
    155            //
    156            // Get widget properties
    157            //
    158            pObj               = HEADER_LOCK_H(pDrawItemInfo->hWin);
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           BL       GUI_ALLOC_LockH
    159            Columns            = pObj->Columns;
   \   00000014   4C8090E5           LDR      R8,[R0, #+76]
    160            TextColor          = pObj->Props.TextColor;
   \   00000018   3C5090E5           LDR      R5,[R0, #+60]
    161            pFont              = pObj->Props.pFont;
   \   0000001C   346090E5           LDR      R6,[R0, #+52]
    162            DirIndicatorColumn = pObj->DirIndicatorColumn;
   \   00000020   607090E5           LDR      R7,[R0, #+96]
    163            GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    164            //
    165            // Get column properties
    166            //
    167            pColumn = (HEADER_COLUMN *)GUI_ARRAY_GetpItemLocked(Columns, pDrawItemInfo->ItemIndex);
   \   00000028   081094E5           LDR      R1,[R4, #+8]
   \   0000002C   0800A0E1           MOV      R0,R8
   \   00000030   ........           BL       GUI_ARRAY_GetpItemLocked
    168            Align   = pColumn->Align;
   \   00000034   F480D0E1           LDRSH    R8,[R0, #+4]
    169            pText   = pColumn->acText;
   \   00000038   0C9080E2           ADD      R9,R0,#+12
    170            GUI_UNLOCK_H(pColumn);
   \   0000003C   ........           BL       GUI_ALLOC_UnlockH
    171            //
    172            // 
    173            //
    174            Rect.x0 = pDrawItemInfo->x0;
   \   00000040   0C0094E5           LDR      R0,[R4, #+12]
    175            Rect.y0 = pDrawItemInfo->y0;
    176            Rect.x1 = pDrawItemInfo->x1;
    177            Rect.y1 = pDrawItemInfo->y1;
    178            GUI__ReduceRect(&Rect, &Rect, 2);
   \   00000044   0220A0E3           MOV      R2,#+2
   \   00000048   B000CDE1           STRH     R0,[SP, #+0]
   \   0000004C   100094E5           LDR      R0,[R4, #+16]
   \   00000050   0D10A0E1           MOV      R1,SP
   \   00000054   B200CDE1           STRH     R0,[SP, #+2]
   \   00000058   140094E5           LDR      R0,[R4, #+20]
   \   0000005C   B400CDE1           STRH     R0,[SP, #+4]
   \   00000060   180094E5           LDR      R0,[R4, #+24]
   \   00000064   B600CDE1           STRH     R0,[SP, #+6]
   \   00000068   0D00A0E1           MOV      R0,SP
   \   0000006C   ........           BL       GUI__ReduceRect
    179            if (DirIndicatorColumn == pDrawItemInfo->ItemIndex) {
   \   00000070   080094E5           LDR      R0,[R4, #+8]
   \   00000074   000057E1           CMP      R7,R0
   \   00000078   0C00001A           BNE      ??_DrawText_0
    180              _GetArrowPara(pDrawItemInfo, &ArrowSize, &ArrowPos);
    181              Rect.x1 -= (ArrowSize << 1) + 1;
   \   0000007C   181094E5           LDR      R1,[R4, #+24]
   \   00000080   102094E5           LDR      R2,[R4, #+16]
   \   00000084   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000088   021041E0           SUB      R1,R1,R2
   \   0000008C   ........           LDR      R2,??DataTable4_1  ;; 0x55555556
   \   00000090   041041E2           SUB      R1,R1,#+4
   \   00000094   9132C2E0           SMULL    R3,R2,R1,R2
   \   00000098   0210B0E1           MOVS     R1,R2
   \   0000009C   01108242           ADDMI    R1,R2,#+1
   \   000000A0   011041E2           SUB      R1,R1,#+1
   \   000000A4   810040E0           SUB      R0,R0,R1, LSL #+1
   \   000000A8   010040E2           SUB      R0,R0,#+1
   \   000000AC   B400CDE1           STRH     R0,[SP, #+4]
    182            }
    183            GUI_SetColor(TextColor);
   \                     ??_DrawText_0:
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   ........           BL       GUI_SetColor
    184            GUI_SetTextMode(GUI_TM_TRANS);
   \   000000B8   0200A0E3           MOV      R0,#+2
   \   000000BC   ........           BL       GUI_SetTextMode
    185            GUI_SetFont(pFont);
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   ........           BL       GUI_SetFont
    186            GUI_DispStringInRect(pText, &Rect, Align);
   \   000000C8   0820A0E1           MOV      R2,R8
   \   000000CC   0D10A0E1           MOV      R1,SP
   \   000000D0   0900A0E1           MOV      R0,R9
   \   000000D4   ........           BL       GUI_DispStringInRect
    187          }
   \   000000D8   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000000DC   F083BDE8           POP      {R4-R9,PC}       ;; return
    188          
    189          /*********************************************************************
    190          *
    191          *       _DrawTriangle
    192          */
    193          static void _DrawTriangle(int x, int y, int Size, int Inc) {
    194            y += -Inc * (Size >> 1);
    195            for (; Size >= 0; Size--, y += Inc) {
    196              GUI_DrawHLine(y, x - Size, x + Size);
    197            }
    198          }
    199          
    200          /*********************************************************************
    201          *
    202          *       _DrawArrow
    203          */
    204          static void _DrawArrow(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
    205            HEADER_Obj * pObj;
    206            int DirIndicatorReverse, ArrowSize, ArrowPos;
    207          
    208            //
    209            // Get widget properties
    210            //
    211            pObj                = HEADER_LOCK_H(pDrawItemInfo->hWin);
    212            DirIndicatorReverse = pObj->DirIndicatorReverse;
    213            GUI_UNLOCK_H(pObj);
    214            //
    215            // Calculate arrow position
    216            //
    217            _GetArrowPara(pDrawItemInfo, &ArrowSize, &ArrowPos);
    218            //
    219            // Draw arrow
    220            //
    221            GUI_SetColor(_pProps->ColorArrow);
    222            _DrawTriangle(ArrowPos, ((pDrawItemInfo->y1 - pDrawItemInfo->y0) >> 1), ArrowSize, DirIndicatorReverse + 1 - DirIndicatorReverse * 3);
    223          }
    224          
    225          /*********************************************************************
    226          *
    227          *       _DrawOverlap
    228          */
    229          static void _DrawOverlap(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
    230            int ym;
    231          
    232            ym = (pDrawItemInfo->y1 + pDrawItemInfo->y0) >> 1;
    233            GUI_SetColor(_pProps->aColorFrame[0]);
    234            GUI_DrawHLine(pDrawItemInfo->y1, pDrawItemInfo->x0, pDrawItemInfo->x1);
    235            GUI_SetColor(_pProps->aColorFrame[1]);
    236            GUI_DrawVLine(pDrawItemInfo->x0, pDrawItemInfo->y0, pDrawItemInfo->y1 - 1);
    237            GUI_DrawGradientV(pDrawItemInfo->x0 + 1, pDrawItemInfo->y0, pDrawItemInfo->x1, ym - 1, _pProps->aColorUpper[0],  _pProps->aColorUpper[1]);
    238            GUI_DrawGradientV(pDrawItemInfo->x0 + 1, ym, pDrawItemInfo->x1, pDrawItemInfo->y1 - 1, _pProps->aColorLower[0],  _pProps->aColorLower[1]);
    239          }
    240          
    241          /*********************************************************************
    242          *
    243          *       Public code
    244          *
    245          **********************************************************************
    246          */
    247          /*********************************************************************
    248          *
    249          *       HEADER_DrawSkinFlex
    250          */

   \                                 In section .text, align 4, keep-with-next
    251          int HEADER_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     HEADER_DrawSkinFlex:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    252            switch (pDrawItemInfo->Cmd) {
   \   00000008   040094E5           LDR      R0,[R4, #+4]
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   020040E2           SUB      R0,R0,#+2
   \   00000014   0E0050E3           CMP      R0,#+14
   \   00000018   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??HEADER_DrawSkinFlex_0:
   \   0000001C   6600008A           BHI      ??HEADER_DrawSkinFlex_1
   \   00000020   160000EA           B        ??HEADER_DrawSkinFlex_2
   \   00000024   0C0000EA           B        ??HEADER_DrawSkinFlex_3
   \   00000028   0E0000EA           B        ??HEADER_DrawSkinFlex_4
   \   0000002C   620000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000030   610000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000034   600000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000038   5F0000EA           B        ??HEADER_DrawSkinFlex_1
   \   0000003C   5E0000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000040   360000EA           B        ??HEADER_DrawSkinFlex_5
   \   00000044   5C0000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000048   5B0000EA           B        ??HEADER_DrawSkinFlex_1
   \   0000004C   5A0000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000050   590000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000054   580000EA           B        ??HEADER_DrawSkinFlex_1
   \   00000058   050000EA           B        ??HEADER_DrawSkinFlex_6
    253            case WIDGET_ITEM_DRAW_BACKGROUND:
    254              _DrawBackground(pDrawItemInfo);
   \                     ??HEADER_DrawSkinFlex_3:
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           BL       _DrawBackground
    255              break;
   \   00000064   540000EA           B        ??HEADER_DrawSkinFlex_1
    256            case WIDGET_ITEM_DRAW_BITMAP:
    257              _DrawBitmap(pDrawItemInfo);
   \                     ??HEADER_DrawSkinFlex_4:
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       _DrawBitmap
    258              break;
   \   00000070   510000EA           B        ??HEADER_DrawSkinFlex_1
    259            case WIDGET_ITEM_DRAW_TEXT:
    260              _DrawText(pDrawItemInfo);
   \                     ??HEADER_DrawSkinFlex_6:
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   ........           BL       _DrawText
    261              break;
   \   0000007C   4E0000EA           B        ??HEADER_DrawSkinFlex_1
    262            case WIDGET_ITEM_DRAW_ARROW:
    263              _DrawArrow(pDrawItemInfo);
   \                     ??HEADER_DrawSkinFlex_2:
   \   00000080   000094E5           LDR      R0,[R4, #+0]
   \   00000084   ........           BL       GUI_ALLOC_LockH
   \   00000088   645090E5           LDR      R5,[R0, #+100]
   \   0000008C   ........           BL       GUI_ALLOC_UnlockH
   \   00000090   180094E5           LDR      R0,[R4, #+24]
   \   00000094   101094E5           LDR      R1,[R4, #+16]
   \   00000098   010040E0           SUB      R0,R0,R1
   \   0000009C   ........           LDR      R1,??DataTable4_1  ;; 0x55555556
   \   000000A0   040040E2           SUB      R0,R0,#+4
   \   000000A4   9021C1E0           SMULL    R2,R1,R0,R1
   \   000000A8   0100B0E1           MOVS     R0,R1
   \   000000AC   01008142           ADDMI    R0,R1,#+1
   \   000000B0   016040E2           SUB      R6,R0,#+1
   \   000000B4   140094E5           LDR      R0,[R4, #+20]
   \   000000B8   040040E2           SUB      R0,R0,#+4
   \   000000BC   067040E0           SUB      R7,R0,R6
   \   000000C0   ........           LDR      R0,??DataTable4
   \   000000C4   180090E5           LDR      R0,[R0, #+24]
   \   000000C8   ........           BL       GUI_SetColor
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   855040E0           SUB      R5,R0,R5, LSL #+1
   \   000000D4   180094E5           LDR      R0,[R4, #+24]
   \   000000D8   101094E5           LDR      R1,[R4, #+16]
   \   000000DC   000056E3           CMP      R6,#+0
   \   000000E0   010040E0           SUB      R0,R0,R1
   \   000000E4   C610A0E1           ASR      R1,R6,#+1
   \   000000E8   910502E0           MUL      R2,R1,R5
   \   000000EC   C04062E0           RSB      R4,R2,R0, ASR #+1
   \   000000F0   3100004A           BMI      ??HEADER_DrawSkinFlex_1
   \   000000F4   078086E0           ADD      R8,R6,R7
   \                     ??HEADER_DrawSkinFlex_7:
   \   000000F8   0820A0E1           MOV      R2,R8
   \   000000FC   061047E0           SUB      R1,R7,R6
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       GUI_DrawHLine
   \   00000108   016046E2           SUB      R6,R6,#+1
   \   0000010C   044085E0           ADD      R4,R5,R4
   \   00000110   018048E2           SUB      R8,R8,#+1
   \   00000114   000056E3           CMP      R6,#+0
   \   00000118   F6FFFF5A           BPL      ??HEADER_DrawSkinFlex_7
   \   0000011C   260000EA           B        ??HEADER_DrawSkinFlex_1
    264              break;
    265            case WIDGET_ITEM_DRAW_OVERLAP:
    266              _DrawOverlap(pDrawItemInfo);
   \                     ??HEADER_DrawSkinFlex_5:
   \   00000120   180094E5           LDR      R0,[R4, #+24]
   \   00000124   101094E5           LDR      R1,[R4, #+16]
   \   00000128   ........           LDR      R6,??DataTable4
   \   0000012C   000081E0           ADD      R0,R1,R0
   \   00000130   C050A0E1           ASR      R5,R0,#+1
   \   00000134   000096E5           LDR      R0,[R6, #+0]
   \   00000138   ........           BL       GUI_SetColor
   \   0000013C   142094E5           LDR      R2,[R4, #+20]
   \   00000140   0C1094E5           LDR      R1,[R4, #+12]
   \   00000144   180094E5           LDR      R0,[R4, #+24]
   \   00000148   ........           BL       GUI_DrawHLine
   \   0000014C   040096E5           LDR      R0,[R6, #+4]
   \   00000150   ........           BL       GUI_SetColor
   \   00000154   180094E5           LDR      R0,[R4, #+24]
   \   00000158   101094E5           LDR      R1,[R4, #+16]
   \   0000015C   012040E2           SUB      R2,R0,#+1
   \   00000160   0C0094E5           LDR      R0,[R4, #+12]
   \   00000164   ........           BL       GUI_DrawVLine
   \   00000168   0C0096E5           LDR      R0,[R6, #+12]
   \   0000016C   013045E2           SUB      R3,R5,#+1
   \   00000170   04008DE5           STR      R0,[SP, #+4]
   \   00000174   080096E5           LDR      R0,[R6, #+8]
   \   00000178   00008DE5           STR      R0,[SP, #+0]
   \   0000017C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000180   142094E5           LDR      R2,[R4, #+20]
   \   00000184   101094E5           LDR      R1,[R4, #+16]
   \   00000188   010080E2           ADD      R0,R0,#+1
   \   0000018C   ........           BL       GUI_DrawGradientV
   \   00000190   140096E5           LDR      R0,[R6, #+20]
   \   00000194   0510A0E1           MOV      R1,R5
   \   00000198   04008DE5           STR      R0,[SP, #+4]
   \   0000019C   100096E5           LDR      R0,[R6, #+16]
   \   000001A0   00008DE5           STR      R0,[SP, #+0]
   \   000001A4   180094E5           LDR      R0,[R4, #+24]
   \   000001A8   142094E5           LDR      R2,[R4, #+20]
   \   000001AC   013040E2           SUB      R3,R0,#+1
   \   000001B0   0C0094E5           LDR      R0,[R4, #+12]
   \   000001B4   010080E2           ADD      R0,R0,#+1
   \   000001B8   ........           BL       GUI_DrawGradientV
    267              break;
    268            }
    269            return 0;
   \                     ??HEADER_DrawSkinFlex_1:
   \   000001BC   0000A0E3           MOV      R0,#+0
   \   000001C0   08D08DE2           ADD      SP,SP,#+8
   \   000001C4   F081BDE8           POP      {R4-R8,PC}       ;; return
    270          }
    271          
    272          /*********************************************************************
    273          *
    274          *       HEADER_SetSkinFlexProps
    275          */

   \                                 In section .text, align 4, keep-with-next
    276          void HEADER_SetSkinFlexProps(const HEADER_SKINFLEX_PROPS * pProps, int Index) {
   \                     HEADER_SetSkinFlexProps:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    277            if (Index == 0) {
   \   00000004   000051E3           CMP      R1,#+0
    278              *_pProps = *pProps;
   \   00000008   7C50B008           LDMEQ    R0!,{R2-R6,R12,LR}
   \   0000000C   ........           LDREQ    R1,??DataTable4
   \   00000010   7C50A108           STMEQ    R1!,{R2-R6,R12,LR}
    279            }
    280          }
   \   00000014   7080BDE8           POP      {R4-R6,PC}       ;; return
    281          
    282          /*********************************************************************
    283          *
    284          *       HEADER_GetSkinFlexProps
    285          */

   \                                 In section .text, align 4, keep-with-next
    286          void HEADER_GetSkinFlexProps(HEADER_SKINFLEX_PROPS * pProps, int Index) {
   \                     HEADER_GetSkinFlexProps:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    287            if (Index == 0) {
   \   00000004   000051E3           CMP      R1,#+0
    288              *pProps = *_pProps;
   \   00000008   ........           LDREQ    R1,??DataTable4
   \   0000000C   7C50B108           LDMEQ    R1!,{R2-R6,R12,LR}
   \   00000010   7C50A008           STMEQ    R0!,{R2-R6,R12,LR}
    289            }
    290          }
   \   00000014   7080BDE8           POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   ........           DC32     _Props

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   56555555           DC32     0x55555556
    291          
    292          #else
    293            void HEADER_SkinFlex_C(void);
    294            void HEADER_SkinFlex_C(void) {} /* avoid empty object files */
    295          #endif /* GUI_WINSUPPORT */
    296          
    297          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     HEADER_DrawSkinFlex         32
     HEADER_GetSkinFlexProps     16
     HEADER_SetSkinFlexProps     16
     _DrawBackground             24
     _DrawBitmap                 24
     _DrawText                   40


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     _Props                    28
     _DrawBackground          204
     _DrawBitmap              228
     _DrawText                224
     HEADER_DrawSkinFlex      456
     HEADER_SetSkinFlexProps   24
     HEADER_GetSkinFlexProps   24
     ??DataTable4               4
     ??DataTable4_1             4

 
    28 bytes in section .data
 1 168 bytes in section .text
 
 1 168 bytes of CODE memory
    28 bytes of DATA memory

Errors: none
Warnings: none
