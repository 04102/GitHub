###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:14 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUICC_4.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\GUICC_4.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUICC_4.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUICC_4.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUICC_4.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICC_4.C
     19          Purpose     : Color conversion routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LCD_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _Color2Index_4
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          static unsigned _Color2Index_4(LCD_COLOR Color) {
     36            int r, g, b;
     37            r = (Color >> ( 0 + 4)) & 15;
     38            g = (Color >> ( 8 + 4)) & 15;
     39            b = (Color >> (16 + 4)) & 15;
     40            return (r + g + b + 1) / 3;
   \                     _Color2Index_4:
   \   00000000   0F10A0E3           MOV      R1,#+15
   \   00000004   0F20A0E3           MOV      R2,#+15
   \   00000008   201201E0           AND      R1,R1,R0, LSR #+4
   \   0000000C   202602E0           AND      R2,R2,R0, LSR #+12
   \   00000010   011082E0           ADD      R1,R2,R1
   \   00000014   0F20A0E3           MOV      R2,#+15
   \   00000018   200A02E0           AND      R0,R2,R0, LSR #+20
   \   0000001C   010080E0           ADD      R0,R0,R1
   \   00000020   ........           LDR      R1,??DataTable2  ;; 0x55555556
   \   00000024   010080E2           ADD      R0,R0,#+1
   \   00000028   9021C1E0           SMULL    R2,R1,R0,R1
   \   0000002C   0100B0E1           MOVS     R0,R1
   \   00000030   01008142           ADDMI    R0,R1,#+1
   \   00000034   1EFF2FE1           BX       LR               ;; return
     41          }
     42          
     43          /*********************************************************************
     44          *
     45          *       _Index2Color_4
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          static LCD_COLOR _Index2Color_4(unsigned Index) {
     48            return ((U32)Index) * 0x111111;
   \                     _Index2Color_4:
   \   00000000   ........           LDR      R1,??DataTable2_1  ;; 0x111111
   \   00000004   910000E0           MUL      R0,R1,R0
   \   00000008   1EFF2FE1           BX       LR               ;; return
     49          }
     50          
     51          /*********************************************************************
     52          *
     53          *       _GetIndexMask_4
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          static unsigned _GetIndexMask_4(void) {
     56            return 0x0f;
   \                     _GetIndexMask_4:
   \   00000000   0F00A0E3           MOV      R0,#+15
   \   00000004   1EFF2FE1           BX       LR               ;; return
     57          }
     58          
     59          /*********************************************************************
     60          *
     61          *       Public data
     62          *
     63          **********************************************************************
     64          */
     65          /*********************************************************************
     66          *
     67          *       LCD_API_ColorConv_4
     68          */

   \                                 In section .rodata, align 4, keep-with-next
     69          const LCD_API_COLOR_CONV LCD_API_ColorConv_4 = {
   \                     LCD_API_ColorConv_4:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Color2Index_4, _Index2Color_4, _GetIndexMask_4
   \              ............

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   56555555           DC32     0x55555556

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   11111100           DC32     0x111111
     70            _Color2Index_4,
     71            _Index2Color_4,
     72            _GetIndexMask_4
     73          };
     74          
     75          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     _Color2Index_4       0
     _GetIndexMask_4      0
     _Index2Color_4       0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     _Color2Index_4        56
     _Index2Color_4        12
     _GetIndexMask_4        8
     LCD_API_ColorConv_4   12
     ??DataTable2           4
     ??DataTable2_1         4

 
 12 bytes in section .rodata
 84 bytes in section .text
 
 84 bytes of CODE  memory
 12 bytes of CONST memory

Errors: none
Warnings: none
