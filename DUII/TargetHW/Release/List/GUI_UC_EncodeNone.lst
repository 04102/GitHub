###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:47 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_UC_EncodeNone.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_UC_EncodeNone.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_UC_EncodeNone.lst      #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_UC_EncodeNone.o         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_UC_EncodeNone.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_UC_EncodeNone.c
     19          Purpose     : Encoding routines for non unicode systems (default)
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _GetCharCode
     34          *
     35          * Purpose:
     36          *   Return the UNICODE character code of the current character.
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          static U16 _GetCharCode(const char GUI_UNI_PTR * s) {
     39            return *(const U8 GUI_UNI_PTR *)s;
   \                     _GetCharCode:
   \   00000000   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000004   1EFF2FE1           BX       LR               ;; return
     40          }
     41          
     42          /*********************************************************************
     43          *
     44          *       _GetCharSize
     45          *
     46          * Purpose:
     47          *   Return the number of bytes of the current character.
     48          */

   \                                 In section .text, align 4, keep-with-next
     49          static int _GetCharSize(const char GUI_UNI_PTR * s) {
     50            GUI_USE_PARA(s);
     51            return 1;
   \                     _GetCharSize:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     52          }
     53          
     54          /*********************************************************************
     55          *
     56          *       _CalcSizeOfChar
     57          *
     58          * Purpose:
     59          *   Return the number of bytes needed for the given character.
     60          */

   \                                 In section .text, align 4, keep-with-next
     61          static int _CalcSizeOfChar(U16 Char) {
     62            GUI_USE_PARA(Char);
     63            return 1;
   \                     _CalcSizeOfChar:
   \   00000000   0100A0E3           MOV      R0,#+1
   \   00000004   1EFF2FE1           BX       LR               ;; return
     64          }
     65          
     66          /*********************************************************************
     67          *
     68          *       _Encode
     69          *
     70          * Purpose:
     71          *   Encode character into 1/2/3 bytes.
     72          */

   \                                 In section .text, align 4, keep-with-next
     73          static int _Encode(char *s, U16 Char) {
     74            *s = (U8)(Char);
   \                     _Encode:
   \   00000000   0010C0E5           STRB     R1,[R0, #+0]
     75            return 1;
   \   00000004   0100A0E3           MOV      R0,#+1
   \   00000008   1EFF2FE1           BX       LR               ;; return
     76          }
     77          
     78          /*********************************************************************
     79          *
     80          *       Static data
     81          *
     82          **********************************************************************
     83          */
     84          /*********************************************************************
     85          *
     86          *       _API_Table
     87          */

   \                                 In section .text, align 4, keep-with-next
     88          const GUI_UC_ENC_APILIST GUI_UC_None = {
   \                     GUI_UC_None:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   ............       DC32 _GetCharCode, _GetCharSize, _CalcSizeOfChar, _Encode
   \              ............
   \              ........    
     89            _GetCharCode,     /*  return character code as U16 */
     90            _GetCharSize,     /*  return size of character: 1 */
     91            _CalcSizeOfChar,  /*  return size of character: 1 */
     92            _Encode           /*  Encode character */
     93          };
     94          
     95          /*********************************************************************
     96          *
     97          *       Exported code
     98          *
     99          **********************************************************************
    100          */
    101          /*********************************************************************
    102          *
    103          *       GUI_UC_SetEncodeNone
    104          */

   \                                 In section .text, align 4, keep-with-next
    105          void GUI_UC_SetEncodeNone(void) {
   \                     GUI_UC_SetEncodeNone:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    106            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
    107            GUI_pUC_API = &GUI_UC_None;
   \   0000000C   ........           LDR      R0,??DataTable1
   \   00000010   ........           ADR      R1,GUI_UC_None
    108            GUI_UNLOCK();
   \   00000014   04D08DE2           ADD      SP,SP,#+4
   \   00000018   001080E5           STR      R1,[R0, #+0]
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   ........           B        GUI_Unlock       ;; tailcall
    109          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_pUC_API
    110          
    111          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_UC_SetEncodeNone      8
     _CalcSizeOfChar           0
     _Encode                   0
     _GetCharCode              0
     _GetCharSize              0


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     _GetCharCode            8
     _GetCharSize            8
     _CalcSizeOfChar         8
     _Encode                12
     GUI_UC_None            16
     GUI_UC_SetEncodeNone   36
     ??DataTable1            4

 
 92 bytes in section .text
 
 92 bytes of CODE memory

Errors: none
Warnings: none
