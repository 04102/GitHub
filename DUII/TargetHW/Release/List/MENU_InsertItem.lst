###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:08 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\MENU_InsertItem.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\MENU_InsertItem.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\MENU_InsertItem.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\MENU_InsertItem.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\MENU_InsertItem.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MENU_InsertItem.c
     19          Purpose     : Implementation of menu widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "MENU.h"
     24          #include "MENU_Private.h"
     25          
     26          #if GUI_WINSUPPORT
     27          
     28          /*********************************************************************
     29          *
     30          *       Public code
     31          *
     32          **********************************************************************
     33          */
     34          /*********************************************************************
     35          *
     36          *       MENU_InsertItem
     37          */

   \                                 In section .text, align 4, keep-with-next
     38          void MENU_InsertItem(MENU_Handle hObj, U16 ItemId, const MENU_ITEM_DATA * pItemData) {
   \                     MENU_InsertItem:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0250A0E1           MOV      R5,R2
     39            if (hObj && pItemData) {
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   00005513           CMPNE    R5,#+0
   \   00000018   1C00000A           BEQ      ??MENU_InsertItem_0
     40              int Index;
     41              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     42              Index = MENU__FindItem(hObj, ItemId, &hObj);
   \   00000020   04208DE2           ADD      R2,SP,#+4
   \   00000024   0410A0E1           MOV      R1,R4
   \   00000028   04009DE5           LDR      R0,[SP, #+4]
   \   0000002C   ........           BL       MENU__FindItem
   \   00000030   0040B0E1           MOVS     R4,R0
     43              if (Index >= 0) {
   \   00000034   1400004A           BMI      ??MENU_InsertItem_1
     44                MENU_Obj * pObj;
     45                GUI_ARRAY ItemArray;
     46                pObj = MENU_LOCK_H(hObj);
     47                ItemArray = pObj->ItemArray;
   \   00000038   04009DE5           LDR      R0,[SP, #+4]
   \   0000003C   ........           BL       GUI_ALLOC_LockH
   \   00000040   646090E5           LDR      R6,[R0, #+100]
     48                GUI_UNLOCK_H(pObj);
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
     49                if (GUI_ARRAY_InsertBlankItem(ItemArray, Index) != 0) {
   \   00000048   0410A0E1           MOV      R1,R4
   \   0000004C   0600A0E1           MOV      R0,R6
   \   00000050   ........           BL       GUI_ARRAY_InsertBlankItem
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0B00000A           BEQ      ??MENU_InsertItem_1
     50                  if (MENU__SetItem(hObj, Index, pItemData) == 0) {
   \   0000005C   0520A0E1           MOV      R2,R5
   \   00000060   0410A0E1           MOV      R1,R4
   \   00000064   04009DE5           LDR      R0,[SP, #+4]
   \   00000068   ........           BL       MENU__SetItem
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0300001A           BNE      ??MENU_InsertItem_2
     51                    GUI_ARRAY_DeleteItem(ItemArray, Index);
   \   00000074   0410A0E1           MOV      R1,R4
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   ........           BL       GUI_ARRAY_DeleteItem
   \   00000080   010000EA           B        ??MENU_InsertItem_1
     52                  } else {
     53                    MENU__ResizeMenu(hObj);
   \                     ??MENU_InsertItem_2:
   \   00000084   04009DE5           LDR      R0,[SP, #+4]
   \   00000088   ........           BL       MENU__ResizeMenu
     54                  }
     55                }
     56              }
     57              WM_UNLOCK();
   \                     ??MENU_InsertItem_1:
   \   0000008C   ........           BL       GUI_Unlock
     58            }
     59          }
   \                     ??MENU_InsertItem_0:
   \   00000090   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000094   7080BDE8           POP      {R4-R6,PC}       ;; return
     60          
     61          #else  /* avoid empty object files */
     62            void MENU_InsertItem_C(void) {}
     63          #endif
     64          
     65          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     MENU_InsertItem     24


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     MENU_InsertItem  152

 
 152 bytes in section .text
 
 152 bytes of CODE memory

Errors: none
Warnings: none
