###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:40 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUICC_444_12.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\GUICC_444_12.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUICC_444_12.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUICC_444_12.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUICC_444_12.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICC_444_12.c
     19          Purpose     : Color conversion routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LCD_Protected.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code,
     28          *
     29          *       LCD_FIXEDPALETTE == 444, 4096 colors, 0000BBBBGGGGRRRR
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _Color2Index_444_12
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          static unsigned _Color2Index_444_12(LCD_COLOR Color) {
     38            unsigned int r, g, b;
     39            r = Color         & 255;
     40            g = (Color >> 8)  & 255;
     41            b = (Color >> 16) & 255;
     42            r = (r + 8) / 17;
     43            g = (g + 8) / 17;
     44            b = (b + 8) / 17;
     45            return r + (g << 4) + (b << 8);
   \                     _Color2Index_444_12:
   \   00000000   FF1000E2           AND      R1,R0,#0xFF
   \   00000004   081081E2           ADD      R1,R1,#+8
   \   00000008   F120A0E3           MOV      R2,#+241
   \   0000000C   0118A0E1           LSL      R1,R1,#+16
   \   00000010   F02C82E3           ORR      R2,R2,#0xF000
   \   00000014   2118A0E1           LSR      R1,R1,#+16
   \   00000018   910202E0           MUL      R2,R1,R2
   \   0000001C   F130A0E3           MOV      R3,#+241
   \   00000020   221AA0E1           LSR      R1,R2,#+20
   \   00000024   2024A0E1           LSR      R2,R0,#+8
   \   00000028   FF2002E2           AND      R2,R2,#0xFF
   \   0000002C   082082E2           ADD      R2,R2,#+8
   \   00000030   0228A0E1           LSL      R2,R2,#+16
   \   00000034   F03C83E3           ORR      R3,R3,#0xF000
   \   00000038   2228A0E1           LSR      R2,R2,#+16
   \   0000003C   920303E0           MUL      R3,R2,R3
   \   00000040   2008A0E1           LSR      R0,R0,#+16
   \   00000044   232AA0E1           LSR      R2,R3,#+20
   \   00000048   FF0000E2           AND      R0,R0,#0xFF
   \   0000004C   021281E0           ADD      R1,R1,R2, LSL #+4
   \   00000050   080080E2           ADD      R0,R0,#+8
   \   00000054   F120A0E3           MOV      R2,#+241
   \   00000058   0008A0E1           LSL      R0,R0,#+16
   \   0000005C   F02C82E3           ORR      R2,R2,#0xF000
   \   00000060   2008A0E1           LSR      R0,R0,#+16
   \   00000064   900202E0           MUL      R2,R0,R2
   \   00000068   220AA0E1           LSR      R0,R2,#+20
   \   0000006C   000481E0           ADD      R0,R1,R0, LSL #+8
   \   00000070   1EFF2FE1           BX       LR               ;; return
     46          }
     47          
     48          /*********************************************************************
     49          *
     50          *       _Index2Color_444_12
     51          */

   \                                 In section .text, align 4, keep-with-next
     52          static LCD_COLOR _Index2Color_444_12(unsigned Index) {
     53            unsigned int r, g, b;
     54            /* Seperate the color masks */
     55            r = Index & 0xf;
     56            g = (Index >> 4) & 0xf;
     57            b = ((unsigned)Index >> 8) & 0xf;
     58            /* Convert the color masks */
     59            r = r * 17;
     60            g = g * 17;
     61            b = b * 17;
     62            return r + (g<<8) + (((U32)b)<<16);
   \                     _Index2Color_444_12:
   \   00000000   0F20A0E3           MOV      R2,#+15
   \   00000004   0F1000E2           AND      R1,R0,#0xF
   \   00000008   202202E0           AND      R2,R2,R0, LSR #+4
   \   0000000C   011281E0           ADD      R1,R1,R1, LSL #+4
   \   00000010   022282E0           ADD      R2,R2,R2, LSL #+4
   \   00000014   021481E0           ADD      R1,R1,R2, LSL #+8
   \   00000018   0F20A0E3           MOV      R2,#+15
   \   0000001C   200402E0           AND      R0,R2,R0, LSR #+8
   \   00000020   000280E0           ADD      R0,R0,R0, LSL #+4
   \   00000024   000881E0           ADD      R0,R1,R0, LSL #+16
   \   00000028   1EFF2FE1           BX       LR               ;; return
     63          }
     64          
     65          /*********************************************************************
     66          *
     67          *       _GetIndexMask_444_12
     68          */

   \                                 In section .text, align 4, keep-with-next
     69          static unsigned _GetIndexMask_444_12(void) {
     70            return 0x0fff;
   \                     _GetIndexMask_444_12:
   \   00000000   FF00A0E3           MOV      R0,#+255
   \   00000004   F00E80E3           ORR      R0,R0,#0xF00
   \   00000008   1EFF2FE1           BX       LR               ;; return
     71          }
     72          
     73          /*********************************************************************
     74          *
     75          *       Public data
     76          *
     77          **********************************************************************
     78          */
     79          /*********************************************************************
     80          *
     81          *       LCD_API_ColorConv_444_12
     82          *
     83          * Purpose
     84          *   API table for this color conversion mode. Only used by memory
     85          *   devices in this mode.
     86          */

   \                                 In section .rodata, align 4, keep-with-next
     87          const LCD_API_COLOR_CONV LCD_API_ColorConv_444_12 = {
   \                     LCD_API_ColorConv_444_12:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Color2Index_444_12, _Index2Color_444_12, _GetIndexMask_444_12
   \              ............
     88            _Color2Index_444_12,
     89            _Index2Color_444_12,
     90            _GetIndexMask_444_12
     91          };
     92          
     93          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     _Color2Index_444_12       0
     _GetIndexMask_444_12      0
     _Index2Color_444_12       0


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _Color2Index_444_12       116
     _Index2Color_444_12        44
     _GetIndexMask_444_12       12
     LCD_API_ColorConv_444_12   12

 
  12 bytes in section .rodata
 172 bytes in section .text
 
 172 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
