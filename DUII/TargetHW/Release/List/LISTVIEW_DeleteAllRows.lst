###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:23 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_DeleteAllRows.c            #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_DeleteAllRows.c -D         #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    NOPROFILER -D OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN        #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\LISTVIEW_DeleteAllRows.lst #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\LISTVIEW_DeleteAllRows.o    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_DeleteAllRows.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_DeleteAllRows.c
     19          Purpose     : Implementation of LISTVIEW_DeleteAllRows
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LISTVIEW_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Public routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       LISTVIEW_DeleteAllRows
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void LISTVIEW_DeleteAllRows(LISTVIEW_Handle hObj) {
   \                     LISTVIEW_DeleteAllRows:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     38            if (hObj) {
   \   0000000C   0E00000A           BEQ      ??LISTVIEW_DeleteAllRows_0
     39              LISTVIEW_Obj* pObj;
     40              unsigned NumRows;
     41              WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     42              pObj = LISTVIEW_LOCK_H(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
     43              NumRows = LISTVIEW__GetNumRows(pObj);
   \   0000001C   ........           BL       LISTVIEW__GetNumRows
   \   00000020   0050A0E1           MOV      R5,R0
     44              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
   \   00000028   000055E3           CMP      R5,#+0
   \   0000002C   0500000A           BEQ      ??LISTVIEW_DeleteAllRows_1
   \                     ??LISTVIEW_DeleteAllRows_2:
   \   00000030   015045E2           SUB      R5,R5,#+1
     45              while (NumRows--) {
     46                LISTVIEW_DeleteRow(hObj, NumRows);
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       LISTVIEW_DeleteRow
   \   00000040   000055E3           CMP      R5,#+0
   \   00000044   F9FFFF1A           BNE      ??LISTVIEW_DeleteAllRows_2
     47              }
     48              WM_UNLOCK();
   \                     ??LISTVIEW_DeleteAllRows_1:
   \   00000048   ........           BL       GUI_Unlock
     49            }
     50          }
   \                     ??LISTVIEW_DeleteAllRows_0:
   \   0000004C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
     51          
     52          #else                            /* Avoid problems with empty object modules */
     53            void LISTVIEW_DeleteAllRows_C(void);
     54            void LISTVIEW_DeleteAllRows_C(void) {}
     55          #endif
     56          
     57          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     LISTVIEW_DeleteAllRows     16


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     LISTVIEW_DeleteAllRows   84

 
 84 bytes in section .text
 
 84 bytes of CODE memory

Errors: none
Warnings: none
