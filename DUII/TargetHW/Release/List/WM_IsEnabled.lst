###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:13:56 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_IsEnabled.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\WM_IsEnabled.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_IsEnabled.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_IsEnabled.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_IsEnabled.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_IsEnabled.c
     19          Purpose     : Windows manager function
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_IsEnabled
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          int WM_IsEnabled(WM_HWIN hObj) {
   \                     WM_IsEnabled:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     38            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     39            if (hObj) {
   \   00000010   0400000A           BEQ      ??WM_IsEnabled_0
     40              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     41              r = WM__IsEnabled(hObj);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       WM__IsEnabled
   \   00000020   0050A0E1           MOV      R5,R0
     42              WM_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
     43            }
     44            return r;
   \                     ??WM_IsEnabled_0:
   \   00000028   0500A0E1           MOV      R0,R5
   \   0000002C   04D08DE2           ADD      SP,SP,#+4
   \   00000030   3080BDE8           POP      {R4,R5,PC}       ;; return
     45          }
     46          
     47          #else
     48            void WM_IsEnabled_c(void) {} /* avoid empty object files */
     49          #endif  /* GUI_WINSUPPORT */
     50          
     51          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function     .cstack
     --------     -------
     WM_IsEnabled     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     WM_IsEnabled     52

 
 52 bytes in section .text
 
 52 bytes of CODE memory

Errors: none
Warnings: none
