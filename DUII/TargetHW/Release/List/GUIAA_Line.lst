###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:11 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIAA_Line.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\GUIAA_Line.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUIAA_Line.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUIAA_Line.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIAA_Line.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIAALine.C
     19          Purpose     : Drawing lines with antialiasing
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _AA_DrawLine
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          static void _AA_DrawLine(int x0, int y0, int x1, int y1) {
   \                     _AA_DrawLine:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
     38            int xMin, xMax;
     39            U8 PenSizeOld = GUI_GetPenSize();
   \   00000018   ........           BL       GUI_GetPenSize
   \   0000001C   ........           LDR      R1,??DataTable0
   \   00000020   0080A0E1           MOV      R8,R0
   \   00000024   9810D1E5           LDRB     R1,[R1, #+152]
   \   00000028   800160E1           SMULBB   R0,R0,R1
   \   0000002C   0800CDE5           STRB     R0,[SP, #+8]
     40            U8 PenSizeHR  = PenSizeOld * GUI_Context.AA_Factor;
     41            U8 OldPenShape = GUI_SetPenShape(GUI_PS_FLAT);
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   ........           BL       GUI_SetPenShape
     42            /* Calculate left and right borders for AA module */
     43            if (x0 < x1) {
     44              xMin = x0;
     45              xMax = x1;
     46            } else {
     47              xMin = x1;
     48              xMax = x0;
   \   00000038   ........           LDR      R1,??DataTable0
   \   0000003C   0090A0E1           MOV      R9,R0
   \   00000040   98A0D1E5           LDRB     R10,[R1, #+152]
   \   00000044   9910D1E5           LDRB     R1,[R1, #+153]
   \   00000048   060054E1           CMP      R4,R6
   \   0000004C   0400A0B1           MOVLT    R0,R4
   \   00000050   00608DB5           STRLT    R6,[SP, #+0]
   \   00000054   0600A0A1           MOVGE    R0,R6
   \   00000058   00408DA5           STRGE    R4,[SP, #+0]
   \   0000005C   000051E3           CMP      R1,#+0
   \   00000060   0B00000A           BEQ      ??_AA_DrawLine_0
     49            }
     50            if (GUI_Context.AA_HiResEnable) {
     51              xMin -= PenSizeHR;
     52              xMax += PenSizeHR;
     53              xMin /= GUI_Context.AA_Factor;
   \   00000064   0820DDE5           LDRB     R2,[SP, #+8]
   \   00000068   0A10A0E1           MOV      R1,R10
   \   0000006C   04208DE5           STR      R2,[SP, #+4]
   \   00000070   020040E0           SUB      R0,R0,R2
   \   00000074   ........           BL       __aeabi_idiv
   \   00000078   00B0A0E1           MOV      R11,R0
     54              xMax /= GUI_Context.AA_Factor;
   \   0000007C   00009DE5           LDR      R0,[SP, #+0]
   \   00000080   04109DE5           LDR      R1,[SP, #+4]
   \   00000084   000081E0           ADD      R0,R1,R0
   \   00000088   0A10A0E1           MOV      R1,R10
   \   0000008C   ........           BL       __aeabi_idiv
   \   00000090   060000EA           B        ??_AA_DrawLine_1
     55            } else {
     56              xMin -= PenSizeOld;
   \                     ??_AA_DrawLine_0:
   \   00000094   08B040E0           SUB      R11,R0,R8
     57              xMax += PenSizeOld;
   \   00000098   00009DE5           LDR      R0,[SP, #+0]
     58              x0 *= GUI_Context.AA_Factor;
   \   0000009C   9A0404E0           MUL      R4,R10,R4
     59              x1 *= GUI_Context.AA_Factor;
   \   000000A0   9A0606E0           MUL      R6,R10,R6
     60              y0 *= GUI_Context.AA_Factor;
   \   000000A4   9A0505E0           MUL      R5,R10,R5
     61              y1 *= GUI_Context.AA_Factor;
   \   000000A8   9A0707E0           MUL      R7,R10,R7
   \   000000AC   000088E0           ADD      R0,R8,R0
     62            }
     63            /* Do the actual drawing */
     64            GUI_AA_Init(xMin, xMax);
   \                     ??_AA_DrawLine_1:
   \   000000B0   0010A0E1           MOV      R1,R0
   \   000000B4   0B00A0E1           MOV      R0,R11
   \   000000B8   ........           BL       GUI_AA_Init
     65            GUI_SetPenSize(PenSizeHR);
   \   000000BC   0800DDE5           LDRB     R0,[SP, #+8]
   \   000000C0   ........           BL       GUI_SetPenSize
     66            GL_DrawLine(x0 , y0 , x1 ,  y1 );
   \   000000C4   0730A0E1           MOV      R3,R7
   \   000000C8   0620A0E1           MOV      R2,R6
   \   000000CC   0510A0E1           MOV      R1,R5
   \   000000D0   0400A0E1           MOV      R0,R4
   \   000000D4   ........           BL       GL_DrawLine
     67            GUI_AA_Exit();
   \   000000D8   ........           BL       GUI_AA_Exit
     68            /* Draw end points (can be optimized away in future, TBD*/
     69            switch (OldPenShape) {
   \   000000DC   000059E3           CMP      R9,#+0
   \   000000E0   0C00001A           BNE      ??_AA_DrawLine_2
     70            case GUI_PS_ROUND:
     71              {
     72                int r = GUI_Context.AA_Factor * PenSizeOld / 2;
   \   000000E4   ........           LDR      R0,??DataTable0
     73                GL_FillCircleAA_HiRes(x0 , y0 , r);
   \   000000E8   0510A0E1           MOV      R1,R5
   \   000000EC   9800D0E5           LDRB     R0,[R0, #+152]
   \   000000F0   880060E1           SMULBB   R0,R8,R0
   \   000000F4   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000000F8   C0A0A0E1           ASR      R10,R0,#+1
   \   000000FC   0A20A0E1           MOV      R2,R10
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       GL_FillCircleAA_HiRes
     74                GL_FillCircleAA_HiRes(x1 , y1 , r);
   \   00000108   0A20A0E1           MOV      R2,R10
   \   0000010C   0710A0E1           MOV      R1,R7
   \   00000110   0600A0E1           MOV      R0,R6
   \   00000114   ........           BL       GL_FillCircleAA_HiRes
     75              }
     76              break;
     77            }
     78            GUI_SetPenSize(PenSizeOld);
   \                     ??_AA_DrawLine_2:
   \   00000118   0800A0E1           MOV      R0,R8
   \   0000011C   ........           BL       GUI_SetPenSize
     79            GUI_SetPenShape(OldPenShape);
   \   00000120   0900A0E1           MOV      R0,R9
   \   00000124   0CD08DE2           ADD      SP,SP,#+12
   \   00000128   F04FBDE8           POP      {R4-R11,LR}
   \   0000012C   ........           B        GUI_SetPenShape  ;; tailcall
     80          }
     81          
     82          /*********************************************************************
     83          *
     84          *       Public code
     85          *
     86          **********************************************************************
     87          */
     88          /*********************************************************************
     89          *
     90          *       GUI_AA_DrawLine
     91          */

   \                                 In section .text, align 4, keep-with-next
     92          void GUI_AA_DrawLine(int x0, int y0, int x1, int y1) {
   \                     GUI_AA_DrawLine:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
     93            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
     94            #if (GUI_WINSUPPORT)
     95              WM_ADDORG_AA(x0,y0);
   \   0000001C   ........           BL       WM__GetOrgX_AA
   \   00000020   044080E0           ADD      R4,R0,R4
   \   00000024   ........           BL       WM__GetOrgY_AA
   \   00000028   055080E0           ADD      R5,R0,R5
     96              WM_ADDORG_AA(x1,y1);
   \   0000002C   ........           BL       WM__GetOrgX_AA
   \   00000030   066080E0           ADD      R6,R0,R6
   \   00000034   ........           BL       WM__GetOrgY_AA
   \   00000038   077080E0           ADD      R7,R0,R7
     97              WM_ITERATE_START(NULL); {
   \   0000003C   0000A0E3           MOV      R0,#+0
   \   00000040   ........           BL       WM__InitIVRSearch
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   0700000A           BEQ      ??GUI_AA_DrawLine_0
     98            #endif
     99            _AA_DrawLine(x0, y0, x1, y1);
   \                     ??GUI_AA_DrawLine_1:
   \   0000004C   0730A0E1           MOV      R3,R7
   \   00000050   0620A0E1           MOV      R2,R6
   \   00000054   0510A0E1           MOV      R1,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       _AA_DrawLine
    100            #if (GUI_WINSUPPORT)
    101              } WM_ITERATE_END();
   \   00000060   ........           BL       WM__GetNextIVR
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   F7FFFF1A           BNE      ??GUI_AA_DrawLine_1
    102            #endif
    103            GUI_UNLOCK();
   \                     ??GUI_AA_DrawLine_0:
   \   0000006C   04D08DE2           ADD      SP,SP,#+4
   \   00000070   F040BDE8           POP      {R4-R7,LR}
   \   00000074   ........           B        GUI_Unlock       ;; tailcall
    104          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GUI_Context
    105          
    106          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     GUI_AA_DrawLine     24
     _AA_DrawLine        48


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     _AA_DrawLine     304
     GUI_AA_DrawLine  120
     ??DataTable0       4

 
 428 bytes in section .text
 
 428 bytes of CODE memory

Errors: none
Warnings: none
