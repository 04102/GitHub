###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:55 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\FRAMEWIN_Get.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\FRAMEWIN_Get.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FRAMEWIN_Get.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FRAMEWIN_Get.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\FRAMEWIN_Get.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FRAMEWIN_Get.c
     19          Purpose     : 
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include "FRAMEWIN_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *        Exported routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       FRAMEWIN_GetFont
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          const GUI_FONT GUI_UNI_PTR * FRAMEWIN_GetFont(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_GetFont:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
     40            const GUI_FONT GUI_UNI_PTR * r = NULL;
   \   0000000C   0050A0E3           MOV      R5,#+0
     41            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     42            if (hObj) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   0500000A           BEQ      ??FRAMEWIN_GetFont_0
     43              FRAMEWIN_Obj * pObj;
     44              pObj = FRAMEWIN_LOCK_H(hObj);
     45              r = pObj->Props.pFont;
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   345090E5           LDR      R5,[R0, #+52]
     46              GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     47              FRAMEWIN_Invalidate(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
     48            }
     49            GUI_UNLOCK();
   \                     ??FRAMEWIN_GetFont_0:
   \   00000034   ........           BL       GUI_Unlock
     50            return r;
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     51          }
     52          
     53          /*********************************************************************
     54          *
     55          *       FRAMEWIN_GetTitleHeight
     56          */

   \                                 In section .text, align 4, keep-with-next
     57          int FRAMEWIN_GetTitleHeight(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_GetTitleHeight:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040B0E1           MOVS     R4,R0
     58            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     59            FRAMEWIN_POSITIONS Pos;
     60            if (hObj) {
   \   00000010   0A00000A           BEQ      ??FRAMEWIN_GetTitleHeight_0
     61              FRAMEWIN_Obj * pObj;
     62              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     63              FRAMEWIN__CalcPositions(hObj, &Pos);
   \   00000018   0D10A0E1           MOV      R1,SP
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       FRAMEWIN__CalcPositions
     64              pObj = FRAMEWIN_LOCK_H(hObj);
     65              r = pObj->Props.TitleHeight;
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_LockH
   \   0000002C   F455D0E1           LDRSH    R5,[R0, #+84]
     66              GUI_UNLOCK_H(pObj);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
     67              if (r == 0) {
   \   00000034   000055E3           CMP      R5,#+0
     68                r = Pos.TitleHeight;
   \   00000038   F050DD01           LDRSHEQ  R5,[SP, #+0]
     69              }
     70              WM_UNLOCK();
   \   0000003C   ........           BL       GUI_Unlock
     71            }
     72            return r;
   \                     ??FRAMEWIN_GetTitleHeight_0:
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   14D08DE2           ADD      SP,SP,#+20
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
     73          }
     74          
     75          /*********************************************************************
     76          *
     77          *       FRAMEWIN_GetBorderSize
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          int FRAMEWIN_GetBorderSize(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_GetBorderSize:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     80            int BorderSizeT;
     81            FRAMEWIN_Obj * pObj;
     82            FRAMEWIN_SKIN_PRIVATE * pSkinPrivate;
     83          
     84            BorderSizeT = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     85            if (hObj) {
   \   00000010   0C00000A           BEQ      ??FRAMEWIN_GetBorderSize_0
     86              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     87              pObj = FRAMEWIN_LOCK_H(hObj);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0020A0E1           MOV      R2,R0
     88              pSkinPrivate = (FRAMEWIN_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
     89              BorderSizeT = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_T);
   \   00000024   5C2092E5           LDR      R2,[R2, #+92]
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   082092E5           LDR      R2,[R2, #+8]
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   002092E5           LDR      R2,[R2, #+0]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   0050A0E1           MOV      R5,R0
     90              GUI_UNLOCK_H(pObj);
   \   00000040   ........           BL       GUI_ALLOC_UnlockH
     91              WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
     92            }
     93            return BorderSizeT;
   \                     ??FRAMEWIN_GetBorderSize_0:
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
     94          }
     95          
     96          /*********************************************************************
     97          *
     98          *       FRAMEWIN_GetTextAlign
     99          */

   \                                 In section .text, align 4, keep-with-next
    100          int FRAMEWIN_GetTextAlign(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_GetTextAlign:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    101            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    102            if (hObj) {
   \   00000010   0500000A           BEQ      ??FRAMEWIN_GetTextAlign_0
    103              FRAMEWIN_Obj * pObj;
    104              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    105              pObj = FRAMEWIN_LOCK_H(hObj);
    106              r = pObj->Props.TextAlign;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   FA55D0E1           LDRSH    R5,[R0, #+90]
    107              GUI_UNLOCK_H(pObj);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    108              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    109            }
    110            return r;
   \                     ??FRAMEWIN_GetTextAlign_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    111          }
    112          
    113          /*********************************************************************
    114          *
    115          *       FRAMEWIN_GetText
    116          */

   \                                 In section .text, align 4, keep-with-next
    117          void FRAMEWIN_GetText(FRAMEWIN_Handle hObj, char * pBuffer, int MaxLen) {
   \                     FRAMEWIN_GetText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
    118            if (hObj) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   1500000A           BEQ      ??FRAMEWIN_GetText_0
    119              FRAMEWIN_Obj * pObj;
    120              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
    121              pObj = FRAMEWIN_LOCK_H(hObj);
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_LockH
    122              if (pObj->hText) {
   \   00000028   700090E5           LDR      R0,[R0, #+112]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0D00000A           BEQ      ??FRAMEWIN_GetText_1
    123                int Len;
    124                const char * pText;
    125                pText = (const char *)GUI_LOCK_H(pObj->hText);
   \   00000034   ........           BL       GUI_ALLOC_LockH
   \   00000038   0040A0E1           MOV      R4,R0
    126                Len = strlen(pText);
   \   0000003C   ........           BL       strlen
   \   00000040   0070A0E1           MOV      R7,R0
    127                if (Len > (MaxLen - 1)) {
   \   00000044   010046E2           SUB      R0,R6,#+1
   \   00000048   070050E1           CMP      R0,R7
    128                  Len = MaxLen - 1;
   \   0000004C   0070A0B1           MOVLT    R7,R0
    129                }
    130                GUI_MEMCPY((void *)pBuffer, (const void *)pText, Len);
   \   00000050   0720A0E1           MOV      R2,R7
   \   00000054   0410A0E1           MOV      R1,R4
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       __aeabi_memcpy
    131                *(pBuffer + Len) = 0;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0500C7E7           STRB     R0,[R7, +R5]
    132                GUI_UNLOCK_H(pText);
   \   00000068   ........           BL       GUI_ALLOC_UnlockH
    133              }
    134              GUI_UNLOCK_H(pObj);
   \                     ??FRAMEWIN_GetText_1:
   \   0000006C   ........           BL       GUI_ALLOC_UnlockH
    135              WM_UNLOCK();
   \   00000070   ........           BL       GUI_Unlock
    136            }
    137          }
   \                     ??FRAMEWIN_GetText_0:
   \   00000074   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000078   F080BDE8           POP      {R4-R7,PC}       ;; return
    138          
    139          /*********************************************************************
    140          *
    141          *       FRAMEWIN_GetBarColor
    142          */

   \                                 In section .text, align 4, keep-with-next
    143          GUI_COLOR FRAMEWIN_GetBarColor(FRAMEWIN_Handle hObj, unsigned Index) {
   \                     FRAMEWIN_GetBarColor:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    144            GUI_COLOR r = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
    145            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0700000A           BEQ      ??FRAMEWIN_GetBarColor_0
    146              FRAMEWIN_Obj * pObj;
    147              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    148              pObj = FRAMEWIN_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    149              if (Index < GUI_COUNTOF(pObj->Props.aBarColor)) {
   \   00000024   020055E3           CMP      R5,#+2
    150                r = pObj->Props.aBarColor[Index];
   \   00000028   05018030           ADDCC    R0,R0,R5, LSL #+2
   \   0000002C   38609035           LDRCC    R6,[R0, #+56]
    151              }
    152              GUI_UNLOCK_H(pObj);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
    153              WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
    154            }
    155            return r;
   \                     ??FRAMEWIN_GetBarColor_0:
   \   00000038   0600A0E1           MOV      R0,R6
   \   0000003C   7080BDE8           POP      {R4-R6,PC}       ;; return
    156          }
    157          
    158          /*********************************************************************
    159          *
    160          *       FRAMEWIN_GetActive
    161          */

   \                                 In section .text, align 4, keep-with-next
    162          int FRAMEWIN_GetActive(FRAMEWIN_Handle hObj) {
   \                     FRAMEWIN_GetActive:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    163            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    164            if (hObj) {
   \   00000010   0700000A           BEQ      ??FRAMEWIN_GetActive_0
    165              FRAMEWIN_Obj * pObj;
    166              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    167              pObj = FRAMEWIN_LOCK_H(hObj);
    168              if (pObj->Flags & FRAMEWIN_CF_ACTIVE) {
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   7C00D0E5           LDRB     R0,[R0, #+124]
   \   00000024   080010E3           TST      R0,#0x8
    169                r = 1;
   \   00000028   0150A013           MOVNE    R5,#+1
    170              }
    171              GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    172              WM_UNLOCK();
   \   00000030   ........           BL       GUI_Unlock
    173            }
    174            return r;
   \                     ??FRAMEWIN_GetActive_0:
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
    175          }
    176          
    177          #else
    178            void FRAMEWIN_Get_c(void) {} /* avoid empty object files */
    179          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     FRAMEWIN_GetActive          16
     FRAMEWIN_GetBarColor        16
     FRAMEWIN_GetBorderSize      16
     FRAMEWIN_GetFont            16
     FRAMEWIN_GetText            24
     FRAMEWIN_GetTextAlign       16
     FRAMEWIN_GetTitleHeight     32


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     FRAMEWIN_GetFont          68
     FRAMEWIN_GetTitleHeight   76
     FRAMEWIN_GetBorderSize    84
     FRAMEWIN_GetTextAlign     56
     FRAMEWIN_GetText         124
     FRAMEWIN_GetBarColor      64
     FRAMEWIN_GetActive        64

 
 536 bytes in section .text
 
 536 bytes of CODE memory

Errors: none
Warnings: none
