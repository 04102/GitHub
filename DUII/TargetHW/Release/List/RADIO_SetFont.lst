###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:27 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\RADIO_SetFont.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\RADIO_SetFont.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\RADIO_SetFont.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\RADIO_SetFont.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\RADIO_SetFont.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : RADIO_SetFont.c
     19          Purpose     : Implementation of RADIO_SetFont
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "RADIO_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       RADIO_SetFont
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void RADIO_SetFont(RADIO_Handle hObj, const GUI_FONT GUI_UNI_PTR* pFont) {
   \                     RADIO_SetFont:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
     38            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0E00000A           BEQ      ??RADIO_SetFont_0
     39              RADIO_Obj* pObj;
     40              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     41              pObj = RADIO_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
     42              if (pFont != pObj->Props.pFont) {
   \   00000024   401090E5           LDR      R1,[R0, #+64]
   \   00000028   010055E1           CMP      R5,R1
   \   0000002C   0600000A           BEQ      ??RADIO_SetFont_1
     43                pObj->Props.pFont = pFont;
   \   00000030   405080E5           STR      R5,[R0, #+64]
     44                if (GUI_ARRAY_GetNumItems(pObj->TextArray)) {
   \   00000034   5C0090E5           LDR      R0,[R0, #+92]
   \   00000038   ........           BL       GUI_ARRAY_GetNumItems
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0100000A           BEQ      ??RADIO_SetFont_1
     45                  WM_InvalidateWindow(hObj);
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       WM_InvalidateWindow
     46                }
     47              }
     48              GUI_UNLOCK_H(pObj);
   \                     ??RADIO_SetFont_1:
   \   0000004C   ........           BL       GUI_ALLOC_UnlockH
     49              WM_UNLOCK();
   \   00000050   ........           BL       GUI_Unlock
     50            }
     51          }
   \                     ??RADIO_SetFont_0:
   \   00000054   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     52          
     53          #else  /* avoid empty object files */
     54          
     55          void RADIO_SetFont_c(void);
     56          void RADIO_SetFont_c(void) {}
     57          
     58          #endif  /* #if GUI_WINSUPPORT */
     59          
     60          /************************* end of file ******************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     RADIO_SetFont     16


   Section sizes:

     Function/Label Bytes
     -------------- -----
     RADIO_SetFont    92

 
 92 bytes in section .text
 
 92 bytes of CODE memory

Errors: none
Warnings: none
