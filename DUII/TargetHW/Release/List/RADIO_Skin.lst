###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:38 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\RADIO_Skin.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\RADIO_Skin.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\RADIO_Skin.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\RADIO_Skin.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\RADIO_Skin.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : RADIO_Skin.c
     19          Purpose     : Implementation of framewindow widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "RADIO_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _Paint
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          static void _Paint(RADIO_Handle hObj) {
   \                     _Paint:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   54D04DE2           SUB      SP,SP,#+84
   \   00000008   0090A0E1           MOV      R9,R0
     40            RADIO_Obj * pObj;
     41            RADIO_SKIN_PRIVATE * pSkinPrivate;
     42            WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;
     43            WIDGET_ITEM_DRAW_INFO ItemInfo;
     44            int i, Sel, HasFocus, FontDistY, NumItems, Spacing, ButtonSize, Height, StringDistX, GroupId, DrawFocus;
     45            GUI_RECT RectClient, RectFocus;
     46            const char * pText;
     47            GUI_ARRAY TextArray;
     48            GUI_FONTINFO FontInfo;
     49            const GUI_FONT GUI_UNI_PTR * pFont;
     50            U8 SpaceAbove, CHeight, FocusBorder;
     51          
     52            //
     53            // Get properties
     54            //
     55            pObj = RADIO_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0080A0E1           MOV      R8,R0
     56            pSkinPrivate = (RADIO_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
   \   00000014   580098E5           LDR      R0,[R8, #+88]
     57            pfDrawSkin   = pObj->Props.SkinPrivate.pfDrawSkin;
     58            NumItems     = pObj->NumItems;
   \   00000018   B416D8E1           LDRH     R1,[R8, #+100]
   \   0000001C   08A090E5           LDR      R10,[R0, #+8]
   \   00000020   546098E5           LDR      R6,[R8, #+84]
   \   00000024   28108DE5           STR      R1,[SP, #+40]
     59            Spacing      = pObj->Spacing;
     60            TextArray    = pObj->TextArray;
   \   00000028   5C1098E5           LDR      R1,[R8, #+92]
   \   0000002C   B276D8E1           LDRH     R7,[R8, #+98]
   \   00000030   48108DE5           STR      R1,[SP, #+72]
     61            pFont        = pObj->Props.pFont;
   \   00000034   401098E5           LDR      R1,[R8, #+64]
     62            Height       = RADIO__GetButtonSize(hObj) + RADIO_BORDER * 2;
   \   00000038   0900A0E1           MOV      R0,R9
   \   0000003C   24108DE5           STR      R1,[SP, #+36]
   \   00000040   ........           BL       RADIO__GetButtonSize
   \   00000044   040080E2           ADD      R0,R0,#+4
   \   00000048   34008DE5           STR      R0,[SP, #+52]
     63            Sel          = pObj->Sel;
   \   0000004C   F016D8E1           LDRSH    R1,[R8, #+96]
   \   00000050   44108DE5           STR      R1,[SP, #+68]
     64            GroupId      = pObj->GroupId;
   \   00000054   6610D8E5           LDRB     R1,[R8, #+102]
   \   00000058   40108DE5           STR      R1,[SP, #+64]
     65            HasFocus     = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 1 : 0;
   \   0000005C   3210D8E5           LDRB     R1,[R8, #+50]
   \   00000060   011001E2           AND      R1,R1,#0x1
   \   00000064   30108DE5           STR      R1,[SP, #+48]
     66            GUI_UNLOCK_H(pObj);
   \   00000068   ........           BL       GUI_ALLOC_UnlockH
     67            WM_GetClientRect(&RectClient);
   \   0000006C   38008DE2           ADD      R0,SP,#+56
   \   00000070   ........           BL       WM_GetClientRect
     68            ButtonSize = pSkinPrivate->pfGetButtonSize(hObj);
   \   00000074   0900A0E1           MOV      R0,R9
   \   00000078   00109AE5           LDR      R1,[R10, #+0]
   \   0000007C   31FF2FE1           BLX      R1
   \   00000080   0080A0E1           MOV      R8,R0
     69            //
     70            // Fill item info structure
     71            //
     72            ItemInfo.hWin = hObj;
     73            //
     74            // Draw buttons
     75            //
     76            ItemInfo.Cmd = WIDGET_ITEM_DRAW_BUTTON;
     77            ItemInfo.x0 = RectClient.x0 + RADIO_BORDER;
   \   00000084   F803DDE1           LDRSH    R0,[SP, #+56]
   \   00000088   0510A0E3           MOV      R1,#+5
   \   0000008C   04108DE5           STR      R1,[SP, #+4]
   \   00000090   020080E2           ADD      R0,R0,#+2
   \   00000094   0C008DE5           STR      R0,[SP, #+12]
     78            ItemInfo.y0 = RectClient.y0 + RADIO_BORDER;
   \   00000098   FA13DDE1           LDRSH    R1,[SP, #+58]
     79            ItemInfo.x1 = ItemInfo.x0 + ButtonSize - 1;
   \   0000009C   000088E0           ADD      R0,R8,R0
   \   000000A0   010040E2           SUB      R0,R0,#+1
   \   000000A4   021081E2           ADD      R1,R1,#+2
   \   000000A8   14008DE5           STR      R0,[SP, #+20]
     80            ItemInfo.y1 = ItemInfo.y0 + ButtonSize - 1;
   \   000000AC   010088E0           ADD      R0,R8,R1
   \   000000B0   010040E2           SUB      R0,R0,#+1
   \   000000B4   18008DE5           STR      R0,[SP, #+24]
     81            for (i = DrawFocus = 0; i < NumItems; i++) {
   \   000000B8   28009DE5           LDR      R0,[SP, #+40]
   \   000000BC   00908DE5           STR      R9,[SP, #+0]
   \   000000C0   10108DE5           STR      R1,[SP, #+16]
   \   000000C4   0090A0E3           MOV      R9,#+0
   \   000000C8   00A0A0E3           MOV      R10,#+0
   \   000000CC   010050E3           CMP      R0,#+1
   \   000000D0   240000BA           BLT      ??_Paint_0
   \   000000D4   00B0A0E1           MOV      R11,R0
   \   000000D8   01001BE3           TST      R11,#0x1
   \   000000DC   0900000A           BEQ      ??_Paint_1
     82              ItemInfo.ItemIndex = i;
   \   000000E0   08908DE5           STR      R9,[SP, #+8]
     83              pfDrawSkin(&ItemInfo);
   \   000000E4   0D00A0E1           MOV      R0,SP
   \   000000E8   36FF2FE1           BLX      R6
     84              ItemInfo.y0 += Spacing;
   \   000000EC   10009DE5           LDR      R0,[SP, #+16]
     85              ItemInfo.y1 += Spacing;
   \   000000F0   01A0A0E3           MOV      R10,#+1
   \   000000F4   000087E0           ADD      R0,R7,R0
   \   000000F8   10008DE5           STR      R0,[SP, #+16]
   \   000000FC   18009DE5           LDR      R0,[SP, #+24]
   \   00000100   000087E0           ADD      R0,R7,R0
   \   00000104   18008DE5           STR      R0,[SP, #+24]
   \                     ??_Paint_1:
   \   00000108   ABB0B0E1           LSRS     R11,R11,#+1
   \   0000010C   1500000A           BEQ      ??_Paint_0
   \                     ??_Paint_2:
   \   00000110   08A08DE5           STR      R10,[SP, #+8]
   \   00000114   0D00A0E1           MOV      R0,SP
   \   00000118   36FF2FE1           BLX      R6
   \   0000011C   10009DE5           LDR      R0,[SP, #+16]
   \   00000120   01A08AE2           ADD      R10,R10,#+1
   \   00000124   000087E0           ADD      R0,R7,R0
   \   00000128   10008DE5           STR      R0,[SP, #+16]
   \   0000012C   18009DE5           LDR      R0,[SP, #+24]
   \   00000130   08A08DE5           STR      R10,[SP, #+8]
   \   00000134   000087E0           ADD      R0,R7,R0
   \   00000138   18008DE5           STR      R0,[SP, #+24]
   \   0000013C   0D00A0E1           MOV      R0,SP
   \   00000140   36FF2FE1           BLX      R6
   \   00000144   10009DE5           LDR      R0,[SP, #+16]
     86            }
   \   00000148   01A08AE2           ADD      R10,R10,#+1
   \   0000014C   000087E0           ADD      R0,R7,R0
   \   00000150   10008DE5           STR      R0,[SP, #+16]
   \   00000154   18009DE5           LDR      R0,[SP, #+24]
   \   00000158   01B05BE2           SUBS     R11,R11,#+1
   \   0000015C   000087E0           ADD      R0,R7,R0
   \   00000160   18008DE5           STR      R0,[SP, #+24]
   \   00000164   E9FFFF1A           BNE      ??_Paint_2
     87            //
     88            // Draw text
     89            //
     90            GUI_GetFontInfo(pFont, &FontInfo);
   \                     ??_Paint_0:
   \   00000168   4C108DE2           ADD      R1,SP,#+76
   \   0000016C   24009DE5           LDR      R0,[SP, #+36]
   \   00000170   ........           BL       GUI_GetFontInfo
     91            GUI_SetFont(pFont);
   \   00000174   24009DE5           LDR      R0,[SP, #+36]
   \   00000178   ........           BL       GUI_SetFont
     92            GUI_SetTextMode(GUI_TM_TRANS);
   \   0000017C   0200A0E3           MOV      R0,#+2
   \   00000180   ........           BL       GUI_SetTextMode
     93            FontDistY    = GUI_GetFontDistY();
   \   00000184   ........           BL       GUI_GetFontDistY
   \   00000188   24008DE5           STR      R0,[SP, #+36]
     94            CHeight      = FontInfo.CHeight;
   \   0000018C   5010DDE5           LDRB     R1,[SP, #+80]
     95            SpaceAbove   = FontInfo.Baseline - CHeight;
   \   00000190   4E00DDE5           LDRB     R0,[SP, #+78]
   \   00000194   01A040E0           SUB      R10,R0,R1
     96            ItemInfo.Cmd = WIDGET_ITEM_DRAW_TEXT;
     97            ItemInfo.x0  = RectClient.x0 + RADIO_BORDER * 2 + 2 + ButtonSize;
   \   00000198   F803DDE1           LDRSH    R0,[SP, #+56]
   \   0000019C   20108DE5           STR      R1,[SP, #+32]
   \   000001A0   1010A0E3           MOV      R1,#+16
   \   000001A4   000088E0           ADD      R0,R8,R0
   \   000001A8   060080E2           ADD      R0,R0,#+6
   \   000001AC   04108DE5           STR      R1,[SP, #+4]
   \   000001B0   0C008DE5           STR      R0,[SP, #+12]
     98            ItemInfo.y0  = RectClient.y0 + ((CHeight <= Height) ? ((Height - CHeight) / 2) : 0) - SpaceAbove;
   \   000001B4   34009DE5           LDR      R0,[SP, #+52]
   \   000001B8   20109DE5           LDR      R1,[SP, #+32]
   \   000001BC   FFA00AE2           AND      R10,R10,#0xFF
   \   000001C0   010050E1           CMP      R0,R1
   \   000001C4   030000BA           BLT      ??_Paint_3
   \   000001C8   010040E0           SUB      R0,R0,R1
   \   000001CC   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000001D0   C000A0E1           ASR      R0,R0,#+1
   \   000001D4   000000EA           B        ??_Paint_4
   \                     ??_Paint_3:
   \   000001D8   0000A0E3           MOV      R0,#+0
   \                     ??_Paint_4:
   \   000001DC   FA13DDE1           LDRSH    R1,[SP, #+58]
     99            for (i = 0; i < NumItems; i++) {
   \   000001E0   0080A0E3           MOV      R8,#+0
   \   000001E4   010080E0           ADD      R0,R0,R1
   \   000001E8   0A0040E0           SUB      R0,R0,R10
   \   000001EC   10008DE5           STR      R0,[SP, #+16]
   \   000001F0   28009DE5           LDR      R0,[SP, #+40]
   \   000001F4   010050E3           CMP      R0,#+1
   \   000001F8   350000BA           BLT      ??_Paint_5
    100              pText = (const char *)GUI_ARRAY_GetpItemLocked(TextArray, i);
   \                     ??_Paint_6:
   \   000001FC   0810A0E1           MOV      R1,R8
   \   00000200   48009DE5           LDR      R0,[SP, #+72]
   \   00000204   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000208   00B0B0E1           MOVS     R11,R0
    101              if (pText) {
   \   0000020C   2600000A           BEQ      ??_Paint_7
    102                ItemInfo.ItemIndex = i;
   \   00000210   08808DE5           STR      R8,[SP, #+8]
    103                StringDistX        = GUI_GetStringDistX(pText);
   \   00000214   ........           BL       GUI_GetStringDistX
    104                ItemInfo.x1        = ItemInfo.x0 + StringDistX - 2;
   \   00000218   0C109DE5           LDR      R1,[SP, #+12]
    105                ItemInfo.p         = (void *)pText;
   \   0000021C   1CB08DE5           STR      R11,[SP, #+28]
   \   00000220   000081E0           ADD      R0,R1,R0
   \   00000224   020040E2           SUB      R0,R0,#+2
   \   00000228   14008DE5           STR      R0,[SP, #+20]
    106                pfDrawSkin(&ItemInfo);
   \   0000022C   0D00A0E1           MOV      R0,SP
   \   00000230   36FF2FE1           BLX      R6
    107                GUI_UNLOCK_H(pText);
   \   00000234   ........           BL       GUI_ALLOC_UnlockH
    108                //
    109                // Get focus rect
    110                //
    111                if (HasFocus && ((Sel == i) || (GroupId))) {
   \   00000238   30009DE5           LDR      R0,[SP, #+48]
   \   0000023C   000050E3           CMP      R0,#+0
   \   00000240   1900000A           BEQ      ??_Paint_7
   \   00000244   44009DE5           LDR      R0,[SP, #+68]
   \   00000248   080050E1           CMP      R0,R8
   \   0000024C   0200000A           BEQ      ??_Paint_8
   \   00000250   40009DE5           LDR      R0,[SP, #+64]
   \   00000254   000050E3           CMP      R0,#+0
   \   00000258   1300000A           BEQ      ??_Paint_7
    112                  FocusBorder  = (FontDistY <= 12) ? 2 : 3;
   \                     ??_Paint_8:
   \   0000025C   24009DE5           LDR      R0,[SP, #+36]
    113                  if ((ItemInfo.y0 + SpaceAbove) < FocusBorder) {
   \   00000260   10109DE5           LDR      R1,[SP, #+16]
   \   00000264   0D0050E3           CMP      R0,#+13
   \   00000268   0200A0B3           MOVLT    R0,#+2
   \   0000026C   0300A0A3           MOVGE    R0,#+3
   \   00000270   01208AE0           ADD      R2,R10,R1
   \   00000274   000052E1           CMP      R2,R0
    114                    FocusBorder = ItemInfo.y0;
    115                  }
    116                  RectFocus.x0 = ItemInfo.x0 - FocusBorder;
    117                  RectFocus.y0 = ItemInfo.y0;
    118                  RectFocus.x1 = ItemInfo.x1 + FocusBorder;
   \   00000278   14209DE5           LDR      R2,[SP, #+20]
   \   0000027C   FF0001B2           ANDLT    R0,R1,#0xFF
   \   00000280   0C309DE5           LDR      R3,[SP, #+12]
   \   00000284   024080E0           ADD      R4,R0,R2
   \   00000288   003043E0           SUB      R3,R3,R0
    119                  RectFocus.y1 = ItemInfo.y0 + CHeight - 1 + SpaceAbove + FocusBorder;
   \   0000028C   20209DE5           LDR      R2,[SP, #+32]
   \   00000290   00008AE0           ADD      R0,R10,R0
   \   00000294   000082E0           ADD      R0,R2,R0
   \   00000298   000081E0           ADD      R0,R1,R0
   \   0000029C   BE32CDE1           STRH     R3,[SP, #+46]
   \   000002A0   BC12CDE1           STRH     R1,[SP, #+44]
   \   000002A4   015040E2           SUB      R5,R0,#+1
    120          		DrawFocus = 1;
   \   000002A8   0190A0E3           MOV      R9,#+1
    121                }
    122              }
    123              ItemInfo.y0 += Spacing;
   \                     ??_Paint_7:
   \   000002AC   10009DE5           LDR      R0,[SP, #+16]
    124              ItemInfo.y1 += Spacing;
    125            }
   \   000002B0   018088E2           ADD      R8,R8,#+1
   \   000002B4   000087E0           ADD      R0,R7,R0
   \   000002B8   10008DE5           STR      R0,[SP, #+16]
   \   000002BC   18009DE5           LDR      R0,[SP, #+24]
   \   000002C0   000087E0           ADD      R0,R7,R0
   \   000002C4   18008DE5           STR      R0,[SP, #+24]
   \   000002C8   28009DE5           LDR      R0,[SP, #+40]
   \   000002CC   000058E1           CMP      R8,R0
   \   000002D0   C9FFFFBA           BLT      ??_Paint_6
    126            //
    127            // Draw focus
    128            //
    129            if (HasFocus & DrawFocus) {
   \                     ??_Paint_5:
   \   000002D4   30009DE5           LDR      R0,[SP, #+48]
   \   000002D8   000019E1           TST      R9,R0
   \   000002DC   0D00000A           BEQ      ??_Paint_9
    130              ItemInfo.Cmd = WIDGET_ITEM_DRAW_FOCUS;
   \   000002E0   0810A0E3           MOV      R1,#+8
   \   000002E4   04108DE5           STR      R1,[SP, #+4]
    131              ItemInfo.x0 = RectFocus.x0;
   \   000002E8   FE12DDE1           LDRSH    R1,[SP, #+46]
    132              ItemInfo.y0 = RectFocus.y0;
    133              ItemInfo.x1 = RectFocus.x1;
   \   000002EC   0448A0E1           LSL      R4,R4,#+16
    134              ItemInfo.y1 = RectFocus.y1;
   \   000002F0   0558A0E1           LSL      R5,R5,#+16
   \   000002F4   0C108DE5           STR      R1,[SP, #+12]
   \   000002F8   FC12DDE1           LDRSH    R1,[SP, #+44]
   \   000002FC   4448A0E1           ASR      R4,R4,#+16
   \   00000300   4558A0E1           ASR      R5,R5,#+16
   \   00000304   10108DE5           STR      R1,[SP, #+16]
   \   00000308   14408DE5           STR      R4,[SP, #+20]
   \   0000030C   18508DE5           STR      R5,[SP, #+24]
    135              pfDrawSkin(&ItemInfo);
   \   00000310   0D00A0E1           MOV      R0,SP
   \   00000314   36FF2FE1           BLX      R6
    136            }
    137          }
   \                     ??_Paint_9:
   \   00000318   54D08DE2           ADD      SP,SP,#+84       ;; stack cleaning
   \   0000031C   F08FBDE8           POP      {R4-R11,PC}      ;; return
    138          
    139          /*********************************************************************
    140          *
    141          *       _Create
    142          */

   \                                 In section .text, align 4, keep-with-next
    143          static void _Create(RADIO_Handle hObj) {
   \                     _Create:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
    144            RADIO_Obj * pObj;
    145            RADIO_SKIN_PRIVATE * pSkinPrivate;
    146            WIDGET_ITEM_DRAW_INFO ItemInfo;
    147          
    148            //
    149            // Get properties
    150            //
    151            pObj = RADIO_LOCK_H(hObj);
    152            pSkinPrivate = (RADIO_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   580090E5           LDR      R0,[R0, #+88]
   \   00000014   085090E5           LDR      R5,[R0, #+8]
    153            GUI_UNLOCK_H(pObj);
   \   00000018   ........           BL       GUI_ALLOC_UnlockH
    154            //
    155            // Create
    156            //
    157            ItemInfo.Cmd = WIDGET_ITEM_CREATE;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   04108DE5           STR      R1,[SP, #+4]
    158            ItemInfo.hWin = hObj;
   \   00000024   00408DE5           STR      R4,[SP, #+0]
    159            pSkinPrivate->pfDrawSkin(&ItemInfo);
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   041095E5           LDR      R1,[R5, #+4]
   \   00000030   31FF2FE1           BLX      R1
    160          }
   \   00000034   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
    161          
    162          /*********************************************************************
    163          *
    164          *        Private data
    165          *
    166          **********************************************************************
    167          */
    168          /*********************************************************************
    169          *
    170          *       _Skin
    171          */

   \                                 In section .data, align 4
    172          static WIDGET_SKIN _Skin = {
   \                     _Skin:
   \   00000000   ............       DC32 _Paint, _Create, RADIO__DefaultProps + 1CH
   \              ............
    173            _Paint,
    174            _Create,
    175            &RADIO__DefaultProps.SkinPrivate,
    176          };
    177          
    178          /*********************************************************************
    179          *
    180          *        Public code
    181          *
    182          **********************************************************************
    183          */
    184          /*********************************************************************
    185          *
    186          *       RADIO_SetSkin
    187          */

   \                                 In section .text, align 4, keep-with-next
    188          void RADIO_SetSkin(RADIO_Handle hObj, WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
   \                     RADIO_SetSkin:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    189            RADIO_Obj * pObj;
    190          
    191            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    192            pObj = RADIO_LOCK_H(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    193            //
    194            // Enable skinning
    195            //
    196            pObj->pWidgetSkin = &_Skin;
   \   0000001C   ........           LDR      R1,??DataTable1
   \   00000020   581080E5           STR      R1,[R0, #+88]
    197            //
    198            // Set private callback function
    199            //
    200            pObj->Props.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   00000024   545080E5           STR      R5,[R0, #+84]
    201            GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    202            //
    203            // Invalidate widget
    204            //
    205            WM_SetHasTrans(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_SetHasTrans
    206            WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    207            WM_UNLOCK();
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   ........           B        GUI_Unlock       ;; tailcall
    208          }
    209          
    210          /*********************************************************************
    211          *
    212          *       RADIO_SetDefaultSkin
    213          */

   \                                 In section .text, align 4, keep-with-next
    214          void RADIO_SetDefaultSkin(WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
    215            RADIO__pSkinDefault = &_Skin;
   \                     RADIO_SetDefaultSkin:
   \   00000000   ........           LDR      R1,??DataTable1_1
   \   00000004   ........           LDR      R2,??DataTable1
   \   00000008   002081E5           STR      R2,[R1, #+0]
    216            RADIO__DefaultProps.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   0000000C   ........           LDR      R1,??DataTable1_2
   \   00000010   200081E5           STR      R0,[R1, #+32]
    217          }
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _Skin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     RADIO__pSkinDefault

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     RADIO__DefaultProps
    218          
    219          #else
    220            void RADIO_Skin_C(void);
    221            void RADIO_Skin_C(void) {} /* avoid empty object files */
    222          #endif /* GUI_WINSUPPORT */
    223          
    224          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     RADIO_SetDefaultSkin      0
     RADIO_SetSkin            16
     _Create                  48
     _Paint                  120


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     _Paint                800
     _Create                60
     _Skin                  12
     RADIO_SetSkin          72
     RADIO_SetDefaultSkin   24
     ??DataTable1            4
     ??DataTable1_1          4
     ??DataTable1_2          4

 
  12 bytes in section .data
 968 bytes in section .text
 
 968 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
