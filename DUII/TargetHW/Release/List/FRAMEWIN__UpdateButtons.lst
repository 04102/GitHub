###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:07 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\FRAMEWIN__UpdateButtons.c           #
#    Command line =  C:\DUII\TargetHW\GUI\FRAMEWIN__UpdateButtons.c -D        #
#                    DEBUG=1 -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D        #
#                    NOPROFILER -D OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN        #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FRAMEWIN__UpdateButtons.ls #
#                    t                                                        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FRAMEWIN__UpdateButtons.o   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\FRAMEWIN__UpdateButtons.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FRAMEWIN__UpdateButtons.c
     19          Purpose     : 
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include "FRAMEWIN_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          
     30          /*********************************************************************
     31          *
     32          *        Exported routines
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       FRAMEWIN__UpdateButtons
     39          *
     40          * Purpose:
     41          *   Adjust button positions & size.
     42          *   This is required after resizing the title bar
     43          */

   \                                 In section .text, align 4, keep-with-next
     44          void FRAMEWIN__UpdateButtons(FRAMEWIN_Handle hObj, int OldHeight, int OldBorderSizeL, int OldBorderSizeR, int OldBorderSizeT) {
   \                     FRAMEWIN__UpdateButtons:
   \   00000000   FC4F2DE9           PUSH     {R2-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   00A0A0E1           MOV      R10,R0
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   30409DE5           LDR      R4,[SP, #+48]
     45            FRAMEWIN_Obj * pObj;
     46            WM_HWIN hChild;
     47            WM_Obj * pChild;
     48            int Height, BorderSizeL, BorderSizeR, BorderSizeT, Diff, nr, nl;
     49            FRAMEWIN_SKIN_PRIVATE * pSkinPrivate;
     50          
     51            pObj = FRAMEWIN_LOCK_H(hObj);
   \   00000014   ........           BL       GUI_ALLOC_LockH
     52            pSkinPrivate = (FRAMEWIN_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
   \   00000018   5C1090E5           LDR      R1,[R0, #+92]
   \   0000001C   086091E5           LDR      R6,[R1, #+8]
     53            Height = FRAMEWIN__CalcTitleHeight(pObj);
   \   00000020   ........           BL       FRAMEWIN__CalcTitleHeight
   \   00000024   0080A0E1           MOV      R8,R0
     54            GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
     55            //
     56            // Get current values
     57            //
     58            BorderSizeL = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_L);
   \   0000002C   0110A0E3           MOV      R1,#+1
   \   00000030   0A00A0E1           MOV      R0,R10
   \   00000034   002096E5           LDR      R2,[R6, #+0]
   \   00000038   32FF2FE1           BLX      R2
   \   0000003C   00B0A0E1           MOV      R11,R0
     59            BorderSizeR = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_R);
   \   00000040   0310A0E3           MOV      R1,#+3
   \   00000044   0A00A0E1           MOV      R0,R10
   \   00000048   002096E5           LDR      R2,[R6, #+0]
   \   0000004C   32FF2FE1           BLX      R2
   \   00000050   0050A0E1           MOV      R5,R0
     60            BorderSizeT = pSkinPrivate->pfGetBordersize(hObj, FRAMEWIN_GET_BORDERSIZE_T);
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0A00A0E1           MOV      R0,R10
   \   0000005C   002096E5           LDR      R2,[R6, #+0]
   \   00000060   32FF2FE1           BLX      R2
   \   00000064   0060A0E1           MOV      R6,R0
     61            //
     62            // Check if something to do
     63            //
     64            if ((Height      != OldHeight) || 
     65                (BorderSizeL != OldBorderSizeL) || 
     66                (BorderSizeR != OldBorderSizeR) || 
     67                (BorderSizeT != OldBorderSizeT)) {
   \   00000068   070058E1           CMP      R8,R7
   \   0000006C   04009D05           LDREQ    R0,[SP, #+4]
   \   00000070   00005B01           CMPEQ    R11,R0
   \   00000074   08009D05           LDREQ    R0,[SP, #+8]
   \   00000078   00005501           CMPEQ    R5,R0
   \   0000007C   04005601           CMPEQ    R6,R4
   \   00000080   3100000A           BEQ      ??FRAMEWIN__UpdateButtons_0
     68              Diff = Height - OldHeight;
   \   00000084   077048E0           SUB      R7,R8,R7
     69              nr = nl = 0;
   \   00000088   0080A0E3           MOV      R8,#+0
   \   0000008C   0090A0E3           MOV      R9,#+0
     70              hChild = WM_GetFirstChild(hObj);
   \   00000090   0A00A0E1           MOV      R0,R10
   \   00000094   ........           BL       WM_GetFirstChild
   \   00000098   00A0A0E1           MOV      R10,R0
   \   0000009C   04009DE5           LDR      R0,[SP, #+4]
   \   000000A0   044046E0           SUB      R4,R6,R4
   \   000000A4   00B04BE0           SUB      R11,R11,R0
   \   000000A8   08009DE5           LDR      R0,[SP, #+8]
     71              while (hChild) {
   \   000000AC   00005AE3           CMP      R10,#+0
   \   000000B0   055040E0           SUB      R5,R0,R5
   \   000000B4   2400000A           BEQ      ??FRAMEWIN__UpdateButtons_0
     72                pChild = (WM_Obj *)GUI_LOCK_H(hChild);
   \                     ??FRAMEWIN__UpdateButtons_1:
   \   000000B8   0A00A0E1           MOV      R0,R10
   \   000000BC   ........           BL       GUI_ALLOC_LockH
   \   000000C0   0060A0E1           MOV      R6,R0
     73                if (((pChild->Status & WM_SF_ANCHOR_RIGHT) && ((pChild->Status & WM_SF_ANCHOR_LEFT ) == 0)) ||
     74                    ((pChild->Status & WM_SF_ANCHOR_LEFT ) && ((pChild->Status & WM_SF_ANCHOR_RIGHT) == 0))) {
   \   000000C4   280096E5           LDR      R0,[R6, #+40]
   \   000000C8   A01F00E2           AND      R1,R0,#0x280
   \   000000CC   800051E3           CMP      R1,#+128
   \   000000D0   A00F0012           ANDNE    R0,R0,#0x280
   \   000000D4   800F5013           CMPNE    R0,#+512
   \   000000D8   1600001A           BNE      ??FRAMEWIN__UpdateButtons_2
     75                  if (Diff) {
   \   000000DC   000057E3           CMP      R7,#+0
   \   000000E0   0300000A           BEQ      ??FRAMEWIN__UpdateButtons_3
     76                    WM_ResizeWindow(hChild, Diff, Diff);
   \   000000E4   0720A0E1           MOV      R2,R7
   \   000000E8   0710A0E1           MOV      R1,R7
   \   000000EC   0A00A0E1           MOV      R0,R10
   \   000000F0   ........           BL       WM_ResizeWindow
     77                  }
     78                  if (pChild->Status & WM_SF_ANCHOR_RIGHT) {
   \                     ??FRAMEWIN__UpdateButtons_3:
   \   000000F4   2800D6E5           LDRB     R0,[R6, #+40]
   \   000000F8   800010E3           TST      R0,#0x80
   \   000000FC   0500000A           BEQ      ??FRAMEWIN__UpdateButtons_4
     79                    WM_MoveWindow(hChild, OldBorderSizeR - BorderSizeR
     80                                          - Diff * nr++,
     81                                          BorderSizeT - OldBorderSizeT);
   \   00000100   990700E0           MUL      R0,R9,R7
   \   00000104   0420A0E1           MOV      R2,R4
   \   00000108   001045E0           SUB      R1,R5,R0
   \   0000010C   0A00A0E1           MOV      R0,R10
   \   00000110   ........           BL       WM_MoveWindow
   \   00000114   019089E2           ADD      R9,R9,#+1
     82                  }
     83                  if (pChild->Status & WM_SF_ANCHOR_LEFT) {
   \                     ??FRAMEWIN__UpdateButtons_4:
   \   00000118   B802D6E1           LDRH     R0,[R6, #+40]
   \   0000011C   800F10E3           TST      R0,#0x200
   \   00000120   0400000A           BEQ      ??FRAMEWIN__UpdateButtons_2
     84                    WM_MoveWindow(hChild, BorderSizeL - OldBorderSizeL
     85                                          + Diff * nl++,
     86                                          BorderSizeT - OldBorderSizeT);
   \   00000124   98B721E0           MLA      R1,R8,R7,R11
   \   00000128   0420A0E1           MOV      R2,R4
   \   0000012C   0A00A0E1           MOV      R0,R10
   \   00000130   ........           BL       WM_MoveWindow
   \   00000134   018088E2           ADD      R8,R8,#+1
     87                  }
     88                }
     89                GUI_UNLOCK_H(pChild);
   \                     ??FRAMEWIN__UpdateButtons_2:
   \   00000138   ........           BL       GUI_ALLOC_UnlockH
     90                hChild = WM_GetNextSibling(hChild);
   \   0000013C   0A00A0E1           MOV      R0,R10
   \   00000140   ........           BL       WM_GetNextSibling
   \   00000144   00A0B0E1           MOVS     R10,R0
   \   00000148   DAFFFF1A           BNE      ??FRAMEWIN__UpdateButtons_1
     91              }
     92            }
     93          }
   \                     ??FRAMEWIN__UpdateButtons_0:
   \   0000014C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000150   F08FBDE8           POP      {R4-R11,PC}      ;; return
     94          
     95          #else
     96            void FRAMEWIN__UpdateButtons_c(void) {} /* avoid empty object files */
     97          #endif /* GUI_WINSUPPORT */

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     FRAMEWIN__UpdateButtons     48


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     FRAMEWIN__UpdateButtons  340

 
 340 bytes in section .text
 
 340 bytes of CODE memory

Errors: none
Warnings: none
