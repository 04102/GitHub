###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:08:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_SetCapture.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\WM_SetCapture.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_SetCapture.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_SetCapture.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_SetCapture.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_SetCapture.c
     19          Purpose     : Implementation of WM_SetCapture
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *        Public data
     30          *
     31          **********************************************************************
     32          */
     33          
     34          
     35          /*********************************************************************
     36          *
     37          *        Static code
     38          *
     39          **********************************************************************
     40          */
     41          /*********************************************************************
     42          *
     43          *       WM__ReleaseCapture
     44          */
     45          static void WM__ReleaseCapture(void) {
     46            if (WM__ahCapture[WM__TOUCHED_LAYER]) {
     47              WM_MESSAGE Msg;
     48              Msg.MsgId  = WM_CAPTURE_RELEASED;
     49              WM__SendMessage(WM__ahCapture[WM__TOUCHED_LAYER], &Msg);
     50              WM__ahCapture[WM__TOUCHED_LAYER] = 0;
     51            }
     52          }
     53          
     54          /*********************************************************************
     55          *
     56          *        Public code
     57          *
     58          **********************************************************************
     59          */
     60          /*********************************************************************
     61          *
     62          *       WM_SetCapture
     63          */

   \                                 In section .text, align 4, keep-with-next
     64          void WM_SetCapture(WM_HWIN hObj, int AutoRelease) {
   \                     WM_SetCapture:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     65            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     66            if (WM__ahCapture[WM__TOUCHED_LAYER] != hObj) {
   \   00000014   ........           LDR      R6,??DataTable1
   \   00000018   ........           LDR      R7,??DataTable1_1
   \   0000001C   000096E5           LDR      R0,[R6, #+0]
   \   00000020   000197E7           LDR      R0,[R7, +R0, LSL #+2]
   \   00000024   040050E1           CMP      R0,R4
     67              WM__ReleaseCapture();
   \   00000028   00005013           CMPNE    R0,#+0
   \   0000002C   0600000A           BEQ      ??WM_SetCapture_0
   \   00000030   1820A0E3           MOV      R2,#+24
   \   00000034   00208DE5           STR      R2,[SP, #+0]
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   ........           BL       WM__SendMessage
   \   00000040   000096E5           LDR      R0,[R6, #+0]
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   001187E7           STR      R1,[R7, +R0, LSL #+2]
     68            }
     69            WM__ahCapture[WM__TOUCHED_LAYER] = hObj;
   \                     ??WM_SetCapture_0:
   \   0000004C   000096E5           LDR      R0,[R6, #+0]
   \   00000050   004187E7           STR      R4,[R7, +R0, LSL #+2]
     70            WM__CaptureReleaseAuto = AutoRelease;
   \   00000054   ........           LDR      R0,??DataTable1_2
   \   00000058   0050C0E5           STRB     R5,[R0, #+0]
     71            WM_UNLOCK();
   \   0000005C   ........           BL       GUI_Unlock
     72          }
   \   00000060   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000064   F080BDE8           POP      {R4-R7,PC}       ;; return
     73          
     74          /*********************************************************************
     75          *
     76          *       WM_ReleaseCapture
     77          */

   \                                 In section .text, align 4, keep-with-next
     78          void WM_ReleaseCapture(void) {
   \                     WM_ReleaseCapture:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
     79            WM_LOCK();
   \   00000008   ........           BL       GUI_Lock
     80            WM__ReleaseCapture();
   \   0000000C   ........           LDR      R4,??DataTable1
   \   00000010   ........           LDR      R5,??DataTable1_1
   \   00000014   000094E5           LDR      R0,[R4, #+0]
   \   00000018   000195E7           LDR      R0,[R5, +R0, LSL #+2]
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0600000A           BEQ      ??WM_ReleaseCapture_0
   \   00000024   1820A0E3           MOV      R2,#+24
   \   00000028   00208DE5           STR      R2,[SP, #+0]
   \   0000002C   0D10A0E1           MOV      R1,SP
   \   00000030   ........           BL       WM__SendMessage
   \   00000034   000094E5           LDR      R0,[R4, #+0]
   \   00000038   0010A0E3           MOV      R1,#+0
   \   0000003C   001185E7           STR      R1,[R5, +R0, LSL #+2]
     81            WM_UNLOCK();
   \                     ??WM_ReleaseCapture_0:
   \   00000040   ........           BL       GUI_Unlock
     82          }
   \   00000044   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     WM__TouchedLayer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     WM__ahCapture

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     WM__CaptureReleaseAuto
     83          
     84          #else
     85            void WM_SetCapture_c(void) {} /* avoid empty object files */
     86          #endif /* GUI_WINSUPPORT */
     87          
     88          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     WM_ReleaseCapture     32
     WM_SetCapture         40


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     WM_SetCapture      104
     WM_ReleaseCapture   76
     ??DataTable1         4
     ??DataTable1_1       4
     ??DataTable1_2       4

 
 192 bytes in section .text
 
 192 bytes of CODE memory

Errors: none
Warnings: none
