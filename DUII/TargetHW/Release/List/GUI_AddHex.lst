###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:36 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_AddHex.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_AddHex.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_AddHex.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_AddHex.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_AddHex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_AddHex.c
     19          Purpose     : Converts hex value 2 string
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static data
     28          *
     29          **********************************************************************
     30          */
     31          

   \                                 In section .text, align 4, keep-with-next
     32          static const char acHex[16] =  {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
   \                     acHex:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   303132333435       DC8 48, 49, 50, 51, 52, 53, 54, 55, 56, 57
   \              36373839    
   \   0000000A   414243444546       DC8 65, 66, 67, 68, 69, 70
     33          
     34          /*********************************************************************
     35          *
     36          *       Public code
     37          *
     38          **********************************************************************
     39          */
     40          /*********************************************************************
     41          *
     42          *       GUI_AddHex
     43          */

   \                                 In section .text, align 4, keep-with-next
     44          void GUI_AddHex(U32 v, U8 Len, char**ps) {
     45            char *s = *ps;
   \                     GUI_AddHex:
   \   00000000   003092E5           LDR      R3,[R2, #+0]
     46            if (Len > 8) {
   \   00000004   090051E3           CMP      R1,#+9
   \   00000008   0E00002A           BCS      ??GUI_AddHex_0
     47              return;
     48            }
     49            (*ps) += Len;
   \   0000000C   033081E0           ADD      R3,R1,R3
   \   00000010   003082E5           STR      R3,[R2, #+0]
     50            **ps   = '\0';     /* Make sure string is 0-terminated */
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   0020C3E5           STRB     R2,[R3, #+0]
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   0800000A           BEQ      ??GUI_AddHex_0
   \   00000024   012043E2           SUB      R2,R3,#+1
   \   00000028   ........           ADR      R3,acHex
     51            while(Len--) {
     52              *(s + Len) = acHex[v & 15];
   \                     ??GUI_AddHex_1:
   \   0000002C   0FC000E2           AND      R12,R0,#0xF
   \   00000030   03C0DCE7           LDRB     R12,[R12, +R3]
   \   00000034   011041E2           SUB      R1,R1,#+1
     53              v >>= 4;
   \   00000038   2002A0E1           LSR      R0,R0,#+4
   \   0000003C   01C042E4           STRB     R12,[R2], #-1
     54            }
   \   00000040   FF1011E2           ANDS     R1,R1,#0xFF
   \   00000044   F8FFFF1A           BNE      ??GUI_AddHex_1
   \                     ??GUI_AddHex_0:
   \   00000048   1EFF2FE1           BX       LR               ;; return
     55          }
     56          
     57          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function   .cstack
     --------   -------
     GUI_AddHex      0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     acHex            16
     GUI_AddHex       76

 
 92 bytes in section .text
 
 92 bytes of CODE memory

Errors: none
Warnings: none
