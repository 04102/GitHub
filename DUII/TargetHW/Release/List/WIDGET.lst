###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:08:29 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WIDGET.c                            #
#    Command line =  C:\DUII\TargetHW\GUI\WIDGET.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WIDGET.lst                 #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WIDGET.o                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WIDGET.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WIDGET.c
     19          Purpose     : Widget core routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdlib.h>
     24          #include <string.h>
     25          
     26          #include "WIDGET.h"
     27          #include "GUI_Debug.h"
     28          #include "GUI.h"
     29          #include "GUI_Private.h"
     30          #include "WM_Intern.h"
     31          
     32          #if GUI_WINSUPPORT
     33          
     34          /*********************************************************************
     35          *
     36          *       Static data
     37          *
     38          **********************************************************************
     39          */

   \                                 In section .data, align 4
     40          const WIDGET_EFFECT * _pEffectDefault = &WIDGET_Effect_3D;
   \                     _pEffectDefault:
   \   00000000   ........           DC32 WIDGET_Effect_3D
     41          
     42          /*********************************************************************
     43          *
     44          *       Static routines
     45          *
     46          **********************************************************************
     47          */
     48          /*********************************************************************
     49          *
     50          *       _UpdateChildPositions
     51          */
     52          static void _UpdateChildPostions(WM_HWIN hObj, int Diff) {
     53            WM_Obj * pObj;
     54            WM_LOCK();
     55            pObj = (WM_Obj *)GUI_LOCK_H(hObj);
     56            WM__UpdateChildPositions(pObj, -Diff, -Diff, Diff, Diff);
     57            GUI_UNLOCK_H(pObj);
     58            WM_UNLOCK();
     59          }
     60          
     61          /*********************************************************************
     62          *
     63          *       _EffectRequiresRedraw
     64          *
     65          * Purpose
     66          *   Check if the effect to draw is inside the invalid rectangle.
     67          * Returns:
     68          *   0 if nothing need to be done.
     69          *   1 if the effect needs to be drawn
     70          */
     71          static int _EffectRequiresRedraw(const WIDGET * pWidget, const GUI_RECT * pRect) {
     72            int EffectSize = pWidget->pEffect->EffectSize;
     73            GUI_RECT InvalidRect;
     74            InvalidRect = pWidget->Win.InvalidRect;
     75            WM__Screen2Client(&pWidget->Win, &InvalidRect);
     76            /* Check if there a part of the effect is inside the invalid rectangle */
     77            if ((pRect->x0 + EffectSize) > InvalidRect.x0) {
     78              return 1;               /* Overlap ... Drawing required */
     79            }
     80            if ((pRect->x1 - EffectSize) < InvalidRect.x1) {
     81              return 1;               /* Overlap ... Drawing required */
     82            }
     83            if ((pRect->y0 + EffectSize) > InvalidRect.y0) {
     84              return 1;               /* Overlap ... Drawing required */
     85            }
     86            if ((pRect->y1 - EffectSize) < InvalidRect.y1) {
     87              return 1;               /* Overlap ... Drawing required */
     88            }
     89            return 0;                 /* No overlap ! */
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       Public routines
     95          *
     96          **********************************************************************
     97          */
     98          /*********************************************************************
     99          *
    100          *       WIDGET__RotateRect90
    101          */

   \                                 In section .text, align 4, keep-with-next
    102          void WIDGET__RotateRect90(WIDGET * pWidget, GUI_RECT * pDest, const GUI_RECT * pRect) {
   \                     WIDGET__RotateRect90:
   \   00000000   10402DE9           PUSH     {R4,LR}
    103            int x0, x1, XSize;
    104            x0 = pRect->x0;
    105            x1 = pRect->x1;
    106            XSize = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
   \   00000004   F4E0D0E1           LDRSH    LR,[R0, #+4]
   \   00000008   F000D0E1           LDRSH    R0,[R0, #+0]
    107            pDest->x0 = XSize - pRect->y1;
   \   0000000C   F640D2E1           LDRSH    R4,[R2, #+6]
   \   00000010   F030D2E1           LDRSH    R3,[R2, #+0]
   \   00000014   00004EE0           SUB      R0,LR,R0
   \   00000018   F4C0D2E1           LDRSH    R12,[R2, #+4]
   \   0000001C   04E040E0           SUB      LR,R0,R4
   \   00000020   B0E0C1E1           STRH     LR,[R1, #+0]
    108            pDest->x1 = XSize - pRect->y0;
   \   00000024   F220D2E1           LDRSH    R2,[R2, #+2]
   \   00000028   020040E0           SUB      R0,R0,R2
   \   0000002C   B400C1E1           STRH     R0,[R1, #+4]
    109            pDest->y0 = x0;
   \   00000030   B230C1E1           STRH     R3,[R1, #+2]
    110            pDest->y1 = x1;
   \   00000034   B6C0C1E1           STRH     R12,[R1, #+6]
    111          
    112          }
   \   00000038   1080BDE8           POP      {R4,PC}          ;; return
    113          
    114          /*********************************************************************
    115          *
    116          *       WIDGET__GetClientRect
    117          
    118            Returns the logical client rectangle, which means the normal
    119            client rectangle for widgets with their standard orientation
    120            and the rotated one for rotated widgets.
    121          */

   \                                 In section .text, align 4, keep-with-next
    122          void WIDGET__GetClientRect(WIDGET * pWidget, GUI_RECT * pRect) {
   \                     WIDGET__GetClientRect:
   \   00000000   10402DE9           PUSH     {R4,LR}
    123            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000004   3200D0E5           LDRB     R0,[R0, #+50]
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   080010E3           TST      R0,#0x8
   \   00000014   0A00000A           BEQ      ??WIDGET__GetClientRect_0
    124              GUI_RECT Rect;
    125              WM_GetClientRect(&Rect);
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           BL       WM_GetClientRect
    126              pRect->x0 = Rect.y0;
   \   00000020   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000024   B000C4E1           STRH     R0,[R4, #+0]
    127              pRect->x1 = Rect.y1;
   \   00000028   F600DDE1           LDRSH    R0,[SP, #+6]
   \   0000002C   B400C4E1           STRH     R0,[R4, #+4]
    128              pRect->y0 = Rect.x0;
   \   00000030   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000034   B200C4E1           STRH     R0,[R4, #+2]
    129              pRect->y1 = Rect.x1;
   \   00000038   F400DDE1           LDRSH    R0,[SP, #+4]
   \   0000003C   B600C4E1           STRH     R0,[R4, #+6]
   \   00000040   010000EA           B        ??WIDGET__GetClientRect_1
    130            } else {
    131              WM_GetClientRect(pRect);
   \                     ??WIDGET__GetClientRect_0:
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       WM_GetClientRect
    132            }
    133          }
   \                     ??WIDGET__GetClientRect_1:
   \   0000004C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000050   1080BDE8           POP      {R4,PC}          ;; return
    134          
    135          /*********************************************************************
    136          *
    137          *       WIDGET__GetBkColor
    138          */

   \                                 In section .text, align 4, keep-with-next
    139          GUI_COLOR WIDGET__GetBkColor(WM_HWIN hObj) {
   \                     WIDGET__GetBkColor:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    140            GUI_COLOR BkColor = WM_GetBkColor(WM_GetParent(hObj));
   \   00000008   ........           BL       WM_GetParent
   \   0000000C   ........           BL       WM_GetBkColor
    141            if (BkColor == GUI_INVALID_COLOR) {
   \   00000010   F014E0E3           MVN      R1,#-268435456
   \   00000014   010050E1           CMP      R0,R1
   \   00000018   0000001A           BNE      ??WIDGET__GetBkColor_0
    142              BkColor = DIALOG_GetBkColor();
   \   0000001C   ........           BL       DIALOG_GetBkColor
    143            }
    144            return BkColor;
   \                     ??WIDGET__GetBkColor_0:
   \   00000020   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000024   0080BDE8           POP      {PC}             ;; return
    145          }
    146          
    147          /*********************************************************************
    148          *
    149          *       WIDGET__GetInsideRect
    150          */

   \                                 In section .text, align 4, keep-with-next
    151          void WIDGET__GetInsideRect(WIDGET * pWidget, GUI_RECT * pRect) {
   \                     WIDGET__GetInsideRect:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    152            WM__GetClientRectWin(&pWidget->Win, pRect);
   \   00000010   ........           BL       WM__GetClientRectWin
    153            GUI__ReduceRect(pRect, pRect, pWidget->pEffect->EffectSize);
   \   00000014   2C0094E5           LDR      R0,[R4, #+44]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   002090E5           LDR      R2,[R0, #+0]
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   04D08DE2           ADD      SP,SP,#+4
   \   00000028   3040BDE8           POP      {R4,R5,LR}
   \   0000002C   ........           B        GUI__ReduceRect  ;; tailcall
    154          }
    155          
    156          /*********************************************************************
    157          *
    158          *       WIDGET__GetXSize
    159          */

   \                                 In section .text, align 4, keep-with-next
    160          int WIDGET__GetXSize(const WIDGET * pWidget) {
    161            int r;
    162            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \                     WIDGET__GetXSize:
   \   00000000   3210D0E5           LDRB     R1,[R0, #+50]
   \   00000004   080011E3           TST      R1,#0x8
    163              r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
   \   00000008   F610D011           LDRSHNE  R1,[R0, #+6]
    164            } else {
    165              r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
   \   0000000C   F410D001           LDRSHEQ  R1,[R0, #+4]
   \   00000010   F200D011           LDRSHNE  R0,[R0, #+2]
   \   00000014   F000D001           LDRSHEQ  R0,[R0, #+0]
   \   00000018   000041E0           SUB      R0,R1,R0
    166            }
    167            return r + 1;
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   1EFF2FE1           BX       LR               ;; return
    168          }
    169          
    170          /*********************************************************************
    171          *
    172          *       WIDGET__GetYSize
    173          */

   \                                 In section .text, align 4, keep-with-next
    174          int WIDGET__GetYSize(const WIDGET * pWidget) {
    175            int r;
    176            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \                     WIDGET__GetYSize:
   \   00000000   3210D0E5           LDRB     R1,[R0, #+50]
   \   00000004   080011E3           TST      R1,#0x8
    177              r = pWidget->Win.Rect.x1 - pWidget->Win.Rect.x0;
   \   00000008   F410D011           LDRSHNE  R1,[R0, #+4]
    178            } else {
    179              r = pWidget->Win.Rect.y1 - pWidget->Win.Rect.y0;
   \   0000000C   F610D001           LDRSHEQ  R1,[R0, #+6]
   \   00000010   F000D011           LDRSHNE  R0,[R0, #+0]
   \   00000014   F200D001           LDRSHEQ  R0,[R0, #+2]
   \   00000018   000041E0           SUB      R0,R1,R0
    180            }
    181            return r + 1;
   \   0000001C   010080E2           ADD      R0,R0,#+1
   \   00000020   1EFF2FE1           BX       LR               ;; return
    182          }
    183          
    184          /*******************************************************************
    185          *
    186          *       WIDGET__GetWindowSizeX
    187          
    188            Return width (or height in case of rotation) of window in pixels
    189          */

   \                                 In section .text, align 4, keep-with-next
    190          int WIDGET__GetWindowSizeX(WM_HWIN hObj) {
   \                     WIDGET__GetWindowSizeX:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    191            WIDGET * pWidget;
    192            int r;
    193            pWidget = WIDGET_LOCK(hObj);
    194            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   3200D0E5           LDRB     R0,[R0, #+50]
   \   00000010   080010E3           TST      R0,#0x8
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   0100000A           BEQ      ??WIDGET__GetWindowSizeX_0
    195              r = WM_GetWindowSizeY(hObj);
   \   0000001C   ........           BL       WM_GetWindowSizeY
   \   00000020   000000EA           B        ??WIDGET__GetWindowSizeX_1
    196            } else {
    197              r = WM_GetWindowSizeX(hObj);
   \                     ??WIDGET__GetWindowSizeX_0:
   \   00000024   ........           BL       WM_GetWindowSizeX
   \                     ??WIDGET__GetWindowSizeX_1:
   \   00000028   0040A0E1           MOV      R4,R0
    198            }
    199            GUI_UNLOCK_H(pWidget);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
    200            return r;
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   1080BDE8           POP      {R4,PC}          ;; return
    201          }
    202          
    203          /*********************************************************************
    204          *
    205          *       WIDGET_SetState
    206          */

   \                                 In section .text, align 4, keep-with-next
    207          void WIDGET_SetState(WM_HWIN hObj, int State) {
   \                     WIDGET_SetState:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    208            WIDGET * pWidget;
    209            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    210            pWidget = WIDGET_LOCK(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    211            if (State != pWidget->State) {
   \   0000001C   B213D0E1           LDRH     R1,[R0, #+50]
   \   00000020   010055E1           CMP      R5,R1
   \   00000024   0200000A           BEQ      ??WIDGET_SetState_0
    212              pWidget->State = State;
   \   00000028   B253C0E1           STRH     R5,[R0, #+50]
    213              WM_Invalidate(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_InvalidateWindow
    214            }
    215            GUI_UNLOCK_H(pWidget);
   \                     ??WIDGET_SetState_0:
   \   00000034   ........           BL       GUI_ALLOC_UnlockH
    216            WM_UNLOCK();
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   3040BDE8           POP      {R4,R5,LR}
   \   00000040   ........           B        GUI_Unlock       ;; tailcall
    217          }
    218          
    219          /*********************************************************************
    220          *
    221          *       WIDGET_GetState
    222          */

   \                                 In section .text, align 4, keep-with-next
    223          int WIDGET_GetState(WM_HWIN hObj) {
   \                     WIDGET_GetState:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
    224            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
    225            WIDGET * pWidget;
    226            if (hObj) {
   \   00000010   0500000A           BEQ      ??WIDGET_GetState_0
    227              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
    228              pWidget = WIDGET_LOCK(hObj);
    229              r = pWidget->State;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   B253D0E1           LDRH     R5,[R0, #+50]
    230              GUI_UNLOCK_H(pWidget);
   \   00000024   ........           BL       GUI_ALLOC_UnlockH
    231              WM_UNLOCK();
   \   00000028   ........           BL       GUI_Unlock
    232            }
    233            return r;
   \                     ??WIDGET_GetState_0:
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   04D08DE2           ADD      SP,SP,#+4
   \   00000034   3080BDE8           POP      {R4,R5,PC}       ;; return
    234          }
    235          
    236          /*********************************************************************
    237          *
    238          *       WIDGET_OrState
    239          */

   \                                 In section .text, align 4, keep-with-next
    240          void WIDGET_OrState(WM_HWIN hObj, int State) {
   \                     WIDGET_OrState:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    241            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0C00000A           BEQ      ??WIDGET_OrState_0
    242              WIDGET * pWidget;
    243              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    244              pWidget = WIDGET_LOCK(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    245              if (State != (pWidget->State & State)) {
   \   00000024   B213D0E1           LDRH     R1,[R0, #+50]
   \   00000028   012005E0           AND      R2,R5,R1
   \   0000002C   020055E1           CMP      R5,R2
   \   00000030   0300000A           BEQ      ??WIDGET_OrState_1
    246                pWidget->State |= State;
   \   00000034   011085E1           ORR      R1,R5,R1
   \   00000038   B213C0E1           STRH     R1,[R0, #+50]
    247                WM_Invalidate(hObj);
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       WM_InvalidateWindow
    248              }
    249              GUI_UNLOCK_H(pWidget);
   \                     ??WIDGET_OrState_1:
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
    250              WM_UNLOCK();
   \   00000048   ........           BL       GUI_Unlock
    251            }
    252          }
   \                     ??WIDGET_OrState_0:
   \   0000004C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
    253          
    254          /*********************************************************************
    255          *
    256          *       WIDGET_AndState
    257          
    258            Purpose:
    259              Clear flags in the State element of the widget.
    260              The bits to be cleared are set.
    261            Example:
    262              ...(..., 3);   // Clears bit 0, 1 int the state member 
    263          
    264          */

   \                                 In section .text, align 4, keep-with-next
    265          void WIDGET_AndState(WM_HWIN hObj, int Mask) {
   \                     WIDGET_AndState:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    266            U16 StateNew;
    267            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0B00000A           BEQ      ??WIDGET_AndState_0
    268              WIDGET * pWidget;
    269              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
    270              pWidget = WIDGET_LOCK(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
    271              StateNew = pWidget->State & (~Mask);
   \   00000024   B213D0E1           LDRH     R1,[R0, #+50]
   \   00000028   0520C1E1           BIC      R2,R1,R5
    272              if (pWidget->State != StateNew) {
   \   0000002C   020051E1           CMP      R1,R2
   \   00000030   0200000A           BEQ      ??WIDGET_AndState_1
    273                pWidget->State = StateNew;
   \   00000034   B223C0E1           STRH     R2,[R0, #+50]
    274                WM_Invalidate(hObj);
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       WM_InvalidateWindow
    275              }
    276              GUI_UNLOCK_H(pWidget);
   \                     ??WIDGET_AndState_1:
   \   00000040   ........           BL       GUI_ALLOC_UnlockH
    277              WM_UNLOCK();
   \   00000044   ........           BL       GUI_Unlock
    278            }
    279          }
   \                     ??WIDGET_AndState_0:
   \   00000048   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000004C   3080BDE8           POP      {R4,R5,PC}       ;; return
    280          
    281          /*********************************************************************
    282          *
    283          *       WIDGET__Init
    284          */

   \                                 In section .text, align 4, keep-with-next
    285          void WIDGET__Init(WIDGET * pWidget, int Id, U16 State) {
    286            pWidget->pEffect = _pEffectDefault;
   \                     WIDGET__Init:
   \   00000000   ........           LDR      R3,??DataTable2
   \   00000004   003093E5           LDR      R3,[R3, #+0]
   \   00000008   2C3080E5           STR      R3,[R0, #+44]
    287            pWidget->State   = State;
   \   0000000C   B223C0E1           STRH     R2,[R0, #+50]
    288            pWidget->Id      = Id;
   \   00000010   B013C0E1           STRH     R1,[R0, #+48]
    289          }
   \   00000014   1EFF2FE1           BX       LR               ;; return
    290          
    291          /*********************************************************************
    292          *
    293          *       WIDGET_HandleActive
    294          */

   \                                 In section .text, align 4, keep-with-next
    295          int WIDGET_HandleActive(WM_HWIN hObj, WM_MESSAGE * pMsg) {
   \                     WIDGET_HandleActive:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0150A0E1           MOV      R5,R1
    296            int Diff, Notification, r;
    297            WIDGET * pWidget;
    298            r = 1;                              /* Message NOT handled */
   \   00000010   0170A0E3           MOV      R7,#+1
    299            if (hObj) {
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   7900000A           BEQ      ??WIDGET_HandleActive_0
    300              pWidget = WIDGET_LOCK(hObj);
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0060A0E1           MOV      R6,R0
    301              switch (pMsg->MsgId) {
   \   00000024   000095E5           LDR      R0,[R5, #+0]
   \   00000028   0D0050E3           CMP      R0,#+13
   \   0000002C   3000000A           BEQ      ??WIDGET_HandleActive_1
   \   00000030   110050E3           CMP      R0,#+17
   \   00000034   2300000A           BEQ      ??WIDGET_HandleActive_2
   \   00000038   140050E3           CMP      R0,#+20
   \   0000003C   6300000A           BEQ      ??WIDGET_HandleActive_3
   \   00000040   150050E3           CMP      R0,#+21
   \   00000044   1C00000A           BEQ      ??WIDGET_HandleActive_4
   \   00000048   160050E3           CMP      R0,#+22
   \   0000004C   3200000A           BEQ      ??WIDGET_HandleActive_5
   \   00000050   1E0050E3           CMP      R0,#+30
   \   00000054   3300000A           BEQ      ??WIDGET_HandleActive_6
   \   00000058   1F0050E3           CMP      R0,#+31
   \   0000005C   5700000A           BEQ      ??WIDGET_HandleActive_7
   \   00000060   C00F50E3           CMP      R0,#+768
   \   00000064   6300001A           BNE      ??WIDGET_HandleActive_8
    302              case WM_WIDGET_SET_EFFECT:
    303                Diff = pWidget->pEffect->EffectSize;
   \   00000068   2C0096E5           LDR      R0,[R6, #+44]
    304                pWidget->pEffect = (const WIDGET_EFFECT *)pMsg->Data.p;
   \   0000006C   0C1095E5           LDR      R1,[R5, #+12]
   \   00000070   000090E5           LDR      R0,[R0, #+0]
   \   00000074   2C1086E5           STR      R1,[R6, #+44]
    305                Diff -= pWidget->pEffect->EffectSize;
   \   00000078   001091E5           LDR      R1,[R1, #+0]
   \   0000007C   015040E0           SUB      R5,R0,R1
    306                GUI_UNLOCK_H(pWidget);
   \   00000080   ........           BL       GUI_ALLOC_UnlockH
    307                _UpdateChildPostions(hObj, Diff);
   \   00000084   ........           BL       GUI_Lock
   \   00000088   0400A0E1           MOV      R0,R4
   \   0000008C   ........           BL       GUI_ALLOC_LockH
   \   00000090   001065E2           RSB      R1,R5,#+0
   \   00000094   00508DE5           STR      R5,[SP, #+0]
   \   00000098   0530A0E1           MOV      R3,R5
   \   0000009C   0120A0E1           MOV      R2,R1
   \   000000A0   ........           BL       WM__UpdateChildPositions
   \   000000A4   ........           BL       GUI_ALLOC_UnlockH
   \   000000A8   ........           BL       GUI_Unlock
    308                WM_InvalidateWindow(hObj);
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   ........           BL       WM_InvalidateWindow
    309                r = 0;                            /* Message handled */
   \                     ??WIDGET_HandleActive_9:
   \   000000B4   0070A0E3           MOV      R7,#+0
    310                break;
   \   000000B8   510000EA           B        ??WIDGET_HandleActive_0
    311              case WM_GET_ID:
    312                pMsg->Data.v = pWidget->Id;
   \                     ??WIDGET_HandleActive_4:
   \   000000BC   F003D6E1           LDRSH    R0,[R6, #+48]
   \                     ??WIDGET_HandleActive_10:
   \   000000C0   0C0085E5           STR      R0,[R5, #+12]
    313                r = 0;                            /* Message handled */
   \   000000C4   4A0000EA           B        ??WIDGET_HandleActive_11
    314                break;
    315              case WM_PID_STATE_CHANGED:
    316                if (pWidget->State & WIDGET_STATE_FOCUSSABLE) {
   \                     ??WIDGET_HandleActive_2:
   \   000000C8   3200D6E5           LDRB     R0,[R6, #+50]
   \   000000CC   100010E3           TST      R0,#0x10
   \   000000D0   4800000A           BEQ      ??WIDGET_HandleActive_8
    317                  const WM_PID_STATE_CHANGED_INFO * pInfo = (const WM_PID_STATE_CHANGED_INFO *)pMsg->Data.p;
    318                  if (pInfo->State) {
   \   000000D4   0C0095E5           LDR      R0,[R5, #+12]
   \   000000D8   0800D0E5           LDRB     R0,[R0, #+8]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   4400000A           BEQ      ??WIDGET_HandleActive_8
    319                    GUI_UNLOCK_H(pWidget);
   \   000000E4   ........           BL       GUI_ALLOC_UnlockH
    320                    WM_SetFocus(hObj);
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       WM_SetFocus
   \   000000F0   430000EA           B        ??WIDGET_HandleActive_0
    321                  }
    322                }
    323                break;
    324              case WM_TOUCH_CHILD:
    325                /* A descendent (child) has been touched or released.
    326                   If it has been touched, we need to get to top.
    327                 */
    328                {
    329                  const WM_MESSAGE * pMsgOrg;
    330                  const GUI_PID_STATE * pState;
    331                  pMsgOrg = (const WM_MESSAGE *)pMsg->Data.p;      /* The original touch message */
    332                  pState = (const GUI_PID_STATE *)pMsgOrg->Data.p;
   \                     ??WIDGET_HandleActive_1:
   \   000000F4   0C0095E5           LDR      R0,[R5, #+12]
   \   000000F8   0C0090E5           LDR      R0,[R0, #+12]
    333                  if (pState) {          /* Message may not have a valid pointer (moved out) ! */
   \   000000FC   000050E3           CMP      R0,#+0
    334                    if (pState->Pressed) {
   \   00000100   0800D015           LDRBNE   R0,[R0, #+8]
   \   00000104   00005013           CMPNE    R0,#+0
   \   00000108   3A00000A           BEQ      ??WIDGET_HandleActive_8
    335                      GUI_UNLOCK_H(pWidget);
   \   0000010C   ........           BL       GUI_ALLOC_UnlockH
    336                      WM_BringToTop(hObj);
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   ........           BL       WM_BringToTop
    337                      r = 0;                      /* Message handled */
   \   00000118   E5FFFFEA           B        ??WIDGET_HandleActive_9
    338                    }
    339                  }
    340                }
    341                break;
    342              case WM_SET_ID:
    343                pWidget->Id = pMsg->Data.v;
   \                     ??WIDGET_HandleActive_5:
   \   0000011C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000120   B003C6E1           STRH     R0,[R6, #+48]
    344                r = 0;                            /* Message handled */
   \   00000124   320000EA           B        ??WIDGET_HandleActive_11
   \                     ??WIDGET_HandleActive_6:
   \   00000128   0C1095E5           LDR      R1,[R5, #+12]
   \   0000012C   B203D6E1           LDRH     R0,[R6, #+50]
   \   00000130   010051E3           CMP      R1,#+1
   \   00000134   0D00001A           BNE      ??WIDGET_HandleActive_12
    345                break;
    346              case WM_SET_FOCUS:
    347                if (pMsg->Data.v == 1) {
    348                  WIDGET_SetState(hObj, pWidget->State |  WIDGET_STATE_FOCUS);
   \   00000138   016080E3           ORR      R6,R0,#0x1
   \   0000013C   ........           BL       GUI_Lock
   \   00000140   0400A0E1           MOV      R0,R4
   \   00000144   ........           BL       GUI_ALLOC_LockH
   \   00000148   B213D0E1           LDRH     R1,[R0, #+50]
   \   0000014C   010056E1           CMP      R6,R1
   \   00000150   0200000A           BEQ      ??WIDGET_HandleActive_13
   \   00000154   B263C0E1           STRH     R6,[R0, #+50]
   \   00000158   0400A0E1           MOV      R0,R4
   \   0000015C   ........           BL       WM_InvalidateWindow
   \                     ??WIDGET_HandleActive_13:
   \   00000160   ........           BL       GUI_ALLOC_UnlockH
   \   00000164   ........           BL       GUI_Unlock
    349                  Notification = WM_NOTIFICATION_GOT_FOCUS;
   \   00000168   0870A0E3           MOV      R7,#+8
   \   0000016C   0C0000EA           B        ??WIDGET_HandleActive_14
    350                } else {
    351                  WIDGET_SetState(hObj, pWidget->State & ~WIDGET_STATE_FOCUS);
   \                     ??WIDGET_HandleActive_12:
   \   00000170   0160C0E3           BIC      R6,R0,#0x1
   \   00000174   ........           BL       GUI_Lock
   \   00000178   0400A0E1           MOV      R0,R4
   \   0000017C   ........           BL       GUI_ALLOC_LockH
   \   00000180   B213D0E1           LDRH     R1,[R0, #+50]
   \   00000184   010056E1           CMP      R6,R1
   \   00000188   0200000A           BEQ      ??WIDGET_HandleActive_15
   \   0000018C   B263C0E1           STRH     R6,[R0, #+50]
   \   00000190   0400A0E1           MOV      R0,R4
   \   00000194   ........           BL       WM_InvalidateWindow
   \                     ??WIDGET_HandleActive_15:
   \   00000198   ........           BL       GUI_ALLOC_UnlockH
   \   0000019C   ........           BL       GUI_Unlock
    352                  Notification = WM_NOTIFICATION_LOST_FOCUS;
   \   000001A0   0970A0E3           MOV      R7,#+9
    353                }
    354                GUI_UNLOCK_H(pWidget);
   \                     ??WIDGET_HandleActive_14:
   \   000001A4   ........           BL       GUI_ALLOC_UnlockH
   \   000001A8   0060A0E3           MOV      R6,#+0
    355                WM_NotifyParent(hObj, Notification);
   \   000001AC   0710A0E1           MOV      R1,R7
   \   000001B0   0400A0E1           MOV      R0,R4
   \   000001B4   ........           BL       WM_NotifyParent
    356                pMsg->Data.v = 0;   /* Focus change accepted */
   \   000001B8   0C6085E5           STR      R6,[R5, #+12]
    357                r = 0;                            /* Message handled */
   \   000001BC   BCFFFFEA           B        ??WIDGET_HandleActive_9
    358                break;
    359              case WM_GET_ACCEPT_FOCUS:
    360                pMsg->Data.v = (pWidget->State & WIDGET_STATE_FOCUSSABLE) ? 1 : 0;               /* Can handle focus */
   \                     ??WIDGET_HandleActive_7:
   \   000001C0   B203D6E1           LDRH     R0,[R6, #+50]
   \   000001C4   FF0000E2           AND      R0,R0,#0xFF
   \   000001C8   200207E0           AND      R0,R7,R0, LSR #+4
   \   000001CC   BBFFFFEA           B        ??WIDGET_HandleActive_10
    361                r = 0;                            /* Message handled */
    362                break;
    363              case WM_GET_INSIDE_RECT:
    364                WIDGET__GetInsideRect(pWidget, (GUI_RECT *)pMsg->Data.p);
   \                     ??WIDGET_HandleActive_3:
   \   000001D0   0C4095E5           LDR      R4,[R5, #+12]
   \   000001D4   0600A0E1           MOV      R0,R6
   \   000001D8   0410A0E1           MOV      R1,R4
   \   000001DC   ........           BL       WM__GetClientRectWin
   \   000001E0   2C0096E5           LDR      R0,[R6, #+44]
   \   000001E4   0410A0E1           MOV      R1,R4
   \   000001E8   002090E5           LDR      R2,[R0, #+0]
   \   000001EC   0400A0E1           MOV      R0,R4
   \   000001F0   ........           BL       GUI__ReduceRect
    365                r = 0;                            /* Message handled */
   \                     ??WIDGET_HandleActive_11:
   \   000001F4   0070A0E3           MOV      R7,#+0
    366                break;
    367              }
    368              if (pWidget) {
   \                     ??WIDGET_HandleActive_8:
   \   000001F8   000056E3           CMP      R6,#+0
   \   000001FC   0000000A           BEQ      ??WIDGET_HandleActive_0
    369                GUI_UNLOCK_H(pWidget);
   \   00000200   ........           BL       GUI_ALLOC_UnlockH
    370              }
    371            }
    372            return r;
   \                     ??WIDGET_HandleActive_0:
   \   00000204   0700A0E1           MOV      R0,R7
   \   00000208   04D08DE2           ADD      SP,SP,#+4
   \   0000020C   F080BDE8           POP      {R4-R7,PC}       ;; return
    373          }
    374          
    375          /*********************************************************************
    376          *
    377          *       WIDGET__SetScrollState
    378          */

   \                                 In section .text, align 4, keep-with-next
    379          void WIDGET__SetScrollState(WM_HWIN hWin, const WM_SCROLL_STATE* pVState, const WM_SCROLL_STATE* pHState) {
   \                     WIDGET__SetScrollState:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0260A0E1           MOV      R6,R2
    380            WM_HWIN hScroll;
    381            /* vertical scrollbar */
    382            hScroll = WM_GetDialogItem(hWin, GUI_ID_VSCROLL);
   \   00000010   FE10A0E3           MOV      R1,#+254
   \   00000014   ........           BL       WM_GetDialogItem
    383            WM_SetScrollState(hScroll, pVState);
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   ........           BL       WM_SetScrollState
    384            /* horizontal scrollbar */
    385            hScroll = WM_GetDialogItem(hWin, GUI_ID_HSCROLL);
   \   00000020   FF10A0E3           MOV      R1,#+255
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       WM_GetDialogItem
    386            WM_SetScrollState(hScroll, pHState);
   \   0000002C   0610A0E1           MOV      R1,R6
   \   00000030   7040BDE8           POP      {R4-R6,LR}
   \   00000034   ........           B        WM_SetScrollState  ;; tailcall
    387          }
    388          
    389          /*********************************************************************
    390          *
    391          *       WIDGET__DrawFocusRect
    392          */

   \                                 In section .text, align 4, keep-with-next
    393          void WIDGET__DrawFocusRect(WIDGET * pWidget, const GUI_RECT * pRect, int Dist) {
   \                     WIDGET__DrawFocusRect:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0030A0E1           MOV      R3,R0
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
    394            GUI_RECT Rect;
    395            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000010   3220D3E5           LDRB     R2,[R3, #+50]
   \   00000014   08D04DE2           SUB      SP,SP,#+8
   \   00000018   080012E3           TST      R2,#0x8
   \   0000001C   0D00000A           BEQ      ??WIDGET__DrawFocusRect_0
    396              WIDGET__RotateRect90(pWidget, &Rect, pRect);
   \   00000020   F4E0D3E1           LDRSH    LR,[R3, #+4]
   \   00000024   F030D3E1           LDRSH    R3,[R3, #+0]
   \   00000028   F640D0E1           LDRSH    R4,[R0, #+6]
   \   0000002C   F020D0E1           LDRSH    R2,[R0, #+0]
   \   00000030   03304EE0           SUB      R3,LR,R3
   \   00000034   F4C0D0E1           LDRSH    R12,[R0, #+4]
   \   00000038   04E043E0           SUB      LR,R3,R4
   \   0000003C   B0E0CDE1           STRH     LR,[SP, #+0]
   \   00000040   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000044   B220CDE1           STRH     R2,[SP, #+2]
   \   00000048   B6C0CDE1           STRH     R12,[SP, #+6]
   \   0000004C   000043E0           SUB      R0,R3,R0
   \   00000050   B400CDE1           STRH     R0,[SP, #+4]
    397              pRect = &Rect;
   \   00000054   0D00A0E1           MOV      R0,SP
    398            }
    399            GUI_DrawFocusRect(pRect, Dist);
   \                     ??WIDGET__DrawFocusRect_0:
   \   00000058   ........           BL       GUI_DrawFocusRect
    400          }
   \   0000005C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000060   1080BDE8           POP      {R4,PC}          ;; return
    401          
    402          /*********************************************************************
    403          *
    404          *       WIDGET__DrawVLine
    405          */

   \                                 In section .text, align 4, keep-with-next
    406          void WIDGET__DrawVLine(WIDGET * pWidget, int x, int y0, int y1) {
   \                     WIDGET__DrawVLine:
   \   00000000   00C0A0E1           MOV      R12,R0
   \   00000004   00402DE9           PUSH     {LR}
   \   00000008   0100A0E1           MOV      R0,R1
   \   0000000C   0210A0E1           MOV      R1,R2
    407            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000010   3220DCE5           LDRB     R2,[R12, #+50]
   \   00000014   04D04DE2           SUB      SP,SP,#+4
   \   00000018   080012E3           TST      R2,#0x8
   \   0000001C   0C00000A           BEQ      ??WIDGET__DrawVLine_0
    408              GUI_RECT r0, r1;
    409              r0.x0 = x;
    410              r0.x1 = x;
    411              r0.y0 = y0;
    412              r0.y1 = y1;
    413              WIDGET__RotateRect90(pWidget, &r1, &r0);
   \   00000020   F420DCE1           LDRSH    R2,[R12, #+4]
   \   00000024   F0C0DCE1           LDRSH    R12,[R12, #+0]
    414              GUI_DrawHLine(r1.y0, r1.x0, r1.x1);
   \   00000028   0008A0E1           LSL      R0,R0,#+16
   \   0000002C   4008A0E1           ASR      R0,R0,#+16
   \   00000030   0CC042E0           SUB      R12,R2,R12
   \   00000034   01204CE0           SUB      R2,R12,R1
   \   00000038   03104CE0           SUB      R1,R12,R3
   \   0000003C   0228A0E1           LSL      R2,R2,#+16
   \   00000040   0118A0E1           LSL      R1,R1,#+16
   \   00000044   4228A0E1           ASR      R2,R2,#+16
   \   00000048   4118A0E1           ASR      R1,R1,#+16
   \   0000004C   ........           BL       GUI_DrawHLine
   \   00000050   010000EA           B        ??WIDGET__DrawVLine_1
    415            } else {
    416              GUI_DrawVLine(x, y0, y1);
   \                     ??WIDGET__DrawVLine_0:
   \   00000054   0320A0E1           MOV      R2,R3
   \   00000058   ........           BL       GUI_DrawVLine
    417            }
    418          }
   \                     ??WIDGET__DrawVLine_1:
   \   0000005C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000060   0080BDE8           POP      {PC}             ;; return
    419          
    420          /*********************************************************************
    421          *
    422          *       WIDGET__DrawHLine
    423          */

   \                                 In section .text, align 4, keep-with-next
    424          void WIDGET__DrawHLine(WIDGET * pWidget, int y, int x0, int x1) {
   \                     WIDGET__DrawHLine:
   \   00000000   00C0A0E1           MOV      R12,R0
   \   00000004   0100A0E1           MOV      R0,R1
   \   00000008   00402DE9           PUSH     {LR}
   \   0000000C   0210A0E1           MOV      R1,R2
   \   00000010   0320A0E1           MOV      R2,R3
    425            GUI_RECT r0, r1;
    426          
    427            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000014   3230DCE5           LDRB     R3,[R12, #+50]
   \   00000018   04D04DE2           SUB      SP,SP,#+4
   \   0000001C   080013E3           TST      R3,#0x8
   \   00000020   0B00000A           BEQ      ??WIDGET__DrawHLine_0
    428              r0.x0 = x0;
    429              r0.x1 = x1;
    430              r0.y0 = y;
    431              r0.y1 = y;
    432              WIDGET__RotateRect90(pWidget, &r1, &r0);
    433              GUI_DrawVLine(r1.x0, r1.y0, r1.y1);
   \   00000024   F430DCE1           LDRSH    R3,[R12, #+4]
   \   00000028   F0C0DCE1           LDRSH    R12,[R12, #+0]
   \   0000002C   0228A0E1           LSL      R2,R2,#+16
   \   00000030   0118A0E1           LSL      R1,R1,#+16
   \   00000034   0C3043E0           SUB      R3,R3,R12
   \   00000038   000043E0           SUB      R0,R3,R0
   \   0000003C   0008A0E1           LSL      R0,R0,#+16
   \   00000040   4228A0E1           ASR      R2,R2,#+16
   \   00000044   4118A0E1           ASR      R1,R1,#+16
   \   00000048   4008A0E1           ASR      R0,R0,#+16
   \   0000004C   ........           BL       GUI_DrawVLine
   \   00000050   000000EA           B        ??WIDGET__DrawHLine_1
    434            } else {
    435              GUI_DrawHLine(y, x0, x1);
   \                     ??WIDGET__DrawHLine_0:
   \   00000054   ........           BL       GUI_DrawHLine
    436            }
    437          }
   \                     ??WIDGET__DrawHLine_1:
   \   00000058   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   0000005C   0080BDE8           POP      {PC}             ;; return
    438          
    439          /*********************************************************************
    440          *
    441          *       WIDGET__FillRectEx
    442          */

   \                                 In section .text, align 4, keep-with-next
    443          void WIDGET__FillRectEx(WIDGET * pWidget, const GUI_RECT * pRect) {
   \                     WIDGET__FillRectEx:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0020A0E1           MOV      R2,R0
   \   00000008   0100A0E1           MOV      R0,R1
    444            GUI_RECT r;
    445            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   0000000C   3210D2E5           LDRB     R1,[R2, #+50]
   \   00000010   0CD04DE2           SUB      SP,SP,#+12
   \   00000014   080011E3           TST      R1,#0x8
   \   00000018   0D00000A           BEQ      ??WIDGET__FillRectEx_0
    446              WIDGET__RotateRect90(pWidget, &r, pRect);
   \   0000001C   F4C0D2E1           LDRSH    R12,[R2, #+4]
   \   00000020   F020D2E1           LDRSH    R2,[R2, #+0]
   \   00000024   F6E0D0E1           LDRSH    LR,[R0, #+6]
   \   00000028   F010D0E1           LDRSH    R1,[R0, #+0]
   \   0000002C   02204CE0           SUB      R2,R12,R2
   \   00000030   F430D0E1           LDRSH    R3,[R0, #+4]
   \   00000034   0EC042E0           SUB      R12,R2,LR
   \   00000038   B0C0CDE1           STRH     R12,[SP, #+0]
   \   0000003C   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000040   B210CDE1           STRH     R1,[SP, #+2]
   \   00000044   B630CDE1           STRH     R3,[SP, #+6]
   \   00000048   000042E0           SUB      R0,R2,R0
   \   0000004C   B400CDE1           STRH     R0,[SP, #+4]
    447              pRect = &r;
   \   00000050   0D00A0E1           MOV      R0,SP
    448            }
    449            GUI_FillRectEx(pRect);
   \                     ??WIDGET__FillRectEx_0:
   \   00000054   ........           BL       GUI_FillRectEx
    450          }
   \   00000058   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000005C   0080BDE8           POP      {PC}             ;; return
    451          
    452          /*********************************************************************
    453          *
    454          *       WIDGET__DrawTriangle
    455          */

   \                                 In section .text, align 4, keep-with-next
    456          void WIDGET__DrawTriangle(WIDGET* pWidget, int x, int y, int Size, int Inc) {
   \                     WIDGET__DrawTriangle:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    457            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000004   3200D0E5           LDRB     R0,[R0, #+50]
   \   00000008   0140A0E1           MOV      R4,R1
   \   0000000C   0250A0E1           MOV      R5,R2
   \   00000010   0360A0E1           MOV      R6,R3
   \   00000014   18709DE5           LDR      R7,[SP, #+24]
   \   00000018   080010E3           TST      R0,#0x8
   \   0000001C   0C00001A           BNE      ??WIDGET__DrawTriangle_0
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   0900004A           BMI      ??WIDGET__DrawTriangle_1
   \   00000028   058086E0           ADD      R8,R6,R5
    458              for (; Size >= 0; Size--, x += Inc) {
    459                GUI_DrawHLine(x, y - Size, y + Size);
    460              }
    461            } else {
    462              for (; Size >= 0; Size--, x += Inc) {
    463                GUI_DrawVLine(x, y - Size, y + Size);
   \                     ??WIDGET__DrawTriangle_2:
   \   0000002C   0820A0E1           MOV      R2,R8
   \   00000030   061045E0           SUB      R1,R5,R6
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       GUI_DrawVLine
    464              }
   \   0000003C   016046E2           SUB      R6,R6,#+1
   \   00000040   044087E0           ADD      R4,R7,R4
   \   00000044   018048E2           SUB      R8,R8,#+1
   \   00000048   000056E3           CMP      R6,#+0
   \   0000004C   F6FFFF5A           BPL      ??WIDGET__DrawTriangle_2
    465            }
    466          }
   \                     ??WIDGET__DrawTriangle_1:
   \   00000050   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??WIDGET__DrawTriangle_0:
   \   00000054   000056E3           CMP      R6,#+0
   \   00000058   FCFFFF4A           BMI      ??WIDGET__DrawTriangle_1
   \   0000005C   058086E0           ADD      R8,R6,R5
   \                     ??WIDGET__DrawTriangle_3:
   \   00000060   0820A0E1           MOV      R2,R8
   \   00000064   061045E0           SUB      R1,R5,R6
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       GUI_DrawHLine
   \   00000070   016046E2           SUB      R6,R6,#+1
   \   00000074   044087E0           ADD      R4,R7,R4
   \   00000078   018048E2           SUB      R8,R8,#+1
   \   0000007C   000056E3           CMP      R6,#+0
   \   00000080   F6FFFF5A           BPL      ??WIDGET__DrawTriangle_3
   \   00000084   F081BDE8           POP      {R4-R8,PC}
    467          
    468          /*********************************************************************
    469          *
    470          *       WIDGET__EFFECT_DrawDownRect
    471          */

   \                                 In section .text, align 4, keep-with-next
    472          void WIDGET__EFFECT_DrawDownRect(WIDGET * pWidget, GUI_RECT * pRect) {
   \                     WIDGET__EFFECT_DrawDownRect:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
    473            GUI_RECT Rect;
    474            if (pRect == NULL) {
   \   00000010   0200001A           BNE      ??WIDGET__EFFECT_DrawDownRect_0
    475              WM_GetClientRect(&Rect);
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       WM_GetClientRect
    476              pRect = &Rect;
   \   0000001C   0D50A0E1           MOV      R5,SP
    477            }
    478            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \                     ??WIDGET__EFFECT_DrawDownRect_0:
   \   00000020   3200D4E5           LDRB     R0,[R4, #+50]
   \   00000024   080010E3           TST      R0,#0x8
   \   00000028   0D00000A           BEQ      ??WIDGET__EFFECT_DrawDownRect_1
    479              WIDGET__RotateRect90(pWidget, &Rect, pRect);
   \   0000002C   F420D4E1           LDRSH    R2,[R4, #+4]
   \   00000030   F030D4E1           LDRSH    R3,[R4, #+0]
   \   00000034   F6C0D5E1           LDRSH    R12,[R5, #+6]
   \   00000038   F000D5E1           LDRSH    R0,[R5, #+0]
   \   0000003C   032042E0           SUB      R2,R2,R3
   \   00000040   F410D5E1           LDRSH    R1,[R5, #+4]
   \   00000044   0C3042E0           SUB      R3,R2,R12
   \   00000048   B030CDE1           STRH     R3,[SP, #+0]
   \   0000004C   F230D5E1           LDRSH    R3,[R5, #+2]
   \   00000050   B200CDE1           STRH     R0,[SP, #+2]
   \   00000054   B610CDE1           STRH     R1,[SP, #+6]
   \   00000058   032042E0           SUB      R2,R2,R3
   \   0000005C   B420CDE1           STRH     R2,[SP, #+4]
    480              pRect = &Rect;
   \   00000060   0D50A0E1           MOV      R5,SP
    481            }
    482            if (_EffectRequiresRedraw(pWidget, pRect)) {
   \                     ??WIDGET__EFFECT_DrawDownRect_1:
   \   00000064   2C0094E5           LDR      R0,[R4, #+44]
   \   00000068   081084E2           ADD      R1,R4,#+8
   \   0000006C   006090E5           LDR      R6,[R0, #+0]
   \   00000070   08008DE2           ADD      R0,SP,#+8
   \   00000074   0820A0E3           MOV      R2,#+8
   \   00000078   ........           BL       __aeabi_memcpy
   \   0000007C   08108DE2           ADD      R1,SP,#+8
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       WM__Screen2Client
   \   00000088   F010D5E1           LDRSH    R1,[R5, #+0]
   \   0000008C   F800DDE1           LDRSH    R0,[SP, #+8]
   \   00000090   011086E0           ADD      R1,R6,R1
   \   00000094   010050E1           CMP      R0,R1
   \   00000098   0E0000BA           BLT      ??WIDGET__EFFECT_DrawDownRect_2
   \   0000009C   F400D5E1           LDRSH    R0,[R5, #+4]
   \   000000A0   FC10DDE1           LDRSH    R1,[SP, #+12]
   \   000000A4   060040E0           SUB      R0,R0,R6
   \   000000A8   010050E1           CMP      R0,R1
   \   000000AC   090000BA           BLT      ??WIDGET__EFFECT_DrawDownRect_2
   \   000000B0   F210D5E1           LDRSH    R1,[R5, #+2]
   \   000000B4   FA00DDE1           LDRSH    R0,[SP, #+10]
   \   000000B8   011086E0           ADD      R1,R6,R1
   \   000000BC   010050E1           CMP      R0,R1
   \   000000C0   040000BA           BLT      ??WIDGET__EFFECT_DrawDownRect_2
   \   000000C4   F600D5E1           LDRSH    R0,[R5, #+6]
   \   000000C8   FE10DDE1           LDRSH    R1,[SP, #+14]
   \   000000CC   060040E0           SUB      R0,R0,R6
   \   000000D0   010050E1           CMP      R0,R1
   \   000000D4   030000AA           BGE      ??WIDGET__EFFECT_DrawDownRect_3
    483              pWidget->pEffect->pfDrawDownRect(pRect);
   \                     ??WIDGET__EFFECT_DrawDownRect_2:
   \   000000D8   2C1094E5           LDR      R1,[R4, #+44]
   \   000000DC   0500A0E1           MOV      R0,R5
   \   000000E0   101091E5           LDR      R1,[R1, #+16]
   \   000000E4   31FF2FE1           BLX      R1
    484            }
    485          }
   \                     ??WIDGET__EFFECT_DrawDownRect_3:
   \   000000E8   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000000EC   7080BDE8           POP      {R4-R6,PC}       ;; return
    486          
    487          /*********************************************************************
    488          *
    489          *       WIDGET__EFFECT_DrawDown
    490          */

   \                                 In section .text, align 4, keep-with-next
    491          void WIDGET__EFFECT_DrawDown(WIDGET * pWidget) {
    492            WIDGET__EFFECT_DrawDownRect(pWidget, NULL);
   \                     WIDGET__EFFECT_DrawDown:
   \   00000000   0010A0E3           MOV      R1,#+0
   \   00000004   ........           B        WIDGET__EFFECT_DrawDownRect  ;; tailcall
    493          }
    494          
    495          /*********************************************************************
    496          *
    497          *       WIDGET__EFFECT_DrawUpRect
    498          */

   \                                 In section .text, align 4, keep-with-next
    499          void WIDGET__EFFECT_DrawUpRect(WIDGET * pWidget, GUI_RECT * pRect) {
   \                     WIDGET__EFFECT_DrawUpRect:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    500            GUI_RECT Rect;
    501            if (pWidget->State & WIDGET_STATE_VERTICAL) {
   \   00000008   3200D4E5           LDRB     R0,[R4, #+50]
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   080010E3           TST      R0,#0x8
   \   00000018   0D00000A           BEQ      ??WIDGET__EFFECT_DrawUpRect_0
    502              WIDGET__RotateRect90(pWidget, &Rect, pRect);
   \   0000001C   F420D4E1           LDRSH    R2,[R4, #+4]
   \   00000020   F030D4E1           LDRSH    R3,[R4, #+0]
   \   00000024   F6C0D5E1           LDRSH    R12,[R5, #+6]
   \   00000028   F000D5E1           LDRSH    R0,[R5, #+0]
   \   0000002C   032042E0           SUB      R2,R2,R3
   \   00000030   F410D5E1           LDRSH    R1,[R5, #+4]
   \   00000034   0C3042E0           SUB      R3,R2,R12
   \   00000038   B830CDE1           STRH     R3,[SP, #+8]
   \   0000003C   F230D5E1           LDRSH    R3,[R5, #+2]
   \   00000040   BA00CDE1           STRH     R0,[SP, #+10]
   \   00000044   BE10CDE1           STRH     R1,[SP, #+14]
   \   00000048   032042E0           SUB      R2,R2,R3
   \   0000004C   BC20CDE1           STRH     R2,[SP, #+12]
    503              pRect = &Rect;
   \   00000050   08508DE2           ADD      R5,SP,#+8
    504            }
    505            if (_EffectRequiresRedraw(pWidget, pRect)) {
   \                     ??WIDGET__EFFECT_DrawUpRect_0:
   \   00000054   2C0094E5           LDR      R0,[R4, #+44]
   \   00000058   081084E2           ADD      R1,R4,#+8
   \   0000005C   006090E5           LDR      R6,[R0, #+0]
   \   00000060   0D00A0E1           MOV      R0,SP
   \   00000064   0820A0E3           MOV      R2,#+8
   \   00000068   ........           BL       __aeabi_memcpy
   \   0000006C   0D10A0E1           MOV      R1,SP
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   ........           BL       WM__Screen2Client
   \   00000078   F010D5E1           LDRSH    R1,[R5, #+0]
   \   0000007C   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000080   011086E0           ADD      R1,R6,R1
   \   00000084   010050E1           CMP      R0,R1
   \   00000088   0E0000BA           BLT      ??WIDGET__EFFECT_DrawUpRect_1
   \   0000008C   F400D5E1           LDRSH    R0,[R5, #+4]
   \   00000090   F410DDE1           LDRSH    R1,[SP, #+4]
   \   00000094   060040E0           SUB      R0,R0,R6
   \   00000098   010050E1           CMP      R0,R1
   \   0000009C   090000BA           BLT      ??WIDGET__EFFECT_DrawUpRect_1
   \   000000A0   F210D5E1           LDRSH    R1,[R5, #+2]
   \   000000A4   F200DDE1           LDRSH    R0,[SP, #+2]
   \   000000A8   011086E0           ADD      R1,R6,R1
   \   000000AC   010050E1           CMP      R0,R1
   \   000000B0   040000BA           BLT      ??WIDGET__EFFECT_DrawUpRect_1
   \   000000B4   F600D5E1           LDRSH    R0,[R5, #+6]
   \   000000B8   F610DDE1           LDRSH    R1,[SP, #+6]
   \   000000BC   060040E0           SUB      R0,R0,R6
   \   000000C0   010050E1           CMP      R0,R1
   \   000000C4   030000AA           BGE      ??WIDGET__EFFECT_DrawUpRect_2
    506              pWidget->pEffect->pfDrawUpRect(pRect);
   \                     ??WIDGET__EFFECT_DrawUpRect_1:
   \   000000C8   2C1094E5           LDR      R1,[R4, #+44]
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   081091E5           LDR      R1,[R1, #+8]
   \   000000D4   31FF2FE1           BLX      R1
    507            }
    508          }
   \                     ??WIDGET__EFFECT_DrawUpRect_2:
   \   000000D8   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000000DC   7080BDE8           POP      {R4-R6,PC}       ;; return
    509          
    510          /*********************************************************************
    511          *
    512          *       WIDGET_SetDefaultEffect
    513          */

   \                                 In section .text, align 4, keep-with-next
    514          const WIDGET_EFFECT * WIDGET_SetDefaultEffect(const WIDGET_EFFECT * pEffect) {
    515            const WIDGET_EFFECT * r;
    516            r = _pEffectDefault;
   \                     WIDGET_SetDefaultEffect:
   \   00000000   ........           LDR      R2,??DataTable2
   \   00000004   001092E5           LDR      R1,[R2, #+0]
    517            _pEffectDefault = pEffect;
   \   00000008   000082E5           STR      R0,[R2, #+0]
    518            return r;
   \   0000000C   0100A0E1           MOV      R0,R1
   \   00000010   1EFF2FE1           BX       LR               ;; return
    519          }
    520          
    521          /*********************************************************************
    522          *
    523          *       WIDGET_GetDefaultEffect
    524          */

   \                                 In section .text, align 4, keep-with-next
    525          const WIDGET_EFFECT *  WIDGET_GetDefaultEffect(void) {
    526            return _pEffectDefault;
   \                     WIDGET_GetDefaultEffect:
   \   00000000   ........           LDR      R0,??DataTable2
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    527          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     _pEffectDefault
    528          
    529          
    530          #else                            /* Avoid problems with empty object modules */
    531            void WIDGET_C(void) {}
    532          #endif /* GUI_WINSUPPORT */
    533          
    534          
    535          
    536          

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     WIDGET_AndState                 16
     WIDGET_GetDefaultEffect          0
     WIDGET_GetState                 16
     WIDGET_HandleActive             24
     WIDGET_OrState                  16
     WIDGET_SetDefaultEffect          0
     WIDGET_SetState                 16
     WIDGET__DrawFocusRect           16
     WIDGET__DrawHLine                8
     WIDGET__DrawTriangle            24
     WIDGET__DrawVLine                8
     WIDGET__EFFECT_DrawDown          8
     WIDGET__EFFECT_DrawDownRect     32
     WIDGET__EFFECT_DrawUpRect       32
     WIDGET__FillRectEx              16
     WIDGET__GetBkColor               8
     WIDGET__GetClientRect           16
     WIDGET__GetInsideRect           16
     WIDGET__GetWindowSizeX           8
     WIDGET__GetXSize                 0
     WIDGET__GetYSize                 0
     WIDGET__Init                     0
     WIDGET__RotateRect90             8
     WIDGET__SetScrollState          16


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     _pEffectDefault                4
     WIDGET__RotateRect90          60
     WIDGET__GetClientRect         84
     WIDGET__GetBkColor            40
     WIDGET__GetInsideRect         48
     WIDGET__GetXSize              36
     WIDGET__GetYSize              36
     WIDGET__GetWindowSizeX        56
     WIDGET_SetState               68
     WIDGET_GetState               56
     WIDGET_OrState                84
     WIDGET_AndState               80
     WIDGET__Init                  24
     WIDGET_HandleActive          528
     WIDGET__SetScrollState        56
     WIDGET__DrawFocusRect        100
     WIDGET__DrawVLine            100
     WIDGET__DrawHLine             96
     WIDGET__FillRectEx            96
     WIDGET__DrawTriangle         136
     WIDGET__EFFECT_DrawDownRect  240
     WIDGET__EFFECT_DrawDown        8
     WIDGET__EFFECT_DrawUpRect    224
     WIDGET_SetDefaultEffect       20
     WIDGET_GetDefaultEffect       12
     ??DataTable2                   4

 
     4 bytes in section .data
 2 292 bytes in section .text
 
 2 292 bytes of CODE memory
     4 bytes of DATA memory

Errors: none
Warnings: none
