###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:46 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_EditString.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_EditString.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_EditString.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_EditString.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_EditString.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_EditString.c
     19          Purpose     : Widget, add. module
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "EDIT.h"
     24          #include "GUI_Private.h"
     25          #include "EDIT_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *             Exported routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_EditString
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          void GUI_EditString(char * pString, int Len, int xsize) {
   \                     GUI_EditString:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0180A0E1           MOV      R8,R1
   \   00000010   0290A0E1           MOV      R9,R2
     40            int Key, x, y, ysize, Id;
     41            EDIT_Handle hEdit;
     42            EDIT_Obj* pObj;
     43            const GUI_FONT GUI_UNI_PTR * pOldFont;
     44            WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     45            pOldFont = GUI_SetFont(EDIT_GetDefaultFont());
   \   00000018   ........           BL       EDIT_GetDefaultFont
   \   0000001C   ........           BL       GUI_SetFont
   \   00000020   0050A0E1           MOV      R5,R0
     46            x = GUI_GetDispPosX();
   \   00000024   ........           BL       GUI_GetDispPosX
   \   00000028   0060A0E1           MOV      R6,R0
     47            y = GUI_GetDispPosY();
   \   0000002C   ........           BL       GUI_GetDispPosY
   \   00000030   0070A0E1           MOV      R7,R0
     48            if (xsize == 0) {
   \   00000034   000059E3           CMP      R9,#+0
   \   00000038   0300001A           BNE      ??GUI_EditString_0
     49              xsize = GUI_GetCharDistX('X') * Len + 6;
   \   0000003C   5800A0E3           MOV      R0,#+88
   \   00000040   ........           BL       GUI_GetCharDistX
   \   00000044   980000E0           MUL      R0,R8,R0
   \   00000048   069080E2           ADD      R9,R0,#+6
     50            }
     51            ysize = GUI_GetFontSizeY();
   \                     ??GUI_EditString_0:
   \   0000004C   ........           BL       GUI_GetFontSizeY
   \   00000050   0030A0E1           MOV      R3,R0
     52            Id = 0x1234;
     53            hEdit = EDIT_Create(x, y, xsize, ysize, Id, Len, 0);
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   08008DE5           STR      R0,[SP, #+8]
   \   0000005C   3400A0E3           MOV      R0,#+52
   \   00000060   480D80E3           ORR      R0,R0,#0x1200
   \   00000064   00008DE5           STR      R0,[SP, #+0]
   \   00000068   04808DE5           STR      R8,[SP, #+4]
   \   0000006C   0920A0E1           MOV      R2,R9
   \   00000070   0710A0E1           MOV      R1,R7
   \   00000074   0600A0E1           MOV      R0,R6
   \   00000078   ........           BL       EDIT_Create
   \   0000007C   0060A0E1           MOV      R6,R0
     54            EDIT_SetText(hEdit, pString);
   \   00000080   0410A0E1           MOV      R1,R4
   \   00000084   ........           BL       EDIT_SetText
     55            WM_SetFocus(hEdit);
   \   00000088   0600A0E1           MOV      R0,R6
   \   0000008C   ........           BL       WM_SetFocus
     56            do {
     57              Key = GUI_WaitKey();
   \                     ??GUI_EditString_1:
   \   00000090   ........           BL       GUI_WaitKey
   \   00000094   0070A0E1           MOV      R7,R0
     58            } while ((Key != GUI_KEY_ESCAPE) && (Key != GUI_KEY_ENTER) && (Key != 0));
   \   00000098   1B0057E3           CMP      R7,#+27
   \   0000009C   0D005713           CMPNE    R7,#+13
   \   000000A0   00005713           CMPNE    R7,#+0
   \   000000A4   F9FFFF1A           BNE      ??GUI_EditString_1
     59            pObj = EDIT_LOCK_H(hEdit);
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   ........           BL       GUI_ALLOC_LockH
     60            if (Key == GUI_KEY_ENTER) {
   \   000000B0   0D0057E3           CMP      R7,#+13
   \   000000B4   0300001A           BNE      ??GUI_EditString_2
     61              EDIT_GetText(hEdit, pString, pObj->MaxLen);
   \   000000B8   F823D0E1           LDRSH    R2,[R0, #+56]
   \   000000BC   0410A0E1           MOV      R1,R4
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   ........           BL       EDIT_GetText
     62            }
     63            GUI_UNLOCK_H(pObj);
   \                     ??GUI_EditString_2:
   \   000000C8   ........           BL       GUI_ALLOC_UnlockH
     64            GUI_SetFont(pOldFont);
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   ........           BL       GUI_SetFont
     65            EDIT_Delete(hEdit);
   \   000000D4   0600A0E1           MOV      R0,R6
   \   000000D8   ........           BL       WM_DeleteWindow
     66            WM_UNLOCK();
   \   000000DC   0CD08DE2           ADD      SP,SP,#+12
   \   000000E0   F043BDE8           POP      {R4-R9,LR}
   \   000000E4   ........           B        GUI_Unlock       ;; tailcall
     67          }
     68          
     69          #else /* avoid empty object files */
     70          
     71          void GUI_EditString_C(void);
     72          void GUI_EditString_C(void){}
     73          
     74          #endif

   Maximum stack usage in bytes:

     Function       .cstack
     --------       -------
     GUI_EditString     40


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_EditString  232

 
 232 bytes in section .text
 
 232 bytes of CODE memory

Errors: none
Warnings: none
