###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:47 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_UC0.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_UC0.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_UC0.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_UC0.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_UC0.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIUC0.C
     19          Purpose     : Implementation of character and string services
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI.h"
     26           
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI_UC2DB
     36          *
     37          * Purpose:
     38          *   Convert Convert UNICODE 16-bit value into double byte version
     39          *   - Byte0: First byte, msb
     40          *   - Byte1: Last  byte, lsb
     41          */

   \                                 In section .text, align 4, keep-with-next
     42          void GUI_UC2DB(U16 Code, U8* pOut) {
     43          /* move regular ASCII to (unused) 0xE000-0xE0ff area */
     44            if (Code < 0x100) {
   \                     GUI_UC2DB:
   \   00000000   400F50E3           CMP      R0,#+256
   \   00000004   0300002A           BCS      ??GUI_UC2DB_0
     45              if (Code !=0)  /* end marker ? */
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0400000A           BEQ      ??GUI_UC2DB_1
     46                Code += 0xe000;
   \   00000010   800D40E2           SUB      R0,R0,#+8192
   \   00000014   020000EA           B        ??GUI_UC2DB_1
     47            } else {
     48          /* If Low byte 0: Move to (unused) 0xE100-0xE1ff area */
     49              if ((Code&0xff) == 0) {
   \                     ??GUI_UC2DB_0:
   \   00000018   002CB0E1           LSLS     R2,R0,#+24
     50                Code = (Code>>8) +0xe100;
   \   0000001C   2004A001           LSREQ    R0,R0,#+8
   \   00000020   7C0D4002           SUBEQ    R0,R0,#+7936
     51              }
     52            }
     53          /* Convert into double byte, putting msb first*/
     54            *pOut++ = Code >> 8;     /* Save msb first */
   \                     ??GUI_UC2DB_1:
   \   00000024   0008A0E1           LSL      R0,R0,#+16
   \   00000028   2008A0E1           LSR      R0,R0,#+16
   \   0000002C   2024A0E1           LSR      R2,R0,#+8
   \   00000030   0020C1E5           STRB     R2,[R1, #+0]
     55            *pOut   = Code & 0xff;
   \   00000034   0100E1E5           STRB     R0,[R1, #+1]!
     56          }
   \   00000038   1EFF2FE1           BX       LR               ;; return
     57          
     58          /*********************************************************************
     59          *
     60          *       GUI_DB2UC
     61          *
     62          * Purpose:
     63          *   Convert Unicode double byte into UNICODE.
     64          *   - Byte0: First byte, msb
     65          *   - Byte1: Last  byte, lsb
     66          */

   \                                 In section .text, align 4, keep-with-next
     67          U16 GUI_DB2UC(U8 Byte0, U8 Byte1) {
     68            if (Byte0==0)
   \                     GUI_DB2UC:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   0900000A           BEQ      ??GUI_DB2UC_0
     69              return 0;
     70            if ((Byte0&0xfe) == 0xe0) {
   \   00000008   FE2000E2           AND      R2,R0,#0xFE
   \   0000000C   E00052E3           CMP      R2,#+224
   \   00000010   0500001A           BNE      ??GUI_DB2UC_1
     71              if (Byte0 == 0xe0)        /* ASCII */
   \   00000014   E00050E3           CMP      R0,#+224
   \   00000018   0100001A           BNE      ??GUI_DB2UC_2
     72                return Byte1;
   \   0000001C   0100A0E1           MOV      R0,R1
   \   00000020   1EFF2FE1           BX       LR
     73              return ((U16)Byte1)<<8;   /* low byte was zero */
   \                     ??GUI_DB2UC_2:
   \   00000024   0104A0E1           LSL      R0,R1,#+8
   \   00000028   1EFF2FE1           BX       LR
     74            }
     75            return Byte1 | (((U16)Byte0)<<8);
   \                     ??GUI_DB2UC_1:
   \   0000002C   000481E1           ORR      R0,R1,R0, LSL #+8
   \                     ??GUI_DB2UC_0:
   \   00000030   1EFF2FE1           BX       LR               ;; return
     76          }
     77          
     78          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     GUI_DB2UC      0
     GUI_UC2DB      0


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_UC2DB        60
     GUI_DB2UC        52

 
 112 bytes in section .text
 
 112 bytes of CODE memory

Errors: none
Warnings: none
