###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:19 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\Setup\TQMFile.c                         #
#    Command line =  C:\DUII\TargetHW\Setup\TQMFile.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\TQMFile.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\TQMFile.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\Setup\TQMFile.c
      1          #define TQMFILE_MAIN
      2          
      3          #ifdef PROFILER
      4          #include "profiler.h"
      5          #define THIS_TASK	TQMWRITETASK_NUM
      6          #endif
      7          
      8          #include <stdio.h>
      9          #include <string.h>
     10          #include "WM.h"
     11          #include "commondefs.h"
     12          #include "DUII.h"
     13          #include "tmtypes.h"
     14          #include "DataHandler.h"
     15          #include "TQMFile.h"
     16          #include "CommTask.h"
     17          #include "FlashReadWrite.h"
     18          #include "dataflash.h"
     19          #include "dbgu.h"
     20          #include "datadecode.h"
     21          
     22          extern const char *GetCameraName(void);		// camera text name function from VehicleSettingsScreens.c
     23          
     24          
     25          #define TQM	tqmheader.tqmheaderstruct
     26          
     27          // creates tqm file header
     28          // if start is true, it creates the header with all the information needed by traqview
     29          // if start is false, it writes the ending date and time
     30          //

   \                                 In section .text, align 4, keep-with-next
     31          void CreateTqmFileHeader( char *sessionname, BOOL start) {
   \                     CreateTqmFileHeader:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   908AA0E3           MOV      R8,#+589824
   \   00000008   50D04DE2           SUB      SP,SP,#+80
   \   0000000C   B45D9FE5           LDR      R5,??CreateTqmFileHeader_2  ;; 0x12d53d80
   \   00000010   EA8D88E3           ORR      R8,R8,#0x3A80
   \   00000014   B06D9FE5           LDR      R6,??CreateTqmFileHeader_2+0x4
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   3602000A           BEQ      ??CreateTqmFileHeader_3
     32          	int i;
     33          	char *pChar;
     34          	int heading;
     35          
     36          	if (start) {
     37          		strncpy(TQM.format.fileid, "TQM008", 6);
   \   00000020   0620A0E3           MOV      R2,#+6
   \   00000024   ............       ADRL     R1,`?<Constant "TQM008">`
   \              ....        
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       strncpy
     38          		TQM.format.offset = TQM_FILE_DATA_OFFSET;
   \   00000034   2A00A0E3           MOV      R0,#+42
   \   00000038   061086E2           ADD      R1,R6,#+6
   \   0000003C   480D80E3           ORR      R0,R0,#0x1200
   \   00000040   ........           BL       __aeabi_uwrite4
     39          		if (start) {
     40          			TQM.info.StartDateTime = T_DATE_TO_GPS_DATE + (GetValue(GPS_WEEKS).uVal * SECONDS_IN_A_WEEK) + (GetValue(GPS_TIME).uVal / 1000);
   \   00000044   1110A0E3           MOV      R1,#+17
   \   00000048   08008DE2           ADD      R0,SP,#+8
   \   0000004C   ........           BL       GetValue
   \   00000050   1210A0E3           MOV      R1,#+18
   \   00000054   0D00A0E1           MOV      R0,SP
   \   00000058   ........           BL       GetValue
   \   0000005C   00209DE5           LDR      R2,[SP, #+0]
   \   00000060   6CCD9FE5           LDR      R12,??CreateTqmFileHeader_2+0xC  ;; 0x83126e98
   \   00000064   08009DE5           LDR      R0,[SP, #+8]
   \   00000068   92CC83E0           UMULL    R12,R3,R2,R12
   \   0000006C   980000E0           MUL      R0,R8,R0
   \   00000070   0A1086E2           ADD      R1,R6,#+10
   \   00000074   A30480E0           ADD      R0,R0,R3, LSR #+9
   \   00000078   000085E0           ADD      R0,R5,R0
   \   0000007C   ........           BL       __aeabi_uwrite4
     41          			TQM.info.EndDateTime = TQM.info.StartDateTime;				// will get changed later
   \   00000080   0A0086E2           ADD      R0,R6,#+10
   \   00000084   ........           BL       __aeabi_uread4
   \   00000088   0E1086E2           ADD      R1,R6,#+14
   \   0000008C   ........           BL       __aeabi_uwrite4
     42          		} // if
     43          	
     44          		strncpy(TQM.info.DriverName, sysData.driver, NAMELEN);
   \   00000090   1020A0E3           MOV      R2,#+16
   \   00000094   3C1D9FE5           LDR      R1,??CreateTqmFileHeader_2+0x10
   \   00000098   120086E2           ADD      R0,R6,#+18
   \   0000009C   ........           BL       strncpy
     45          		strncpy(TQM.info.CarName, sysData.vehicle, NAMELEN);
   \   000000A0   1020A0E3           MOV      R2,#+16
   \   000000A4   301D9FE5           LDR      R1,??CreateTqmFileHeader_2+0x14
   \   000000A8   220086E2           ADD      R0,R6,#+34
   \   000000AC   ........           BL       strncpy
     46          		strncpy(TQM.info.TrackStart.TrackName, sysData.track, NAMELEN);
   \   000000B0   1020A0E3           MOV      R2,#+16
   \   000000B4   241D9FE5           LDR      R1,??CreateTqmFileHeader_2+0x18
   \   000000B8   320086E2           ADD      R0,R6,#+50
   \   000000BC   ........           BL       strncpy
     47          		
     48          		TQM.info.CalInfo = scratchpad;				// 128 bytes
   \   000000C0   5A0086E2           ADD      R0,R6,#+90
   \   000000C4   181D9FE5           LDR      R1,??CreateTqmFileHeader_2+0x1C
   \   000000C8   8020A0E3           MOV      R2,#+128
   \   000000CC   ........           BL       __aeabi_memcpy
     49          		
     50          		// swap the bytes and fill in some critical data
     51          		strncpy(TQM.info.CalInfo.calibrate.owner, unsavedSysData.unitInfo.owner, OWNER_LEN);
   \   000000D0   104D9FE5           LDR      R4,??CreateTqmFileHeader_2+0x20
   \   000000D4   1420A0E3           MOV      R2,#+20
   \   000000D8   081084E2           ADD      R1,R4,#+8
   \   000000DC   5A0086E2           ADD      R0,R6,#+90
   \   000000E0   ........           BL       strncpy
     52          		strncpy(TQM.info.CalInfo.calibrate.phone, unsavedSysData.unitInfo.phone, PHONE_LEN);
   \   000000E4   1420A0E3           MOV      R2,#+20
   \   000000E8   1C1084E2           ADD      R1,R4,#+28
   \   000000EC   6E0086E2           ADD      R0,R6,#+110
   \   000000F0   ........           BL       strncpy
     53          		strncpy(TQM.info.CalInfo.calibrate.wifiName, unsavedSysData.unitInfo.wifiName, WIFI_LEN);
   \   000000F4   1420A0E3           MOV      R2,#+20
   \   000000F8   301084E2           ADD      R1,R4,#+48
   \   000000FC   820086E2           ADD      R0,R6,#+130
   \   00000100   ........           BL       strncpy
     54          		strncpy(TQM.info.CalInfo.calibrate.wifiPass, unsavedSysData.unitInfo.wifiPass, WIFI_LEN);
   \   00000104   1420A0E3           MOV      R2,#+20
   \   00000108   441084E2           ADD      R1,R4,#+68
   \   0000010C   960086E2           ADD      R0,R6,#+150
   \   00000110   ........           BL       strncpy
     55          		TQM.info.CalInfo.calibrate.timecode = sysData.timeZone;
   \   00000114   700F9FE5           LDR      R0,??CreateTqmFileHeader_4
     56          		TQM.info.CalInfo.calibrate.model = 3;
     57          		TQM.info.CalInfo.calibrate.hwrev = unsavedSysData.duHwRev;
     58          		
     59          		TQM.info.CalInfo.calibrate.serno = SWAP32(unsavedSysData.unitInfo.serno);
   \   00000118   FF2CA0E3           MOV      R2,#+65280
   \   0000011C   DA07D0E1           LDRSB    R0,[R0, #+122]
   \   00000120   FF38A0E3           MOV      R3,#+16711680
   \   00000124   AD1086E2           ADD      R1,R6,#+173
   \   00000128   AA00C6E5           STRB     R0,[R6, #+170]
   \   0000012C   0300A0E3           MOV      R0,#+3
   \   00000130   AB00C6E5           STRB     R0,[R6, #+171]
   \   00000134   0400D4E5           LDRB     R0,[R4, #+4]
   \   00000138   AC00C6E5           STRB     R0,[R6, #+172]
   \   0000013C   600094E5           LDR      R0,[R4, #+96]
   \   00000140   202402E0           AND      R2,R2,R0, LSR #+8
   \   00000144   202C82E1           ORR      R2,R2,R0, LSR #+24
   \   00000148   003403E0           AND      R3,R3,R0, LSL #+8
   \   0000014C   022083E1           ORR      R2,R3,R2
   \   00000150   000C82E1           ORR      R0,R2,R0, LSL #+24
   \   00000154   ........           BL       __aeabi_uwrite4
     60          		TQM.info.CalInfo.calibrate.week = (u08) unsavedSysData.unitInfo.week;
   \   00000158   640094E5           LDR      R0,[R4, #+100]
   \   0000015C   B100C6E5           STRB     R0,[R6, #+177]
     61          		TQM.info.CalInfo.calibrate.year = (u08) unsavedSysData.unitInfo.year;
   \   00000160   680094E5           LDR      R0,[R4, #+104]
   \   00000164   B200C6E5           STRB     R0,[R6, #+178]
     62          		
     63          		// flip the bytes in the accelerometer calibration info
     64          		TQM.info.CalInfo.calibrate.xzero = SWAP16(TQM.info.CalInfo.calibrate.xzero);
   \   00000168   B400D6E5           LDRB     R0,[R6, #+180]
   \   0000016C   B310D6E5           LDRB     R1,[R6, #+179]
   \   00000170   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000174   B410D6E5           LDRB     R1,[R6, #+180]
   \   00000178   B320D6E5           LDRB     R2,[R6, #+179]
   \   0000017C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000180   0114A0E1           LSL      R1,R1,#+8
   \   00000184   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000188   B300C6E5           STRB     R0,[R6, #+179]
   \   0000018C   2004A0E1           LSR      R0,R0,#+8
   \   00000190   B400C6E5           STRB     R0,[R6, #+180]
     65          		TQM.info.CalInfo.calibrate.yzero = SWAP16(TQM.info.CalInfo.calibrate.yzero);
   \   00000194   B600D6E5           LDRB     R0,[R6, #+182]
   \   00000198   B510D6E5           LDRB     R1,[R6, #+181]
   \   0000019C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001A0   B610D6E5           LDRB     R1,[R6, #+182]
   \   000001A4   B520D6E5           LDRB     R2,[R6, #+181]
   \   000001A8   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000001AC   0114A0E1           LSL      R1,R1,#+8
   \   000001B0   200481E1           ORR      R0,R1,R0, LSR #+8
   \   000001B4   B500C6E5           STRB     R0,[R6, #+181]
   \   000001B8   2004A0E1           LSR      R0,R0,#+8
   \   000001BC   B600C6E5           STRB     R0,[R6, #+182]
     66          		TQM.info.CalInfo.calibrate.xminusg = SWAP16(TQM.info.CalInfo.calibrate.xminusg);
   \   000001C0   B800D6E5           LDRB     R0,[R6, #+184]
   \   000001C4   B710D6E5           LDRB     R1,[R6, #+183]
   \   000001C8   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001CC   B810D6E5           LDRB     R1,[R6, #+184]
   \   000001D0   B720D6E5           LDRB     R2,[R6, #+183]
   \   000001D4   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000001D8   0114A0E1           LSL      R1,R1,#+8
   \   000001DC   200481E1           ORR      R0,R1,R0, LSR #+8
   \   000001E0   B700C6E5           STRB     R0,[R6, #+183]
   \   000001E4   2004A0E1           LSR      R0,R0,#+8
   \   000001E8   B800C6E5           STRB     R0,[R6, #+184]
     67          		TQM.info.CalInfo.calibrate.xplusg = SWAP16(TQM.info.CalInfo.calibrate.xplusg);
   \   000001EC   BA00D6E5           LDRB     R0,[R6, #+186]
   \   000001F0   B910D6E5           LDRB     R1,[R6, #+185]
   \   000001F4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000001F8   BA10D6E5           LDRB     R1,[R6, #+186]
   \   000001FC   B920D6E5           LDRB     R2,[R6, #+185]
   \   00000200   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000204   0114A0E1           LSL      R1,R1,#+8
   \   00000208   200481E1           ORR      R0,R1,R0, LSR #+8
   \   0000020C   B900C6E5           STRB     R0,[R6, #+185]
   \   00000210   2004A0E1           LSR      R0,R0,#+8
   \   00000214   BA00C6E5           STRB     R0,[R6, #+186]
     68          		TQM.info.CalInfo.calibrate.yminusg = SWAP16(TQM.info.CalInfo.calibrate.yminusg);
   \   00000218   BC00D6E5           LDRB     R0,[R6, #+188]
   \   0000021C   BB10D6E5           LDRB     R1,[R6, #+187]
   \   00000220   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000224   BC10D6E5           LDRB     R1,[R6, #+188]
   \   00000228   BB20D6E5           LDRB     R2,[R6, #+187]
   \   0000022C   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000230   0114A0E1           LSL      R1,R1,#+8
   \   00000234   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000238   BB00C6E5           STRB     R0,[R6, #+187]
   \   0000023C   2004A0E1           LSR      R0,R0,#+8
   \   00000240   BC00C6E5           STRB     R0,[R6, #+188]
     69          		TQM.info.CalInfo.calibrate.yplusg = SWAP16(TQM.info.CalInfo.calibrate.yplusg);
   \   00000244   BE00D6E5           LDRB     R0,[R6, #+190]
   \   00000248   BD10D6E5           LDRB     R1,[R6, #+189]
   \   0000024C   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000250   BE10D6E5           LDRB     R1,[R6, #+190]
   \   00000254   BD20D6E5           LDRB     R2,[R6, #+189]
   \   00000258   011482E1           ORR      R1,R2,R1, LSL #+8
   \   0000025C   0114A0E1           LSL      R1,R1,#+8
   \   00000260   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000264   BD00C6E5           STRB     R0,[R6, #+189]
   \   00000268   2004A0E1           LSR      R0,R0,#+8
   \   0000026C   BE00C6E5           STRB     R0,[R6, #+190]
     70          		TQM.info.CalInfo.calibrate.calx = SWAP16(TQM.info.CalInfo.calibrate.calx);
   \   00000270   C000D6E5           LDRB     R0,[R6, #+192]
   \   00000274   BF10D6E5           LDRB     R1,[R6, #+191]
   \   00000278   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000027C   C010D6E5           LDRB     R1,[R6, #+192]
   \   00000280   BF20D6E5           LDRB     R2,[R6, #+191]
   \   00000284   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000288   0114A0E1           LSL      R1,R1,#+8
   \   0000028C   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000290   BF00C6E5           STRB     R0,[R6, #+191]
   \   00000294   2004A0E1           LSR      R0,R0,#+8
   \   00000298   C000C6E5           STRB     R0,[R6, #+192]
     71          		TQM.info.CalInfo.calibrate.caly = SWAP16(TQM.info.CalInfo.calibrate.caly);
   \   0000029C   C200D6E5           LDRB     R0,[R6, #+194]
   \   000002A0   C110D6E5           LDRB     R1,[R6, #+193]
   \   000002A4   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000002A8   C210D6E5           LDRB     R1,[R6, #+194]
   \   000002AC   C120D6E5           LDRB     R2,[R6, #+193]
   \   000002B0   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000002B4   0114A0E1           LSL      R1,R1,#+8
   \   000002B8   200481E1           ORR      R0,R1,R0, LSR #+8
   \   000002BC   C100C6E5           STRB     R0,[R6, #+193]
   \   000002C0   2004A0E1           LSR      R0,R0,#+8
   \   000002C4   C200C6E5           STRB     R0,[R6, #+194]
     72          		TQM.info.CalInfo.calibrate.zzero = SWAP16(TQM.info.CalInfo.calibrate.zzero);
   \   000002C8   CF00D6E5           LDRB     R0,[R6, #+207]
   \   000002CC   CE10D6E5           LDRB     R1,[R6, #+206]
   \   000002D0   000481E1           ORR      R0,R1,R0, LSL #+8
   \   000002D4   CF10D6E5           LDRB     R1,[R6, #+207]
   \   000002D8   CE20D6E5           LDRB     R2,[R6, #+206]
   \   000002DC   011482E1           ORR      R1,R2,R1, LSL #+8
   \   000002E0   0114A0E1           LSL      R1,R1,#+8
   \   000002E4   200481E1           ORR      R0,R1,R0, LSR #+8
   \   000002E8   CE00C6E5           STRB     R0,[R6, #+206]
   \   000002EC   2004A0E1           LSR      R0,R0,#+8
   \   000002F0   CF00C6E5           STRB     R0,[R6, #+207]
     73          		TQM.info.CalInfo.calibrate.zminusg = SWAP16(TQM.info.CalInfo.calibrate.zminusg);
   \   000002F4   D100D6E5           LDRB     R0,[R6, #+209]
   \   000002F8   D010D6E5           LDRB     R1,[R6, #+208]
   \   000002FC   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000300   D110D6E5           LDRB     R1,[R6, #+209]
   \   00000304   D020D6E5           LDRB     R2,[R6, #+208]
   \   00000308   011482E1           ORR      R1,R2,R1, LSL #+8
   \   0000030C   0114A0E1           LSL      R1,R1,#+8
   \   00000310   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000314   D000C6E5           STRB     R0,[R6, #+208]
   \   00000318   2004A0E1           LSR      R0,R0,#+8
   \   0000031C   D100C6E5           STRB     R0,[R6, #+209]
     74          		TQM.info.CalInfo.calibrate.zplusg = SWAP16(TQM.info.CalInfo.calibrate.zplusg);
   \   00000320   D300D6E5           LDRB     R0,[R6, #+211]
   \   00000324   D210D6E5           LDRB     R1,[R6, #+210]
   \   00000328   000481E1           ORR      R0,R1,R0, LSL #+8
   \   0000032C   D310D6E5           LDRB     R1,[R6, #+211]
   \   00000330   D220D6E5           LDRB     R2,[R6, #+210]
   \   00000334   011482E1           ORR      R1,R2,R1, LSL #+8
   \   00000338   0114A0E1           LSL      R1,R1,#+8
   \   0000033C   200481E1           ORR      R0,R1,R0, LSR #+8
   \   00000340   D200C6E5           STRB     R0,[R6, #+210]
   \   00000344   2004A0E1           LSR      R0,R0,#+8
   \   00000348   D300C6E5           STRB     R0,[R6, #+211]
     75          	
     76          		TQM.info.CalInfo.calibrate.swrev = unsavedSysData.duSwRev;
   \   0000034C   B000D4E1           LDRH     R0,[R4, #+0]
   \   00000350   C300C6E5           STRB     R0,[R6, #+195]
   \   00000354   2004A0E1           LSR      R0,R0,#+8
   \   00000358   C400C6E5           STRB     R0,[R6, #+196]
     77          		TQM.info.CalInfo.calibrate.datarev = unsavedSysData.duDataRev;
   \   0000035C   B200D4E1           LDRH     R0,[R4, #+2]
   \   00000360   C500C6E5           STRB     R0,[R6, #+197]
   \   00000364   2004A0E1           LSR      R0,R0,#+8
   \   00000368   C600C6E5           STRB     R0,[R6, #+198]
     78          	
     79          		TQM.info.ModeSamp = getModeSamp();
   \   0000036C   ........           BL       getModeSamp
     80          	
     81          		if (16 == vehicleData.engineCylinders)
   \   00000370   ........           LDR      R7,??DataTable33_2
   \   00000374   DA00C6E5           STRB     R0,[R6, #+218]
   \   00000378   0D00D7E5           LDRB     R0,[R7, #+13]
     82          			i = 15;		// can't use 16 since there are only 4 bits
     83          		else
     84          			i = vehicleData.engineCylinders;
     85          
     86          		TQM.info.CarSetup.cylandweight = (vehicleData.weight / 2) << 4 | i;
   \   0000037C   681097E5           LDR      R1,[R7, #+104]
   \   00000380   100050E3           CMP      R0,#+16
   \   00000384   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   00000388   0F00A003           MOVEQ    R0,#+15
   \   0000038C   C110A0E1           ASR      R1,R1,#+1
   \   00000390   010280E1           ORR      R0,R0,R1, LSL #+4
   \   00000394   DB00C6E5           STRB     R0,[R6, #+219]
   \   00000398   2004A0E1           LSR      R0,R0,#+8
   \   0000039C   DC00C6E5           STRB     R0,[R6, #+220]
     87          		TQM.info.CarSetup.revwarning = vehicleData.tach.upperYellowStart;
   \   000003A0   200097E5           LDR      R0,[R7, #+32]
   \   000003A4   DD00C6E5           STRB     R0,[R6, #+221]
   \   000003A8   2004A0E1           LSR      R0,R0,#+8
   \   000003AC   DE00C6E5           STRB     R0,[R6, #+222]
     88          		TQM.info.CarSetup.revlimit =  vehicleData.tach.upperRedStart;
   \   000003B0   240097E5           LDR      R0,[R7, #+36]
   \   000003B4   DF00C6E5           STRB     R0,[R6, #+223]
   \   000003B8   2004A0E1           LSR      R0,R0,#+8
   \   000003BC   E000C6E5           STRB     R0,[R6, #+224]
     89          		
     90          		TQM.info.Gears.diffratio = (u16) (vehicleData.diffRatio * 100.0);
   \   000003C0   500097E5           LDR      R0,[R7, #+80]
   \   000003C4   ........           BL       __aeabi_f2d
   \   000003C8   0130A0E1           MOV      R3,R1
   \   000003CC   0020A0E1           MOV      R2,R0
   \   000003D0   4014A0E3           MOV      R1,#+1073741824
   \   000003D4   0000A0E3           MOV      R0,#+0
   \   000003D8   591881E3           ORR      R1,R1,#0x590000
   \   000003DC   ........           BL       __aeabi_dmul
   \   000003E0   ........           BL       __aeabi_d2iz
   \   000003E4   E100C6E5           STRB     R0,[R6, #+225]
   \   000003E8   2004A0E1           LSR      R0,R0,#+8
   \   000003EC   E200C6E5           STRB     R0,[R6, #+226]
     91          		TQM.info.Gears.wheelcircumference = (u16) (vehicleData.tireCircumference * 100.0);
   \   000003F0   540097E5           LDR      R0,[R7, #+84]
   \   000003F4   ........           BL       __aeabi_f2d
   \   000003F8   0130A0E1           MOV      R3,R1
   \   000003FC   0020A0E1           MOV      R2,R0
   \   00000400   4014A0E3           MOV      R1,#+1073741824
   \   00000404   0000A0E3           MOV      R0,#+0
   \   00000408   591881E3           ORR      R1,R1,#0x590000
   \   0000040C   ........           BL       __aeabi_dmul
   \   00000410   ........           BL       __aeabi_d2iz
   \   00000414   E300C6E5           STRB     R0,[R6, #+227]
   \   00000418   2004A0E1           LSR      R0,R0,#+8
   \   0000041C   E400C6E5           STRB     R0,[R6, #+228]
     92          		for (i=0; i < NUMGEARS; i++) {
   \   00000420   0640A0E1           MOV      R4,R6
   \   00000424   0750A0E1           MOV      R5,R7
   \   00000428   0880A0E3           MOV      R8,#+8
     93          			TQM.info.Gears.inchesperenginerev[i] = (u16) (TQM.info.Gears.wheelcircumference / vehicleData.diffRatio / vehicleData.gearRatios[i]);
   \                     ??CreateTqmFileHeader_5:
   \   0000042C   E400D6E5           LDRB     R0,[R6, #+228]
   \   00000430   E310D6E5           LDRB     R1,[R6, #+227]
   \   00000434   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00000438   ........           BL       __aeabi_ui2f
   \   0000043C   501097E5           LDR      R1,[R7, #+80]
   \   00000440   ........           BL       __aeabi_fdiv
   \   00000444   301095E5           LDR      R1,[R5, #+48]
   \   00000448   ........           BL       __aeabi_fdiv
   \   0000044C   ........           BL       __aeabi_f2iz
   \   00000450   E500C4E5           STRB     R0,[R4, #+229]
   \   00000454   2004A0E1           LSR      R0,R0,#+8
   \   00000458   E600C4E5           STRB     R0,[R4, #+230]
     94          		} // for
   \   0000045C   045085E2           ADD      R5,R5,#+4
   \   00000460   024084E2           ADD      R4,R4,#+2
   \   00000464   018058E2           SUBS     R8,R8,#+1
   \   00000468   EFFFFF1A           BNE      ??CreateTqmFileHeader_5
     95          		TQM.info.IOData = getIoData();
   \   0000046C   ........           BL       getIoData
     96          	
     97          		for (i=0; i < NUMANALOGS; i++) {
   \   00000470   0480A0E3           MOV      R8,#+4
   \   00000474   1B90A0E3           MOV      R9,#+27
   \   00000478   40A4A0E3           MOV      R10,#+1073741824
   \   0000047C   F500C6E5           STRB     R0,[R6, #+245]
   \   00000480   0640A0E1           MOV      R4,R6
   \   00000484   0750A0E1           MOV      R5,R7
   \   00000488   409F89E3           ORR      R9,R9,#0x100
   \   0000048C   DEA78AE3           ORR      R10,R10,#0x3780000
   \   00000490   FEB088E2           ADD      R11,R8,#+254
     98          			strncpy((char *) TQM.info.Analogs[i].pointname, vehicleData.analogInput[i].Name, IONAMELEN);
   \                     ??CreateTqmFileHeader_6:
   \   00000494   0C20A0E3           MOV      R2,#+12
   \   00000498   781085E2           ADD      R1,R5,#+120
   \   0000049C   F60084E2           ADD      R0,R4,#+246
   \   000004A0   ........           BL       strncpy
     99          			strncpy((char *) TQM.info.Analogs[i].unitname, vehicleData.analogInput[i].Units, IONAMELEN);
   \   000004A4   0C20A0E3           MOV      R2,#+12
   \   000004A8   891085E2           ADD      R1,R5,#+137
   \   000004AC   04008BE0           ADD      R0,R11,R4
   \   000004B0   ........           BL       strncpy
    100          		
    101          			TQM.info.Analogs[i].maxscale = vehicleData.analogInput[i].inputRange;
   \   000004B4   A000D5E5           LDRB     R0,[R5, #+160]
   \   000004B8   0E01C4E5           STRB     R0,[R4, #+270]
    102          			TQM.info.Analogs[i].lowval = vehicleData.analogInput[i].lowValuePoint;
   \   000004BC   0C0049E2           SUB      R0,R9,#+12
   \   000004C0   041080E0           ADD      R1,R0,R4
   \   000004C4   AC0095E5           LDR      R0,[R5, #+172]
   \   000004C8   ........           BL       __aeabi_uwrite4
    103          			TQM.info.Analogs[i].highval = vehicleData.analogInput[i].highValuePoint;
   \   000004CC   0800C9E3           BIC      R0,R9,#0x8
   \   000004D0   041080E0           ADD      R1,R0,R4
   \   000004D4   B00095E5           LDR      R0,[R5, #+176]
   \   000004D8   ........           BL       __aeabi_uwrite4
    104          			TQM.info.Analogs[i].lowreading = (u08) ((float) VOLTFULLSCALE * vehicleData.analogInput[i].lowVoltagePoint / vehicleData.analogInput[i].inputRange);
   \   000004DC   A40095E5           LDR      R0,[R5, #+164]
   \   000004E0   0A10A0E1           MOV      R1,R10
   \   000004E4   ........           BL       __aeabi_fmul
   \   000004E8   00008DE5           STR      R0,[SP, #+0]
   \   000004EC   A000D5E5           LDRB     R0,[R5, #+160]
   \   000004F0   ........           BL       __aeabi_ui2f
   \   000004F4   0010A0E1           MOV      R1,R0
   \   000004F8   00009DE5           LDR      R0,[SP, #+0]
   \   000004FC   ........           BL       __aeabi_fdiv
   \   00000500   ........           BL       __aeabi_f2iz
   \   00000504   1C01C4E5           STRB     R0,[R4, #+284]
    105          			TQM.info.Analogs[i].highreading = (u08) ((float) VOLTFULLSCALE * vehicleData.analogInput[i].highVoltagePoint / vehicleData.analogInput[i].inputRange);
   \   00000508   A80095E5           LDR      R0,[R5, #+168]
   \   0000050C   0A10A0E1           MOV      R1,R10
   \   00000510   ........           BL       __aeabi_fmul
   \   00000514   00008DE5           STR      R0,[SP, #+0]
   \   00000518   A000D5E5           LDRB     R0,[R5, #+160]
   \   0000051C   ........           BL       __aeabi_ui2f
   \   00000520   0010A0E1           MOV      R1,R0
   \   00000524   00009DE5           LDR      R0,[SP, #+0]
   \   00000528   ........           BL       __aeabi_fdiv
   \   0000052C   ........           BL       __aeabi_f2iz
   \   00000530   1D01C4E5           STRB     R0,[R4, #+285]
    106          
    107          			// Traqview only supports one alarm zone so decide which way to go with alarm, upper range has priority
    108          			switch (vehicleData.analogInput[i].upperAlarmTriggerComparison) {
   \   00000534   9500D5E5           LDRB     R0,[R5, #+149]
   \   00000538   030050E3           CMP      R0,#+3
   \   0000053C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CreateTqmFileHeader_0:
   \   00000540   1900008A           BHI      ??CreateTqmFileHeader_7
   \   00000544   040000EA           B        ??CreateTqmFileHeader_8
   \   00000548   010000EA           B        ??CreateTqmFileHeader_9
   \   0000054C   020000EA           B        ??CreateTqmFileHeader_8
   \   00000550   010000EA           B        ??CreateTqmFileHeader_8
    109          				case ABOVE:
    110          					TQM.info.Analogs[i].alarmdirection = 1;
   \                     ??CreateTqmFileHeader_9:
   \   00000554   0100A0E3           MOV      R0,#+1
   \   00000558   0E0000EA           B        ??CreateTqmFileHeader_10
    111          					TQM.info.Analogs[i].alarmval = vehicleData.analogInput[i].upperAlarmTriggerLevel;
    112          					break;
    113          				case BELOW:
    114          				case OFF:
    115          				case EQUAL_TO:
    116          					// above value not valid so use lower value if valid
    117          					switch (vehicleData.analogInput[i].lowerAlarmTriggerComparison) {
   \                     ??CreateTqmFileHeader_8:
   \   0000055C   9400D5E5           LDRB     R0,[R5, #+148]
   \   00000560   030050E3           CMP      R0,#+3
   \   00000564   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CreateTqmFileHeader_1:
   \   00000568   0F00008A           BHI      ??CreateTqmFileHeader_7
   \   0000056C   080000EA           B        ??CreateTqmFileHeader_11
   \   00000570   070000EA           B        ??CreateTqmFileHeader_11
   \   00000574   000000EA           B        ??CreateTqmFileHeader_12
   \   00000578   050000EA           B        ??CreateTqmFileHeader_11
    118          						case BELOW:
    119          							TQM.info.Analogs[i].alarmdirection = -1;
   \                     ??CreateTqmFileHeader_12:
   \   0000057C   0000E0E3           MVN      R0,#+0
   \   00000580   0400C9E7           STRB     R0,[R9, +R4]
    120          							TQM.info.Analogs[i].alarmval = vehicleData.analogInput[i].lowerAlarmTriggerLevel;
   \   00000584   040049E2           SUB      R0,R9,#+4
   \   00000588   041080E0           ADD      R1,R0,R4
   \   0000058C   980095E5           LDR      R0,[R5, #+152]
   \   00000590   040000EA           B        ??CreateTqmFileHeader_13
    121          							break;
    122          						case ABOVE:
    123          						case OFF:
    124          						case EQUAL_TO:
    125          							TQM.info.Analogs[i].alarmdirection = 0;
   \                     ??CreateTqmFileHeader_11:
   \   00000594   0000A0E3           MOV      R0,#+0
   \                     ??CreateTqmFileHeader_10:
   \   00000598   0400C9E7           STRB     R0,[R9, +R4]
    126          							TQM.info.Analogs[i].alarmval = vehicleData.analogInput[i].upperAlarmTriggerLevel;
   \   0000059C   040049E2           SUB      R0,R9,#+4
   \   000005A0   041080E0           ADD      R1,R0,R4
   \   000005A4   9C0095E5           LDR      R0,[R5, #+156]
   \                     ??CreateTqmFileHeader_13:
   \   000005A8   ........           BL       __aeabi_uwrite4
    127          							break;
    128          					} // switch		
    129          					break;
    130          			} // switch			
    131          		} // for
   \                     ??CreateTqmFileHeader_7:
   \   000005AC   405085E2           ADD      R5,R5,#+64
   \   000005B0   284084E2           ADD      R4,R4,#+40
   \   000005B4   018058E2           SUBS     R8,R8,#+1
   \   000005B8   B5FFFF1A           BNE      ??CreateTqmFileHeader_6
    132          	
    133          		for (i=0; i < NUMDIGITALS; i++) {		// 7 digitals in tqm file, only 2 in unit, digital 4 and 5
   \   000005BC   939089E2           ADD      R9,R9,#+147
   \   000005C0   0040A0E3           MOV      R4,#+0
   \   000005C4   0650A0E1           MOV      R5,R6
   \   000005C8   0780A0E1           MOV      R8,R7
   \   000005CC   0CA0C9E3           BIC      R10,R9,#0xC
   \   000005D0   18B049E2           SUB      R11,R9,#+24
   \   000005D4   020000EA           B        ??CreateTqmFileHeader_14
    134          			if (i == 4 || i == 5) {
   \                     ??CreateTqmFileHeader_15:
   \   000005D8   040054E3           CMP      R4,#+4
   \   000005DC   05005413           CMPNE    R4,#+5
   \   000005E0   0C00000A           BEQ      ??CreateTqmFileHeader_16
    135          				strncpy((char *) TQM.info.Digitals[i].pointname, vehicleData.digitalInput[i-4].Name, IONAMELEN);
    136          				strncpy((char *) TQM.info.Digitals[i].onname, vehicleData.digitalInput[i-4].HighName, IONAMELEN);
    137          				strncpy((char *) TQM.info.Digitals[i].offname, vehicleData.digitalInput[i-4].LowName, IONAMELEN);
    138          			}
    139          			else {
    140          				strcpy((char *) TQM.info.Digitals[i].pointname, "");
   \                     ??CreateTqmFileHeader_14:
   \   000005E4   B10F8FE2           ADR      R0,??CreateTqmFileHeader_17  ;; ""
   \   000005E8   0020D0E5           LDRB     R2,[R0, #0]
   \   000005EC   05108BE0           ADD      R1,R11,R5
    141          				strcpy((char *) TQM.info.Digitals[i].onname, "");
   \   000005F0   AE0F8FE2           ADR      R0,??CreateTqmFileHeader_17  ;; ""
   \   000005F4   0020C1E5           STRB     R2,[R1, #+0]
   \   000005F8   0020D0E5           LDRB     R2,[R0, #0]
   \   000005FC   05108AE0           ADD      R1,R10,R5
    142          				strcpy((char *) TQM.info.Digitals[i].offname, "");
   \   00000600   AA0F8FE2           ADR      R0,??CreateTqmFileHeader_17  ;; ""
   \   00000604   0020C1E5           STRB     R2,[R1, #+0]
   \   00000608   0020D0E5           LDRB     R2,[R0, #0]
   \   0000060C   051089E0           ADD      R1,R9,R5
   \   00000610   0020C1E5           STRB     R2,[R1, #+0]
   \   00000614   0B0000EA           B        ??CreateTqmFileHeader_18
    143          			} // else
   \                     ??CreateTqmFileHeader_16:
   \   00000618   0C20A0E3           MOV      R2,#+12
   \   0000061C   BC1088E2           ADD      R1,R8,#+188
   \   00000620   05008BE0           ADD      R0,R11,R5
   \   00000624   ........           BL       strncpy
   \   00000628   0C20A0E3           MOV      R2,#+12
   \   0000062C   CD1088E2           ADD      R1,R8,#+205
   \   00000630   05008AE0           ADD      R0,R10,R5
   \   00000634   ........           BL       strncpy
   \   00000638   0C20A0E3           MOV      R2,#+12
   \   0000063C   DA1088E2           ADD      R1,R8,#+218
   \   00000640   050089E0           ADD      R0,R9,R5
   \   00000644   ........           BL       strncpy
    144          		} // for
   \                     ??CreateTqmFileHeader_18:
   \   00000648   014084E2           ADD      R4,R4,#+1
   \   0000064C   2F8088E2           ADD      R8,R8,#+47
   \   00000650   245085E2           ADD      R5,R5,#+36
   \   00000654   070054E3           CMP      R4,#+7
   \   00000658   DEFFFFBA           BLT      ??CreateTqmFileHeader_15
    145          	
    146          		for (i=0; i < NUMFREQS; i++) {
   \   0000065C   0210A0E3           MOV      R1,#+2
   \   00000660   0600A0E1           MOV      R0,R6
   \   00000664   A52FA0E3           MOV      R2,#+660
   \   00000668   A43F81E3           ORR      R3,R1,#0x290
    147          			TQM.info.Frequency[i].rpmwarning = vehicleData.tach.upperYellowStart;
   \                     ??CreateTqmFileHeader_19:
   \   0000066C   20E097E5           LDR      LR,[R7, #+32]
   \   00000670   00C083E0           ADD      R12,R3,R0
   \   00000674   00E0CCE5           STRB     LR,[R12, #+0]
   \   00000678   2EE4A0E1           LSR      LR,LR,#+8
   \   0000067C   01E0CCE5           STRB     LR,[R12, #+1]
    148          			TQM.info.Frequency[i].rpmlimit = vehicleData.tach.upperRedStart;
   \   00000680   24E097E5           LDR      LR,[R7, #+36]
   \   00000684   00C082E0           ADD      R12,R2,R0
   \   00000688   00E0CCE5           STRB     LR,[R12, #+0]
   \   0000068C   2EE4A0E1           LSR      LR,LR,#+8
   \   00000690   01E0CCE5           STRB     LR,[R12, #+1]
    149          			TQM.info.Frequency[i].divider = vehicleData.engineCylinders / 2;
   \   00000694   0DC0D7E5           LDRB     R12,[R7, #+13]
    150          		} // for
   \   00000698   011051E2           SUBS     R1,R1,#+1
   \   0000069C   ACC0A0E1           LSR      R12,R12,#+1
   \   000006A0   96C2C0E5           STRB     R12,[R0, #+662]
   \   000006A4   050080E2           ADD      R0,R0,#+5
   \   000006A8   EFFFFF1A           BNE      ??CreateTqmFileHeader_19
    151          		
    152          		strncpy (TQM.SessionDesc, sessionname + strlen(MY_SESSIONS_PATH) + 1, 10);	// copy date string, skipping over foldername
   \   000006AC   ........           LDR      R0,??DataTable34
   \   000006B0   ........           BL       strlen
   \   000006B4   50109DE5           LDR      R1,[SP, #+80]
   \   000006B8   0A20A0E3           MOV      R2,#+10
   \   000006BC   010080E0           ADD      R0,R0,R1
   \   000006C0   011080E2           ADD      R1,R0,#+1
   \   000006C4   EF0089E2           ADD      R0,R9,#+239
   \   000006C8   060080E0           ADD      R0,R0,R6
   \   000006CC   ........           BL       strncpy
    153          		pChar = TQM.SessionDesc + 10;
    154          		*pChar++ = '\0';
   \   000006D0   0040A0E3           MOV      R4,#+0
   \   000006D4   A742C6E5           STRB     R4,[R6, #+679]
    155          
    156          		formattime (SHORT12, pChar);									// write out time of day
   \   000006D8   AA1F86E2           ADD      R1,R6,#+680
   \   000006DC   0300A0E3           MOV      R0,#+3
   \   000006E0   ........           BL       formattime
    157          		pChar += strlen(pChar) + 1;
   \   000006E4   FB5089E2           ADD      R5,R9,#+251
   \   000006E8   AA0F86E2           ADD      R0,R6,#+680
   \   000006EC   ........           BL       strlen
   \   000006F0   060080E0           ADD      R0,R0,R6
   \   000006F4   005085E0           ADD      R5,R5,R0
    158          		
    159          		strncpy(pChar, sysData.track, NAMELEN);							// copy track name
   \   000006F8   1020A0E3           MOV      R2,#+16
   \   000006FC   DC169FE5           LDR      R1,??CreateTqmFileHeader_2+0x18
   \   00000700   0500A0E1           MOV      R0,R5
   \   00000704   ........           BL       strncpy
    160          		pChar += strlen(pChar) + 1;
   \   00000708   0500A0E1           MOV      R0,R5
   \   0000070C   ........           BL       strlen
   \   00000710   050080E0           ADD      R0,R0,R5
   \   00000714   015080E2           ADD      R5,R0,#+1
    161          
    162          		strncpy(pChar, sysData.driver, NAMELEN);
   \   00000718   1020A0E3           MOV      R2,#+16
   \   0000071C   B4169FE5           LDR      R1,??CreateTqmFileHeader_2+0x10
   \   00000720   0500A0E1           MOV      R0,R5
   \   00000724   ........           BL       strncpy
    163          		pChar += strlen(pChar) + 1;
   \   00000728   0500A0E1           MOV      R0,R5
   \   0000072C   ........           BL       strlen
   \   00000730   050080E0           ADD      R0,R0,R5
   \   00000734   015080E2           ADD      R5,R0,#+1
    164          				
    165          		strncpy(pChar, sysData.vehicle, NAMELEN);
   \   00000738   1020A0E3           MOV      R2,#+16
   \   0000073C   98169FE5           LDR      R1,??CreateTqmFileHeader_2+0x14
   \   00000740   0500A0E1           MOV      R0,R5
   \   00000744   ........           BL       strncpy
    166          		pChar += strlen(pChar) + 1;
   \   00000748   0500A0E1           MOV      R0,R5
   \   0000074C   ........           BL       strlen
    167          
    168          		pChar = TQM.SessionDesc + 10;
    169          		*pChar++ = '\0';
    170          
    171          		// blank fill lap info
    172          		TQM.lapInfo.numberOfLaps = TQM.lapInfo.bestLapNumber = TQM.lapInfo.bestLapTime = 0;
   \   00000750   4C0E89E2           ADD      R0,R9,#+1216
   \   00000754   061080E0           ADD      R1,R0,R6
   \   00000758   A742C6E5           STRB     R4,[R6, #+679]
   \   0000075C   0000A0E3           MOV      R0,#+0
   \   00000760   ........           BL       __aeabi_uwrite4
   \   00000764   6A00A0E3           MOV      R0,#+106
   \   00000768   600E80E3           ORR      R0,R0,#0x600
   \   0000076C   061080E0           ADD      R1,R0,R6
   \   00000770   0000A0E3           MOV      R0,#+0
   \   00000774   ........           BL       __aeabi_uwrite4
   \   00000778   4D0E8BE2           ADD      R0,R11,#+1232
   \   0000077C   061080E0           ADD      R1,R0,R6
   \   00000780   0000A0E3           MOV      R0,#+0
   \   00000784   ........           BL       __aeabi_uwrite4
    173          
    174          		// put in lap time ascii header
    175          		strcpy (TQM.UserFieldDescLaptimes, "LAPTIMES");
   \   00000788   470E89E2           ADD      R0,R9,#+1136
   \   0000078C   0920A0E3           MOV      R2,#+9
   \   00000790   ............       ADRL     R1,`?<Constant "LAPTIMES">`
   \              ....        
   \   00000798   060080E0           ADD      R0,R0,R6
   \   0000079C   ........           BL       __aeabi_memcpy
    176          		
    177          		// write out the current configuration
    178          		pChar = TQM.UserFieldDescConfig;
   \   000007A0   B80F89E2           ADD      R0,R9,#+736
   \   000007A4   064080E0           ADD      R4,R0,R6
    179          
    180          		// analog configuration
    181          		for (i=0; i<NUMBER_OF_ANALOGS; i++) {
   \   000007A8   0050A0E3           MOV      R5,#+0
   \   000007AC   07A0A0E1           MOV      R10,R7
   \   000007B0   ............       ADRL     R11,`?<Constant "A%d: %s: %s\\n">`
   \              ....        
   \   000007B8   ............       ADRL     R8,`?<Constant "disabled">`
   \              ....        
   \   000007C0   ............       ADRL     R9,`?<Constant "enabled">`
   \              ....        
    182          			pChar += sprintf(pChar, "A%d: %s: %s\n", i, vehicleData.analogInput[i].Name, vehicleData.analogInput[i].enabled? "enabled" : "disabled");
   \                     ??CreateTqmFileHeader_20:
   \   000007C8   9300DAE5           LDRB     R0,[R10, #+147]
   \   000007CC   78308AE2           ADD      R3,R10,#+120
   \   000007D0   0520A0E1           MOV      R2,R5
   \   000007D4   000050E3           CMP      R0,#+0
   \   000007D8   0900A011           MOVNE    R0,R9
   \   000007DC   0800A001           MOVEQ    R0,R8
   \   000007E0   00008DE5           STR      R0,[SP, #+0]
   \   000007E4   0B10A0E1           MOV      R1,R11
   \   000007E8   0400A0E1           MOV      R0,R4
   \   000007EC   ........           BL       sprintf
    183          		} // for
   \   000007F0   015085E2           ADD      R5,R5,#+1
   \   000007F4   044080E0           ADD      R4,R0,R4
   \   000007F8   40A08AE2           ADD      R10,R10,#+64
   \   000007FC   040055E3           CMP      R5,#+4
   \   00000800   F0FFFFBA           BLT      ??CreateTqmFileHeader_20
    184          
    185          		// digital configuration
    186          		for (i=0; i<NUMBER_OF_DIGITALS; i++) {
   \   00000804   0050A0E3           MOV      R5,#+0
   \   00000808   07A0A0E1           MOV      R10,R7
   \   0000080C   ............       ADRL     R11,`?<Constant "\\nD%d: %s: %s">`
   \              ....        
    187          			pChar += sprintf(pChar, "\nD%d: %s: %s", i+4, vehicleData.digitalInput[i].Name, vehicleData.digitalInput[i].enabled? "enabled" : "disabled");
   \                     ??CreateTqmFileHeader_21:
   \   00000814   A301DAE5           LDRB     R0,[R10, #+419]
   \   00000818   5E3F8AE2           ADD      R3,R10,#+376
   \   0000081C   042085E2           ADD      R2,R5,#+4
   \   00000820   000050E3           CMP      R0,#+0
   \   00000824   0900A011           MOVNE    R0,R9
   \   00000828   0800A001           MOVEQ    R0,R8
   \   0000082C   00008DE5           STR      R0,[SP, #+0]
   \   00000830   0B10A0E1           MOV      R1,R11
   \   00000834   0400A0E1           MOV      R0,R4
   \   00000838   ........           BL       sprintf
    188          		} // for
   \   0000083C   015085E2           ADD      R5,R5,#+1
   \   00000840   044080E0           ADD      R4,R0,R4
   \   00000844   2FA08AE2           ADD      R10,R10,#+47
   \   00000848   020055E3           CMP      R5,#+2
   \   0000084C   F0FFFFBA           BLT      ??CreateTqmFileHeader_21
    189          
    190          		// camera configuration
    191          		pChar += sprintf(pChar, "\n\nSU Cam: %s\nUSB Cam: ", GetCameraName());
   \   00000850   ........           BL       GetCameraName
   \   00000854   0020A0E1           MOV      R2,R0
   \   00000858   ............       ADRL     R1,`?<Constant "\\n\\nSU Cam: %s\\nUSB Cam: ">`
   \              ....        
   \   00000860   0400A0E1           MOV      R0,R4
   \   00000864   ........           BL       sprintf
   \   00000868   044080E0           ADD      R4,R0,R4
    192          		if (0x80 & vehicleData.usbCameraDelay)
   \   0000086C   0C00D7E5           LDRB     R0,[R7, #+12]
   \   00000870   800010E3           TST      R0,#0x80
   \   00000874   0E00000A           BEQ      ??CreateTqmFileHeader_22
    193          			sprintf(pChar, "Enabled, %1.1fs", (float) ((unsigned int) (0x7F & vehicleData.usbCameraDelay)) / 10.0 );
   \   00000878   7F0000E2           AND      R0,R0,#0x7F
   \   0000087C   ........           BL       __aeabi_ui2f
   \   00000880   ........           BL       __aeabi_f2d
   \   00000884   4034A0E3           MOV      R3,#+1073741824
   \   00000888   0020A0E3           MOV      R2,#+0
   \   0000088C   903983E3           ORR      R3,R3,#0x240000
   \   00000890   ........           BL       __aeabi_ddiv
   \   00000894   0020A0E1           MOV      R2,R0
   \   00000898   0130A0E1           MOV      R3,R1
   \   0000089C   ............       ADRL     R1,`?<Constant "Enabled, %1.1fs">`
   \              ....        
   \   000008A4   0400A0E1           MOV      R0,R4
   \   000008A8   ........           BL       sprintf
   \   000008AC   040000EA           B        ??CreateTqmFileHeader_23
   \                     ??CreateTqmFileHeader_17:
   \   000008B0   00000000           DC8      "",0x0,0x0,0x0
    194          		else
    195          			sprintf(pChar, "None");
   \                     ??CreateTqmFileHeader_22:
   \   000008B4   ............       ADRL     R1,`?<Constant "None">`
   \              ....        
   \   000008BC   0400A0E1           MOV      R0,R4
   \   000008C0   ........           BL       sprintf
    196          
    197          		// blank fill lap area
    198          		for (i=0; i < NUMLAPS; i++) {
   \                     ??CreateTqmFileHeader_23:
   \   000008C4   EE50A0E3           MOV      R5,#+238
   \   000008C8   0640A0E1           MOV      R4,R6
   \   000008CC   805F85E3           ORR      R5,R5,#0x200
    199          			TQM.lapInfo.lapTime[i] = 0;				// no laps
   \                     ??CreateTqmFileHeader_24:
   \   000008D0   7200A0E3           MOV      R0,#+114
   \   000008D4   600E80E3           ORR      R0,R0,#0x600
   \   000008D8   041080E0           ADD      R1,R0,R4
   \   000008DC   0000A0E3           MOV      R0,#+0
   \   000008E0   ........           BL       __aeabi_uwrite4
    200          		} // if
   \   000008E4   044084E2           ADD      R4,R4,#+4
   \   000008E8   015055E2           SUBS     R5,R5,#+1
   \   000008EC   F7FFFF1A           BNE      ??CreateTqmFileHeader_24
    201          	
    202          		TQM.info.nUserDefFields = TQM_USER_FIELDS;				// number of descriptive fields in tqm file header
   \   000008F0   0500A0E3           MOV      R0,#+5
   \   000008F4   9C02C6E5           STRB     R0,[R6, #+668]
   \   000008F8   E10100EA           B        ??CreateTqmFileHeader_25
    203          	
    204          		} // of
    205          	else { // closing file
    206          		int charswritten;
    207          		int hrs, min, sec;
    208          		
    209          		charswritten = DataValues[ELAPSED_TIME].uVal / 1000;		// seconds
   \                     ??CreateTqmFileHeader_3:
   \   000008FC   ........           LDR      R7,??DataTable34_3
   \   00000900   CC249FE5           LDR      R2,??CreateTqmFileHeader_2+0xC  ;; 0x83126e98
   \   00000904   100197E5           LDR      R0,[R7, #+272]
   \   00000908   902281E0           UMULL    R2,R1,R0,R2
   \   0000090C   A104A0E1           LSR      R0,R1,#+9
    210          		hrs = charswritten / 3600;
   \   00000910   ........           LDR      R1,??DataTable34_4  ;; 0x91a2b3c5
   \   00000914   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000918   001081E0           ADD      R1,R1,R0
   \   0000091C   C145B0E1           ASRS     R4,R1,#+11
    211          		min = (charswritten / 60) - (hrs * 60);
   \   00000920   ........           LDR      R1,??DataTable34_5  ;; 0x88888889
   \   00000924   01408442           ADDMI    R4,R4,#+1
   \   00000928   9021C1E0           SMULL    R2,R1,R0,R1
   \   0000092C   3C20A0E3           MOV      R2,#+60
   \   00000930   001081E0           ADD      R1,R1,R0
   \   00000934   920403E0           MUL      R3,R2,R4
   \   00000938   C112B0E1           ASRS     R1,R1,#+5
   \   0000093C   01108142           ADDMI    R1,R1,#+1
   \   00000940   03B041E0           SUB      R11,R1,R3
    212          		sec = charswritten % 60;
   \   00000944   920101E0           MUL      R1,R2,R1
   \   00000948   010040E0           SUB      R0,R0,R1
   \   0000094C   3C008DE5           STR      R0,[SP, #+60]
    213          		
    214          		TQM.info.EndDateTime = T_DATE_TO_GPS_DATE + (GetValue(GPS_WEEKS).uVal * SECONDS_IN_A_WEEK) + (GetValue(GPS_TIME).uVal / 1000);
   \   00000950   1110A0E3           MOV      R1,#+17
   \   00000954   08008DE2           ADD      R0,SP,#+8
   \   00000958   ........           BL       GetValue
   \   0000095C   1210A0E3           MOV      R1,#+18
   \   00000960   0D00A0E1           MOV      R0,SP
   \   00000964   ........           BL       GetValue
   \   00000968   00209DE5           LDR      R2,[SP, #+0]
   \   0000096C   60C49FE5           LDR      R12,??CreateTqmFileHeader_2+0xC  ;; 0x83126e98
   \   00000970   08009DE5           LDR      R0,[SP, #+8]
   \   00000974   92CC83E0           UMULL    R12,R3,R2,R12
   \   00000978   980000E0           MUL      R0,R8,R0
   \   0000097C   0E1086E2           ADD      R1,R6,#+14
   \   00000980   A30480E0           ADD      R0,R0,R3, LSR #+9
   \   00000984   000085E0           ADD      R0,R5,R0
   \   00000988   ........           BL       __aeabi_uwrite4
    215          
    216          		// general information about session
    217          		sprintf(TQM.UserFieldDescGeneral, "Duration: %02d:%02d:%02d\nDistance: %0.2f %s\nSatellites %u - %u\nDOP %1.2f - %1.2f\nElevation %d - %d %s",
    218          			hrs, min, sec, (sysData.units == STD ? (GetValue(TOTAL_DISTANCE).fVal / 5280.0) : (GetValue(TOTAL_DISTANCE).fVal / 1000.0)),
    219          			(sysData.units == STD ? "miles" : "km"), DataValues[MIN_SATS].uVal, DataValues[MAX_SATS].uVal, DataValues[MIN_DOP].fVal, DataValues[MAX_DOP].fVal,
    220          			(int) GetValue(MIN_ALTITUDE).fVal, (int) GetValue(MAX_ALTITUDE).fVal, (sysData.units == STD ? "ft" : "m"));
   \   0000098C   F8069FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000990   1C10A0E3           MOV      R1,#+28
   \   00000994   640090E5           LDR      R0,[R0, #+100]
   \   00000998   000050E3           CMP      R0,#+0
   \   0000099C   9C5F8F02           ADREQ    R5,??CreateTqmFileHeader_26  ;; 0x66, 0x74, 0x00, 0x00
   \   000009A0   9C5F8F12           ADRNE    R5,??CreateTqmFileHeader_26+0x4  ;; "m"
   \   000009A4   48008DE2           ADD      R0,SP,#+72
   \   000009A8   ........           BL       GetValue
   \   000009AC   1B10A0E3           MOV      R1,#+27
   \   000009B0   40008DE2           ADD      R0,SP,#+64
   \   000009B4   ........           BL       GetValue
   \   000009B8   CC069FE5           LDR      R0,??CreateTqmFileHeader_4
   \   000009BC   640090E5           LDR      R0,[R0, #+100]
   \   000009C0   000050E3           CMP      R0,#+0
   \   000009C4   0900001A           BNE      ??CreateTqmFileHeader_27
   \   000009C8   ............       ADRL     R10,`?<Constant "miles">`
   \              ....        
   \   000009D0   1E10A0E3           MOV      R1,#+30
   \   000009D4   0D00A0E1           MOV      R0,SP
   \   000009D8   ........           BL       GetValue
   \   000009DC   00009DE5           LDR      R0,[SP, #+0]
   \   000009E0   ........           BL       __aeabi_f2d
   \   000009E4   0020A0E3           MOV      R2,#+0
   \   000009E8   ........           LDR      R3,??DataTable34_6  ;; 0x40b4a000
   \   000009EC   070000EA           B        ??CreateTqmFileHeader_28
   \                     ??CreateTqmFileHeader_27:
   \   000009F0   89AF8FE2           ADR      R10,??CreateTqmFileHeader_26+0x8  ;; 0x6B, 0x6D, 0x00, 0x00
   \   000009F4   1E10A0E3           MOV      R1,#+30
   \   000009F8   0D00A0E1           MOV      R0,SP
   \   000009FC   ........           BL       GetValue
   \   00000A00   00009DE5           LDR      R0,[SP, #+0]
   \   00000A04   ........           BL       __aeabi_f2d
   \   00000A08   0020A0E3           MOV      R2,#+0
   \   00000A0C   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \                     ??CreateTqmFileHeader_28:
   \   00000A10   ........           BL       __aeabi_ddiv
   \   00000A14   0080A0E1           MOV      R8,R0
   \   00000A18   0190A0E1           MOV      R9,R1
   \   00000A1C   38508DE5           STR      R5,[SP, #+56]
   \   00000A20   48009DE5           LDR      R0,[SP, #+72]
   \   00000A24   ........           BL       __aeabi_f2iz
   \   00000A28   34008DE5           STR      R0,[SP, #+52]
   \   00000A2C   40009DE5           LDR      R0,[SP, #+64]
   \   00000A30   ........           BL       __aeabi_f2iz
   \   00000A34   30008DE5           STR      R0,[SP, #+48]
   \   00000A38   C80097E5           LDR      R0,[R7, #+200]
   \   00000A3C   ........           BL       __aeabi_f2d
   \   00000A40   28008DE5           STR      R0,[SP, #+40]
   \   00000A44   2C108DE5           STR      R1,[SP, #+44]
   \   00000A48   C00097E5           LDR      R0,[R7, #+192]
   \   00000A4C   ........           BL       __aeabi_f2d
   \   00000A50   20008DE5           STR      R0,[SP, #+32]
   \   00000A54   B80097E5           LDR      R0,[R7, #+184]
   \   00000A58   24108DE5           STR      R1,[SP, #+36]
   \   00000A5C   18008DE5           STR      R0,[SP, #+24]
   \   00000A60   B00097E5           LDR      R0,[R7, #+176]
   \   00000A64   10A08DE5           STR      R10,[SP, #+16]
   \   00000A68   14008DE5           STR      R0,[SP, #+20]
   \   00000A6C   3C009DE5           LDR      R0,[SP, #+60]
   \   00000A70   08808DE5           STR      R8,[SP, #+8]
   \   00000A74   00008DE5           STR      R0,[SP, #+0]
   \   00000A78   FE00A0E3           MOV      R0,#+254
   \   00000A7C   800F80E3           ORR      R0,R0,#0x200
   \   00000A80   0C908DE5           STR      R9,[SP, #+12]
   \   00000A84   0B30A0E1           MOV      R3,R11
   \   00000A88   0420A0E1           MOV      R2,R4
   \   00000A8C   ............       ADRL     R1,`?<Constant "Duration: %02d:%02d:%...">`
   \              ....        
   \   00000A94   060080E0           ADD      R0,R0,R6
   \   00000A98   ........           BL       sprintf
    221          
    222          		// input information
    223          		pChar = TQM.UserFieldDescInputs;
    224          		pChar += sprintf(pChar, "High Revs: %u\nOver Revs: %u\nMax RPM: %u\n\n",
    225          			DataValues[TOTAL_HIGHREVS].uVal, DataValues[TOTAL_OVERREVS].uVal, DataValues[MAX_RPM].uVal);
   \   00000A9C   200297E5           LDR      R0,[R7, #+544]
   \   00000AA0   C640A0E3           MOV      R4,#+198
   \   00000AA4   C04F84E3           ORR      R4,R4,#0x300
   \   00000AA8   00008DE5           STR      R0,[SP, #+0]
   \   00000AAC   303297E5           LDR      R3,[R7, #+560]
   \   00000AB0   282297E5           LDR      R2,[R7, #+552]
   \   00000AB4   ............       ADRL     R1,`?<Constant "High Revs: %u\\nOver Re...">`
   \              ....        
   \   00000ABC   060084E0           ADD      R0,R4,R6
   \   00000AC0   ........           BL       sprintf
   \   00000AC4   060080E0           ADD      R0,R0,R6
   \   00000AC8   004084E0           ADD      R4,R4,R0
    226          
    227          		// print out the analogs
    228          		for (i=0; i<NUMBER_OF_ANALOGS; i++) {
   \   00000ACC   0050A0E3           MOV      R5,#+0
   \   00000AD0   ........           LDR      R8,??DataTable33_2
   \   00000AD4   ............       ADRL     R9,`?<Constant "A%d: %s\\n%1.2f - %1.2f...">`
   \              ....        
    229          			if (vehicleData.analogInput[i].enabled)
   \                     ??CreateTqmFileHeader_29:
   \   00000ADC   9300D8E5           LDRB     R0,[R8, #+147]
   \   00000AE0   000050E3           CMP      R0,#+0
   \   00000AE4   1600000A           BEQ      ??CreateTqmFileHeader_30
    230          				pChar += sprintf(pChar, "A%d: %s\n%1.2f - %1.2f %s\n\n",
    231          					i, vehicleData.analogInput[i].Name,
    232          					GetValue((GlobalDataIndexType) ((int) MIN_A_0 + i)).fVal,
    233          					GetValue((GlobalDataIndexType) ((int) MAX_A_0 + i)).fVal,
    234          					vehicleData.analogInput[i].Units);
   \   00000AE8   3C1085E2           ADD      R1,R5,#+60
   \   00000AEC   FF1001E2           AND      R1,R1,#0xFF
   \   00000AF0   20008DE2           ADD      R0,SP,#+32
   \   00000AF4   ........           BL       GetValue
   \   00000AF8   401085E2           ADD      R1,R5,#+64
   \   00000AFC   FF1001E2           AND      R1,R1,#0xFF
   \   00000B00   18008DE2           ADD      R0,SP,#+24
   \   00000B04   ........           BL       GetValue
   \   00000B08   890088E2           ADD      R0,R8,#+137
   \   00000B0C   10008DE5           STR      R0,[SP, #+16]
   \   00000B10   20009DE5           LDR      R0,[SP, #+32]
   \   00000B14   ........           BL       __aeabi_f2d
   \   00000B18   08008DE5           STR      R0,[SP, #+8]
   \   00000B1C   0C108DE5           STR      R1,[SP, #+12]
   \   00000B20   18009DE5           LDR      R0,[SP, #+24]
   \   00000B24   ........           BL       __aeabi_f2d
   \   00000B28   03008DE8           STM      SP,{R0,R1}
   \   00000B2C   783088E2           ADD      R3,R8,#+120
   \   00000B30   0520A0E1           MOV      R2,R5
   \   00000B34   0910A0E1           MOV      R1,R9
   \   00000B38   0400A0E1           MOV      R0,R4
   \   00000B3C   ........           BL       sprintf
   \   00000B40   044080E0           ADD      R4,R0,R4
    235          		} // for
   \                     ??CreateTqmFileHeader_30:
   \   00000B44   015085E2           ADD      R5,R5,#+1
   \   00000B48   408088E2           ADD      R8,R8,#+64
   \   00000B4C   040055E3           CMP      R5,#+4
   \   00000B50   E1FFFFBA           BLT      ??CreateTqmFileHeader_29
    236          
    237          		charswritten = 0;
    238          
    239          		// performance information from session
    240          		if (0 == DataValues[SIXTY_FOOT].uVal) { // skip these if drag race mode
   \   00000B54   500197E5           LDR      R0,[R7, #+336]
   \   00000B58   0040A0E3           MOV      R4,#+0
   \   00000B5C   000050E3           CMP      R0,#+0
   \   00000B60   6E00001A           BNE      ??CreateTqmFileHeader_31
    241          			charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Max Speed: %0.1f%s\n", GetValue(MAX_SPEED).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00000B64   20059FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000B68   1A10A0E3           MOV      R1,#+26
   \   00000B6C   640090E5           LDR      R0,[R0, #+100]
   \   00000B70   000050E3           CMP      R0,#+0
   \   00000B74   EE4F8F02           ADREQ    R4,??CreateTqmFileHeader_32  ;; "mph"
   \   00000B78   944F8F12           ADRNE    R4,??CreateTqmFileHeader_2+0x8  ;; "kph"
   \   00000B7C   08008DE2           ADD      R0,SP,#+8
   \   00000B80   ........           BL       GetValue
   \   00000B84   00408DE5           STR      R4,[SP, #+0]
   \   00000B88   08009DE5           LDR      R0,[SP, #+8]
   \   00000B8C   ........           BL       __aeabi_f2d
   \   00000B90   0020A0E1           MOV      R2,R0
   \   00000B94   5600A0E3           MOV      R0,#+86
   \   00000B98   0130A0E1           MOV      R3,R1
   \   00000B9C   500E80E3           ORR      R0,R0,#0x500
   \   00000BA0   ............       ADRL     R1,`?<Constant "Max Speed: %0.1f%s\\n">`
   \              ....        
   \   00000BA8   060080E0           ADD      R0,R0,R6
   \   00000BAC   ........           BL       sprintf
   \   00000BB0   0080A0E1           MOV      R8,R0
    242          			if (0 == DataValues[ELAPSED_TIME].uVal)
   \   00000BB4   100197E5           LDR      R0,[R7, #+272]
   \   00000BB8   000050E3           CMP      R0,#+0
   \   00000BBC   0700001A           BNE      ??CreateTqmFileHeader_33
    243          				charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Avg Speed: 0.0\n");
   \   00000BC0   5600A0E3           MOV      R0,#+86
   \   00000BC4   500E80E3           ORR      R0,R0,#0x500
   \   00000BC8   062088E0           ADD      R2,R8,R6
   \   00000BCC   ............       ADRL     R1,`?<Constant "Avg Speed: 0.0\\n">`
   \              ....        
   \   00000BD4   020080E0           ADD      R0,R0,R2
   \   00000BD8   ........           BL       sprintf
   \   00000BDC   320000EA           B        ??CreateTqmFileHeader_34
    244          			else
    245          				charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Avg Speed: %0.1f%s\n",
    246          					(sysData.units == STD ? (GetValue(TOTAL_DISTANCE).fVal / 5280.0) : (GetValue(TOTAL_DISTANCE).fVal / 1000.0)) /
    247          					(((float) DataValues[ELAPSED_TIME].uVal) / 1000.0 / 3600.0), (sysData.units == STD ? "mph" : "kph"));
   \                     ??CreateTqmFileHeader_33:
   \   00000BE0   A4049FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000BE4   640090E5           LDR      R0,[R0, #+100]
   \   00000BE8   000050E3           CMP      R0,#+0
   \   00000BEC   0B00001A           BNE      ??CreateTqmFileHeader_35
   \   00000BF0   CF9F8FE2           ADR      R9,??CreateTqmFileHeader_32  ;; "mph"
   \   00000BF4   1E10A0E3           MOV      R1,#+30
   \   00000BF8   0D00A0E1           MOV      R0,SP
   \   00000BFC   ........           BL       GetValue
   \   00000C00   00009DE5           LDR      R0,[SP, #+0]
   \   00000C04   ........           BL       __aeabi_f2d
   \   00000C08   0020A0E3           MOV      R2,#+0
   \   00000C0C   ........           LDR      R3,??DataTable34_6  ;; 0x40b4a000
   \   00000C10   0A0000EA           B        ??CreateTqmFileHeader_36
   \                     ??CreateTqmFileHeader_26:
   \   00000C14   66740000           DC8      0x66, 0x74, 0x00, 0x00
   \   00000C18   6D000000           DC8      "m",0x0,0x0
   \   00000C1C   6B6D0000           DC8      0x6B, 0x6D, 0x00, 0x00
   \                     ??CreateTqmFileHeader_35:
   \   00000C20   6A9F8FE2           ADR      R9,??CreateTqmFileHeader_2+0x8  ;; "kph"
   \   00000C24   1E10A0E3           MOV      R1,#+30
   \   00000C28   0D00A0E1           MOV      R0,SP
   \   00000C2C   ........           BL       GetValue
   \   00000C30   00009DE5           LDR      R0,[SP, #+0]
   \   00000C34   ........           BL       __aeabi_f2d
   \   00000C38   0020A0E3           MOV      R2,#+0
   \   00000C3C   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \                     ??CreateTqmFileHeader_36:
   \   00000C40   ........           BL       __aeabi_ddiv
   \   00000C44   0040A0E1           MOV      R4,R0
   \   00000C48   0150A0E1           MOV      R5,R1
   \   00000C4C   00908DE5           STR      R9,[SP, #+0]
   \   00000C50   100197E5           LDR      R0,[R7, #+272]
   \   00000C54   ........           BL       __aeabi_ui2f
   \   00000C58   ........           BL       __aeabi_f2d
   \   00000C5C   0020A0E3           MOV      R2,#+0
   \   00000C60   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000C64   ........           BL       __aeabi_ddiv
   \   00000C68   0020A0E3           MOV      R2,#+0
   \   00000C6C   ........           LDR      R3,??DataTable34_8  ;; 0x40ac2000
   \   00000C70   ........           BL       __aeabi_ddiv
   \   00000C74   0020A0E1           MOV      R2,R0
   \   00000C78   0130A0E1           MOV      R3,R1
   \   00000C7C   0400A0E1           MOV      R0,R4
   \   00000C80   0510A0E1           MOV      R1,R5
   \   00000C84   ........           BL       __aeabi_ddiv
   \   00000C88   0020A0E1           MOV      R2,R0
   \   00000C8C   5600A0E3           MOV      R0,#+86
   \   00000C90   0130A0E1           MOV      R3,R1
   \   00000C94   500E80E3           ORR      R0,R0,#0x500
   \   00000C98   06C088E0           ADD      R12,R8,R6
   \   00000C9C   ............       ADRL     R1,`?<Constant "Avg Speed: %0.1f%s\\n">`
   \              ....        
   \   00000CA4   0C0080E0           ADD      R0,R0,R12
   \   00000CA8   ........           BL       sprintf
   \                     ??CreateTqmFileHeader_34:
   \   00000CAC   084080E0           ADD      R4,R0,R8
    248          			charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Max Lateral:\nL%1.2f G, R%1.2f G\n", -DataValues[MIN_Y_G].fVal, DataValues[MAX_Y_G].fVal);
   \   00000CB0   200097E5           LDR      R0,[R7, #+32]
   \   00000CB4   ........           BL       __aeabi_f2d
   \   00000CB8   03008DE8           STM      SP,{R0,R1}
   \   00000CBC   380097E5           LDR      R0,[R7, #+56]
   \   00000CC0   800420E2           EOR      R0,R0,#0x80000000
   \   00000CC4   ........           BL       __aeabi_f2d
   \   00000CC8   0020A0E1           MOV      R2,R0
   \   00000CCC   5600A0E3           MOV      R0,#+86
   \   00000CD0   0130A0E1           MOV      R3,R1
   \   00000CD4   500E80E3           ORR      R0,R0,#0x500
   \   00000CD8   06C084E0           ADD      R12,R4,R6
   \   00000CDC   ............       ADRL     R1,`?<Constant "Max Lateral:\\nL%1.2f G...">`
   \              ....        
   \   00000CE4   0C0080E0           ADD      R0,R0,R12
   \   00000CE8   ........           BL       sprintf
   \   00000CEC   044080E0           ADD      R4,R0,R4
    249          			charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Max Brake: %1.2f G\n", DataValues[MAX_X_G].fVal);
   \   00000CF0   180097E5           LDR      R0,[R7, #+24]
   \   00000CF4   ........           BL       __aeabi_f2d
   \   00000CF8   0020A0E1           MOV      R2,R0
   \   00000CFC   5600A0E3           MOV      R0,#+86
   \   00000D00   0130A0E1           MOV      R3,R1
   \   00000D04   500E80E3           ORR      R0,R0,#0x500
   \   00000D08   06C084E0           ADD      R12,R4,R6
   \   00000D0C   ............       ADRL     R1,`?<Constant "Max Brake: %1.2f G\\n">`
   \              ....        
   \   00000D14   0C0080E0           ADD      R0,R0,R12
   \   00000D18   ........           BL       sprintf
   \   00000D1C   044080E0           ADD      R4,R0,R4
    250          		} // if
    251          		
    252          		charswritten += sprintf(TQM.UserFieldDescPerformance + charswritten, "Max Accel: %1.2f G\n", -DataValues[MIN_X_G].fVal);
   \                     ??CreateTqmFileHeader_31:
   \   00000D20   300097E5           LDR      R0,[R7, #+48]
   \   00000D24   800420E2           EOR      R0,R0,#0x80000000
   \   00000D28   ........           BL       __aeabi_f2d
   \   00000D2C   0020A0E1           MOV      R2,R0
   \   00000D30   5600A0E3           MOV      R0,#+86
   \   00000D34   0130A0E1           MOV      R3,R1
   \   00000D38   500E80E3           ORR      R0,R0,#0x500
   \   00000D3C   06C084E0           ADD      R12,R4,R6
   \   00000D40   ............       ADRL     R1,`?<Constant "Max Accel: %1.2f G\\n">`
   \              ....        
   \   00000D48   0C0080E0           ADD      R0,R0,R12
   \   00000D4C   ........           BL       sprintf
   \   00000D50   044080E0           ADD      R4,R0,R4
    253          
    254          		if (0 != DataValues[ZERO_SIXTY].uVal)
   \   00000D54   400197E5           LDR      R0,[R7, #+320]
   \   00000D58   000050E3           CMP      R0,#+0
   \   00000D5C   2C00000A           BEQ      ??CreateTqmFileHeader_37
    255          			if (0 != DataValues[ZERO_HUNDRED].uVal) {
   \   00000D60   ........           BL       __aeabi_ui2f
   \   00000D64   ........           BL       __aeabi_f2d
   \   00000D68   0020A0E3           MOV      R2,#+0
   \   00000D6C   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000D70   ........           BL       __aeabi_ddiv
   \   00000D74   0080A0E1           MOV      R8,R0
   \   00000D78   480197E5           LDR      R0,[R7, #+328]
   \   00000D7C   0190A0E1           MOV      R9,R1
   \   00000D80   000050E3           CMP      R0,#+0
   \   00000D84   1800000A           BEQ      ??CreateTqmFileHeader_38
    256          				charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "0-60,100mph: %0.1fs, %0.1fs\n",
    257          					(float) DataValues[ZERO_SIXTY].uVal / 1000.0, (float) DataValues[ZERO_HUNDRED].uVal / 1000.0);
   \   00000D88   ........           BL       __aeabi_ui2f
   \   00000D8C   ........           BL       __aeabi_f2d
   \   00000D90   0020A0E3           MOV      R2,#+0
   \   00000D94   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000D98   ........           BL       __aeabi_ddiv
   \   00000D9C   03008DE8           STM      SP,{R0,R1}
   \   00000DA0   5600A0E3           MOV      R0,#+86
   \   00000DA4   500E80E3           ORR      R0,R0,#0x500
   \   00000DA8   06C084E0           ADD      R12,R4,R6
   \   00000DAC   0820A0E1           MOV      R2,R8
   \   00000DB0   0930A0E1           MOV      R3,R9
   \   00000DB4   ............       ADRL     R1,`?<Constant "0-60,100mph: %0.1fs, ...">`
   \              ....        
   \   00000DBC   0C0080E0           ADD      R0,R0,R12
   \   00000DC0   ........           BL       sprintf
   \   00000DC4   110000EA           B        ??CreateTqmFileHeader_39
   \                     ??CreateTqmFileHeader_2:
   \   00000DC8   803DD512           DC32     0x12d53d80
   \   00000DCC   ........           DC32     tqmheader
   \   00000DD0   6B706800           DC8      "kph"
   \   00000DD4   986E1283           DC32     0x83126e98
   \   00000DD8   ........           DC32     sysData+0x7E
   \   00000DDC   ........           DC32     sysData+0x8F
   \   00000DE0   ........           DC32     sysData+0xA0
   \   00000DE4   ........           DC32     scratchpad
   \   00000DE8   ........           DC32     unsavedSysData
    258          			} // if
    259          			else {		// didn't reach 100mph
    260          				charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "0-60mph: %0.1fs\n", (float) DataValues[ZERO_SIXTY].uVal / 1000.0);	
   \                     ??CreateTqmFileHeader_38:
   \   00000DEC   5600A0E3           MOV      R0,#+86
   \   00000DF0   500E80E3           ORR      R0,R0,#0x500
   \   00000DF4   06C084E0           ADD      R12,R4,R6
   \   00000DF8   0820A0E1           MOV      R2,R8
   \   00000DFC   0930A0E1           MOV      R3,R9
   \   00000E00   ............       ADRL     R1,`?<Constant "0-60mph: %0.1fs\\n">`
   \              ....        
   \   00000E08   0C0080E0           ADD      R0,R0,R12
   \   00000E0C   ........           BL       sprintf
   \                     ??CreateTqmFileHeader_39:
   \   00000E10   044080E0           ADD      R4,R0,R4
    261          			} // else
    262          		
    263          		if (0 != DataValues[SIXTY_FOOT].uVal)
   \                     ??CreateTqmFileHeader_37:
   \   00000E14   500197E5           LDR      R0,[R7, #+336]
   \   00000E18   000050E3           CMP      R0,#+0
   \   00000E1C   1B00000A           BEQ      ??CreateTqmFileHeader_40
    264          			charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "60': %0.1fs, %0.1f%s\n",
    265          				(float) DataValues[SIXTY_FOOT].uVal / 1000.0, GetValue(SIXTY_TRAP).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00000E20   64029FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000E24   2F10A0E3           MOV      R1,#+47
   \   00000E28   640090E5           LDR      R0,[R0, #+100]
   \   00000E2C   000050E3           CMP      R0,#+0
   \   00000E30   FC508F02           ADREQ    R5,??CreateTqmFileHeader_32  ;; "mph"
   \   00000E34   955F8F12           ADRNE    R5,??CreateTqmFileHeader_4+0x4  ;; "kph"
   \   00000E38   10008DE2           ADD      R0,SP,#+16
   \   00000E3C   ........           BL       GetValue
   \   00000E40   08508DE5           STR      R5,[SP, #+8]
   \   00000E44   10009DE5           LDR      R0,[SP, #+16]
   \   00000E48   ........           BL       __aeabi_f2d
   \   00000E4C   03008DE8           STM      SP,{R0,R1}
   \   00000E50   500197E5           LDR      R0,[R7, #+336]
   \   00000E54   ........           BL       __aeabi_ui2f
   \   00000E58   ........           BL       __aeabi_f2d
   \   00000E5C   0020A0E3           MOV      R2,#+0
   \   00000E60   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000E64   ........           BL       __aeabi_ddiv
   \   00000E68   0020A0E1           MOV      R2,R0
   \   00000E6C   5600A0E3           MOV      R0,#+86
   \   00000E70   0130A0E1           MOV      R3,R1
   \   00000E74   500E80E3           ORR      R0,R0,#0x500
   \   00000E78   06C084E0           ADD      R12,R4,R6
   \   00000E7C   ............       ADRL     R1,`?<Constant "60\\': %0.1fs, %0.1f%s\\n">`
   \              ....        
   \   00000E84   0C0080E0           ADD      R0,R0,R12
   \   00000E88   ........           BL       sprintf
   \   00000E8C   044080E0           ADD      R4,R0,R4
    266          		if (0 != DataValues[THREE_THIRTY_FOOT].uVal)
   \                     ??CreateTqmFileHeader_40:
   \   00000E90   580197E5           LDR      R0,[R7, #+344]
   \   00000E94   000050E3           CMP      R0,#+0
   \   00000E98   1B00000A           BEQ      ??CreateTqmFileHeader_41
    267          			charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "330': %0.1fs, %0.1f%s\n",
    268          				(float) DataValues[THREE_THIRTY_FOOT].uVal / 1000.0, GetValue(THREE_THIRTY_TRAP).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00000E9C   E8019FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000EA0   3010A0E3           MOV      R1,#+48
   \   00000EA4   640090E5           LDR      R0,[R0, #+100]
   \   00000EA8   000050E3           CMP      R0,#+0
   \   00000EAC   80508F02           ADREQ    R5,??CreateTqmFileHeader_32  ;; "mph"
   \   00000EB0   765F8F12           ADRNE    R5,??CreateTqmFileHeader_4+0x4  ;; "kph"
   \   00000EB4   10008DE2           ADD      R0,SP,#+16
   \   00000EB8   ........           BL       GetValue
   \   00000EBC   08508DE5           STR      R5,[SP, #+8]
   \   00000EC0   10009DE5           LDR      R0,[SP, #+16]
   \   00000EC4   ........           BL       __aeabi_f2d
   \   00000EC8   03008DE8           STM      SP,{R0,R1}
   \   00000ECC   580197E5           LDR      R0,[R7, #+344]
   \   00000ED0   ........           BL       __aeabi_ui2f
   \   00000ED4   ........           BL       __aeabi_f2d
   \   00000ED8   0020A0E3           MOV      R2,#+0
   \   00000EDC   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000EE0   ........           BL       __aeabi_ddiv
   \   00000EE4   0020A0E1           MOV      R2,R0
   \   00000EE8   5600A0E3           MOV      R0,#+86
   \   00000EEC   0130A0E1           MOV      R3,R1
   \   00000EF0   500E80E3           ORR      R0,R0,#0x500
   \   00000EF4   06C084E0           ADD      R12,R4,R6
   \   00000EF8   ............       ADRL     R1,`?<Constant "330\\': %0.1fs, %0.1f%s\\n">`
   \              ....        
   \   00000F00   0C0080E0           ADD      R0,R0,R12
   \   00000F04   ........           BL       sprintf
   \   00000F08   044080E0           ADD      R4,R0,R4
    269          		if (0 != DataValues[EIGHTH_MILE].uVal)
   \                     ??CreateTqmFileHeader_41:
   \   00000F0C   680197E5           LDR      R0,[R7, #+360]
   \   00000F10   000050E3           CMP      R0,#+0
   \   00000F14   1D00000A           BEQ      ??CreateTqmFileHeader_42
    270          			charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "1/8mi: %0.1fs, %0.1f%s\n",
    271          				(float) DataValues[EIGHTH_MILE].uVal / 1000.0, GetValue(EIGHTH_TRAP).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00000F18   6C019FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000F1C   3210A0E3           MOV      R1,#+50
   \   00000F20   640090E5           LDR      R0,[R0, #+100]
   \   00000F24   000050E3           CMP      R0,#+0
   \   00000F28   04508F02           ADREQ    R5,??CreateTqmFileHeader_32  ;; "mph"
   \   00000F2C   575F8F12           ADRNE    R5,??CreateTqmFileHeader_4+0x4  ;; "kph"
   \   00000F30   000000EA           B        ??CreateTqmFileHeader_43
   \                     ??CreateTqmFileHeader_32:
   \   00000F34   6D706800           DC8      "mph"
   \                     ??CreateTqmFileHeader_43:
   \   00000F38   10008DE2           ADD      R0,SP,#+16
   \   00000F3C   ........           BL       GetValue
   \   00000F40   08508DE5           STR      R5,[SP, #+8]
   \   00000F44   10009DE5           LDR      R0,[SP, #+16]
   \   00000F48   ........           BL       __aeabi_f2d
   \   00000F4C   03008DE8           STM      SP,{R0,R1}
   \   00000F50   680197E5           LDR      R0,[R7, #+360]
   \   00000F54   ........           BL       __aeabi_ui2f
   \   00000F58   ........           BL       __aeabi_f2d
   \   00000F5C   0020A0E3           MOV      R2,#+0
   \   00000F60   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000F64   ........           BL       __aeabi_ddiv
   \   00000F68   0020A0E1           MOV      R2,R0
   \   00000F6C   5600A0E3           MOV      R0,#+86
   \   00000F70   0130A0E1           MOV      R3,R1
   \   00000F74   500E80E3           ORR      R0,R0,#0x500
   \   00000F78   06C084E0           ADD      R12,R4,R6
   \   00000F7C   ............       ADRL     R1,`?<Constant "1/8mi: %0.1fs, %0.1f%s\\n">`
   \              ....        
   \   00000F84   0C0080E0           ADD      R0,R0,R12
   \   00000F88   ........           BL       sprintf
   \   00000F8C   044080E0           ADD      R4,R0,R4
    272          		if (0 != DataValues[THOUSAND_FOOT].uVal)
   \                     ??CreateTqmFileHeader_42:
   \   00000F90   600197E5           LDR      R0,[R7, #+352]
   \   00000F94   000050E3           CMP      R0,#+0
   \   00000F98   1B00000A           BEQ      ??CreateTqmFileHeader_44
    273          			charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "1000': %0.1fs, %0.1f%s\n",
    274          				(float) DataValues[THOUSAND_FOOT].uVal / 1000.0, GetValue(THOUSAND_TRAP).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00000F9C   E8009FE5           LDR      R0,??CreateTqmFileHeader_4
   \   00000FA0   3110A0E3           MOV      R1,#+49
   \   00000FA4   640090E5           LDR      R0,[R0, #+100]
   \   00000FA8   000050E3           CMP      R0,#+0
   \   00000FAC   ........           ADREQ    R5,??DataTable33  ;; "mph"
   \   00000FB0   D8508F12           ADRNE    R5,??CreateTqmFileHeader_4+0x4  ;; "kph"
   \   00000FB4   10008DE2           ADD      R0,SP,#+16
   \   00000FB8   ........           BL       GetValue
   \   00000FBC   08508DE5           STR      R5,[SP, #+8]
   \   00000FC0   10009DE5           LDR      R0,[SP, #+16]
   \   00000FC4   ........           BL       __aeabi_f2d
   \   00000FC8   03008DE8           STM      SP,{R0,R1}
   \   00000FCC   600197E5           LDR      R0,[R7, #+352]
   \   00000FD0   ........           BL       __aeabi_ui2f
   \   00000FD4   ........           BL       __aeabi_f2d
   \   00000FD8   0020A0E3           MOV      R2,#+0
   \   00000FDC   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   00000FE0   ........           BL       __aeabi_ddiv
   \   00000FE4   0020A0E1           MOV      R2,R0
   \   00000FE8   5600A0E3           MOV      R0,#+86
   \   00000FEC   0130A0E1           MOV      R3,R1
   \   00000FF0   500E80E3           ORR      R0,R0,#0x500
   \   00000FF4   06C084E0           ADD      R12,R4,R6
   \   00000FF8   ............       ADRL     R1,`?<Constant "1000\\': %0.1fs, %0.1f%s\\n">`
   \              ....        
   \   00001000   0C0080E0           ADD      R0,R0,R12
   \   00001004   ........           BL       sprintf
   \   00001008   044080E0           ADD      R4,R0,R4
    275          		if (0 != DataValues[QUARTER_MILE].uVal)
   \                     ??CreateTqmFileHeader_44:
   \   0000100C   700197E5           LDR      R0,[R7, #+368]
   \   00001010   000050E3           CMP      R0,#+0
   \   00001014   1A00000A           BEQ      ??CreateTqmFileHeader_25
    276          			charswritten += sprintf((TQM.UserFieldDescPerformance + charswritten), "1/4mi: %0.1fs, %0.1f%s\n",
    277          				(float) DataValues[QUARTER_MILE].uVal / 1000.0, GetValue(QUARTER_TRAP).fVal, (sysData.units == STD ? "mph" : "kph"));
   \   00001018   6C009FE5           LDR      R0,??CreateTqmFileHeader_4
   \   0000101C   3310A0E3           MOV      R1,#+51
   \   00001020   640090E5           LDR      R0,[R0, #+100]
   \   00001024   000050E3           CMP      R0,#+0
   \   00001028   ........           ADREQ    R5,??DataTable33  ;; "mph"
   \   0000102C   5C508F12           ADRNE    R5,??CreateTqmFileHeader_4+0x4  ;; "kph"
   \   00001030   10008DE2           ADD      R0,SP,#+16
   \   00001034   ........           BL       GetValue
   \   00001038   08508DE5           STR      R5,[SP, #+8]
   \   0000103C   10009DE5           LDR      R0,[SP, #+16]
   \   00001040   ........           BL       __aeabi_f2d
   \   00001044   03008DE8           STM      SP,{R0,R1}
   \   00001048   700197E5           LDR      R0,[R7, #+368]
   \   0000104C   ........           BL       __aeabi_ui2f
   \   00001050   ........           BL       __aeabi_f2d
   \   00001054   0020A0E3           MOV      R2,#+0
   \   00001058   ........           LDR      R3,??DataTable34_7  ;; 0x408f4000
   \   0000105C   ........           BL       __aeabi_ddiv
   \   00001060   0020A0E1           MOV      R2,R0
   \   00001064   5600A0E3           MOV      R0,#+86
   \   00001068   0130A0E1           MOV      R3,R1
   \   0000106C   500E80E3           ORR      R0,R0,#0x500
   \   00001070   06C084E0           ADD      R12,R4,R6
   \   00001074   ............       ADRL     R1,`?<Constant "1/4mi: %0.1fs, %0.1f%s\\n">`
   \              ....        
   \   0000107C   0C0080E0           ADD      R0,R0,R12
   \   00001080   ........           BL       sprintf
    278          
    279          		// put in horsepower and torque when available
    280          	} // else
    281          
    282          	// do this at start and end in case it changed
    283          	TQM.info.TrackStart.startlat = SWAP32((s32) (unsavedSysData.workingStartLineLat / 180.0 * GPSINTEGERTOFLOAT));
   \                     ??CreateTqmFileHeader_25:
   \   00001084   ........           LDR      R4,??DataTable34_9
   \   00001088   010000EA           B        ??CreateTqmFileHeader_45
   \                     ??CreateTqmFileHeader_4:
   \   0000108C   ........           DC32     sysData
   \   00001090   6B706800           DC8      "kph"
   \                     ??CreateTqmFileHeader_45:
   \   00001094   0020A0E3           MOV      R2,#+0
   \   00001098   D009C4E1           LDRD     R0,R1,[R4, #+144]
   \   0000109C   ........           LDR      R3,??DataTable34_10  ;; 0x40668000
   \   000010A0   ........           BL       __aeabi_ddiv
   \   000010A4   0020A0E1           MOV      R2,R0
   \   000010A8   0130A0E1           MOV      R3,R1
   \   000010AC   ........           ADR      R0,??DataTable33_1
   \   000010B0   030090E8           LDM      R0,{R0,R1}
   \   000010B4   ........           BL       __aeabi_dmul
   \   000010B8   ........           BL       __aeabi_d2iz
   \   000010BC   FF20A0E3           MOV      R2,#+255
   \   000010C0   FF3CA0E3           MOV      R3,#+65280
   \   000010C4   402C02E0           AND      R2,R2,R0, ASR #+24
   \   000010C8   403403E0           AND      R3,R3,R0, ASR #+8
   \   000010CC   022083E1           ORR      R2,R3,R2
   \   000010D0   FF38A0E3           MOV      R3,#+16711680
   \   000010D4   003403E0           AND      R3,R3,R0, LSL #+8
   \   000010D8   022083E1           ORR      R2,R3,R2
   \   000010DC   421086E2           ADD      R1,R6,#+66
   \   000010E0   000C82E1           ORR      R0,R2,R0, LSL #+24
   \   000010E4   ........           BL       __aeabi_uwrite4
   \   000010E8   D809C4E1           LDRD     R0,R1,[R4, #+152]
   \   000010EC   0020A0E3           MOV      R2,#+0
   \   000010F0   ........           LDR      R3,??DataTable34_10  ;; 0x40668000
   \   000010F4   ........           BL       __aeabi_ddiv
   \   000010F8   0020A0E1           MOV      R2,R0
   \   000010FC   0130A0E1           MOV      R3,R1
   \   00001100   ........           ADR      R0,??DataTable33_1
   \   00001104   030090E8           LDM      R0,{R0,R1}
   \   00001108   ........           BL       __aeabi_dmul
   \   0000110C   ........           BL       __aeabi_d2iz
   \   00001110   FF20A0E3           MOV      R2,#+255
   \   00001114   FF3CA0E3           MOV      R3,#+65280
   \   00001118   402C02E0           AND      R2,R2,R0, ASR #+24
   \   0000111C   403403E0           AND      R3,R3,R0, ASR #+8
   \   00001120   022083E1           ORR      R2,R3,R2
   \   00001124   FF38A0E3           MOV      R3,#+16711680
   \   00001128   003403E0           AND      R3,R3,R0, LSL #+8
   \   0000112C   022083E1           ORR      R2,R3,R2
   \   00001130   461086E2           ADD      R1,R6,#+70
   \   00001134   000C82E1           ORR      R0,R2,R0, LSL #+24
   \   00001138   ........           BL       __aeabi_uwrite4
   \   0000113C   A00094E5           LDR      R0,[R4, #+160]
   \   00001140   ........           BL       __aeabi_f2iz
   \   00001144   0008A0E1           LSL      R0,R0,#+16
   \   00001148   4008A0E1           ASR      R0,R0,#+16
   \   0000114C   FF10A0E3           MOV      R1,#+255
   \   00001150   401401E0           AND      R1,R1,R0, ASR #+8
   \   00001154   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00001158   4A00C6E5           STRB     R0,[R6, #+74]
   \   0000115C   2004A0E1           LSR      R0,R0,#+8
   \   00001160   4B00C6E5           STRB     R0,[R6, #+75]
    284          	TQM.info.TrackStart.startlon = SWAP32((s32) (unsavedSysData.workingStartLineLong / 180.0 * GPSINTEGERTOFLOAT));
    285          	TQM.info.TrackStart.startalt = SWAP16((s16) unsavedSysData.workingStartLineAlt);
    286          	// convert from compass (0=N) to radian heading (90=N)
    287          	heading = 360 - (((int) unsavedSysData.workingStartLineHeading + 270) % 360);
   \   00001164   0E50A0E3           MOV      R5,#+14
   \   00001168   405F85E3           ORR      R5,R5,#0x100
   \   0000116C   A40094E5           LDR      R0,[R4, #+164]
   \   00001170   ........           BL       __aeabi_f2iz
   \   00001174   ........           LDR      R2,??DataTable34_11  ;; 0xb60b60b7
   \   00001178   000085E0           ADD      R0,R5,R0
   \   0000117C   9032C2E0           SMULL    R3,R2,R0,R2
   \   00001180   5A1F60E2           RSB      R1,R0,#+360
   \   00001184   002082E0           ADD      R2,R2,R0
   \   00001188   4204B0E1           ASRS     R0,R2,#+8
   \   0000118C   5A7FA0E3           MOV      R7,#+360
   \   00001190   01008042           ADDMI    R0,R0,#+1
   \   00001194   971020E0           MLA      R0,R7,R0,R1
    288          	TQM.info.TrackStart.starthead = SWAP16((u16) heading);
   \   00001198   0020A0E3           MOV      R2,#+0
   \   0000119C   0018A0E1           LSL      R1,R0,#+16
   \   000011A0   2118A0E1           LSR      R1,R1,#+16
   \   000011A4   0004A0E1           LSL      R0,R0,#+8
   \   000011A8   210480E1           ORR      R0,R0,R1, LSR #+8
   \   000011AC   4C00C6E5           STRB     R0,[R6, #+76]
   \   000011B0   2004A0E1           LSR      R0,R0,#+8
   \   000011B4   4D00C6E5           STRB     R0,[R6, #+77]
   \   000011B8   D80AC4E1           LDRD     R0,R1,[R4, #+168]
   \   000011BC   ........           LDR      R3,??DataTable34_10  ;; 0x40668000
   \   000011C0   ........           BL       __aeabi_ddiv
   \   000011C4   ........           ADR      R2,??DataTable33_1
   \   000011C8   0C0092E8           LDM      R2,{R2,R3}
   \   000011CC   ........           BL       __aeabi_dmul
   \   000011D0   ........           BL       __aeabi_d2iz
   \   000011D4   FF20A0E3           MOV      R2,#+255
   \   000011D8   FF3CA0E3           MOV      R3,#+65280
   \   000011DC   402C02E0           AND      R2,R2,R0, ASR #+24
   \   000011E0   403403E0           AND      R3,R3,R0, ASR #+8
   \   000011E4   022083E1           ORR      R2,R3,R2
   \   000011E8   FF38A0E3           MOV      R3,#+16711680
   \   000011EC   003403E0           AND      R3,R3,R0, LSL #+8
   \   000011F0   022083E1           ORR      R2,R3,R2
   \   000011F4   4E1086E2           ADD      R1,R6,#+78
   \   000011F8   000C82E1           ORR      R0,R2,R0, LSL #+24
   \   000011FC   ........           BL       __aeabi_uwrite4
   \   00001200   D00BC4E1           LDRD     R0,R1,[R4, #+176]
   \   00001204   0020A0E3           MOV      R2,#+0
   \   00001208   ........           LDR      R3,??DataTable34_10  ;; 0x40668000
   \   0000120C   ........           BL       __aeabi_ddiv
   \   00001210   ........           ADR      R2,??DataTable33_1
   \   00001214   0C0092E8           LDM      R2,{R2,R3}
   \   00001218   ........           BL       __aeabi_dmul
   \   0000121C   ........           BL       __aeabi_d2iz
   \   00001220   FF20A0E3           MOV      R2,#+255
   \   00001224   FF3CA0E3           MOV      R3,#+65280
   \   00001228   402C02E0           AND      R2,R2,R0, ASR #+24
   \   0000122C   403403E0           AND      R3,R3,R0, ASR #+8
   \   00001230   022083E1           ORR      R2,R3,R2
   \   00001234   FF38A0E3           MOV      R3,#+16711680
   \   00001238   003403E0           AND      R3,R3,R0, LSL #+8
   \   0000123C   022083E1           ORR      R2,R3,R2
   \   00001240   521086E2           ADD      R1,R6,#+82
   \   00001244   000C82E1           ORR      R0,R2,R0, LSL #+24
   \   00001248   ........           BL       __aeabi_uwrite4
   \   0000124C   B80094E5           LDR      R0,[R4, #+184]
   \   00001250   ........           BL       __aeabi_f2iz
   \   00001254   0008A0E1           LSL      R0,R0,#+16
   \   00001258   4008A0E1           ASR      R0,R0,#+16
   \   0000125C   FF10A0E3           MOV      R1,#+255
   \   00001260   401401E0           AND      R1,R1,R0, ASR #+8
   \   00001264   000481E1           ORR      R0,R1,R0, LSL #+8
   \   00001268   5600C6E5           STRB     R0,[R6, #+86]
   \   0000126C   2004A0E1           LSR      R0,R0,#+8
   \   00001270   5700C6E5           STRB     R0,[R6, #+87]
    289          
    290          	TQM.info.TrackFinish.finishlat = SWAP32((s32) (unsavedSysData.workingFinishLineLat / 180.0 * GPSINTEGERTOFLOAT));
    291          	TQM.info.TrackFinish.finishlon = SWAP32((s32) (unsavedSysData.workingFinishLineLong / 180.0 * GPSINTEGERTOFLOAT));
    292          	TQM.info.TrackFinish.finishalt = SWAP16((s16) unsavedSysData.workingFinishLineAlt);
    293          	// convert from compass (0=N) to radian heading (90=N)
    294          	heading = 360 - (((int) unsavedSysData.workingFinishLineHeading + 270) % 360);
   \   00001274   BC0094E5           LDR      R0,[R4, #+188]
   \   00001278   ........           BL       __aeabi_f2iz
   \   0000127C   ........           LDR      R2,??DataTable34_11  ;; 0xb60b60b7
   \   00001280   000085E0           ADD      R0,R5,R0
   \   00001284   9032C2E0           SMULL    R3,R2,R0,R2
   \   00001288   5A1F60E2           RSB      R1,R0,#+360
   \   0000128C   002082E0           ADD      R2,R2,R0
   \   00001290   4204B0E1           ASRS     R0,R2,#+8
   \   00001294   01008042           ADDMI    R0,R0,#+1
   \   00001298   971020E0           MLA      R0,R7,R0,R1
   \   0000129C   54D08DE2           ADD      SP,SP,#+84
    295          	TQM.info.TrackFinish.finishhead = SWAP16((u16) heading);
   \   000012A0   0018A0E1           LSL      R1,R0,#+16
   \   000012A4   2118A0E1           LSR      R1,R1,#+16
   \   000012A8   0004A0E1           LSL      R0,R0,#+8
   \   000012AC   210480E1           ORR      R0,R0,R1, LSR #+8
   \   000012B0   5800C6E5           STRB     R0,[R6, #+88]
   \   000012B4   2004A0E1           LSR      R0,R0,#+8
   \   000012B8   5900C6E5           STRB     R0,[R6, #+89]
    296          	
    297          #undef TQM
    298          	
    299          } // WriteTqmFileHeader
   \   000012BC   F08FBDE8           POP      {R4-R11,PC}      ;; return
    300          
    301          
    302          // this task allows file writes in low priority background task
    303          //

   \                                 In section .text, align 4, keep-with-next
    304          void TQMWriteTask ( void ) {
   \                     TQMWriteTask:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   2A50A0E3           MOV      R5,#+42
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   ........           LDR      R4,??DataTable34_12
   \   00000010   485D85E3           ORR      R5,R5,#0x1200
   \   00000014   ........           ADR      R6,??DataTable34_1  ;; 0x77, 0x62, 0x00, 0x00
   \   00000018   ........           LDR      R7,??DataTable34_13
   \   0000001C   ........           ADR      R8,??DataTable34_2  ;; ""
   \   00000020   ........           LDR      R9,??DataTable34_14
    305          	void *pData;						// pointer to data to write to tqm file
    306          	int size;
    307          	char which_event;										 // bitmask of events that occured
    308          			
    309          	while (1) {
    310          		// wait for something to happen
    311          		which_event = OS_WaitEvent( (unsigned char) ALL_TQM_EVENTS );
   \                     ??TQMWriteTask_0:
   \   00000024   E400A0E3           MOV      R0,#+228
   \   00000028   ........           BL       OS_WaitEvent
   \   0000002C   00A0A0E1           MOV      R10,R0
    312          		
    313          		if (which_event & (1 << DU2_POWER_LOSS)) {	// close files quickly
   \   00000030   04001AE3           TST      R10,#0x4
   \   00000034   0800000A           BEQ      ??TQMWriteTask_1
    314          			if (NULL != sessionFile) {
   \   00000038   000099E5           LDR      R0,[R9, #+0]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0400000A           BEQ      ??TQMWriteTask_2
    315          				FS_FClose(sessionFile);
   \   00000044   ........           BL       FS_FClose
    316          				FS_Sync("");							// flush cache, update headers
   \   00000048   0800A0E1           MOV      R0,R8
   \   0000004C   ........           BL       FS_Sync
    317          				sessionFile = NULL;
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   000089E5           STR      R0,[R9, #+0]
    318          			} // if
    319          			OS_Yield();								// job is done here
   \                     ??TQMWriteTask_2:
   \   00000058   ........           BL       OS_Yield
    320          		} // if
    321          
    322          		if (which_event & (1 << DU2_SDCARD_EJECT)) {	// stop saving and discard queue
   \                     ??TQMWriteTask_1:
   \   0000005C   10001AE3           TST      R10,#0x10
   \   00000060   0800000A           BEQ      ??TQMWriteTask_3
    323          			if (NULL != sessionFile) {
   \   00000064   000099E5           LDR      R0,[R9, #+0]
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0200000A           BEQ      ??TQMWriteTask_4
    324          				FS_FClose(sessionFile);				// ????
   \   00000070   ........           BL       FS_FClose
    325          				sessionFile = NULL;
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   000089E5           STR      R0,[R9, #+0]
    326          			} // if
    327          
    328          			OS_Q_Clear( &Queue_tqm );				// throw away unwritten data (shouldn't be much)
   \                     ??TQMWriteTask_4:
   \   0000007C   0700A0E1           MOV      R0,R7
   \   00000080   ........           BL       OS_Q_Clear
    329          			OS_Yield();								// job is done here
   \   00000084   ........           BL       OS_Yield
    330          		} // if
    331          		
    332          		if (which_event & (1 << DU2_TQM_OPEN)) {			// open file and create tqm header
   \                     ??TQMWriteTask_3:
   \   00000088   20001AE3           TST      R10,#0x20
   \   0000008C   1600000A           BEQ      ??TQMWriteTask_5
    333          			size = OS_Q_GetPtr( &Queue_tqm, &pData );		// wait until filename arrives
   \   00000090   0D10A0E1           MOV      R1,SP
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   ........           BL       OS_Q_GetPtr
   \   0000009C   00B0A0E1           MOV      R11,R0
    334          				
    335          			sessionFile = FS_FOpen(pData, "wb");
   \   000000A0   0610A0E1           MOV      R1,R6
   \   000000A4   00009DE5           LDR      R0,[SP, #+0]
   \   000000A8   ........           BL       FS_FOpen
   \   000000AC   000089E5           STR      R0,[R9, #+0]
    336          			FS_ConfigFileBufferFlags(sessionFile, FS_FILE_BUFFER_WRITE);
   \   000000B0   0110A0E3           MOV      R1,#+1
   \   000000B4   ........           BL       FS_ConfigFileBufferFlags
    337          					
    338          #ifdef BUILD_DEBUG_PORT
    339          			if (NULL == sessionFile) {
    340          				DBGU_Print("Could not open session file.\n\r");
    341          			} // if
    342          			DBGU_Print("session: ");
    343          			DBGU_Print(pData);					
    344          			DBGU_Print(" \n\r");
    345          #endif
    346          			// chop off .tqm for session name
    347          			*((char *) pData + size - 4) = '\0';
   \   000000B8   00009DE5           LDR      R0,[SP, #+0]
   \   000000BC   0010A0E3           MOV      R1,#+0
   \   000000C0   00008BE0           ADD      R0,R11,R0
   \   000000C4   041040E5           STRB     R1,[R0, #-4]
    348          
    349          			// create and write file header
    350          			CreateTqmFileHeader( (char *) pData, true );			// send filename string for inclusion in tqm file
   \   000000C8   0110A0E3           MOV      R1,#+1
   \   000000CC   00009DE5           LDR      R0,[SP, #+0]
   \   000000D0   ........           BL       CreateTqmFileHeader
    351          			
    352          			OS_Q_Purge ( &Queue_tqm );
   \   000000D4   0700A0E1           MOV      R0,R7
   \   000000D8   ........           BL       OS_Q_Purge
    353          
    354          			// write the tqm file header
    355          			if (TQM_FILE_DATA_OFFSET != FS_Write( sessionFile, (u08 *) &tqmheader, TQM_FILE_DATA_OFFSET)) {
   \   000000DC   0520A0E1           MOV      R2,R5
   \   000000E0   0410A0E1           MOV      R1,R4
   \   000000E4   000099E5           LDR      R0,[R9, #+0]
   \   000000E8   ........           BL       FS_Write
    356          #ifdef BUILD_DEBUG_PORT
    357          				DBGU_Print("Error writing session file data.\n\r");
    358          #endif
    359          			} // if	
    360          		} // if
    361          		
    362          		if (which_event & (1 << DU2_TQM_WRITE)) {	// need to write data so get it from the queue
   \                     ??TQMWriteTask_5:
   \   000000EC   80001AE3           TST      R10,#0x80
   \   000000F0   1200000A           BEQ      ??TQMWriteTask_6
    363          			if (0 != OS_Q_GetMessageCnt( &Queue_tqm ))	// don't get blocked
   \   000000F4   0700A0E1           MOV      R0,R7
   \   000000F8   ........           BL       OS_Q_GetMessageCnt
   \   000000FC   000050E3           CMP      R0,#+0
   \   00000100   0E00000A           BEQ      ??TQMWriteTask_6
    364          				do {	// process all the messages
    365          					size = OS_Q_GetPtr ( &Queue_tqm, &pData );
   \                     ??TQMWriteTask_7:
   \   00000104   0D10A0E1           MOV      R1,SP
   \   00000108   0700A0E1           MOV      R0,R7
   \   0000010C   ........           BL       OS_Q_GetPtr
   \   00000110   0020A0E1           MOV      R2,R0
    366          					if (NULL != sessionFile) {	
   \   00000114   000099E5           LDR      R0,[R9, #+0]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0100000A           BEQ      ??TQMWriteTask_8
    367          						if (size != FS_Write( sessionFile, (u08 *) pData, size)) {
   \   00000120   00109DE5           LDR      R1,[SP, #+0]
   \   00000124   ........           BL       FS_Write
    368          #ifdef BUILD_DEBUG_PORT
    369          						DBGU_Print("Error writing session file data.\n\r");
    370          #endif
    371          						} // if
    372          					} // if
    373          					OS_Q_Purge ( &Queue_tqm );
   \                     ??TQMWriteTask_8:
   \   00000128   0700A0E1           MOV      R0,R7
   \   0000012C   ........           BL       OS_Q_Purge
    374          				} while (0 != OS_Q_GetMessageCnt( &Queue_tqm ));
   \   00000130   0700A0E1           MOV      R0,R7
   \   00000134   ........           BL       OS_Q_GetMessageCnt
   \   00000138   000050E3           CMP      R0,#+0
   \   0000013C   F0FFFF1A           BNE      ??TQMWriteTask_7
    375          		} // if
    376          
    377          		if (which_event & (1 << DU2_TQM_CLOSE)) {	// need to write end time and close data file
   \                     ??TQMWriteTask_6:
   \   00000140   40001AE3           TST      R10,#0x40
    378          
    379          			if (NULL != sessionFile) {
   \   00000144   00009915           LDRNE    R0,[R9, #+0]
   \   00000148   00005013           CMPNE    R0,#+0
   \   0000014C   B4FFFF0A           BEQ      ??TQMWriteTask_0
    380          #ifdef BUILD_DEBUG_PORT
    381          				DBGU_Print("closing session file \n\r");
    382          #endif
    383          				CreateTqmFileHeader( NULL, false );			// skip over date string
   \   00000150   0010A0E3           MOV      R1,#+0
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   ........           BL       CreateTqmFileHeader
    384          
    385          				// write out tqm header created elsewhere
    386          				FS_FSeek( sessionFile, 0, FS_SEEK_SET);
   \   0000015C   0020A0E3           MOV      R2,#+0
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   000099E5           LDR      R0,[R9, #+0]
   \   00000168   ........           BL       FS_FSeek
    387          				FS_Write( sessionFile, &tqmheader, TQM_FILE_DATA_OFFSET);
   \   0000016C   0520A0E1           MOV      R2,R5
   \   00000170   0410A0E1           MOV      R1,R4
   \   00000174   000099E5           LDR      R0,[R9, #+0]
   \   00000178   ........           BL       FS_Write
    388          				FS_FClose( sessionFile );
   \   0000017C   000099E5           LDR      R0,[R9, #+0]
   \   00000180   ........           BL       FS_FClose
    389          				FS_Sync("");					// flush cache, update headers
   \   00000184   0800A0E1           MOV      R0,R8
   \   00000188   ........           BL       FS_Sync
    390          				OS_Q_Clear( &Queue_tqm );		// throw away unwritten data (shouldn't be much)
   \   0000018C   0700A0E1           MOV      R0,R7
   \   00000190   ........           BL       OS_Q_Clear
    391          				sessionFile = NULL;
   \   00000194   0000A0E3           MOV      R0,#+0
   \   00000198   000089E5           STR      R0,[R9, #+0]
   \   0000019C   A0FFFFEA           B        ??TQMWriteTask_0
    392          			} // if
    393          		} // if
    394          			
    395          	} // while
    396          } // TQMWrite

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \   00000000   6D706800           DC8      "mph"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \   00000000   0000C0FFFFFF       DC32     0xFFC00000,0x41DFFFFF
   \              DF41        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34:
   \   00000000   ........           DC32     MY_SESSIONS_PATH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_1:
   \   00000000   77620000           DC8      0x77, 0x62, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_2:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_3:
   \   00000000   ........           DC32     DataValues

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_4:
   \   00000000   C5B3A291           DC32     0x91a2b3c5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_5:
   \   00000000   89888888           DC32     0x88888889

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_6:
   \   00000000   00A0B440           DC32     0x40b4a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_7:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_8:
   \   00000000   0020AC40           DC32     0x40ac2000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_9:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_10:
   \   00000000   00806640           DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_11:
   \   00000000   B7600BB6           DC32     0xb60b60b7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_12:
   \   00000000   ........           DC32     tqmheader

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_13:
   \   00000000   ........           DC32     Queue_tqm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable34_14:
   \   00000000   ........           DC32     sessionFile

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TQM008">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   54514D303038       DC8 84, 81, 77, 48, 48, 56, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LAPTIMES">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4C415054494D       DC8 76, 65, 80, 84, 73, 77, 69, 83, 0, 0
   \              45530000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "A%d: %s: %s\\n">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4125643A2025       DC8 65, 37, 100, 58, 32, 37, 115, 58, 32, 37
   \              733A2025    
   \   0000000A   730A00000000       DC8 115, 10, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "enabled">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   656E61626C65       DC8 101, 110, 97, 98, 108, 101, 100, 0
   \              6400        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "disabled">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   64697361626C       DC8 100, 105, 115, 97, 98, 108, 101, 100, 0, 0
   \              65640000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nD%d: %s: %s">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   0A4425643A20       DC8 10, 68, 37, 100, 58, 32, 37, 115, 58, 32
   \              25733A20    
   \   0000000A   257300000000       DC8 37, 115, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\nSU Cam: %s\\nUSB Cam: ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   0A0A53552043       DC8 10, 10, 83, 85, 32, 67, 97, 109, 58, 32
   \              616D3A20    
   \   0000000A   25730A555342       DC8 37, 115, 10, 85, 83, 66, 32, 67, 97, 109
   \              2043616D    
   \   00000014   3A200000           DC8 58, 32, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enabled, %1.1fs">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   456E61626C65       DC8 69, 110, 97, 98, 108, 101, 100, 44, 32, 37
   \              642C2025    
   \   0000000A   312E31667300       DC8 49, 46, 49, 102, 115, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "None">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4E6F6E650000       DC8 78, 111, 110, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Duration: %02d:%02d:%...">`:
   \   00000000                      ; Initializer data, 104 bytes
   \   00000000   447572617469       DC8 68, 117, 114, 97, 116, 105, 111, 110, 58, 32
   \              6F6E3A20    
   \   0000000A   253032643A25       DC8 37, 48, 50, 100, 58, 37, 48, 50, 100, 58
   \              3032643A    
   \   00000014   253032640A44       DC8 37, 48, 50, 100, 10, 68, 105, 115, 116, 97
   \              69737461    
   \   0000001E   6E63653A2025       DC8 110, 99, 101, 58, 32, 37, 48, 46, 50, 102
   \              302E3266    
   \   00000028   2025730A5361       DC8 32, 37, 115, 10, 83, 97, 116, 101, 108, 108
   \              74656C6C    
   \   00000032   697465732025       DC8 105, 116, 101, 115, 32, 37, 117, 32, 45, 32
   \              75202D20    
   \   0000003C   25750A444F50       DC8 37, 117, 10, 68, 79, 80, 32, 37, 49, 46
   \              2025312E    
   \   00000046   3266202D2025       DC8 50, 102, 32, 45, 32, 37, 49, 46, 50, 102
   \              312E3266    
   \   00000050   0A456C657661       DC8 10, 69, 108, 101, 118, 97, 116, 105, 111, 110
   \              74696F6E    
   \   0000005A   202564202D20       DC8 32, 37, 100, 32, 45, 32, 37, 100, 32, 37
   \              25642025    
   \   00000064   73000000           DC8 115, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "km">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   6B6D0000           DC8 107, 109, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ft">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   66740000           DC8 102, 116, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "m">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   6D00               DC8 109, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "miles">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   6D696C657300       DC8 109, 105, 108, 101, 115, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "High Revs: %u\\nOver Re...">`:
   \   00000000                      ; Initializer data, 44 bytes
   \   00000000   486967682052       DC8 72, 105, 103, 104, 32, 82, 101, 118, 115, 58
   \              6576733A    
   \   0000000A   2025750A4F76       DC8 32, 37, 117, 10, 79, 118, 101, 114, 32, 82
   \              65722052    
   \   00000014   6576733A2025       DC8 101, 118, 115, 58, 32, 37, 117, 10, 77, 97
   \              750A4D61    
   \   0000001E   782052504D3A       DC8 120, 32, 82, 80, 77, 58, 32, 37, 117, 10
   \              2025750A    
   \   00000028   0A000000           DC8 10, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "A%d: %s\\n%1.2f - %1.2f...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   4125643A2025       DC8 65, 37, 100, 58, 32, 37, 115, 10, 37, 49
   \              730A2531    
   \   0000000A   2E3266202D20       DC8 46, 50, 102, 32, 45, 32, 37, 49, 46, 50
   \              25312E32    
   \   00000014   662025730A0A       DC8 102, 32, 37, 115, 10, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max Speed: %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4D6178205370       DC8 77, 97, 120, 32, 83, 112, 101, 101, 100, 58
   \              6565643A    
   \   0000000A   2025302E3166       DC8 32, 37, 48, 46, 49, 102, 37, 115, 10, 0
   \              25730A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Avg Speed: 0.0\\n">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   417667205370       DC8 65, 118, 103, 32, 83, 112, 101, 101, 100, 58
   \              6565643A    
   \   0000000A   20302E300A00       DC8 32, 48, 46, 48, 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Avg Speed: %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   417667205370       DC8 65, 118, 103, 32, 83, 112, 101, 101, 100, 58
   \              6565643A    
   \   0000000A   2025302E3166       DC8 32, 37, 48, 46, 49, 102, 37, 115, 10, 0
   \              25730A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max Lateral:\\nL%1.2f G...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   4D6178204C61       DC8 77, 97, 120, 32, 76, 97, 116, 101, 114, 97
   \              74657261    
   \   0000000A   6C3A0A4C2531       DC8 108, 58, 10, 76, 37, 49, 46, 50, 102, 32
   \              2E326620    
   \   00000014   472C20522531       DC8 71, 44, 32, 82, 37, 49, 46, 50, 102, 32
   \              2E326620    
   \   0000001E   470A00000000       DC8 71, 10, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max Brake: %1.2f G\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4D6178204272       DC8 77, 97, 120, 32, 66, 114, 97, 107, 101, 58
   \              616B653A    
   \   0000000A   2025312E3266       DC8 32, 37, 49, 46, 50, 102, 32, 71, 10, 0
   \              20470A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max Accel: %1.2f G\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4D6178204163       DC8 77, 97, 120, 32, 65, 99, 99, 101, 108, 58
   \              63656C3A    
   \   0000000A   2025312E3266       DC8 32, 37, 49, 46, 50, 102, 32, 71, 10, 0
   \              20470A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0-60,100mph: %0.1fs, ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   302D36302C31       DC8 48, 45, 54, 48, 44, 49, 48, 48, 109, 112
   \              30306D70    
   \   0000000A   683A2025302E       DC8 104, 58, 32, 37, 48, 46, 49, 102, 115, 44
   \              3166732C    
   \   00000014   2025302E3166       DC8 32, 37, 48, 46, 49, 102, 115, 10, 0, 0
   \              730A0000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "0-60mph: %0.1fs\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   302D36306D70       DC8 48, 45, 54, 48, 109, 112, 104, 58, 32, 37
   \              683A2025    
   \   0000000A   302E3166730A       DC8 48, 46, 49, 102, 115, 10, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "60\\': %0.1fs, %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3630273A2025       DC8 54, 48, 39, 58, 32, 37, 48, 46, 49, 102
   \              302E3166    
   \   0000000A   732C2025302E       DC8 115, 44, 32, 37, 48, 46, 49, 102, 37, 115
   \              31662573    
   \   00000014   0A000000           DC8 10, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "330\\': %0.1fs, %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   333330273A20       DC8 51, 51, 48, 39, 58, 32, 37, 48, 46, 49
   \              25302E31    
   \   0000000A   66732C202530       DC8 102, 115, 44, 32, 37, 48, 46, 49, 102, 37
   \              2E316625    
   \   00000014   730A0000           DC8 115, 10, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1/8mi: %0.1fs, %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   312F386D693A       DC8 49, 47, 56, 109, 105, 58, 32, 37, 48, 46
   \              2025302E    
   \   0000000A   3166732C2025       DC8 49, 102, 115, 44, 32, 37, 48, 46, 49, 102
   \              302E3166    
   \   00000014   25730A00           DC8 37, 115, 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1000\\': %0.1fs, %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   31303030273A       DC8 49, 48, 48, 48, 39, 58, 32, 37, 48, 46
   \              2025302E    
   \   0000000A   3166732C2025       DC8 49, 102, 115, 44, 32, 37, 48, 46, 49, 102
   \              302E3166    
   \   00000014   25730A00           DC8 37, 115, 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1/4mi: %0.1fs, %0.1f%s\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   312F346D693A       DC8 49, 47, 52, 109, 105, 58, 32, 37, 48, 46
   \              2025302E    
   \   0000000A   3166732C2025       DC8 49, 102, 115, 44, 32, 37, 48, 46, 49, 102
   \              302E3166    
   \   00000014   25730A00           DC8 37, 115, 10, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "mph">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   6D706800           DC8 109, 112, 104, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "kph">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   6B706800           DC8 107, 112, 104, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "wb">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   77620000           DC8 119, 98, 0, 0
    397          

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     CreateTqmFileHeader    120
     TQMWriteTask            40


   Section sizes:

     Function/Label                          Bytes
     --------------                          -----
     CreateTqmFileHeader                     4800
     TQMWriteTask                             416
     ??DataTable33                              4
     ??DataTable33_1                            8
     ??DataTable33_2                            4
     ??DataTable34                              4
     ??DataTable34_1                            4
     ??DataTable34_2                            4
     ??DataTable34_3                            4
     ??DataTable34_4                            4
     ??DataTable34_5                            4
     ??DataTable34_6                            4
     ??DataTable34_7                            4
     ??DataTable34_8                            4
     ??DataTable34_9                            4
     ??DataTable34_10                           4
     ??DataTable34_11                           4
     ??DataTable34_12                           4
     ??DataTable34_13                           4
     ??DataTable34_14                           4
     ?<Constant "">                             1
     ?<Constant "TQM008">                       8
     ?<Constant "LAPTIMES">                    12
     ?<Constant "A%d: %s: %s\n">               16
     ?<Constant "enabled">                      8
     ?<Constant "disabled">                    12
     ?<Constant "\nD%d: %s: %s">               16
     ?<Constant "\n\nSU Cam: %s\nUSB Cam: ">   24
     ?<Constant "Enabled, %1.1fs">             16
     ?<Constant "None">                         8
     ?<Constant "Duration: %02d:%02d:%...">   104
     ?<Constant "km">                           4
     ?<Constant "ft">                           4
     ?<Constant "m">                            2
     ?<Constant "miles">                        8
     ?<Constant "High Revs: %u\nOver Re...">   44
     ?<Constant "A%d: %s\n%1.2f - %1.2f...">   28
     ?<Constant "Max Speed: %0.1f%s\n">        20
     ?<Constant "Avg Speed: 0.0\n">            16
     ?<Constant "Avg Speed: %0.1f%s\n">        20
     ?<Constant "Max Lateral:\nL%1.2f G...">   36
     ?<Constant "Max Brake: %1.2f G\n">        20
     ?<Constant "Max Accel: %1.2f G\n">        20
     ?<Constant "0-60,100mph: %0.1fs, ...">    32
     ?<Constant "0-60mph: %0.1fs\n">           20
     ?<Constant "60\': %0.1fs, %0.1f%s\n">     24
     ?<Constant "330\': %0.1fs, %0.1f%s\n">    24
     ?<Constant "1/8mi: %0.1fs, %0.1f%s\n">    24
     ?<Constant "1000\': %0.1fs, %0.1f%s\n">   24
     ?<Constant "1/4mi: %0.1fs, %0.1f%s\n">    24
     ?<Constant "mph">                          4
     ?<Constant "kph">                          4
     ?<Constant "wb">                           4

 
    23 bytes in section .rodata
 5 900 bytes in section .text
 
 5 900 bytes of CODE  memory
    23 bytes of CONST memory

Errors: none
Warnings: none
