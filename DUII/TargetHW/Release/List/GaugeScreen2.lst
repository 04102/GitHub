###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     05/Jan/2011  11:18:34 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\GaugeScreen2.cpp                            #
#    Command line =  C:\DUII\DUII\GaugeScreen2.cpp -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -lCN                 #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ --cpu_mode arm -Ohs --eec++                  #
#    List file    =  C:\DUII\TargetHW\Release\List\GaugeScreen2.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GaugeScreen2.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\GaugeScreen2.cpp
      1          
      2          /*********************************************************************
      3          *                SEGGER Microcontroller GmbH & Co. KG                *
      4          *        Solutions for real time microcontroller applications        *
      5          **********************************************************************
      6          *                                                                    *
      7          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      8          *                                                                    *
      9          *        Internet: www.segger.com    Support:  support@segger.com    *
     10          *                                                                    *
     11          **********************************************************************
     12          
     13          ** emWin V5.00 - Graphical user interface for embedded applications **
     14          emWin is protected by international copyright laws.   Knowledge of the
     15          source code may not be used to write a similar product.  This file may
     16          only be used in accordance with a license and should not be re-
     17          distributed in any way. We appreciate your understanding and fairness.
     18          ----------------------------------------------------------------------
     19          File        : MainTask.C
     20          Purpose     : Main program, called from after main after initialisation
     21          ---------------------------END-OF-HEADER------------------------------
     22          */
     23          
     24          #include <stdio.h>
     25          #include <stdlib.h>
     26          #include "DUII.h"
     27          #include "GUI.h"
     28          #include "GeneralConfig.h"
     29          #include "commondefs.h"
     30          #include "ConfigScreens.h"
     31          #include "GaugeScreen2.h"
     32          #include "gauge.hpp"
     33          #include "RunningGauges.h"
     34          #include "DataHandler.h"
     35          
     36          /*********************************************************************
     37          *
     38          *       External data and code
     39          *
     40          **********************************************************************
     41          */
     42          
     43          /*********************************************************************
     44          *
     45          *       Public code
     46          *
     47          **********************************************************************
     48          */
     49          
     50          /*********************************************************************
     51          *
     52          *       Local Prototypes
     53          *
     54          **********************************************************************
     55          */
     56          
     57          /*********************************************************************
     58          *
     59          *       Local Valiables
     60          *
     61          **********************************************************************
     62          */
     63          static WM_HWIN hGaugeScreen2;
     64          static Gauge *pGauge = 0;
     65          static bool firsttimethrough;
     66          static Alarm *pYellow = 0, *pRed = 0;
     67          
     68          void _cbGaugeCallback2(WM_MESSAGE * pMsg)
     69          {
     70          	GUI_RECT rect;
     71          //	int NCode, Id;
     72          
     73          	switch(pMsg->MsgId)
     74          	{
     75          #ifdef _WINDOWS
     76          	// KMC TEST CODE
     77          	case WM_TIMER:
     78          		if (pMsg->Data.v == hDataTimer)
     79          			DummyTick();
     80          		break;
     81          #endif
     82          
     83          		case WM_OIL_TEMP:
     84          			if (CS_IsVisible(ANALOG_GAUGE2))
     85          			{
     86          				pGauge->SetValue(GetValue(OIL_TEMP_INDEX));
     87          				pGauge->GetRect(&rect);
     88          				WM_InvalidateRect(hGaugeScreen2, &rect);
     89          			}
     90          			break;
     91          
     92          	case WM_PAINT:
     93          		if (CS_IsVisible(ANALOG_GAUGE2) || firsttimethrough)
     94          		{
     95          			firsttimethrough = FALSE;
     96          			/* Paint the background window */
     97          			GUI_DrawBitmap(&bmthreewayarrow, 3, 238);
     98          			GUI_SetColor(GUI_WHITE);
     99          			GUI_SetFont(&GUI_Font24_ASCII);
    100          			GUI_DispStringHCenterAt("Oil Temp", XSIZE_PHYS/2, 10);
    101          			pGauge->DrawControl();
    102          		}
    103          		break;
    104          
    105          	case WM_DELETE:
    106          		TerminateData(hGaugeScreen2);
    107          		if (pGauge)
    108          		{
    109          			delete pGauge;
    110          			pGauge = 0;
    111          		}
    112          		if (pYellow)
    113          		{
    114          			delete pYellow;
    115          			pYellow = 0;
    116          		}
    117          		if (pRed)
    118          		{
    119          			delete pRed;
    120          			pRed = 0;
    121          		}
    122          		break;
    123          
    124          	default:
    125          		  WM_DefaultProc(pMsg);
    126          	};
    127          }
    128          
    129          /*********************************************************************
    130          *
    131          *       General Config Screen
    132          */
    133          
    134          WM_HWIN Display_GaugeScreen2(int offset, WM_HWIN hParent)
    135          {
    136          	pYellow = new Alarm(true, 250, 280, GUI_YELLOW, GUI_DARKYELLOW, NULL, NULL);
    137          	pRed = new Alarm(true, 280, 300, GUI_RED, GUI_DARKRED, pYellow, NULL);
    138          
    139          	firsttimethrough = true;
    140          
    141          	if ((hGaugeScreen2 = WM_CreateWindowAsChild(0, offset, XSIZE_PHYS, YSIZE_PHYS, hParent, WM_CF_SHOW, _cbGaugeCallback2, 0)) <= 0)
    142          		SystemError();
    143          
    144          	if ((pGauge = new Gauge(140, 45, offset, 100, 0, 300, "Oil Temp", "F", pRed, 50, 10, 0, 0, hGaugeScreen2)) <= 0)
    145          		SystemError();
    146          
    147          	// Register for data messages
    148          	RequestData(hGaugeScreen2, OIL_TEMP_MASK);
    149          
    150          	WM_InvalidateWindow(hGaugeScreen2);
    151          	return hGaugeScreen2;
    152          }
    153          
    154          /*************************** End of file ****************************/
    155          

Errors: 4
Warnings: none
