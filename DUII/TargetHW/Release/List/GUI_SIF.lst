###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:45 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SIF.c                           #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SIF.c -D DEBUG=1 -D             #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_SIF.lst                #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_SIF.o                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SIF.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_SIF.c
     19          Purpose     : Implementation of system independend fonts
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       Exported code (private)
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       GUI_SIF__GetNumCharAreas
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          int GUI_SIF__GetNumCharAreas(const GUI_FONT GUI_UNI_PTR * pFont) {
   \                     GUI_SIF__GetNumCharAreas:
   \   00000000   00402DE9           PUSH     {LR}
     42            U16 NumCharAreas;
     43            const U8 * pData;
     44            pData = (const U8 *)pFont->p.pFontData + 14;            /* Skip unused data */
   \   00000004   1C0090E5           LDR      R0,[R0, #+28]
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   0E0080E2           ADD      R0,R0,#+14
   \   00000010   00008DE5           STR      R0,[SP, #+0]
     45            NumCharAreas = GUI__Read16(&pData);
     46            return NumCharAreas;
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       GUI__Read16
   \   0000001C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000020   0080BDE8           POP      {PC}             ;; return
     47          }
     48          
     49          /*********************************************************************
     50          *
     51          *       GUI_SIF__GetpCharInfo
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          const U8 * GUI_SIF__GetpCharInfo(const GUI_FONT GUI_UNI_PTR * pFont, U16P c, unsigned SizeOfCharInfo) {
   \                     GUI_SIF__GetpCharInfo:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0070A0E1           MOV      R7,R0
     54            const U8 * pCharArea, * pCharInfo;
     55            int NumCharAreas;
     56            NumCharAreas = GUI_SIF__GetNumCharAreas(pFont);         /* Get # of char areas */
   \   00000008   1C0097E5           LDR      R0,[R7, #+28]
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0E0080E2           ADD      R0,R0,#+14
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   0140A0E1           MOV      R4,R1
   \   0000001C   0250A0E1           MOV      R5,R2
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   ........           BL       GUI__Read16
   \   00000028   0060A0E1           MOV      R6,R0
     57            pCharArea = (const U8 *)pFont->p.pFontData 
     58                        + sizeof(GUI_SI_FONT);                      /* Set char area pointer to first char area */
   \   0000002C   1C0097E5           LDR      R0,[R7, #+28]
   \   00000030   100080E2           ADD      R0,R0,#+16
   \   00000034   00008DE5           STR      R0,[SP, #+0]
     59            pCharInfo = pCharArea
     60                        + (U32)sizeof(GUI_SIF_CHAR_AREA) * NumCharAreas; /* Set char info pointer to first character info */
   \   00000038   067180E0           ADD      R7,R0,R6, LSL #+2
     61            do {
     62              GUI_SIF_CHAR_AREA CharArea;
     63              CharArea.First    = GUI__Read16(&pCharArea);
   \                     ??GUI_SIF__GetpCharInfo_0:
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   ........           BL       GUI__Read16
   \   00000044   0080A0E1           MOV      R8,R0
     64              CharArea.Last     = GUI__Read16(&pCharArea);
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           BL       GUI__Read16
     65              if ((c >= CharArea.First) && (c <= CharArea.Last)) {
   \   00000050   080054E1           CMP      R4,R8
   \   00000054   040050A1           CMPGE    R0,R4
     66                pCharInfo += (U32)SizeOfCharInfo * (c - CharArea.First);
     67                return pCharInfo;
   \   00000058   081044A0           SUBGE    R1,R4,R8
   \   0000005C   917520A0           MLAGE    R0,R1,R5,R7
   \   00000060   050000AA           BGE      ??GUI_SIF__GetpCharInfo_1
     68              }
     69              pCharInfo += (U32)SizeOfCharInfo * (CharArea.Last - CharArea.First + 1);
   \   00000064   080040E0           SUB      R0,R0,R8
   \   00000068   010080E2           ADD      R0,R0,#+1
   \   0000006C   907527E0           MLA      R7,R0,R5,R7
     70            } while(--NumCharAreas);
   \   00000070   016056E2           SUBS     R6,R6,#+1
   \   00000074   F0FFFF1A           BNE      ??GUI_SIF__GetpCharInfo_0
     71            return 0;
   \   00000078   0000A0E3           MOV      R0,#+0
   \                     ??GUI_SIF__GetpCharInfo_1:
   \   0000007C   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000080   F081BDE8           POP      {R4-R8,PC}       ;; return
     72          }
     73          
     74          /*********************************************************************
     75          *
     76          *       GUI_SIF__GetCharDistX
     77          */

   \                                 In section .text, align 4, keep-with-next
     78          int GUI_SIF__GetCharDistX(U16P c) {
   \                     GUI_SIF__GetCharDistX:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     79            const U8 * pCharInfo;
     80            U16 DistX = 0;
     81            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO)); /* Get pointer to char info data */
   \   00000008   ........           LDR      R0,??DataTable2
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
   \   00000010   1C8090E5           LDR      R8,[R0, #+28]
   \   00000014   0050A0E3           MOV      R5,#+0
   \   00000018   1C0098E5           LDR      R0,[R8, #+28]
   \   0000001C   0060A0E3           MOV      R6,#+0
   \   00000020   0E0080E2           ADD      R0,R0,#+14
   \   00000024   08008DE5           STR      R0,[SP, #+8]
   \   00000028   08008DE2           ADD      R0,SP,#+8
   \   0000002C   ........           BL       GUI__Read16
   \   00000030   0070A0E1           MOV      R7,R0
   \   00000034   1C0098E5           LDR      R0,[R8, #+28]
   \   00000038   0C80A0E3           MOV      R8,#+12
   \   0000003C   100080E2           ADD      R0,R0,#+16
   \   00000040   04008DE5           STR      R0,[SP, #+4]
   \   00000044   079180E0           ADD      R9,R0,R7, LSL #+2
   \                     ??GUI_SIF__GetCharDistX_0:
   \   00000048   04008DE2           ADD      R0,SP,#+4
   \   0000004C   ........           BL       GUI__Read16
   \   00000050   00A0A0E1           MOV      R10,R0
   \   00000054   04008DE2           ADD      R0,SP,#+4
   \   00000058   ........           BL       GUI__Read16
   \   0000005C   0A0054E1           CMP      R4,R10
   \   00000060   040050A1           CMPGE    R0,R4
   \   00000064   050000AA           BGE      ??GUI_SIF__GetCharDistX_1
   \   00000068   0A0040E0           SUB      R0,R0,R10
   \   0000006C   989020E0           MLA      R0,R8,R0,R9
   \   00000070   017057E2           SUBS     R7,R7,#+1
   \   00000074   0C9080E2           ADD      R9,R0,#+12
   \   00000078   F2FFFF1A           BNE      ??GUI_SIF__GetCharDistX_0
   \   0000007C   010000EA           B        ??GUI_SIF__GetCharDistX_2
   \                     ??GUI_SIF__GetCharDistX_1:
   \   00000080   0A0044E0           SUB      R0,R4,R10
   \   00000084   989025E0           MLA      R5,R8,R0,R9
   \                     ??GUI_SIF__GetCharDistX_2:
   \   00000088   00508DE5           STR      R5,[SP, #+0]
     82            if (pCharInfo) {
   \   0000008C   000055E3           CMP      R5,#+0
   \   00000090   0400000A           BEQ      ??GUI_SIF__GetCharDistX_3
     83              pCharInfo += 2;
   \   00000094   020085E2           ADD      R0,R5,#+2
   \   00000098   00008DE5           STR      R0,[SP, #+0]
     84              DistX = GUI__Read16(&pCharInfo);
   \   0000009C   0D00A0E1           MOV      R0,SP
   \   000000A0   ........           BL       GUI__Read16
   \   000000A4   0060A0E1           MOV      R6,R0
     85            }
     86            return DistX;
   \                     ??GUI_SIF__GetCharDistX_3:
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   10D08DE2           ADD      SP,SP,#+16
   \   000000B0   F087BDE8           POP      {R4-R10,PC}      ;; return
     87          }
     88          
     89          /*********************************************************************
     90          *
     91          *       GUI_SIF__GetFontInfo
     92          */

   \                                 In section .text, align 4, keep-with-next
     93          void GUI_SIF__GetFontInfo(const GUI_FONT GUI_UNI_PTR * pFont, GUI_FONTINFO * pfi) {
   \                     GUI_SIF__GetFontInfo:
   \   00000000   10402DE9           PUSH     {R4,LR}
     94            const U8 * pData;
     95            pData = (const U8 *)pFont->p.pFontData + 4 /* Skip XSize and XDist */;
   \   00000004   1C0090E5           LDR      R0,[R0, #+28]
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   040080E2           ADD      R0,R0,#+4
   \   00000010   00008DE5           STR      R0,[SP, #+0]
   \   00000014   0140A0E1           MOV      R4,R1
     96            pfi->Baseline = GUI__Read16(&pData);
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           BL       GUI__Read16
   \   00000020   0200C4E5           STRB     R0,[R4, #+2]
     97            pfi->LHeight  = GUI__Read16(&pData);
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       GUI__Read16
   \   0000002C   0300C4E5           STRB     R0,[R4, #+3]
     98            pfi->CHeight  = GUI__Read16(&pData);
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           BL       GUI__Read16
   \   00000038   0400C4E5           STRB     R0,[R4, #+4]
     99            pfi->Flags    = GUI_FONTINFO_FLAG_PROP;
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   B000C4E1           STRH     R0,[R4, #+0]
    100          }
   \   00000044   08D08DE2           ADD      SP,SP,#+8
   \   00000048   1080BDE8           POP      {R4,PC}          ;; return
    101          
    102          /*********************************************************************
    103          *
    104          *       GUI_SIF__IsInFont
    105          */

   \                                 In section .text, align 4, keep-with-next
    106          char GUI_SIF__IsInFont(const GUI_FONT GUI_UNI_PTR * pFont, U16 c) {
   \                     GUI_SIF__IsInFont:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
    107            const U8 * pCharInfo;
    108            GUI_USE_PARA(pFont);
    109            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO));
   \   00000004   ........           LDR      R0,??DataTable2
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   1C6090E5           LDR      R6,[R0, #+28]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   1C0096E5           LDR      R0,[R6, #+28]
   \   00000018   0E0080E2           ADD      R0,R0,#+14
   \   0000001C   04008DE5           STR      R0,[SP, #+4]
   \   00000020   04008DE2           ADD      R0,SP,#+4
   \   00000024   ........           BL       GUI__Read16
   \   00000028   0050A0E1           MOV      R5,R0
   \   0000002C   1C0096E5           LDR      R0,[R6, #+28]
   \   00000030   0C70A0E3           MOV      R7,#+12
   \   00000034   100080E2           ADD      R0,R0,#+16
   \   00000038   00008DE5           STR      R0,[SP, #+0]
   \   0000003C   056180E0           ADD      R6,R0,R5, LSL #+2
   \                     ??GUI_SIF__IsInFont_0:
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           BL       GUI__Read16
   \   00000048   0080A0E1           MOV      R8,R0
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           BL       GUI__Read16
   \   00000054   080054E1           CMP      R4,R8
   \   00000058   040050A1           CMPGE    R0,R4
   \   0000005C   080000AA           BGE      ??GUI_SIF__IsInFont_1
   \   00000060   080040E0           SUB      R0,R0,R8
   \   00000064   976020E0           MLA      R0,R7,R0,R6
   \   00000068   015055E2           SUBS     R5,R5,#+1
   \   0000006C   0C6080E2           ADD      R6,R0,#+12
   \   00000070   F2FFFF1A           BNE      ??GUI_SIF__IsInFont_0
   \   00000074   0000A0E3           MOV      R0,#+0
   \                     ??GUI_SIF__IsInFont_2:
   \   00000078   FF0000E2           AND      R0,R0,#0xFF
   \   0000007C   08D08DE2           ADD      SP,SP,#+8
   \   00000080   F081BDE8           POP      {R4-R8,PC}       ;; return
    110            return (pCharInfo) ? 1 : 0;
   \                     ??GUI_SIF__IsInFont_1:
   \   00000084   080044E0           SUB      R0,R4,R8
   \   00000088   976020E0           MLA      R0,R7,R0,R6
   \   0000008C   000050E3           CMP      R0,#+0
   \   00000090   F8FFFF0A           BEQ      ??GUI_SIF__IsInFont_2
   \   00000094   0100A0E3           MOV      R0,#+1
   \   00000098   F6FFFFEA           B        ??GUI_SIF__IsInFont_2
    111          }
    112          
    113          /*********************************************************************
    114          *
    115          *       Exported code (public)
    116          *
    117          **********************************************************************
    118          */
    119          /*********************************************************************
    120          *
    121          *       GUI_SIF_CreateFont
    122          */

   \                                 In section .text, align 4, keep-with-next
    123          void GUI_SIF_CreateFont(const void * pFontData, GUI_FONT * pFont, const GUI_SIF_TYPE * pFontType) {
   \                     GUI_SIF_CreateFont:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0140A0E1           MOV      R4,R1
    124            const U8 * pSrc = (const U8 *)pFontData;
   \   0000000C   00008DE5           STR      R0,[SP, #+0]
    125            U32 ID;
    126            /* Set pFontData of GUI_FONT structure to the first byte */
    127            pFont->p.pFontData = pFontData;
   \   00000010   1C0084E5           STR      R0,[R4, #+28]
   \   00000014   0250A0E1           MOV      R5,R2
    128            /* Check ID */
    129            ID = GUI__Read32(&pSrc);
    130            if (ID != 0x50495547) { /* 'GUIP' */
   \   00000018   0D00A0E1           MOV      R0,SP
   \   0000001C   ........           BL       GUI__Read32
   \   00000020   ........           LDR      R1,??DataTable2_1  ;; 0x50495547
   \   00000024   010050E1           CMP      R0,R1
   \   00000028   1F00001A           BNE      ??GUI_SIF_CreateFont_0
    131              GUI_DEBUG_ERROROUT("ID of downloaded font wrong!");
    132              return;
    133            }
    134            /* Read properties of the font */
    135            pFont->YSize    = GUI__Read16(&pSrc);
   \   0000002C   0D00A0E1           MOV      R0,SP
   \   00000030   ........           BL       GUI__Read16
   \   00000034   1800C4E5           STRB     R0,[R4, #+24]
    136            pFont->YDist    = GUI__Read16(&pSrc);
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           BL       GUI__Read16
   \   00000040   1900C4E5           STRB     R0,[R4, #+25]
    137            pFont->Baseline = GUI__Read16(&pSrc);
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           BL       GUI__Read16
   \   0000004C   2000C4E5           STRB     R0,[R4, #+32]
    138            pFont->LHeight  = GUI__Read16(&pSrc);
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       GUI__Read16
   \   00000058   2100C4E5           STRB     R0,[R4, #+33]
    139            pFont->CHeight  = GUI__Read16(&pSrc);
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           BL       GUI__Read16
   \   00000064   2200C4E5           STRB     R0,[R4, #+34]
    140            /* Magnification is always 1 */
    141            pFont->XMag = 1;
   \   00000068   0100A0E3           MOV      R0,#+1
   \   0000006C   1A00C4E5           STRB     R0,[R4, #+26]
    142            pFont->YMag = 1;
   \   00000070   1B00C4E5           STRB     R0,[R4, #+27]
    143            /* Set function pointers */
    144            pFont->pfDispChar     = pFontType->pfDispChar;
   \   00000074   000095E5           LDR      R0,[R5, #+0]
   \   00000078   000084E5           STR      R0,[R4, #+0]
    145            pFont->pfGetCharDistX = pFontType->pfGetCharDistX;
   \   0000007C   040095E5           LDR      R0,[R5, #+4]
   \   00000080   040084E5           STR      R0,[R4, #+4]
    146            pFont->pfGetFontInfo  = pFontType->pfGetFontInfo;
   \   00000084   080095E5           LDR      R0,[R5, #+8]
   \   00000088   080084E5           STR      R0,[R4, #+8]
    147            pFont->pfIsInFont     = pFontType->pfIsInFont;
   \   0000008C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000090   0C0084E5           STR      R0,[R4, #+12]
    148            pFont->pfGetCharInfo  = pFontType->pfGetCharInfo;
   \   00000094   100095E5           LDR      R0,[R5, #+16]
   \   00000098   100084E5           STR      R0,[R4, #+16]
    149            pFont->pafEncode      = pFontType->pafEncode;
   \   0000009C   140095E5           LDR      R0,[R5, #+20]
   \   000000A0   140084E5           STR      R0,[R4, #+20]
    150            /* Use the new font */
    151            GUI_SetFont(pFont);
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   ........           BL       GUI_SetFont
    152          }
   \                     ??GUI_SIF_CreateFont_0:
   \   000000AC   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000B0   3080BDE8           POP      {R4,R5,PC}       ;; return
    153          
    154          /*********************************************************************
    155          *
    156          *       GUI_SIF_DeleteFont
    157          */

   \                                 In section .text, align 4, keep-with-next
    158          void GUI_SIF_DeleteFont(GUI_FONT * pFont) {
    159            GUI_USE_PARA(pFont);
    160          }
   \                     GUI_SIF_DeleteFont:
   \   00000000   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   47554950           DC32     0x50495547

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GUI_SIF_CreateFont           16
     GUI_SIF_DeleteFont            0
     GUI_SIF__GetCharDistX        48
     GUI_SIF__GetFontInfo         16
     GUI_SIF__GetNumCharAreas      8
     GUI_SIF__GetpCharInfo        32
     GUI_SIF__IsInFont            32


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     GUI_SIF__GetNumCharAreas   36
     GUI_SIF__GetpCharInfo     132
     GUI_SIF__GetCharDistX     180
     GUI_SIF__GetFontInfo       76
     GUI_SIF__IsInFont         156
     GUI_SIF_CreateFont        180
     GUI_SIF_DeleteFont          4
     ??DataTable2                4
     ??DataTable2_1              4

 
 772 bytes in section .text
 
 772 bytes of CODE memory

Errors: none
Warnings: none
