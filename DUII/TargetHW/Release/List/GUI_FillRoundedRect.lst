###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:54 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_FillRoundedRect.c               #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_FillRoundedRect.c -D DEBUG=1    #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_FillRoundedRect.lst    #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_FillRoundedRect.o       #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_FillRoundedRect.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_FillRoundedRect.c
     19          Purpose     : Implementation of GUI_FillRoundedRect
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <math.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _FillRoundedRect
     36          */
     37          static void _FillRoundedRect(int x0, int y0, int x1, int y1, int r) {
     38          #if defined(GUI_OPTIMIZE_ROUNDING)
     39          
     40            I32 rr;
     41            int y, x, xs, xe, MinSize;
     42          
     43            MinSize = ((y1 - y0 + 1) < (x1 - x0 + 1)) ? y1 - y0 + 1 : x1 - x0 + 1;
     44            if (MinSize < ((r - 2) << 1)) {
     45              r = (MinSize >> 1) + 1;
     46            }
     47            rr = (I32)r * r;
     48            if (r > 0) {
     49              for (y = r - 1; y; y--) {
     50                x = GUI__sqrt32(rr - (I32)y * y);
     51                xs = x0 + r - x - 1;
     52                xe = x1 - r + x + 1;
     53                LCD_DrawHLine(xs, y0 + (r - y) - 1, xe);
     54                LCD_DrawHLine(xs, y1 - (r - y) + 1, xe);
     55              }
     56            }
     57            LCD_FillRect(x0, y0 + r - 1, x1, y1 - r + 1);
     58          
     59            #else
     60          
     61            I32 rr;
     62            int i, y, x, xs, xe;
     63          
     64            if (((y1 - y0 + 1) >= (r << 1)) && ((x1 - x0 + 1) >= (r << 1))) {
     65              rr = (I32)r * r;
     66              y  = r;
     67              for (i = y0; i <= (y0 + r); i++, y--) {
     68                x = GUI__sqrt32(rr - (I32)y * y);
     69                xs = x0 + r - x;
     70                xe = x1 - r + x;
     71                LCD_DrawHLine(xs, i,               xe);
     72                LCD_DrawHLine(xs, (y1 - (i - y0)), xe);
     73              }
     74              LCD_FillRect(x0, i, x1, y1 - r - 1);
     75            }
     76          
     77            #endif
     78          }
     79          
     80          /*********************************************************************
     81          *
     82          *       Public code
     83          *
     84          **********************************************************************
     85          */
     86          /*********************************************************************
     87          *
     88          *       GUI_FillRoundedRect
     89          */

   \                                 In section .text, align 4, keep-with-next
     90          void GUI_FillRoundedRect(int x0, int y0, int x1, int y1, int r) {
   \                     GUI_FillRoundedRect:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
   \   00000018   48409DE5           LDR      R4,[SP, #+72]
     91            #if (GUI_WINSUPPORT)
     92              GUI_RECT Rect;
     93            #endif
     94            GUI_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     95            #if (GUI_WINSUPPORT)
     96              WM_ADDORG(x0,y0);
   \   00000020   ........           LDR      R0,??DataTable0
   \   00000024   401090E5           LDR      R1,[R0, #+64]
   \   00000028   440090E5           LDR      R0,[R0, #+68]
   \   0000002C   083081E0           ADD      R3,R1,R8
     97              WM_ADDORG(x1,y1);
   \   00000030   061081E0           ADD      R1,R1,R6
   \   00000034   0C308DE5           STR      R3,[SP, #+12]
   \   00000038   04108DE5           STR      R1,[SP, #+4]
     98              Rect.x0 = x0; Rect.x1 = x1;
   \   0000003C   0C109DE5           LDR      R1,[SP, #+12]
   \   00000040   053080E0           ADD      R3,R0,R5
   \   00000044   B011CDE1           STRH     R1,[SP, #+16]
   \   00000048   04109DE5           LDR      R1,[SP, #+4]
   \   0000004C   08308DE5           STR      R3,[SP, #+8]
   \   00000050   B411CDE1           STRH     R1,[SP, #+20]
     99              Rect.y0 = y0; Rect.y1 = y1;
   \   00000054   08109DE5           LDR      R1,[SP, #+8]
   \   00000058   070080E0           ADD      R0,R0,R7
   \   0000005C   00008DE5           STR      R0,[SP, #+0]
   \   00000060   B211CDE1           STRH     R1,[SP, #+18]
   \   00000064   00109DE5           LDR      R1,[SP, #+0]
    100              WM_ITERATE_START(&Rect); {
   \   00000068   10008DE2           ADD      R0,SP,#+16
   \   0000006C   B611CDE1           STRH     R1,[SP, #+22]
   \   00000070   ........           BL       WM__InitIVRSearch
   \   00000074   000050E3           CMP      R0,#+0
   \   00000078   3600000A           BEQ      ??GUI_FillRoundedRect_0
    101            #endif
    102            _FillRoundedRect(x0, y0, x1, y1, r);
   \                     ??GUI_FillRoundedRect_1:
   \   0000007C   00109DE5           LDR      R1,[SP, #+0]
   \   00000080   08209DE5           LDR      R2,[SP, #+8]
   \   00000084   021041E0           SUB      R1,R1,R2
   \   00000088   011081E2           ADD      R1,R1,#+1
   \   0000008C   840051E1           CMP      R1,R4, LSL #+1
   \   00000090   2D0000BA           BLT      ??GUI_FillRoundedRect_2
   \   00000094   04109DE5           LDR      R1,[SP, #+4]
   \   00000098   0C209DE5           LDR      R2,[SP, #+12]
   \   0000009C   021041E0           SUB      R1,R1,R2
   \   000000A0   011081E2           ADD      R1,R1,#+1
   \   000000A4   840051E1           CMP      R1,R4, LSL #+1
   \   000000A8   270000BA           BLT      ??GUI_FillRoundedRect_2
   \   000000AC   940401E0           MUL      R1,R4,R4
   \   000000B0   08609DE5           LDR      R6,[SP, #+8]
   \   000000B4   1C108DE5           STR      R1,[SP, #+28]
   \   000000B8   067084E0           ADD      R7,R4,R6
   \   000000BC   0450A0E1           MOV      R5,R4
   \   000000C0   060057E1           CMP      R7,R6
   \   000000C4   190000BA           BLT      ??GUI_FillRoundedRect_3
   \   000000C8   04109DE5           LDR      R1,[SP, #+4]
   \   000000CC   0C009DE5           LDR      R0,[SP, #+12]
   \   000000D0   041041E0           SUB      R1,R1,R4
   \   000000D4   00809DE5           LDR      R8,[SP, #+0]
   \   000000D8   18108DE5           STR      R1,[SP, #+24]
   \   000000DC   009084E0           ADD      R9,R4,R0
   \                     ??GUI_FillRoundedRect_4:
   \   000000E0   950501E0           MUL      R1,R5,R5
   \   000000E4   1C009DE5           LDR      R0,[SP, #+28]
   \   000000E8   010040E0           SUB      R0,R0,R1
   \   000000EC   ........           BL       GUI__sqrt32
   \   000000F0   18109DE5           LDR      R1,[SP, #+24]
   \   000000F4   00A049E0           SUB      R10,R9,R0
   \   000000F8   01B080E0           ADD      R11,R0,R1
   \   000000FC   0B20A0E1           MOV      R2,R11
   \   00000100   0610A0E1           MOV      R1,R6
   \   00000104   0A00A0E1           MOV      R0,R10
   \   00000108   ........           BL       LCD_DrawHLine
   \   0000010C   0B20A0E1           MOV      R2,R11
   \   00000110   0810A0E1           MOV      R1,R8
   \   00000114   0A00A0E1           MOV      R0,R10
   \   00000118   ........           BL       LCD_DrawHLine
   \   0000011C   016086E2           ADD      R6,R6,#+1
   \   00000120   015045E2           SUB      R5,R5,#+1
   \   00000124   018048E2           SUB      R8,R8,#+1
   \   00000128   060057E1           CMP      R7,R6
   \   0000012C   EBFFFFAA           BGE      ??GUI_FillRoundedRect_4
   \                     ??GUI_FillRoundedRect_3:
   \   00000130   00009DE5           LDR      R0,[SP, #+0]
   \   00000134   04209DE5           LDR      R2,[SP, #+4]
   \   00000138   040040E0           SUB      R0,R0,R4
   \   0000013C   013040E2           SUB      R3,R0,#+1
   \   00000140   0610A0E1           MOV      R1,R6
   \   00000144   0C009DE5           LDR      R0,[SP, #+12]
   \   00000148   ........           BL       LCD_FillRect
    103            #if (GUI_WINSUPPORT)
    104              } WM_ITERATE_END();
   \                     ??GUI_FillRoundedRect_2:
   \   0000014C   ........           BL       WM__GetNextIVR
   \   00000150   000050E3           CMP      R0,#+0
   \   00000154   C8FFFF1A           BNE      ??GUI_FillRoundedRect_1
    105            #endif
    106            GUI_UNLOCK();
   \                     ??GUI_FillRoundedRect_0:
   \   00000158   ........           BL       GUI_Unlock
    107          }
   \   0000015C   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000160   F08FBDE8           POP      {R4-R11,PC}      ;; return
    108          
    109          /*********************************************************************
    110          *
    111          *       GUI_FillRoundedFrame
    112          */

   \                                 In section .text, align 4, keep-with-next
    113          void GUI_FillRoundedFrame(int x0, int y0, int x1, int y1, int r, int w) {
   \                     GUI_FillRoundedFrame:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   08C09DE5           LDR      R12,[SP, #+8]
   \   0000000C   0CE09DE5           LDR      LR,[SP, #+12]
    114            GUI_FillRoundedRect(x0 + w, y0 + w, x1 - w, y1 - w, r - w);
   \   00000010   0EC04CE0           SUB      R12,R12,LR
   \   00000014   00C08DE5           STR      R12,[SP, #+0]
   \   00000018   0E3043E0           SUB      R3,R3,LR
   \   0000001C   0E2042E0           SUB      R2,R2,LR
   \   00000020   01108EE0           ADD      R1,LR,R1
   \   00000024   00008EE0           ADD      R0,LR,R0
   \   00000028   ........           BL       GUI_FillRoundedRect
    115          }
   \   0000002C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GUI_Context
    116          
    117          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_FillRoundedFrame      8
     GUI_FillRoundedRect      72


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     GUI_FillRoundedRect   356
     GUI_FillRoundedFrame   52
     ??DataTable0            4

 
 412 bytes in section .text
 
 412 bytes of CODE memory

Errors: none
Warnings: none
