###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:05 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\CHECKBOX_Default.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\CHECKBOX_Default.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\CHECKBOX_Default.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\CHECKBOX_Default.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\CHECKBOX_Default.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : CHECKBOX_Default.c
     19          Purpose     : Implementation of checkbox widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "CHECKBOX_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Exported routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       CHECKBOX_SetDefaultSpacing
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void CHECKBOX_SetDefaultSpacing(int Spacing) {
     38            CHECKBOX__DefaultProps.Spacing = Spacing;
   \                     CHECKBOX_SetDefaultSpacing:
   \   00000000   ........           LDR      R1,??DataTable10
   \   00000004   2200C1E5           STRB     R0,[R1, #+34]
     39          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     40          
     41          /*********************************************************************
     42          *
     43          *       CHECKBOX_SetDefaultFocusColor
     44          */

   \                                 In section .text, align 4, keep-with-next
     45          GUI_COLOR CHECKBOX_SetDefaultFocusColor(GUI_COLOR Color) {
     46            GUI_COLOR OldColor = CHECKBOX__DefaultProps.FocusColor;
   \                     CHECKBOX_SetDefaultFocusColor:
   \   00000000   ........           LDR      R2,??DataTable10
   \   00000004   141092E5           LDR      R1,[R2, #+20]
     47            CHECKBOX__DefaultProps.FocusColor = Color;
   \   00000008   140082E5           STR      R0,[R2, #+20]
     48            return OldColor;
   \   0000000C   0100A0E1           MOV      R0,R1
   \   00000010   1EFF2FE1           BX       LR               ;; return
     49          }
     50          
     51          /*********************************************************************
     52          *
     53          *       CHECKBOX_SetDefaultTextColor
     54          */

   \                                 In section .text, align 4, keep-with-next
     55          void CHECKBOX_SetDefaultTextColor(GUI_COLOR Color) {
     56            CHECKBOX__DefaultProps.TextColor = Color;
   \                     CHECKBOX_SetDefaultTextColor:
   \   00000000   ........           LDR      R1,??DataTable10
   \   00000004   100081E5           STR      R0,[R1, #+16]
     57          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     58          
     59          /*********************************************************************
     60          *
     61          *       CHECKBOX_SetDefaultBkColor
     62          */

   \                                 In section .text, align 4, keep-with-next
     63          void CHECKBOX_SetDefaultBkColor(GUI_COLOR Color) {
     64            CHECKBOX__DefaultProps.BkColor = Color;
   \                     CHECKBOX_SetDefaultBkColor:
   \   00000000   ........           LDR      R1,??DataTable10
   \   00000004   0C0081E5           STR      R0,[R1, #+12]
     65          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     66          
     67          /*********************************************************************
     68          *
     69          *       CHECKBOX_SetDefaultFont
     70          */

   \                                 In section .text, align 4, keep-with-next
     71          void CHECKBOX_SetDefaultFont(const GUI_FONT GUI_UNI_PTR * pFont) {
     72            CHECKBOX__DefaultProps.pFont = pFont;
   \                     CHECKBOX_SetDefaultFont:
   \   00000000   ........           LDR      R1,??DataTable10
   \   00000004   000081E5           STR      R0,[R1, #+0]
     73          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     74          
     75          /*********************************************************************
     76          *
     77          *       CHECKBOX_SetDefaultAlign
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          void CHECKBOX_SetDefaultAlign(int Align) {
     80            CHECKBOX__DefaultProps.Align = Align;
   \                     CHECKBOX_SetDefaultAlign:
   \   00000000   ........           LDR      R1,??DataTable10
   \   00000004   B002C1E1           STRH     R0,[R1, #+32]
     81          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     82          
     83          /*********************************************************************
     84          *
     85          *       CHECKBOX_GetDefaultSpacing
     86          */

   \                                 In section .text, align 4, keep-with-next
     87          int CHECKBOX_GetDefaultSpacing(void) {
     88            return CHECKBOX__DefaultProps.Spacing;
   \                     CHECKBOX_GetDefaultSpacing:
   \   00000000   ........           LDR      R0,??DataTable10
   \   00000004   2200D0E5           LDRB     R0,[R0, #+34]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     89          }
     90          
     91          /*********************************************************************
     92          *
     93          *       CHECKBOX_GetDefaultTextColor
     94          */

   \                                 In section .text, align 4, keep-with-next
     95          GUI_COLOR CHECKBOX_GetDefaultTextColor(void) {
     96            return CHECKBOX__DefaultProps.TextColor;
   \                     CHECKBOX_GetDefaultTextColor:
   \   00000000   ........           LDR      R0,??DataTable10
   \   00000004   100090E5           LDR      R0,[R0, #+16]
   \   00000008   1EFF2FE1           BX       LR               ;; return
     97          }
     98          
     99          /*********************************************************************
    100          *
    101          *       CHECKBOX_GetDefaultBkColor
    102          */

   \                                 In section .text, align 4, keep-with-next
    103          GUI_COLOR CHECKBOX_GetDefaultBkColor(void) {
    104            return CHECKBOX__DefaultProps.BkColor;
   \                     CHECKBOX_GetDefaultBkColor:
   \   00000000   ........           LDR      R0,??DataTable10
   \   00000004   0C0090E5           LDR      R0,[R0, #+12]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    105          }
    106          
    107          /*********************************************************************
    108          *
    109          *       CHECKBOX_GetDefaultFont
    110          */

   \                                 In section .text, align 4, keep-with-next
    111          const GUI_FONT GUI_UNI_PTR * CHECKBOX_GetDefaultFont(void) {
    112            return CHECKBOX__DefaultProps.pFont;
   \                     CHECKBOX_GetDefaultFont:
   \   00000000   ........           LDR      R0,??DataTable10
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    113          }
    114          
    115          /*********************************************************************
    116          *
    117          *       CHECKBOX_GetDefaultAlign
    118          */

   \                                 In section .text, align 4, keep-with-next
    119          int CHECKBOX_GetDefaultAlign(void) {
    120            return CHECKBOX__DefaultProps.Align;
   \                     CHECKBOX_GetDefaultAlign:
   \   00000000   ........           LDR      R0,??DataTable10
   \   00000004   F002D0E1           LDRSH    R0,[R0, #+32]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    121          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   ........           DC32     CHECKBOX__DefaultProps
    122          
    123          #else                            /* Avoid problems with empty object modules */
    124            void CHECKBOX_Default_C(void);
    125            void CHECKBOX_Default_C(void) {}
    126          #endif
    127          

   Maximum stack usage in bytes:

     Function                      .cstack
     --------                      -------
     CHECKBOX_GetDefaultAlign           0
     CHECKBOX_GetDefaultBkColor         0
     CHECKBOX_GetDefaultFont            0
     CHECKBOX_GetDefaultSpacing         0
     CHECKBOX_GetDefaultTextColor       0
     CHECKBOX_SetDefaultAlign           0
     CHECKBOX_SetDefaultBkColor         0
     CHECKBOX_SetDefaultFocusColor      0
     CHECKBOX_SetDefaultFont            0
     CHECKBOX_SetDefaultSpacing         0
     CHECKBOX_SetDefaultTextColor       0


   Section sizes:

     Function/Label                Bytes
     --------------                -----
     CHECKBOX_SetDefaultSpacing      12
     CHECKBOX_SetDefaultFocusColor   20
     CHECKBOX_SetDefaultTextColor    12
     CHECKBOX_SetDefaultBkColor      12
     CHECKBOX_SetDefaultFont         12
     CHECKBOX_SetDefaultAlign        12
     CHECKBOX_GetDefaultSpacing      12
     CHECKBOX_GetDefaultTextColor    12
     CHECKBOX_GetDefaultBkColor      12
     CHECKBOX_GetDefaultFont         12
     CHECKBOX_GetDefaultAlign        12
     ??DataTable10                    4

 
 144 bytes in section .text
 
 144 bytes of CODE memory

Errors: none
Warnings: none
