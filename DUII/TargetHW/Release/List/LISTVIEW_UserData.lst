###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:35 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_UserData.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_UserData.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\LISTVIEW_UserData.lst      #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\LISTVIEW_UserData.o         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_UserData.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_UserData.c
     19          Purpose     : Implementation of LISTVIEW_SetUserData() and LISTVIEW_GetUserData()
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "LISTVIEW_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Public routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       LISTVIEW_SetUserData
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void LISTVIEW_SetUserData(LISTVIEW_Handle hObj, unsigned Row, U32 UserData) {
   \                     LISTVIEW_SetUserData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
     38            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??LISTVIEW_SetUserData_0
     39              LISTVIEW_Obj* pObj;
     40              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     41              pObj = LISTVIEW_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0040A0E1           MOV      R4,R0
     42              if (Row < LISTVIEW__GetNumRows(pObj)) {
   \   00000028   ........           BL       LISTVIEW__GetNumRows
   \   0000002C   000055E1           CMP      R5,R0
   \   00000030   0400002A           BCS      ??LISTVIEW_SetUserData_1
     43                LISTVIEW_ROW * pRow;
     44                pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, Row);
     45                pRow->UserData = UserData;
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   380094E5           LDR      R0,[R4, #+56]
   \   0000003C   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000040   086080E5           STR      R6,[R0, #+8]
     46                GUI_UNLOCK_H(pRow);
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
     47              }
     48              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_SetUserData_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
     49              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
     50            }
     51          }
   \                     ??LISTVIEW_SetUserData_0:
   \   00000050   7080BDE8           POP      {R4-R6,PC}       ;; return
     52          
     53          /*********************************************************************
     54          *
     55          *       LISTVIEW_GetUserData
     56          */

   \                                 In section .text, align 4, keep-with-next
     57          U32 LISTVIEW_GetUserData(LISTVIEW_Handle hObj, unsigned Row) {
   \                     LISTVIEW_GetUserData:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     58            U32 UserData;
     59            UserData = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
     60            if (hObj) {
   \   00000010   000054E3           CMP      R4,#+0
   \   00000014   0D00000A           BEQ      ??LISTVIEW_GetUserData_0
     61              LISTVIEW_Obj* pObj;
     62              WM_LOCK();
   \   00000018   ........           BL       GUI_Lock
     63              pObj = LISTVIEW_LOCK_H(hObj);
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_LockH
   \   00000024   0040A0E1           MOV      R4,R0
     64              if (Row < LISTVIEW__GetNumRows(pObj)) {
   \   00000028   ........           BL       LISTVIEW__GetNumRows
   \   0000002C   000055E1           CMP      R5,R0
   \   00000030   0400002A           BCS      ??LISTVIEW_GetUserData_1
     65                LISTVIEW_ROW * pRow;
     66                pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, Row);
     67                UserData = pRow->UserData;
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   380094E5           LDR      R0,[R4, #+56]
   \   0000003C   ........           BL       GUI_ARRAY_GetpItemLocked
   \   00000040   086090E5           LDR      R6,[R0, #+8]
     68                GUI_UNLOCK_H(pRow);
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
     69              }
     70              GUI_UNLOCK_H(pObj);
   \                     ??LISTVIEW_GetUserData_1:
   \   00000048   ........           BL       GUI_ALLOC_UnlockH
     71              WM_UNLOCK();
   \   0000004C   ........           BL       GUI_Unlock
     72            }
     73            return UserData;
   \                     ??LISTVIEW_GetUserData_0:
   \   00000050   0600A0E1           MOV      R0,R6
   \   00000054   7080BDE8           POP      {R4-R6,PC}       ;; return
     74          }
     75          
     76          #else                            /* Avoid problems with empty object modules */
     77            void LISTVIEW_UserData_C(void);
     78            void LISTVIEW_UserData_C(void) {}
     79          #endif
     80          
     81          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     LISTVIEW_GetUserData     16
     LISTVIEW_SetUserData     16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     LISTVIEW_SetUserData   84
     LISTVIEW_GetUserData   88

 
 172 bytes in section .text
 
 172 bytes of CODE memory

Errors: none
Warnings: none
