###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:04 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_ARRAY_DeleteItem.c              #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_ARRAY_DeleteItem.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_ARRAY_DeleteItem.lst   #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_ARRAY_DeleteItem.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_ARRAY_DeleteItem.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_ARRAY_DeleteItem.c
     19          Purpose     : Array handling routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GUI_ARRAY_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       public code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       GUI_ARRAY_DeleteItem
     38          *
     39          * Purpose:
     40          *   Eliminate one element in a GUI_ARRAY_OBJ.
     41          *   This means:
     42          *     - freeing the memory block
     43          *     - moving the last item to the position of the deleted item
     44          *     - possible reducing the size of the memory used for management (opt)
     45          *
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          void GUI_ARRAY_DeleteItem(GUI_ARRAY hArray, unsigned int Index) {
   \                     GUI_ARRAY_DeleteItem:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
     48            GUI_ARRAY_OBJ * pThis;
     49            WM_HMEM   ha;
     50            WM_HMEM * pa;
     51            int i;
     52          
     53            pThis = (GUI_ARRAY_OBJ *)GUI_LOCK_H(hArray);
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   0050A0E1           MOV      R5,R0
     54            if (Index < (unsigned)pThis->NumItems) {
   \   00000010   B000D5E1           LDRH     R0,[R5, #+0]
   \   00000014   000054E1           CMP      R4,R0
   \   00000018   1800002A           BCS      ??GUI_ARRAY_DeleteItem_0
     55              ha = pThis->haHandle;
   \   0000001C   046095E5           LDR      R6,[R5, #+4]
     56              if (ha) {
   \   00000020   000056E3           CMP      R6,#+0
   \   00000024   1500000A           BEQ      ??GUI_ARRAY_DeleteItem_0
     57                int NumItems;
     58                WM_LOCK();
   \   00000028   ........           BL       GUI_Lock
     59                pa = (WM_HMEM *)GUI_LOCK_H(ha);
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       GUI_ALLOC_LockH
   \   00000034   0060A0E1           MOV      R6,R0
     60                /* Free the attached item */
     61                GUI_ALLOC_FreePtr(pa + Index);
   \   00000038   040186E0           ADD      R0,R6,R4, LSL #+2
   \   0000003C   ........           BL       GUI_ALLOC_FreePtr
     62                /* Move the last items to the position of the deleted item */
     63                NumItems = --pThis->NumItems;
   \   00000040   B000D5E1           LDRH     R0,[R5, #+0]
   \   00000044   010040E2           SUB      R0,R0,#+1
   \   00000048   B000C5E1           STRH     R0,[R5, #+0]
   \   0000004C   0008A0E1           LSL      R0,R0,#+16
   \   00000050   2008A0E1           LSR      R0,R0,#+16
     64                for (i = Index; i <= NumItems - 1; i++) {
   \   00000054   010040E2           SUB      R0,R0,#+1
   \   00000058   040050E1           CMP      R0,R4
   \   0000005C   050000BA           BLT      ??GUI_ARRAY_DeleteItem_1
   \   00000060   041186E0           ADD      R1,R6,R4, LSL #+2
     65                  *(pa + i) = *(pa + i + 1);
   \                     ??GUI_ARRAY_DeleteItem_2:
   \   00000064   042091E5           LDR      R2,[R1, #+4]
     66                }
   \   00000068   014084E2           ADD      R4,R4,#+1
   \   0000006C   042081E4           STR      R2,[R1], #+4
   \   00000070   040050E1           CMP      R0,R4
   \   00000074   FAFFFFAA           BGE      ??GUI_ARRAY_DeleteItem_2
     67                GUI_UNLOCK_H(pa);
   \                     ??GUI_ARRAY_DeleteItem_1:
   \   00000078   ........           BL       GUI_ALLOC_UnlockH
     68                WM_UNLOCK();
   \   0000007C   ........           BL       GUI_Unlock
     69              }
     70            }
     71            GUI_UNLOCK_H(pThis);
   \                     ??GUI_ARRAY_DeleteItem_0:
   \   00000080   7040BDE8           POP      {R4-R6,LR}
   \   00000084   ........           B        GUI_ALLOC_UnlockH  ;; tailcall
     72          }
     73          
     74          #else
     75          
     76          void GUI_ARRAY_DeleteItem(void) {}
     77          
     78          #endif

   Maximum stack usage in bytes:

     Function             .cstack
     --------             -------
     GUI_ARRAY_DeleteItem     16


   Section sizes:

     Function/Label       Bytes
     --------------       -----
     GUI_ARRAY_DeleteItem  136

 
 136 bytes in section .text
 
 136 bytes of CODE memory

Errors: none
Warnings: none
