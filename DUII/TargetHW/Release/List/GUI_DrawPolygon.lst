###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:13:09 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawPolygon.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawPolygon.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_DrawPolygon.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_DrawPolygon.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawPolygon.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawPolygon.C
     19          Purpose     : Implementation of polygon drawing routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       GL_DrawPolygon
     28          */

   \                                 In section .text, align 4, keep-with-next
     29          void GL_DrawPolygon(const GUI_POINT*pPoints, int NumPoints, int x0, int y0) {
   \                     GL_DrawPolygon:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0070A0E1           MOV      R7,R0
     30            const GUI_POINT* pPoint = pPoints;
   \   00000008   0760A0E1           MOV      R6,R7
     31            GL_MoveTo(pPoint->x+x0, pPoint->y+y0);
   \   0000000C   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000010   0180A0E1           MOV      R8,R1
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   001085E0           ADD      R1,R5,R0
   \   0000001C   F000D6E1           LDRSH    R0,[R6, #+0]
   \   00000020   0240A0E1           MOV      R4,R2
   \   00000024   000084E0           ADD      R0,R4,R0
   \   00000028   ........           BL       GL_MoveTo
   \   0000002C   018048E2           SUB      R8,R8,#+1
   \   00000030   010058E3           CMP      R8,#+1
   \   00000034   070000BA           BLT      ??GL_DrawPolygon_0
     32            while (--NumPoints >0) {
     33              pPoint++;
   \                     ??GL_DrawPolygon_1:
   \   00000038   046086E2           ADD      R6,R6,#+4
     34              GL_DrawLineTo(pPoint->x+x0, pPoint->y+y0);
   \   0000003C   F200D6E1           LDRSH    R0,[R6, #+2]
   \   00000040   001085E0           ADD      R1,R5,R0
   \   00000044   F000D6E1           LDRSH    R0,[R6, #+0]
   \   00000048   000084E0           ADD      R0,R4,R0
   \   0000004C   ........           BL       GL_DrawLineTo
   \   00000050   018058E2           SUBS     R8,R8,#+1
     35            }
   \   00000054   F7FFFF1A           BNE      ??GL_DrawPolygon_1
     36            /* Now draw closing line unless it has already been closed */
     37            if ( (pPoint->x != pPoints->x)
     38               ||(pPoint->y != pPoints->y))
   \                     ??GL_DrawPolygon_0:
   \   00000058   F020D7E1           LDRSH    R2,[R7, #+0]
   \   0000005C   F010D6E1           LDRSH    R1,[R6, #+0]
   \   00000060   F200D7E1           LDRSH    R0,[R7, #+2]
   \   00000064   020051E1           CMP      R1,R2
   \   00000068   F210D601           LDRSHEQ  R1,[R6, #+2]
   \   0000006C   00005101           CMPEQ    R1,R0
   \   00000070   0200000A           BEQ      ??GL_DrawPolygon_2
     39            {
     40              GL_DrawLineTo(pPoints->x+x0, pPoints->y+y0);
   \   00000074   001085E0           ADD      R1,R5,R0
   \   00000078   020084E0           ADD      R0,R4,R2
   \   0000007C   ........           BL       GL_DrawLineTo
     41            }
     42          }
   \                     ??GL_DrawPolygon_2:
   \   00000080   F081BDE8           POP      {R4-R8,PC}       ;; return
     43          
     44          /*********************************************************************
     45          *
     46          *       GUI_DrawPolygon
     47          */

   \                                 In section .text, align 4, keep-with-next
     48          void GUI_DrawPolygon(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
   \                     GUI_DrawPolygon:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
     49            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
     50            #if (GUI_WINSUPPORT)
     51              WM_ADDORG(x0,y0);
   \   0000001C   ........           LDR      R0,??DataTable0
   \   00000020   401090E5           LDR      R1,[R0, #+64]
   \   00000024   440090E5           LDR      R0,[R0, #+68]
   \   00000028   066081E0           ADD      R6,R1,R6
   \   0000002C   077080E0           ADD      R7,R0,R7
     52              WM_ITERATE_START(NULL); {
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   ........           BL       WM__InitIVRSearch
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1D00000A           BEQ      ??GUI_DrawPolygon_0
     53            #endif
     54            GL_DrawPolygon (pPoints, NumPoints, x0, y0);
   \                     ??GUI_DrawPolygon_1:
   \   00000040   0480A0E1           MOV      R8,R4
   \   00000044   F200D8E1           LDRSH    R0,[R8, #+2]
   \   00000048   001087E0           ADD      R1,R7,R0
   \   0000004C   F000D8E1           LDRSH    R0,[R8, #+0]
   \   00000050   000086E0           ADD      R0,R6,R0
   \   00000054   ........           BL       GL_MoveTo
   \   00000058   019045E2           SUB      R9,R5,#+1
   \   0000005C   010059E3           CMP      R9,#+1
   \   00000060   070000BA           BLT      ??GUI_DrawPolygon_2
   \                     ??GUI_DrawPolygon_3:
   \   00000064   048088E2           ADD      R8,R8,#+4
   \   00000068   F200D8E1           LDRSH    R0,[R8, #+2]
   \   0000006C   001087E0           ADD      R1,R7,R0
   \   00000070   F000D8E1           LDRSH    R0,[R8, #+0]
   \   00000074   000086E0           ADD      R0,R6,R0
   \   00000078   ........           BL       GL_DrawLineTo
   \   0000007C   019059E2           SUBS     R9,R9,#+1
   \   00000080   F7FFFF1A           BNE      ??GUI_DrawPolygon_3
   \                     ??GUI_DrawPolygon_2:
   \   00000084   F020D4E1           LDRSH    R2,[R4, #+0]
   \   00000088   F010D8E1           LDRSH    R1,[R8, #+0]
   \   0000008C   F200D4E1           LDRSH    R0,[R4, #+2]
   \   00000090   020051E1           CMP      R1,R2
   \   00000094   F210D801           LDRSHEQ  R1,[R8, #+2]
   \   00000098   00005101           CMPEQ    R1,R0
   \   0000009C   0200000A           BEQ      ??GUI_DrawPolygon_4
   \   000000A0   001087E0           ADD      R1,R7,R0
   \   000000A4   020086E0           ADD      R0,R6,R2
   \   000000A8   ........           BL       GL_DrawLineTo
     55            #if (GUI_WINSUPPORT)
     56              } WM_ITERATE_END();
   \                     ??GUI_DrawPolygon_4:
   \   000000AC   ........           BL       WM__GetNextIVR
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   E1FFFF1A           BNE      ??GUI_DrawPolygon_1
     57            #endif
     58            GUI_UNLOCK();
   \                     ??GUI_DrawPolygon_0:
   \   000000B8   04D08DE2           ADD      SP,SP,#+4
   \   000000BC   F043BDE8           POP      {R4-R9,LR}
   \   000000C0   ........           B        GUI_Unlock       ;; tailcall
     59          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   ........           DC32     GUI_Context
     60          
     61          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function        .cstack
     --------        -------
     GL_DrawPolygon      24
     GUI_DrawPolygon     32


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     GL_DrawPolygon   132
     GUI_DrawPolygon  196
     ??DataTable0       4

 
 332 bytes in section .text
 
 332 bytes of CODE memory

Errors: none
Warnings: none
