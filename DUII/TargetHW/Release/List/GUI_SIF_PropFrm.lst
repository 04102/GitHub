###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:45 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SIF_PropFrm.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SIF_PropFrm.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_SIF_PropFrm.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_SIF_PropFrm.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SIF_PropFrm.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_SIF_PropFrm.c
     19          Purpose     : Implementation of system independend fonts
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Static code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       _DispChar
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          static void _DispChar(U16P c) {
   \                     _DispChar:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
     36            U8 BytesPerLine;
     37            const U8 * pCharInfo, * pData;
     38            pCharInfo = GUI_SIF__GetpCharInfo(GUI_Context.pAFont, c, sizeof(GUI_SIF_CHARINFO_EXT));
   \   00000004   ........           LDR      R4,??DataTable1
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   24D04DE2           SUB      SP,SP,#+36
   \   00000010   1020A0E3           MOV      R2,#+16
   \   00000014   1C0094E5           LDR      R0,[R4, #+28]
   \   00000018   ........           BL       GUI_SIF__GetpCharInfo
   \   0000001C   18008DE5           STR      R0,[SP, #+24]
     39            if (pCharInfo) {
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   5600000A           BEQ      ??_DispChar_0
     40              GUI_DRAWMODE OldDrawMode;
     41              LCD_PIXELINDEX OldIndex;
     42              GUI_SIF_CHARINFO_EXT CharInfo;
     43              CharInfo.XSize        = GUI__Read16(&pCharInfo);
   \   00000028   18008DE2           ADD      R0,SP,#+24
   \   0000002C   ........           BL       GUI__Read16
   \   00000030   0050A0E1           MOV      R5,R0
     44              CharInfo.YSize        = GUI__Read16(&pCharInfo);
   \   00000034   18008DE2           ADD      R0,SP,#+24
   \   00000038   ........           BL       GUI__Read16
   \   0000003C   0060A0E1           MOV      R6,R0
     45              CharInfo.XOff         = GUI__Read16(&pCharInfo);
   \   00000040   18008DE2           ADD      R0,SP,#+24
   \   00000044   ........           BL       GUI__Read16
   \   00000048   0078A0E1           LSL      R7,R0,#+16
     46              CharInfo.YOff         = GUI__Read16(&pCharInfo);
   \   0000004C   18008DE2           ADD      R0,SP,#+24
   \   00000050   ........           BL       GUI__Read16
   \   00000054   0088A0E1           LSL      R8,R0,#+16
     47              CharInfo.XDist        = GUI__Read16(&pCharInfo);
   \   00000058   18008DE2           ADD      R0,SP,#+24
   \   0000005C   ........           BL       GUI__Read16
   \   00000060   0090A0E1           MOV      R9,R0
     48              BytesPerLine          = (CharInfo.XSize + 7) >> 3;
   \   00000064   070085E2           ADD      R0,R5,#+7
   \   00000068   C0A1A0E1           ASR      R10,R0,#+3
   \   0000006C   FFA00AE2           AND      R10,R10,#0xFF
     49                                      GUI__Read16(&pCharInfo);
   \   00000070   18008DE2           ADD      R0,SP,#+24
   \   00000074   ........           BL       GUI__Read16
     50              CharInfo.OffData      = GUI__Read32(&pCharInfo);
   \   00000078   18008DE2           ADD      R0,SP,#+24
   \   0000007C   ........           BL       GUI__Read32
     51              pData = (const U8 *)GUI_Context.pAFont->p.pFontData + CharInfo.OffData;
   \   00000080   1C1094E5           LDR      R1,[R4, #+28]
   \   00000084   1C1091E5           LDR      R1,[R1, #+28]
   \   00000088   010080E0           ADD      R0,R0,R1
   \   0000008C   1C008DE5           STR      R0,[SP, #+28]
     52              OldDrawMode  = LCD_SetDrawMode(GUI_TM_TRANS | (GUI_Context.TextMode & GUI_TM_REV));
   \   00000090   2A00D4E5           LDRB     R0,[R4, #+42]
   \   00000094   040000E2           AND      R0,R0,#0x4
   \   00000098   020080E3           ORR      R0,R0,#0x2
   \   0000009C   ........           BL       LCD_SetDrawMode
     53              LCD_DrawBitmap(GUI_Context.DispPosX + CharInfo.XOff, GUI_Context.DispPosY + CharInfo.YOff,
     54                             CharInfo.XSize,
     55          									 CharInfo.YSize,
     56                             GUI_Context.pAFont->XMag,
     57          									 GUI_Context.pAFont->YMag,
     58                             1,
     59                             BytesPerLine,
     60                             pData,
     61                             LCD_pBkColorIndex);
   \   000000A0   ........           LDR      R1,??DataTable1_1
   \   000000A4   00B0A0E1           MOV      R11,R0
   \   000000A8   001091E5           LDR      R1,[R1, #+0]
   \   000000AC   1C0094E5           LDR      R0,[R4, #+28]
   \   000000B0   14108DE5           STR      R1,[SP, #+20]
   \   000000B4   1C109DE5           LDR      R1,[SP, #+28]
   \   000000B8   0CA08DE5           STR      R10,[SP, #+12]
   \   000000BC   10108DE5           STR      R1,[SP, #+16]
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   08108DE5           STR      R1,[SP, #+8]
   \   000000C8   1B10D0E5           LDRB     R1,[R0, #+27]
   \   000000CC   0630A0E1           MOV      R3,R6
   \   000000D0   0520A0E1           MOV      R2,R5
   \   000000D4   04108DE5           STR      R1,[SP, #+4]
   \   000000D8   1A00D0E5           LDRB     R0,[R0, #+26]
   \   000000DC   00008DE5           STR      R0,[SP, #+0]
   \   000000E0   F402D4E1           LDRSH    R0,[R4, #+36]
   \   000000E4   481880E0           ADD      R1,R0,R8, ASR #+16
   \   000000E8   F202D4E1           LDRSH    R0,[R4, #+34]
   \   000000EC   470880E0           ADD      R0,R0,R7, ASR #+16
   \   000000F0   ........           BL       LCD_DrawBitmap
   \   000000F4   ........           LDR      R0,??DataTable1_2
     62              OldIndex = LCD__GetColorIndex();
     63              LCD__SetColorIndex(LCD__GetBkColorIndex());
   \   000000F8   ........           LDR      R1,??DataTable1_1
   \   000000FC   000090E5           LDR      R0,[R0, #+0]
   \   00000100   001091E5           LDR      R1,[R1, #+0]
   \   00000104   002090E5           LDR      R2,[R0, #+0]
     64              LCD_DrawBitmap(GUI_Context.DispPosX + CharInfo.XOff, GUI_Context.DispPosY + CharInfo.YOff,
     65                             CharInfo.XSize,
     66          									 CharInfo.YSize,
     67                             GUI_Context.pAFont->XMag,
     68          									 GUI_Context.pAFont->YMag,
     69                             1,
     70                             BytesPerLine,
     71                             pData + BytesPerLine * CharInfo.YSize,
     72                             LCD_pBkColorIndex);
   \   00000108   0630A0E1           MOV      R3,R6
   \   0000010C   20208DE5           STR      R2,[SP, #+32]
   \   00000110   002091E5           LDR      R2,[R1, #+0]
   \   00000114   002080E5           STR      R2,[R0, #+0]
   \   00000118   14108DE5           STR      R1,[SP, #+20]
   \   0000011C   1C109DE5           LDR      R1,[SP, #+28]
   \   00000120   961A21E0           MLA      R1,R6,R10,R1
   \   00000124   1C0094E5           LDR      R0,[R4, #+28]
   \   00000128   10108DE5           STR      R1,[SP, #+16]
   \   0000012C   0110A0E3           MOV      R1,#+1
   \   00000130   0CA08DE5           STR      R10,[SP, #+12]
   \   00000134   08108DE5           STR      R1,[SP, #+8]
   \   00000138   1B10D0E5           LDRB     R1,[R0, #+27]
   \   0000013C   0520A0E1           MOV      R2,R5
   \   00000140   04108DE5           STR      R1,[SP, #+4]
   \   00000144   1A00D0E5           LDRB     R0,[R0, #+26]
   \   00000148   00008DE5           STR      R0,[SP, #+0]
   \   0000014C   F402D4E1           LDRSH    R0,[R4, #+36]
   \   00000150   481880E0           ADD      R1,R0,R8, ASR #+16
   \   00000154   F202D4E1           LDRSH    R0,[R4, #+34]
   \   00000158   470880E0           ADD      R0,R0,R7, ASR #+16
   \   0000015C   ........           BL       LCD_DrawBitmap
     73              LCD__SetColorIndex(OldIndex);
   \   00000160   ........           LDR      R0,??DataTable1_2
   \   00000164   20109DE5           LDR      R1,[SP, #+32]
   \   00000168   000090E5           LDR      R0,[R0, #+0]
   \   0000016C   001080E5           STR      R1,[R0, #+0]
     74              LCD_SetDrawMode(OldDrawMode);
   \   00000170   0B00A0E1           MOV      R0,R11
   \   00000174   ........           BL       LCD_SetDrawMode
     75              GUI_Context.DispPosX += CharInfo.XDist;
   \   00000178   F202D4E1           LDRSH    R0,[R4, #+34]
   \   0000017C   000089E0           ADD      R0,R9,R0
   \   00000180   B202C4E1           STRH     R0,[R4, #+34]
     76            }
     77          }
   \                     ??_DispChar_0:
   \   00000184   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000188   F08FBDE8           POP      {R4-R11,PC}      ;; return
     78          
     79          /*********************************************************************
     80          *
     81          *       Exported data
     82          *
     83          **********************************************************************
     84          */
     85          /*********************************************************************
     86          *
     87          *       GUI_SIF_TYPE_PROP
     88          */

   \                                 In section .rodata, align 4, keep-with-next
     89          const tGUI_SIF_APIList GUI_SIF_APIList_Prop_Frm = {
   \                     GUI_SIF_APIList_Prop_Frm:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   ............       DC32 _DispChar, GUI_SIF__GetCharDistX_ExtFrm, GUI_SIF__GetFontInfo_ExtFrm, GUI_SIF__IsInFont_ExtFrm
   \              ............
   \              ........    
   \   00000010   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     LCD_pBkColorIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     LCD_pColorIndex
     90            _DispChar,
     91            GUI_SIF__GetCharDistX_ExtFrm,
     92            GUI_SIF__GetFontInfo_ExtFrm,
     93            GUI_SIF__IsInFont_ExtFrm,
     94          };
     95          
     96          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     _DispChar     72


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _DispChar                 396
     GUI_SIF_APIList_Prop_Frm   24
     ??DataTable1                4
     ??DataTable1_1              4
     ??DataTable1_2              4

 
  24 bytes in section .rodata
 408 bytes in section .text
 
 408 bytes of CODE  memory
  24 bytes of CONST memory

Errors: none
Warnings: none
