###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:41 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_GetWindowSize.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\WM_GetWindowSize.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_GetWindowSize.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_GetWindowSize.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_GetWindowSize.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_GetWindowSize.c
     19          Purpose     : Implementation of WM_GetWindowSizeX,Y
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Static routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _GetDefaultWin
     36          
     37            When drawing, we have to start at the bottom window !
     38          */
     39          static WM_HWIN _GetDefaultWin(WM_HWIN hWin) {
     40            if (!hWin)
     41              hWin = WM_GetActiveWindow();
     42            return hWin;
     43          }
     44          
     45          /*********************************************************************
     46          *
     47          *       Module internal routines
     48          *
     49          **********************************************************************
     50          */
     51          /*********************************************************************
     52          *
     53          *       WM__GetWindowSizeX
     54          
     55            Return width of window in pixels
     56          */

   \                                 In section .text, align 4, keep-with-next
     57          int WM__GetWindowSizeX(const WM_Obj* pWin) {
     58            return pWin->Rect.x1 - pWin->Rect.x0 +1;
   \                     WM__GetWindowSizeX:
   \   00000000   F410D0E1           LDRSH    R1,[R0, #+4]
   \   00000004   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   010080E2           ADD      R0,R0,#+1
   \   00000010   1EFF2FE1           BX       LR               ;; return
     59          }
     60          
     61          /*********************************************************************
     62          *
     63          *       WM__GetWindowSizeY
     64          
     65            Return height of window in pixels
     66          */

   \                                 In section .text, align 4, keep-with-next
     67          int WM__GetWindowSizeY(const WM_Obj* pWin) {
     68            return pWin->Rect.y1 - pWin->Rect.y0 +1;
   \                     WM__GetWindowSizeY:
   \   00000000   F610D0E1           LDRSH    R1,[R0, #+6]
   \   00000004   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000008   000041E0           SUB      R0,R1,R0
   \   0000000C   010080E2           ADD      R0,R0,#+1
   \   00000010   1EFF2FE1           BX       LR               ;; return
     69          }
     70          
     71          /*********************************************************************
     72          *
     73          *      Public API code
     74          *
     75          **********************************************************************
     76          */
     77          /*********************************************************************
     78          *
     79          *       WM_GetWindowSizeX
     80          
     81            Return width of window in pixels
     82          */

   \                                 In section .text, align 4, keep-with-next
     83          int WM_GetWindowSizeX(WM_HWIN hWin) {
   \                     WM_GetWindowSizeX:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     84            int r;
     85            WM_Obj* pWin;
     86            WM_LOCK();
   \   00000008   ........           BL       GUI_Lock
     87            hWin = _GetDefaultWin(hWin);
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0100001A           BNE      ??WM_GetWindowSizeX_0
   \   00000014   ........           BL       WM_GetActiveWindow
   \   00000018   0040A0E1           MOV      R4,R0
     88            pWin = WM_H2P(hWin);
     89            r = WM__GetWindowSizeX(pWin);
   \                     ??WM_GetWindowSizeX_0:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_h2p
   \   00000024   F410D0E1           LDRSH    R1,[R0, #+4]
   \   00000028   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000002C   000041E0           SUB      R0,R1,R0
   \   00000030   014080E2           ADD      R4,R0,#+1
     90            WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
     91            return r;
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
     92          }
     93          
     94          /*********************************************************************
     95          *
     96          *       WM_GetWindowSizeY
     97          
     98            Return height of window in pixels
     99          */

   \                                 In section .text, align 4, keep-with-next
    100          int WM_GetWindowSizeY(WM_HWIN hWin) {
   \                     WM_GetWindowSizeY:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    101            int r;
    102            WM_Obj* pWin;
    103            WM_LOCK();
   \   00000008   ........           BL       GUI_Lock
    104            hWin = _GetDefaultWin(hWin);
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   0100001A           BNE      ??WM_GetWindowSizeY_0
   \   00000014   ........           BL       WM_GetActiveWindow
   \   00000018   0040A0E1           MOV      R4,R0
    105            pWin = WM_H2P(hWin);
    106            r = WM__GetWindowSizeY(pWin);
   \                     ??WM_GetWindowSizeY_0:
   \   0000001C   0400A0E1           MOV      R0,R4
   \   00000020   ........           BL       GUI_ALLOC_h2p
   \   00000024   F610D0E1           LDRSH    R1,[R0, #+6]
   \   00000028   F200D0E1           LDRSH    R0,[R0, #+2]
   \   0000002C   000041E0           SUB      R0,R1,R0
   \   00000030   014080E2           ADD      R4,R0,#+1
    107            WM_UNLOCK();
   \   00000034   ........           BL       GUI_Unlock
    108            return r;
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   1080BDE8           POP      {R4,PC}          ;; return
    109          }
    110          
    111          
    112          #else
    113            void WM_GetWindowSize_C(void) {} /* avoid empty object files */
    114          #endif   /* GUI_WINSUPPORT */
    115          
    116          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     WM_GetWindowSizeX       8
     WM_GetWindowSizeY       8
     WM__GetWindowSizeX      0
     WM__GetWindowSizeY      0


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     WM__GetWindowSizeX   20
     WM__GetWindowSizeY   20
     WM_GetWindowSizeX    64
     WM_GetWindowSizeY    64

 
 168 bytes in section .text
 
 168 bytes of CODE memory

Errors: none
Warnings: none
