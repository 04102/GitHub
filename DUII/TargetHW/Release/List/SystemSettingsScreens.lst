###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:39 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\SystemSettingsScreens.c                     #
#    Command line =  C:\DUII\DUII\SystemSettingsScreens.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\SystemSettingsScreens.lst  #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\SystemSettingsScreens.o     #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\SystemSettingsScreens.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdio.h>
     24          #include <stdlib.h>
     25          #include <string.h>
     26          #include "DUII.h"
     27          #include "GUI.h"
     28          #include "commondefs.h"
     29          #include "DIALOG.h"
     30          #include "ConfigScreens.h"
     31          #include "GeneralConfig.h"
     32          #include "GaugeScreen.h"
     33          #include "FlashReadWrite.h"
     34          #include "GMeterScreen.h"
     35          #include "RunningGauges.h"
     36          #include "SystemSettingsScreens.h"
     37          #include "DataHandler.h"
     38          #include "StandardList.h"
     39          #include "LEDHandler.h"
     40          #ifdef _WINDOWS
     41          #include "..\Application\dirent.h"
     42          #include "SIMConf.h"
     43          #else
     44          #include "FS.h"
     45          #include "adc.h"
     46          #endif
     47          #include "RaceSetupScreens.h"
     48          #include "tmtypes.h"
     49          #include "PersonalizeScreens.h"
     50          #include "SystemSettingsScreens.h"
     51          
     52          
     53          /*********************************************************************
     54          *
     55          *       Public Code Prototypes
     56          *
     57          **********************************************************************
     58          */
     59          int GetRecordSpeed(void);
     60          void SetRecordSpeed(int recordSpeed);
     61          
     62          /*********************************************************************
     63          *
     64          *       Public Variables
     65          *
     66          **********************************************************************
     67          */
     68          GUI_HWIN	hPersonalizationScreen;

   \                                 In section .bss, align 4
     69          int systemSettingsPopupScreen;
   \                     systemSettingsPopupScreen:
   \   00000000                      DS8 4
     70          
     71          /*********************************************************************
     72          *
     73          *       External data and code
     74          *
     75          **********************************************************************
     76          */
     77          // Note that the button bitmaps must be encoded for the appropriate color
     78          // conversion selected in LCDConf.c
     79          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
     80          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
     81          extern GUI_CONST_STORAGE GUI_BITMAP bmEraseAll;
     82          extern GUI_CONST_STORAGE GUI_BITMAP bmFactoryDefaults;
     83          extern GUI_CONST_STORAGE GUI_BITMAP bmFormatSD;
     84          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoOn;
     85          extern GUI_CONST_STORAGE GUI_BITMAP bmBackground;
     86          extern GUI_CONST_STORAGE GUI_BITMAP bmDisplayText;
     87          extern GUI_CONST_STORAGE GUI_BITMAP bmUnitsText;
     88          extern GUI_CONST_STORAGE GUI_BITMAP bmTimeText;
     89          extern GUI_CONST_STORAGE GUI_BITMAP bmStorageText;
     90          extern GUI_CONST_STORAGE GUI_BITMAP bmBlackButton;
     91          extern GUI_CONST_STORAGE GUI_BITMAP bmGrayButton;
     92          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenButton;
     93          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
     94          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallRedButton;
     95          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallYellowButton;
     96          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallWhiteButton;
     97          extern GUI_CONST_STORAGE GUI_BITMAP bmSingleSpinner;
     98          extern GUI_CONST_STORAGE GUI_BITMAP bmBackgroundWithPanel;
     99          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenCheck;
    100          extern GUI_CONST_STORAGE GUI_BITMAP bmBrightIcon;
    101          extern GUI_CONST_STORAGE GUI_BITMAP bmDarkIcon;
    102          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderBlue;
    103          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderGreen;
    104          extern GUI_CONST_STORAGE GUI_BITMAP bmOnOffWhite;
    105          extern GUI_CONST_STORAGE GUI_BITMAP bmOnOffGreen;
    106          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderDotTransparent;
    107          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoStartSetupText;
    108          extern GUI_CONST_STORAGE GUI_BITMAP bmPredictiveScaleText;
    109          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoOnButton;
    110          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoOffButton;
    111          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceScreenButton;
    112          extern GUI_CONST_STORAGE GUI_BITMAP bmMenuButton;
    113          extern GUI_CONST_STORAGE GUI_BITMAP bmPersonalizeButton;
    114          extern GUI_CONST_STORAGE GUI_BITMAP bmYellowButton;
    115          extern GUI_CONST_STORAGE GUI_BITMAP bmOrangeButton;
    116          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenButton;
    117          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
    118          extern GUI_CONST_STORAGE GUI_BITMAP bmBlueButton;
    119          extern GUI_CONST_STORAGE GUI_BITMAP bmPersonalizeText;
    120          extern GUI_CONST_STORAGE GUI_BITMAP bmRecordSpeed;
    121          extern GUI_CONST_STORAGE GUI_BITMAP bmMediumSpinner;
    122          extern MULTIEDIT_HANDLE CreateTextBox(WM_HWIN hParent, char *pText);
    123          extern int popupTitleTextColor;
    124          
    125          #ifndef _WINDOWS
    126          extern void ConfigureCache(void);
    127          extern void PowerOffUnit(WM_HWIN owner, char reset, int delay);
    128          #endif
    129          
    130          /*********************************************************************
    131          *
    132          *       Local Prototypes
    133          *
    134          **********************************************************************
    135          */
    136          void DisplayDisplaySelection(WM_HWIN);
    137          void DisplaySelectionPaint(WM_HWIN);
    138          void DisplayUnitsSelection(WM_HWIN);
    139          void UnitsSelectionPaint(WM_HWIN);
    140          void DisplayTimeSelection(WM_HWIN);
    141          void TimeSelectionPaint(WM_HWIN);
    142          void DisplayStorageSelection(WM_HWIN);
    143          void StorageSelectionPaint(WM_HWIN);
    144          void DisplayAutoStartSelection(WM_HWIN);
    145          void AutoStartSelectionPaint(WM_HWIN);
    146          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen);
    147          void setOnOffButtonColors(char onState, char setSliders);
    148          void DisplayLapMeter(WM_HWIN);
    149          void LapMeterPaint(WM_HWIN);
    150          int SystemSettingsPopUp(int screen, WM_HWIN owner);
    151          void nonModalPopupCallback(WM_MESSAGE * pMsg);
    152          void EraseAllSessions(void);
    153          void RestoreFactoryDefaults(WM_HWIN hWin);
    154          char ValidSessionFileName(char *pName);
    155          void DeleteSystemSettingsPopUp(WM_HWIN hDialog);
    156          //void SetAutoOnGraphic(void);
    157          //void SetAutoStartGraphic(void);
    158          const char *GetAutoOnText(void);
    159          //unsigned char *GetAutoStartText(void);
    160          void PersonalizationCB(WM_MESSAGE * pMsg);
    161          enum PERSONALIZE_SCREEN_ID SSSButtonToScreenID(int id);
    162          void SetCurrentTempButtonText(void);
    163          const char *GetDaylightSavingsStr(void);
    164          const char *GetGPSSimulateStr(void);
    165          int WiFiChangedPopUp(void);
    166          void PaintRecordSpeed(WM_HWIN hParent);
    167          const char *GetRecordSpeedString(void);
    168          int GetRecordStopTime(void);
    169          void SetRecordStopTime(int time);
    170          char *GetRecordStopTimeString(void);
    171          
    172          
    173          /*********************************************************************
    174          *
    175          *       Tables and Constants
    176          *
    177          **********************************************************************
    178          */
    179          struct SCREEN_LIST SystemSettingsScreenList[NUM_SYSTEM_SETTINGS_SCREENS+1] = {
    180          	{ DISPLAY_SELECTION, DisplayDisplaySelection, DisplaySelectionPaint },
    181          	{ UNITS_SELECTION, DisplayUnitsSelection, UnitsSelectionPaint },
    182          	{ TIME_SELECTION, DisplayTimeSelection, TimeSelectionPaint },
    183          	{ AUTOSTART_SELECTION, DisplayAutoStartSelection, AutoStartSelectionPaint },
    184          	{ STORAGE_SELECTION, DisplayStorageSelection, StorageSelectionPaint },
    185          	{ LAP_METER, DisplayLapMeter, LapMeterPaint },
    186          	{ RECORD_SPEED, DisplayRecordSpeed, PaintRecordSpeed },
    187          	{ -1, NULL, NULL }
    188          };
    189          
    190          #define	BACKLIGHT_Y			85
    191          #define	LED_INTENSITY_Y		160
    192          #define	SLIDER_LEFT			60
    193          #define	SLIDER_X_SIZE		343
    194          // Default slider range == 100, change this value if use SLIDER_SetRange()
    195          #define	SLIDER_RANGE		100
    196          #define	SLIDER_BALL_RADIUS	16
    197          
    198          #define	START_SPEED_SPINNER_LEFT	49
    199          #define	STOP_TIME_SPINNER_LEFT		332
    200          #define	SPINNER_WIDTH				105
    201          
    202          //
    203          // Widget defines for all System Settings Screens
    204          //
    205          #define	STANDARD_UNITS			GUI_ID_USER + 1
    206          #define	METRIC_UNITS			GUI_ID_USER + 2
    207          #define	AUTO_ADJUST_ON			GUI_ID_USER + 3
    208          #define	AUTO_ADJUST_OFF			GUI_ID_USER + 4
    209          #define	BACKLIGHT_SLIDER		GUI_ID_USER + 5
    210          #define	INTENSITY_SLIDER		GUI_ID_USER + 6
    211          #define	LAPMETER_BUTTON			GUI_ID_USER + 7
    212          #define	AUTO_START_BUTTON		GUI_ID_USER + 8
    213          #define	ERASEALL_BUTTON			GUI_ID_USER + 9
    214          #define	FACTORYDEFAULTS_BUTTON	GUI_ID_USER + 10
    215          #define	FORMATSD_BUTTON			GUI_ID_USER + 11
    216          #define	AUTOON_BUTTON			GUI_ID_USER + 12
    217          #define	DAYLIGHT_SAVINGS_BTN	GUI_ID_USER + 14
    218          #define	TIME_BTN				GUI_ID_USER + 15
    219          #define	PERSONALIZE_BUTTON		GUI_ID_USER + 16
    220          #define	OWNER_BUTTON			GUI_ID_USER + 17
    221          #define	CONTACTINFO_BUTTON		GUI_ID_USER + 18
    222          #define	WIFI_NAME_BUTTON		GUI_ID_USER + 19
    223          #define	WIFI_PASSWORD_BUTTON	GUI_ID_USER + 20
    224          #define	SERIALNUMBER_BUTTON		GUI_ID_USER + 21
    225          #define	BUILDDATE_BUTTON		GUI_ID_USER + 22
    226          #define	TEMP_BUTTON				GUI_ID_USER + 23
    227          #define	READING_BUTTON			GUI_ID_USER + 24
    228          #define	GPS_SIMULATE_BTN		GUI_ID_USER + 25
    229          #define	RECORD_START_SPEED_BTN	GUI_ID_USER + 26
    230          
    231          
    232          #define	TIME_WHEEL			GUI_ID_LISTWHEEL1
    233          #define	RECORD_SPEED_WHEEL	GUI_ID_LISTWHEEL2
    234          #define	LAP_METER_WHEEL		GUI_ID_LISTWHEEL3
    235          #define	STOP_TIME_WHEEL		GUI_ID_LISTWHEEL4
    236          
    237          #ifdef _WINDOWS
    238          #define	MINTEMP	440
    239          #define	MAXTEMP	550
    240          #endif
    241          
    242          char * LapMeter[] = {
    243          		"0.5 sec",
    244          		"1 sec",
    245          		"2 sec",
    246          		"5 sec",
    247          		"10 sec",
    248          		NULL
    249          };
    250          
    251          char * RecordSpeed[] = {
    252          	"Disabled",
    253          	"20 mph",
    254          	"25 mph",
    255          	"30 mph",
    256          	"35 mph",
    257          	"40 mph",
    258          	"45 mph",
    259          	"50 mph",
    260          	NULL
    261          };
    262          
    263          char * RecordSpeedMetric[] = {
    264          	"Disabled",
    265          	"32 kph",
    266          	"40 kph",
    267          	"48 kph",
    268          	"56 kph",
    269          	"64 kph",
    270          	"72 kph",
    271          	"80 kph",
    272          	NULL
    273          };
    274          
    275          char * StopTime[] = {
    276          	"Disabled",
    277          	"1 min",
    278          	"2 min",
    279          	"3 min",
    280          	"4 min",
    281          	"5 min",
    282          	"6 min",
    283          	"7 min",
    284          	"8 min",
    285          	"9 min",
    286          	"10 min",
    287          	NULL
    288          };
    289          
    290          char *StdTimeZones[] = {
    291          	"-12",
    292          	"-11",
    293          	"-10",
    294          	"-9 Alaska",
    295          	"-8 Pacific",
    296          	"-7 Mountain",
    297          	"-6 Central",
    298          	"-5 Eastern",
    299          	"-4 Atlantic",
    300          	"-3 Greenland",
    301          	"-2",
    302          	"-1",
    303          	"0 London",
    304          	"+1 Paris, Rome",
    305          	"+2 Athens",
    306          	"+3 Moscow",
    307          	"+4",
    308          	"+5",
    309          	"+6",
    310          	"+7",
    311          	"+8 Beijing",
    312          	"+9 Tokyo, Seoul",
    313          	"+10 Melbourne",
    314          	"+11",
    315          	"+12 New Zealand",
    316          	NULL
    317          };
    318          
    319          char *DstTimeZones[] = {
    320          	"-11",
    321          	"-10",
    322          	"-9",
    323          	"-8 Alaska",
    324          	"-7 Pacific",
    325          	"-6 Mountain",
    326          	"-5 Central",
    327          	"-4 Eastern",
    328          	"-3 Atlantic",
    329          	"-2 Greenland",
    330          	"-1",
    331          	"0",
    332          	"+1 London",
    333          	"+2 Paris, Rome",
    334          	"+3 Athens",
    335          	"+4 Moscow",
    336          	"+5",
    337          	"+6",
    338          	"+7",
    339          	"+8",
    340          	"+9 Beijing",
    341          	"+10 Tokyo, Seoul",
    342          	"+11 Melbourne",
    343          	"+12",
    344          	"-12 New Zealand",
    345          	NULL
    346          };
    347          
    348          //char *LaunchForce[] = {
    349          //	"0.1 G's",
    350          //	"0.2 G's",
    351          //	"0.3 G's",
    352          //	"0.4 G's",
    353          //	"0.5 G's",
    354          //	"0.6 G's",
    355          //	"0.7 G's",
    356          //	"0.8 G's",
    357          //	"0.9 G's",
    358          //	"1.0 G's",
    359          //	NULL
    360          //};
    361          
    362          /*********************************************************************
    363          *
    364          *       Local Variables
    365          *
    366          **********************************************************************
    367          */
    368          WM_HWIN hSystemSettingsScreens;
    369          int KMCDialogSemaphore = 0;
    370          int clickedOnThisScreen;
    371          LISTWHEEL_Handle hTimeWheel, hRecordSpeedWheel, hStopTimeWheel;
    372          SLIDER_Handle hBacklightSlider, hIntensitySlider;
    373          BUTTON_Handle hStdCheck, hMetricCheck;
    374          BUTTON_Handle hOnBtn, hOffBtn;
    375          int firstTimeThrough;
    376          char intensityIgnore = false;
    377          char backlightIgnore = false;
    378          //static LISTWHEEL_Handle hLaunchListWheel;
    379          static LISTWHEEL_Handle hLapMeterListWheel;
    380          int modalWindowUp = false;
   \                     modalWindowUp:
   \   00000004                      DS8 4

   \                                 In section .bss, align 4
   \                     KMCDialogSemaphore:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    381          BUTTON_Handle hAutoOnButton, hAutoStartButton, hCurrentTempButton, hRecordStartSpeedButton;
   \                     hAutoOnButton:
   \   00000000                      DS8 4
   \                     hAutoStartButton:
   \   00000004                      DS8 4
   \                     hRecordStartSpeedButton:
   \   00000008                      DS8 4

   \                                 In section .data, align 4
   \                     SystemSettingsScreenList:
   \   00000000   00000000....       DC32 0, DisplayDisplaySelection, DisplaySelectionPaint, 1
   \              ............
   \              01000000    
   \   00000010   ............       DC32 DisplayUnitsSelection, UnitsSelectionPaint, 2
   \              ....02000000
   \   0000001C   ............       DC32 DisplayTimeSelection, TimeSelectionPaint, 3
   \              ....03000000
   \   00000028   ............       DC32 DisplayAutoStartSelection, AutoStartSelectionPaint, 4
   \              ....04000000
   \   00000034   ............       DC32 DisplayStorageSelection, StorageSelectionPaint, 5, DisplayLapMeter
   \              ....05000000
   \              ........    
   \   00000044   ........0600       DC32 LapMeterPaint, 6, DisplayRecordSpeed, PaintRecordSpeed, -1, 0H, 0H
   \              0000........
   \              ........FFFF
   \              FFFF00000000
   \              00000000    
   \                     hPersonalizationScreen:
   \   00000060   00000000           DC8 0, 0, 0, 0
   \                     hSystemSettingsScreens:
   \   00000064   00000000           DC8 0, 0, 0, 0
   \                     clickedOnThisScreen:
   \   00000068   00000000           DC8 0, 0, 0, 0
   \                     hTimeWheel:
   \   0000006C   00000000           DC8 0, 0, 0, 0
   \                     hBacklightSlider:
   \   00000070   00000000           DC8 0, 0, 0, 0
   \                     hIntensitySlider:
   \   00000074   00000000           DC8 0, 0, 0, 0
   \                     hStdCheck:
   \   00000078   00000000           DC8 0, 0, 0, 0
   \                     hMetricCheck:
   \   0000007C   00000000           DC8 0, 0, 0, 0
   \                     hOnBtn:
   \   00000080   00000000           DC8 0, 0, 0, 0
   \                     hOffBtn:
   \   00000084   00000000           DC8 0, 0, 0, 0
   \                     firstTimeThrough:
   \   00000088   00000000           DC8 0, 0, 0, 0
   \                     hCurrentTempButton:
   \   0000008C   00000000           DC8 0, 0, 0, 0
    382          MULTIEDIT_HANDLE hPersonalizeText;
   \                     hPersonalizeText:
   \   00000090   00000000           DC8 0, 0, 0, 0
   \                     intensityIgnore:
   \   00000094   00                 DC8 0
   \                     backlightIgnore:
   \   00000095   00                 DC8 0
    383          #ifdef _WINDOWS
    384          int temptemp = MINTEMP;
    385          int tempIncreasing = 1;
    386          #endif
    387          char gpsSimulate = 0;
   \                     gpsSimulate:
   \   00000096   00                 DC8 0
   \   00000097   00                 DC8 0
   \                     StdTimeZones:
   \   00000098   ............       DC32 `?<Constant "-12">`, `?<Constant "-11">`, `?<Constant "-10">`
   \              ............
   \   000000A4   ............       DC32 `?<Constant "-9 Alaska">`, `?<Constant "-8 Pacific">`
   \              ....        
   \   000000AC   ............       DC32 `?<Constant "-7 Mountain">`, `?<Constant "-6 Central">`
   \              ....        
   \   000000B4   ............       DC32 `?<Constant "-5 Eastern">`, `?<Constant "-4 Atlantic">`
   \              ....        
   \   000000BC   ............       DC32 `?<Constant "-3 Greenland">`, `?<Constant "-2">`
   \              ....        
   \   000000C4   ............       DC32 `?<Constant "-1">`, `?<Constant "0 London">`
   \              ....        
   \   000000CC   ............       DC32 `?<Constant "+1 Paris, Rome">`, `?<Constant "+2 Athens">`
   \              ....        
   \   000000D4   ............       DC32 `?<Constant "+3 Moscow">`, `?<Constant "+4">`, `?<Constant "+5">`
   \              ............
   \   000000E0   ............       DC32 `?<Constant "+6">`, `?<Constant "+7">`, `?<Constant "+8 Beijing">`
   \              ............
   \   000000EC   ............       DC32 `?<Constant "+9 Tokyo, Seoul">`, `?<Constant "+10 Melbourne">`
   \              ....        
   \   000000F4   ............       DC32 `?<Constant "+11">`, `?<Constant "+12 New Zealand">`, 0H
   \              ....00000000
   \                     DstTimeZones:
   \   00000100   ............       DC32 `?<Constant "-11">`, `?<Constant "-10">`, `?<Constant "-9">`
   \              ............
   \   0000010C   ............       DC32 `?<Constant "-8 Alaska">`, `?<Constant "-7 Pacific">`
   \              ....        
   \   00000114   ............       DC32 `?<Constant "-6 Mountain">`, `?<Constant "-5 Central">`
   \              ....        
   \   0000011C   ............       DC32 `?<Constant "-4 Eastern">`, `?<Constant "-3 Atlantic">`
   \              ....        
   \   00000124   ............       DC32 `?<Constant "-2 Greenland">`, `?<Constant "-1">`
   \              ....        
   \   0000012C   ............       DC32 `?<Constant "0">`, `?<Constant "+1 London">`
   \              ....        
   \   00000134   ............       DC32 `?<Constant "+2 Paris, Rome">`, `?<Constant "+3 Athens">`
   \              ....        
   \   0000013C   ............       DC32 `?<Constant "+4 Moscow">`, `?<Constant "+5">`, `?<Constant "+6">`
   \              ............
   \   00000148   ............       DC32 `?<Constant "+7">`, `?<Constant "+8">`, `?<Constant "+9 Beijing">`
   \              ............
   \   00000154   ............       DC32 `?<Constant "+10 Tokyo, Seoul">`, `?<Constant "+11 Melbourne">`
   \              ....        
   \   0000015C   ............       DC32 `?<Constant "+12">`, `?<Constant "-12 New Zealand">`, 0H
   \              ....00000000
    388          char initialName[WIFI_LEN];
   \                     initialName:
   \   00000168   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
    389          char initialPass[WIFI_LEN];
   \                     initialPass:
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        

   \                                 In section .data, align 4
   \                     LapMeter:
   \   00000000   ............       DC32 `?<Constant "0.5 sec">`, `?<Constant "1 sec">`
   \              ....        
   \   00000008   ............       DC32 `?<Constant "2 sec">`, `?<Constant "5 sec">`
   \              ....        
   \   00000010   ........0000       DC32 `?<Constant "10 sec">`, 0H
   \              0000        
   \   00000018   00000000           DC8 0, 0, 0, 0

   \                                 In section .data, align 4
   \                     hRecordSpeedWheel:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     hStopTimeWheel:
   \   00000004   00000000           DC8 0, 0, 0, 0
   \                     RecordSpeed:
   \   00000008   ............       DC32 `?<Constant "Disabled">`, `?<Constant "20 mph">`
   \              ....        
   \   00000010   ............       DC32 `?<Constant "25 mph">`, `?<Constant "30 mph">`
   \              ....        
   \   00000018   ............       DC32 `?<Constant "35 mph">`, `?<Constant "40 mph">`
   \              ....        
   \   00000020   ............       DC32 `?<Constant "45 mph">`, `?<Constant "50 mph">`, 0H
   \              ....00000000
   \                     RecordSpeedMetric:
   \   0000002C   ............       DC32 `?<Constant "Disabled">`, `?<Constant "32 kph">`
   \              ....        
   \   00000034   ............       DC32 `?<Constant "40 kph">`, `?<Constant "48 kph">`
   \              ....        
   \   0000003C   ............       DC32 `?<Constant "56 kph">`, `?<Constant "64 kph">`
   \              ....        
   \   00000044   ............       DC32 `?<Constant "72 kph">`, `?<Constant "80 kph">`, 0H
   \              ....00000000
   \                     StopTime:
   \   00000050   ............       DC32 `?<Constant "Disabled">`, `?<Constant "1 min">`
   \              ....        
   \   00000058   ............       DC32 `?<Constant "2 min">`, `?<Constant "3 min">`
   \              ....        
   \   00000060   ............       DC32 `?<Constant "4 min">`, `?<Constant "5 min">`
   \              ....        
   \   00000068   ............       DC32 `?<Constant "6 min">`, `?<Constant "7 min">`
   \              ....        
   \   00000070   ............       DC32 `?<Constant "8 min">`, `?<Constant "9 min">`
   \              ....        
   \   00000078   ........0000       DC32 `?<Constant "10 min">`, 0H
   \              0000        
    390          
    391          
    392          /*********************************************************************
    393          *
    394          *       Public code
    395          *
    396          **********************************************************************
    397          */

   \                                 In section .text, align 4, keep-with-next
    398          WM_HWIN GetSystemSettingsWindowHandle(void)
    399          {
    400          	return hSystemSettingsScreens;
   \                     GetSystemSettingsWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable181
   \   00000004   640090E5           LDR      R0,[R0, #+100]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    401          }
    402          

   \                                 In section .text, align 4, keep-with-next
    403          void SetSystemSettingsWindowHandle(WM_HWIN hWin)
    404          {
    405          	hSystemSettingsScreens = hWin;
   \                     SetSystemSettingsWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable181
   \   00000004   640081E5           STR      R0,[R1, #+100]
    406          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    407          
    408          

   \                                 In section .text, align 4, keep-with-next
    409          void SystemSettingsScreensCallback(WM_MESSAGE * pMsg)
    410          {
   \                     SystemSettingsScreensCallback:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    411          	int NCode, Id, temp;
    412          
    413          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   1000000A           BEQ      ??SystemSettingsScreensCallback_3
   \   00000018   0E0050E2           SUBS     R0,R0,#+14
   \   0000001C   1400000A           BEQ      ??SystemSettingsScreensCallback_4
   \   00000020   170050E2           SUBS     R0,R0,#+23
   \   00000024   2700000A           BEQ      ??SystemSettingsScreensCallback_5
   \   00000028   ED0050E2           SUBS     R0,R0,#+237
   \   0000002C   CF00001A           BNE      ??SystemSettingsScreensCallback_6
    414          	{
    415          		case WM_TIMER:
    416          			if (pMsg->Data.v == hScreenTimer)
   \   00000030   ........           LDR      R0,??DataTable179
   \   00000034   0C1094E5           LDR      R1,[R4, #+12]
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   DF01001A           BNE      ??SystemSettingsScreensCallback_7
    417          			{
    418          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000044   7D10A0E3           MOV      R1,#+125
   \   00000048   ........           BL       WM_RestartTimer
    419          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   0000004C   ........           LDR      R1,??DataTable180
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   ........           BL       WM_InvalidateRect
   \   00000058   D90100EA           B        ??SystemSettingsScreensCallback_7
    420          			}
    421          			break;
    422          
    423          		case WM_CREATE:
    424          			firstTimeThrough = TRUE;
   \                     ??SystemSettingsScreensCallback_3:
   \   0000005C   ........           LDR      R5,??DataTable181
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   880085E5           STR      R0,[R5, #+136]
    425          			SystemSettingsIgnoreNextKeyRelease();
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   680085E5           STR      R0,[R5, #+104]
    426          			break;
   \   00000070   D30100EA           B        ??SystemSettingsScreensCallback_7
    427          			
    428          		case WM_PAINT:
    429          			if ((GetScreenType() == SYSTEM_SETTINGS_SCREENS_TYPE) || (GetScreenType() == RECORD_SPEED_SCREEN_TYPE))
   \                     ??SystemSettingsScreensCallback_4:
   \   00000074   ........           BL       GetScreenType
   \   00000078   060050E3           CMP      R0,#+6
   \   0000007C   0200000A           BEQ      ??SystemSettingsScreensCallback_8
   \   00000080   ........           BL       GetScreenType
   \   00000084   250050E3           CMP      R0,#+37
   \   00000088   CD01001A           BNE      ??SystemSettingsScreensCallback_7
    430          			{
    431          				GUI_SetColor(GUI_WHITE);
   \                     ??SystemSettingsScreensCallback_8:
   \   0000008C   FF04E0E3           MVN      R0,#-16777216
   \   00000090   ........           BL       GUI_SetColor
    432          				GUI_SetFont(&GUI_Font24_ASCII);
   \   00000094   ........           LDR      R0,??DataTable181_1
   \   00000098   ........           BL       GUI_SetFont
    433          
    434          				// Call paint method of center screen
    435          				SystemSettingsScreenList[GetLastScreen(SYSTEM_SETTINGS_SCREENS_TYPE)].paint(hSystemSettingsScreens);
   \   0000009C   0600A0E3           MOV      R0,#+6
   \   000000A0   ........           BL       GetLastScreen
   \   000000A4   0010A0E1           MOV      R1,R0
   \   000000A8   ........           LDR      R5,??DataTable181
   \   000000AC   0C20A0E3           MOV      R2,#+12
   \   000000B0   925121E0           MLA      R1,R2,R1,R5
   \   000000B4   640095E5           LDR      R0,[R5, #+100]
   \   000000B8   081091E5           LDR      R1,[R1, #+8]
   \   000000BC   31FF2FE1           BLX      R1
    436          				DrawSignalStrength();
   \   000000C0   ........           BL       DrawSignalStrength
   \   000000C4   BE0100EA           B        ??SystemSettingsScreensCallback_7
    437          			}
    438          			break;
    439          
    440          		case WM_NOTIFY_PARENT:
    441          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??SystemSettingsScreensCallback_5:
   \   000000C8   080094E5           LDR      R0,[R4, #+8]
   \   000000CC   ........           BL       WM_GetId
   \   000000D0   0060A0E1           MOV      R6,R0
    442          			NCode = pMsg->Data.v;				// Notification code
    443          			switch (NCode)
   \   000000D4   0C0094E5           LDR      R0,[R4, #+12]
   \   000000D8   010040E2           SUB      R0,R0,#+1
   \   000000DC   040050E3           CMP      R0,#+4
   \   000000E0   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SystemSettingsScreensCallback_0:
   \   000000E4   B601008A           BHI      ??SystemSettingsScreensCallback_7
   \   000000E8   8C0000EA           B        ??SystemSettingsScreensCallback_9
   \   000000EC   A20000EA           B        ??SystemSettingsScreensCallback_10
   \   000000F0   B30100EA           B        ??SystemSettingsScreensCallback_7
   \   000000F4   000000EA           B        ??SystemSettingsScreensCallback_11
   \   000000F8   5B0000EA           B        ??SystemSettingsScreensCallback_12
    444          			{
    445          				case WM_NOTIFICATION_SEL_CHANGED:
    446          					if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \                     ??SystemSettingsScreensCallback_11:
   \   000000FC   080094E5           LDR      R0,[R4, #+8]
   \   00000100   ........           BL       LISTWHEEL_GetVelocity
   \   00000104   000050E3           CMP      R0,#+0
   \   00000108   00006042           RSBMI    R0,R0,#+0
   \   0000010C   020050E3           CMP      R0,#+2
   \   00000110   AB0100AA           BGE      ??SystemSettingsScreensCallback_7
    447          					{
    448          						int recordSpeed;
    449          
    450          						switch(Id)
   \   00000114   616046E2           SUB      R6,R6,#+97
   \   00000118   806F46E2           SUB      R6,R6,#+512
   \   0000011C   030056E3           CMP      R6,#+3
   \   00000120   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??SystemSettingsScreensCallback_1:
   \   00000124   A601008A           BHI      ??SystemSettingsScreensCallback_7
   \   00000128   020000EA           B        ??SystemSettingsScreensCallback_13
   \   0000012C   160000EA           B        ??SystemSettingsScreensCallback_14
   \   00000130   0D0000EA           B        ??SystemSettingsScreensCallback_15
   \   00000134   3B0000EA           B        ??SystemSettingsScreensCallback_16
    451          						{
    452          						case TIME_WHEEL:
    453          							LISTWHEEL_SetSel(pMsg->hWinSrc, temp = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??SystemSettingsScreensCallback_13:
   \   00000138   080094E5           LDR      R0,[R4, #+8]
   \   0000013C   ........           BL       LISTWHEEL_GetPos
   \   00000140   0050A0E1           MOV      R5,R0
   \   00000144   0510A0E1           MOV      R1,R5
   \   00000148   080094E5           LDR      R0,[R4, #+8]
   \   0000014C   ........           BL       LISTWHEEL_SetSel
    454          							if (sysData.dstOn)
   \   00000150   ........           LDR      R6,??DataTable181_2
   \   00000154   7B00D6E5           LDRB     R0,[R6, #+123]
   \   00000158   000050E3           CMP      R0,#+0
    455          								sysData.timeZone = temp - 11;
   \   0000015C   0B004512           SUBNE    R0,R5,#+11
   \   00000160   0C004502           SUBEQ    R0,R5,#+12
   \   00000164   7A00C6E5           STRB     R0,[R6, #+122]
   \   00000168   950100EA           B        ??SystemSettingsScreensCallback_7
    456          							else sysData.timeZone = temp - 12;
    457          							break;
    458          
    459          						case LAP_METER_WHEEL:
    460          							LISTWHEEL_SetSel(pMsg->hWinSrc, sysData.lapMeter = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??SystemSettingsScreensCallback_15:
   \   0000016C   ........           LDR      R6,??DataTable181_2
   \   00000170   080094E5           LDR      R0,[R4, #+8]
   \   00000174   ........           BL       LISTWHEEL_GetPos
   \   00000178   7900C6E5           STRB     R0,[R6, #+121]
   \   0000017C   7910D6E5           LDRB     R1,[R6, #+121]
   \   00000180   080094E5           LDR      R0,[R4, #+8]
   \   00000184   ........           BL       LISTWHEEL_SetSel
    461          							break;
   \   00000188   8D0100EA           B        ??SystemSettingsScreensCallback_7
    462          
    463          						case RECORD_SPEED_WHEEL:
    464          							LISTWHEEL_SetSel(pMsg->hWinSrc, temp = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??SystemSettingsScreensCallback_14:
   \   0000018C   080094E5           LDR      R0,[R4, #+8]
   \   00000190   ........           BL       LISTWHEEL_GetPos
   \   00000194   0050A0E1           MOV      R5,R0
   \   00000198   0510A0E1           MOV      R1,R5
   \   0000019C   080094E5           LDR      R0,[R4, #+8]
   \   000001A0   ........           BL       LISTWHEEL_SetSel
    465          
    466          							// Speed always stored in kph - Convert from spinner index to speed in kph
    467          							switch (temp)
   \   000001A4   015045E2           SUB      R5,R5,#+1
   \   000001A8   060055E3           CMP      R5,#+6
   \   000001AC   05F18F90           ADDLS    PC,PC,R5, LSL #+2
   \                     ??SystemSettingsScreensCallback_2:
   \   000001B0   0600008A           BHI      ??SystemSettingsScreensCallback_17
   \   000001B4   070000EA           B        ??SystemSettingsScreensCallback_18
   \   000001B8   080000EA           B        ??SystemSettingsScreensCallback_19
   \   000001BC   090000EA           B        ??SystemSettingsScreensCallback_20
   \   000001C0   0A0000EA           B        ??SystemSettingsScreensCallback_21
   \   000001C4   0B0000EA           B        ??SystemSettingsScreensCallback_22
   \   000001C8   0C0000EA           B        ??SystemSettingsScreensCallback_23
   \   000001CC   0D0000EA           B        ??SystemSettingsScreensCallback_24
    468          							{
    469          							default:
    470          							case 0:	recordSpeed = 0;	break;
   \                     ??SystemSettingsScreensCallback_17:
   \   000001D0   0000A0E3           MOV      R0,#+0
   \   000001D4   0C0000EA           B        ??SystemSettingsScreensCallback_25
    471          							case 1:	recordSpeed = 32;	break;
   \                     ??SystemSettingsScreensCallback_18:
   \   000001D8   2000A0E3           MOV      R0,#+32
   \   000001DC   0A0000EA           B        ??SystemSettingsScreensCallback_25
    472          							case 2:	recordSpeed = 40;	break;
   \                     ??SystemSettingsScreensCallback_19:
   \   000001E0   2800A0E3           MOV      R0,#+40
   \   000001E4   080000EA           B        ??SystemSettingsScreensCallback_25
    473          							case 3:	recordSpeed = 48;	break;
   \                     ??SystemSettingsScreensCallback_20:
   \   000001E8   3000A0E3           MOV      R0,#+48
   \   000001EC   060000EA           B        ??SystemSettingsScreensCallback_25
    474          							case 4:	recordSpeed = 56;	break;
   \                     ??SystemSettingsScreensCallback_21:
   \   000001F0   3800A0E3           MOV      R0,#+56
   \   000001F4   040000EA           B        ??SystemSettingsScreensCallback_25
    475          							case 5:	recordSpeed = 64;	break;
   \                     ??SystemSettingsScreensCallback_22:
   \   000001F8   4000A0E3           MOV      R0,#+64
   \   000001FC   020000EA           B        ??SystemSettingsScreensCallback_25
    476          							case 6:	recordSpeed = 72;	break;
   \                     ??SystemSettingsScreensCallback_23:
   \   00000200   4800A0E3           MOV      R0,#+72
   \   00000204   000000EA           B        ??SystemSettingsScreensCallback_25
    477          							case 7:	recordSpeed = 80;	break;
   \                     ??SystemSettingsScreensCallback_24:
   \   00000208   5000A0E3           MOV      R0,#+80
    478          							}
    479          							// Save in sysData structure
    480          							SetRecordSpeed(recordSpeed);
   \                     ??SystemSettingsScreensCallback_25:
   \   0000020C   ........           LDR      R6,??DataTable181_2
   \   00000210   0008A0E1           LSL      R0,R0,#+16
   \   00000214   BC1ED6E1           LDRH     R1,[R6, #+236]
   \   00000218   0118A0E1           LSL      R1,R1,#+16
   \   0000021C   210880E1           ORR      R0,R0,R1, LSR #+16
   \                     ??SystemSettingsScreensCallback_26:
   \   00000220   EC0086E5           STR      R0,[R6, #+236]
    481          							break;
   \   00000224   660100EA           B        ??SystemSettingsScreensCallback_7
    482          
    483          						case STOP_TIME_WHEEL:
    484          							LISTWHEEL_SetSel(pMsg->hWinSrc, temp = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \                     ??SystemSettingsScreensCallback_16:
   \   00000228   080094E5           LDR      R0,[R4, #+8]
   \   0000022C   ........           BL       LISTWHEEL_GetPos
   \   00000230   0050A0E1           MOV      R5,R0
   \   00000234   0510A0E1           MOV      R1,R5
   \   00000238   080094E5           LDR      R0,[R4, #+8]
   \   0000023C   ........           BL       LISTWHEEL_SetSel
    485          							SetRecordStopTime(temp);
   \   00000240   0B0055E3           CMP      R5,#+11
   \   00000244   3C10A0B3           MOVLT    R1,#+60
   \   00000248   910500B0           MULLT    R0,R1,R5
   \   0000024C   ........           LDR      R6,??DataTable181_2
   \   00000250   F020E0E3           MVN      R2,#+240
   \   00000254   EC1096E5           LDR      R1,[R6, #+236]
   \   00000258   FF2CC2E3           BIC      R2,R2,#0xFF00
   \   0000025C   0000A0A3           MOVGE    R0,#+0
   \   00000260   011002E0           AND      R1,R2,R1
   \   00000264   000281E1           ORR      R0,R1,R0, LSL #+4
   \   00000268   ECFFFFEA           B        ??SystemSettingsScreensCallback_26
    486          							break;
    487          						}
    488          					}
    489          					break;
    490          
    491          				case WM_NOTIFICATION_VALUE_CHANGED:
    492          					if (Id == BACKLIGHT_SLIDER)
   \                     ??SystemSettingsScreensCallback_12:
   \   0000026C   0500A0E3           MOV      R0,#+5
   \   00000270   800E80E3           ORR      R0,R0,#0x800
   \   00000274   000056E1           CMP      R6,R0
   \   00000278   1400001A           BNE      ??SystemSettingsScreensCallback_27
    493          					{
    494          						if (backlightIgnore == true)
   \   0000027C   ........           LDR      R5,??DataTable181
   \   00000280   0070A0E3           MOV      R7,#+0
   \   00000284   9500D5E5           LDRB     R0,[R5, #+149]
   \   00000288   010050E3           CMP      R0,#+1
    495          						{
    496          							backlightIgnore = false;
   \   0000028C   9570C505           STRBEQ   R7,[R5, #+149]
    497          							break;
   \   00000290   4B01000A           BEQ      ??SystemSettingsScreensCallback_7
    498          						}
    499          						sysData.backlight = SLIDER_GetValue(hBacklightSlider);
   \   00000294   ........           LDR      R6,??DataTable181_2
   \   00000298   700095E5           LDR      R0,[R5, #+112]
   \   0000029C   ........           BL       SLIDER_GetValue
   \   000002A0   680086E5           STR      R0,[R6, #+104]
    500          #ifndef _WINDOWS
    501          						SetBacklightBrightness(sysData.backlight);
   \   000002A4   ........           BL       SetBacklightBrightness
    502          #endif
    503          						setOnOffButtonColors(sysData.autoAdjustOn = false, false);
   \                     ??SystemSettingsScreensCallback_28:
   \   000002A8   6C70C6E5           STRB     R7,[R6, #+108]
   \   000002AC   ........           LDR      R2,??DataTable182
   \   000002B0   0010A0E3           MOV      R1,#+0
   \   000002B4   840095E5           LDR      R0,[R5, #+132]
   \   000002B8   ........           BL       BUTTON_SetBitmap
   \   000002BC   ........           LDR      R2,??DataTable182_1
   \   000002C0   0010A0E3           MOV      R1,#+0
   \   000002C4   800095E5           LDR      R0,[R5, #+128]
   \   000002C8   ........           BL       BUTTON_SetBitmap
   \   000002CC   3C0100EA           B        ??SystemSettingsScreensCallback_7
    504          //						backlightXPos = (int)(((float)backlightXPos / (float)SLIDER_RANGE) * (float)SLIDER_X_SIZE) + SLIDER_LEFT - SLIDER_BALL_RADIUS;
    505          					}
    506          					else if (Id == INTENSITY_SLIDER)
   \                     ??SystemSettingsScreensCallback_27:
   \   000002D0   010080E2           ADD      R0,R0,#+1
   \   000002D4   000056E1           CMP      R6,R0
   \   000002D8   3901001A           BNE      ??SystemSettingsScreensCallback_7
    507          					{
    508          						if (intensityIgnore == true)
   \   000002DC   ........           LDR      R5,??DataTable181
   \   000002E0   0070A0E3           MOV      R7,#+0
   \   000002E4   9400D5E5           LDRB     R0,[R5, #+148]
   \   000002E8   010050E3           CMP      R0,#+1
    509          						{
    510          							intensityIgnore = false;
   \   000002EC   9470C505           STRBEQ   R7,[R5, #+148]
    511          							break;
   \   000002F0   3301000A           BEQ      ??SystemSettingsScreensCallback_7
    512          						}
    513          
    514          						if (firstTimeThrough)
   \   000002F4   880095E5           LDR      R0,[R5, #+136]
   \   000002F8   000050E3           CMP      R0,#+0
    515          							firstTimeThrough = false;
   \   000002FC   88708515           STRNE    R7,[R5, #+136]
    516          						else SuspendLEDUpdates(true);				// Suspend RPM and warning control of the LEDs and turn ON
   \   00000300   0100A003           MOVEQ    R0,#+1
   \   00000304   ........           BLEQ     SuspendLEDUpdates
    517          
    518          						sysData.LEDBrightness = SLIDER_GetValue(hIntensitySlider);
   \   00000308   ........           LDR      R6,??DataTable181_2
   \   0000030C   740095E5           LDR      R0,[R5, #+116]
   \   00000310   ........           BL       SLIDER_GetValue
   \   00000314   700086E5           STR      R0,[R6, #+112]
    519          #ifndef _WINDOWS
    520          						SetLEDBrightness(sysData.LEDBrightness);		// light up all LEDs to gauge brightness
   \   00000318   ........           BL       SetLEDBrightness
    521          #endif
    522          						setOnOffButtonColors(sysData.autoAdjustOn = false, false);
   \   0000031C   E1FFFFEA           B        ??SystemSettingsScreensCallback_28
    523          //						intensityXPos = (int)(((float)intensityXPos / (float)SLIDER_RANGE) * (float)SLIDER_X_SIZE) + SLIDER_LEFT - SLIDER_BALL_RADIUS;
    524          					}
    525          					break;
    526          
    527          				case WM_NOTIFICATION_CLICKED:
    528          					clickedOnThisScreen = true;
   \                     ??SystemSettingsScreensCallback_9:
   \   00000320   ........           LDR      R0,??DataTable181
    529          					switch (Id)
   \   00000324   616046E2           SUB      R6,R6,#+97
   \   00000328   0170A0E3           MOV      R7,#+1
   \   0000032C   806F46E2           SUB      R6,R6,#+512
   \   00000330   687080E5           STR      R7,[R0, #+104]
   \   00000334   030056E3           CMP      R6,#+3
   \   00000338   0400009A           BLS      ??SystemSettingsScreensCallback_29
   \   0000033C   A46046E2           SUB      R6,R6,#+164
   \   00000340   506E46E2           SUB      R6,R6,#+1280
   \   00000344   010056E3           CMP      R6,#+1
   \   00000348   0300009A           BLS      ??SystemSettingsScreensCallback_30
   \   0000034C   070000EA           B        ??SystemSettingsScreensCallback_6
    530          					{
    531          						//case LAUNCH_G_LIST:
    532          						//case CAMERA_WHEEL:
    533          						case RECORD_SPEED_WHEEL:
    534          						case STOP_TIME_WHEEL:
    535          						case LAP_METER_WHEEL:
    536          						case TIME_WHEEL:
    537          							pressingbutton_semaphore = 1;
   \                     ??SystemSettingsScreensCallback_29:
   \   00000350   ........           LDR      R0,??DataTable182_2
   \   00000354   007080E5           STR      R7,[R0, #+0]
    538          							break;
   \   00000358   190100EA           B        ??SystemSettingsScreensCallback_7
    539          
    540          						case BACKLIGHT_SLIDER:				// Do not scroll screen while slider bars being updated
    541          						case INTENSITY_SLIDER:
    542          							SuspendEnvironmentalUpdates();
   \                     ??SystemSettingsScreensCallback_30:
   \   0000035C   ........           BL       SuspendEnvironmentalUpdates
    543          							PauseScreenScrolling();
   \   00000360   ........           LDR      R0,??DataTable184
   \   00000364   0010A0E3           MOV      R1,#+0
   \   00000368   001080E5           STR      R1,[R0, #+0]
    544          							break;
   \   0000036C   140100EA           B        ??SystemSettingsScreensCallback_7
    545          
    546          						default:
    547          							WM_DefaultProc(pMsg);
   \                     ??SystemSettingsScreensCallback_6:
   \   00000370   0400A0E1           MOV      R0,R4
   \   00000374   ........           BL       WM_DefaultProc
   \   00000378   110100EA           B        ??SystemSettingsScreensCallback_7
    548          					}
    549          					break;
    550          
    551          				case WM_NOTIFICATION_RELEASED:
    552          					pressingbutton_semaphore = 0;
   \                     ??SystemSettingsScreensCallback_10:
   \   0000037C   ........           LDR      R0,??DataTable182_2
   \   00000380   0070A0E3           MOV      R7,#+0
    553          					if (!clickedOnThisScreen)
   \   00000384   ........           LDR      R5,??DataTable181
   \   00000388   007080E5           STR      R7,[R0, #+0]
   \   0000038C   680095E5           LDR      R0,[R5, #+104]
   \   00000390   000050E3           CMP      R0,#+0
   \   00000394   0A01000A           BEQ      ??SystemSettingsScreensCallback_7
    554          						break;
    555          
    556          					switch (Id)
   \   00000398   016046E2           SUB      R6,R6,#+1
   \   0000039C   806E56E2           SUBS     R6,R6,#+2048
   \   000003A0   B000000A           BEQ      ??SystemSettingsScreensCallback_31
   \   000003A4   016056E2           SUBS     R6,R6,#+1
   \   000003A8   BD00000A           BEQ      ??SystemSettingsScreensCallback_32
   \   000003AC   016056E2           SUBS     R6,R6,#+1
   \   000003B0   CB00000A           BEQ      ??SystemSettingsScreensCallback_33
   \   000003B4   016056E2           SUBS     R6,R6,#+1
   \   000003B8   E100000A           BEQ      ??SystemSettingsScreensCallback_34
   \   000003BC   016056E2           SUBS     R6,R6,#+1
   \   000003C0   F500000A           BEQ      ??SystemSettingsScreensCallback_35
   \   000003C4   016056E2           SUBS     R6,R6,#+1
   \   000003C8   F800000A           BEQ      ??SystemSettingsScreensCallback_36
   \   000003CC   026056E2           SUBS     R6,R6,#+2
   \   000003D0   6900000A           BEQ      ??SystemSettingsScreensCallback_37
   \   000003D4   016056E2           SUBS     R6,R6,#+1
   \   000003D8   0E00000A           BEQ      ??SystemSettingsScreensCallback_38
   \   000003DC   016056E2           SUBS     R6,R6,#+1
   \   000003E0   1300000A           BEQ      ??SystemSettingsScreensCallback_39
   \   000003E4   016056E2           SUBS     R6,R6,#+1
   \   000003E8   1C00000A           BEQ      ??SystemSettingsScreensCallback_40
   \   000003EC   016056E2           SUBS     R6,R6,#+1
   \   000003F0   4E00000A           BEQ      ??SystemSettingsScreensCallback_41
   \   000003F4   026056E2           SUBS     R6,R6,#+2
   \   000003F8   6B00000A           BEQ      ??SystemSettingsScreensCallback_42
   \   000003FC   026056E2           SUBS     R6,R6,#+2
   \   00000400   3F00000A           BEQ      ??SystemSettingsScreensCallback_43
   \   00000404   096056E2           SUBS     R6,R6,#+9
   \   00000408   8000000A           BEQ      ??SystemSettingsScreensCallback_44
   \   0000040C   016056E2           SUBS     R6,R6,#+1
   \   00000410   6000000A           BEQ      ??SystemSettingsScreensCallback_45
   \   00000414   EA0000EA           B        ??SystemSettingsScreensCallback_7
    557          					{
    558          						case ERASEALL_BUTTON:
    559          							if (SystemSettingsPopUp(ERASE_ALL_SESSIONS, hSystemSettingsScreens))
   \                     ??SystemSettingsScreensCallback_38:
   \   00000418   641095E5           LDR      R1,[R5, #+100]
   \   0000041C   0100A0E3           MOV      R0,#+1
   \   00000420   ........           BL       SystemSettingsPopUp
   \   00000424   000050E3           CMP      R0,#+0
   \   00000428   E500000A           BEQ      ??SystemSettingsScreensCallback_7
    560          								EraseAllSessions();
   \   0000042C   ........           BL       EraseAllSessions
   \   00000430   E30000EA           B        ??SystemSettingsScreensCallback_7
    561          							break;
    562          
    563          						case FACTORYDEFAULTS_BUTTON:
    564          							if (SystemSettingsPopUp(FACTORY_DEFAULTS, hSystemSettingsScreens))
   \                     ??SystemSettingsScreensCallback_39:
   \   00000434   641095E5           LDR      R1,[R5, #+100]
   \   00000438   0200A0E3           MOV      R0,#+2
   \   0000043C   ........           BL       SystemSettingsPopUp
   \   00000440   000050E3           CMP      R0,#+0
   \   00000444   DE00000A           BEQ      ??SystemSettingsScreensCallback_7
    565          							{
    566          								RestoreFactoryDefaults(hSystemSettingsScreens);
   \   00000448   640095E5           LDR      R0,[R5, #+100]
   \   0000044C   ........           BL       RestoreFactoryDefaults
    567          								// Done
    568          								SystemSettingsPopUp(RESTORED_DEFAULTS, hSystemSettingsScreens);
   \   00000450   641095E5           LDR      R1,[R5, #+100]
   \   00000454   0500A0E3           MOV      R0,#+5
   \   00000458   ........           BL       SystemSettingsPopUp
   \   0000045C   D80000EA           B        ??SystemSettingsScreensCallback_7
    569          							}
    570          							break;
    571          
    572          						case FORMATSD_BUTTON:
    573          							if (SystemSettingsPopUp(FORMAT_SDCARD, hSystemSettingsScreens))
   \                     ??SystemSettingsScreensCallback_40:
   \   00000460   641095E5           LDR      R1,[R5, #+100]
   \   00000464   0300A0E3           MOV      R0,#+3
   \   00000468   ........           BL       SystemSettingsPopUp
   \   0000046C   000050E3           CMP      R0,#+0
   \   00000470   D300000A           BEQ      ??SystemSettingsScreensCallback_7
    574          								FormatSDCard(hSystemSettingsScreens);
   \   00000474   644095E5           LDR      R4,[R5, #+100]
   \   00000478   0400A0E1           MOV      R0,R4
   \   0000047C   ........           BL       ForceSDBusy
   \   00000480   0410A0E1           MOV      R1,R4
   \   00000484   0A00A0E3           MOV      R0,#+10
   \   00000488   ........           BL       SystemSettingsPopUp
   \   0000048C   0050A0E1           MOV      R5,R0
   \   00000490   ........           BL       GUI_Exec
   \   00000494   ........           ADR      R6,??DataTable173  ;; ""
   \   00000498   0600A0E1           MOV      R0,R6
   \   0000049C   ........           BL       FS_CACHE_Clean
   \   000004A0   0600A0E1           MOV      R0,R6
   \   000004A4   ........           BL       FS_Sync
   \   000004A8   0030A0E3           MOV      R3,#+0
   \   000004AC   0020A0E3           MOV      R2,#+0
   \   000004B0   0010A0E3           MOV      R1,#+0
   \   000004B4   0600A0E1           MOV      R0,R6
   \   000004B8   ........           BL       FS_AssignCache
   \   000004BC   0600A0E1           MOV      R0,R6
   \   000004C0   ........           BL       FS_FormatSD
   \   000004C4   000050E3           CMP      R0,#+0
   \   000004C8   0500000A           BEQ      ??SystemSettingsScreensCallback_46
   \   000004CC   0500A0E1           MOV      R0,R5
   \   000004D0   ........           BL       WM_DeleteWindow
   \   000004D4   0410A0E1           MOV      R1,R4
   \   000004D8   0B00A0E3           MOV      R0,#+11
   \                     ??SystemSettingsScreensCallback_47:
   \   000004DC   ........           BL       SystemSettingsPopUp
   \   000004E0   B70000EA           B        ??SystemSettingsScreensCallback_7
   \                     ??SystemSettingsScreensCallback_46:
   \   000004E4   ........           BL       ConfigureCache
   \   000004E8   0400A0E1           MOV      R0,R4
   \   000004EC   ........           BL       RestoreFactoryDefaults
   \   000004F0   0500A0E1           MOV      R0,R5
   \   000004F4   ........           BL       WM_DeleteWindow
   \   000004F8   0410A0E1           MOV      R1,R4
   \   000004FC   0900A0E3           MOV      R0,#+9
   \   00000500   F5FFFFEA           B        ??SystemSettingsScreensCallback_47
    575          							break;
    576          
    577          						case PERSONALIZE_BUTTON:
    578          							DisplayPersonalizationScreen(hSystemSettingsScreens);
   \                     ??SystemSettingsScreensCallback_43:
   \   00000504   ........           LDR      R6,??DataTable184_1
   \   00000508   644095E5           LDR      R4,[R5, #+100]
   \   0000050C   301086E2           ADD      R1,R6,#+48
   \   00000510   5A0F85E2           ADD      R0,R5,#+360
   \   00000514   ........           BL       strcpy
   \   00000518   441086E2           ADD      R1,R6,#+68
   \   0000051C   5F0F85E2           ADD      R0,R5,#+380
   \   00000520   ........           BL       strcpy
   \   00000524   0400A0E1           MOV      R0,R4
   \   00000528   ........           BL       ReturnToPersonalizationScreen
    579          							break;
   \   0000052C   A40000EA           B        ??SystemSettingsScreensCallback_7
    580          
    581          						case AUTOON_BUTTON:
    582          							// if su not available or of wrong version (not version 2) then disable auto-on
    583          							if (!suData.suPresent || (suData.suHwRev < 200)) {
   \                     ??SystemSettingsScreensCallback_41:
   \   00000530   ........           LDR      R0,??DataTable184_2
   \   00000534   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000538   000051E3           CMP      R1,#+0
   \   0000053C   0200000A           BEQ      ??SystemSettingsScreensCallback_48
   \   00000540   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000544   C80050E3           CMP      R0,#+200
   \   00000548   0200002A           BCS      ??SystemSettingsScreensCallback_49
    584          								sysData.autoOn = false;
   \                     ??SystemSettingsScreensCallback_48:
   \   0000054C   ........           LDR      R0,??DataTable181_2
   \   00000550   7C70C0E5           STRB     R7,[R0, #+124]
   \   00000554   050000EA           B        ??SystemSettingsScreensCallback_50
    585          							} // if
    586          							else {		// su2 is present
    587          								sysData.autoOn = !sysData.autoOn;	// toggle autoOn
   \                     ??SystemSettingsScreensCallback_49:
   \   00000558   ........           LDR      R6,??DataTable181_2
   \   0000055C   7C00D6E5           LDRB     R0,[R6, #+124]
   \   00000560   000050E3           CMP      R0,#+0
   \   00000564   0170A003           MOVEQ    R7,#+1
   \   00000568   7C70C6E5           STRB     R7,[R6, #+124]
    588          								notifyConfigChange();				// tell the SU the new setting
   \   0000056C   ........           BL       notifyConfigChange
    589          							}
    590          // 							SetAutoOnGraphic();						// show the user
    591          							WM_Invalidate(pMsg->hWin);				// invalidate window so text below buttons can be updated
   \                     ??SystemSettingsScreensCallback_50:
   \   00000570   040094E5           LDR      R0,[R4, #+4]
   \                     ??SystemSettingsScreensCallback_51:
   \   00000574   ........           BL       WM_InvalidateWindow
    592          							break;
   \   00000578   910000EA           B        ??SystemSettingsScreensCallback_7
    593          
    594          						case AUTO_START_BUTTON:
    595          							if (sysData.autoRecord)
   \                     ??SystemSettingsScreensCallback_37:
   \   0000057C   ........           LDR      R6,??DataTable181_2
   \   00000580   7D00D6E5           LDRB     R0,[R6, #+125]
   \   00000584   000050E3           CMP      R0,#+0
    596          								sysData.autoRecord = false;
   \   00000588   0100A003           MOVEQ    R0,#+1
   \   0000058C   7D70C615           STRBNE   R7,[R6, #+125]
   \   00000590   7D00C605           STRBEQ   R0,[R6, #+125]
   \   00000594   F5FFFFEA           B        ??SystemSettingsScreensCallback_50
    597          							else sysData.autoRecord = true;
    598          // 							SetAutoStartGraphic();
    599          							WM_Invalidate(pMsg->hWin);		// Invalidate window so text below buttons can be updated
    600          							break;
    601          
    602          						case RECORD_START_SPEED_BTN:
    603          							DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, RECORD_SPEED, pMsg->hWin);
   \                     ??SystemSettingsScreensCallback_45:
   \   00000598   042094E5           LDR      R2,[R4, #+4]
   \   0000059C   0610A0E3           MOV      R1,#+6
   \   000005A0   0600A0E3           MOV      R0,#+6
   \   000005A4   ........           BL       DisplayNewScreenList
    604          							break;
   \   000005A8   850000EA           B        ??SystemSettingsScreensCallback_7
    605          
    606          						case DAYLIGHT_SAVINGS_BTN:
    607          							if (sysData.dstOn)
   \                     ??SystemSettingsScreensCallback_42:
   \   000005AC   ........           LDR      R6,??DataTable181_2
   \   000005B0   7B10D6E5           LDRB     R1,[R6, #+123]
   \   000005B4   DA07D6E1           LDRSB    R0,[R6, #+122]
   \   000005B8   000051E3           CMP      R1,#+0
    608          							{
    609          								sysData.dstOn = false;
    610          								sysData.timeZone -= 1;
   \   000005BC   01004012           SUBNE    R0,R0,#+1
    611          							}
    612          							else
    613          							{
    614          								sysData.dstOn = true;
   \   000005C0   0170A003           MOVEQ    R7,#+1
    615          								sysData.timeZone += 1;
   \   000005C4   01008002           ADDEQ    R0,R0,#+1
   \   000005C8   7A00C6E5           STRB     R0,[R6, #+122]
   \   000005CC   7B70C6E5           STRB     R7,[R6, #+123]
    616          							}
    617          							BUTTON_SetText(pMsg->hWinSrc, GetDaylightSavingsStr());
   \   000005D0   7B00D6E5           LDRB     R0,[R6, #+123]
   \   000005D4   000050E3           CMP      R0,#+0
   \   000005D8   ............       ADRLNE   R1,`?<Constant "Daylight Savings On">`
   \              ....        
   \   000005E0   ............       ADRLEQ   R1,`?<Constant "Daylight Savings Off">`
   \              ....        
   \   000005E8   080094E5           LDR      R0,[R4, #+8]
   \   000005EC   ........           BL       BUTTON_SetText
    618          							LISTWHEEL_SetText(hTimeWheel, sysData.dstOn ? DstTimeZones : StdTimeZones);
   \   000005F0   7B00D6E5           LDRB     R0,[R6, #+123]
   \   000005F4   000050E3           CMP      R0,#+0
   \   000005F8   401F8512           ADDNE    R1,R5,#+256
   \   000005FC   98108502           ADDEQ    R1,R5,#+152
   \   00000600   6C0095E5           LDR      R0,[R5, #+108]
   \   00000604   ........           BL       LISTWHEEL_SetText
    619          							WM_Invalidate(hTimeWheel);
   \   00000608   6C0095E5           LDR      R0,[R5, #+108]
   \   0000060C   D8FFFFEA           B        ??SystemSettingsScreensCallback_51
    620          							break;
    621          
    622          						case GPS_SIMULATE_BTN:
    623          							if (gpsSimulate)
   \                     ??SystemSettingsScreensCallback_44:
   \   00000610   9600D5E5           LDRB     R0,[R5, #+150]
   \   00000614   000050E3           CMP      R0,#+0
    624          							{
    625          								notifyGPSSimChange(gpsSimulate = false);
   \   00000618   9670C515           STRBNE   R7,[R5, #+150]
   \   0000061C   0000A013           MOVNE    R0,#+0
   \   00000620   0600001A           BNE      ??SystemSettingsScreensCallback_52
    626          							}
    627          							else
    628          							{
    629          								if (SystemSettingsPopUp(GPS_SIMULATE_ON, hSystemSettingsScreens))
   \   00000624   641095E5           LDR      R1,[R5, #+100]
   \   00000628   0F00A0E3           MOV      R0,#+15
   \   0000062C   ........           BL       SystemSettingsPopUp
   \   00000630   000050E3           CMP      R0,#+0
   \   00000634   0200000A           BEQ      ??SystemSettingsScreensCallback_53
    630          									notifyGPSSimChange(gpsSimulate = true);
   \   00000638   0100A0E3           MOV      R0,#+1
   \   0000063C   9600C5E5           STRB     R0,[R5, #+150]
   \                     ??SystemSettingsScreensCallback_52:
   \   00000640   ........           BL       notifyGPSSimChange
    631          							}
    632          							BUTTON_SetText(pMsg->hWinSrc, GetGPSSimulateStr());
   \                     ??SystemSettingsScreensCallback_53:
   \   00000644   9600D5E5           LDRB     R0,[R5, #+150]
   \   00000648   000050E3           CMP      R0,#+0
   \   0000064C   ............       ADRLNE   R1,`?<Constant "Simulating GPS">`
   \              ....        
   \   00000654   ............       ADRLEQ   R1,`?<Constant "Normal GPS">`
   \              ....        
   \   0000065C   080094E5           LDR      R0,[R4, #+8]
   \   00000660   ........           BL       BUTTON_SetText
    633          							break;
   \   00000664   560000EA           B        ??SystemSettingsScreensCallback_7
    634          
    635          						case STANDARD_UNITS:
    636          							sysData.units = STD;
   \                     ??SystemSettingsScreensCallback_31:
   \   00000668   ........           LDR      R0,??DataTable181_2
    637          							BUTTON_SetBitmapEx(hStdCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \   0000066C   0F30A0E3           MOV      R3,#+15
   \   00000670   647080E5           STR      R7,[R0, #+100]
   \   00000674   0F00A0E3           MOV      R0,#+15
   \   00000678   00008DE5           STR      R0,[SP, #+0]
   \   0000067C   ........           LDR      R2,??DataTable184_3
   \   00000680   0010A0E3           MOV      R1,#+0
   \   00000684   780095E5           LDR      R0,[R5, #+120]
   \   00000688   ........           BL       BUTTON_SetBitmapEx
    638          							BUTTON_SetBitmap(hMetricCheck, BUTTON_CI_UNPRESSED, NULL);
   \   0000068C   0020A0E3           MOV      R2,#+0
   \   00000690   0010A0E3           MOV      R1,#+0
   \   00000694   7C0095E5           LDR      R0,[R5, #+124]
   \   00000698   ........           BL       BUTTON_SetBitmap
    639          							WM_InvalidateWindow(hSystemSettingsScreens);
   \                     ??SystemSettingsScreensCallback_54:
   \   0000069C   640095E5           LDR      R0,[R5, #+100]
   \   000006A0   B3FFFFEA           B        ??SystemSettingsScreensCallback_51
    640          							break;
    641          
    642          						case METRIC_UNITS:
    643          							sysData.units = METRIC;
   \                     ??SystemSettingsScreensCallback_32:
   \   000006A4   ........           LDR      R0,??DataTable181_2
   \   000006A8   0110A0E3           MOV      R1,#+1
   \   000006AC   641080E5           STR      R1,[R0, #+100]
    644          							BUTTON_SetBitmap(hStdCheck, BUTTON_CI_UNPRESSED, NULL);
   \   000006B0   0020A0E3           MOV      R2,#+0
   \   000006B4   0010A0E3           MOV      R1,#+0
   \   000006B8   780095E5           LDR      R0,[R5, #+120]
   \   000006BC   ........           BL       BUTTON_SetBitmap
    645          							BUTTON_SetBitmapEx(hMetricCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \   000006C0   0F00A0E3           MOV      R0,#+15
   \   000006C4   00008DE5           STR      R0,[SP, #+0]
   \   000006C8   0F30A0E3           MOV      R3,#+15
   \   000006CC   ........           LDR      R2,??DataTable184_3
   \   000006D0   0010A0E3           MOV      R1,#+0
   \   000006D4   7C0095E5           LDR      R0,[R5, #+124]
   \   000006D8   ........           BL       BUTTON_SetBitmapEx
    646          							WM_InvalidateWindow(hSystemSettingsScreens);
   \                     ??SystemSettingsScreensCallback_55:
   \   000006DC   640095E5           LDR      R0,[R5, #+100]
   \   000006E0   A3FFFFEA           B        ??SystemSettingsScreensCallback_51
    647          							break;
    648          
    649          						case AUTO_ADJUST_ON:
    650          							setOnOffButtonColors(sysData.autoAdjustOn = true, true);
   \                     ??SystemSettingsScreensCallback_33:
   \   000006E4   ........           LDR      R0,??DataTable181_2
   \   000006E8   0170A0E3           MOV      R7,#+1
   \   000006EC   6C70C0E5           STRB     R7,[R0, #+108]
   \   000006F0   ........           LDR      R2,??DataTable182
   \   000006F4   0010A0E3           MOV      R1,#+0
   \   000006F8   800095E5           LDR      R0,[R5, #+128]
   \   000006FC   ........           BL       BUTTON_SetBitmap
   \   00000700   ........           LDR      R2,??DataTable182_1
   \   00000704   0010A0E3           MOV      R1,#+0
   \   00000708   840095E5           LDR      R0,[R5, #+132]
   \   0000070C   ........           BL       BUTTON_SetBitmap
   \   00000710   9470C5E5           STRB     R7,[R5, #+148]
   \   00000714   9570C5E5           STRB     R7,[R5, #+149]
   \   00000718   3210A0E3           MOV      R1,#+50
   \   0000071C   700095E5           LDR      R0,[R5, #+112]
   \   00000720   ........           BL       SLIDER_SetValue
   \   00000724   3210A0E3           MOV      R1,#+50
   \   00000728   740095E5           LDR      R0,[R5, #+116]
   \   0000072C   ........           BL       SLIDER_SetValue
    651          							AutoAdjustOn(true);
   \   00000730   0100A0E3           MOV      R0,#+1
   \   00000734   ........           BL       AutoAdjustOn
    652          							RecordAmbientLight();				// Record the ambient light value when these settings were made
   \   00000738   ........           BL       RecordAmbientLight
    653          							ResumeEnvironmentalUpdates();
   \   0000073C   ........           BL       ResumeEnvironmentalUpdates
    654          							WM_InvalidateWindow(hSystemSettingsScreens);
   \   00000740   D5FFFFEA           B        ??SystemSettingsScreensCallback_54
    655          							break;
    656          
    657          						case AUTO_ADJUST_OFF:
    658          							setOnOffButtonColors(sysData.autoAdjustOn = false, true);
   \                     ??SystemSettingsScreensCallback_34:
   \   00000744   ........           LDR      R6,??DataTable181_2
   \   00000748   ........           LDR      R2,??DataTable182
   \   0000074C   6C70C6E5           STRB     R7,[R6, #+108]
   \   00000750   0010A0E3           MOV      R1,#+0
   \   00000754   840095E5           LDR      R0,[R5, #+132]
   \   00000758   ........           BL       BUTTON_SetBitmap
   \   0000075C   ........           LDR      R2,??DataTable182_1
   \   00000760   0010A0E3           MOV      R1,#+0
   \   00000764   800095E5           LDR      R0,[R5, #+128]
   \   00000768   ........           BL       BUTTON_SetBitmap
   \   0000076C   0170A0E3           MOV      R7,#+1
   \   00000770   9470C5E5           STRB     R7,[R5, #+148]
   \   00000774   9570C5E5           STRB     R7,[R5, #+149]
   \   00000778   681096E5           LDR      R1,[R6, #+104]
   \   0000077C   700095E5           LDR      R0,[R5, #+112]
   \   00000780   ........           BL       SLIDER_SetValue
   \   00000784   701096E5           LDR      R1,[R6, #+112]
   \   00000788   740095E5           LDR      R0,[R5, #+116]
   \   0000078C   ........           BL       SLIDER_SetValue
    659          							AutoAdjustOn(false);
   \   00000790   0000A0E3           MOV      R0,#+0
   \   00000794   ........           BL       AutoAdjustOn
    660          							WM_InvalidateWindow(hSystemSettingsScreens);
   \   00000798   CFFFFFEA           B        ??SystemSettingsScreensCallback_55
    661          							break;
    662          
    663          						case BACKLIGHT_SLIDER:
    664          							ResumeScreenScrolling();				// Allow screen scrolling when slider bars released
   \                     ??SystemSettingsScreensCallback_35:
   \   0000079C   ........           LDR      R0,??DataTable184
   \   000007A0   0110A0E3           MOV      R1,#+1
   \   000007A4   001080E5           STR      R1,[R0, #+0]
    665          							RecordAmbientLight();					// Record the ambient light value when these settings were made
   \   000007A8   ........           BL       RecordAmbientLight
    666          							ResumeEnvironmentalUpdates();
   \   000007AC   030000EA           B        ??SystemSettingsScreensCallback_56
    667          							break;
    668          
    669          						case INTENSITY_SLIDER:
    670          							ResumeLEDUpdates();						// Resume RPM and warning control of the LEDs
   \                     ??SystemSettingsScreensCallback_36:
   \   000007B0   ........           BL       ResumeLEDUpdates
    671          							ResumeScreenScrolling();				// Allow screen scrolling when slider bars released
   \   000007B4   ........           LDR      R0,??DataTable184
   \   000007B8   0110A0E3           MOV      R1,#+1
   \   000007BC   001080E5           STR      R1,[R0, #+0]
    672          							ResumeEnvironmentalUpdates();
   \                     ??SystemSettingsScreensCallback_56:
   \   000007C0   ........           BL       ResumeEnvironmentalUpdates
    673          							break;
    674          
    675          						case LAPMETER_BUTTON:
    676          						default:
    677          							if (!KMCDialogSemaphore)
    678          							{
    679          								KMCDialogSemaphore = 1;
    680          								KMCDialogSemaphore = 0;
    681          							}
    682          							break;
    683          					}
    684          					break;
    685          			}
    686          			break;
    687          
    688          		default:
    689          			WM_DefaultProc(pMsg);
    690          	}
    691          }
   \                     ??SystemSettingsScreensCallback_7:
   \   000007C4   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000007C8   F080BDE8           POP      {R4-R7,PC}       ;; return
    692          

   \                                 In section .text, align 4, keep-with-next
    693          void DisplayLapMeter(WM_HWIN hParent)
    694          {
   \                     DisplayLapMeter:
   \   00000000   00402DE9           PUSH     {LR}
    695          	DisplayStdListScreen(hParent, LapMeter, LAP_METER_WHEEL, &hLapMeterListWheel, sysData.lapMeter, TEXT_ONLY, "Graph Scale");
   \   00000004   ............       ADRL     R2,`?<Constant "Graph Scale">`
   \              ....        
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   08208DE5           STR      R2,[SP, #+8]
   \   00000014   0020A0E3           MOV      R2,#+0
   \   00000018   04208DE5           STR      R2,[SP, #+4]
   \   0000001C   ........           LDR      R2,??DataTable181_2
   \   00000020   ........           LDR      R1,??DataTable185
   \   00000024   7920D2E5           LDRB     R2,[R2, #+121]
   \   00000028   183081E2           ADD      R3,R1,#+24
   \   0000002C   00208DE5           STR      R2,[SP, #+0]
   \   00000030   6320A0E3           MOV      R2,#+99
   \   00000034   802F82E3           ORR      R2,R2,#0x200
   \   00000038   ........           BL       DisplayStdListScreen
    696          }
   \   0000003C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000040   0080BDE8           POP      {PC}             ;; return
    697          

   \                                 In section .text, align 4, keep-with-next
    698          void DisplayDisplaySelection(WM_HWIN hParent)
    699          {
   \                     DisplayDisplaySelection:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    700          	hBacklightSlider = SLIDER_CreateEx(SLIDER_LEFT - SLIDER_BALL_RADIUS, BACKLIGHT_Y - SLIDER_BALL_RADIUS, SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hParent, WM_CF_SHOW, 0, BACKLIGHT_SLIDER);
   \   00000008   0500A0E3           MOV      R0,#+5
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   7760A0E3           MOV      R6,#+119
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   406F86E3           ORR      R6,R6,#0x100
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   00508DE5           STR      R5,[SP, #+0]
   \   00000034   2030A0E3           MOV      R3,#+32
   \   00000038   0620A0E1           MOV      R2,R6
   \   0000003C   4510A0E3           MOV      R1,#+69
   \   00000040   2C00A0E3           MOV      R0,#+44
   \   00000044   ........           BL       SLIDER_CreateEx
   \   00000048   ........           LDR      R4,??DataTable181
    701          	SLIDER_SetNumTicks(hBacklightSlider, 0);
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   700084E5           STR      R0,[R4, #+112]
   \   00000054   ........           BL       SLIDER_SetNumTicks
    702          
    703          	hIntensitySlider = SLIDER_CreateEx(SLIDER_LEFT - SLIDER_BALL_RADIUS, LED_INTENSITY_Y - SLIDER_BALL_RADIUS, SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hParent, WM_CF_SHOW, 0, INTENSITY_SLIDER);
   \   00000058   0600A0E3           MOV      R0,#+6
   \   0000005C   800E80E3           ORR      R0,R0,#0x800
   \   00000060   0C008DE5           STR      R0,[SP, #+12]
   \   00000064   0000A0E3           MOV      R0,#+0
   \   00000068   08008DE5           STR      R0,[SP, #+8]
   \   0000006C   0200A0E3           MOV      R0,#+2
   \   00000070   04008DE5           STR      R0,[SP, #+4]
   \   00000074   00508DE5           STR      R5,[SP, #+0]
   \   00000078   2030A0E3           MOV      R3,#+32
   \   0000007C   0620A0E1           MOV      R2,R6
   \   00000080   9010A0E3           MOV      R1,#+144
   \   00000084   2C00A0E3           MOV      R0,#+44
   \   00000088   ........           BL       SLIDER_CreateEx
   \   0000008C   740084E5           STR      R0,[R4, #+116]
    704          	SLIDER_SetNumTicks(hIntensitySlider, 0);
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   ........           BL       SLIDER_SetNumTicks
    705          
    706          	hOnBtn = BUTTON_CreateEx( 245,  205, 87, 34, hParent, WM_CF_SHOW, 0, AUTO_ADJUST_ON);
   \   00000098   0300A0E3           MOV      R0,#+3
   \   0000009C   800E80E3           ORR      R0,R0,#0x800
   \   000000A0   0C008DE5           STR      R0,[SP, #+12]
   \   000000A4   0000A0E3           MOV      R0,#+0
   \   000000A8   08008DE5           STR      R0,[SP, #+8]
   \   000000AC   0200A0E3           MOV      R0,#+2
   \   000000B0   04008DE5           STR      R0,[SP, #+4]
   \   000000B4   00508DE5           STR      R5,[SP, #+0]
   \   000000B8   2230A0E3           MOV      R3,#+34
   \   000000BC   5720A0E3           MOV      R2,#+87
   \   000000C0   CD10A0E3           MOV      R1,#+205
   \   000000C4   F500A0E3           MOV      R0,#+245
   \   000000C8   ........           BL       BUTTON_CreateEx
   \   000000CC   800084E5           STR      R0,[R4, #+128]
    707          	BUTTON_SetTextColor(hOnBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000000D0   0020A0E3           MOV      R2,#+0
   \   000000D4   0010A0E3           MOV      R1,#+0
   \   000000D8   ........           BL       BUTTON_SetTextColor
    708          	BUTTON_SetFont(hOnBtn, &GUI_Font24B_ASCII);
   \   000000DC   ........           LDR      R6,??DataTable185_1
   \   000000E0   800094E5           LDR      R0,[R4, #+128]
   \   000000E4   0610A0E1           MOV      R1,R6
   \   000000E8   ........           BL       BUTTON_SetFont
    709          	BUTTON_SetText(hOnBtn, "ON");
   \   000000EC   ........           ADR      R1,??DataTable176  ;; 0x4F, 0x4E, 0x00, 0x00
   \   000000F0   800094E5           LDR      R0,[R4, #+128]
   \   000000F4   ........           BL       BUTTON_SetText
    710          
    711          	hOffBtn = BUTTON_CreateEx( 355,  205, 87, 34, hParent, WM_CF_SHOW, 0, AUTO_ADJUST_OFF);
   \   000000F8   0400A0E3           MOV      R0,#+4
   \   000000FC   800E80E3           ORR      R0,R0,#0x800
   \   00000100   0C008DE5           STR      R0,[SP, #+12]
   \   00000104   0000A0E3           MOV      R0,#+0
   \   00000108   08008DE5           STR      R0,[SP, #+8]
   \   0000010C   0200A0E3           MOV      R0,#+2
   \   00000110   04008DE5           STR      R0,[SP, #+4]
   \   00000114   CD10A0E3           MOV      R1,#+205
   \   00000118   00508DE5           STR      R5,[SP, #+0]
   \   0000011C   2230A0E3           MOV      R3,#+34
   \   00000120   5720A0E3           MOV      R2,#+87
   \   00000124   960081E2           ADD      R0,R1,#+150
   \   00000128   ........           BL       BUTTON_CreateEx
   \   0000012C   840084E5           STR      R0,[R4, #+132]
    712          	BUTTON_SetTextColor(hOffBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000130   0020A0E3           MOV      R2,#+0
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   ........           BL       BUTTON_SetTextColor
    713          	BUTTON_SetFont(hOffBtn, &GUI_Font24B_ASCII);
   \   0000013C   0610A0E1           MOV      R1,R6
   \   00000140   840094E5           LDR      R0,[R4, #+132]
   \   00000144   ........           BL       BUTTON_SetFont
    714          	BUTTON_SetText(hOffBtn, "OFF");
   \   00000148   ........           ADR      R1,??DataTable178  ;; "OFF"
   \   0000014C   840094E5           LDR      R0,[R4, #+132]
   \   00000150   ........           BL       BUTTON_SetText
    715          
    716          	setOnOffButtonColors(sysData.autoAdjustOn, true);
   \   00000154   ........           LDR      R7,??DataTable181_2
   \   00000158   0150A0E3           MOV      R5,#+1
   \   0000015C   6C00D7E5           LDRB     R0,[R7, #+108]
   \   00000160   ........           LDR      R6,??DataTable182_1
   \   00000164   ........           LDR      R2,??DataTable182
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   0010A0E3           MOV      R1,#+0
   \   00000170   0C00000A           BEQ      ??DisplayDisplaySelection_0
   \   00000174   800094E5           LDR      R0,[R4, #+128]
   \   00000178   ........           BL       BUTTON_SetBitmap
   \   0000017C   0620A0E1           MOV      R2,R6
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   840094E5           LDR      R0,[R4, #+132]
   \   00000188   ........           BL       BUTTON_SetBitmap
   \   0000018C   9450C4E5           STRB     R5,[R4, #+148]
   \   00000190   9550C4E5           STRB     R5,[R4, #+149]
   \   00000194   3210A0E3           MOV      R1,#+50
   \   00000198   700094E5           LDR      R0,[R4, #+112]
   \   0000019C   ........           BL       SLIDER_SetValue
   \   000001A0   3210A0E3           MOV      R1,#+50
   \   000001A4   0B0000EA           B        ??DisplayDisplaySelection_1
   \                     ??DisplayDisplaySelection_0:
   \   000001A8   840094E5           LDR      R0,[R4, #+132]
   \   000001AC   ........           BL       BUTTON_SetBitmap
   \   000001B0   0620A0E1           MOV      R2,R6
   \   000001B4   0010A0E3           MOV      R1,#+0
   \   000001B8   800094E5           LDR      R0,[R4, #+128]
   \   000001BC   ........           BL       BUTTON_SetBitmap
   \   000001C0   9450C4E5           STRB     R5,[R4, #+148]
   \   000001C4   9550C4E5           STRB     R5,[R4, #+149]
   \   000001C8   681097E5           LDR      R1,[R7, #+104]
   \   000001CC   700094E5           LDR      R0,[R4, #+112]
   \   000001D0   ........           BL       SLIDER_SetValue
   \   000001D4   701097E5           LDR      R1,[R7, #+112]
   \                     ??DisplayDisplaySelection_1:
   \   000001D8   740094E5           LDR      R0,[R4, #+116]
   \   000001DC   14D08DE2           ADD      SP,SP,#+20
   \   000001E0   F040BDE8           POP      {R4-R7,LR}
   \   000001E4   ........           B        SLIDER_SetValue  ;; tailcall
    717          }
    718          

   \                                 In section .text, align 4, keep-with-next
    719          void setOnOffButtonColors(char onState, char setSliders)
    720          {
   \                     setOnOffButtonColors:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0140A0E1           MOV      R4,R1
    721          	if (onState)
   \   00000008   ........           LDR      R5,??DataTable182_1
   \   0000000C   ........           LDR      R6,??DataTable181
   \   00000010   ........           LDR      R2,??DataTable182
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0010A0E3           MOV      R1,#+0
   \   0000001C   0F00000A           BEQ      ??setOnOffButtonColors_0
    722          	{
    723          		BUTTON_SetBitmap(hOnBtn, BUTTON_BI_UNPRESSED, &bmOnOffGreen);
   \   00000020   800096E5           LDR      R0,[R6, #+128]
   \   00000024   ........           BL       BUTTON_SetBitmap
    724          		BUTTON_SetBitmap(hOffBtn, BUTTON_BI_UNPRESSED, &bmOnOffWhite);
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   840096E5           LDR      R0,[R6, #+132]
   \   00000034   ........           BL       BUTTON_SetBitmap
    725          		if (setSliders)
   \   00000038   000054E3           CMP      R4,#+0
   \   0000003C   1900000A           BEQ      ??setOnOffButtonColors_1
    726          		{
    727          			intensityIgnore = true;		// Since this routine just set the slider positions, ignore the next time
   \   00000040   0100A0E3           MOV      R0,#+1
   \   00000044   9400C6E5           STRB     R0,[R6, #+148]
    728          			backlightIgnore = true;		// the slider value changed event is handled as that event come from here.
   \   00000048   9500C6E5           STRB     R0,[R6, #+149]
    729          			SLIDER_SetValue(hBacklightSlider, SLIDER_RANGE / 2);
   \   0000004C   3210A0E3           MOV      R1,#+50
   \   00000050   700096E5           LDR      R0,[R6, #+112]
   \   00000054   ........           BL       SLIDER_SetValue
    730          			SLIDER_SetValue(hIntensitySlider, SLIDER_RANGE / 2);
   \   00000058   3210A0E3           MOV      R1,#+50
   \   0000005C   0F0000EA           B        ??setOnOffButtonColors_2
    731          		}
    732          	}
    733          	else
    734          	{
    735          		BUTTON_SetBitmap(hOffBtn, BUTTON_BI_UNPRESSED, &bmOnOffGreen);
   \                     ??setOnOffButtonColors_0:
   \   00000060   840096E5           LDR      R0,[R6, #+132]
   \   00000064   ........           BL       BUTTON_SetBitmap
    736          		BUTTON_SetBitmap(hOnBtn, BUTTON_BI_UNPRESSED, &bmOnOffWhite);
   \   00000068   0520A0E1           MOV      R2,R5
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   800096E5           LDR      R0,[R6, #+128]
   \   00000074   ........           BL       BUTTON_SetBitmap
    737          		if (setSliders)
   \   00000078   000054E3           CMP      R4,#+0
   \   0000007C   0900000A           BEQ      ??setOnOffButtonColors_1
    738          		{
    739          			intensityIgnore = true;		// Since this routine just set the slider positions, ignore the next time
   \   00000080   0100A0E3           MOV      R0,#+1
    740          			backlightIgnore = true;		// the slider value changed event is handled as that event come from here.
    741          			SLIDER_SetValue(hBacklightSlider, sysData.backlight);
   \   00000084   ........           LDR      R4,??DataTable181_2
   \   00000088   9400C6E5           STRB     R0,[R6, #+148]
   \   0000008C   9500C6E5           STRB     R0,[R6, #+149]
   \   00000090   681094E5           LDR      R1,[R4, #+104]
   \   00000094   700096E5           LDR      R0,[R6, #+112]
   \   00000098   ........           BL       SLIDER_SetValue
    742          			SLIDER_SetValue(hIntensitySlider, sysData.LEDBrightness);
   \   0000009C   701094E5           LDR      R1,[R4, #+112]
   \                     ??setOnOffButtonColors_2:
   \   000000A0   740096E5           LDR      R0,[R6, #+116]
   \   000000A4   ........           BL       SLIDER_SetValue
    743          		}
    744          	}
    745          }
   \                     ??setOnOffButtonColors_1:
   \   000000A8   7080BDE8           POP      {R4-R6,PC}       ;; return
    746          

   \                                 In section .text, align 4, keep-with-next
    747          void DisplayAutoStartSelection(WM_HWIN hParent)
    748          {
   \                     DisplayAutoStartSelection:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    749          #if 0
    750          	hAutoOnButton = BUTTON_CreateEx(45, 50, 178, 115, hParent, WM_CF_SHOW, 0, AUTOON_BUTTON);
    751          	SetAutoOnGraphic();
    752          
    753          	hAutoStartButton = BUTTON_CreateEx(260, 50, 178, 115, hParent, WM_CF_SHOW, 0, AUTO_START_BUTTON);
    754          	SetAutoStartGraphic();
    755          #else
    756          	hAutoOnButton = BUTTON_CreateEx(BUTTON_LEFT, 84, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, AUTOON_BUTTON);
   \   00000008   0C00A0E3           MOV      R0,#+12
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0250A0E3           MOV      R5,#+2
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   405F85E3           ORR      R5,R5,#0x100
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   00408DE5           STR      R4,[SP, #+0]
   \   00000034   2730A0E3           MOV      R3,#+39
   \   00000038   CA20A0E3           MOV      R2,#+202
   \   0000003C   5410A0E3           MOV      R1,#+84
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       BUTTON_CreateEx
   \   00000048   ........           LDR      R6,??DataTable191
    757          	BUTTON_SetBitmap(hAutoOnButton, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   0000004C   ........           LDR      R2,??DataTable191_1
   \   00000050   000086E5           STR      R0,[R6, #+0]
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   ........           BL       BUTTON_SetBitmap
    758          	BUTTON_SetTextColor(hAutoOnButton, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   0000005C   FF74E0E3           MVN      R7,#-16777216
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   000096E5           LDR      R0,[R6, #+0]
   \   0000006C   ........           BL       BUTTON_SetTextColor
    759          	BUTTON_SetTextColor(hAutoOnButton, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   0110A0E3           MOV      R1,#+1
   \   00000078   000096E5           LDR      R0,[R6, #+0]
   \   0000007C   ........           BL       BUTTON_SetTextColor
    760          	BUTTON_SetFocussable(hAutoOnButton, 0);
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   000096E5           LDR      R0,[R6, #+0]
   \   00000088   ........           BL       BUTTON_SetFocussable
    761          	BUTTON_SetText(hAutoOnButton, "Auto Power On");
   \   0000008C   ............       ADRL     R1,`?<Constant "Auto Power On">`
   \              ....        
   \   00000094   000096E5           LDR      R0,[R6, #+0]
   \   00000098   ........           BL       BUTTON_SetText
    762          
    763          	hAutoStartButton = BUTTON_CreateEx(BUTTON_LEFT, 158, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, AUTO_START_BUTTON);
   \   0000009C   0800A0E3           MOV      R0,#+8
   \   000000A0   800E80E3           ORR      R0,R0,#0x800
   \   000000A4   0C008DE5           STR      R0,[SP, #+12]
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   08008DE5           STR      R0,[SP, #+8]
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   04008DE5           STR      R0,[SP, #+4]
   \   000000B8   00408DE5           STR      R4,[SP, #+0]
   \   000000BC   2730A0E3           MOV      R3,#+39
   \   000000C0   CA20A0E3           MOV      R2,#+202
   \   000000C4   9E10A0E3           MOV      R1,#+158
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           BL       BUTTON_CreateEx
   \   000000D0   040086E5           STR      R0,[R6, #+4]
    764          	BUTTON_SetBitmap(hAutoStartButton, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   000000D4   ........           LDR      R2,??DataTable191_2
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   ........           BL       BUTTON_SetBitmap
    765          	BUTTON_SetTextColor(hAutoStartButton, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   000000E0   0720A0E1           MOV      R2,R7
   \   000000E4   0010A0E3           MOV      R1,#+0
   \   000000E8   040096E5           LDR      R0,[R6, #+4]
   \   000000EC   ........           BL       BUTTON_SetTextColor
    766          	BUTTON_SetTextColor(hAutoStartButton, BUTTON_BI_PRESSED, GUI_BLACK);
   \   000000F0   0020A0E3           MOV      R2,#+0
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   040096E5           LDR      R0,[R6, #+4]
   \   000000FC   ........           BL       BUTTON_SetTextColor
    767          	BUTTON_SetFocussable(hAutoStartButton, 0);
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   040096E5           LDR      R0,[R6, #+4]
   \   00000108   ........           BL       BUTTON_SetFocussable
    768          	BUTTON_SetText(hAutoStartButton, "Auto Start");
   \   0000010C   ............       ADRL     R1,`?<Constant "Auto Start">`
   \              ....        
   \   00000114   040096E5           LDR      R0,[R6, #+4]
   \   00000118   ........           BL       BUTTON_SetText
    769          
    770          	hRecordStartSpeedButton = BUTTON_CreateEx(BUTTON_LEFT, 213, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, RECORD_START_SPEED_BTN);
   \   0000011C   1A00A0E3           MOV      R0,#+26
   \   00000120   800E80E3           ORR      R0,R0,#0x800
   \   00000124   0C008DE5           STR      R0,[SP, #+12]
   \   00000128   0000A0E3           MOV      R0,#+0
   \   0000012C   08008DE5           STR      R0,[SP, #+8]
   \   00000130   0200A0E3           MOV      R0,#+2
   \   00000134   04008DE5           STR      R0,[SP, #+4]
   \   00000138   00408DE5           STR      R4,[SP, #+0]
   \   0000013C   2730A0E3           MOV      R3,#+39
   \   00000140   CA20A0E3           MOV      R2,#+202
   \   00000144   D510A0E3           MOV      R1,#+213
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           BL       BUTTON_CreateEx
   \   00000150   080086E5           STR      R0,[R6, #+8]
    771          	BUTTON_SetBitmap(hRecordStartSpeedButton, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   00000154   ........           LDR      R2,??DataTable192
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   ........           BL       BUTTON_SetBitmap
    772          	BUTTON_SetTextColor(hRecordStartSpeedButton, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000160   0020A0E3           MOV      R2,#+0
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   080096E5           LDR      R0,[R6, #+8]
   \   0000016C   ........           BL       BUTTON_SetTextColor
    773          	BUTTON_SetTextColor(hRecordStartSpeedButton, BUTTON_BI_PRESSED, GUI_WHITE);
   \   00000170   0720A0E1           MOV      R2,R7
   \   00000174   0110A0E3           MOV      R1,#+1
   \   00000178   080096E5           LDR      R0,[R6, #+8]
   \   0000017C   ........           BL       BUTTON_SetTextColor
    774          	BUTTON_SetFocussable(hRecordStartSpeedButton, 0);
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   080096E5           LDR      R0,[R6, #+8]
   \   00000188   ........           BL       BUTTON_SetFocussable
    775          	BUTTON_SetText(hRecordStartSpeedButton, "Record Settings");
   \   0000018C   080096E5           LDR      R0,[R6, #+8]
   \   00000190   14D08DE2           ADD      SP,SP,#+20
   \   00000194   F040BDE8           POP      {R4-R7,LR}
   \   00000198   ............       ADRL     R1,`?<Constant "Record Settings">`
   \              ....        
   \   000001A0   ........           B        BUTTON_SetText   ;; tailcall
    776          #endif
    777          }
    778          

   \                                 In section .text, align 4, keep-with-next
    779          const char *GetAutoOnText(void)
    780          {
    781          	if (!suData.suPresent || (suData.suHwRev < 200))
   \                     GetAutoOnText:
   \   00000000   ........           LDR      R0,??DataTable184_2
   \   00000004   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000008   000051E3           CMP      R1,#+0
   \   0000000C   0200000A           BEQ      ??GetAutoOnText_0
   \   00000010   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000014   C80050E3           CMP      R0,#+200
   \   00000018   0200002A           BCS      ??GetAutoOnText_1
    782          		return "Not Supported by SU";
   \                     ??GetAutoOnText_0:
   \   0000001C   ............       ADRL     R0,`?<Constant "Not Supported by SU">`
   \              ....        
   \   00000024   1EFF2FE1           BX       LR
    783          
    784          	if (sysData.autoOn)
   \                     ??GetAutoOnText_1:
   \   00000028   ........           LDR      R0,??DataTable181_2
   \   0000002C   7C00D0E5           LDRB     R0,[R0, #+124]
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0200000A           BEQ      ??GetAutoOnText_2
    785          		return "Auto On with Power";
   \   00000038   ............       ADRL     R0,`?<Constant "Auto On with Power">`
   \              ....        
   \   00000040   1EFF2FE1           BX       LR
    786          	else return "Turns on with Button";
   \                     ??GetAutoOnText_2:
   \   00000044   ............       ADRL     R0,`?<Constant "Turns on with Button">`
   \              ....        
   \   0000004C   1EFF2FE1           BX       LR               ;; return
    787          }
    788          
    789          #if 0
    790          void SetAutoOnGraphic(void)
    791          {
    792          	if (sysData.autoOn)
    793          		BUTTON_SetBitmap(hAutoOnButton, BUTTON_CI_UNPRESSED, &bmAutoOnButton);
    794          	else
    795          		BUTTON_SetBitmap(hAutoOnButton, BUTTON_CI_UNPRESSED, &bmAutoOffButton);
    796          }
    797          
    798          void SetAutoStartGraphic(void)
    799          {
    800          	if (sysData.autoRecord)
    801          		BUTTON_SetBitmap(hAutoStartButton, BUTTON_CI_UNPRESSED, &bmRaceScreenButton);
    802          	else BUTTON_SetBitmap(hAutoStartButton, BUTTON_CI_UNPRESSED, &bmMenuButton);
    803          }
    804          
    805          unsigned char *GetAutoStartText(void)
    806          {
    807          	if (sysData.autoRecord)
    808          		return "Auto Record";
    809          	else return "Do Not Auto Record";
    810          }
    811          #endif
    812          

   \                                 In section .text, align 4, keep-with-next
    813          char *GetLapMeterText(void)
    814          {
    815          	return LapMeter[sysData.lapMeter];
   \                     GetLapMeterText:
   \   00000000   ........           LDR      R0,??DataTable181_2
   \   00000004   ........           LDR      R1,??DataTable185
   \   00000008   7900D0E5           LDRB     R0,[R0, #+121]
   \   0000000C   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   00000010   1EFF2FE1           BX       LR               ;; return
    816          }
    817          
    818          

   \                                 In section .text, align 4, keep-with-next
    819          void DisplayUnitsSelection(WM_HWIN hParent)
    820          {
   \                     DisplayUnitsSelection:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   14D04DE2           SUB      SP,SP,#+20
    821          	BUTTON_Handle hBtn;
    822          
    823          	hBtn = BUTTON_CreateEx(155,  43, 300, 100, hParent, WM_CF_SHOW, 0, STANDARD_UNITS);
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   08008DE5           STR      R0,[SP, #+8]
   \   00000014   0160A0E3           MOV      R6,#+1
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   806E86E3           ORR      R6,R6,#0x800
   \   00000020   04008DE5           STR      R0,[SP, #+4]
   \   00000024   0C608DE5           STR      R6,[SP, #+12]
   \   00000028   00508DE5           STR      R5,[SP, #+0]
   \   0000002C   6430A0E3           MOV      R3,#+100
   \   00000030   4B2FA0E3           MOV      R2,#+300
   \   00000034   2B10A0E3           MOV      R1,#+43
   \   00000038   9B00A0E3           MOV      R0,#+155
   \   0000003C   ........           BL       BUTTON_CreateEx
    824          	BUTTON_SetBkColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000040   FF44E0E3           MVN      R4,#-16777216
   \   00000044   0080A0E1           MOV      R8,R0
   \   00000048   0420A0E1           MOV      R2,R4
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   ........           BL       BUTTON_SetBkColor
    825          	BUTTON_SetFont(hBtn, &GUI_Font32B_ASCII);
   \   00000054   ........           LDR      R7,??DataTable192_2
   \   00000058   0800A0E1           MOV      R0,R8
   \   0000005C   0710A0E1           MOV      R1,R7
   \   00000060   ........           BL       BUTTON_SetFont
    826          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   0800A0E1           MOV      R0,R8
   \   00000070   ........           BL       BUTTON_SetTextColor
    827          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_RED);
   \   00000074   FF20A0E3           MOV      R2,#+255
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   0800A0E1           MOV      R0,R8
   \   00000080   ........           BL       BUTTON_SetTextColor
    828          	BUTTON_SetTextAlign(hBtn, GUI_TA_LEFT | GUI_TA_VCENTER);
   \   00000084   0C10A0E3           MOV      R1,#+12
   \   00000088   0800A0E1           MOV      R0,R8
   \   0000008C   ........           BL       BUTTON_SetTextAlign
    829          	BUTTON_SetText(hBtn, "  US Standard");
   \   00000090   ............       ADRL     R1,`?<Constant "  US Standard">`
   \              ....        
   \   00000098   0800A0E1           MOV      R0,R8
   \   0000009C   ........           BL       BUTTON_SetText
    830          	BUTTON_SetSkinClassic(hBtn);
   \   000000A0   0800A0E1           MOV      R0,R8
   \   000000A4   ........           BL       BUTTON_SetSkinClassic
    831          
    832          	hBtn = BUTTON_CreateEx(155,  149, 300, 100, hParent, WM_CF_SHOW, 0, METRIC_UNITS);
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   08008DE5           STR      R0,[SP, #+8]
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   018086E2           ADD      R8,R6,#+1
   \   000000B8   04008DE5           STR      R0,[SP, #+4]
   \   000000BC   0C808DE5           STR      R8,[SP, #+12]
   \   000000C0   00508DE5           STR      R5,[SP, #+0]
   \   000000C4   6430A0E3           MOV      R3,#+100
   \   000000C8   4B2FA0E3           MOV      R2,#+300
   \   000000CC   9510A0E3           MOV      R1,#+149
   \   000000D0   9B00A0E3           MOV      R0,#+155
   \   000000D4   ........           BL       BUTTON_CreateEx
   \   000000D8   0090A0E1           MOV      R9,R0
    833          	BUTTON_SetBkColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   000000DC   0420A0E1           MOV      R2,R4
   \   000000E0   0010A0E3           MOV      R1,#+0
   \   000000E4   ........           BL       BUTTON_SetBkColor
    834          	BUTTON_SetFont(hBtn, &GUI_Font32B_ASCII);
   \   000000E8   0710A0E1           MOV      R1,R7
   \   000000EC   0900A0E1           MOV      R0,R9
   \   000000F0   ........           BL       BUTTON_SetFont
    835          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   000000F4   0020A0E3           MOV      R2,#+0
   \   000000F8   0010A0E3           MOV      R1,#+0
   \   000000FC   0900A0E1           MOV      R0,R9
   \   00000100   ........           BL       BUTTON_SetTextColor
    836          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_RED);
   \   00000104   FF20A0E3           MOV      R2,#+255
   \   00000108   0110A0E3           MOV      R1,#+1
   \   0000010C   0900A0E1           MOV      R0,R9
   \   00000110   ........           BL       BUTTON_SetTextColor
    837          	BUTTON_SetTextAlign(hBtn, GUI_TA_LEFT | GUI_TA_VCENTER);
   \   00000114   0C10A0E3           MOV      R1,#+12
   \   00000118   0900A0E1           MOV      R0,R9
   \   0000011C   ........           BL       BUTTON_SetTextAlign
    838          	BUTTON_SetText(hBtn, "  Metric");
   \   00000120   ............       ADRL     R1,`?<Constant "  Metric">`
   \              ....        
   \   00000128   0900A0E1           MOV      R0,R9
   \   0000012C   ........           BL       BUTTON_SetText
    839          	BUTTON_SetSkinClassic(hBtn);
   \   00000130   0900A0E1           MOV      R0,R9
   \   00000134   ........           BL       BUTTON_SetSkinClassic
    840          
    841          	hStdCheck = BUTTON_CreateEx(30,  43, 115, 100, hParent, WM_CF_SHOW, 0, STANDARD_UNITS);
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   08008DE5           STR      R0,[SP, #+8]
   \   00000140   0200A0E3           MOV      R0,#+2
   \   00000144   04008DE5           STR      R0,[SP, #+4]
   \   00000148   0C608DE5           STR      R6,[SP, #+12]
   \   0000014C   00508DE5           STR      R5,[SP, #+0]
   \   00000150   6430A0E3           MOV      R3,#+100
   \   00000154   7320A0E3           MOV      R2,#+115
   \   00000158   2B10A0E3           MOV      R1,#+43
   \   0000015C   1E00A0E3           MOV      R0,#+30
   \   00000160   ........           BL       BUTTON_CreateEx
   \   00000164   ........           LDR      R6,??DataTable181
    842          	BUTTON_SetBkColor(hStdCheck, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000168   0420A0E1           MOV      R2,R4
   \   0000016C   780086E5           STR      R0,[R6, #+120]
   \   00000170   0010A0E3           MOV      R1,#+0
   \   00000174   ........           BL       BUTTON_SetBkColor
    843          	BUTTON_SetSkinClassic(hStdCheck);
   \   00000178   780096E5           LDR      R0,[R6, #+120]
   \   0000017C   ........           BL       BUTTON_SetSkinClassic
    844          
    845          	hMetricCheck = BUTTON_CreateEx(30,  149, 115, 100, hParent, WM_CF_SHOW, 0, METRIC_UNITS);
   \   00000180   0000A0E3           MOV      R0,#+0
   \   00000184   08008DE5           STR      R0,[SP, #+8]
   \   00000188   0200A0E3           MOV      R0,#+2
   \   0000018C   04008DE5           STR      R0,[SP, #+4]
   \   00000190   0C808DE5           STR      R8,[SP, #+12]
   \   00000194   00508DE5           STR      R5,[SP, #+0]
   \   00000198   6430A0E3           MOV      R3,#+100
   \   0000019C   7320A0E3           MOV      R2,#+115
   \   000001A0   9510A0E3           MOV      R1,#+149
   \   000001A4   1E00A0E3           MOV      R0,#+30
   \   000001A8   ........           BL       BUTTON_CreateEx
   \   000001AC   7C0086E5           STR      R0,[R6, #+124]
    846          	BUTTON_SetBkColor(hMetricCheck, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   000001B0   0420A0E1           MOV      R2,R4
   \   000001B4   0010A0E3           MOV      R1,#+0
   \   000001B8   ........           BL       BUTTON_SetBkColor
    847          	BUTTON_SetSkinClassic(hMetricCheck);
   \   000001BC   7C0096E5           LDR      R0,[R6, #+124]
   \   000001C0   ........           BL       BUTTON_SetSkinClassic
    848          
    849          	if (sysData.units == STD)
   \   000001C4   ........           LDR      R0,??DataTable181_2
   \   000001C8   ........           LDR      R2,??DataTable184_3
   \   000001CC   640090E5           LDR      R0,[R0, #+100]
   \   000001D0   0010A0E3           MOV      R1,#+0
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   0F00A0E3           MOV      R0,#+15
   \   000001DC   00008DE5           STR      R0,[SP, #+0]
   \   000001E0   0030A0E1           MOV      R3,R0
    850          		BUTTON_SetBitmapEx(hStdCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \   000001E4   78009605           LDREQ    R0,[R6, #+120]
    851          	else BUTTON_SetBitmapEx(hMetricCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \   000001E8   7C009615           LDRNE    R0,[R6, #+124]
   \   000001EC   ........           BL       BUTTON_SetBitmapEx
    852          }
   \   000001F0   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000001F4   F083BDE8           POP      {R4-R9,PC}       ;; return
    853          

   \                                 In section .text, align 4, keep-with-next
    854          const char *GetGPSSimulateStr(void)
    855          {
    856          	return (gpsSimulate ? "Simulating GPS" : "Normal GPS");
   \                     GetGPSSimulateStr:
   \   00000000   ........           LDR      R0,??DataTable194
   \   00000004   9600D0E5           LDRB     R0,[R0, #+150]
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0200000A           BEQ      ??GetGPSSimulateStr_0
   \   00000010   ............       ADRL     R0,`?<Constant "Simulating GPS">`
   \              ....        
   \   00000018   1EFF2FE1           BX       LR
   \                     ??GetGPSSimulateStr_0:
   \   0000001C   ............       ADRL     R0,`?<Constant "Normal GPS">`
   \              ....        
   \   00000024   1EFF2FE1           BX       LR               ;; return
    857          }
    858          

   \                                 In section .text, align 4, keep-with-next
    859          const char *GetDaylightSavingsStr(void)
    860          {
    861          	return (sysData.dstOn ? "Daylight Savings On" : "Daylight Savings Off");
   \                     GetDaylightSavingsStr:
   \   00000000   ........           LDR      R0,??DataTable194_1
   \   00000004   7B00D0E5           LDRB     R0,[R0, #+123]
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0200000A           BEQ      ??GetDaylightSavingsStr_0
   \   00000010   ............       ADRL     R0,`?<Constant "Daylight Savings On">`
   \              ....        
   \   00000018   1EFF2FE1           BX       LR
   \                     ??GetDaylightSavingsStr_0:
   \   0000001C   ............       ADRL     R0,`?<Constant "Daylight Savings Off">`
   \              ....        
   \   00000024   1EFF2FE1           BX       LR               ;; return
    862          }
    863          

   \                                 In section .text, align 4, keep-with-next
    864          void DisplayTimeSelection(WM_HWIN hParent)
    865          {
   \                     DisplayTimeSelection:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
    866          	int selection;
    867          	BUTTON_Handle hBtn;
    868          
    869          	BUTTON_SetDefaultFont(&GUI_Font24_ASCII);
   \   00000004   ........           LDR      R7,??DataTable194_2
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   0700A0E1           MOV      R0,R7
   \   00000014   ........           BL       BUTTON_SetDefaultFont
    870          
    871          	// Create spinner wheel and populate
    872          	hTimeWheel = LISTWHEEL_CreateEx(SPINNER_START + 16, 50, 205, 205, hParent, WM_CF_SHOW | WM_CF_HASTRANS, 0, TIME_WHEEL,
    873          		sysData.dstOn ? DstTimeZones : StdTimeZones);
   \   00000018   ........           LDR      R6,??DataTable194_1
   \   0000001C   ........           LDR      R5,??DataTable194
   \   00000020   7B00D6E5           LDRB     R0,[R6, #+123]
   \   00000024   00408DE5           STR      R4,[SP, #+0]
   \   00000028   CD30A0E3           MOV      R3,#+205
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   400F8512           ADDNE    R0,R5,#+256
   \   00000034   98008502           ADDEQ    R0,R5,#+152
   \   00000038   10008DE5           STR      R0,[SP, #+16]
   \   0000003C   6100A0E3           MOV      R0,#+97
   \   00000040   800F80E3           ORR      R0,R0,#0x200
   \   00000044   0C008DE5           STR      R0,[SP, #+12]
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   08008DE5           STR      R0,[SP, #+8]
   \   00000050   0300A0E3           MOV      R0,#+3
   \   00000054   04008DE5           STR      R0,[SP, #+4]
   \   00000058   CD20A0E3           MOV      R2,#+205
   \   0000005C   3210A0E3           MOV      R1,#+50
   \   00000060   400FA0E3           MOV      R0,#+256
   \   00000064   ........           BL       LISTWHEEL_CreateEx
   \   00000068   6C0085E5           STR      R0,[R5, #+108]
    874          	LISTWHEEL_SetLineHeight(hTimeWheel, 41);
   \   0000006C   2910A0E3           MOV      R1,#+41
   \   00000070   ........           BL       LISTWHEEL_SetLineHeight
    875          	LISTWHEEL_SetSnapPosition(hTimeWheel, 87);
   \   00000074   5710A0E3           MOV      R1,#+87
   \   00000078   6C0095E5           LDR      R0,[R5, #+108]
   \   0000007C   ........           BL       LISTWHEEL_SetSnapPosition
    876          	LISTWHEEL_SetFont(hTimeWheel, &GUI_Font24_ASCII);
   \   00000080   0710A0E1           MOV      R1,R7
   \   00000084   6C0095E5           LDR      R0,[R5, #+108]
   \   00000088   ........           BL       LISTWHEEL_SetFont
    877          	LISTWHEEL_SetTextAlign(hTimeWheel, GUI_TA_LEFT);
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   6C0095E5           LDR      R0,[R5, #+108]
   \   00000094   ........           BL       LISTWHEEL_SetTextAlign
   \   00000098   7B10D6E5           LDRB     R1,[R6, #+123]
   \   0000009C   DA07D6E1           LDRSB    R0,[R6, #+122]
   \   000000A0   000051E3           CMP      R1,#+0
    878          
    879          	// Determine current selection to highlight
    880          	if (sysData.dstOn)
    881          		selection = sysData.timeZone + 11;
   \   000000A4   0B708012           ADDNE    R7,R0,#+11
    882          	else selection = sysData.timeZone + 12;
   \   000000A8   0C708002           ADDEQ    R7,R0,#+12
    883          
    884          	LISTWHEEL_SetPos(hTimeWheel, selection);
   \   000000AC   0710A0E1           MOV      R1,R7
   \   000000B0   6C0095E5           LDR      R0,[R5, #+108]
   \   000000B4   ........           BL       LISTWHEEL_SetPos
    885          	LISTWHEEL_SetSel(hTimeWheel, selection);
   \   000000B8   0710A0E1           MOV      R1,R7
   \   000000BC   6C0095E5           LDR      R0,[R5, #+108]
   \   000000C0   ........           BL       LISTWHEEL_SetSel
    886          
    887          	// Create buttons
    888          	hBtn = BUTTON_CreateEx(SPINNER_SCREEN_BUTTON_POS, 108, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, DAYLIGHT_SAVINGS_BTN);
   \   000000C4   0E00A0E3           MOV      R0,#+14
   \   000000C8   800E80E3           ORR      R0,R0,#0x800
   \   000000CC   0C008DE5           STR      R0,[SP, #+12]
   \   000000D0   0000A0E3           MOV      R0,#+0
   \   000000D4   08008DE5           STR      R0,[SP, #+8]
   \   000000D8   0200A0E3           MOV      R0,#+2
   \   000000DC   04008DE5           STR      R0,[SP, #+4]
   \   000000E0   00408DE5           STR      R4,[SP, #+0]
   \   000000E4   2730A0E3           MOV      R3,#+39
   \   000000E8   CA20A0E3           MOV      R2,#+202
   \   000000EC   6C10A0E3           MOV      R1,#+108
   \   000000F0   1E00A0E3           MOV      R0,#+30
   \   000000F4   ........           BL       BUTTON_CreateEx
   \   000000F8   0070A0E1           MOV      R7,R0
    889          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   000000FC   ........           LDR      R2,??DataTable192
   \   00000100   0010A0E3           MOV      R1,#+0
   \   00000104   ........           BL       BUTTON_SetBitmap
    890          	BUTTON_SetText(hBtn, GetDaylightSavingsStr());
   \   00000108   7B00D6E5           LDRB     R0,[R6, #+123]
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   ............       ADRLNE   R1,`?<Constant "Daylight Savings On">`
   \              ....        
   \   00000118   ............       ADRLEQ   R1,`?<Constant "Daylight Savings Off">`
   \              ....        
   \   00000120   0700A0E1           MOV      R0,R7
   \   00000124   ........           BL       BUTTON_SetText
    891          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000128   0020A0E3           MOV      R2,#+0
   \   0000012C   0010A0E3           MOV      R1,#+0
   \   00000130   0700A0E1           MOV      R0,R7
   \   00000134   ........           BL       BUTTON_SetTextColor
    892          	BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_WHITE);
   \   00000138   FF64E0E3           MVN      R6,#-16777216
   \   0000013C   0620A0E1           MOV      R2,R6
   \   00000140   0110A0E3           MOV      R1,#+1
   \   00000144   0700A0E1           MOV      R0,R7
   \   00000148   ........           BL       BUTTON_SetTextColor
    893          	BUTTON_SetFocussable(hBtn, 0);
   \   0000014C   0010A0E3           MOV      R1,#+0
   \   00000150   0700A0E1           MOV      R0,R7
   \   00000154   ........           BL       BUTTON_SetFocussable
    894          
    895          	hBtn = BUTTON_CreateEx(SPINNER_SCREEN_BUTTON_POS, 193, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, GPS_SIMULATE_BTN);
   \   00000158   1900A0E3           MOV      R0,#+25
   \   0000015C   800E80E3           ORR      R0,R0,#0x800
   \   00000160   0C008DE5           STR      R0,[SP, #+12]
   \   00000164   0000A0E3           MOV      R0,#+0
   \   00000168   08008DE5           STR      R0,[SP, #+8]
   \   0000016C   0200A0E3           MOV      R0,#+2
   \   00000170   04008DE5           STR      R0,[SP, #+4]
   \   00000174   00408DE5           STR      R4,[SP, #+0]
   \   00000178   2730A0E3           MOV      R3,#+39
   \   0000017C   CA20A0E3           MOV      R2,#+202
   \   00000180   C110A0E3           MOV      R1,#+193
   \   00000184   1E00A0E3           MOV      R0,#+30
   \   00000188   ........           BL       BUTTON_CreateEx
   \   0000018C   0040A0E1           MOV      R4,R0
    896          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmYellowButton);
   \   00000190   ........           LDR      R2,??DataTable198
   \   00000194   0010A0E3           MOV      R1,#+0
   \   00000198   ........           BL       BUTTON_SetBitmap
    897          	BUTTON_SetText(hBtn, GetGPSSimulateStr());
   \   0000019C   9600D5E5           LDRB     R0,[R5, #+150]
   \   000001A0   000050E3           CMP      R0,#+0
   \   000001A4   ............       ADRLNE   R1,`?<Constant "Simulating GPS">`
   \              ....        
   \   000001AC   ............       ADRLEQ   R1,`?<Constant "Normal GPS">`
   \              ....        
   \   000001B4   0400A0E1           MOV      R0,R4
   \   000001B8   ........           BL       BUTTON_SetText
    898          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   0010A0E3           MOV      R1,#+0
   \   000001C4   0400A0E1           MOV      R0,R4
   \   000001C8   ........           BL       BUTTON_SetTextColor
    899          	BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_WHITE);
   \   000001CC   0620A0E1           MOV      R2,R6
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   0400A0E1           MOV      R0,R4
   \   000001D8   ........           BL       BUTTON_SetTextColor
    900          	BUTTON_SetFocussable(hBtn, 0);
   \   000001DC   0010A0E3           MOV      R1,#+0
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   ........           BL       BUTTON_SetFocussable
    901          }
   \   000001E8   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000001EC   F080BDE8           POP      {R4-R7,PC}       ;; return
    902          

   \                                 In section .text, align 4, keep-with-next
    903          void DisplayStorageSelection(WM_HWIN hParent)
    904          {
   \                     DisplayStorageSelection:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    905          BUTTON_Handle hButton;
    906          
    907          	hButton = BUTTON_CreateEx(41, 38, 178, 115, hParent, WM_CF_SHOW, 0, ERASEALL_BUTTON);
   \   00000008   0900A0E3           MOV      R0,#+9
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00408DE5           STR      R4,[SP, #+0]
   \   0000002C   7330A0E3           MOV      R3,#+115
   \   00000030   B220A0E3           MOV      R2,#+178
   \   00000034   2610A0E3           MOV      R1,#+38
   \   00000038   2900A0E3           MOV      R0,#+41
   \   0000003C   ........           BL       BUTTON_CreateEx
    908          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmEraseAll);
   \   00000040   ........           LDR      R2,??DataTable198_1
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           BL       BUTTON_SetBitmap
    909          
    910          	hButton = BUTTON_CreateEx(261, 38, 178, 115, hParent, WM_CF_SHOW, 0, FACTORYDEFAULTS_BUTTON);
   \   0000004C   0A00A0E3           MOV      R0,#+10
   \   00000050   800E80E3           ORR      R0,R0,#0x800
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0550A0E3           MOV      R5,#+5
   \   00000064   0200A0E3           MOV      R0,#+2
   \   00000068   405F85E3           ORR      R5,R5,#0x100
   \   0000006C   04008DE5           STR      R0,[SP, #+4]
   \   00000070   00408DE5           STR      R4,[SP, #+0]
   \   00000074   7330A0E3           MOV      R3,#+115
   \   00000078   B220A0E3           MOV      R2,#+178
   \   0000007C   2610A0E3           MOV      R1,#+38
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   ........           BL       BUTTON_CreateEx
    911          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmFactoryDefaults);
   \   00000088   ........           LDR      R2,??DataTable198_2
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   ........           BL       BUTTON_SetBitmap
    912          
    913          	hButton = BUTTON_CreateEx(41, 156, 178, 115, hParent, WM_CF_SHOW, 0, FORMATSD_BUTTON);
   \   00000094   0B00A0E3           MOV      R0,#+11
   \   00000098   800E80E3           ORR      R0,R0,#0x800
   \   0000009C   0C008DE5           STR      R0,[SP, #+12]
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   08008DE5           STR      R0,[SP, #+8]
   \   000000A8   0200A0E3           MOV      R0,#+2
   \   000000AC   04008DE5           STR      R0,[SP, #+4]
   \   000000B0   00408DE5           STR      R4,[SP, #+0]
   \   000000B4   7330A0E3           MOV      R3,#+115
   \   000000B8   B220A0E3           MOV      R2,#+178
   \   000000BC   9C10A0E3           MOV      R1,#+156
   \   000000C0   2900A0E3           MOV      R0,#+41
   \   000000C4   ........           BL       BUTTON_CreateEx
    914          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmFormatSD);
   \   000000C8   ........           LDR      R2,??DataTable198_3
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   ........           BL       BUTTON_SetBitmap
    915          
    916          	hButton = BUTTON_CreateEx(261, 156, 178, 115, hParent, WM_CF_SHOW, 0, PERSONALIZE_BUTTON);
   \   000000D4   810EA0E3           MOV      R0,#+2064
   \   000000D8   0C008DE5           STR      R0,[SP, #+12]
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   08008DE5           STR      R0,[SP, #+8]
   \   000000E4   0200A0E3           MOV      R0,#+2
   \   000000E8   04008DE5           STR      R0,[SP, #+4]
   \   000000EC   00408DE5           STR      R4,[SP, #+0]
   \   000000F0   7330A0E3           MOV      R3,#+115
   \   000000F4   B220A0E3           MOV      R2,#+178
   \   000000F8   9C10A0E3           MOV      R1,#+156
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   ........           BL       BUTTON_CreateEx
    917          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmPersonalizeButton);
   \   00000104   14D08DE2           ADD      SP,SP,#+20
   \   00000108   3040BDE8           POP      {R4,R5,LR}
   \   0000010C   ........           LDR      R2,??DataTable198_4
   \   00000110   0010A0E3           MOV      R1,#+0
   \   00000114   ........           B        BUTTON_SetBitmap  ;; tailcall
    918          
    919          	////////// If newer hardware (version 2 or newer) allow auto-on feature
    920          	////////if (suData.suPresent && (suData.suHwRev >= 200))
    921          	////////{
    922          	////////	hButton = BUTTON_CreateEx(261, 156, 178, 115, hParent, WM_CF_SHOW, 0, AUTOON_BUTTON);
    923          	////////	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmAutoOn);
    924          	////////}
    925          }
    926          
    927          

   \                                 In section .text, align 4, keep-with-next
    928          void LapMeterPaint(WM_HWIN hParent)
    929          {
   \                     LapMeterPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    930          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable198_5
   \   00000014   ........           BL       GUI_DrawBitmap
    931          	GUI_DrawBitmap(&bmSingleSpinner, SPINNER_START, 42);
   \   00000018   2A20A0E3           MOV      R2,#+42
   \   0000001C   F010A0E3           MOV      R1,#+240
   \   00000020   ........           LDR      R0,??DataTable198_6
   \   00000024   ........           BL       GUI_DrawBitmap
    932          	GUI_DrawBitmap(&bmPredictiveScaleText, 60, 0);
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   3C10A0E3           MOV      R1,#+60
   \   00000030   ........           LDR      R0,??DataTable198_7
   \   00000034   ........           BL       GUI_DrawBitmap
    933          	GUI_DrawBitmap(GetNavigationArrow(LAP_METER), 0, 229);
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   0040BDE8           POP      {LR}
   \   00000040   E520A0E3           MOV      R2,#+229
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           LDR      R0,??DataTable198_8
   \   0000004C   ........           B        GUI_DrawBitmap   ;; tailcall
    934          }
    935          

   \                                 In section .text, align 4, keep-with-next
    936          void AutoStartSelectionPaint(WM_HWIN hParent)
    937          {
   \                     AutoStartSelectionPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
    938          	char scratch[30];
    939          
    940          #define	TOP_BUT			48
    941          #define	GAP				43
    942          #define	CM_LINE_GAP		20
    943          #define	LEFT_CENTER		45 + (178 / 2)
    944          #define	RIGHT_CENTER	BUTTON_LEFT + 101
    945          #define	FIVE_BTN_BOX_LEFT			27
    946          #define	FIVE_BTN_BOX_RIGHT			245
    947          #define	CAMERA_TEXT_CENTER			136
    948          #define	HALF_CAMERA_LINE			89
    949          #define	FIVE_BTN_BOX_TOP			TOP_BUT
    950          #define	FIVE_BTN_BOX_BOTTOM			(TOP_BUT + 209)
    951          
    952          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable198_5
   \   00000014   ........           BL       GUI_DrawBitmap
    953          	GUI_DrawBitmap(&bmAutoStartSetupText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable198_9
   \   00000024   ........           BL       GUI_DrawBitmap
    954          
    955          	// Draw left side square for data
    956          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000028   0140A0E3           MOV      R4,#+1
   \   0000002C   0500A0E3           MOV      R0,#+5
   \   00000030   404F84E3           ORR      R4,R4,#0x100
   \   00000034   00008DE5           STR      R0,[SP, #+0]
   \   00000038   0430A0E1           MOV      R3,R4
   \   0000003C   F520A0E3           MOV      R2,#+245
   \   00000040   3010A0E3           MOV      R1,#+48
   \   00000044   1B00A0E3           MOV      R0,#+27
   \   00000048   ........           BL       GUI_DrawRoundedRect
    957          	GUI_SetColor(GUI_GRAY);
   \   0000004C   ........           LDR      R0,??DataTable198_10  ;; 0x808080
   \   00000050   ........           BL       GUI_SetColor
    958          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000054   0500A0E3           MOV      R0,#+5
   \   00000058   00008DE5           STR      R0,[SP, #+0]
   \   0000005C   0430A0E1           MOV      R3,R4
   \   00000060   F520A0E3           MOV      R2,#+245
   \   00000064   3010A0E3           MOV      R1,#+48
   \   00000068   1B00A0E3           MOV      R0,#+27
   \   0000006C   ........           BL       GUI_FillRoundedRect
    959          
    960          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   00000070   0500A0E3           MOV      R0,#+5
   \   00000074   00008DE5           STR      R0,[SP, #+0]
   \   00000078   FF30A0E3           MOV      R3,#+255
   \   0000007C   F320A0E3           MOV      R2,#+243
   \   00000080   3210A0E3           MOV      R1,#+50
   \   00000084   1D00A0E3           MOV      R0,#+29
   \   00000088   ........           BL       GUI_DrawRoundedRect
    961          	GUI_SetColor(GUI_BLACK);
   \   0000008C   0000A0E3           MOV      R0,#+0
   \   00000090   ........           BL       GUI_SetColor
    962          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   00000094   0500A0E3           MOV      R0,#+5
   \   00000098   00008DE5           STR      R0,[SP, #+0]
   \   0000009C   FF30A0E3           MOV      R3,#+255
   \   000000A0   F320A0E3           MOV      R2,#+243
   \   000000A4   3210A0E3           MOV      R1,#+50
   \   000000A8   1D00A0E3           MOV      R0,#+29
   \   000000AC   ........           BL       GUI_FillRoundedRect
    963          
    964          	// draw 2 gray lines for field seperators
    965          	GUI_SetPenSize(2);
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   ........           BL       GUI_SetPenSize
    966          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000000B8   ........           LDR      R4,??DataTable198_11  ;; 0xd3d3d3
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           BL       GUI_SetColor
    967          	GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, 107, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, 107);
   \   000000C4   6B30A0E3           MOV      R3,#+107
   \   000000C8   E120A0E3           MOV      R2,#+225
   \   000000CC   6B10A0E3           MOV      R1,#+107
   \   000000D0   2F00A0E3           MOV      R0,#+47
   \   000000D4   ........           BL       GUI_DrawLine
    968          	GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, 169, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, 169);
   \   000000D8   A930A0E3           MOV      R3,#+169
   \   000000DC   E120A0E3           MOV      R2,#+225
   \   000000E0   A910A0E3           MOV      R1,#+169
   \   000000E4   2F00A0E3           MOV      R0,#+47
   \   000000E8   ........           BL       GUI_DrawLine
    969          
    970          	// Draw left static text
    971          	GUI_SetFont(&GUI_Font24_ASCII);
   \   000000EC   ........           LDR      R0,??DataTable194_2
   \   000000F0   ........           BL       GUI_SetFont
    972          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   000000F4   0200A0E3           MOV      R0,#+2
   \   000000F8   ........           BL       GUI_SetTextMode
    973          	GUI_SetColor(GUI_LIGHTBLUE);
   \   000000FC   ........           LDR      R0,??DataTable198_12  ;; 0xff8080
   \   00000100   ........           BL       GUI_SetColor
    974          	GUI_DispStringHCenterAt("Current Settings",		LEFT_CENTER, 52);
   \   00000104   3420A0E3           MOV      R2,#+52
   \   00000108   8610A0E3           MOV      R1,#+134
   \   0000010C   ............       ADRL     R0,`?<Constant "Current Settings">`
   \              ....        
   \   00000114   ........           BL       GUI_DispStringHCenterAt
    975          	GUI_SetColor(GUI_WHITE);
   \   00000118   FF54E0E3           MVN      R5,#-16777216
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   ........           BL       GUI_SetColor
    976          	GUI_DispStringHCenterAt("Power On Control",	LEFT_CENTER, 80);
   \   00000124   5020A0E3           MOV      R2,#+80
   \   00000128   8610A0E3           MOV      R1,#+134
   \   0000012C   ............       ADRL     R0,`?<Constant "Power On Control">`
   \              ....        
   \   00000134   ........           BL       GUI_DispStringHCenterAt
    977          	GUI_SetColor(GUI_YELLOW);
   \   00000138   FF08C5E3           BIC      R0,R5,#0xFF0000
   \   0000013C   ........           BL       GUI_SetColor
    978          	GUI_DispStringHCenterAt(GetAutoOnText(),		LEFT_CENTER, 110);
   \   00000140   ........           LDR      R0,??DataTable198_13
   \   00000144   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000148   000051E3           CMP      R1,#+0
   \   0000014C   0A00000A           BEQ      ??AutoStartSelectionPaint_2
   \   00000150   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000154   C80050E3           CMP      R0,#+200
   \   00000158   0700003A           BCC      ??AutoStartSelectionPaint_2
   \   0000015C   ........           LDR      R0,??DataTable194_1
   \   00000160   7C00D0E5           LDRB     R0,[R0, #+124]
   \   00000164   000050E3           CMP      R0,#+0
   \   00000168   ............       ADRLNE   R0,`?<Constant "Auto On with Power">`
   \              ....        
   \   00000170   ............       ADRLEQ   R0,`?<Constant "Turns on with Button">`
   \              ....        
   \   00000178   010000EA           B        ??AutoStartSelectionPaint_3
   \                     ??AutoStartSelectionPaint_2:
   \   0000017C   ............       ADRL     R0,`?<Constant "Not Supported by SU">`
   \              ....        
   \                     ??AutoStartSelectionPaint_3:
   \   00000184   6E20A0E3           MOV      R2,#+110
   \   00000188   8610A0E3           MOV      R1,#+134
   \   0000018C   ........           BL       GUI_DispStringHCenterAt
    979          	GUI_SetColor(GUI_WHITE);
   \   00000190   0500A0E1           MOV      R0,R5
   \   00000194   ........           BL       GUI_SetColor
    980          	GUI_DispStringHCenterAt("Auto Start Location",	LEFT_CENTER, 142);
   \   00000198   8E20A0E3           MOV      R2,#+142
   \   0000019C   8610A0E3           MOV      R1,#+134
   \   000001A0   ............       ADRL     R0,`?<Constant "Auto Start Location">`
   \              ....        
   \   000001A8   ........           BL       GUI_DispStringHCenterAt
    981          	GUI_SetColor(GUI_RED);
   \   000001AC   FF00A0E3           MOV      R0,#+255
   \   000001B0   ........           BL       GUI_SetColor
    982          	GUI_DispStringHCenterAt( sysData.autoRecord ? "Race Screens" : "Menu Screens",
    983          													LEFT_CENTER, 172);
   \   000001B4   ........           LDR      R5,??DataTable194_1
   \   000001B8   AC20A0E3           MOV      R2,#+172
   \   000001BC   7D00D5E5           LDRB     R0,[R5, #+125]
   \   000001C0   8610A0E3           MOV      R1,#+134
   \   000001C4   000050E3           CMP      R0,#+0
   \   000001C8   ............       ADRLNE   R0,`?<Constant "Race Screens">`
   \              ....        
   \   000001D0   ............       ADRLEQ   R0,`?<Constant "Menu Screens">`
   \              ....        
   \   000001D8   ........           BL       GUI_DispStringHCenterAt
    984          	GUI_SetColor(GUI_GREEN);
   \   000001DC   FF0CA0E3           MOV      R0,#+65280
   \   000001E0   ........           BL       GUI_SetColor
    985          	sprintf(scratch, "Start Speed %s", GetRecordSpeedString());
   \   000001E4   EC0095E5           LDR      R0,[R5, #+236]
   \   000001E8   641095E5           LDR      R1,[R5, #+100]
   \   000001EC   2008A0E1           LSR      R0,R0,#+16
   \   000001F0   010051E3           CMP      R1,#+1
   \   000001F4   200040E2           SUB      R0,R0,#+32
   \   000001F8   2500000A           BEQ      ??AutoStartSelectionPaint_4
   \   000001FC   300050E3           CMP      R0,#+48
   \   00000200   4900008A           BHI      ??AutoStartSelectionPaint_5
   \   00000204   0010DFE7           LDRB     R1,[PC, R0]
   \   00000208   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??AutoStartSelectionPaint_0:
   \   0000020C   1E474747           DC8      0x1E,0x47,0x47,0x47
   \   00000210   47474747           DC8      0x47,0x47,0x47,0x47
   \   00000214   1B474747           DC8      0x1B,0x47,0x47,0x47
   \   00000218   47474747           DC8      0x47,0x47,0x47,0x47
   \   0000021C   18474747           DC8      0x18,0x47,0x47,0x47
   \   00000220   47474747           DC8      0x47,0x47,0x47,0x47
   \   00000224   15474747           DC8      0x15,0x47,0x47,0x47
   \   00000228   47474747           DC8      0x47,0x47,0x47,0x47
   \   0000022C   12474747           DC8      0x12,0x47,0x47,0x47
   \   00000230   47474747           DC8      0x47,0x47,0x47,0x47
   \   00000234   0F474747           DC8      0xF,0x47,0x47,0x47
   \   00000238   47474747           DC8      0x47,0x47,0x47,0x47
   \   0000023C   0C000000           DC8      0xC,0x0,0x0,0x0
   \                     ??AutoStartSelectionPaint_6:
   \   00000240   ............       ADRL     R2,`?<Constant "50 mph">`
   \              ....        
   \   00000248   390000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_8:
   \   0000024C   ............       ADRL     R2,`?<Constant "45 mph">`
   \              ....        
   \   00000254   360000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_9:
   \   00000258   ............       ADRL     R2,`?<Constant "40 mph">`
   \              ....        
   \   00000260   330000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_10:
   \   00000264   ............       ADRL     R2,`?<Constant "35 mph">`
   \              ....        
   \   0000026C   300000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_11:
   \   00000270   ............       ADRL     R2,`?<Constant "30 mph">`
   \              ....        
   \   00000278   2D0000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_12:
   \   0000027C   ............       ADRL     R2,`?<Constant "25 mph">`
   \              ....        
   \   00000284   2A0000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_13:
   \   00000288   ............       ADRL     R2,`?<Constant "20 mph">`
   \              ....        
   \   00000290   270000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_4:
   \   00000294   300050E3           CMP      R0,#+48
   \   00000298   2300008A           BHI      ??AutoStartSelectionPaint_5
   \   0000029C   0010DFE7           LDRB     R1,[PC, R0]
   \   000002A0   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??AutoStartSelectionPaint_1:
   \   000002A4   1E212121           DC8      0x1E,0x21,0x21,0x21
   \   000002A8   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002AC   1B212121           DC8      0x1B,0x21,0x21,0x21
   \   000002B0   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002B4   18212121           DC8      0x18,0x21,0x21,0x21
   \   000002B8   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002BC   15212121           DC8      0x15,0x21,0x21,0x21
   \   000002C0   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002C4   12212121           DC8      0x12,0x21,0x21,0x21
   \   000002C8   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002CC   0F212121           DC8      0xF,0x21,0x21,0x21
   \   000002D0   21212121           DC8      0x21,0x21,0x21,0x21
   \   000002D4   0C000000           DC8      0xC,0x0,0x0,0x0
   \                     ??AutoStartSelectionPaint_14:
   \   000002D8   ............       ADRL     R2,`?<Constant "80 kph">`
   \              ....        
   \   000002E0   130000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_15:
   \   000002E4   ............       ADRL     R2,`?<Constant "72 kph">`
   \              ....        
   \   000002EC   100000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_16:
   \   000002F0   ............       ADRL     R2,`?<Constant "64 kph">`
   \              ....        
   \   000002F8   0D0000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_17:
   \   000002FC   ............       ADRL     R2,`?<Constant "56 kph">`
   \              ....        
   \   00000304   0A0000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_18:
   \   00000308   ............       ADRL     R2,`?<Constant "48 kph">`
   \              ....        
   \   00000310   070000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_19:
   \   00000314   ............       ADRL     R2,`?<Constant "40 kph">`
   \              ....        
   \   0000031C   040000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_20:
   \   00000320   ............       ADRL     R2,`?<Constant "32 kph">`
   \              ....        
   \   00000328   010000EA           B        ??AutoStartSelectionPaint_7
   \                     ??AutoStartSelectionPaint_5:
   \   0000032C   ............       ADRL     R2,`?<Constant "Disabled">`
   \              ....        
   \                     ??AutoStartSelectionPaint_7:
   \   00000334   ............       ADRL     R1,`?<Constant "Start Speed %s">`
   \              ....        
   \   0000033C   04008DE2           ADD      R0,SP,#+4
   \   00000340   ........           BL       sprintf
    986          	GUI_DispStringHCenterAt(scratch,	LEFT_CENTER, 200);
   \   00000344   C820A0E3           MOV      R2,#+200
   \   00000348   8610A0E3           MOV      R1,#+134
   \   0000034C   04008DE2           ADD      R0,SP,#+4
   \   00000350   ........           BL       GUI_DispStringHCenterAt
    987          	sprintf(scratch, "Stop Time %s", GetRecordStopTimeString());
   \   00000354   EC0095E5           LDR      R0,[R5, #+236]
   \   00000358   8910A0E3           MOV      R1,#+137
   \   0000035C   2002A0E1           LSR      R0,R0,#+4
   \   00000360   000AA0E1           LSL      R0,R0,#+20
   \   00000364   200AA0E1           LSR      R0,R0,#+20
   \   00000368   881C81E3           ORR      R1,R1,#0x8800
   \   0000036C   900101E0           MUL      R1,R0,R1
   \   00000370   A12AA0E1           LSR      R2,R1,#+21
   \   00000374   0B0052E3           CMP      R2,#+11
   \   00000378   070000AA           BGE      ??AutoStartSelectionPaint_21
   \   0000037C   000052E3           CMP      R2,#+0
   \   00000380   0500000A           BEQ      ??AutoStartSelectionPaint_21
   \   00000384   ........           LDR      R5,??DataTable202
   \   00000388   ............       ADRL     R1,`?<Constant "%d min">`
   \              ....        
   \   00000390   0500A0E1           MOV      R0,R5
   \   00000394   ........           BL       sprintf
   \   00000398   010000EA           B        ??AutoStartSelectionPaint_22
   \                     ??AutoStartSelectionPaint_21:
   \   0000039C   ............       ADRL     R5,`?<Constant "Disabled">`
   \              ....        
   \                     ??AutoStartSelectionPaint_22:
   \   000003A4   0520A0E1           MOV      R2,R5
   \   000003A8   ............       ADRL     R1,`?<Constant "Stop Time %s">`
   \              ....        
   \   000003B0   04008DE2           ADD      R0,SP,#+4
   \   000003B4   ........           BL       sprintf
    988          	GUI_DispStringHCenterAt(scratch,	LEFT_CENTER, 225);
   \   000003B8   E120A0E3           MOV      R2,#+225
   \   000003BC   8610A0E3           MOV      R1,#+134
   \   000003C0   04008DE2           ADD      R0,SP,#+4
   \   000003C4   ........           BL       GUI_DispStringHCenterAt
    989          
    990          	// Draw right static text
    991          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000003C8   0400A0E1           MOV      R0,R4
   \   000003CC   ........           BL       GUI_SetColor
    992          	GUI_DispStringHCenterAt("Startup Settings",			RIGHT_CENTER, 52);
   \   000003D0   6740A0E3           MOV      R4,#+103
   \   000003D4   404F84E3           ORR      R4,R4,#0x100
   \   000003D8   3420A0E3           MOV      R2,#+52
   \   000003DC   0410A0E1           MOV      R1,R4
   \   000003E0   ............       ADRL     R0,`?<Constant "Startup Settings">`
   \              ....        
   \   000003E8   ........           BL       GUI_DispStringHCenterAt
    993          	GUI_SetFont(&GUI_Font20_ASCII);
   \   000003EC   ........           LDR      R0,??DataTable203
   \   000003F0   ........           BL       GUI_SetFont
    994          	GUI_DispStringHCenterAt("Disables Power Button",	RIGHT_CENTER, 126);
   \   000003F4   7E20A0E3           MOV      R2,#+126
   \   000003F8   0410A0E1           MOV      R1,R4
   \   000003FC   ............       ADRL     R0,`?<Constant "Disables Power Button">`
   \              ....        
   \   00000404   ........           BL       GUI_DispStringHCenterAt
    995          
    996          	//GUI_SetFont(&GUI_Font16B_ASCII);
    997          
    998          	//if (sysData.autoOn)
    999          	//{
   1000          	//	GUI_DispStringHCenterAt("Unit Turns On With Power", 45 + (178 / 2), 210);
   1001          	//	GUI_DispStringHCenterAt("Power Button Disabled", 45 + (178 / 2), 230);
   1002          	//}
   1003          	//else GUI_DispStringHCenterAt("Unit Turns On With Button", 45 + (178 / 2), 210);
   1004          
   1005          	//if (!suData.suPresent || (suData.suHwRev < 200))
   1006          	//	GUI_DispStringHCenterAt("Not Supported by Sensor Unit", 45 + (178 / 2), 230);
   1007          
   1008          	//if (sysData.autoRecord)
   1009          	//{
   1010          	//	GUI_DispStringHCenterAt("Returns to Recording", 260 + (178 / 2), 210);
   1011          	//	GUI_DispStringHCenterAt("Mode at Startup", 260 + (178 / 2), 230);
   1012          	//}
   1013          	//else
   1014          	//{
   1015          	//	GUI_DispStringHCenterAt("Returns to Menu", 260 + (178 / 2), 210);
   1016          	//	GUI_DispStringHCenterAt("at Startup", 260 + (178 / 2), 230);
   1017          	//}
   1018          
   1019          	GUI_DrawBitmap(GetNavigationArrow(AUTOSTART_SELECTION), 0, 229);
   \   00000408   E520A0E3           MOV      R2,#+229
   \   0000040C   0010A0E3           MOV      R1,#+0
   \   00000410   ........           LDR      R0,??DataTable198_8
   \   00000414   ........           BL       GUI_DrawBitmap
   1020          }
   \   00000418   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   0000041C   3080BDE8           POP      {R4,R5,PC}       ;; return
   1021          
   1022          

   \                                 In section .text, align 4, keep-with-next
   1023          void PaintRecordSpeed(WM_HWIN hParent)
   1024          {
   \                     PaintRecordSpeed:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1025          #define	TEXT_START	100
   1026          #define	TEXT_STEP	30
   1027          
   1028          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   00000004   0200A0E3           MOV      R0,#+2
   \   00000008   ........           BL       GUI_SetTextMode
   1029          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   0000000C   0020A0E3           MOV      R2,#+0
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   ........           LDR      R0,??DataTable198_5
   \   00000018   ........           BL       GUI_DrawBitmap
   1030          	GUI_DrawBitmap(&bmRecordSpeed, 68, 0);
   \   0000001C   0020A0E3           MOV      R2,#+0
   \   00000020   4410A0E3           MOV      R1,#+68
   \   00000024   ........           LDR      R0,??DataTable203_1
   \   00000028   ........           BL       GUI_DrawBitmap
   1031          	GUI_DrawBitmap(&bmMediumSpinner, START_SPEED_SPINNER_LEFT, 51);
   \   0000002C   ........           LDR      R4,??DataTable203_2
   \   00000030   3320A0E3           MOV      R2,#+51
   \   00000034   3110A0E3           MOV      R1,#+49
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       GUI_DrawBitmap
   1032          	GUI_DrawBitmap(&bmMediumSpinner, STOP_TIME_SPINNER_LEFT, 51);
   \   00000040   3320A0E3           MOV      R2,#+51
   \   00000044   531FA0E3           MOV      R1,#+332
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       GUI_DrawBitmap
   1033          
   1034          	GUI_SetFont(&GUI_Font24_ASCII);
   \   00000050   ........           LDR      R0,??DataTable194_2
   \   00000054   ........           BL       GUI_SetFont
   1035          	GUI_SetColor(GUI_WHITE);
   \   00000058   FF04E0E3           MVN      R0,#-16777216
   \   0000005C   ........           BL       GUI_SetColor
   1036          	GUI_DispStringHCenterAt("Select Record",	XSIZE_PHYS/2,	TEXT_START);
   \   00000060   6420A0E3           MOV      R2,#+100
   \   00000064   F010A0E3           MOV      R1,#+240
   \   00000068   ............       ADRL     R0,`?<Constant "Select Record">`
   \              ....        
   \   00000070   ........           BL       GUI_DispStringHCenterAt
   1037          	GUI_DispStringHCenterAt("Start Speed",		XSIZE_PHYS/2,	TEXT_START + (TEXT_STEP * 1));
   \   00000074   8220A0E3           MOV      R2,#+130
   \   00000078   F010A0E3           MOV      R1,#+240
   \   0000007C   ............       ADRL     R0,`?<Constant "Start Speed">`
   \              ....        
   \   00000084   ........           BL       GUI_DispStringHCenterAt
   1038          	GUI_DispStringHCenterAt("and",				XSIZE_PHYS/2,	TEXT_START + (TEXT_STEP * 2));
   \   00000088   A020A0E3           MOV      R2,#+160
   \   0000008C   F010A0E3           MOV      R1,#+240
   \   00000090   ........           ADR      R0,??DataTable192_1  ;; "and"
   \   00000094   ........           BL       GUI_DispStringHCenterAt
   1039          	GUI_DispStringHCenterAt("Stop Time",		XSIZE_PHYS/2,	TEXT_START + (TEXT_STEP * 3));
   \   00000098   BE20A0E3           MOV      R2,#+190
   \   0000009C   F010A0E3           MOV      R1,#+240
   \   000000A0   ............       ADRL     R0,`?<Constant "Stop Time">`
   \              ....        
   \   000000A8   ........           BL       GUI_DispStringHCenterAt
   1040          
   1041          	GUI_DrawBitmap(GetNavigationArrow(LAP_METER), 0, 229);
   \   000000AC   E520A0E3           MOV      R2,#+229
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   ........           LDR      R0,??DataTable198_8
   \   000000B8   ........           BL       GUI_DrawBitmap
   1042          	DrawSignalStrength();
   \   000000BC   1040BDE8           POP      {R4,LR}
   \   000000C0   ........           B        DrawSignalStrength  ;; tailcall
   1043          }
   1044          
   1045          //
   1046          // GetRecordStopTime
   1047          //	Return record stop time setting in minutes
   1048          //	Default is 0 - disabled
   1049          //

   \                                 In section .text, align 4, keep-with-next
   1050          int GetRecordStopTime(void)
   1051          {
   1052          	int temp;
   1053          
   1054          	temp = ((sysData.multiSettings_2 >> 4) & 0x00000FFF) / 60;		// read value and convert from seconds to minutes
   \                     GetRecordStopTime:
   \   00000000   ........           LDR      R0,??DataTable194_1
   \   00000004   8910A0E3           MOV      R1,#+137
   \   00000008   EC0090E5           LDR      R0,[R0, #+236]
   \   0000000C   881C81E3           ORR      R1,R1,#0x8800
   \   00000010   2002A0E1           LSR      R0,R0,#+4
   \   00000014   000AA0E1           LSL      R0,R0,#+20
   \   00000018   200AA0E1           LSR      R0,R0,#+20
   \   0000001C   900101E0           MUL      R1,R0,R1
   \   00000020   A10AA0E1           LSR      R0,R1,#+21
   1055          
   1056          	// Validate value
   1057          	if (temp > 10)
   \   00000024   0B0050E3           CMP      R0,#+11
   1058          		temp = 0;
   \   00000028   0000A0A3           MOVGE    R0,#+0
   1059          	return temp;
   \   0000002C   1EFF2FE1           BX       LR               ;; return
   1060          }
   1061          
   1062          //
   1063          // SetRecordStopTime
   1064          //	Input: record time in minutes
   1065          //	Convert to seconds - units used by SU and save value
   1066          //	Default is 0 - disabled
   1067          //

   \                                 In section .text, align 4, keep-with-next
   1068          void SetRecordStopTime(int time)
   1069          {
   1070          	if (time > 10)
   \                     SetRecordStopTime:
   \   00000000   0B0050E3           CMP      R0,#+11
   1071          		time = 0;
   1072          	else time *= 60;
   \   00000004   3C10A0B3           MOVLT    R1,#+60
   \   00000008   910000B0           MULLT    R0,R1,R0
   1073          
   1074          	sysData.multiSettings_2 = (sysData.multiSettings_2 & 0xFFFF000F) | (time << 4);
   \   0000000C   ........           LDR      R1,??DataTable194_1
   \   00000010   F030E0E3           MVN      R3,#+240
   \   00000014   EC2091E5           LDR      R2,[R1, #+236]
   \   00000018   FF3CC3E3           BIC      R3,R3,#0xFF00
   \   0000001C   0000A0A3           MOVGE    R0,#+0
   \   00000020   022003E0           AND      R2,R3,R2
   \   00000024   000282E1           ORR      R0,R2,R0, LSL #+4
   \   00000028   EC0081E5           STR      R0,[R1, #+236]
   1075          }
   \   0000002C   1EFF2FE1           BX       LR               ;; return
   1076          

   \                                 In section .text, align 4, keep-with-next
   1077          char *GetRecordStopTimeString(void)
   1078          {
   \                     GetRecordStopTimeString:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1079          	int time;
   1080          	static char timeStr[10];
   1081          
   1082          	if ((time = GetRecordStopTime()) == 0)
   \   00000004   ........           LDR      R0,??DataTable194_1
   \   00000008   8910A0E3           MOV      R1,#+137
   \   0000000C   EC0090E5           LDR      R0,[R0, #+236]
   \   00000010   881C81E3           ORR      R1,R1,#0x8800
   \   00000014   2002A0E1           LSR      R0,R0,#+4
   \   00000018   000AA0E1           LSL      R0,R0,#+20
   \   0000001C   200AA0E1           LSR      R0,R0,#+20
   \   00000020   900101E0           MUL      R1,R0,R1
   \   00000024   A12AA0E1           LSR      R2,R1,#+21
   \   00000028   0B0052E3           CMP      R2,#+11
   \   0000002C   010000AA           BGE      ??GetRecordStopTimeString_0
   \   00000030   000052E3           CMP      R2,#+0
   \   00000034   0200001A           BNE      ??GetRecordStopTimeString_1
   1083          		return "Disabled";
   \                     ??GetRecordStopTimeString_0:
   \   00000038   ............       ADRL     R0,`?<Constant "Disabled">`
   \              ....        
   \   00000040   1080BDE8           POP      {R4,PC}
   1084          	else 
   1085          	{
   1086          		sprintf(timeStr, "%d min", time);
   \                     ??GetRecordStopTimeString_1:
   \   00000044   ........           LDR      R4,??DataTable202
   \   00000048   ............       ADRL     R1,`?<Constant "%d min">`
   \              ....        
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       sprintf
   1087          		return timeStr;
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   1080BDE8           POP      {R4,PC}          ;; return
   1088          	}
   1089          }

   \                                 In section .bss, align 4
   \                     ??timeStr:
   \   00000000                      DS8 12
   1090          
   1091          //
   1092          // Returns the current record speed in kph
   1093          //

   \                                 In section .text, align 4, keep-with-next
   1094          int GetRecordSpeed(void)
   1095          {
   1096          	return (sysData.multiSettings_2 & 0xFFFF0000) >> 16;
   \                     GetRecordSpeed:
   \   00000000   ........           LDR      R0,??DataTable194_1
   \   00000004   EC0090E5           LDR      R0,[R0, #+236]
   \   00000008   2008A0E1           LSR      R0,R0,#+16
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   1097          }
   1098          
   1099          //
   1100          // Set the record speed to the given value in kph
   1101          //

   \                                 In section .text, align 4, keep-with-next
   1102          void SetRecordSpeed(int recordSpeed)
   1103          {
   1104          	sysData.multiSettings_2 = (sysData.multiSettings_2 & 0x0000FFFF) | (recordSpeed << 16);
   \                     SetRecordSpeed:
   \   00000000   ........           LDR      R1,??DataTable194_1
   \   00000004   0008A0E1           LSL      R0,R0,#+16
   \   00000008   BC2ED1E1           LDRH     R2,[R1, #+236]
   \   0000000C   0228A0E1           LSL      R2,R2,#+16
   \   00000010   220880E1           ORR      R0,R0,R2, LSR #+16
   \   00000014   EC0081E5           STR      R0,[R1, #+236]
   1105          }
   \   00000018   1EFF2FE1           BX       LR               ;; return
   1106          

   \                                 In section .text, align 4, keep-with-next
   1107          void DisplayRecordSpeed(WM_HWIN hParent)
   1108          {
   \                     DisplayRecordSpeed:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   18D04DE2           SUB      SP,SP,#+24
   1109          	int recordSpeed, recordSpeedIndex, stopTimeIndex;
   1110          
   1111          	SetScreenType(RECORD_SPEED_SCREEN_TYPE);
   \   0000000C   2500A0E3           MOV      R0,#+37
   \   00000010   ........           BL       SetScreenType
   1112          
   1113          	recordSpeed = GetRecordSpeed();
   1114          
   1115          	// Speed always stored in kph - Convert from speed to spinner index
   1116          	switch (recordSpeed)
   \   00000014   ........           LDR      R4,??DataTable194_1
   \   00000018   EC0094E5           LDR      R0,[R4, #+236]
   \   0000001C   2008A0E1           LSR      R0,R0,#+16
   \   00000020   200040E2           SUB      R0,R0,#+32
   \   00000024   300050E3           CMP      R0,#+48
   \   00000028   0E00008A           BHI      ??DisplayRecordSpeed_1
   \   0000002C   0010DFE7           LDRB     R1,[PC, R0]
   \   00000030   01F18FE0           ADD      PC,PC,R1, LSL #+2
   \                     ??DisplayRecordSpeed_0:
   \   00000034   0E0C0C0C           DC8      0xE,0xC,0xC,0xC
   \   00000038   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000003C   100C0C0C           DC8      0x10,0xC,0xC,0xC
   \   00000040   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000044   120C0C0C           DC8      0x12,0xC,0xC,0xC
   \   00000048   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000004C   140C0C0C           DC8      0x14,0xC,0xC,0xC
   \   00000050   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000054   160C0C0C           DC8      0x16,0xC,0xC,0xC
   \   00000058   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000005C   180C0C0C           DC8      0x18,0xC,0xC,0xC
   \   00000060   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000064   1A000000           DC8      0x1A,0x0,0x0,0x0
   1117          	{
   1118          	default:
   1119          	case 0:		recordSpeedIndex = 0;	break;
   \                     ??DisplayRecordSpeed_1:
   \   00000068   0070A0E3           MOV      R7,#+0
   \   0000006C   0C0000EA           B        ??DisplayRecordSpeed_2
   1120          	case 32:	recordSpeedIndex = 1;	break;
   \                     ??DisplayRecordSpeed_3:
   \   00000070   0170A0E3           MOV      R7,#+1
   \   00000074   0A0000EA           B        ??DisplayRecordSpeed_2
   1121          	case 40:	recordSpeedIndex = 2;	break;
   \                     ??DisplayRecordSpeed_4:
   \   00000078   0270A0E3           MOV      R7,#+2
   \   0000007C   080000EA           B        ??DisplayRecordSpeed_2
   1122          	case 48:	recordSpeedIndex = 3;	break;
   \                     ??DisplayRecordSpeed_5:
   \   00000080   0370A0E3           MOV      R7,#+3
   \   00000084   060000EA           B        ??DisplayRecordSpeed_2
   1123          	case 56:	recordSpeedIndex = 4;	break;
   \                     ??DisplayRecordSpeed_6:
   \   00000088   0470A0E3           MOV      R7,#+4
   \   0000008C   040000EA           B        ??DisplayRecordSpeed_2
   1124          	case 64:	recordSpeedIndex = 5;	break;
   \                     ??DisplayRecordSpeed_7:
   \   00000090   0570A0E3           MOV      R7,#+5
   \   00000094   020000EA           B        ??DisplayRecordSpeed_2
   1125          	case 72:	recordSpeedIndex = 6;	break;
   \                     ??DisplayRecordSpeed_8:
   \   00000098   0670A0E3           MOV      R7,#+6
   \   0000009C   000000EA           B        ??DisplayRecordSpeed_2
   1126          	case 80:	recordSpeedIndex = 7;	break;
   \                     ??DisplayRecordSpeed_9:
   \   000000A0   0770A0E3           MOV      R7,#+7
   1127          	}
   1128          
   1129          //	DisplayStdListScreen(hParent, sysData.units == STD ? RecordSpeed : RecordSpeedMetric, 
   1130          //	RECORD_SPEED_WHEEL, &hRecordSpeedWheel, recordSpeedIndex, TEXT_ONLY, "Record Settings");
   1131          
   1132          	// Display Start Speed (left) wheel
   1133          	hRecordSpeedWheel = LISTWHEEL_CreateEx(START_SPEED_SPINNER_LEFT, 50, SPINNER_WIDTH, 208, hParent, WM_CF_SHOW | WM_CF_HASTRANS, 0, 
   1134          		RECORD_SPEED_WHEEL, sysData.units == STD ? RecordSpeed : RecordSpeedMetric);
   \                     ??DisplayRecordSpeed_2:
   \   000000A4   640094E5           LDR      R0,[R4, #+100]
   \   000000A8   ........           LDR      R6,??DataTable205_1
   \   000000AC   000050E3           CMP      R0,#+0
   \   000000B0   08008602           ADDEQ    R0,R6,#+8
   \   000000B4   2C008612           ADDNE    R0,R6,#+44
   \   000000B8   10008DE5           STR      R0,[SP, #+16]
   \   000000BC   6200A0E3           MOV      R0,#+98
   \   000000C0   800F80E3           ORR      R0,R0,#0x200
   \   000000C4   0C008DE5           STR      R0,[SP, #+12]
   \   000000C8   0000A0E3           MOV      R0,#+0
   \   000000CC   08008DE5           STR      R0,[SP, #+8]
   \   000000D0   0300A0E3           MOV      R0,#+3
   \   000000D4   04008DE5           STR      R0,[SP, #+4]
   \   000000D8   00508DE5           STR      R5,[SP, #+0]
   \   000000DC   D030A0E3           MOV      R3,#+208
   \   000000E0   6920A0E3           MOV      R2,#+105
   \   000000E4   3210A0E3           MOV      R1,#+50
   \   000000E8   3100A0E3           MOV      R0,#+49
   \   000000EC   ........           BL       LISTWHEEL_CreateEx
   \   000000F0   000086E5           STR      R0,[R6, #+0]
   1135          	LISTWHEEL_SetLineHeight(hRecordSpeedWheel, 41);
   \   000000F4   2910A0E3           MOV      R1,#+41
   \   000000F8   ........           BL       LISTWHEEL_SetLineHeight
   1136          	LISTWHEEL_SetSnapPosition(hRecordSpeedWheel, 87);
   \   000000FC   5710A0E3           MOV      R1,#+87
   \   00000100   000096E5           LDR      R0,[R6, #+0]
   \   00000104   ........           BL       LISTWHEEL_SetSnapPosition
   1137          	LISTWHEEL_SetFont(hRecordSpeedWheel, &GUI_Font24_ASCII);
   \   00000108   ........           LDR      R8,??DataTable194_2
   \   0000010C   000096E5           LDR      R0,[R6, #+0]
   \   00000110   0810A0E1           MOV      R1,R8
   \   00000114   ........           BL       LISTWHEEL_SetFont
   1138          	LISTWHEEL_SetTextAlign(hRecordSpeedWheel, GUI_TA_CENTER);
   \   00000118   0210A0E3           MOV      R1,#+2
   \   0000011C   000096E5           LDR      R0,[R6, #+0]
   \   00000120   ........           BL       LISTWHEEL_SetTextAlign
   1139          	LISTWHEEL_SetPos(hRecordSpeedWheel, recordSpeedIndex);
   \   00000124   0710A0E1           MOV      R1,R7
   \   00000128   000096E5           LDR      R0,[R6, #+0]
   \   0000012C   ........           BL       LISTWHEEL_SetPos
   1140          	LISTWHEEL_SetSel(hRecordSpeedWheel, recordSpeedIndex);
   \   00000130   0710A0E1           MOV      R1,R7
   \   00000134   000096E5           LDR      R0,[R6, #+0]
   \   00000138   ........           BL       LISTWHEEL_SetSel
   1141          
   1142          	// Display Stop Time (right) wheel
   1143          	hStopTimeWheel = LISTWHEEL_CreateEx(STOP_TIME_SPINNER_LEFT, 50, SPINNER_WIDTH, 208, hParent, WM_CF_SHOW | WM_CF_HASTRANS, 0, STOP_TIME_WHEEL, StopTime);
   \   0000013C   500086E2           ADD      R0,R6,#+80
   \   00000140   10008DE5           STR      R0,[SP, #+16]
   \   00000144   990FA0E3           MOV      R0,#+612
   \   00000148   0C008DE5           STR      R0,[SP, #+12]
   \   0000014C   0000A0E3           MOV      R0,#+0
   \   00000150   08008DE5           STR      R0,[SP, #+8]
   \   00000154   0300A0E3           MOV      R0,#+3
   \   00000158   04008DE5           STR      R0,[SP, #+4]
   \   0000015C   00508DE5           STR      R5,[SP, #+0]
   \   00000160   D030A0E3           MOV      R3,#+208
   \   00000164   6920A0E3           MOV      R2,#+105
   \   00000168   3210A0E3           MOV      R1,#+50
   \   0000016C   530FA0E3           MOV      R0,#+332
   \   00000170   ........           BL       LISTWHEEL_CreateEx
   \   00000174   040086E5           STR      R0,[R6, #+4]
   1144          	LISTWHEEL_SetLineHeight(hStopTimeWheel, 41);
   \   00000178   2910A0E3           MOV      R1,#+41
   \   0000017C   ........           BL       LISTWHEEL_SetLineHeight
   1145          	LISTWHEEL_SetSnapPosition(hStopTimeWheel, 87);
   \   00000180   5710A0E3           MOV      R1,#+87
   \   00000184   040096E5           LDR      R0,[R6, #+4]
   \   00000188   ........           BL       LISTWHEEL_SetSnapPosition
   1146          	LISTWHEEL_SetFont(hStopTimeWheel, &GUI_Font24_ASCII);
   \   0000018C   0810A0E1           MOV      R1,R8
   \   00000190   040096E5           LDR      R0,[R6, #+4]
   \   00000194   ........           BL       LISTWHEEL_SetFont
   1147          	LISTWHEEL_SetTextAlign(hStopTimeWheel, GUI_TA_CENTER);
   \   00000198   0210A0E3           MOV      R1,#+2
   \   0000019C   040096E5           LDR      R0,[R6, #+4]
   \   000001A0   ........           BL       LISTWHEEL_SetTextAlign
   1148          	LISTWHEEL_SetPos(hStopTimeWheel, stopTimeIndex = GetRecordStopTime());
   \   000001A4   EC0094E5           LDR      R0,[R4, #+236]
   \   000001A8   8910A0E3           MOV      R1,#+137
   \   000001AC   2002A0E1           LSR      R0,R0,#+4
   \   000001B0   000AA0E1           LSL      R0,R0,#+20
   \   000001B4   200AA0E1           LSR      R0,R0,#+20
   \   000001B8   881C81E3           ORR      R1,R1,#0x8800
   \   000001BC   900101E0           MUL      R1,R0,R1
   \   000001C0   040096E5           LDR      R0,[R6, #+4]
   \   000001C4   A14AA0E1           LSR      R4,R1,#+21
   \   000001C8   0B0054E3           CMP      R4,#+11
   \   000001CC   0040A0A3           MOVGE    R4,#+0
   \   000001D0   0410A0E1           MOV      R1,R4
   \   000001D4   ........           BL       LISTWHEEL_SetPos
   1149          	LISTWHEEL_SetSel(hStopTimeWheel, stopTimeIndex);
   \   000001D8   0410A0E1           MOV      R1,R4
   \   000001DC   040096E5           LDR      R0,[R6, #+4]
   \   000001E0   18D08DE2           ADD      SP,SP,#+24
   \   000001E4   F041BDE8           POP      {R4-R8,LR}
   \   000001E8   ........           B        LISTWHEEL_SetSel  ;; tailcall
   1150          }
   1151          

   \                                 In section .text, align 4, keep-with-next
   1152          const char *GetRecordSpeedString(void)
   1153          {
   1154          	int recordSpeed;
   1155          
   1156          	recordSpeed = GetRecordSpeed();
   \                     GetRecordSpeedString:
   \   00000000   ........           LDR      R0,??DataTable194_1
   \   00000004   EC1090E5           LDR      R1,[R0, #+236]
   1157          
   1158          	// Speed always stored in kph - Convert from speed to spinner index
   1159          	if (sysData.units == METRIC)
   \   00000008   640090E5           LDR      R0,[R0, #+100]
   \   0000000C   2118A0E1           LSR      R1,R1,#+16
   \   00000010   010050E3           CMP      R0,#+1
   \   00000014   201041E2           SUB      R1,R1,#+32
   \   00000018   2800001A           BNE      ??GetRecordSpeedString_2
   1160          	{
   1161          		switch (recordSpeed)
   \   0000001C   300051E3           CMP      R1,#+48
   \   00000020   0E00008A           BHI      ??GetRecordSpeedString_3
   \   00000024   0100DFE7           LDRB     R0,[PC, R1]
   \   00000028   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetRecordSpeedString_0:
   \   0000002C   0F0C0C0C           DC8      0xF,0xC,0xC,0xC
   \   00000030   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000034   120C0C0C           DC8      0x12,0xC,0xC,0xC
   \   00000038   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000003C   150C0C0C           DC8      0x15,0xC,0xC,0xC
   \   00000040   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000044   180C0C0C           DC8      0x18,0xC,0xC,0xC
   \   00000048   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000004C   1B0C0C0C           DC8      0x1B,0xC,0xC,0xC
   \   00000050   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   00000054   1E0C0C0C           DC8      0x1E,0xC,0xC,0xC
   \   00000058   0C0C0C0C           DC8      0xC,0xC,0xC,0xC
   \   0000005C   21000000           DC8      0x21,0x0,0x0,0x0
   1162          		{
   1163          		default:
   1164          		case 0:		return "Disabled";
   \                     ??GetRecordSpeedString_3:
   \   00000060   ............       ADRL     R0,`?<Constant "Disabled">`
   \              ....        
   \   00000068   1EFF2FE1           BX       LR
   1165          		case 32:	return "32 kph";
   \                     ??GetRecordSpeedString_4:
   \   0000006C   ............       ADRL     R0,`?<Constant "32 kph">`
   \              ....        
   \   00000074   1EFF2FE1           BX       LR
   1166          		case 40:	return "40 kph";
   \                     ??GetRecordSpeedString_5:
   \   00000078   ............       ADRL     R0,`?<Constant "40 kph">`
   \              ....        
   \   00000080   1EFF2FE1           BX       LR
   1167          		case 48:	return "48 kph";
   \                     ??GetRecordSpeedString_6:
   \   00000084   ............       ADRL     R0,`?<Constant "48 kph">`
   \              ....        
   \   0000008C   1EFF2FE1           BX       LR
   1168          		case 56:	return "56 kph";
   \                     ??GetRecordSpeedString_7:
   \   00000090   ............       ADRL     R0,`?<Constant "56 kph">`
   \              ....        
   \   00000098   1EFF2FE1           BX       LR
   1169          		case 64:	return "64 kph";
   \                     ??GetRecordSpeedString_8:
   \   0000009C   ............       ADRL     R0,`?<Constant "64 kph">`
   \              ....        
   \   000000A4   1EFF2FE1           BX       LR
   1170          		case 72:	return "72 kph";
   \                     ??GetRecordSpeedString_9:
   \   000000A8   ............       ADRL     R0,`?<Constant "72 kph">`
   \              ....        
   \   000000B0   1EFF2FE1           BX       LR
   1171          		case 80:	return "80 kph";
   \                     ??GetRecordSpeedString_10:
   \   000000B4   ............       ADRL     R0,`?<Constant "80 kph">`
   \              ....        
   \   000000BC   1EFF2FE1           BX       LR
   1172          		}
   1173          	}
   1174          	else
   1175          	{
   1176          		switch (recordSpeed)
   \                     ??GetRecordSpeedString_2:
   \   000000C0   300051E3           CMP      R1,#+48
   \   000000C4   E5FFFF8A           BHI      ??GetRecordSpeedString_3
   \   000000C8   D1009FE1           LDRSB    R0,[PC, R1]
   \   000000CC   00F18FE0           ADD      PC,PC,R0, LSL #+2
   \                     ??GetRecordSpeedString_1:
   \   000000D0   0CE3E3E3           DC8      0xC,0xE3,0xE3,0xE3
   \   000000D4   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   000000D8   0FE3E3E3           DC8      0xF,0xE3,0xE3,0xE3
   \   000000DC   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   000000E0   12E3E3E3           DC8      0x12,0xE3,0xE3,0xE3
   \   000000E4   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   000000E8   15E3E3E3           DC8      0x15,0xE3,0xE3,0xE3
   \   000000EC   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   000000F0   18E3E3E3           DC8      0x18,0xE3,0xE3,0xE3
   \   000000F4   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   000000F8   1BE3E3E3           DC8      0x1B,0xE3,0xE3,0xE3
   \   000000FC   E3E3E3E3           DC8      0xE3,0xE3,0xE3,0xE3
   \   00000100   1E000000           DC8      0x1E,0x0,0x0,0x0
   1177          		{
   1178          		default:
   1179          		case 0:		return "Disabled";
   1180          		case 32:	return "20 mph";
   \                     ??GetRecordSpeedString_11:
   \   00000104   ............       ADRL     R0,`?<Constant "20 mph">`
   \              ....        
   \   0000010C   1EFF2FE1           BX       LR
   1181          		case 40:	return "25 mph";
   \                     ??GetRecordSpeedString_12:
   \   00000110   ............       ADRL     R0,`?<Constant "25 mph">`
   \              ....        
   \   00000118   1EFF2FE1           BX       LR
   1182          		case 48:	return "30 mph";
   \                     ??GetRecordSpeedString_13:
   \   0000011C   ............       ADRL     R0,`?<Constant "30 mph">`
   \              ....        
   \   00000124   1EFF2FE1           BX       LR
   1183          		case 56:	return "35 mph";
   \                     ??GetRecordSpeedString_14:
   \   00000128   ............       ADRL     R0,`?<Constant "35 mph">`
   \              ....        
   \   00000130   1EFF2FE1           BX       LR
   1184          		case 64:	return "40 mph";
   \                     ??GetRecordSpeedString_15:
   \   00000134   ............       ADRL     R0,`?<Constant "40 mph">`
   \              ....        
   \   0000013C   1EFF2FE1           BX       LR
   1185          		case 72:	return "45 mph";
   \                     ??GetRecordSpeedString_16:
   \   00000140   ............       ADRL     R0,`?<Constant "45 mph">`
   \              ....        
   \   00000148   1EFF2FE1           BX       LR
   1186          		case 80:	return "50 mph";
   \                     ??GetRecordSpeedString_17:
   \   0000014C   ............       ADRL     R0,`?<Constant "50 mph">`
   \              ....        
   \   00000154   1EFF2FE1           BX       LR               ;; return
   1187          		}
   1188          	}
   1189          }
   1190          
   1191          

   \                                 In section .text, align 4, keep-with-next
   1192          void DisplaySelectionPaint(WM_HWIN hParent)
   1193          {
   \                     DisplaySelectionPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1194          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable207_2
   \   00000014   ........           BL       GUI_DrawBitmap
   1195          	GUI_DrawBitmap(&bmDisplayText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable207_3
   \   00000024   ........           BL       GUI_DrawBitmap
   1196          	GUI_DrawRoundedRect(10, 40, 460, 250, 5);
   \   00000028   0500A0E3           MOV      R0,#+5
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   FA30A0E3           MOV      R3,#+250
   \   00000034   732FA0E3           MOV      R2,#+460
   \   00000038   2810A0E3           MOV      R1,#+40
   \   0000003C   0A00A0E3           MOV      R0,#+10
   \   00000040   ........           BL       GUI_DrawRoundedRect
   1197          	GUI_FillRoundedRect(10, 40, 460, 250, 5);
   \   00000044   0500A0E3           MOV      R0,#+5
   \   00000048   00008DE5           STR      R0,[SP, #+0]
   \   0000004C   FA30A0E3           MOV      R3,#+250
   \   00000050   732FA0E3           MOV      R2,#+460
   \   00000054   2810A0E3           MOV      R1,#+40
   \   00000058   0A00A0E3           MOV      R0,#+10
   \   0000005C   ........           BL       GUI_FillRoundedRect
   1198          
   1199          	GUI_SetTextMode(GUI_TM_REV);
   \   00000060   0400A0E3           MOV      R0,#+4
   \   00000064   ........           BL       GUI_SetTextMode
   1200          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   00000068   ........           LDR      R0,??DataTable207_4
   \   0000006C   ........           BL       GUI_SetFont
   1201          	GUI_DispStringHCenterAt("Backlight", 230, BACKLIGHT_Y - 40);
   \   00000070   2D20A0E3           MOV      R2,#+45
   \   00000074   E610A0E3           MOV      R1,#+230
   \   00000078   ............       ADRL     R0,`?<Constant "Backlight">`
   \              ....        
   \   00000080   ........           BL       GUI_DispStringHCenterAt
   1202          	GUI_DispStringHCenterAt("LED Intensity", 230, LED_INTENSITY_Y - 40);
   \   00000084   7820A0E3           MOV      R2,#+120
   \   00000088   E610A0E3           MOV      R1,#+230
   \   0000008C   ............       ADRL     R0,`?<Constant "LED Intensity">`
   \              ....        
   \   00000094   ........           BL       GUI_DispStringHCenterAt
   1203          	GUI_DispStringAt("Auto-Adjust", 100, 210);
   \   00000098   D220A0E3           MOV      R2,#+210
   \   0000009C   6410A0E3           MOV      R1,#+100
   \   000000A0   ............       ADRL     R0,`?<Constant "Auto-Adjust">`
   \              ....        
   \   000000A8   ........           BL       GUI_DispStringAt
   1204          
   1205          	GUI_DrawBitmap(&bmDarkIcon, 18, BACKLIGHT_Y - 17);
   \   000000AC   ........           LDR      R4,??DataTable207_5
   \   000000B0   4420A0E3           MOV      R2,#+68
   \   000000B4   1210A0E3           MOV      R1,#+18
   \   000000B8   0400A0E1           MOV      R0,R4
   \   000000BC   ........           BL       GUI_DrawBitmap
   1206          	GUI_DrawBitmap(&bmBrightIcon, 412, BACKLIGHT_Y - 21);
   \   000000C0   ........           LDR      R5,??DataTable207_6
   \   000000C4   4020A0E3           MOV      R2,#+64
   \   000000C8   671FA0E3           MOV      R1,#+412
   \   000000CC   0500A0E1           MOV      R0,R5
   \   000000D0   ........           BL       GUI_DrawBitmap
   1207          	GUI_DrawBitmap(&bmSliderBlue, SLIDER_LEFT, BACKLIGHT_Y - 5);
   \   000000D4   5020A0E3           MOV      R2,#+80
   \   000000D8   3C10A0E3           MOV      R1,#+60
   \   000000DC   ........           LDR      R0,??DataTable207_7
   \   000000E0   ........           BL       GUI_DrawBitmap
   1208          	GUI_SetPenSize(3);
   \   000000E4   0300A0E3           MOV      R0,#+3
   \   000000E8   ........           BL       GUI_SetPenSize
   1209          	GUI_SetColor(GUI_GRAY);
   \   000000EC   ........           LDR      R0,??DataTable198_10  ;; 0x808080
   \   000000F0   ........           BL       GUI_SetColor
   1210          	GUI_DrawLine(10, BACKLIGHT_Y + 30, 460, BACKLIGHT_Y + 30);
   \   000000F4   7330A0E3           MOV      R3,#+115
   \   000000F8   732FA0E3           MOV      R2,#+460
   \   000000FC   7310A0E3           MOV      R1,#+115
   \   00000100   0A00A0E3           MOV      R0,#+10
   \   00000104   ........           BL       GUI_DrawLine
   1211          
   1212          	GUI_DrawBitmap(&bmDarkIcon, 18, LED_INTENSITY_Y - 17);
   \   00000108   8F20A0E3           MOV      R2,#+143
   \   0000010C   1210A0E3           MOV      R1,#+18
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   ........           BL       GUI_DrawBitmap
   1213          	GUI_DrawBitmap(&bmBrightIcon, 412, LED_INTENSITY_Y - 21);
   \   00000118   8B20A0E3           MOV      R2,#+139
   \   0000011C   671FA0E3           MOV      R1,#+412
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   ........           BL       GUI_DrawBitmap
   1214          	GUI_DrawBitmap(&bmSliderGreen, SLIDER_LEFT, LED_INTENSITY_Y - 5);
   \   00000128   9B20A0E3           MOV      R2,#+155
   \   0000012C   3C10A0E3           MOV      R1,#+60
   \   00000130   ........           LDR      R0,??DataTable207_8
   \   00000134   ........           BL       GUI_DrawBitmap
   1215          	GUI_DrawLine(10, LED_INTENSITY_Y + 30, 460, LED_INTENSITY_Y + 30);
   \   00000138   BE30A0E3           MOV      R3,#+190
   \   0000013C   732FA0E3           MOV      R2,#+460
   \   00000140   BE10A0E3           MOV      R1,#+190
   \   00000144   0A00A0E3           MOV      R0,#+10
   \   00000148   ........           BL       GUI_DrawLine
   1216          
   1217          	GUI_DrawBitmap(GetNavigationArrow(DISPLAY_SELECTION), 0, 229);
   \   0000014C   04D08DE2           ADD      SP,SP,#+4
   \   00000150   3040BDE8           POP      {R4,R5,LR}
   \   00000154   E520A0E3           MOV      R2,#+229
   \   00000158   0010A0E3           MOV      R1,#+0
   \   0000015C   ........           LDR      R0,??DataTable207_9
   \   00000160   ........           B        GUI_DrawBitmap   ;; tailcall
   1218          }
   1219          

   \                                 In section .text, align 4, keep-with-next
   1220          void UnitsSelectionPaint(WM_HWIN hParent)
   1221          {
   \                     UnitsSelectionPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1222          	GUI_SetColor(GUI_WHITE);
   \   00000008   FF04E0E3           MVN      R0,#-16777216
   \   0000000C   ........           BL       GUI_SetColor
   1223          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000010   0020A0E3           MOV      R2,#+0
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   ........           LDR      R0,??DataTable207_2
   \   0000001C   ........           BL       GUI_DrawBitmap
   1224          	GUI_DrawBitmap(&bmUnitsText, 60, 0);
   \   00000020   0020A0E3           MOV      R2,#+0
   \   00000024   3C10A0E3           MOV      R1,#+60
   \   00000028   ........           LDR      R0,??DataTable207_10
   \   0000002C   ........           BL       GUI_DrawBitmap
   1225          
   1226          	GUI_DrawRoundedRect(10, 40, 460, 250, 5);
   \   00000030   0500A0E3           MOV      R0,#+5
   \   00000034   00008DE5           STR      R0,[SP, #+0]
   \   00000038   FA30A0E3           MOV      R3,#+250
   \   0000003C   732FA0E3           MOV      R2,#+460
   \   00000040   2810A0E3           MOV      R1,#+40
   \   00000044   0A00A0E3           MOV      R0,#+10
   \   00000048   ........           BL       GUI_DrawRoundedRect
   1227          	GUI_FillRoundedRect(10, 40, 460, 250, 5);
   \   0000004C   0500A0E3           MOV      R0,#+5
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   FA30A0E3           MOV      R3,#+250
   \   00000058   732FA0E3           MOV      R2,#+460
   \   0000005C   2810A0E3           MOV      R1,#+40
   \   00000060   0A00A0E3           MOV      R0,#+10
   \   00000064   ........           BL       GUI_FillRoundedRect
   1228          
   1229          	GUI_SetPenSize(3);
   \   00000068   0300A0E3           MOV      R0,#+3
   \   0000006C   ........           BL       GUI_SetPenSize
   1230          	GUI_SetColor(GUI_GRAY);
   \   00000070   ........           LDR      R0,??DataTable198_10  ;; 0x808080
   \   00000074   ........           BL       GUI_SetColor
   1231          	GUI_DrawLine(150, 40, 150, 250);
   \   00000078   FA30A0E3           MOV      R3,#+250
   \   0000007C   9620A0E3           MOV      R2,#+150
   \   00000080   2810A0E3           MOV      R1,#+40
   \   00000084   9600A0E3           MOV      R0,#+150
   \   00000088   ........           BL       GUI_DrawLine
   1232          	GUI_DrawLine(10, 145, 460, 145);
   \   0000008C   9130A0E3           MOV      R3,#+145
   \   00000090   732FA0E3           MOV      R2,#+460
   \   00000094   9110A0E3           MOV      R1,#+145
   \   00000098   0A00A0E3           MOV      R0,#+10
   \   0000009C   ........           BL       GUI_DrawLine
   1233          
   1234          	GUI_DrawBitmap(GetNavigationArrow(UNITS_SELECTION), 0, 229);
   \   000000A0   04D08DE2           ADD      SP,SP,#+4
   \   000000A4   0040BDE8           POP      {LR}
   \   000000A8   E520A0E3           MOV      R2,#+229
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   ........           LDR      R0,??DataTable207_9
   \   000000B4   ........           B        GUI_DrawBitmap   ;; tailcall
   1235          }
   1236          

   \                                 In section .text, align 4, keep-with-next
   1237          void TimeSelectionPaint(WM_HWIN hParent)
   1238          {
   \                     TimeSelectionPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1239          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable198_5
   \   00000014   ........           BL       GUI_DrawBitmap
   1240          	GUI_DrawBitmap(&bmSingleSpinner, SPINNER_START, 42);
   \   00000018   2A20A0E3           MOV      R2,#+42
   \   0000001C   F010A0E3           MOV      R1,#+240
   \   00000020   ........           LDR      R0,??DataTable198_6
   \   00000024   ........           BL       GUI_DrawBitmap
   1241          	GUI_DrawBitmap(&bmTimeText, 60, 0);
   \   00000028   0020A0E3           MOV      R2,#+0
   \   0000002C   3C10A0E3           MOV      R1,#+60
   \   00000030   ........           LDR      R0,??DataTable207_11
   \   00000034   ........           BL       GUI_DrawBitmap
   1242          	GUI_DrawBitmap(GetNavigationArrow(TIME_SELECTION), 0, 229);
   \   00000038   E520A0E3           MOV      R2,#+229
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   ........           LDR      R0,??DataTable198_8
   \   00000044   ........           BL       GUI_DrawBitmap
   1243          
   1244          	GUI_SetColor(GUI_WHITE);
   \   00000048   FF04E0E3           MVN      R0,#-16777216
   \   0000004C   ........           BL       GUI_SetColor
   1245          	GUI_SetFont(&GUI_Font24_ASCII);
   \   00000050   ........           LDR      R0,??DataTable207_12
   \   00000054   ........           BL       GUI_SetFont
   1246          	GUI_SetTextMode(GUI_TM_TRANS);
   \   00000058   0200A0E3           MOV      R0,#+2
   \   0000005C   ........           BL       GUI_SetTextMode
   1247          	GUI_DispStringHCenterAt("Select GMT Offset", 130, 78);
   \   00000060   4E20A0E3           MOV      R2,#+78
   \   00000064   8210A0E3           MOV      R1,#+130
   \   00000068   ............       ADRL     R0,`?<Constant "Select GMT Offset">`
   \              ....        
   \   00000070   ........           BL       GUI_DispStringHCenterAt
   1248          	GUI_DispStringHCenterAt("Indoor Testing", 130, 163);
   \   00000074   04D08DE2           ADD      SP,SP,#+4
   \   00000078   0040BDE8           POP      {LR}
   \   0000007C   A320A0E3           MOV      R2,#+163
   \   00000080   8210A0E3           MOV      R1,#+130
   \   00000084   ............       ADRL     R0,`?<Constant "Indoor Testing">`
   \              ....        
   \   0000008C   ........           B        GUI_DispStringHCenterAt  ;; tailcall
   1249          }
   1250          
   1251          //void InputsSelectionPaint(WM_HWIN hParent)
   1252          //{
   1253          //	GUI_RECT Rect;
   1254          //
   1255          //	GUI_DrawBitmap(&bmInputsBackground, 0, 0);
   1256          //	GUI_DrawBitmap(&bmInputText, 60, 0);
   1257          //
   1258          //	Rect.x0 = 3;
   1259          //	Rect.y0 = 0;
   1260          //	Rect.x1 = 23;
   1261          //	Rect.y1 = YSIZE_PHYS;
   1262          //	GUI_SetFont(&GUI_Font20B_ASCII);
   1263          //	GUI_SetColor(GUI_RED);
   1264          //	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   1265          //	GUI_DispStringInRectEx("ANALOG",
   1266          //		&Rect,
   1267          //		GUI_TA_HCENTER,
   1268          //		6,
   1269          //		GUI_ROTATE_CCW);
   1270          //
   1271          //	Rect.x0 = XSIZE_PHYS - 23;
   1272          //	Rect.y0 = 0;
   1273          //	Rect.x1 = XSIZE_PHYS - 3;
   1274          //	Rect.y1 = YSIZE_PHYS;
   1275          //	GUI_SetColor(GUI_GREEN);
   1276          //	GUI_DispStringInRectEx("DIGITAL",
   1277          //		&Rect,
   1278          //		GUI_TA_HCENTER,
   1279          //		20,
   1280          //		GUI_ROTATE_CCW);
   1281          //
   1282          //
   1283          //	GUI_SetColor(GUI_BLACK);					// Draw shadow text due to light background
   1284          //	GUI_SetFont(&GUI_Font24B_ASCII);
   1285          //	//GUI_DispStringHCenterAt("Analog0", 98, 127);
   1286          //	//GUI_DispStringHCenterAt("Analog1", 242, 127);
   1287          //	//GUI_DispStringHCenterAt("Digital4", 386, 127);
   1288          //	GUI_DispStringHCenterAt("Analog0", 98, 127);
   1289          //	GUI_DispStringHCenterAt("Analog1", 242, 127);
   1290          //	GUI_DispStringHCenterAt("Digital4", 386, 127);
   1291          //
   1292          //	GUI_SetColor(GUI_WHITE);
   1293          ////	GUI_SetFont(&GUI_Font24B_ASCII);
   1294          ////	GUI_SetTextMode(GUI_TM_TRANS);
   1295          //	GUI_DispStringHCenterAt("Analog0", 96, 125);
   1296          //	GUI_DispStringHCenterAt("Analog1", 240, 125);
   1297          //	GUI_DispStringHCenterAt("Digital4", 384, 125);
   1298          //	GUI_DispStringHCenterAt("Analog2", 96, 235);
   1299          //	GUI_DispStringHCenterAt("Analog3", 240, 235);
   1300          //	GUI_DispStringHCenterAt("Digital5", 384, 235);
   1301          //
   1302          //	GUI_DrawBitmap(GetNavigationArrow(INPUTS_SELECTION), 0, 229);
   1303          //}
   1304          //

   \                                 In section .text, align 4, keep-with-next
   1305          void StorageSelectionPaint(WM_HWIN hParent)
   1306          {
   \                     StorageSelectionPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1307          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable207_2
   \   00000014   ........           BL       GUI_DrawBitmap
   1308          	GUI_DrawBitmap(&bmStorageText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable207_13
   \   00000024   ........           BL       GUI_DrawBitmap
   1309          	GUI_DrawBitmap(GetNavigationArrow(STORAGE_SELECTION), 0, 229);
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   0040BDE8           POP      {LR}
   \   00000030   E520A0E3           MOV      R2,#+229
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   ........           LDR      R0,??DataTable207_9
   \   0000003C   ........           B        GUI_DrawBitmap   ;; tailcall
   1310          }
   1311          
   1312          
   1313          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen)
   1314          {
   1315          	return &bmleftarrow;
   1316          }
   1317          

   \                                 In section .text, align 4, keep-with-next
   1318          void SystemSettingsIgnoreNextKeyRelease(void)
   1319          {
   1320          	clickedOnThisScreen = false;
   \                     SystemSettingsIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable207_14
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   681080E5           STR      R1,[R0, #+104]
   1321          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   1322          
   1323          //int GetScreenID(int Id)
   1324          //{
   1325          //	switch (Id)
   1326          //	{
   1327          //		case ANALOG0_BUTTON:		return ANALOG0;
   1328          //		case ANALOG1_BUTTON:		return ANALOG1;
   1329          //		case ANALOG2_BUTTON:		return ANALOG2;
   1330          //		case ANALOG3_BUTTON:		return ANALOG3;
   1331          //		case DIGITAL4_BUTTON:	return DIGITAL4;
   1332          //		default:
   1333          //		case DIGITAL5_BUTTON:	return DIGITAL5;
   1334          //	}
   1335          //}
   1336          

   \                                 In section .text, align 4, keep-with-next
   1337          static const GUI_WIDGET_CREATE_INFO EraseAllResources[] = {
   \                     EraseAllResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "About to Erase All Se...">`
   \              ............
   \   00000020   000000001900       DC16 0, 0, 25, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000038   000000004100       DC16 0, 0, 65, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000050   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   1338          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   1339          	{ TEXT_CreateIndirect, "About to Erase All Sessions!", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1340          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1341          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   1342          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1343          };
   1344          

   \                                 In section .text, align 4, keep-with-next
   1345          static const GUI_WIDGET_CREATE_INFO GPSSimulateResources[] = {
   \                     GPSSimulateResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "About to enable GPS s...">`
   \              ............
   \   00000020   000000000F00       DC16 0, 0, 15, 353, 30, 2
   \              61011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "used for camera or dy...">`
   \              ....        
   \   00000038   000000002D00       DC16 0, 0, 45, 353, 30, 2
   \              61011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000050   000000004B00       DC16 0, 0, 75, 353, 30, 2
   \              61011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000068   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000080   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   1346          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   1347          	{ TEXT_CreateIndirect, "About to enable GPS simulation mode", 0, 0, 15, 353, 30, TEXT_CF_HCENTER },
   1348          	{ TEXT_CreateIndirect, "used for camera or dyno testing.", 0, 0, 45, 353, 30, TEXT_CF_HCENTER },
   1349          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 75, 353, 30, TEXT_CF_HCENTER },
   1350          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   1351          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1352          };
   1353          

   \                                 In section .text, align 4, keep-with-next
   1354          static const GUI_WIDGET_CREATE_INFO EraseSessionResources[] = {
   \                     EraseSessionResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "About to delete session">`
   \              ............
   \   00000020   000000000F00       DC16 0, 0, 15, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000038   000000004B00       DC16 0, 0, 75, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000050   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   1355          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   1356          	{ TEXT_CreateIndirect, "About to delete session", 0, 0, 15, 360, 30, TEXT_CF_HCENTER },
   1357          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 75, 360, 30, TEXT_CF_HCENTER },
   1358          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   1359          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1360          };
   1361          

   \                                 In section .text, align 4, keep-with-next
   1362          static const GUI_WIDGET_CREATE_INFO FactoryDefaultsResources[] = {
   \                     FactoryDefaultsResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "About to Restore All ...">`
   \              ............
   \   00000020   000000001900       DC16 0, 0, 25, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000038   000000004100       DC16 0, 0, 65, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000050   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   1363          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   1364          	{ TEXT_CreateIndirect, "About to Restore All Settings!", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1365          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1366          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   1367          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1368          };
   1369          

   \                                 In section .text, align 4, keep-with-next
   1370          static const GUI_WIDGET_CREATE_INFO FactoryDefaultsRestoredResources[] = {
   \                     FactoryDefaultsRestoredResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Restored to factory s...">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000038   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   1371          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1372          	{ TEXT_CreateIndirect, "Restored to factory settings.", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1373          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   1374          };
   1375          

   \                                 In section .text, align 4, keep-with-next
   1376          static const GUI_WIDGET_CREATE_INFO FormatSDResources[] = {
   \                     FormatSDResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "WARNING">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "About to Format SD card!">`
   \              ............
   \   00000020   000000001900       DC16 0, 0, 25, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Are you sure?">`
   \              ....        
   \   00000038   000000004100       DC16 0, 0, 65, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000050   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   1377          	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   1378          	{ TEXT_CreateIndirect, "About to Format SD card!", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1379          	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1380          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   1381          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1382          };

   \                                 In section .text, align 4, keep-with-next
   1383          static const GUI_WIDGET_CREATE_INFO InvalidSDResources[] = {
   \                     InvalidSDResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "ERROR">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Cannot read SD card!">`
   \              ............
   \   00000020   000000001900       DC16 0, 0, 25, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Format Required!">`
   \              ....        
   \   00000038   000000004100       DC16 0, 0, 65, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "FORMAT">`
   \              ....        
   \   00000050   01003C007300       DC16 1, 60, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000068   0200C8007300       DC16 2, 200, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   1384          	{ FRAMEWIN_CreateIndirect, "ERROR", 0, 50, 20, 360, 220, 0, 0 },
   1385          	{ TEXT_CreateIndirect, "Cannot read SD card!", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1386          	{ TEXT_CreateIndirect, "Format Required!", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1387          	{ BUTTON_CreateIndirect, "FORMAT", GUI_ID_OK, 60, 115, 100, 60 },
   1388          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1389          };
   1390          //static const GUI_WIDGET_CREATE_INFO AutoOnEnableResources[] = {
   1391          //	{ FRAMEWIN_CreateIndirect, "ENABLE AUTO-ON?", 0, 50, 20, 360, 220, 0, 0 },
   1392          //	{ TEXT_CreateIndirect, "Would you like to enable Auto-On?", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1393          //	{ TEXT_CreateIndirect, "Makes unit turn on automatically", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1394          //	{ BUTTON_CreateIndirect, "YES", GUI_ID_YES, 60, 115, 100, 60 },
   1395          //	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1396          //};
   1397          //static const GUI_WIDGET_CREATE_INFO AutoOnDisableResources[] = {
   1398          //	{ FRAMEWIN_CreateIndirect, "DISABLE AUTO-ON?", 0, 50, 20, 360, 220, 0, 0 },
   1399          //	{ TEXT_CreateIndirect, "Would you like to disable Auto-On?", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   1400          //	{ TEXT_CreateIndirect, "Power on/off only with the power key", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   1401          //	{ BUTTON_CreateIndirect, "YES", GUI_ID_YES, 60, 115, 100, 60 },
   1402          //	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   1403          //};
   1404          

   \                                 In section .text, align 4, keep-with-next
   1405          static const GUI_WIDGET_CREATE_INFO FormattingSDResources[] = {
   \                     FormattingSDResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Working!">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000038   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   1406          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1407          	{ TEXT_CreateIndirect, "Working!", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1408          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   1409          };
   1410          

   \                                 In section .text, align 4, keep-with-next
   1411          static const GUI_WIDGET_CREATE_INFO AllSessionsErasedResources[] = {
   \                     AllSessionsErasedResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "All sessions erased">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000038   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   1412          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1413          	{ TEXT_CreateIndirect, "All sessions erased", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1414          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   1415          };
   1416          

   \                                 In section .text, align 4, keep-with-next
   1417          static const GUI_WIDGET_CREATE_INFO RealFormattingSDResources[] = {
   \                     RealFormattingSDResources:
   \   00000000                      ; Initializer data, 48 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Formatting!">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   1418          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1419          	{ TEXT_CreateIndirect, "Formatting!", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1420          };
   1421          

   \                                 In section .text, align 4, keep-with-next
   1422          static const GUI_WIDGET_CREATE_INFO ErasingSessionsResources[] = {
   \                     ErasingSessionsResources:
   \   00000000                      ; Initializer data, 48 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Erasing session(s)!">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   1423          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1424          	{ TEXT_CreateIndirect, "Erasing session(s)!", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1425          };
   1426          

   \                                 In section .text, align 4, keep-with-next
   1427          static const GUI_WIDGET_CREATE_INFO LoadingSessionsResources[] = {
   \                     LoadingSessionsResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Loading session data.">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Please wait.">`
   \              ....        
   \   00000038   000000005500       DC16 0, 0, 85, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   1428          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1429          	{ TEXT_CreateIndirect, "Loading session data.", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1430          	{ TEXT_CreateIndirect, "Please wait.", 0, 0, 85, 360, 30, TEXT_CF_HCENTER },
   1431          };
   1432          

   \                                 In section .text, align 4, keep-with-next
   1433          static const GUI_WIDGET_CREATE_INFO FormattingCompleteResources[] = {
   \                     FormattingCompleteResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "STATUS">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Formatting complete!">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000038   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   1434          	{ FRAMEWIN_CreateIndirect, "STATUS", 0, 50, 20, 360, 220, 0, 0 },
   1435          	{ TEXT_CreateIndirect, "Formatting complete!", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1436          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   1437          };
   1438          

   \                                 In section .text, align 4, keep-with-next
   1439          static const GUI_WIDGET_CREATE_INFO FormattingFailedResources[] = {
   \                     FormattingFailedResources:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "ERROR">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Formatting FAILED!">`
   \              ............
   \   00000020   000000002D00       DC16 0, 0, 45, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000038   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   1440          	{ FRAMEWIN_CreateIndirect, "ERROR", 0, 50, 20, 360, 220, 0, 0 },
   1441          	{ TEXT_CreateIndirect, "Formatting FAILED!", 0, 0, 45, 360, 30, TEXT_CF_HCENTER },
   1442          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   1443          };
   1444          
   1445          //
   1446          // Display a modal dialog box to see if the user wants to stop recording to exit this screen
   1447          //
   1448          // Returns	YES - proceed to exit record mode
   1449          //				NO - abort and stay
   1450          //

   \                                 In section .text, align 4, keep-with-next
   1451          int SystemSettingsPopUp(int screen, WM_HWIN owner)
   1452          {
   \                     SystemSettingsPopUp:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0070A0E1           MOV      R7,R0
   1453          	int retval, x, y;
   1454          
   1455          	retval = false;
   1456          	modalWindowUp = true;
   \   00000008   ........           LDR      R6,??DataTable207_15
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   14D04DE2           SUB      SP,SP,#+20
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   040086E5           STR      R0,[R6, #+4]
   \   0000001C   0050A0E3           MOV      R5,#+0
   1457          
   1458          	GUI_GetOrg(&x, &y);			// Get y offset so popups work reguardless of scroll position
   \   00000020   08108DE2           ADD      R1,SP,#+8
   \   00000024   0C008DE2           ADD      R0,SP,#+12
   \   00000028   ........           BL       GUI_GetOrg
   1459          
   1460          	switch (systemSettingsPopupScreen = screen)
   \   0000002C   010047E2           SUB      R0,R7,#+1
   \   00000030   007086E5           STR      R7,[R6, #+0]
   \   00000034   0E0050E3           CMP      R0,#+14
   \   00000038   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SystemSettingsPopUp_0:
   \   0000003C   1D00008A           BHI      ??SystemSettingsPopUp_1
   \   00000040   210000EA           B        ??SystemSettingsPopUp_2
   \   00000044   3A0000EA           B        ??SystemSettingsPopUp_3
   \   00000048   460000EA           B        ??SystemSettingsPopUp_4
   \   0000004C   7B0000EA           B        ??SystemSettingsPopUp_5
   \   00000050   880000EA           B        ??SystemSettingsPopUp_6
   \   00000054   940000EA           B        ??SystemSettingsPopUp_7
   \   00000058   070000EA           B        ??SystemSettingsPopUp_8
   \   0000005C   150000EA           B        ??SystemSettingsPopUp_1
   \   00000060   5A0000EA           B        ??SystemSettingsPopUp_9
   \   00000064   9D0000EA           B        ??SystemSettingsPopUp_10
   \   00000068   670000EA           B        ??SystemSettingsPopUp_11
   \   0000006C   A80000EA           B        ??SystemSettingsPopUp_12
   \   00000070   490000EA           B        ??SystemSettingsPopUp_13
   \   00000074   B30000EA           B        ??SystemSettingsPopUp_14
   \   00000078   200000EA           B        ??SystemSettingsPopUp_15
   1461          	{
   1462          		case DELETE_SESSION:
   1463          			SetPopupDefaults(WARNING_POPUP);
   \                     ??SystemSettingsPopUp_8:
   \   0000007C   0100A0E3           MOV      R0,#+1
   \   00000080   ........           BL       SetPopupDefaults
   1464          			if (GUI_ExecDialogBox(EraseSessionResources, GUI_COUNTOF(EraseSessionResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   \   00000084   08009DE5           LDR      R0,[SP, #+8]
   \   00000088   0430A0E1           MOV      R3,R4
   \   0000008C   0A0080E2           ADD      R0,R0,#+10
   \   00000090   04008DE5           STR      R0,[SP, #+4]
   \   00000094   0A00A0E3           MOV      R0,#+10
   \   00000098   00008DE5           STR      R0,[SP, #+0]
   \   0000009C   ........           LDR      R2,??DataTable207_16
   \   000000A0   0510A0E3           MOV      R1,#+5
   \   000000A4   ............       ADRL     R0,EraseSessionResources
   \              ....        
   \                     ??SystemSettingsPopUp_16:
   \   000000AC   ........           BL       GUI_ExecDialogBox
   \   000000B0   010050E3           CMP      R0,#+1
   1465          				retval = true;
   \   000000B4   0150A003           MOVEQ    R5,#+1
   1466          			else retval = false;
   1467          			break;
   1468          
   1469          		case ERASE_ALL_SESSIONS:
   1470          			SetPopupDefaults(WARNING_POPUP);
   1471          			if (GUI_ExecDialogBox(EraseAllResources, GUI_COUNTOF(EraseAllResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   1472          				retval = true;
   1473          			else retval = false;
   1474          			break;
   1475          
   1476          		case GPS_SIMULATE_ON:
   1477          			SetPopupDefaults(WARNING_POPUP);
   1478          			if (GUI_ExecDialogBox(GPSSimulateResources, GUI_COUNTOF(GPSSimulateResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   1479          				retval = true;
   1480          			else retval = false;
   1481          			break;
   1482          
   1483          		case FACTORY_DEFAULTS:
   1484          			SetPopupDefaults(WARNING_POPUP);
   1485          			if (GUI_ExecDialogBox(FactoryDefaultsResources, GUI_COUNTOF(FactoryDefaultsResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   1486          				retval = true;
   1487          			else retval = false;
   1488          			break;
   1489          
   1490          		case FORMAT_SDCARD:
   1491          			SetPopupDefaults(WARNING_POPUP);
   1492          			if (GUI_ExecDialogBox(FormatSDResources, GUI_COUNTOF(FormatSDResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   1493          				retval = true;
   1494          			else retval = false;
   1495          			break;
   1496          
   1497          		case INVALID_SDCARD:
   1498          			SetPopupDefaults(WARNING_POPUP);
   1499          			if (GUI_ExecDialogBox(InvalidSDResources, GUI_COUNTOF(InvalidSDResources), &popupCallback, owner, 10, 10 + y) == GUI_ID_OK)
   1500          				retval = true;
   1501          			else retval = false;
   1502          			break;
   1503          
   1504          		////////case ENABLE_AUTO_ON:
   1505          		////////	retval = GUI_ExecDialogBox(AutoOnEnableResources, GUI_COUNTOF(AutoOnEnableResources), &popupCallback, owner, 10, 10 + y);
   1506          		////////	break;
   1507          
   1508          		////////case DISABLE_AUTO_ON:
   1509          		////////	retval = GUI_ExecDialogBox(AutoOnDisableResources, GUI_COUNTOF(AutoOnDisableResources), &popupCallback, owner, 10, 10 + y);
   1510          		////////	break;
   1511          
   1512          		case FORMATTING_COMPLETE:
   1513          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1514          			retval = GUI_ExecDialogBox(FormattingCompleteResources, GUI_COUNTOF(FormattingCompleteResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1515          			break;
   1516          			
   1517          		case FORMATTING_FAILED:
   1518          			SetPopupDefaults(ERROR_POPUP);
   1519          			retval = GUI_ExecDialogBox(FormattingFailedResources, GUI_COUNTOF(FormattingFailedResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1520          			break;
   1521          			
   1522          		// Display true non-modal dialog box
   1523          			// These boxes expect messages from other tasks for completion.  So return here and DO NOT clear modalWindowUp
   1524          			// That is handled when the message comes indicating the job is done - or, in the caese of my testing, when you press OK
   1525          			//
   1526          		case ALL_SESSIONS_ERASED:
   1527          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1528          			return GUI_CreateDialogBox(AllSessionsErasedResources, GUI_COUNTOF(AllSessionsErasedResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1529          			
   1530          		case RESTORED_DEFAULTS:
   1531          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1532          			return GUI_CreateDialogBox(FactoryDefaultsRestoredResources, GUI_COUNTOF(FactoryDefaultsRestoredResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1533          
   1534          		case FORMATTING_SDCARD:
   1535          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1536          			return GUI_CreateDialogBox(FormattingSDResources, GUI_COUNTOF(FormattingSDResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1537          
   1538          		case REAL_FORMATTING_SDCARD:
   1539          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1540          			return GUI_CreateDialogBox(RealFormattingSDResources, GUI_COUNTOF(RealFormattingSDResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1541          
   1542          		case ERASING_SESSIONS:
   1543          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1544          			return GUI_CreateDialogBox(ErasingSessionsResources, GUI_COUNTOF(ErasingSessionsResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1545          
   1546          		case LOADING_SESSIONS:
   1547          			SetPopupDefaults(INFORMATIONAL_POPUP);
   1548          			return GUI_CreateDialogBox(LoadingSessionsResources, GUI_COUNTOF(LoadingSessionsResources), &nonModalPopupCallback, owner, 10, 10 + y);
   1549          	}
   1550          	
   1551          	modalWindowUp = false;
   \                     ??SystemSettingsPopUp_1:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   040086E5           STR      R0,[R6, #+4]
   1552          
   1553          	return retval;
   \   000000C0   0500A0E1           MOV      R0,R5
   \                     ??SystemSettingsPopUp_17:
   \   000000C4   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000000C8   F080BDE8           POP      {R4-R7,PC}       ;; return
   \                     ??SystemSettingsPopUp_2:
   \   000000CC   0100A0E3           MOV      R0,#+1
   \   000000D0   ........           BL       SetPopupDefaults
   \   000000D4   08009DE5           LDR      R0,[SP, #+8]
   \   000000D8   0430A0E1           MOV      R3,R4
   \   000000DC   0A0080E2           ADD      R0,R0,#+10
   \   000000E0   04008DE5           STR      R0,[SP, #+4]
   \   000000E4   0A00A0E3           MOV      R0,#+10
   \   000000E8   00008DE5           STR      R0,[SP, #+0]
   \   000000EC   ........           LDR      R2,??DataTable207_16
   \   000000F0   0510A0E3           MOV      R1,#+5
   \   000000F4   ............       ADRL     R0,EraseAllResources
   \              ....        
   \   000000FC   EAFFFFEA           B        ??SystemSettingsPopUp_16
   \                     ??SystemSettingsPopUp_15:
   \   00000100   0100A0E3           MOV      R0,#+1
   \   00000104   ........           BL       SetPopupDefaults
   \   00000108   08009DE5           LDR      R0,[SP, #+8]
   \   0000010C   0430A0E1           MOV      R3,R4
   \   00000110   0A0080E2           ADD      R0,R0,#+10
   \   00000114   04008DE5           STR      R0,[SP, #+4]
   \   00000118   0A00A0E3           MOV      R0,#+10
   \   0000011C   00008DE5           STR      R0,[SP, #+0]
   \   00000120   ........           LDR      R2,??DataTable207_16
   \   00000124   0610A0E3           MOV      R1,#+6
   \   00000128   ............       ADRL     R0,GPSSimulateResources
   \              ....        
   \   00000130   DDFFFFEA           B        ??SystemSettingsPopUp_16
   \                     ??SystemSettingsPopUp_3:
   \   00000134   0100A0E3           MOV      R0,#+1
   \   00000138   ........           BL       SetPopupDefaults
   \   0000013C   08009DE5           LDR      R0,[SP, #+8]
   \   00000140   0430A0E1           MOV      R3,R4
   \   00000144   0A0080E2           ADD      R0,R0,#+10
   \   00000148   04008DE5           STR      R0,[SP, #+4]
   \   0000014C   0A00A0E3           MOV      R0,#+10
   \   00000150   00008DE5           STR      R0,[SP, #+0]
   \   00000154   ........           LDR      R2,??DataTable207_16
   \   00000158   0510A0E3           MOV      R1,#+5
   \   0000015C   ............       ADRL     R0,FactoryDefaultsResources
   \              ....        
   \   00000164   D0FFFFEA           B        ??SystemSettingsPopUp_16
   \                     ??SystemSettingsPopUp_4:
   \   00000168   0100A0E3           MOV      R0,#+1
   \   0000016C   ........           BL       SetPopupDefaults
   \   00000170   08009DE5           LDR      R0,[SP, #+8]
   \   00000174   0430A0E1           MOV      R3,R4
   \   00000178   0A0080E2           ADD      R0,R0,#+10
   \   0000017C   04008DE5           STR      R0,[SP, #+4]
   \   00000180   0A00A0E3           MOV      R0,#+10
   \   00000184   00008DE5           STR      R0,[SP, #+0]
   \   00000188   ........           LDR      R2,??DataTable207_16
   \   0000018C   0510A0E3           MOV      R1,#+5
   \   00000190   ............       ADRL     R0,FormatSDResources
   \              ....        
   \   00000198   C3FFFFEA           B        ??SystemSettingsPopUp_16
   \                     ??SystemSettingsPopUp_13:
   \   0000019C   0100A0E3           MOV      R0,#+1
   \   000001A0   ........           BL       SetPopupDefaults
   \   000001A4   08009DE5           LDR      R0,[SP, #+8]
   \   000001A8   0430A0E1           MOV      R3,R4
   \   000001AC   0A0080E2           ADD      R0,R0,#+10
   \   000001B0   04008DE5           STR      R0,[SP, #+4]
   \   000001B4   0A00A0E3           MOV      R0,#+10
   \   000001B8   00008DE5           STR      R0,[SP, #+0]
   \   000001BC   ........           LDR      R2,??DataTable207_16
   \   000001C0   0510A0E3           MOV      R1,#+5
   \   000001C4   ............       ADRL     R0,InvalidSDResources
   \              ....        
   \   000001CC   B6FFFFEA           B        ??SystemSettingsPopUp_16
   \                     ??SystemSettingsPopUp_9:
   \   000001D0   0000A0E3           MOV      R0,#+0
   \   000001D4   ........           BL       SetPopupDefaults
   \   000001D8   08009DE5           LDR      R0,[SP, #+8]
   \   000001DC   0430A0E1           MOV      R3,R4
   \   000001E0   0A0080E2           ADD      R0,R0,#+10
   \   000001E4   04008DE5           STR      R0,[SP, #+4]
   \   000001E8   0A00A0E3           MOV      R0,#+10
   \   000001EC   00008DE5           STR      R0,[SP, #+0]
   \   000001F0   ........           LDR      R2,??DataTable210
   \   000001F4   0310A0E3           MOV      R1,#+3
   \   000001F8   ............       ADRL     R0,FormattingCompleteResources
   \              ....        
   \                     ??SystemSettingsPopUp_18:
   \   00000200   ........           BL       GUI_ExecDialogBox
   \   00000204   0050A0E1           MOV      R5,R0
   \   00000208   AAFFFFEA           B        ??SystemSettingsPopUp_1
   \                     ??SystemSettingsPopUp_11:
   \   0000020C   0200A0E3           MOV      R0,#+2
   \   00000210   ........           BL       SetPopupDefaults
   \   00000214   08009DE5           LDR      R0,[SP, #+8]
   \   00000218   0430A0E1           MOV      R3,R4
   \   0000021C   0A0080E2           ADD      R0,R0,#+10
   \   00000220   04008DE5           STR      R0,[SP, #+4]
   \   00000224   0A00A0E3           MOV      R0,#+10
   \   00000228   00008DE5           STR      R0,[SP, #+0]
   \   0000022C   ........           LDR      R2,??DataTable210
   \   00000230   0310A0E3           MOV      R1,#+3
   \   00000234   ............       ADRL     R0,FormattingFailedResources
   \              ....        
   \   0000023C   EFFFFFEA           B        ??SystemSettingsPopUp_18
   \                     ??SystemSettingsPopUp_5:
   \   00000240   0000A0E3           MOV      R0,#+0
   \   00000244   ........           BL       SetPopupDefaults
   \   00000248   08009DE5           LDR      R0,[SP, #+8]
   \   0000024C   0430A0E1           MOV      R3,R4
   \   00000250   0A0080E2           ADD      R0,R0,#+10
   \   00000254   04008DE5           STR      R0,[SP, #+4]
   \   00000258   0A00A0E3           MOV      R0,#+10
   \   0000025C   00008DE5           STR      R0,[SP, #+0]
   \   00000260   ........           LDR      R2,??DataTable210
   \   00000264   0310A0E3           MOV      R1,#+3
   \   00000268   ............       ADRL     R0,AllSessionsErasedResources
   \              ....        
   \                     ??SystemSettingsPopUp_19:
   \   00000270   ........           BL       GUI_CreateDialogBox
   \   00000274   92FFFFEA           B        ??SystemSettingsPopUp_17
   \                     ??SystemSettingsPopUp_6:
   \   00000278   0000A0E3           MOV      R0,#+0
   \   0000027C   ........           BL       SetPopupDefaults
   \   00000280   08009DE5           LDR      R0,[SP, #+8]
   \   00000284   0430A0E1           MOV      R3,R4
   \   00000288   0A0080E2           ADD      R0,R0,#+10
   \   0000028C   04008DE5           STR      R0,[SP, #+4]
   \   00000290   0A00A0E3           MOV      R0,#+10
   \   00000294   00008DE5           STR      R0,[SP, #+0]
   \   00000298   ........           LDR      R2,??DataTable210
   \   0000029C   0310A0E3           MOV      R1,#+3
   \   000002A0   ............       ADRL     R0,FactoryDefaultsRestoredResources
   \              ....        
   \   000002A8   F0FFFFEA           B        ??SystemSettingsPopUp_19
   \                     ??SystemSettingsPopUp_7:
   \   000002AC   0000A0E3           MOV      R0,#+0
   \   000002B0   ........           BL       SetPopupDefaults
   \   000002B4   08009DE5           LDR      R0,[SP, #+8]
   \   000002B8   0430A0E1           MOV      R3,R4
   \   000002BC   0A0080E2           ADD      R0,R0,#+10
   \   000002C0   04008DE5           STR      R0,[SP, #+4]
   \   000002C4   0A00A0E3           MOV      R0,#+10
   \   000002C8   00008DE5           STR      R0,[SP, #+0]
   \   000002CC   ........           LDR      R2,??DataTable210
   \   000002D0   0310A0E3           MOV      R1,#+3
   \   000002D4   ............       ADRL     R0,FormattingSDResources
   \              ....        
   \   000002DC   E3FFFFEA           B        ??SystemSettingsPopUp_19
   \                     ??SystemSettingsPopUp_10:
   \   000002E0   0000A0E3           MOV      R0,#+0
   \   000002E4   ........           BL       SetPopupDefaults
   \   000002E8   08009DE5           LDR      R0,[SP, #+8]
   \   000002EC   0430A0E1           MOV      R3,R4
   \   000002F0   0A0080E2           ADD      R0,R0,#+10
   \   000002F4   04008DE5           STR      R0,[SP, #+4]
   \   000002F8   0A00A0E3           MOV      R0,#+10
   \   000002FC   00008DE5           STR      R0,[SP, #+0]
   \   00000300   ........           LDR      R2,??DataTable210
   \   00000304   0210A0E3           MOV      R1,#+2
   \   00000308   ............       ADRL     R0,RealFormattingSDResources
   \              ....        
   \   00000310   D6FFFFEA           B        ??SystemSettingsPopUp_19
   \                     ??SystemSettingsPopUp_12:
   \   00000314   0000A0E3           MOV      R0,#+0
   \   00000318   ........           BL       SetPopupDefaults
   \   0000031C   08009DE5           LDR      R0,[SP, #+8]
   \   00000320   0430A0E1           MOV      R3,R4
   \   00000324   0A0080E2           ADD      R0,R0,#+10
   \   00000328   04008DE5           STR      R0,[SP, #+4]
   \   0000032C   0A00A0E3           MOV      R0,#+10
   \   00000330   00008DE5           STR      R0,[SP, #+0]
   \   00000334   ........           LDR      R2,??DataTable210
   \   00000338   0210A0E3           MOV      R1,#+2
   \   0000033C   ............       ADRL     R0,ErasingSessionsResources
   \              ....        
   \   00000344   C9FFFFEA           B        ??SystemSettingsPopUp_19
   \                     ??SystemSettingsPopUp_14:
   \   00000348   0000A0E3           MOV      R0,#+0
   \   0000034C   ........           BL       SetPopupDefaults
   \   00000350   08009DE5           LDR      R0,[SP, #+8]
   \   00000354   0430A0E1           MOV      R3,R4
   \   00000358   0A0080E2           ADD      R0,R0,#+10
   \   0000035C   04008DE5           STR      R0,[SP, #+4]
   \   00000360   0A00A0E3           MOV      R0,#+10
   \   00000364   00008DE5           STR      R0,[SP, #+0]
   \   00000368   ........           LDR      R2,??DataTable210
   \   0000036C   0310A0E3           MOV      R1,#+3
   \   00000370   ............       ADRL     R0,LoadingSessionsResources
   \              ....        
   \   00000378   BCFFFFEA           B        ??SystemSettingsPopUp_19
   1554          }
   1555          

   \                                 In section .text, align 4, keep-with-next
   1556          void DeleteSystemSettingsPopUp(WM_HWIN hDialog)
   1557          {
   \                     DeleteSystemSettingsPopUp:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1558          	WM_DeleteWindow(hDialog);
   \   00000008   ........           BL       WM_DeleteWindow
   1559          	modalWindowUp = false;
   \   0000000C   ........           LDR      R0,??DataTable207_15
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   041080E5           STR      R1,[R0, #+4]
   1560          }
   \   00000018   04D08DE2           ADD      SP,SP,#+4
   \   0000001C   0080BDE8           POP      {PC}             ;; return
   1561          

   \                                 In section .text, align 4, keep-with-next
   1562          void nonModalPopupCallback(WM_MESSAGE * pMsg)
   1563          {
   \                     nonModalPopupCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   1564             WM_HWIN hDlg;
   1565          	int NCode, Id;
   1566          
   1567             hDlg = pMsg->hWin;
   1568          
   1569          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   044095E5           LDR      R4,[R5, #+4]
   \   00000014   0B0050E2           SUBS     R0,R0,#+11
   \   00000018   0F00000A           BEQ      ??nonModalPopupCallback_0
   \   0000001C   120050E2           SUBS     R0,R0,#+18
   \   00000020   0200000A           BEQ      ??nonModalPopupCallback_1
   \   00000024   090050E2           SUBS     R0,R0,#+9
   \   00000028   0E00000A           BEQ      ??nonModalPopupCallback_2
   \   0000002C   1D0000EA           B        ??nonModalPopupCallback_3
   1570          	{
   1571          		case WM_INIT_DIALOG:
   1572          			FRAMEWIN_SetTextAlign(hDlg, GUI_TA_HCENTER);
   \                     ??nonModalPopupCallback_1:
   \   00000030   0210A0E3           MOV      R1,#+2
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       FRAMEWIN_SetTextAlign
   1573          			FRAMEWIN_SetTextColor(hDlg, popupTitleTextColor);
   \   0000003C   ........           LDR      R0,??DataTable211_2
   \   00000040   001090E5           LDR      R1,[R0, #+0]
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       FRAMEWIN_SetTextColor
   1574          			PauseScreenScrolling();
   \   0000004C   ........           LDR      R0,??DataTable211_4
   \   00000050   0010A0E3           MOV      R1,#+0
   \                     ??nonModalPopupCallback_4:
   \   00000054   001080E5           STR      R1,[R0, #+0]
   1575          			break;
   \   00000058   140000EA           B        ??nonModalPopupCallback_5
   1576          
   1577          		case WM_DELETE:
   1578          			ResumeScreenScrolling();
   \                     ??nonModalPopupCallback_0:
   \   0000005C   ........           LDR      R0,??DataTable211_4
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   FAFFFFEA           B        ??nonModalPopupCallback_4
   1579          			break;
   1580          
   1581          		case WM_NOTIFY_PARENT:
   1582          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??nonModalPopupCallback_2:
   \   00000068   080095E5           LDR      R0,[R5, #+8]
   \   0000006C   ........           BL       WM_GetId
   1583          			NCode = pMsg->Data.v;				// Notification code
   1584          			switch (NCode)
   \   00000070   0C1095E5           LDR      R1,[R5, #+12]
   \   00000074   020051E3           CMP      R1,#+2
   1585          			{
   1586          				case WM_NOTIFICATION_RELEASED:
   1587          					switch (Id)
   \   00000078   01005003           CMPEQ    R0,#+1
   \   0000007C   0B00001A           BNE      ??nonModalPopupCallback_5
   1588          					{
   1589          						case GUI_ID_OK:
   1590          							modalWindowUp = false;
   \   00000080   ........           LDR      R1,??DataTable207_15
   \   00000084   0020A0E3           MOV      R2,#+0
   \   00000088   042081E5           STR      R2,[R1, #+4]
   1591          							ResumeScreenScrolling();
   \   0000008C   ........           LDR      R1,??DataTable211_4
   \   00000090   0120A0E3           MOV      R2,#+1
   \   00000094   002081E5           STR      R2,[R1, #+0]
   1592          							GUI_EndDialog(hDlg, Id);
   \   00000098   0110A0E3           MOV      R1,#+1
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       GUI_EndDialog
   1593          							break;
   \   000000A4   010000EA           B        ??nonModalPopupCallback_5
   1594          					}
   1595          					break;
   1596          			}
   1597          			break;
   1598          
   1599          		default:
   1600          			WM_DefaultProc(pMsg);
   \                     ??nonModalPopupCallback_3:
   \   000000A8   0500A0E1           MOV      R0,R5
   \   000000AC   ........           BL       WM_DefaultProc
   1601          	}
   1602          }
   \                     ??nonModalPopupCallback_5:
   \   000000B0   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000B4   3080BDE8           POP      {R4,R5,PC}       ;; return
   1603          

   \                                 In section .text, align 4, keep-with-next
   1604          void FormatSDCard(WM_HWIN hWin)
   1605          {
   \                     FormatSDCard:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1606          	WM_HWIN hDialog;
   1607          
   1608          	ForceSDBusy(hWin);					// Set the SD card busy indication - will be cleared automatically when all writing is complete
   \   00000008   ........           BL       ForceSDBusy
   1609          
   1610          	hDialog = SystemSettingsPopUp(REAL_FORMATTING_SDCARD, hWin);
   \   0000000C   0410A0E1           MOV      R1,R4
   \   00000010   0A00A0E3           MOV      R0,#+10
   \   00000014   ........           BL       SystemSettingsPopUp
   \   00000018   0050A0E1           MOV      R5,R0
   1611          	GUI_Exec();
   \   0000001C   ........           BL       GUI_Exec
   1612          
   1613          #ifndef _WINDOWS
   1614          	FS_CACHE_Clean("");
   \   00000020   ........           ADR      R6,??DataTable205  ;; ""
   \   00000024   0600A0E1           MOV      R0,R6
   \   00000028   ........           BL       FS_CACHE_Clean
   1615          	FS_Sync("");
   \   0000002C   0600A0E1           MOV      R0,R6
   \   00000030   ........           BL       FS_Sync
   1616          	FS_AssignCache("", NULL, 0, 0);		// Disable cache
   \   00000034   0030A0E3           MOV      R3,#+0
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   ........           BL       FS_AssignCache
   1617          	
   1618          	if (FS_FormatSD("") != 0)		// Format using default parameters
   \   00000048   0600A0E1           MOV      R0,R6
   \   0000004C   ........           BL       FS_FormatSD
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0400000A           BEQ      ??FormatSDCard_0
   1619          	{
   1620          		WM_DeleteWindow(hDialog);
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       WM_DeleteWindow
   1621          		SystemSettingsPopUp(FORMATTING_FAILED, hWin);
   \   00000060   0410A0E1           MOV      R1,R4
   \   00000064   0B00A0E3           MOV      R0,#+11
   \   00000068   060000EA           B        ??FormatSDCard_1
   1622          		return;
   1623          	}
   1624          	ConfigureCache();				// Turn cache back on
   \                     ??FormatSDCard_0:
   \   0000006C   ........           BL       ConfigureCache
   1625          #endif
   1626          	
   1627          	RestoreFactoryDefaults(hWin);
   \   00000070   0400A0E1           MOV      R0,R4
   \   00000074   ........           BL       RestoreFactoryDefaults
   1628          	
   1629          	WM_DeleteWindow(hDialog);
   \   00000078   0500A0E1           MOV      R0,R5
   \   0000007C   ........           BL       WM_DeleteWindow
   1630          	SystemSettingsPopUp(FORMATTING_COMPLETE, hWin);
   \   00000080   0410A0E1           MOV      R1,R4
   \   00000084   0900A0E3           MOV      R0,#+9
   \                     ??FormatSDCard_1:
   \   00000088   7040BDE8           POP      {R4-R6,LR}
   \   0000008C   ........           B        SystemSettingsPopUp  ;; tailcall
   1631          }
   1632          

   \                                 In section .text, align 4, keep-with-next
   1633          void RestoreFactoryDefaults(WM_HWIN hWin)
   1634          {
   \                     RestoreFactoryDefaults:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   1635          	ForceSDBusy(hWin);					// Set the SD card busy indication - will be cleared automatically when all writing is complete
   \   00000008   ........           BL       ForceSDBusy
   1636          
   1637          	// Be sure directory structure is there (in case someone just stuck in a
   1638          	// new card and we haven't built the directory structure yet).
   1639          	InitializeDirectoryStructure();
   \   0000000C   ........           BL       InitializeDirectoryStructure
   1640          
   1641          	// Delete all old files (if any)
   1642          	DeleteAllFiles(DRIVER_DATA);
   \   00000010   0300A0E3           MOV      R0,#+3
   \   00000014   ........           BL       DeleteAllFiles
   1643          	DeleteAllFiles(VEHICLE_DATA);
   \   00000018   0200A0E3           MOV      R0,#+2
   \   0000001C   ........           BL       DeleteAllFiles
   1644          	DeleteAllFiles(TRACK_DATA);
   \   00000020   0100A0E3           MOV      R0,#+1
   \   00000024   ........           BL       DeleteAllFiles
   1645          	DeleteAllFiles(SESSION_DATA);
   \   00000028   0400A0E3           MOV      R0,#+4
   \   0000002C   ........           BL       DeleteAllFiles
   1646          
   1647          	InitializeData();					// Reset all selections back to factory selections
   \   00000030   ........           BL       InitializeData
   1648          	ReloadData(VEHICLE_DATA);			// Reset default values for the default driver/vehicle/track
   \   00000034   0200A0E3           MOV      R0,#+2
   \   00000038   ........           BL       ReloadData
   1649          	ReloadData(TRACK_DATA);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   ........           BL       ReloadData
   1650          	ReloadData(DRIVER_DATA);
   \   00000044   0300A0E3           MOV      R0,#+3
   \   00000048   ........           BL       ReloadData
   1651          
   1652          	WriteUserDataEvent(SYSTEM_DATA);	// Use SYNCHRONOUS calls to save data so we know they are all comlpeted before calling
   \   0000004C   0000A0E3           MOV      R0,#+0
   \   00000050   ........           BL       WriteUserDataEvent
   1653          	WriteUserDataEvent(VEHICLE_DATA);	// FS_Sync to be sure they all made it to the disk (in case the user fulls the card without
   \   00000054   0200A0E3           MOV      R0,#+2
   \   00000058   ........           BL       WriteUserDataEvent
   1654          	WriteUserDataEvent(DRIVER_DATA);	// doing a controlled power down).
   \   0000005C   0300A0E3           MOV      R0,#+3
   \   00000060   ........           BL       WriteUserDataEvent
   1655          
   1656          	// Create default drivers, vehicles and tracks (beyond the standard Road Atlanta, Driver A, Spec Miata)
   1657          	CreateAllFiles(DRIVER_DATA);
   \   00000064   0300A0E3           MOV      R0,#+3
   \   00000068   ........           BL       CreateAllFiles
   1658          
   1659          	// Initialize all secondary (beyond the Miata) vehicles and write their files
   1660          	CreateAllFiles(VEHICLE_DATA);
   \   0000006C   0200A0E3           MOV      R0,#+2
   \   00000070   ........           BL       CreateAllFiles
   1661          
   1662          	GUI_Exec();							// Let SD card data get written before attempting to read for file lists
   \   00000074   ........           BL       GUI_Exec
   1663          	
   1664          	// Reset all lists and tables
   1665          	ResetAllFileLists(true);
   \   00000078   0100A0E3           MOV      R0,#+1
   \   0000007C   ........           BL       ResetAllFileLists
   1666          	ClearNameStruct();					// Erase session notes line (used on Race Review screen)
   \   00000080   ........           LDR      R0,??DataTable211_7
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   0A10C0E5           STRB     R1,[R0, #+10]
   \   0000008C   3710C0E5           STRB     R1,[R0, #+55]
   \   00000090   0010C0E5           STRB     R1,[R0, #+0]
   \   00000094   1510C0E5           STRB     R1,[R0, #+21]
   \   00000098   2610C0E5           STRB     R1,[R0, #+38]
   \   0000009C   4A10C0E5           STRB     R1,[R0, #+74]
   \   000000A0   4810C0E5           STRB     R1,[R0, #+72]
   1667          
   1668          #ifndef _WINDOWS
   1669          	FS_Sync("");						// Be sure all new settings are written to SD card
   \   000000A4   04D08DE2           ADD      SP,SP,#+4
   \   000000A8   0040BDE8           POP      {LR}
   \   000000AC   ........           ADR      R0,??DataTable205  ;; ""
   \   000000B0   ........           B        FS_Sync          ;; tailcall
   1670          #endif
   1671          }
   1672          
   1673          

   \                                 In section .text, align 4, keep-with-next
   1674          void EraseAllSessions(void)
   1675          {
   \                     EraseAllSessions:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1676          	WM_HWIN hDialog;
   1677          	char fileName[MAX_FILENAME_SIZE];
   1678          #ifndef _WINDOWS
   1679          	char fullFileName[MAX_FILENAME_SIZE];
   1680          	FS_FIND_DATA fd;
   1681          #else
   1682          	DIR *dir;
   1683          	struct dirent *ent;
   1684          #endif
   1685          
   1686          	ForceSDBusy(hSystemSettingsScreens);	// Set the SD card busy indication - will be cleared automatically when all writing is complete
   \   00000004   ........           LDR      R4,??DataTable207_14
   \   00000008   5CDF4DE2           SUB      SP,SP,#+368
   \   0000000C   640094E5           LDR      R0,[R4, #+100]
   \   00000010   ........           BL       ForceSDBusy
   1687          
   1688          	hDialog = SystemSettingsPopUp(ERASING_SESSIONS, hSystemSettingsScreens);
   \   00000014   641094E5           LDR      R1,[R4, #+100]
   \   00000018   0C00A0E3           MOV      R0,#+12
   \   0000001C   ........           BL       SystemSettingsPopUp
   \   00000020   0050A0E1           MOV      R5,R0
   1689          	GUI_Exec();
   \   00000024   ........           BL       GUI_Exec
   1690          
   1691          #ifndef _WINDOWS
   1692          	if (FS_FindFirstFile(&fd, MY_SESSIONS_PATH, fileName, MAX_FILENAME_SIZE) == 0)
   \   00000028   ........           LDR      R6,??DataTable211_8
   \   0000002C   9630A0E3           MOV      R3,#+150
   \   00000030   D4208DE2           ADD      R2,SP,#+212
   \   00000034   0610A0E1           MOV      R1,R6
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           BL       FS_FindFirstFile
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   1B00001A           BNE      ??EraseAllSessions_0
   1693          	{
   1694          		do {
   1695          			if (ValidSessionFileName(fileName))		// KMC ?  Shouldn't this be fd->something
   \                     ??EraseAllSessions_1:
   \   00000048   D4008DE2           ADD      R0,SP,#+212
   \                     ??EraseAllSessions_2:
   \   0000004C   0110D0E4           LDRB     R1,[R0], #+1
   \   00000050   2E0051E3           CMP      R1,#+46
   \   00000054   00005113           CMPNE    R1,#+0
   \   00000058   FBFFFF1A           BNE      ??EraseAllSessions_2
   \   0000005C   2E0051E3           CMP      R1,#+46
   \   00000060   0010D005           LDRBEQ   R1,[R0, #+0]
   \   00000064   74005103           CMPEQ    R1,#+116
   \   00000068   0110D005           LDRBEQ   R1,[R0, #+1]
   \   0000006C   71005103           CMPEQ    R1,#+113
   \   00000070   0200D005           LDRBEQ   R0,[R0, #+2]
   \   00000074   6D005003           CMPEQ    R0,#+109
   \   00000078   0A00001A           BNE      ??EraseAllSessions_3
   1696          			{
   1697          				// Prepend directoy name
   1698          				strcpy(fullFileName, MY_SESSIONS_PATH);
   \   0000007C   0610A0E1           MOV      R1,R6
   \   00000080   3C008DE2           ADD      R0,SP,#+60
   \   00000084   ........           BL       strcpy
   1699          				strcat(fullFileName, "\\");
   \   00000088   ........           ADR      R1,??DataTable207  ;; "\\"
   \   0000008C   3C008DE2           ADD      R0,SP,#+60
   \   00000090   ........           BL       strcat
   1700          				strcat(fullFileName, fileName);
   \   00000094   D4108DE2           ADD      R1,SP,#+212
   \   00000098   3C008DE2           ADD      R0,SP,#+60
   \   0000009C   ........           BL       strcat
   1701          				FS_Remove(fullFileName);
   \   000000A0   3C008DE2           ADD      R0,SP,#+60
   \   000000A4   ........           BL       FS_Remove
   1702          			}
   1703          		} while (FS_FindNextFile (&fd));
   \                     ??EraseAllSessions_3:
   \   000000A8   0D00A0E1           MOV      R0,SP
   \   000000AC   ........           BL       FS_FindNextFile
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   E3FFFF1A           BNE      ??EraseAllSessions_1
   1704          	}
   1705          	FS_FindClose(&fd);
   \                     ??EraseAllSessions_0:
   \   000000B8   0D00A0E1           MOV      R0,SP
   \   000000BC   ........           BL       FS_FindClose
   1706          #else
   1707          	dir = opendir(MY_SESSIONS_PATH);
   1708          	if (dir != NULL)
   1709          	{
   1710          		/* print all the files and directories within directory */
   1711          		while ((ent = readdir(dir)) != NULL)
   1712          		{
   1713          			if (ValidSessionFileName(ent->d_name))
   1714          			{
   1715          				strcpy(fileName, MY_SESSIONS_PATH);
   1716          				strcat(fileName, "\\");
   1717          				strcat(fileName, ent->d_name);
   1718          				remove(fileName);
   1719          			}
   1720          		}
   1721          		closedir(dir);
   1722          	}
   1723          #endif
   1724          
   1725          	ClearNameStruct();
   \   000000C0   ........           LDR      R0,??DataTable211_7
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   0A10C0E5           STRB     R1,[R0, #+10]
   \   000000CC   3710C0E5           STRB     R1,[R0, #+55]
   \   000000D0   0010C0E5           STRB     R1,[R0, #+0]
   \   000000D4   1510C0E5           STRB     R1,[R0, #+21]
   \   000000D8   2610C0E5           STRB     R1,[R0, #+38]
   \   000000DC   4A10C0E5           STRB     R1,[R0, #+74]
   \   000000E0   4810C0E5           STRB     R1,[R0, #+72]
   1726          	CreateFileList(SESSION_DATA);	// Update the sessions file list and BestLap list(to nothing)
   \   000000E4   0400A0E3           MOV      R0,#+4
   \   000000E8   ........           BL       CreateFileList
   1727          
   1728          	WM_DeleteWindow(hDialog);
   \   000000EC   0500A0E1           MOV      R0,R5
   \   000000F0   ........           BL       WM_DeleteWindow
   1729          	SystemSettingsPopUp(ALL_SESSIONS_ERASED, hSystemSettingsScreens);
   \   000000F4   641094E5           LDR      R1,[R4, #+100]
   \   000000F8   0400A0E3           MOV      R0,#+4
   \   000000FC   ........           BL       SystemSettingsPopUp
   1730          }
   \   00000100   5CDF8DE2           ADD      SP,SP,#+368      ;; stack cleaning
   \   00000104   7080BDE8           POP      {R4-R6,PC}       ;; return
   1731          

   \                                 In section .text, align 4, keep-with-next
   1732          void ClearNameStruct(void)
   1733          {
   1734          	NameStruct.date[0] = 0;
   \                     ClearNameStruct:
   \   00000000   ........           LDR      R0,??DataTable211_7
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0A10C0E5           STRB     R1,[R0, #+10]
   1735          	NameStruct.driver[0] = 0;
   \   0000000C   3710C0E5           STRB     R1,[R0, #+55]
   1736          	NameStruct.time[0] = 0;
   \   00000010   0010C0E5           STRB     R1,[R0, #+0]
   1737          	NameStruct.track[0] = 0;
   \   00000014   1510C0E5           STRB     R1,[R0, #+21]
   1738          	NameStruct.vehicle[0] = 0;
   \   00000018   2610C0E5           STRB     R1,[R0, #+38]
   1739          	NameStruct.sessionNumber = 0;
   \   0000001C   4A10C0E5           STRB     R1,[R0, #+74]
   1740          	NameStruct.sessionType = NOT_VALID;
   \   00000020   4810C0E5           STRB     R1,[R0, #+72]
   1741          }
   \   00000024   1EFF2FE1           BX       LR               ;; return
   1742          
   1743          //
   1744          // Make sure this is a valid file name ending in ".tqm"
   1745          //

   \                                 In section .text, align 4, keep-with-next
   1746          char ValidSessionFileName(char *pName)
   1747          {
   1748          	char ch;
   1749          
   1750          	// get to file extension
   1751          	while (((ch = *pName++) != '.') && (ch != '\0'))
   \                     ValidSessionFileName:
   \                     ??ValidSessionFileName_0:
   \   00000000   0110D0E4           LDRB     R1,[R0], #+1
   \   00000004   2E0051E3           CMP      R1,#+46
   \   00000008   00005113           CMPNE    R1,#+0
   \   0000000C   FBFFFF1A           BNE      ??ValidSessionFileName_0
   1752          		;
   1753          
   1754          	if ((ch == '.') && (*pName == 't') && (*(pName + 1) == 'q') && (*(pName + 2) == 'm'))
   \   00000010   2E0051E3           CMP      R1,#+46
   \   00000014   0010D005           LDRBEQ   R1,[R0, #+0]
   \   00000018   74005103           CMPEQ    R1,#+116
   \   0000001C   0110D005           LDRBEQ   R1,[R0, #+1]
   \   00000020   71005103           CMPEQ    R1,#+113
   \   00000024   0200D005           LDRBEQ   R0,[R0, #+2]
   \   00000028   6D005003           CMPEQ    R0,#+109
   \   0000002C   0100001A           BNE      ??ValidSessionFileName_1
   1755          		return true;
   \   00000030   0100A0E3           MOV      R0,#+1
   \   00000034   1EFF2FE1           BX       LR
   1756          	else return false;
   \                     ??ValidSessionFileName_1:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   1757          }
   1758          
   1759          

   \                                 In section .text, align 4, keep-with-next
   1760          void PersonalizationCB(WM_MESSAGE * pMsg)
   1761          {
   \                     PersonalizationCB:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1762          	int NCode, Id;
   1763          
   1764          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   38D04DE2           SUB      SP,SP,#+56
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   6A00000A           BEQ      ??PersonalizationCB_2
   \   00000018   0E0050E2           SUBS     R0,R0,#+14
   \   0000001C   1B00000A           BEQ      ??PersonalizationCB_3
   \   00000020   170050E2           SUBS     R0,R0,#+23
   \   00000024   2700000A           BEQ      ??PersonalizationCB_4
   \   00000028   ED0050E2           SUBS     R0,R0,#+237
   \   0000002C   6200001A           BNE      ??PersonalizationCB_5
   1765          	{
   1766          		case WM_TIMER:
   1767          			if (pMsg->Data.v == hScreenTimer)
   \   00000030   ........           LDR      R0,??DataTable211_10
   \   00000034   0C1094E5           LDR      R1,[R4, #+12]
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   5F00001A           BNE      ??PersonalizationCB_2
   1768          			{
   1769          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000044   7D10A0E3           MOV      R1,#+125
   \   00000048   ........           BL       WM_RestartTimer
   1770          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   0000004C   ........           LDR      R1,??DataTable211_11
   \   00000050   040094E5           LDR      R0,[R4, #+4]
   \   00000054   ........           BL       WM_InvalidateRect
   1771          
   1772          				SetCurrentTempButtonText();
   \   00000058   ........           LDR      R4,??DataTable207_14
   \   0000005C   8C0094E5           LDR      R0,[R4, #+140]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   5600000A           BEQ      ??PersonalizationCB_2
   \   00000068   0500A0E3           MOV      R0,#+5
   \   0000006C   ........           BL       GetADC
   \   00000070   0020A0E1           MOV      R2,R0
   \   00000074   ........           ADR      R1,??DataTable207_1  ;; 0x25, 0x64, 0x00, 0x00
   \   00000078   0D00A0E1           MOV      R0,SP
   \   0000007C   ........           BL       sprintf
   \   00000080   0D10A0E1           MOV      R1,SP
   \   00000084   8C0094E5           LDR      R0,[R4, #+140]
   \   00000088   ........           BL       BUTTON_SetText
   \   0000008C   4C0000EA           B        ??PersonalizationCB_2
   1773          			}
   1774          			break;
   1775          
   1776          		case WM_CREATE:
   1777          			break;
   1778          
   1779          		case WM_PAINT:
   1780          			GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \                     ??PersonalizationCB_3:
   \   00000090   0020A0E3           MOV      R2,#+0
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   ........           LDR      R0,??DataTable211_12
   \   0000009C   ........           BL       GUI_DrawBitmap
   1781          			GUI_DrawBitmap(&bmPersonalizeText, 60, 0);
   \   000000A0   0020A0E3           MOV      R2,#+0
   \   000000A4   3C10A0E3           MOV      R1,#+60
   \   000000A8   ........           LDR      R0,??DataTable211_13
   \   000000AC   ........           BL       GUI_DrawBitmap
   1782          			GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   000000B0   E520A0E3           MOV      R2,#+229
   \   000000B4   0010A0E3           MOV      R1,#+0
   \   000000B8   ........           LDR      R0,??DataTable207_9
   \   000000BC   ........           BL       GUI_DrawBitmap
   1783          			DrawSignalStrength();
   \   000000C0   ........           BL       DrawSignalStrength
   1784          			break;
   \   000000C4   3E0000EA           B        ??PersonalizationCB_2
   1785          
   1786          		case WM_NOTIFY_PARENT:
   1787          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??PersonalizationCB_4:
   \   000000C8   080094E5           LDR      R0,[R4, #+8]
   \   000000CC   ........           BL       WM_GetId
   1788          			NCode = pMsg->Data.v;				// Notification code
   1789          			switch (NCode)
   \   000000D0   0C1094E5           LDR      R1,[R4, #+12]
   \   000000D4   020051E3           CMP      R1,#+2
   \   000000D8   3900001A           BNE      ??PersonalizationCB_2
   1790          			{
   1791          				case WM_NOTIFICATION_RELEASED:
   1792          					switch (Id)
   \   000000DC   111040E2           SUB      R1,R0,#+17
   \   000000E0   801E41E2           SUB      R1,R1,#+2048
   \   000000E4   070051E3           CMP      R1,#+7
   \   000000E8   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??PersonalizationCB_0:
   \   000000EC   3400008A           BHI      ??PersonalizationCB_2
   \   000000F0   0C0000EA           B        ??PersonalizationCB_6
   \   000000F4   0B0000EA           B        ??PersonalizationCB_6
   \   000000F8   040000EA           B        ??PersonalizationCB_7
   \   000000FC   030000EA           B        ??PersonalizationCB_7
   \   00000100   080000EA           B        ??PersonalizationCB_6
   \   00000104   070000EA           B        ??PersonalizationCB_6
   \   00000108   060000EA           B        ??PersonalizationCB_6
   \   0000010C   210000EA           B        ??PersonalizationCB_8
   1793          					{
   1794          						case WIFI_NAME_BUTTON:
   1795          						case WIFI_PASSWORD_BUTTON:
   1796          							if (!(unsavedSysData.wifiEnabled && unsavedSysData.wifiCardInserted))
   \                     ??PersonalizationCB_7:
   \   00000110   ........           LDR      R1,??DataTable211_14
   \   00000114   D02091E5           LDR      R2,[R1, #+208]
   \   00000118   000052E3           CMP      R2,#+0
   \   0000011C   CC109115           LDRNE    R1,[R1, #+204]
   \   00000120   00005113           CMPNE    R1,#+0
   \   00000124   2600000A           BEQ      ??PersonalizationCB_2
   1797          								break;
   1798          							// else fall through
   1799          
   1800          						case OWNER_BUTTON:
   1801          						case CONTACTINFO_BUTTON:
   1802          						case SERIALNUMBER_BUTTON:
   1803          						case BUILDDATE_BUTTON:
   1804          						case TEMP_BUTTON:
   1805          							DisplayNewKeyboardScreen(SSSButtonToScreenID(Id), hPersonalizationScreen);
   \                     ??PersonalizationCB_6:
   \   00000128   120040E2           SUB      R0,R0,#+18
   \   0000012C   800E40E2           SUB      R0,R0,#+2048
   \   00000130   050050E3           CMP      R0,#+5
   \   00000134   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??PersonalizationCB_1:
   \   00000138   1100008A           BHI      ??PersonalizationCB_9
   \   0000013C   0E0000EA           B        ??PersonalizationCB_10
   \   00000140   0B0000EA           B        ??PersonalizationCB_11
   \   00000144   080000EA           B        ??PersonalizationCB_12
   \   00000148   050000EA           B        ??PersonalizationCB_13
   \   0000014C   020000EA           B        ??PersonalizationCB_14
   \   00000150   FFFFFFEA           B        ??PersonalizationCB_15
   \                     ??PersonalizationCB_15:
   \   00000154   0600A0E3           MOV      R0,#+6
   \   00000158   0A0000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_14:
   \   0000015C   0500A0E3           MOV      R0,#+5
   \   00000160   080000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_13:
   \   00000164   0400A0E3           MOV      R0,#+4
   \   00000168   060000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_12:
   \   0000016C   0300A0E3           MOV      R0,#+3
   \   00000170   040000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_11:
   \   00000174   0200A0E3           MOV      R0,#+2
   \   00000178   020000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_10:
   \   0000017C   0100A0E3           MOV      R0,#+1
   \   00000180   000000EA           B        ??PersonalizationCB_16
   \                     ??PersonalizationCB_9:
   \   00000184   0000A0E3           MOV      R0,#+0
   \                     ??PersonalizationCB_16:
   \   00000188   ........           LDR      R1,??DataTable207_14
   \   0000018C   601091E5           LDR      R1,[R1, #+96]
   \   00000190   ........           BL       DisplayNewKeyboardScreen
   1806          							break;
   \   00000194   0A0000EA           B        ??PersonalizationCB_2
   1807          						case READING_BUTTON:
   1808          #ifdef _WINDOWS
   1809          							// Function not supported on the PC - do not alter value
   1810          							// But allow the update to progress to save the temperature selection
   1811          							sysData.calibrationTempReading = temptemp;
   1812          #else
   1813          							sysData.calibrationTempReading = GetADC(ADC_LED_BOARD_TEMP);
   \                     ??PersonalizationCB_8:
   \   00000198   ........           LDR      R4,??DataTable211_15
   \   0000019C   0500A0E3           MOV      R0,#+5
   \   000001A0   ........           BL       GetADC
   \   000001A4   DC0084E5           STR      R0,[R4, #+220]
   1814          							sysData.LEDtempOffset = CalculateTempCorrection();
   \   000001A8   ........           BL       CalculateTempCorrection
   \   000001AC   E00084E5           STR      R0,[R4, #+224]
   1815          #endif
   1816          							WriteUserDataEvent(SYSTEM_DATA);		// Record new settings and save to disk immediately (in case factory personnel does not exit the screen)
   \   000001B0   0000A0E3           MOV      R0,#+0
   \   000001B4   ........           BL       WriteUserDataEvent
   1817          							break;
   \   000001B8   010000EA           B        ??PersonalizationCB_2
   1818          					}
   1819          			}
   1820          			break;
   1821          
   1822          		default:
   1823          			WM_DefaultProc(pMsg);
   \                     ??PersonalizationCB_5:
   \   000001BC   0400A0E1           MOV      R0,R4
   \   000001C0   ........           BL       WM_DefaultProc
   1824          	}
   1825          }
   \                     ??PersonalizationCB_2:
   \   000001C4   38D08DE2           ADD      SP,SP,#+56       ;; stack cleaning
   \   000001C8   1080BDE8           POP      {R4,PC}          ;; return
   1826          
   1827          

   \                                 In section .text, align 4, keep-with-next
   1828          void DisplayPersonalizationScreen(WM_HWIN hPrev)
   1829          {
   \                     DisplayPersonalizationScreen:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1830          	// Save initial values for comparison testing at screen exit
   1831          	strcpy(initialName, unsavedSysData.unitInfo.wifiName);
   \   00000004   ........           LDR      R5,??DataTable207_14
   \   00000008   ........           LDR      R6,??DataTable211_14
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   301086E2           ADD      R1,R6,#+48
   \   00000014   5A0F85E2           ADD      R0,R5,#+360
   \   00000018   ........           BL       strcpy
   1832          	strcpy(initialPass, unsavedSysData.unitInfo.wifiPass);
   \   0000001C   441086E2           ADD      R1,R6,#+68
   \   00000020   5F0F85E2           ADD      R0,R5,#+380
   \   00000024   ........           BL       strcpy
   1833          	ReturnToPersonalizationScreen(hPrev);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   7040BDE8           POP      {R4-R6,LR}
   \   00000030   ........           B        ReturnToPersonalizationScreen  ;; tailcall
   1834          }
   1835          

   \                                 In section .text, align 4, keep-with-next
   1836          void ReturnToPersonalizationScreen(WM_HWIN hPrev)
   1837          {
   \                     ReturnToPersonalizationScreen:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   78D04DE2           SUB      SP,SP,#+120
   1838          	BUTTON_Handle hBtn;
   1839          	char scratch[50];
   1840          
   1841          	if (hPrev)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??ReturnToPersonalizationScreen_0
   1842          		WM_DeleteWindow(hPrev);
   \   00000010   ........           BL       WM_DeleteWindow
   1843          
   1844          	SetScreenType(PERSONALIZE_REVIEW_SCREEN_TYPE);
   \                     ??ReturnToPersonalizationScreen_0:
   \   00000014   1B00A0E3           MOV      R0,#+27
   \   00000018   ........           BL       SetScreenType
   1845          	SetScreenScrollingHOnly();
   \   0000001C   ........           LDR      R0,??DataTable211_4
   \   00000020   0210A0E3           MOV      R1,#+2
   \   00000024   001080E5           STR      R1,[R0, #+0]
   1846          	BUTTON_SetDefaultFont(&GUI_Font24_ASCII);
   \   00000028   ........           LDR      R0,??DataTable211_16
   \   0000002C   ........           BL       BUTTON_SetDefaultFont
   1847          
   1848          	hPersonalizationScreen = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, PersonalizationCB, 0);
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   08008DE5           STR      R0,[SP, #+8]
   \   00000038   ........           LDR      R0,??DataTable211_17
   \   0000003C   443FA0E3           MOV      R3,#+272
   \   00000040   04008DE5           STR      R0,[SP, #+4]
   \   00000044   0200A0E3           MOV      R0,#+2
   \   00000048   800D80E3           ORR      R0,R0,#0x2000
   \   0000004C   00008DE5           STR      R0,[SP, #+0]
   \   00000050   782FA0E3           MOV      R2,#+480
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   ........           BL       WM_CreateWindow
   1849          
   1850          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 48, BUTTON_WIDTH, BUTTON_HEIGHT, hPersonalizationScreen, WM_CF_SHOW, 0, OWNER_BUTTON);
   \   00000060   1110A0E3           MOV      R1,#+17
   \   00000064   801E81E3           ORR      R1,R1,#0x800
   \   00000068   0C108DE5           STR      R1,[SP, #+12]
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   ........           LDR      R4,??DataTable211_18
   \   00000074   08108DE5           STR      R1,[SP, #+8]
   \   00000078   0250A0E3           MOV      R5,#+2
   \   0000007C   0210A0E3           MOV      R1,#+2
   \   00000080   600084E5           STR      R0,[R4, #+96]
   \   00000084   405F85E3           ORR      R5,R5,#0x100
   \   00000088   04108DE5           STR      R1,[SP, #+4]
   \   0000008C   00008DE5           STR      R0,[SP, #+0]
   \   00000090   2730A0E3           MOV      R3,#+39
   \   00000094   CA20A0E3           MOV      R2,#+202
   \   00000098   3010A0E3           MOV      R1,#+48
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           BL       BUTTON_CreateEx
   \   000000A4   0060A0E1           MOV      R6,R0
   1851          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   000000A8   ........           LDR      R2,??DataTable211_19
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   ........           BL       BUTTON_SetBitmap
   1852          	BUTTON_SetText(hBtn, "TraqDash Owner");
   \   000000B4   ............       ADRL     R1,`?<Constant "TraqDash Owner">`
   \              ....        
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   ........           BL       BUTTON_SetText
   1853          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000000C4   0020A0E3           MOV      R2,#+0
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   0600A0E1           MOV      R0,R6
   \   000000D0   ........           BL       BUTTON_SetTextColor
   1854          	BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0110A0E3           MOV      R1,#+1
   \   000000DC   0600A0E1           MOV      R0,R6
   \   000000E0   ........           BL       BUTTON_SetTextColor
   1855          	BUTTON_SetFocussable(hBtn, 0);
   \   000000E4   0010A0E3           MOV      R1,#+0
   \   000000E8   0600A0E1           MOV      R0,R6
   \   000000EC   ........           BL       BUTTON_SetFocussable
   1856          
   1857          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 91, BUTTON_WIDTH, BUTTON_HEIGHT, hPersonalizationScreen, WM_CF_SHOW, 0, CONTACTINFO_BUTTON);
   \   000000F0   710E85E2           ADD      R0,R5,#+1808
   \   000000F4   0C008DE5           STR      R0,[SP, #+12]
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   08008DE5           STR      R0,[SP, #+8]
   \   00000100   0200A0E3           MOV      R0,#+2
   \   00000104   04008DE5           STR      R0,[SP, #+4]
   \   00000108   600094E5           LDR      R0,[R4, #+96]
   \   0000010C   2730A0E3           MOV      R3,#+39
   \   00000110   00008DE5           STR      R0,[SP, #+0]
   \   00000114   CA20A0E3           MOV      R2,#+202
   \   00000118   5B10A0E3           MOV      R1,#+91
   \   0000011C   0500A0E1           MOV      R0,R5
   \   00000120   ........           BL       BUTTON_CreateEx
   \   00000124   0060A0E1           MOV      R6,R0
   1858          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmOrangeButton);
   \   00000128   ........           LDR      R2,??DataTable211_20
   \   0000012C   0010A0E3           MOV      R1,#+0
   \   00000130   ........           BL       BUTTON_SetBitmap
   1859          	BUTTON_SetText(hBtn, "Contact Info");
   \   00000134   ............       ADRL     R1,`?<Constant "Contact Info">`
   \              ....        
   \   0000013C   0600A0E1           MOV      R0,R6
   \   00000140   ........           BL       BUTTON_SetText
   1860          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000144   0020A0E3           MOV      R2,#+0
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   0600A0E1           MOV      R0,R6
   \   00000150   ........           BL       BUTTON_SetTextColor
   1861          	BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000154   0020A0E3           MOV      R2,#+0
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   0600A0E1           MOV      R0,R6
   \   00000160   ........           BL       BUTTON_SetTextColor
   1862          	BUTTON_SetFocussable(hBtn, 0);
   \   00000164   0010A0E3           MOV      R1,#+0
   \   00000168   0600A0E1           MOV      R0,R6
   \   0000016C   ........           BL       BUTTON_SetFocussable
   1863          
   1864          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 134, BUTTON_WIDTH, BUTTON_HEIGHT, hPersonalizationScreen, WM_CF_SHOW, 0, WIFI_NAME_BUTTON);
   \   00000170   1300A0E3           MOV      R0,#+19
   \   00000174   800E80E3           ORR      R0,R0,#0x800
   \   00000178   0C008DE5           STR      R0,[SP, #+12]
   \   0000017C   0000A0E3           MOV      R0,#+0
   \   00000180   08008DE5           STR      R0,[SP, #+8]
   \   00000184   0200A0E3           MOV      R0,#+2
   \   00000188   04008DE5           STR      R0,[SP, #+4]
   \   0000018C   600094E5           LDR      R0,[R4, #+96]
   \   00000190   2730A0E3           MOV      R3,#+39
   \   00000194   00008DE5           STR      R0,[SP, #+0]
   \   00000198   CA20A0E3           MOV      R2,#+202
   \   0000019C   8610A0E3           MOV      R1,#+134
   \   000001A0   0500A0E1           MOV      R0,R5
   \   000001A4   ........           BL       BUTTON_CreateEx
   \   000001A8   0070A0E1           MOV      R7,R0
   1865          	BUTTON_SetText(hBtn, "WiFi Name");
   \   000001AC   ............       ADRL     R1,`?<Constant "WiFi Name">`
   \              ....        
   \   000001B4   ........           BL       BUTTON_SetText
   1866          	if (unsavedSysData.wifiEnabled && unsavedSysData.wifiCardInserted)
   \   000001B8   ........           LDR      R6,??DataTable211_14
   \   000001BC   D00096E5           LDR      R0,[R6, #+208]
   \   000001C0   000050E3           CMP      R0,#+0
   \   000001C4   CC009615           LDRNE    R0,[R6, #+204]
   \   000001C8   00005013           CMPNE    R0,#+0
   \   000001CC   1000000A           BEQ      ??ReturnToPersonalizationScreen_1
   1867          	{
   1868          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   000001D0   FF84E0E3           MVN      R8,#-16777216
   \   000001D4   0820A0E1           MOV      R2,R8
   \   000001D8   0010A0E3           MOV      R1,#+0
   \   000001DC   0700A0E1           MOV      R0,R7
   \   000001E0   ........           BL       BUTTON_SetTextColor
   1869          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_WHITE);
   \   000001E4   0820A0E1           MOV      R2,R8
   \   000001E8   0110A0E3           MOV      R1,#+1
   \   000001EC   0700A0E1           MOV      R0,R7
   \   000001F0   ........           BL       BUTTON_SetTextColor
   1870          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   000001F4   ........           LDR      R2,??DataTable211_21
   \   000001F8   0010A0E3           MOV      R1,#+0
   \   000001FC   0700A0E1           MOV      R0,R7
   \   00000200   ........           BL       BUTTON_SetBitmap
   1871          		BUTTON_SetFocussable(hBtn, 0);
   \   00000204   0010A0E3           MOV      R1,#+0
   \   00000208   0700A0E1           MOV      R0,R7
   \   0000020C   ........           BL       BUTTON_SetFocussable
   \   00000210   140000EA           B        ??ReturnToPersonalizationScreen_2
   1872          	}
   1873          	else
   1874          	{
   1875          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \                     ??ReturnToPersonalizationScreen_1:
   \   00000214   0020A0E3           MOV      R2,#+0
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   0700A0E1           MOV      R0,R7
   \   00000220   ........           BL       BUTTON_SetTextColor
   1876          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000224   0020A0E3           MOV      R2,#+0
   \   00000228   0110A0E3           MOV      R1,#+1
   \   0000022C   0700A0E1           MOV      R0,R7
   \   00000230   ........           BL       BUTTON_SetTextColor
   1877          		BUTTON_SetBitmap(hBtn, BUTTON_BI_PRESSED, &bmGrayButton);
   \   00000234   ........           LDR      R8,??DataTable211_22
   \   00000238   0110A0E3           MOV      R1,#+1
   \   0000023C   0820A0E1           MOV      R2,R8
   \   00000240   0700A0E1           MOV      R0,R7
   \   00000244   ........           BL       BUTTON_SetBitmap
   1878          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGrayButton);
   \   00000248   0820A0E1           MOV      R2,R8
   \   0000024C   0010A0E3           MOV      R1,#+0
   \   00000250   0700A0E1           MOV      R0,R7
   \   00000254   ........           BL       BUTTON_SetBitmap
   1879          		BUTTON_SetBitmap(hBtn, BUTTON_BI_DISABLED, &bmGrayButton);
   \   00000258   0820A0E1           MOV      R2,R8
   \   0000025C   0210A0E3           MOV      R1,#+2
   \   00000260   0700A0E1           MOV      R0,R7
   \   00000264   ........           BL       BUTTON_SetBitmap
   1880          	}
   1881          
   1882          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 177, BUTTON_WIDTH, BUTTON_HEIGHT, hPersonalizationScreen, WM_CF_SHOW, 0, WIFI_PASSWORD_BUTTON);
   \                     ??ReturnToPersonalizationScreen_2:
   \   00000268   1400A0E3           MOV      R0,#+20
   \   0000026C   800E80E3           ORR      R0,R0,#0x800
   \   00000270   0C008DE5           STR      R0,[SP, #+12]
   \   00000274   0000A0E3           MOV      R0,#+0
   \   00000278   08008DE5           STR      R0,[SP, #+8]
   \   0000027C   0200A0E3           MOV      R0,#+2
   \   00000280   04008DE5           STR      R0,[SP, #+4]
   \   00000284   600094E5           LDR      R0,[R4, #+96]
   \   00000288   2730A0E3           MOV      R3,#+39
   \   0000028C   00008DE5           STR      R0,[SP, #+0]
   \   00000290   CA20A0E3           MOV      R2,#+202
   \   00000294   B110A0E3           MOV      R1,#+177
   \   00000298   0500A0E1           MOV      R0,R5
   \   0000029C   ........           BL       BUTTON_CreateEx
   \   000002A0   0070A0E1           MOV      R7,R0
   1883          	BUTTON_SetText(hBtn, "WiFi Password");
   \   000002A4   ............       ADRL     R1,`?<Constant "WiFi Password">`
   \              ....        
   \   000002AC   ........           BL       BUTTON_SetText
   1884          	if (unsavedSysData.wifiEnabled && unsavedSysData.wifiCardInserted)
   \   000002B0   D00096E5           LDR      R0,[R6, #+208]
   \   000002B4   000050E3           CMP      R0,#+0
   \   000002B8   CC009615           LDRNE    R0,[R6, #+204]
   \   000002BC   00005013           CMPNE    R0,#+0
   \   000002C0   1000000A           BEQ      ??ReturnToPersonalizationScreen_3
   1885          	{
   1886          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   000002C4   FF84E0E3           MVN      R8,#-16777216
   \   000002C8   0820A0E1           MOV      R2,R8
   \   000002CC   0010A0E3           MOV      R1,#+0
   \   000002D0   0700A0E1           MOV      R0,R7
   \   000002D4   ........           BL       BUTTON_SetTextColor
   1887          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_WHITE);
   \   000002D8   0820A0E1           MOV      R2,R8
   \   000002DC   0110A0E3           MOV      R1,#+1
   \   000002E0   0700A0E1           MOV      R0,R7
   \   000002E4   ........           BL       BUTTON_SetTextColor
   1888          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   000002E8   ........           LDR      R2,??DataTable211_21
   \   000002EC   0010A0E3           MOV      R1,#+0
   \   000002F0   0700A0E1           MOV      R0,R7
   \   000002F4   ........           BL       BUTTON_SetBitmap
   1889          		BUTTON_SetFocussable(hBtn, 0);
   \   000002F8   0010A0E3           MOV      R1,#+0
   \   000002FC   0700A0E1           MOV      R0,R7
   \   00000300   ........           BL       BUTTON_SetFocussable
   \   00000304   140000EA           B        ??ReturnToPersonalizationScreen_4
   1890          	}
   1891          	else
   1892          	{
   1893          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \                     ??ReturnToPersonalizationScreen_3:
   \   00000308   0020A0E3           MOV      R2,#+0
   \   0000030C   0010A0E3           MOV      R1,#+0
   \   00000310   0700A0E1           MOV      R0,R7
   \   00000314   ........           BL       BUTTON_SetTextColor
   1894          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000318   0020A0E3           MOV      R2,#+0
   \   0000031C   0110A0E3           MOV      R1,#+1
   \   00000320   0700A0E1           MOV      R0,R7
   \   00000324   ........           BL       BUTTON_SetTextColor
   1895          		BUTTON_SetBitmap(hBtn, BUTTON_BI_PRESSED, &bmGrayButton);
   \   00000328   ........           LDR      R8,??DataTable211_22
   \   0000032C   0110A0E3           MOV      R1,#+1
   \   00000330   0820A0E1           MOV      R2,R8
   \   00000334   0700A0E1           MOV      R0,R7
   \   00000338   ........           BL       BUTTON_SetBitmap
   1896          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGrayButton);
   \   0000033C   0820A0E1           MOV      R2,R8
   \   00000340   0010A0E3           MOV      R1,#+0
   \   00000344   0700A0E1           MOV      R0,R7
   \   00000348   ........           BL       BUTTON_SetBitmap
   1897          		BUTTON_SetBitmap(hBtn, BUTTON_BI_DISABLED, &bmGrayButton);
   \   0000034C   0820A0E1           MOV      R2,R8
   \   00000350   0210A0E3           MOV      R1,#+2
   \   00000354   0700A0E1           MOV      R0,R7
   \   00000358   ........           BL       BUTTON_SetBitmap
   1898          	}
   1899          
   1900          	hCurrentTempButton = 0;
   \                     ??ReturnToPersonalizationScreen_4:
   \   0000035C   0000A0E3           MOV      R0,#+0
   \   00000360   8C0084E5           STR      R0,[R4, #+140]
   1901          	if (unsavedSysData.enableTempCalibration)
   \   00000364   C80096E5           LDR      R0,[R6, #+200]
   \   00000368   000050E3           CMP      R0,#+0
   \   0000036C   4200000A           BEQ      ??ReturnToPersonalizationScreen_5
   1902          	{
   1903          		hBtn = BUTTON_CreateEx(BUTTON_LEFT, 220, 96, BUTTON_HEIGHT - 2, hPersonalizationScreen, WM_CF_SHOW, 0, TEMP_BUTTON);
   \   00000370   1700A0E3           MOV      R0,#+23
   \   00000374   800E80E3           ORR      R0,R0,#0x800
   \   00000378   0C008DE5           STR      R0,[SP, #+12]
   \   0000037C   0000A0E3           MOV      R0,#+0
   \   00000380   08008DE5           STR      R0,[SP, #+8]
   \   00000384   0200A0E3           MOV      R0,#+2
   \   00000388   04008DE5           STR      R0,[SP, #+4]
   \   0000038C   600094E5           LDR      R0,[R4, #+96]
   \   00000390   2530A0E3           MOV      R3,#+37
   \   00000394   00008DE5           STR      R0,[SP, #+0]
   \   00000398   6020A0E3           MOV      R2,#+96
   \   0000039C   DC10A0E3           MOV      R1,#+220
   \   000003A0   0500A0E1           MOV      R0,R5
   \   000003A4   ........           BL       BUTTON_CreateEx
   \   000003A8   0070A0E1           MOV      R7,R0
   1904          		BUTTON_SetText(hBtn, "Temp");
   \   000003AC   ............       ADRL     R1,`?<Constant "Temp">`
   \              ....        
   \   000003B4   ........           BL       BUTTON_SetText
   1905          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000003B8   0020A0E3           MOV      R2,#+0
   \   000003BC   0010A0E3           MOV      R1,#+0
   \   000003C0   0700A0E1           MOV      R0,R7
   \   000003C4   ........           BL       BUTTON_SetTextColor
   1906          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   000003C8   0020A0E3           MOV      R2,#+0
   \   000003CC   0110A0E3           MOV      R1,#+1
   \   000003D0   0700A0E1           MOV      R0,R7
   \   000003D4   ........           BL       BUTTON_SetTextColor
   1907          		BUTTON_SetFocussable(hBtn, 0);
   \   000003D8   0010A0E3           MOV      R1,#+0
   \   000003DC   0700A0E1           MOV      R0,R7
   \   000003E0   ........           BL       BUTTON_SetFocussable
   \   000003E4   1800A0E3           MOV      R0,#+24
   \   000003E8   800E80E3           ORR      R0,R0,#0x800
   \   000003EC   0C008DE5           STR      R0,[SP, #+12]
   \   000003F0   0000A0E3           MOV      R0,#+0
   \   000003F4   08008DE5           STR      R0,[SP, #+8]
   \   000003F8   0200A0E3           MOV      R0,#+2
   \   000003FC   04008DE5           STR      R0,[SP, #+4]
   \   00000400   600094E5           LDR      R0,[R4, #+96]
   \   00000404   DC10A0E3           MOV      R1,#+220
   \   00000408   00008DE5           STR      R0,[SP, #+0]
   \   0000040C   2530A0E3           MOV      R3,#+37
   \   00000410   6020A0E3           MOV      R2,#+96
   \   00000414   8E0081E2           ADD      R0,R1,#+142
   1908          
   1909          		hCurrentTempButton = BUTTON_CreateEx(BUTTON_LEFT + 104, 220, 96, BUTTON_HEIGHT - 2, hPersonalizationScreen, WM_CF_SHOW, 0, READING_BUTTON);
   \   00000418   ........           BL       BUTTON_CreateEx
   \   0000041C   8C0084E5           STR      R0,[R4, #+140]
   1910          		BUTTON_SetTextColor(hCurrentTempButton, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000420   0020A0E3           MOV      R2,#+0
   \   00000424   0010A0E3           MOV      R1,#+0
   \   00000428   ........           BL       BUTTON_SetTextColor
   1911          		BUTTON_SetTextColor(hCurrentTempButton, BUTTON_BI_PRESSED, GUI_BLACK);
   \   0000042C   0020A0E3           MOV      R2,#+0
   \   00000430   0110A0E3           MOV      R1,#+1
   \   00000434   8C0094E5           LDR      R0,[R4, #+140]
   \   00000438   ........           BL       BUTTON_SetTextColor
   1912          		BUTTON_SetFocussable(hCurrentTempButton, 0);
   \   0000043C   0010A0E3           MOV      R1,#+0
   \   00000440   8C0094E5           LDR      R0,[R4, #+140]
   \   00000444   ........           BL       BUTTON_SetFocussable
   1913          		SetCurrentTempButtonText();
   \   00000448   8C0094E5           LDR      R0,[R4, #+140]
   \   0000044C   000050E3           CMP      R0,#+0
   \   00000450   4500000A           BEQ      ??ReturnToPersonalizationScreen_6
   \   00000454   0500A0E3           MOV      R0,#+5
   \   00000458   ........           BL       GetADC
   \   0000045C   0020A0E1           MOV      R2,R0
   \   00000460   ........           ADR      R1,??DataTable210_1  ;; 0x25, 0x64, 0x00, 0x00
   \   00000464   44008DE2           ADD      R0,SP,#+68
   \   00000468   ........           BL       sprintf
   \   0000046C   44108DE2           ADD      R1,SP,#+68
   \   00000470   8C0094E5           LDR      R0,[R4, #+140]
   \   00000474   ........           BL       BUTTON_SetText
   \   00000478   3B0000EA           B        ??ReturnToPersonalizationScreen_6
   1914          	}
   1915          	else if (unsavedSysData.enableSerialNumber)
   \                     ??ReturnToPersonalizationScreen_5:
   \   0000047C   8A00D6E5           LDRB     R0,[R6, #+138]
   \   00000480   000050E3           CMP      R0,#+0
   \   00000484   3800000A           BEQ      ??ReturnToPersonalizationScreen_6
   1916          	{
   1917          		hBtn = BUTTON_CreateEx(BUTTON_LEFT, 220, 96, BUTTON_HEIGHT - 2, hPersonalizationScreen, WM_CF_SHOW, 0, SERIALNUMBER_BUTTON);
   \   00000488   1500A0E3           MOV      R0,#+21
   \   0000048C   800E80E3           ORR      R0,R0,#0x800
   \   00000490   0C008DE5           STR      R0,[SP, #+12]
   \   00000494   0000A0E3           MOV      R0,#+0
   \   00000498   08008DE5           STR      R0,[SP, #+8]
   \   0000049C   0200A0E3           MOV      R0,#+2
   \   000004A0   04008DE5           STR      R0,[SP, #+4]
   \   000004A4   600094E5           LDR      R0,[R4, #+96]
   \   000004A8   2530A0E3           MOV      R3,#+37
   \   000004AC   00008DE5           STR      R0,[SP, #+0]
   \   000004B0   6020A0E3           MOV      R2,#+96
   \   000004B4   DC10A0E3           MOV      R1,#+220
   \   000004B8   0500A0E1           MOV      R0,R5
   \   000004BC   ........           BL       BUTTON_CreateEx
   \   000004C0   0050A0E1           MOV      R5,R0
   1918          		BUTTON_SetText(hBtn, "S/N");
   \   000004C4   ........           ADR      R1,??DataTable211  ;; "S/N"
   \   000004C8   ........           BL       BUTTON_SetText
   1919          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000004CC   0020A0E3           MOV      R2,#+0
   \   000004D0   0010A0E3           MOV      R1,#+0
   \   000004D4   0500A0E1           MOV      R0,R5
   \   000004D8   ........           BL       BUTTON_SetTextColor
   1920          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   000004DC   0020A0E3           MOV      R2,#+0
   \   000004E0   0110A0E3           MOV      R1,#+1
   \   000004E4   0500A0E1           MOV      R0,R5
   \   000004E8   ........           BL       BUTTON_SetTextColor
   1921          		BUTTON_SetFocussable(hBtn, 0);
   \   000004EC   0010A0E3           MOV      R1,#+0
   \   000004F0   0500A0E1           MOV      R0,R5
   \   000004F4   ........           BL       BUTTON_SetFocussable
   1922          
   1923          		hBtn = BUTTON_CreateEx(BUTTON_LEFT + 104, 220, 96, BUTTON_HEIGHT - 2, hPersonalizationScreen, WM_CF_SHOW, 0, BUILDDATE_BUTTON);
   \   000004F8   1600A0E3           MOV      R0,#+22
   \   000004FC   800E80E3           ORR      R0,R0,#0x800
   \   00000500   0C008DE5           STR      R0,[SP, #+12]
   \   00000504   0000A0E3           MOV      R0,#+0
   \   00000508   08008DE5           STR      R0,[SP, #+8]
   \   0000050C   0200A0E3           MOV      R0,#+2
   \   00000510   04008DE5           STR      R0,[SP, #+4]
   \   00000514   600094E5           LDR      R0,[R4, #+96]
   \   00000518   DC10A0E3           MOV      R1,#+220
   \   0000051C   00008DE5           STR      R0,[SP, #+0]
   \   00000520   2530A0E3           MOV      R3,#+37
   \   00000524   6020A0E3           MOV      R2,#+96
   \   00000528   8E0081E2           ADD      R0,R1,#+142
   \   0000052C   ........           BL       BUTTON_CreateEx
   \   00000530   0070A0E1           MOV      R7,R0
   1924          		BUTTON_SetText(hBtn, "Date");
   \   00000534   ............       ADRL     R1,`?<Constant "Date">`
   \              ....        
   \   0000053C   ........           BL       BUTTON_SetText
   1925          		BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000540   0020A0E3           MOV      R2,#+0
   \   00000544   0010A0E3           MOV      R1,#+0
   \   00000548   0700A0E1           MOV      R0,R7
   \   0000054C   ........           BL       BUTTON_SetTextColor
   1926          		BUTTON_SetTextColor(hBtn, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000550   0020A0E3           MOV      R2,#+0
   \   00000554   0110A0E3           MOV      R1,#+1
   \   00000558   0700A0E1           MOV      R0,R7
   \   0000055C   ........           BL       BUTTON_SetTextColor
   1927          		BUTTON_SetFocussable(hBtn, 0);
   \   00000560   0010A0E3           MOV      R1,#+0
   \   00000564   0700A0E1           MOV      R0,R7
   \   00000568   ........           BL       BUTTON_SetFocussable
   1928          	}
   1929          
   1930          	hPersonalizeText = CreateTextBox(hPersonalizationScreen, "");
   \                     ??ReturnToPersonalizationScreen_6:
   \   0000056C   ........           ADR      R1,??DataTable211_1  ;; ""
   \   00000570   600094E5           LDR      R0,[R4, #+96]
   \   00000574   ........           BL       CreateTextBox
   \   00000578   900084E5           STR      R0,[R4, #+144]
   1931          	MULTIEDIT_AddText(hPersonalizeText, unsavedSysData.unitInfo.owner);
   \   0000057C   081086E2           ADD      R1,R6,#+8
   \   00000580   ........           BL       MULTIEDIT_AddText
   1932          	MULTIEDIT_AddText(hPersonalizeText, "\r\n\r\n");
   \   00000584   ............       ADRL     R5,`?<Constant "\\r\\n\\r\\n">`
   \              ....        
   \   0000058C   900094E5           LDR      R0,[R4, #+144]
   \   00000590   0510A0E1           MOV      R1,R5
   \   00000594   ........           BL       MULTIEDIT_AddText
   1933          	MULTIEDIT_AddText(hPersonalizeText, unsavedSysData.unitInfo.phone);
   \   00000598   1C1086E2           ADD      R1,R6,#+28
   \   0000059C   900094E5           LDR      R0,[R4, #+144]
   \   000005A0   ........           BL       MULTIEDIT_AddText
   1934          	MULTIEDIT_AddText(hPersonalizeText, "\r\n\r\n");
   \   000005A4   0510A0E1           MOV      R1,R5
   \   000005A8   900094E5           LDR      R0,[R4, #+144]
   \   000005AC   ........           BL       MULTIEDIT_AddText
   1935          	MULTIEDIT_AddText(hPersonalizeText, unsavedSysData.unitInfo.wifiName);
   \   000005B0   301086E2           ADD      R1,R6,#+48
   \   000005B4   900094E5           LDR      R0,[R4, #+144]
   \   000005B8   ........           BL       MULTIEDIT_AddText
   1936          	MULTIEDIT_AddText(hPersonalizeText, "\r\n");
   \   000005BC   ........           ADR      R7,??DataTable211_3  ;; 0x0D, 0x0A, 0x00, 0x00
   \   000005C0   0710A0E1           MOV      R1,R7
   \   000005C4   900094E5           LDR      R0,[R4, #+144]
   \   000005C8   ........           BL       MULTIEDIT_AddText
   1937          	MULTIEDIT_AddText(hPersonalizeText, unsavedSysData.unitInfo.wifiPass);
   \   000005CC   441086E2           ADD      R1,R6,#+68
   \   000005D0   900094E5           LDR      R0,[R4, #+144]
   \   000005D4   ........           BL       MULTIEDIT_AddText
   1938          	MULTIEDIT_AddText(hPersonalizeText, "\r\n\r\n");
   \   000005D8   0510A0E1           MOV      R1,R5
   \   000005DC   900094E5           LDR      R0,[R4, #+144]
   \   000005E0   ........           BL       MULTIEDIT_AddText
   1939          	sprintf(scratch, "Serial # %u", unsavedSysData.unitInfo.serno);
   \   000005E4   602096E5           LDR      R2,[R6, #+96]
   \   000005E8   ............       ADRL     R1,`?<Constant "Serial # %u">`
   \              ....        
   \   000005F0   10008DE2           ADD      R0,SP,#+16
   \   000005F4   ........           BL       sprintf
   1940          	MULTIEDIT_AddText(hPersonalizeText, scratch);
   \   000005F8   10108DE2           ADD      R1,SP,#+16
   \   000005FC   900094E5           LDR      R0,[R4, #+144]
   \   00000600   ........           BL       MULTIEDIT_AddText
   1941          	MULTIEDIT_AddText(hPersonalizeText, "\r\n");
   \   00000604   0710A0E1           MOV      R1,R7
   \   00000608   900094E5           LDR      R0,[R4, #+144]
   \   0000060C   ........           BL       MULTIEDIT_AddText
   1942          	sprintf(scratch, "Built week %02u, 20%02u\n\r", unsavedSysData.unitInfo.week, unsavedSysData.unitInfo.year);
   \   00000610   683096E5           LDR      R3,[R6, #+104]
   \   00000614   642096E5           LDR      R2,[R6, #+100]
   \   00000618   ............       ADRL     R1,`?<Constant "Built week %02u, 20%0...">`
   \              ....        
   \   00000620   10008DE2           ADD      R0,SP,#+16
   \   00000624   ........           BL       sprintf
   1943          	MULTIEDIT_AddText(hPersonalizeText, scratch);
   \   00000628   10108DE2           ADD      R1,SP,#+16
   \   0000062C   900094E5           LDR      R0,[R4, #+144]
   \   00000630   ........           BL       MULTIEDIT_AddText
   1944          
   1945          	// Display temperature calibration factor
   1946          	{
   1947          		int temp;
   1948          
   1949          		temp = sysData.calibrationTemperature;
   \   00000634   ........           LDR      R5,??DataTable211_15
   1950          		if (sysData.units == STD)
   \   00000638   641095E5           LDR      R1,[R5, #+100]
   \   0000063C   D80095E5           LDR      R0,[R5, #+216]
   \   00000640   000051E3           CMP      R1,#+0
   \   00000644   0200001A           BNE      ??ReturnToPersonalizationScreen_7
   1951          			temp = (int)c_to_f((float)temp);
   \   00000648   ........           BL       __aeabi_i2f
   \   0000064C   ........           BL       c_to_f
   \   00000650   ........           BL       __aeabi_f2iz
   1952          		sprintf(scratch, "CAL %d%s = %d", temp, sysData.units == METRIC ? "C" : "F", sysData.calibrationTempReading);
   \                     ??ReturnToPersonalizationScreen_7:
   \   00000654   641095E5           LDR      R1,[R5, #+100]
   \   00000658   0020A0E1           MOV      R2,R0
   \   0000065C   010051E3           CMP      R1,#+1
   \   00000660   DC1095E5           LDR      R1,[R5, #+220]
   \   00000664   ........           ADREQ    R3,??DataTable211_5  ;; "C"
   \   00000668   00108DE5           STR      R1,[SP, #+0]
   \   0000066C   ........           ADRNE    R3,??DataTable211_6  ;; "F"
   \   00000670   ............       ADRL     R1,`?<Constant "CAL %d%s = %d">`
   \              ....        
   \   00000678   10008DE2           ADD      R0,SP,#+16
   \   0000067C   ........           BL       sprintf
   1953          	}
   1954          	MULTIEDIT_AddText(hPersonalizeText, scratch);
   \   00000680   10108DE2           ADD      R1,SP,#+16
   \   00000684   900094E5           LDR      R0,[R4, #+144]
   \   00000688   ........           BL       MULTIEDIT_AddText
   1955          	SCROLLBAR_SetWidth(WM_GetScrollbarV(hPersonalizeText), FINGER_WIDTH);
   \   0000068C   900094E5           LDR      R0,[R4, #+144]
   \   00000690   ........           BL       WM_GetScrollbarV
   \   00000694   2310A0E3           MOV      R1,#+35
   \   00000698   ........           BL       SCROLLBAR_SetWidth
   1956          
   1957          	hScreenTimer = WM_CreateTimer(hPersonalizationScreen, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   0000069C   0030A0E3           MOV      R3,#+0
   \   000006A0   7D20A0E3           MOV      R2,#+125
   \   000006A4   0010A0E3           MOV      R1,#+0
   \   000006A8   600094E5           LDR      R0,[R4, #+96]
   \   000006AC   ........           BL       WM_CreateTimer
   \   000006B0   ........           LDR      R1,??DataTable211_10
   \   000006B4   000081E5           STR      R0,[R1, #+0]
   1958          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   000006B8   ........           BL       ResetNewScreen
   1959          }
   \   000006BC   78D08DE2           ADD      SP,SP,#+120      ;; stack cleaning
   \   000006C0   F081BDE8           POP      {R4-R8,PC}       ;; return
   1960          
   1961          //
   1962          // If WiFi data changed ask if user wants to restart now or later
   1963          //

   \                                 In section .text, align 4, keep-with-next
   1964          void PersonalizeScreenExit(void)
   1965          {
   \                     PersonalizeScreenExit:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   1966          	int results1, results2;
   1967          
   1968          	results1 = strcmp(initialName, unsavedSysData.unitInfo.wifiName);
   \   00000004   ........           LDR      R4,??DataTable211_18
   \   00000008   ........           LDR      R5,??DataTable211_14
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   301085E2           ADD      R1,R5,#+48
   \   00000014   5A0F84E2           ADD      R0,R4,#+360
   \   00000018   ........           BL       strcmp
   \   0000001C   0060A0E1           MOV      R6,R0
   1969          	results2 = strcmp(initialPass, unsavedSysData.unitInfo.wifiPass);
   1970          	if ((results1 != 0) || (results2 != 0))
   \   00000020   441085E2           ADD      R1,R5,#+68
   \   00000024   5F0F84E2           ADD      R0,R4,#+380
   \   00000028   ........           BL       strcmp
   \   0000002C   060090E1           ORRS     R0,R0,R6
   \   00000030   1200000A           BEQ      ??PersonalizeScreenExit_0
   1971          	{
   1972          		// WiFi settings changed - see if user wants to reset
   1973          		if (WiFiChangedPopUp() == GUI_ID_OK)
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   ........           BL       SetPopupDefaults
   \   0000003C   0A00A0E3           MOV      R0,#+10
   \   00000040   04008DE5           STR      R0,[SP, #+4]
   \   00000044   00008DE5           STR      R0,[SP, #+0]
   \   00000048   603094E5           LDR      R3,[R4, #+96]
   \   0000004C   ........           LDR      R2,??DataTable211_23
   \   00000050   0610A0E3           MOV      R1,#+6
   \   00000054   ............       ADRL     R0,??WiFiChanged
   \              ....        
   \   0000005C   ........           BL       GUI_ExecDialogBox
   \   00000060   010050E3           CMP      R0,#+1
   \   00000064   0500001A           BNE      ??PersonalizeScreenExit_0
   1974          		{
   1975          			WriteUserDataEvent(VEHICLE_DATA);
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   ........           BL       WriteUserDataEvent
   1976          #ifdef _WINDOWS
   1977          			SIM_Powerkey_CB(POWER_KEY, 0);
   1978          #else
   1979          			PowerOffUnit(hPersonalizationScreen, false, 1000);				// Pause for 1 second to allow time for the SU to process the new camera setting
   \   00000070   FA2FA0E3           MOV      R2,#+1000
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   600094E5           LDR      R0,[R4, #+96]
   \   0000007C   ........           BL       PowerOffUnit
   1980          #endif
   1981          		}
   1982          	}
   1983          }
   \                     ??PersonalizeScreenExit_0:
   \   00000080   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000084   7080BDE8           POP      {R4-R6,PC}       ;; return
   1984          
   1985          
   1986          //
   1987          // Returns	GUI_ID_OK to go back and edit password again or
   1988          //			GUI_ID_CANCEL - to accept the default password
   1989          //

   \                                 In section .text, align 4, keep-with-next
   1990          int WiFiChangedPopUp(void)
   1991          {
   \                     WiFiChangedPopUp:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   1992          static const GUI_WIDGET_CREATE_INFO WiFiChanged[] = {
   1993          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   1994          	{ TEXT_CreateIndirect, "You have changed WiFi settings", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   1995          	{ TEXT_CreateIndirect, "which requires a power cycle.", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   1996          	{ TEXT_CreateIndirect, "Would you like to reset now?",      0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   1997          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK,   35, 115, 120, 60 },
   1998          	{ BUTTON_CreateIndirect, "NO", GUI_ID_CANCEL, 195, 115, 120, 60 }
   1999          };
   2000          
   2001          	SetPopupDefaults(WARNING_POPUP);
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   ........           BL       SetPopupDefaults
   2002          	return GUI_ExecDialogBox(WiFiChanged, GUI_COUNTOF(WiFiChanged), &popupCallback, hPersonalizationScreen, 10, 10);
   \   00000010   0A00A0E3           MOV      R0,#+10
   \   00000014   04008DE5           STR      R0,[SP, #+4]
   \   00000018   00008DE5           STR      R0,[SP, #+0]
   \   0000001C   ........           LDR      R0,??DataTable211_18
   \   00000020   ........           LDR      R2,??DataTable211_23
   \   00000024   603090E5           LDR      R3,[R0, #+96]
   \   00000028   0610A0E3           MOV      R1,#+6
   \   0000002C   ............       ADRL     R0,??WiFiChanged
   \              ....        
   \   00000034   ........           BL       GUI_ExecDialogBox
   \   00000038   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000003C   0080BDE8           POP      {PC}             ;; return
   2003          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??WiFiChanged:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "You have changed WiFi...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "which requires a powe...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "Would you like to res...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000068   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "NO">`
   \              ....        
   \   00000080   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2004          

   \                                 In section .text, align 4, keep-with-next
   2005          void SetCurrentTempButtonText(void)
   2006          {
   \                     SetCurrentTempButtonText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2007          	char scratch[50];
   2008          
   2009          	if (hCurrentTempButton)
   \   00000004   ........           LDR      R4,??DataTable211_18
   \   00000008   38D04DE2           SUB      SP,SP,#+56
   \   0000000C   8C0094E5           LDR      R0,[R4, #+140]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0800000A           BEQ      ??SetCurrentTempButtonText_0
   2010          	{
   2011          #ifdef _WINDOWS
   2012          		if (tempIncreasing)
   2013          		{
   2014          			if (temptemp++ > MAXTEMP)
   2015          				tempIncreasing = 0;
   2016          		}
   2017          		else
   2018          		{
   2019          			if (temptemp-- < MINTEMP)
   2020          				tempIncreasing = 1;
   2021          		}
   2022          		sprintf(scratch, "%d", temptemp);
   2023          #else
   2024          		sprintf(scratch, "%d", GetADC(ADC_LED_BOARD_TEMP));
   \   00000018   0500A0E3           MOV      R0,#+5
   \   0000001C   ........           BL       GetADC
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   ........           ADR      R1,??DataTable211_9  ;; 0x25, 0x64, 0x00, 0x00
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   ........           BL       sprintf
   2025          #endif
   2026          	//	sprintf(scratch, "%d", sysData.calibrationTempReading);
   2027          		BUTTON_SetText(hCurrentTempButton, scratch);
   \   00000030   0D10A0E1           MOV      R1,SP
   \   00000034   8C0094E5           LDR      R0,[R4, #+140]
   \   00000038   ........           BL       BUTTON_SetText
   2028          	}
   2029          }
   \                     ??SetCurrentTempButtonText_0:
   \   0000003C   38D08DE2           ADD      SP,SP,#+56       ;; stack cleaning
   \   00000040   1080BDE8           POP      {R4,PC}          ;; return
   2030          
   2031          

   \                                 In section .text, align 4, keep-with-next
   2032          enum PERSONALIZE_SCREEN_ID SSSButtonToScreenID(int id)
   2033          {
   2034          	switch (id)
   \                     SSSButtonToScreenID:
   \   00000000   120040E2           SUB      R0,R0,#+18
   \   00000004   800E40E2           SUB      R0,R0,#+2048
   \   00000008   050050E3           CMP      R0,#+5
   \   0000000C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SSSButtonToScreenID_0:
   \   00000010   0500008A           BHI      ??SSSButtonToScreenID_1
   \   00000014   060000EA           B        ??SSSButtonToScreenID_2
   \   00000018   070000EA           B        ??SSSButtonToScreenID_3
   \   0000001C   080000EA           B        ??SSSButtonToScreenID_4
   \   00000020   090000EA           B        ??SSSButtonToScreenID_5
   \   00000024   0A0000EA           B        ??SSSButtonToScreenID_6
   \   00000028   0B0000EA           B        ??SSSButtonToScreenID_7
   2035          	{
   2036          	default:
   2037          	case OWNER_BUTTON:			return OWNER_SCREEN;
   \                     ??SSSButtonToScreenID_1:
   \   0000002C   0000A0E3           MOV      R0,#+0
   \   00000030   1EFF2FE1           BX       LR
   2038          	case CONTACTINFO_BUTTON:	return CONTACTINFO_SCREEN;
   \                     ??SSSButtonToScreenID_2:
   \   00000034   0100A0E3           MOV      R0,#+1
   \   00000038   1EFF2FE1           BX       LR
   2039          	case WIFI_NAME_BUTTON:		return WIFI_NAME_SCREEN;
   \                     ??SSSButtonToScreenID_3:
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   1EFF2FE1           BX       LR
   2040          	case WIFI_PASSWORD_BUTTON:	return WIFI_PASSWORD_SCREEN;
   \                     ??SSSButtonToScreenID_4:
   \   00000044   0300A0E3           MOV      R0,#+3
   \   00000048   1EFF2FE1           BX       LR
   2041          	case SERIALNUMBER_BUTTON:	return SERIALNUMBER_SCREEN;
   \                     ??SSSButtonToScreenID_5:
   \   0000004C   0400A0E3           MOV      R0,#+4
   \   00000050   1EFF2FE1           BX       LR
   2042          	case BUILDDATE_BUTTON:		return BUILDDATE_SCREEN;
   \                     ??SSSButtonToScreenID_6:
   \   00000054   0500A0E3           MOV      R0,#+5
   \   00000058   1EFF2FE1           BX       LR
   2043          	case TEMP_BUTTON:			return TEMP_SCREEN;
   \                     ??SSSButtonToScreenID_7:
   \   0000005C   0600A0E3           MOV      R0,#+6
   \   00000060   1EFF2FE1           BX       LR               ;; return
   2044          	}
   2045          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable173:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable176:
   \   00000000   4F4E0000           DC8      0x4F, 0x4E, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178:
   \   00000000   4F464600           DC8      "OFF"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable179:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable180:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181:
   \   00000000   ........           DC32     SystemSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181_1:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181_2:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182:
   \   00000000   ........           DC32     bmOnOffGreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_1:
   \   00000000   ........           DC32     bmOnOffWhite

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_2:
   \   00000000   ........           DC32     pressingbutton_semaphore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_1:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_2:
   \   00000000   ........           DC32     suData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_3:
   \   00000000   ........           DC32     bmGreenCheck

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185:
   \   00000000   ........           DC32     LapMeter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_1:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191:
   \   00000000   ........           DC32     hAutoOnButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191_1:
   \   00000000   ........           DC32     bmBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191_2:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable192:
   \   00000000   ........           DC32     bmGreenButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable192_1:
   \   00000000   616E6400           DC8      "and"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable192_2:
   \   00000000   ........           DC32     GUI_Font32B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable194:
   \   00000000   ........           DC32     SystemSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable194_1:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable194_2:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198:
   \   00000000   ........           DC32     bmYellowButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_1:
   \   00000000   ........           DC32     bmEraseAll

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_2:
   \   00000000   ........           DC32     bmFactoryDefaults

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_3:
   \   00000000   ........           DC32     bmFormatSD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_4:
   \   00000000   ........           DC32     bmPersonalizeButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_5:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_6:
   \   00000000   ........           DC32     bmSingleSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_7:
   \   00000000   ........           DC32     bmPredictiveScaleText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_8:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_9:
   \   00000000   ........           DC32     bmAutoStartSetupText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_10:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_11:
   \   00000000   D3D3D300           DC32     0xd3d3d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_12:
   \   00000000   8080FF00           DC32     0xff8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_13:
   \   00000000   ........           DC32     suData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202:
   \   00000000   ........           DC32     ??timeStr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_1:
   \   00000000   ........           DC32     bmRecordSpeed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_2:
   \   00000000   ........           DC32     bmMediumSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable205:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable205_1:
   \   00000000   ........           DC32     hRecordSpeedWheel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207:
   \   00000000   5C000000           DC8      "\\",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_1:
   \   00000000   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_2:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_3:
   \   00000000   ........           DC32     bmDisplayText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_4:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_5:
   \   00000000   ........           DC32     bmDarkIcon

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_6:
   \   00000000   ........           DC32     bmBrightIcon

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_7:
   \   00000000   ........           DC32     bmSliderBlue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_8:
   \   00000000   ........           DC32     bmSliderGreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_9:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_10:
   \   00000000   ........           DC32     bmUnitsText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_11:
   \   00000000   ........           DC32     bmTimeText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_12:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_13:
   \   00000000   ........           DC32     bmStorageText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_14:
   \   00000000   ........           DC32     SystemSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_15:
   \   00000000   ........           DC32     systemSettingsPopupScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_16:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable210:
   \   00000000   ........           DC32     nonModalPopupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable210_1:
   \   00000000   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211:
   \   00000000   532F4E00           DC8      "S/N"

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_1:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_2:
   \   00000000   ........           DC32     popupTitleTextColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_3:
   \   00000000   0D0A0000           DC8      0x0D, 0x0A, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_4:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_5:
   \   00000000   43000000           DC8      "C",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_6:
   \   00000000   46000000           DC8      "F",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_7:
   \   00000000   ........           DC32     NameStruct

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_8:
   \   00000000   ........           DC32     MY_SESSIONS_PATH

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_9:
   \   00000000   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_10:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_11:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_12:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_13:
   \   00000000   ........           DC32     bmPersonalizeText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_14:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_15:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_16:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_17:
   \   00000000   ........           DC32     PersonalizationCB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_18:
   \   00000000   ........           DC32     SystemSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_19:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_20:
   \   00000000   ........           DC32     bmOrangeButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_21:
   \   00000000   ........           DC32     bmBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_22:
   \   00000000   ........           DC32     bmGrayButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable211_23:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "0.5 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   302E35207365       DC8 48, 46, 53, 32, 115, 101, 99, 0
   \              6300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "1 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   312073656300       DC8 49, 32, 115, 101, 99, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "2 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   322073656300       DC8 50, 32, 115, 101, 99, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "5 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   352073656300       DC8 53, 32, 115, 101, 99, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "10 sec">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   313020736563       DC8 49, 48, 32, 115, 101, 99, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "1 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   31206D696E00       DC8 49, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "2 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   32206D696E00       DC8 50, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "3 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   33206D696E00       DC8 51, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "4 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   34206D696E00       DC8 52, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "5 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   35206D696E00       DC8 53, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "6 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   36206D696E00       DC8 54, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "7 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   37206D696E00       DC8 55, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "8 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   38206D696E00       DC8 56, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "9 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   39206D696E00       DC8 57, 32, 109, 105, 110, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "10 min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3130206D696E       DC8 49, 48, 32, 109, 105, 110, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-12">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D313200           DC8 45, 49, 50, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-11">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D313100           DC8 45, 49, 49, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-10">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D313000           DC8 45, 49, 48, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-9 Alaska">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3920416C61       DC8 45, 57, 32, 65, 108, 97, 115, 107, 97, 0
   \              736B6100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-8 Pacific">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3820506163       DC8 45, 56, 32, 80, 97, 99, 105, 102, 105, 99
   \              69666963    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-7 Mountain">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D37204D6F75       DC8 45, 55, 32, 77, 111, 117, 110, 116, 97, 105
   \              6E746169    
   \   0000000A   6E00               DC8 110, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-6 Central">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D362043656E       DC8 45, 54, 32, 67, 101, 110, 116, 114, 97, 108
   \              7472616C    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-5 Eastern">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3520456173       DC8 45, 53, 32, 69, 97, 115, 116, 101, 114, 110
   \              7465726E    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-4 Atlantic">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D342041746C       DC8 45, 52, 32, 65, 116, 108, 97, 110, 116, 105
   \              616E7469    
   \   0000000A   6300               DC8 99, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-3 Greenland">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D3320477265       DC8 45, 51, 32, 71, 114, 101, 101, 110, 108, 97
   \              656E6C61    
   \   0000000A   6E6400000000       DC8 110, 100, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-2">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D320000           DC8 45, 50, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-1">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D310000           DC8 45, 49, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "0 London">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   30204C6F6E64       DC8 48, 32, 76, 111, 110, 100, 111, 110, 0, 0
   \              6F6E0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+1 Paris, Rome">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3120506172       DC8 43, 49, 32, 80, 97, 114, 105, 115, 44, 32
   \              69732C20    
   \   0000000A   526F6D650000       DC8 82, 111, 109, 101, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+2 Athens">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B3220417468       DC8 43, 50, 32, 65, 116, 104, 101, 110, 115, 0
   \              656E7300    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+3 Moscow">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B33204D6F73       DC8 43, 51, 32, 77, 111, 115, 99, 111, 119, 0
   \              636F7700    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+4">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B340000           DC8 43, 52, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+5">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B350000           DC8 43, 53, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+6">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B360000           DC8 43, 54, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+7">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B370000           DC8 43, 55, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+8 Beijing">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B3820426569       DC8 43, 56, 32, 66, 101, 105, 106, 105, 110, 103
   \              6A696E67    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+9 Tokyo, Seoul">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3920546F6B       DC8 43, 57, 32, 84, 111, 107, 121, 111, 44, 32
   \              796F2C20    
   \   0000000A   53656F756C00       DC8 83, 101, 111, 117, 108, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+10 Melbourne">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3130204D65       DC8 43, 49, 48, 32, 77, 101, 108, 98, 111, 117
   \              6C626F75    
   \   0000000A   726E65000000       DC8 114, 110, 101, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+11">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B313100           DC8 43, 49, 49, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+12 New Zealand">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3132204E65       DC8 43, 49, 50, 32, 78, 101, 119, 32, 90, 101
   \              77205A65    
   \   0000000A   616C616E6400       DC8 97, 108, 97, 110, 100, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-9">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2D390000           DC8 45, 57, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-8 Alaska">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3820416C61       DC8 45, 56, 32, 65, 108, 97, 115, 107, 97, 0
   \              736B6100    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-7 Pacific">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3720506163       DC8 45, 55, 32, 80, 97, 99, 105, 102, 105, 99
   \              69666963    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-6 Mountain">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D36204D6F75       DC8 45, 54, 32, 77, 111, 117, 110, 116, 97, 105
   \              6E746169    
   \   0000000A   6E00               DC8 110, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-5 Central">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D352043656E       DC8 45, 53, 32, 67, 101, 110, 116, 114, 97, 108
   \              7472616C    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-4 Eastern">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D3420456173       DC8 45, 52, 32, 69, 97, 115, 116, 101, 114, 110
   \              7465726E    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-3 Atlantic">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2D332041746C       DC8 45, 51, 32, 65, 116, 108, 97, 110, 116, 105
   \              616E7469    
   \   0000000A   6300               DC8 99, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-2 Greenland">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D3220477265       DC8 45, 50, 32, 71, 114, 101, 101, 110, 108, 97
   \              656E6C61    
   \   0000000A   6E6400000000       DC8 110, 100, 0, 0, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "0">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3000               DC8 48, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+1 London">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B31204C6F6E       DC8 43, 49, 32, 76, 111, 110, 100, 111, 110, 0
   \              646F6E00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+2 Paris, Rome">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3220506172       DC8 43, 50, 32, 80, 97, 114, 105, 115, 44, 32
   \              69732C20    
   \   0000000A   526F6D650000       DC8 82, 111, 109, 101, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+3 Athens">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B3320417468       DC8 43, 51, 32, 65, 116, 104, 101, 110, 115, 0
   \              656E7300    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+4 Moscow">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B34204D6F73       DC8 43, 52, 32, 77, 111, 115, 99, 111, 119, 0
   \              636F7700    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+8">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B380000           DC8 43, 56, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+9 Beijing">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   2B3920426569       DC8 43, 57, 32, 66, 101, 105, 106, 105, 110, 103
   \              6A696E67    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+10 Tokyo, Seoul">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   2B313020546F       DC8 43, 49, 48, 32, 84, 111, 107, 121, 111, 44
   \              6B796F2C    
   \   0000000A   2053656F756C       DC8 32, 83, 101, 111, 117, 108, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+11 Melbourne">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2B3131204D65       DC8 43, 49, 49, 32, 77, 101, 108, 98, 111, 117
   \              6C626F75    
   \   0000000A   726E65000000       DC8 114, 110, 101, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "+12">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   2B313200           DC8 43, 49, 50, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "-12 New Zealand">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   2D3132204E65       DC8 45, 49, 50, 32, 78, 101, 119, 32, 90, 101
   \              77205A65    
   \   0000000A   616C616E6400       DC8 97, 108, 97, 110, 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Disabled">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   44697361626C       DC8 68, 105, 115, 97, 98, 108, 101, 100, 0, 0
   \              65640000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "20 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3230206D7068       DC8 50, 48, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "25 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3235206D7068       DC8 50, 53, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "30 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3330206D7068       DC8 51, 48, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "35 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3335206D7068       DC8 51, 53, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "40 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3430206D7068       DC8 52, 48, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "45 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3435206D7068       DC8 52, 53, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "50 mph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3530206D7068       DC8 53, 48, 32, 109, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "32 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3332206B7068       DC8 51, 50, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "40 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3430206B7068       DC8 52, 48, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "48 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3438206B7068       DC8 52, 56, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "56 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3536206B7068       DC8 53, 54, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "64 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3634206B7068       DC8 54, 52, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "72 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3732206B7068       DC8 55, 50, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "80 kph">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3830206B7068       DC8 56, 48, 32, 107, 112, 104, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Graph Scale">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   477261706820       DC8 71, 114, 97, 112, 104, 32, 83, 99, 97, 108
   \              5363616C    
   \   0000000A   6500               DC8 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto Power On">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4175746F2050       DC8 65, 117, 116, 111, 32, 80, 111, 119, 101, 114
   \              6F776572    
   \   0000000A   204F6E000000       DC8 32, 79, 110, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto Start">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4175746F2053       DC8 65, 117, 116, 111, 32, 83, 116, 97, 114, 116
   \              74617274    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Record Settings">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5265636F7264       DC8 82, 101, 99, 111, 114, 100, 32, 83, 101, 116
   \              20536574    
   \   0000000A   74696E677300       DC8 116, 105, 110, 103, 115, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Not Supported by SU">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4E6F74205375       DC8 78, 111, 116, 32, 83, 117, 112, 112, 111, 114
   \              70706F72    
   \   0000000A   746564206279       DC8 116, 101, 100, 32, 98, 121, 32, 83, 85, 0
   \              20535500    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto On with Power">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4175746F204F       DC8 65, 117, 116, 111, 32, 79, 110, 32, 119, 105
   \              6E207769    
   \   0000000A   746820506F77       DC8 116, 104, 32, 80, 111, 119, 101, 114, 0, 0
   \              65720000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Turns on with Button">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   5475726E7320       DC8 84, 117, 114, 110, 115, 32, 111, 110, 32, 119
   \              6F6E2077    
   \   0000000A   697468204275       DC8 105, 116, 104, 32, 66, 117, 116, 116, 111, 110
   \              74746F6E    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  US Standard">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   202055532053       DC8 32, 32, 85, 83, 32, 83, 116, 97, 110, 100
   \              74616E64    
   \   0000000A   617264000000       DC8 97, 114, 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "  Metric">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   20204D657472       DC8 32, 32, 77, 101, 116, 114, 105, 99, 0, 0
   \              69630000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Simulating GPS">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53696D756C61       DC8 83, 105, 109, 117, 108, 97, 116, 105, 110, 103
   \              74696E67    
   \   0000000A   204750530000       DC8 32, 71, 80, 83, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Normal GPS">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4E6F726D616C       DC8 78, 111, 114, 109, 97, 108, 32, 71, 80, 83
   \              20475053    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Daylight Savings On">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4461796C6967       DC8 68, 97, 121, 108, 105, 103, 104, 116, 32, 83
   \              68742053    
   \   0000000A   6176696E6773       DC8 97, 118, 105, 110, 103, 115, 32, 79, 110, 0
   \              204F6E00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Daylight Savings Off">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4461796C6967       DC8 68, 97, 121, 108, 105, 103, 104, 116, 32, 83
   \              68742053    
   \   0000000A   6176696E6773       DC8 97, 118, 105, 110, 103, 115, 32, 79, 102, 102
   \              204F6666    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Current Settings">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43757272656E       DC8 67, 117, 114, 114, 101, 110, 116, 32, 83, 101
   \              74205365    
   \   0000000A   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Power On Control">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   506F77657220       DC8 80, 111, 119, 101, 114, 32, 79, 110, 32, 67
   \              4F6E2043    
   \   0000000A   6F6E74726F6C       DC8 111, 110, 116, 114, 111, 108, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto Start Location">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4175746F2053       DC8 65, 117, 116, 111, 32, 83, 116, 97, 114, 116
   \              74617274    
   \   0000000A   204C6F636174       DC8 32, 76, 111, 99, 97, 116, 105, 111, 110, 0
   \              696F6E00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Race Screens">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   526163652053       DC8 82, 97, 99, 101, 32, 83, 99, 114, 101, 101
   \              63726565    
   \   0000000A   6E7300000000       DC8 110, 115, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Menu Screens">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D656E752053       DC8 77, 101, 110, 117, 32, 83, 99, 114, 101, 101
   \              63726565    
   \   0000000A   6E7300000000       DC8 110, 115, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Start Speed %s">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   537461727420       DC8 83, 116, 97, 114, 116, 32, 83, 112, 101, 101
   \              53706565    
   \   0000000A   642025730000       DC8 100, 32, 37, 115, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Stop Time %s">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53746F702054       DC8 83, 116, 111, 112, 32, 84, 105, 109, 101, 32
   \              696D6520    
   \   0000000A   257300000000       DC8 37, 115, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Startup Settings">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   537461727475       DC8 83, 116, 97, 114, 116, 117, 112, 32, 83, 101
   \              70205365    
   \   0000000A   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Disables Power Button">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   44697361626C       DC8 68, 105, 115, 97, 98, 108, 101, 115, 32, 80
   \              65732050    
   \   0000000A   6F7765722042       DC8 111, 119, 101, 114, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   00000014   6E000000           DC8 110, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select Record">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 82, 101, 99
   \              20526563    
   \   0000000A   6F7264000000       DC8 111, 114, 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Start Speed">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   537461727420       DC8 83, 116, 97, 114, 116, 32, 83, 112, 101, 101
   \              53706565    
   \   0000000A   6400               DC8 100, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Stop Time">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   53746F702054       DC8 83, 116, 111, 112, 32, 84, 105, 109, 101, 0
   \              696D6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%d min">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2564206D696E       DC8 37, 100, 32, 109, 105, 110, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Backlight">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4261636B6C69       DC8 66, 97, 99, 107, 108, 105, 103, 104, 116, 0
   \              67687400    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LED Intensity">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4C454420496E       DC8 76, 69, 68, 32, 73, 110, 116, 101, 110, 115
   \              74656E73    
   \   0000000A   697479000000       DC8 105, 116, 121, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto-Adjust">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4175746F2D41       DC8 65, 117, 116, 111, 45, 65, 100, 106, 117, 115
   \              646A7573    
   \   0000000A   7400               DC8 116, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select GMT Offset">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 71, 77, 84
   \              20474D54    
   \   0000000A   204F66667365       DC8 32, 79, 102, 102, 115, 101, 116, 0, 0, 0
   \              74000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Indoor Testing">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   496E646F6F72       DC8 73, 110, 100, 111, 111, 114, 32, 84, 101, 115
   \              20546573    
   \   0000000A   74696E670000       DC8 116, 105, 110, 103, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TraqDash Owner">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 115, 104, 32, 79
   \              7368204F    
   \   0000000A   776E65720000       DC8 119, 110, 101, 114, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Contact Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   436F6E746163       DC8 67, 111, 110, 116, 97, 99, 116, 32, 73, 110
   \              7420496E    
   \   0000000A   666F00000000       DC8 102, 111, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "WARNING">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5741524E494E       DC8 87, 65, 82, 78, 73, 78, 71, 0
   \              4700        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "About to Erase All Se...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   41626F757420       DC8 65, 98, 111, 117, 116, 32, 116, 111, 32, 69
   \              746F2045    
   \   0000000A   726173652041       DC8 114, 97, 115, 101, 32, 65, 108, 108, 32, 83
   \              6C6C2053    
   \   00000014   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 115, 33, 0, 0
   \              73210000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Are you sure?">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   41726520796F       DC8 65, 114, 101, 32, 121, 111, 117, 32, 115, 117
   \              75207375    
   \   0000000A   72653F000000       DC8 114, 101, 63, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WiFi Name">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   57694669204E       DC8 87, 105, 70, 105, 32, 78, 97, 109, 101, 0
   \              616D6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "WiFi Password">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   576946692050       DC8 87, 105, 70, 105, 32, 80, 97, 115, 115, 119
   \              61737377    
   \   0000000A   6F7264000000       DC8 111, 114, 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Temp">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   54656D700000       DC8 84, 101, 109, 112, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Date">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   446174650000       DC8 68, 97, 116, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "YES">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   59455300           DC8 89, 69, 83, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "CANCEL">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   43414E43454C       DC8 67, 65, 78, 67, 69, 76, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "About to enable GPS s...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   41626F757420       DC8 65, 98, 111, 117, 116, 32, 116, 111, 32, 101
   \              746F2065    
   \   0000000A   6E61626C6520       DC8 110, 97, 98, 108, 101, 32, 71, 80, 83, 32
   \              47505320    
   \   00000014   73696D756C61       DC8 115, 105, 109, 117, 108, 97, 116, 105, 111, 110
   \              74696F6E    
   \   0000001E   206D6F646500       DC8 32, 109, 111, 100, 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\r\\n\\r\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0D0A0D0A0000       DC8 13, 10, 13, 10, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Serial # %u">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   53657269616C       DC8 83, 101, 114, 105, 97, 108, 32, 35, 32, 37
   \              20232025    
   \   0000000A   7500               DC8 117, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Built week %02u, 20%0...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   4275696C7420       DC8 66, 117, 105, 108, 116, 32, 119, 101, 101, 107
   \              7765656B    
   \   0000000A   20253032752C       DC8 32, 37, 48, 50, 117, 44, 32, 50, 48, 37
   \              20323025    
   \   00000014   3032750A0D00       DC8 48, 50, 117, 10, 13, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "CAL %d%s = %d">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   43414C202564       DC8 67, 65, 76, 32, 37, 100, 37, 115, 32, 61
   \              2573203D    
   \   0000000A   202564000000       DC8 32, 37, 100, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "used for camera or dy...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   757365642066       DC8 117, 115, 101, 100, 32, 102, 111, 114, 32, 99
   \              6F722063    
   \   0000000A   616D65726120       DC8 97, 109, 101, 114, 97, 32, 111, 114, 32, 100
   \              6F722064    
   \   00000014   796E6F207465       DC8 121, 110, 111, 32, 116, 101, 115, 116, 105, 110
   \              7374696E    
   \   0000001E   672E00000000       DC8 103, 46, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "About to delete session">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   41626F757420       DC8 65, 98, 111, 117, 116, 32, 116, 111, 32, 100
   \              746F2064    
   \   0000000A   656C65746520       DC8 101, 108, 101, 116, 101, 32, 115, 101, 115, 115
   \              73657373    
   \   00000014   696F6E00           DC8 105, 111, 110, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "About to Restore All ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   41626F757420       DC8 65, 98, 111, 117, 116, 32, 116, 111, 32, 82
   \              746F2052    
   \   0000000A   6573746F7265       DC8 101, 115, 116, 111, 114, 101, 32, 65, 108, 108
   \              20416C6C    
   \   00000014   205365747469       DC8 32, 83, 101, 116, 116, 105, 110, 103, 115, 33
   \              6E677321    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "STATUS">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   535441545553       DC8 83, 84, 65, 84, 85, 83, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Restored to factory s...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   526573746F72       DC8 82, 101, 115, 116, 111, 114, 101, 100, 32, 116
   \              65642074    
   \   0000000A   6F2066616374       DC8 111, 32, 102, 97, 99, 116, 111, 114, 121, 32
   \              6F727920    
   \   00000014   73657474696E       DC8 115, 101, 116, 116, 105, 110, 103, 115, 46, 0
   \              67732E00    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OK">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4B0000           DC8 79, 75, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "About to Format SD card!">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   41626F757420       DC8 65, 98, 111, 117, 116, 32, 116, 111, 32, 70
   \              746F2046    
   \   0000000A   6F726D617420       DC8 111, 114, 109, 97, 116, 32, 83, 68, 32, 99
   \              53442063    
   \   00000014   617264210000       DC8 97, 114, 100, 33, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ERROR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4552524F5200       DC8 69, 82, 82, 79, 82, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Cannot read SD card!">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   43616E6E6F74       DC8 67, 97, 110, 110, 111, 116, 32, 114, 101, 97
   \              20726561    
   \   0000000A   642053442063       DC8 100, 32, 83, 68, 32, 99, 97, 114, 100, 33
   \              61726421    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Format Required!">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   466F726D6174       DC8 70, 111, 114, 109, 97, 116, 32, 82, 101, 113
   \              20526571    
   \   0000000A   756972656421       DC8 117, 105, 114, 101, 100, 33, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "FORMAT">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   464F524D4154       DC8 70, 79, 82, 77, 65, 84, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Working!">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   576F726B696E       DC8 87, 111, 114, 107, 105, 110, 103, 33, 0, 0
   \              67210000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "All sessions erased">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   416C6C207365       DC8 65, 108, 108, 32, 115, 101, 115, 115, 105, 111
   \              7373696F    
   \   0000000A   6E7320657261       DC8 110, 115, 32, 101, 114, 97, 115, 101, 100, 0
   \              73656400    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Formatting!">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466F726D6174       DC8 70, 111, 114, 109, 97, 116, 116, 105, 110, 103
   \              74696E67    
   \   0000000A   2100               DC8 33, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Erasing session(s)!">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   45726173696E       DC8 69, 114, 97, 115, 105, 110, 103, 32, 115, 101
   \              67207365    
   \   0000000A   7373696F6E28       DC8 115, 115, 105, 111, 110, 40, 115, 41, 33, 0
   \              73292100    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Loading session data.">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4C6F6164696E       DC8 76, 111, 97, 100, 105, 110, 103, 32, 115, 101
   \              67207365    
   \   0000000A   7373696F6E20       DC8 115, 115, 105, 111, 110, 32, 100, 97, 116, 97
   \              64617461    
   \   00000014   2E000000           DC8 46, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Please wait.">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   506C65617365       DC8 80, 108, 101, 97, 115, 101, 32, 119, 97, 105
   \              20776169    
   \   0000000A   742E00000000       DC8 116, 46, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Formatting complete!">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   466F726D6174       DC8 70, 111, 114, 109, 97, 116, 116, 105, 110, 103
   \              74696E67    
   \   0000000A   20636F6D706C       DC8 32, 99, 111, 109, 112, 108, 101, 116, 101, 33
   \              65746521    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Formatting FAILED!">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   466F726D6174       DC8 70, 111, 114, 109, 97, 116, 116, 105, 110, 103
   \              74696E67    
   \   0000000A   204641494C45       DC8 32, 70, 65, 73, 76, 69, 68, 33, 0, 0
   \              44210000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ON">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4E0000           DC8 79, 78, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OFF">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F464600           DC8 79, 70, 70, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "and">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   616E6400           DC8 97, 110, 100, 0

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "\\\\">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   5C00               DC8 92, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "S/N">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   532F4E00           DC8 83, 47, 78, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "\\r\\n">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   0D0A0000           DC8 13, 10, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "C">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   4300               DC8 67, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "F">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   4600               DC8 70, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Settings Warning">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53657474696E       DC8 83, 101, 116, 116, 105, 110, 103, 115, 32, 87
   \              67732057    
   \   0000000A   61726E696E67       DC8 97, 114, 110, 105, 110, 103, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "You have changed WiFi...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   596F75206861       DC8 89, 111, 117, 32, 104, 97, 118, 101, 32, 99
   \              76652063    
   \   0000000A   68616E676564       DC8 104, 97, 110, 103, 101, 100, 32, 87, 105, 70
   \              20576946    
   \   00000014   692073657474       DC8 105, 32, 115, 101, 116, 116, 105, 110, 103, 115
   \              696E6773    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "which requires a powe...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   776869636820       DC8 119, 104, 105, 99, 104, 32, 114, 101, 113, 117
   \              72657175    
   \   0000000A   697265732061       DC8 105, 114, 101, 115, 32, 97, 32, 112, 111, 119
   \              20706F77    
   \   00000014   657220637963       DC8 101, 114, 32, 99, 121, 99, 108, 101, 46, 0
   \              6C652E00    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Would you like to res...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   576F756C6420       DC8 87, 111, 117, 108, 100, 32, 121, 111, 117, 32
   \              796F7520    
   \   0000000A   6C696B652074       DC8 108, 105, 107, 101, 32, 116, 111, 32, 114, 101
   \              6F207265    
   \   00000014   736574206E6F       DC8 115, 101, 116, 32, 110, 111, 119, 63, 0, 0
   \              773F0000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NO">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4E4F0000           DC8 78, 79, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%d">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25640000           DC8 37, 100, 0, 0
   2046          
   2047          
   2048          /*************************** End of file ****************************/
   2049          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AutoStartSelectionPaint            48
     ClearNameStruct                     0
     DeleteSystemSettingsPopUp           8
     DisplayAutoStartSelection          40
     DisplayDisplaySelection            40
     DisplayLapMeter                    16
     DisplayPersonalizationScreen       16
     DisplayRecordSpeed                 48
     DisplaySelectionPaint              16
     DisplayStorageSelection            32
     DisplayTimeSelection               40
     DisplayUnitsSelection              48
     EraseAllSessions                  384
     FormatSDCard                       16
     GetAutoOnText                       0
     GetDaylightSavingsStr               0
     GetGPSSimulateStr                   0
     GetLapMeterText                     0
     GetRecordSpeed                      0
     GetRecordSpeedString                0
     GetRecordStopTime                   0
     GetRecordStopTimeString             8
     GetSystemSettingsWindowHandle       0
     LapMeterPaint                       8
     PaintRecordSpeed                    8
     PersonalizationCB                  64
     PersonalizeScreenExit              24
     RestoreFactoryDefaults              8
     ReturnToPersonalizationScreen     144
     SSSButtonToScreenID                 0
     SetCurrentTempButtonText           64
     SetRecordSpeed                      0
     SetRecordStopTime                   0
     SetSystemSettingsWindowHandle       0
     StorageSelectionPaint               8
     SystemSettingsIgnoreNextKeyRelease
                                         0
     SystemSettingsPopUp                40
     SystemSettingsScreensCallback      24
     TimeSelectionPaint                  8
     UnitsSelectionPaint                 8
     ValidSessionFileName                0
     WiFiChangedPopUp                   16
     nonModalPopupCallback              16
     setOnOffButtonColors               16


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     systemSettingsPopupScreen                 8
     modalWindowUp
     KMCDialogSemaphore                        4
     hAutoOnButton                            12
     hAutoStartButton
     hRecordStartSpeedButton
     SystemSettingsScreenList                400
     hPersonalizationScreen
     hSystemSettingsScreens
     clickedOnThisScreen
     hTimeWheel
     hBacklightSlider
     hIntensitySlider
     hStdCheck
     hMetricCheck
     hOnBtn
     hOffBtn
     firstTimeThrough
     hCurrentTempButton
     hPersonalizeText
     intensityIgnore
     backlightIgnore
     gpsSimulate
     StdTimeZones
     DstTimeZones
     initialName
     initialPass
     LapMeter                                 28
     hLapMeterListWheel
     hRecordSpeedWheel                       128
     hStopTimeWheel
     RecordSpeed
     RecordSpeedMetric
     StopTime
     GetSystemSettingsWindowHandle            12
     SetSystemSettingsWindowHandle            12
     SystemSettingsScreensCallback          1996
     DisplayLapMeter                          68
     DisplayDisplaySelection                 488
     setOnOffButtonColors                    172
     DisplayAutoStartSelection               420
     GetAutoOnText                            80
     GetLapMeterText                          20
     DisplayUnitsSelection                   504
     GetGPSSimulateStr                        40
     GetDaylightSavingsStr                    40
     DisplayTimeSelection                    496
     DisplayStorageSelection                 280
     LapMeterPaint                            80
     AutoStartSelectionPaint                1056
     PaintRecordSpeed                        196
     GetRecordStopTime                        48
     SetRecordStopTime                        48
     GetRecordStopTimeString                  96
     timeStr                                  12
     GetRecordSpeed                           16
     SetRecordSpeed                           28
     DisplayRecordSpeed                      492
     GetRecordSpeedString                    344
     DisplaySelectionPaint                   356
     UnitsSelectionPaint                     184
     TimeSelectionPaint                      144
     StorageSelectionPaint                    64
     SystemSettingsIgnoreNextKeyRelease
                                              16
     EraseAllResources                       120
     GPSSimulateResources                    144
     EraseSessionResources                   120
     FactoryDefaultsResources                120
     FactoryDefaultsRestoredResources
                                              72
     FormatSDResources                       120
     InvalidSDResources                      120
     FormattingSDResources                    72
     AllSessionsErasedResources               72
     RealFormattingSDResources                48
     ErasingSessionsResources                 48
     LoadingSessionsResources                 72
     FormattingCompleteResources              72
     FormattingFailedResources                72
     SystemSettingsPopUp                     892
     DeleteSystemSettingsPopUp                32
     nonModalPopupCallback                   184
     FormatSDCard                            144
     RestoreFactoryDefaults                  180
     EraseAllSessions                        264
     ClearNameStruct                          40
     ValidSessionFileName                     64
     PersonalizationCB                       460
     DisplayPersonalizationScreen             52
     ReturnToPersonalizationScreen          1732
     PersonalizeScreenExit                   136
     WiFiChangedPopUp                         64
     WiFiChanged                             144
     SetCurrentTempButtonText                 68
     SSSButtonToScreenID                     100
     ??DataTable173                            4
     ??DataTable176                            4
     ??DataTable178                            4
     ??DataTable179                            4
     ??DataTable180                            4
     ??DataTable181                            4
     ??DataTable181_1                          4
     ??DataTable181_2                          4
     ??DataTable182                            4
     ??DataTable182_1                          4
     ??DataTable182_2                          4
     ??DataTable184                            4
     ??DataTable184_1                          4
     ??DataTable184_2                          4
     ??DataTable184_3                          4
     ??DataTable185                            4
     ??DataTable185_1                          4
     ??DataTable191                            4
     ??DataTable191_1                          4
     ??DataTable191_2                          4
     ??DataTable192                            4
     ??DataTable192_1                          4
     ??DataTable192_2                          4
     ??DataTable194                            4
     ??DataTable194_1                          4
     ??DataTable194_2                          4
     ??DataTable198                            4
     ??DataTable198_1                          4
     ??DataTable198_2                          4
     ??DataTable198_3                          4
     ??DataTable198_4                          4
     ??DataTable198_5                          4
     ??DataTable198_6                          4
     ??DataTable198_7                          4
     ??DataTable198_8                          4
     ??DataTable198_9                          4
     ??DataTable198_10                         4
     ??DataTable198_11                         4
     ??DataTable198_12                         4
     ??DataTable198_13                         4
     ??DataTable202                            4
     ??DataTable203                            4
     ??DataTable203_1                          4
     ??DataTable203_2                          4
     ??DataTable205                            4
     ??DataTable205_1                          4
     ??DataTable207                            4
     ??DataTable207_1                          4
     ??DataTable207_2                          4
     ??DataTable207_3                          4
     ??DataTable207_4                          4
     ??DataTable207_5                          4
     ??DataTable207_6                          4
     ??DataTable207_7                          4
     ??DataTable207_8                          4
     ??DataTable207_9                          4
     ??DataTable207_10                         4
     ??DataTable207_11                         4
     ??DataTable207_12                         4
     ??DataTable207_13                         4
     ??DataTable207_14                         4
     ??DataTable207_15                         4
     ??DataTable207_16                         4
     ??DataTable210                            4
     ??DataTable210_1                          4
     ??DataTable211                            4
     ??DataTable211_1                          4
     ??DataTable211_2                          4
     ??DataTable211_3                          4
     ??DataTable211_4                          4
     ??DataTable211_5                          4
     ??DataTable211_6                          4
     ??DataTable211_7                          4
     ??DataTable211_8                          4
     ??DataTable211_9                          4
     ??DataTable211_10                         4
     ??DataTable211_11                         4
     ??DataTable211_12                         4
     ??DataTable211_13                         4
     ??DataTable211_14                         4
     ??DataTable211_15                         4
     ??DataTable211_16                         4
     ??DataTable211_17                         4
     ??DataTable211_18                         4
     ??DataTable211_19                         4
     ??DataTable211_20                         4
     ??DataTable211_21                         4
     ??DataTable211_22                         4
     ??DataTable211_23                         4
     ?<Constant "0.5 sec">                     8
     ?<Constant "1 sec">                       8
     ?<Constant "2 sec">                       8
     ?<Constant "5 sec">                       8
     ?<Constant "10 sec">                      8
     ?<Constant "1 min">                       8
     ?<Constant "2 min">                       8
     ?<Constant "3 min">                       8
     ?<Constant "4 min">                       8
     ?<Constant "5 min">                       8
     ?<Constant "6 min">                       8
     ?<Constant "7 min">                       8
     ?<Constant "8 min">                       8
     ?<Constant "9 min">                       8
     ?<Constant "10 min">                      8
     ?<Constant "-12">                         4
     ?<Constant "-11">                         4
     ?<Constant "-10">                         4
     ?<Constant "-9 Alaska">                  12
     ?<Constant "-8 Pacific">                 12
     ?<Constant "-7 Mountain">                12
     ?<Constant "-6 Central">                 12
     ?<Constant "-5 Eastern">                 12
     ?<Constant "-4 Atlantic">                12
     ?<Constant "-3 Greenland">               16
     ?<Constant "-2">                          4
     ?<Constant "-1">                          4
     ?<Constant "0 London">                   12
     ?<Constant "+1 Paris, Rome">             16
     ?<Constant "+2 Athens">                  12
     ?<Constant "+3 Moscow">                  12
     ?<Constant "+4">                          4
     ?<Constant "+5">                          4
     ?<Constant "+6">                          4
     ?<Constant "+7">                          4
     ?<Constant "+8 Beijing">                 12
     ?<Constant "+9 Tokyo, Seoul">            16
     ?<Constant "+10 Melbourne">              16
     ?<Constant "+11">                         4
     ?<Constant "+12 New Zealand">            16
     ?<Constant "-9">                          4
     ?<Constant "-8 Alaska">                  12
     ?<Constant "-7 Pacific">                 12
     ?<Constant "-6 Mountain">                12
     ?<Constant "-5 Central">                 12
     ?<Constant "-4 Eastern">                 12
     ?<Constant "-3 Atlantic">                12
     ?<Constant "-2 Greenland">               16
     ?<Constant "0">                           2
     ?<Constant "+1 London">                  12
     ?<Constant "+2 Paris, Rome">             16
     ?<Constant "+3 Athens">                  12
     ?<Constant "+4 Moscow">                  12
     ?<Constant "+8">                          4
     ?<Constant "+9 Beijing">                 12
     ?<Constant "+10 Tokyo, Seoul">           20
     ?<Constant "+11 Melbourne">              16
     ?<Constant "+12">                         4
     ?<Constant "-12 New Zealand">            16
     ?<Constant "Disabled">                   12
     ?<Constant "20 mph">                      8
     ?<Constant "25 mph">                      8
     ?<Constant "30 mph">                      8
     ?<Constant "35 mph">                      8
     ?<Constant "40 mph">                      8
     ?<Constant "45 mph">                      8
     ?<Constant "50 mph">                      8
     ?<Constant "32 kph">                      8
     ?<Constant "40 kph">                      8
     ?<Constant "48 kph">                      8
     ?<Constant "56 kph">                      8
     ?<Constant "64 kph">                      8
     ?<Constant "72 kph">                      8
     ?<Constant "80 kph">                      8
     ?<Constant "Graph Scale">                12
     ?<Constant "Auto Power On">              16
     ?<Constant "Auto Start">                 12
     ?<Constant "Record Settings">            16
     ?<Constant "Not Supported by SU">        20
     ?<Constant "Auto On with Power">         20
     ?<Constant "Turns on with Button">       24
     ?<Constant "  US Standard">              16
     ?<Constant "  Metric">                   12
     ?<Constant "Simulating GPS">             16
     ?<Constant "Normal GPS">                 12
     ?<Constant "Daylight Savings On">        20
     ?<Constant "Daylight Savings Off">       24
     ?<Constant "Current Settings">           20
     ?<Constant "Power On Control">           20
     ?<Constant "Auto Start Location">        20
     ?<Constant "Race Screens">               16
     ?<Constant "Menu Screens">               16
     ?<Constant "Start Speed %s">             16
     ?<Constant "Stop Time %s">               16
     ?<Constant "Startup Settings">           20
     ?<Constant "Disables Power Button">      24
     ?<Constant "Select Record">              16
     ?<Constant "Start Speed">                12
     ?<Constant "Stop Time">                  12
     ?<Constant "%d min">                      8
     ?<Constant "Backlight">                  12
     ?<Constant "LED Intensity">              16
     ?<Constant "Auto-Adjust">                12
     ?<Constant "Select GMT Offset">          20
     ?<Constant "Indoor Testing">             16
     ?<Constant "TraqDash Owner">             16
     ?<Constant "Contact Info">               16
     ?<Constant "WARNING">                     8
     ?<Constant "About to Erase All Se...">   32
     ?<Constant "Are you sure?">              16
     ?<Constant "WiFi Name">                  12
     ?<Constant "WiFi Password">              16
     ?<Constant "Temp">                        8
     ?<Constant "Date">                        8
     ?<Constant "YES">                         4
     ?<Constant "CANCEL">                      8
     ?<Constant "About to enable GPS s...">   36
     ?<Constant "\r\n\r\n">                    8
     ?<Constant "Serial # %u">                12
     ?<Constant "Built week %02u, 20%0...">   28
     ?<Constant "CAL %d%s = %d">              16
     ?<Constant "used for camera or dy...">   36
     ?<Constant "About to delete session">    24
     ?<Constant "About to Restore All ...">   32
     ?<Constant "STATUS">                      8
     ?<Constant "Restored to factory s...">   32
     ?<Constant "OK">                          4
     ?<Constant "About to Format SD card!">   28
     ?<Constant "ERROR">                       8
     ?<Constant "Cannot read SD card!">       24
     ?<Constant "Format Required!">           20
     ?<Constant "FORMAT">                      8
     ?<Constant "Working!">                   12
     ?<Constant "All sessions erased">        20
     ?<Constant "Formatting!">                12
     ?<Constant "Erasing session(s)!">        20
     ?<Constant "Loading session data.">      24
     ?<Constant "Please wait.">               16
     ?<Constant "Formatting complete!">       24
     ?<Constant "Formatting FAILED!">         20
     ?<Constant "ON">                          4
     ?<Constant "OFF">                         4
     ?<Constant "and">                         4
     ?<Constant "">                            1
     ?<Constant "\\">                          2
     ?<Constant "S/N">                         4
     ?<Constant "\r\n">                        4
     ?<Constant "C">                           2
     ?<Constant "F">                           2
     ?<Constant "Settings Warning">           20
     ?<Constant "You have changed WiFi...">   32
     ?<Constant "which requires a powe...">   32
     ?<Constant "Would you like to res...">   32
     ?<Constant "NO">                          4
     ?<Constant "%d">                          4

 
     36 bytes in section .bss
    556 bytes in section .data
  1 205 bytes in section .rodata
 14 756 bytes in section .text
 
 14 756 bytes of CODE  memory
  1 205 bytes of CONST memory
    592 bytes of DATA  memory

Errors: none
Warnings: none
