###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:08:15 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\MENU_GetItemText.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\MENU_GetItemText.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\MENU_GetItemText.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\MENU_GetItemText.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\MENU_GetItemText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MENU_GetItemText.c
     19          Purpose     : Implementation of menu widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "MENU.h"
     26          #include "MENU_Private.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *       Public code
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       MENU_GetItemText
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          void MENU_GetItemText(MENU_Handle hObj, U16 ItemId, char * pBuffer, unsigned BufferSize) {
   \                     MENU_GetItemText:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
   \   00000004   0240A0E1           MOV      R4,R2
     41            if (hObj && pBuffer) {
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0160A0E1           MOV      R6,R1
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   00005413           CMPNE    R4,#+0
   \   0000001C   1500000A           BEQ      ??MENU_GetItemText_0
     42              int Index;
     43              WM_LOCK();
   \   00000020   ........           BL       GUI_Lock
     44              Index = MENU__FindItem(hObj, ItemId, &hObj);
   \   00000024   04208DE2           ADD      R2,SP,#+4
   \   00000028   0610A0E1           MOV      R1,R6
   \   0000002C   04009DE5           LDR      R0,[SP, #+4]
   \   00000030   ........           BL       MENU__FindItem
   \   00000034   0060B0E1           MOVS     R6,R0
     45              if (Index >= 0) {
   \   00000038   0D00004A           BMI      ??MENU_GetItemText_1
     46                MENU_Obj *  pObj;
     47                MENU_ITEM * pItem;
     48                pObj  = MENU_LOCK_H(hObj);
   \   0000003C   04009DE5           LDR      R0,[SP, #+4]
   \   00000040   ........           BL       GUI_ALLOC_LockH
     49                pItem = (MENU_ITEM *)GUI_ARRAY_GetpItemLocked(pObj->ItemArray, Index);
   \   00000044   0610A0E1           MOV      R1,R6
   \   00000048   640090E5           LDR      R0,[R0, #+100]
   \   0000004C   ........           BL       GUI_ARRAY_GetpItemLocked
     50                strncpy(pBuffer, pItem->acText, BufferSize);
   \   00000050   0C1080E2           ADD      R1,R0,#+12
   \   00000054   0520A0E1           MOV      R2,R5
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       strncpy
     51                GUI_UNLOCK_H(pItem);
   \   00000060   ........           BL       GUI_ALLOC_UnlockH
     52                GUI_UNLOCK_H(pObj);
   \   00000064   ........           BL       GUI_ALLOC_UnlockH
     53                pBuffer[BufferSize - 1] = 0;
   \   00000068   040085E0           ADD      R0,R5,R4
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   011040E5           STRB     R1,[R0, #-1]
     54              }
     55              WM_UNLOCK();
   \                     ??MENU_GetItemText_1:
   \   00000074   ........           BL       GUI_Unlock
     56            }
     57          }
   \                     ??MENU_GetItemText_0:
   \   00000078   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000007C   7080BDE8           POP      {R4-R6,PC}       ;; return
     58          
     59          #else  /* avoid empty object files */
     60            void MENU_GetItemText_C(void) {}
     61          #endif
     62          
     63          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     MENU_GetItemText     24


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     MENU_GetItemText  128

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
