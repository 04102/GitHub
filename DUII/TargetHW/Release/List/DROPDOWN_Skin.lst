###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:33 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\DROPDOWN_Skin.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\DROPDOWN_Skin.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\DROPDOWN_Skin.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\DROPDOWN_Skin.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\DROPDOWN_Skin.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : DROPDOWN_Skin.c
     19          Purpose     : Implementation of framewindow widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "DROPDOWN_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _Paint
     38          */

   \                                 In section .text, align 4, keep-with-next
     39          static void _Paint(DROPDOWN_Handle hObj) {
   \                     _Paint:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   28D04DE2           SUB      SP,SP,#+40
   \   00000008   0050A0E1           MOV      R5,R0
     40            DROPDOWN_Obj * pObj;
     41            WIDGET_DRAW_ITEM_FUNC * pfDrawSkin;
     42            WIDGET_ITEM_DRAW_INFO ItemInfo;
     43            GUI_RECT RectClient;
     44            int Sel;
     45            const char * s;
     46          
     47            //
     48            // Get properties
     49            //
     50            pObj = DROPDOWN_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
     51            pfDrawSkin = pObj->Props.SkinPrivate.pfDrawSkin;
   \   00000010   7C4090E5           LDR      R4,[R0, #+124]
     52            Sel = pObj->Sel;
   \   00000014   F463D0E1           LDRSH    R6,[R0, #+52]
     53            GUI_UNLOCK_H(pObj);
   \   00000018   ........           BL       GUI_ALLOC_UnlockH
     54            WM_GetClientRectEx(hObj, &RectClient);
   \   0000001C   0D10A0E1           MOV      R1,SP
   \   00000020   0500A0E1           MOV      R0,R5
   \   00000024   ........           BL       WM_GetClientRectEx
     55            //
     56            // Draw background
     57            //
     58            ItemInfo.Cmd  = WIDGET_ITEM_DRAW_BACKGROUND;
   \   00000028   0310A0E3           MOV      R1,#+3
   \   0000002C   0C108DE5           STR      R1,[SP, #+12]
     59            ItemInfo.hWin = hObj;
     60            ItemInfo.x0   = RectClient.x0;
   \   00000030   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000034   08508DE5           STR      R5,[SP, #+8]
     61            ItemInfo.y0   = RectClient.y0;
     62            ItemInfo.x1   = RectClient.x1;
     63            ItemInfo.y1   = RectClient.y1;
     64            pfDrawSkin(&ItemInfo);
   \   00000038   08008DE2           ADD      R0,SP,#+8
   \   0000003C   14108DE5           STR      R1,[SP, #+20]
   \   00000040   F210DDE1           LDRSH    R1,[SP, #+2]
   \   00000044   18108DE5           STR      R1,[SP, #+24]
   \   00000048   F410DDE1           LDRSH    R1,[SP, #+4]
   \   0000004C   1C108DE5           STR      R1,[SP, #+28]
   \   00000050   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000054   20108DE5           STR      R1,[SP, #+32]
   \   00000058   34FF2FE1           BLX      R4
     65            //
     66            // Draw text
     67            //
     68            s = DROPDOWN__GetpItemLocked(hObj, Sel);
   \   0000005C   0610A0E1           MOV      R1,R6
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   ........           BL       DROPDOWN__GetpItemLocked
     69            if (s) {
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0500000A           BEQ      ??_Paint_0
     70              ItemInfo.Cmd = WIDGET_ITEM_DRAW_TEXT;
   \   00000070   1020A0E3           MOV      R2,#+16
     71              ItemInfo.p   = (void *)s;
   \   00000074   24008DE5           STR      R0,[SP, #+36]
   \   00000078   0C208DE5           STR      R2,[SP, #+12]
     72              pfDrawSkin(&ItemInfo);
   \   0000007C   08008DE2           ADD      R0,SP,#+8
   \   00000080   34FF2FE1           BLX      R4
     73              GUI_UNLOCK_H(s);
   \   00000084   ........           BL       GUI_ALLOC_UnlockH
     74            }
     75            //
     76            // Draw arrow
     77            //
     78            ItemInfo.Cmd = WIDGET_ITEM_DRAW_ARROW;
   \                     ??_Paint_0:
   \   00000088   0210A0E3           MOV      R1,#+2
   \   0000008C   0C108DE5           STR      R1,[SP, #+12]
     79            pfDrawSkin(&ItemInfo);
   \   00000090   08008DE2           ADD      R0,SP,#+8
   \   00000094   34FF2FE1           BLX      R4
     80          }
   \   00000098   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   0000009C   7080BDE8           POP      {R4-R6,PC}       ;; return
     81          
     82          /*********************************************************************
     83          *
     84          *       _Create
     85          */

   \                                 In section .text, align 4, keep-with-next
     86          static void _Create(DROPDOWN_Handle hObj) {
   \                     _Create:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0040A0E1           MOV      R4,R0
     87            DROPDOWN_Obj * pObj;
     88            DROPDOWN_SKIN_PRIVATE * pSkinPrivate;
     89            WIDGET_ITEM_DRAW_INFO ItemInfo;
     90          
     91            //
     92            // Get properties
     93            //
     94            pObj = DROPDOWN_LOCK_H(hObj);
     95            pSkinPrivate = (DROPDOWN_SKIN_PRIVATE *)pObj->pWidgetSkin->pSkinPrivate;
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   840090E5           LDR      R0,[R0, #+132]
   \   00000014   085090E5           LDR      R5,[R0, #+8]
     96            GUI_UNLOCK_H(pObj);
   \   00000018   ........           BL       GUI_ALLOC_UnlockH
     97            //
     98            // Create
     99            //
    100            ItemInfo.Cmd = WIDGET_ITEM_CREATE;
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   04108DE5           STR      R1,[SP, #+4]
    101            ItemInfo.hWin = hObj;
   \   00000024   00408DE5           STR      R4,[SP, #+0]
    102            pSkinPrivate->pfDrawSkin(&ItemInfo);
   \   00000028   0D00A0E1           MOV      R0,SP
   \   0000002C   001095E5           LDR      R1,[R5, #+0]
   \   00000030   31FF2FE1           BLX      R1
    103          }
   \   00000034   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000038   3080BDE8           POP      {R4,R5,PC}       ;; return
    104          
    105          /*********************************************************************
    106          *
    107          *        Private data
    108          *
    109          **********************************************************************
    110          */
    111          /*********************************************************************
    112          *
    113          *       _Skin
    114          */

   \                                 In section .data, align 4
    115          static WIDGET_SKIN _Skin = {
   \                     _Skin:
   \   00000000   ............       DC32 _Paint, _Create, DROPDOWN__DefaultProps + 30H
   \              ............
    116            _Paint,
    117            _Create,
    118            &DROPDOWN__DefaultProps.SkinPrivate
    119          };
    120          
    121          /*********************************************************************
    122          *
    123          *        Public code
    124          *
    125          **********************************************************************
    126          */
    127          /*********************************************************************
    128          *
    129          *       DROPDOWN_SetSkin
    130          */

   \                                 In section .text, align 4, keep-with-next
    131          void DROPDOWN_SetSkin(DROPDOWN_Handle hObj, WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
   \                     DROPDOWN_SetSkin:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
    132            DROPDOWN_Obj * pObj;
    133          
    134            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
    135            pObj = DROPDOWN_LOCK_H(hObj);
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_LockH
    136            //
    137            // Enable skinning
    138            //
    139            pObj->pWidgetSkin = &_Skin;
   \   0000001C   ........           LDR      R1,??DataTable1
   \   00000020   841080E5           STR      R1,[R0, #+132]
    140            //
    141            // Set private callback function
    142            //
    143            pObj->Props.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   00000024   7C5080E5           STR      R5,[R0, #+124]
    144            GUI_UNLOCK_H(pObj);
   \   00000028   ........           BL       GUI_ALLOC_UnlockH
    145            //
    146            // Invalidate widget
    147            //
    148            WM_SetHasTrans(hObj);
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       WM_SetHasTrans
    149            WM_InvalidateWindow(hObj);
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM_InvalidateWindow
    150            WM_UNLOCK();
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3040BDE8           POP      {R4,R5,LR}
   \   00000044   ........           B        GUI_Unlock       ;; tailcall
    151          }
    152          
    153          /*********************************************************************
    154          *
    155          *       DROPDOWN_SetDefaultSkin
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          void DROPDOWN_SetDefaultSkin(WIDGET_DRAW_ITEM_FUNC * pfDrawSkin) {
    158            DROPDOWN__pSkinDefault = &_Skin;
   \                     DROPDOWN_SetDefaultSkin:
   \   00000000   ........           LDR      R1,??DataTable1_1
   \   00000004   ........           LDR      R2,??DataTable1
   \   00000008   002081E5           STR      R2,[R1, #+0]
    159            DROPDOWN__DefaultProps.SkinPrivate.pfDrawSkin = pfDrawSkin;
   \   0000000C   ........           LDR      R1,??DataTable1_2
   \   00000010   300081E5           STR      R0,[R1, #+48]
    160          }
   \   00000014   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _Skin

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     DROPDOWN__pSkinDefault

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     DROPDOWN__DefaultProps
    161          
    162          #else
    163            void DROPDOWN_Skin_C(void);
    164            void DROPDOWN_Skin_C(void) {} /* avoid empty object files */
    165          #endif /* GUI_WINSUPPORT */
    166          
    167          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     DROPDOWN_SetDefaultSkin      0
     DROPDOWN_SetSkin            16
     _Create                     48
     _Paint                      56


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     _Paint                   160
     _Create                   60
     _Skin                     12
     DROPDOWN_SetSkin          72
     DROPDOWN_SetDefaultSkin   24
     ??DataTable1               4
     ??DataTable1_1             4
     ??DataTable1_2             4

 
  12 bytes in section .data
 328 bytes in section .text
 
 328 bytes of CODE memory
  12 bytes of DATA memory

Errors: none
Warnings: none
