###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:07:52 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIDEV_GetPos.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\GUIDEV_GetPos.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUIDEV_GetPos.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUIDEV_GetPos.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIDEV_GetPos.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIDEV_GetPos.c
     19          Purpose     : Implementation of memory devices, add. module
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "GUI_Private.h"
     26          #include "GUI_Debug.h"
     27          
     28          /* Memory device capabilities are compiled only if support for them is enabled. */ 
     29          #if GUI_SUPPORT_MEMDEV
     30          
     31          /*********************************************************************
     32          *
     33          *       Public code
     34          *
     35          **********************************************************************
     36          */
     37          /*********************************************************************
     38          *
     39          *       GUI_MEMDEV_GetXPos
     40          */

   \                                 In section .text, align 4, keep-with-next
     41          int GUI_MEMDEV_GetXPos(GUI_MEMDEV_Handle hMem) {
   \                     GUI_MEMDEV_GetXPos:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
     42            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     43            GUI_MEMDEV* pDevData;
     44            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     45            if (hMem == 0) {
   \   00000014   000054E3           CMP      R4,#+0
     46              hMem = GUI_Context.hDevData;
   \   00000018   ........           LDREQ    R0,??DataTable1
   \   0000001C   88409005           LDREQ    R4,[R0, #+136]
     47            }
     48            if (hMem) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0200000A           BEQ      ??GUI_MEMDEV_GetXPos_0
     49              pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
     50              r = pDevData->x0;
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       GUI_ALLOC_h2p
   \   00000030   F450D0E1           LDRSH    R5,[R0, #+4]
     51            }
     52            GUI_UNLOCK();
   \                     ??GUI_MEMDEV_GetXPos_0:
   \   00000034   ........           BL       GUI_Unlock
     53            return r;
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     54          }
     55          
     56          /*********************************************************************
     57          *
     58          *       GUI_MEMDEV_GetYPos
     59          */

   \                                 In section .text, align 4, keep-with-next
     60          int GUI_MEMDEV_GetYPos(GUI_MEMDEV_Handle hMem) {
   \                     GUI_MEMDEV_GetYPos:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
     61            int r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     62            GUI_MEMDEV* pDevData;
     63            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     64            if (hMem == 0) {
   \   00000014   000054E3           CMP      R4,#+0
     65              hMem = GUI_Context.hDevData;
   \   00000018   ........           LDREQ    R0,??DataTable1
   \   0000001C   88409005           LDREQ    R4,[R0, #+136]
     66            }
     67            if (hMem) {
   \   00000020   000054E3           CMP      R4,#+0
   \   00000024   0200000A           BEQ      ??GUI_MEMDEV_GetYPos_0
     68              pDevData = (GUI_MEMDEV*) GUI_ALLOC_h2p(hMem);  /* Convert to pointer */
     69              r = pDevData->y0;
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       GUI_ALLOC_h2p
   \   00000030   F650D0E1           LDRSH    R5,[R0, #+6]
     70            }
     71            GUI_UNLOCK();
   \                     ??GUI_MEMDEV_GetYPos_0:
   \   00000034   ........           BL       GUI_Unlock
     72            return r;
   \   00000038   0500A0E1           MOV      R0,R5
   \   0000003C   04D08DE2           ADD      SP,SP,#+4
   \   00000040   3080BDE8           POP      {R4,R5,PC}       ;; return
     73          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context
     74          
     75          #else
     76          
     77          void GUIDEV_GetPos_C(void);
     78          void GUIDEV_GetPos_C(void) {} /* avoid empty object files */
     79          
     80          #endif /* GUI_MEMDEV_SUPPORT */
     81          
     82          /*************************** end of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     GUI_MEMDEV_GetXPos     16
     GUI_MEMDEV_GetYPos     16


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     GUI_MEMDEV_GetXPos   68
     GUI_MEMDEV_GetYPos   68
     ??DataTable1          4

 
 140 bytes in section .text
 
 140 bytes of CODE memory

Errors: none
Warnings: none
