###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_OnKey.c                          #
#    Command line =  C:\DUII\TargetHW\GUI\WM_OnKey.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_OnKey.lst               #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_OnKey.o                  #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_OnKey.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_OnKey.c
     19          Purpose     : Implementation of WM_OnKey
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_OnKey
     36          
     37            Returns:
     38              0 if message could not be handled
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          int WM_OnKey(int Key, int Pressed) {
   \                     WM_OnKey:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     41            int r = 0;
   \   00000010   0060A0E3           MOV      R6,#+0
     42            WM_MESSAGE Msg;
     43            WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
   \   00000018   40009FE5           LDR      R0,??WM_OnKey_0
   \   0000001C   40109FE5           LDR      R1,??WM_OnKey_0+0x4
   \   00000020   000090E5           LDR      R0,[R0, #+0]
   \   00000024   000191E7           LDR      R0,[R1, +R0, LSL #+2]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0700000A           BEQ      ??WM_OnKey_1
     44            if (WM__ahWinFocus[WM__TOUCHED_LAYER] != 0) {
     45              WM_KEY_INFO Info;
     46              Info.Key = Key;
     47              Info.PressedCnt = Pressed;
     48              Msg.MsgId = WM_KEY;
   \   00000030   0E20A0E3           MOV      R2,#+14
   \   00000034   00408DE5           STR      R4,[SP, #+0]
   \   00000038   04508DE5           STR      R5,[SP, #+4]
   \   0000003C   08208DE5           STR      R2,[SP, #+8]
     49              Msg.Data.p = &Info;
   \   00000040   14D08DE5           STR      SP,[SP, #+20]
     50              WM__SendMessage(WM__ahWinFocus[WM__TOUCHED_LAYER] , &Msg);
   \   00000044   08108DE2           ADD      R1,SP,#+8
   \   00000048   ........           BL       WM__SendMessage
     51              r = 1;
   \   0000004C   0160A0E3           MOV      R6,#+1
     52            }
     53            WM_UNLOCK();
   \                     ??WM_OnKey_1:
   \   00000050   ........           BL       GUI_Unlock
     54            return r;
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   18D08DE2           ADD      SP,SP,#+24
   \   0000005C   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??WM_OnKey_0:
   \   00000060   ........           DC32     WM__TouchedLayer
   \   00000064   ........           DC32     WM__ahWinFocus
     55          }
     56          
     57          #else
     58            void WM_OnKey_c(void);
     59            void WM_OnKey_c(void) {} /* avoid empty object files */
     60          #endif
     61          
     62          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function .cstack
     -------- -------
     WM_OnKey     40


   Section sizes:

     Function/Label Bytes
     -------------- -----
     WM_OnKey        104

 
 104 bytes in section .text
 
 104 bytes of CODE memory

Errors: none
Warnings: none
