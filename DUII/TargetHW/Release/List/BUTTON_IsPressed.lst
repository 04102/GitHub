###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:48 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\BUTTON_IsPressed.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\BUTTON_IsPressed.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\BUTTON_IsPressed.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\BUTTON_IsPressed.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\BUTTON_IsPressed.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : BUTTON_IsPressed.c
     19          Purpose     : Button widget, various (optional) Get routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          #include "BUTTON.h"
     25          #include "BUTTON_Private.h"
     26          #include "GUI_Private.h"
     27          
     28          #if GUI_WINSUPPORT
     29          
     30          /*********************************************************************
     31          *
     32          *       Exported functions
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       BUTTON_IsPressed
     39          */

   \                                 In section .text, align 4, keep-with-next
     40          unsigned BUTTON_IsPressed(BUTTON_Handle hObj) {
   \                     BUTTON_IsPressed:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     41            unsigned r = 0;
   \   0000000C   0050A0E3           MOV      R5,#+0
     42            if (hObj) {
   \   00000010   0700000A           BEQ      ??BUTTON_IsPressed_0
     43              BUTTON_Obj* pObj;
     44              WM_LOCK();
   \   00000014   ........           BL       GUI_Lock
     45              pObj = BUTTON_LOCK_H(hObj);
     46              r = (pObj->Widget.State & BUTTON_STATE_PRESSED) ? 1 : 0;
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   B203D0E1           LDRH     R0,[R0, #+50]
   \   00000024   2004A0E1           LSR      R0,R0,#+8
   \   00000028   015000E2           AND      R5,R0,#0x1
     47              GUI_UNLOCK_H(pObj);
   \   0000002C   ........           BL       GUI_ALLOC_UnlockH
     48              WM_UNLOCK();
   \   00000030   ........           BL       GUI_Unlock
     49            }
     50            return r;
   \                     ??BUTTON_IsPressed_0:
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     51          }
     52          
     53          #else                            /* Avoid problems with empty object modules */
     54            void BUTTON_IsPressed_C(void) {}
     55          #endif

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     BUTTON_IsPressed     16


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     BUTTON_IsPressed   64

 
 64 bytes in section .text
 
 64 bytes of CODE memory

Errors: none
Warnings: none
