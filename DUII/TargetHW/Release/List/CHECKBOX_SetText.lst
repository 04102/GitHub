###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:19 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\CHECKBOX_SetText.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\CHECKBOX_SetText.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\CHECKBOX_SetText.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\CHECKBOX_SetText.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\CHECKBOX_SetText.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : CHECKBOX_SetText.c
     19          Purpose     : Implementation of CHECKBOX_SetText
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "CHECKBOX_Private.h"
     24          
     25          #if GUI_WINSUPPORT
     26          
     27          /*********************************************************************
     28          *
     29          *       Exported routines
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       CHECKBOX_SetText
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void CHECKBOX_SetText(CHECKBOX_Handle hObj, const char * s) {
   \                     CHECKBOX_SetText:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     38            CHECKBOX_Obj * pObj;
     39            WM_HMEM hpText;
     40            WM_HMEM hpTextOld;
     41            if (hObj && s) {
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   08D04DE2           SUB      SP,SP,#+8
   \   00000014   00005513           CMPNE    R5,#+0
   \   00000018   1500000A           BEQ      ??CHECKBOX_SetText_0
     42              WM_LOCK();
   \   0000001C   ........           BL       GUI_Lock
     43              pObj = CHECKBOX_LOCK_H(hObj);
     44              hpText = hpTextOld = pObj->hpText;
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_LockH
   \   00000028   786090E5           LDR      R6,[R0, #+120]
   \   0000002C   00608DE5           STR      R6,[SP, #+0]
     45              GUI_UNLOCK_H(pObj);
   \   00000030   ........           BL       GUI_ALLOC_UnlockH
     46              if (GUI__SetText(&hpText, s)) {
   \   00000034   0510A0E1           MOV      R1,R5
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           BL       GUI__SetText
   \   00000040   000050E3           CMP      R0,#+0
   \   00000044   0900000A           BEQ      ??CHECKBOX_SetText_1
     47                if (hpText != hpTextOld) {
   \   00000048   00009DE5           LDR      R0,[SP, #+0]
   \   0000004C   060050E1           CMP      R0,R6
   \   00000050   0400000A           BEQ      ??CHECKBOX_SetText_2
     48                  pObj = CHECKBOX_LOCK_H(hObj);
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       GUI_ALLOC_LockH
     49                  pObj->hpText = hpText;
   \   0000005C   00109DE5           LDR      R1,[SP, #+0]
   \   00000060   781080E5           STR      R1,[R0, #+120]
     50                  GUI_UNLOCK_H(pObj);
   \   00000064   ........           BL       GUI_ALLOC_UnlockH
     51                }
     52                WM_Invalidate(hObj);
   \                     ??CHECKBOX_SetText_2:
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       WM_InvalidateWindow
     53              }
     54              WM_UNLOCK();
   \                     ??CHECKBOX_SetText_1:
   \   00000070   ........           BL       GUI_Unlock
     55            }
     56          }
   \                     ??CHECKBOX_SetText_0:
   \   00000074   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
     57          
     58          #else                            /* Avoid problems with empty object modules */
     59            void CHECKBOX_SetText_C(void);
     60            void CHECKBOX_SetText_C(void) {}
     61          #endif

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     CHECKBOX_SetText     24


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     CHECKBOX_SetText  124

 
 124 bytes in section .text
 
 124 bytes of CODE memory

Errors: none
Warnings: none
