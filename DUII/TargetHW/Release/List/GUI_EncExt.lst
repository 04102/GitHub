###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:13:42 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_EncExt.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_EncExt.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_EncExt.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_EncExt.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_EncExt.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIEncEXT.c
     19          Purpose     : Implementation of extended proportional fonts
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Private data
     30          *
     31          **********************************************************************
     32          */
     33          U8 GUI__CharHasTrans;
     34          
     35          /*********************************************************************
     36          *
     37          *       Private code
     38          *
     39          **********************************************************************
     40          */
     41          /*********************************************************************
     42          *
     43          *       GUIPROP_EXT__ClearLine
     44          */

   \                                 In section .text, align 4, keep-with-next
     45          void GUIPROP_EXT__ClearLine(const char GUI_UNI_PTR * s, int Len) {
   \                     GUIPROP_EXT__ClearLine:
   \   00000000   F14F2DE9           PUSH     {R0,R4-R11,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0150A0E1           MOV      R5,R1
     46            U16 Char;
     47            int xDist, yDist, x0, y0, Diff;
     48            LCD_COLOR OldColor;
     49            const GUI_FONT_PROP_EXT GUI_UNI_PTR * pPropExt;
     50            const GUI_CHARINFO_EXT  GUI_UNI_PTR * pCharInfo;
     51          
     52            OldColor = GUI_GetColor();
   \   0000000C   ........           BL       GUI_GetColor
     53            GUI_SetColor((GUI_Context.TextMode & GUI_TM_REV) ? GUI_GetColor() : GUI_GetBkColor());
   \   00000010   ........           LDR      R7,??DataTable3
   \   00000014   0040A0E1           MOV      R4,R0
   \   00000018   2A00D7E5           LDRB     R0,[R7, #+42]
   \   0000001C   040010E3           TST      R0,#0x4
   \   00000020   0100000A           BEQ      ??GUIPROP_EXT__ClearLine_0
   \   00000024   ........           BL       GUI_GetColor
   \   00000028   000000EA           B        ??GUIPROP_EXT__ClearLine_1
   \                     ??GUIPROP_EXT__ClearLine_0:
   \   0000002C   ........           BL       GUI_GetBkColor
   \                     ??GUIPROP_EXT__ClearLine_1:
   \   00000030   ........           BL       GUI_SetColor
     54            xDist = 0;
     55            yDist = GUI_Context.pAFont->YDist * GUI_Context.pAFont->YMag;
   \   00000034   1C0097E5           LDR      R0,[R7, #+28]
   \   00000038   0080A0E3           MOV      R8,#+0
   \   0000003C   1910D0E5           LDRB     R1,[R0, #+25]
   \   00000040   1B00D0E5           LDRB     R0,[R0, #+27]
     56            x0    = GUI_Context.DispPosX;
   \   00000044   F292D7E1           LDRSH    R9,[R7, #+34]
     57            y0    = GUI_Context.DispPosY;
   \   00000048   F4A2D7E1           LDRSH    R10,[R7, #+36]
   \   0000004C   800161E1           SMULBB   R1,R0,R1
   \   00000050   0CB0A0E3           MOV      R11,#+12
   \   00000054   00108DE5           STR      R1,[SP, #+0]
   \   00000058   140000EA           B        ??GUIPROP_EXT__ClearLine_2
     58            while (--Len >= 0) {
     59              Char      = GUI_UC__GetCharCodeInc(&s);
   \                     ??GUIPROP_EXT__ClearLine_3:
   \   0000005C   08008DE2           ADD      R0,SP,#+8
   \   00000060   ........           BL       GUI_UC__GetCharCodeInc
   \   00000064   0060A0E1           MOV      R6,R0
     60              pPropExt  = GUIPROP_EXT__FindChar(GUI_Context.pAFont->p.pPropExt, Char);
   \   00000068   1C0097E5           LDR      R0,[R7, #+28]
   \   0000006C   0610A0E1           MOV      R1,R6
   \   00000070   1C0090E5           LDR      R0,[R0, #+28]
   \   00000074   ........           BL       GUIPROP_EXT__FindChar
     61              if (pPropExt) {
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0B00000A           BEQ      ??GUIPROP_EXT__ClearLine_2
     62                pCharInfo = pPropExt->paCharInfo + (Char - pPropExt->First);
   \   00000080   B020D0E1           LDRH     R2,[R0, #+0]
   \   00000084   040090E5           LDR      R0,[R0, #+4]
   \   00000088   021046E0           SUB      R1,R6,R2
   \   0000008C   9B0120E0           MLA      R0,R11,R1,R0
     63                Diff = (pCharInfo->XPos + pCharInfo->XDist) * GUI_Context.pAFont->XMag;
   \   00000090   D210D0E1           LDRSB    R1,[R0, #+2]
   \   00000094   0400D0E5           LDRB     R0,[R0, #+4]
   \   00000098   010080E0           ADD      R0,R0,R1
   \   0000009C   1C1097E5           LDR      R1,[R7, #+28]
   \   000000A0   1A10D1E5           LDRB     R1,[R1, #+26]
   \   000000A4   810060E1           SMULBB   R0,R1,R0
     64                if (Diff > 0) {
   \   000000A8   010050E3           CMP      R0,#+1
     65                  xDist += Diff;
   \   000000AC   088080A0           ADDGE    R8,R0,R8
     66                }
     67              }
     68            }
   \                     ??GUIPROP_EXT__ClearLine_2:
   \   000000B0   015055E2           SUBS     R5,R5,#+1
   \   000000B4   E8FFFF5A           BPL      ??GUIPROP_EXT__ClearLine_3
     69            xDist += GUI__GetOverlap(Char);
   \   000000B8   0608A0E1           LSL      R0,R6,#+16
   \   000000BC   2008A0E1           LSR      R0,R0,#+16
   \   000000C0   ........           BL       GUI__GetOverlap
     70            LCD_FillRect(x0, y0, x0 + xDist - 1, y0 + yDist - 1);
   \   000000C4   00109DE5           LDR      R1,[SP, #+0]
   \   000000C8   0A1081E0           ADD      R1,R1,R10
   \   000000CC   013041E2           SUB      R3,R1,#+1
   \   000000D0   091088E0           ADD      R1,R8,R9
   \   000000D4   010080E0           ADD      R0,R0,R1
   \   000000D8   012040E2           SUB      R2,R0,#+1
   \   000000DC   0A10A0E1           MOV      R1,R10
   \   000000E0   0900A0E1           MOV      R0,R9
   \   000000E4   ........           BL       LCD_FillRect
     71            GUI_SetColor(OldColor);
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       GUI_SetColor
     72            //
     73            // Avoid background pixels to be drawn twice
     74            //
     75            GUI__CharHasTrans = 1;
   \   000000F0   ........           LDR      R0,??DataTable3_1
   \   000000F4   0110A0E3           MOV      R1,#+1
   \   000000F8   0410C0E5           STRB     R1,[R0, #+4]
     76          }
   \   000000FC   0CD08DE2           ADD      SP,SP,#+12
   \   00000100   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In section .data, align 4
     77          
     78          /*********************************************************************
     79          *
     80          *       Static data
     81          *
     82          **********************************************************************
     83          */
     84          static void (* _fpClearLine)(const char GUI_UNI_PTR * s, int Len) = GUIPROP_EXT__ClearLine;
   \                     _fpClearLine:
   \   00000000   ........           DC32 GUIPROP_EXT__ClearLine
   \                     GUI__CharHasTrans:
   \   00000004   00                 DC8 0
     85          
     86          /*********************************************************************
     87          *
     88          *       Private code
     89          *
     90          **********************************************************************
     91          */
     92          /*********************************************************************
     93          *
     94          *       GUIPROP_EXT__DispLine
     95          */

   \                                 In section .text, align 4, keep-with-next
     96          void GUIPROP_EXT__DispLine(const char GUI_UNI_PTR * s, int Len) {
   \                     GUIPROP_EXT__DispLine:
   \   00000000   71402DE9           PUSH     {R0,R4-R6,LR}
     97            U16 Char;
     98            int OldMode;
     99          
    100            OldMode = GUI_Context.TextMode;
   \   00000004   ........           LDR      R5,??DataTable3
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   FA02D5E1           LDRSH    R0,[R5, #+42]
   \   00000010   0140A0E1           MOV      R4,R1
   \   00000014   0060A0E1           MOV      R6,R0
    101            //
    102            // Clear background of text if transparency mode has not been selected
    103            //
    104            if ((GUI_Context.TextMode & (LCD_DRAWMODE_TRANS | LCD_DRAWMODE_XOR)) == 0) {
   \   00000018   030010E3           TST      R0,#0x3
   \   0000001C   0900001A           BNE      ??GUIPROP_EXT__DispLine_0
    105              _fpClearLine(s, Len);
   \   00000020   ........           LDR      R2,??DataTable3_1
   \   00000024   04009DE5           LDR      R0,[SP, #+4]
   \   00000028   002092E5           LDR      R2,[R2, #+0]
   \   0000002C   32FF2FE1           BLX      R2
   \   00000030   040000EA           B        ??GUIPROP_EXT__DispLine_0
    106            }
    107            while (--Len >= 0) {
    108              Char = GUI_UC__GetCharCodeInc(&s);
   \                     ??GUIPROP_EXT__DispLine_1:
   \   00000034   04008DE2           ADD      R0,SP,#+4
   \   00000038   ........           BL       GUI_UC__GetCharCodeInc
    109              GUI_Context.pAFont->pfDispChar(Char);
   \   0000003C   1C1095E5           LDR      R1,[R5, #+28]
   \   00000040   001091E5           LDR      R1,[R1, #+0]
   \   00000044   31FF2FE1           BLX      R1
    110            }
   \                     ??GUIPROP_EXT__DispLine_0:
   \   00000048   014054E2           SUBS     R4,R4,#+1
   \   0000004C   F8FFFF5A           BPL      ??GUIPROP_EXT__DispLine_1
    111            //
    112            // Clear transparency flag
    113            //
    114            GUI__CharHasTrans = 0;
   \   00000050   ........           LDR      R0,??DataTable3_1
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   0410C0E5           STRB     R1,[R0, #+4]
    115            GUI_Context.TextMode = OldMode;
   \   0000005C   BA62C5E1           STRH     R6,[R5, #+42]
    116          }
   \   00000060   08D08DE2           ADD      SP,SP,#+8
   \   00000064   7080BDE8           POP      {R4-R6,PC}       ;; return
    117          
    118          /*********************************************************************
    119          *
    120          *       GUIPROP_EXT__SetfpClearLine
    121          */

   \                                 In section .text, align 4, keep-with-next
    122          void GUIPROP_EXT__SetfpClearLine(void (* fpClearLine)(const char GUI_UNI_PTR * s, int Len)) {
    123            _fpClearLine = fpClearLine;
   \                     GUIPROP_EXT__SetfpClearLine:
   \   00000000   ........           LDR      R1,??DataTable3_1
   \   00000004   000081E5           STR      R0,[R1, #+0]
    124          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    125          
    126          /*********************************************************************
    127          *
    128          *       Public APIList
    129          *
    130          **********************************************************************
    131          */
    132          /*********************************************************************
    133          *
    134          *       GUI_ENC_APIList_EXT, API list
    135          */

   \                                 In section .rodata, align 4, keep-with-next
    136          const tGUI_ENC_APIList GUI_ENC_APIList_EXT = {
   \                     GUI_ENC_APIList_EXT:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   000000000000       DC32 0, 0, GUIPROP_EXT__DispLine
   \              0000........

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     GUI_Context

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     _fpClearLine
    137            NULL,
    138            NULL,
    139            GUIPROP_EXT__DispLine
    140          };
    141          
    142          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                    .cstack
     --------                    -------
     GUIPROP_EXT__ClearLine          48
     GUIPROP_EXT__DispLine           24
     GUIPROP_EXT__SetfpClearLine      0


   Section sizes:

     Function/Label              Bytes
     --------------              -----
     GUIPROP_EXT__ClearLine       260
     _fpClearLine                   5
     GUI__CharHasTrans
     GUIPROP_EXT__DispLine        104
     GUIPROP_EXT__SetfpClearLine   12
     GUI_ENC_APIList_EXT           12
     ??DataTable3                   4
     ??DataTable3_1                 4

 
   5 bytes in section .data
  12 bytes in section .rodata
 384 bytes in section .text
 
 384 bytes of CODE  memory
  12 bytes of CONST memory
   5 bytes of DATA  memory

Errors: none
Warnings: none
