###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__IntersectRects.c               #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__IntersectRects.c -D DEBUG=1    #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI__IntersectRects.lst    #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI__IntersectRects.o       #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__IntersectRects.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_IntersectRects.c
     19          Purpose     : Implementation of GUI_IntersectRects
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          #include "Global.h"
     25          
     26          /*********************************************************************
     27          *
     28          *       Public code
     29          *
     30          **********************************************************************
     31          */
     32          /*********************************************************************
     33          *
     34          *       GUI__IntersectRects
     35          *
     36          * Purpose:
     37          *   Calc intersection of rectangles
     38          *
     39          * Return value:
     40          *   1 if they do intersect,
     41          *   0 if there is no intersection
     42          *
     43          * Add. info:
     44          *   Rectangles are passed as pointers. These pointers need to be valid;
     45          *   a NULL pointer may not be passed. There is no check for NULL pointers
     46          *   implemented in order to avoid avoid performance penalty.
     47          */

   \                                 In section .text, align 4, keep-with-next
     48          int GUI__IntersectRects(GUI_RECT* pDest, const GUI_RECT* pr0, const GUI_RECT* pr1) {
     49            pDest->x0 = GUI_MAX(pr0->x0, pr1->x0);
   \                     GUI__IntersectRects:
   \   00000000   F030D1E1           LDRSH    R3,[R1, #+0]
   \   00000004   F0C0D2E1           LDRSH    R12,[R2, #+0]
   \   00000008   03005CE1           CMP      R12,R3
   \   0000000C   0C30A0A1           MOVGE    R3,R12
   \   00000010   B030C0E1           STRH     R3,[R0, #+0]
     50            pDest->y0 = GUI_MAX(pr0->y0, pr1->y0);
   \   00000014   F230D2E1           LDRSH    R3,[R2, #+2]
   \   00000018   F2C0D1E1           LDRSH    R12,[R1, #+2]
   \   0000001C   0C0053E1           CMP      R3,R12
   \   00000020   0C30A0B1           MOVLT    R3,R12
   \   00000024   B230C0E1           STRH     R3,[R0, #+2]
     51            pDest->x1 = GUI_MIN(pr0->x1, pr1->x1);
   \   00000028   F430D1E1           LDRSH    R3,[R1, #+4]
   \   0000002C   F4C0D2E1           LDRSH    R12,[R2, #+4]
   \   00000030   0C0053E1           CMP      R3,R12
   \   00000034   0C30A0C1           MOVGT    R3,R12
   \   00000038   B430C0E1           STRH     R3,[R0, #+4]
     52            pDest->y1 = GUI_MIN(pr0->y1, pr1->y1);
   \   0000003C   F630D1E1           LDRSH    R3,[R1, #+6]
   \   00000040   F6C0D2E1           LDRSH    R12,[R2, #+6]
   \   00000044   0C0053E1           CMP      R3,R12
   \   00000048   0C30A0C1           MOVGT    R3,R12
   \   0000004C   B630C0E1           STRH     R3,[R0, #+6]
     53            if (pDest->x1 < pDest->x0) {
   \   00000050   F410D0E1           LDRSH    R1,[R0, #+4]
   \   00000054   F020D0E1           LDRSH    R2,[R0, #+0]
   \   00000058   020051E1           CMP      R1,R2
   \   0000005C   010000AA           BGE      ??GUI__IntersectRects_0
     54              return 0;
   \                     ??GUI__IntersectRects_1:
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   1EFF2FE1           BX       LR
     55            }
     56            if (pDest->y1 < pDest->y0) {
   \                     ??GUI__IntersectRects_0:
   \   00000068   F610D0E1           LDRSH    R1,[R0, #+6]
   \   0000006C   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000070   000051E1           CMP      R1,R0
   \   00000074   F9FFFFBA           BLT      ??GUI__IntersectRects_1
     57              return 0;
     58            }
     59            return 1;
   \   00000078   0100A0E3           MOV      R0,#+1
   \   0000007C   1EFF2FE1           BX       LR               ;; return
     60          }
     61          
     62          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     GUI__IntersectRects      0


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     GUI__IntersectRects  128

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
