###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:57 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_ErrorOut.c                        #
#    Command line =  C:\DUII\TargetHW\FS\FS_ErrorOut.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FS_ErrorOut.lst            #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FS_ErrorOut.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_ErrorOut.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_ErrorOut.C
     19          Purpose     : Logging (used only at higher debug levels)
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stdio.h>
     24          #include <string.h>
     25          #include "FS_Int.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Defines
     30          *
     31          **********************************************************************
     32          */
     33          
     34          /*********************************************************************
     35          *
     36          *       Static data
     37          *
     38          **********************************************************************
     39          */

   \                                 In section .data, align 4
     40          static U32  _ErrorFilter = 0xFFFFFFFFUL;    // Per default all errors enabled
   \                     _ErrorFilter:
   \   00000000   FFFFFFFF           DC32 4294967295
     41          
     42          
     43          /*********************************************************************
     44          *
     45          *       Public code
     46          *
     47          **********************************************************************
     48          */
     49          
     50          /*********************************************************************
     51          *
     52          *       FS_ErrorOutf
     53          */

   \                                 In section .text, align 4, keep-with-next
     54          void FS_ErrorOutf(U32 Type, const char * sFormat, ...) {
   \                     FS_ErrorOutf:
   \   00000000   0C002DE9           PUSH     {R2,R3}
   \   00000004   00402DE9           PUSH     {LR}
     55            va_list ParamList;
     56            char acBuffer[100];
     57          
     58            //
     59            // Filter message. If logging for this type of message is not enabled, do  nothing.
     60            //
     61            if ((Type & _ErrorFilter) == 0) {
   \   00000008   ........           LDR      R2,??DataTable2
   \   0000000C   6CD04DE2           SUB      SP,SP,#+108
   \   00000010   002092E5           LDR      R2,[R2, #+0]
   \   00000014   000012E1           TST      R2,R0
   \   00000018   0700000A           BEQ      ??FS_ErrorOutf_0
     62              return;
     63            }
     64            //
     65            // Replace place holders (%d, %x etc) by values and call output routine.
     66            //
     67            va_start(ParamList, sFormat);
   \   0000001C   70208DE2           ADD      R2,SP,#+112
   \   00000020   00208DE5           STR      R2,[SP, #+0]
     68            FS_PrintfSafe(acBuffer, sFormat, sizeof(acBuffer), &ParamList);
   \   00000024   0D30A0E1           MOV      R3,SP
   \   00000028   6420A0E3           MOV      R2,#+100
   \   0000002C   04008DE2           ADD      R0,SP,#+4
   \   00000030   ........           BL       FS_PrintfSafe
     69            FS_X_ErrorOut(acBuffer);
   \   00000034   04008DE2           ADD      R0,SP,#+4
   \   00000038   ........           BL       FS_X_ErrorOut
     70          }
   \                     ??FS_ErrorOutf_0:
   \   0000003C   6CD08DE2           ADD      SP,SP,#+108      ;; stack cleaning
   \   00000040   0CF09DE4           LDR      PC,[SP], #+12    ;; return
     71          
     72          
     73          /*********************************************************************
     74          *
     75          *       FS_SetErrorFilter
     76          */

   \                                 In section .text, align 4, keep-with-next
     77          void FS_SetErrorFilter(U32 FilterMask) {
     78            _ErrorFilter = FilterMask;
   \                     FS_SetErrorFilter:
   \   00000000   ........           LDR      R1,??DataTable2
   \   00000004   000081E5           STR      R0,[R1, #+0]
     79          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
     80          
     81          /*********************************************************************
     82          *
     83          *       FS_AddErrorFilter
     84          */

   \                                 In section .text, align 4, keep-with-next
     85          void FS_AddErrorFilter(U32 FilterMask) {
     86            _ErrorFilter |= FilterMask;
   \                     FS_AddErrorFilter:
   \   00000000   ........           LDR      R1,??DataTable2
   \   00000004   002091E5           LDR      R2,[R1, #+0]
   \   00000008   020080E1           ORR      R0,R0,R2
   \   0000000C   000081E5           STR      R0,[R1, #+0]
     87          }
   \   00000010   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     _ErrorFilter
     88          
     89          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     FS_AddErrorFilter      0
     FS_ErrorOutf         120
     FS_SetErrorFilter      0


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     _ErrorFilter         4
     FS_ErrorOutf        68
     FS_SetErrorFilter   12
     FS_AddErrorFilter   20
     ??DataTable2         4

 
   4 bytes in section .data
 104 bytes in section .text
 
 104 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
