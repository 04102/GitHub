###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:41 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_GetScrollPos.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM_GetScrollPos.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_GetScrollPos.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_GetScrollPos.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_GetScrollPos.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_GetScrollPos.c
     19          Purpose     : Implementation of WM_GetScrollPosH and WM_GetScrollPosV
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _GetScrollPos
     36          */
     37          static int _GetScrollPos(WM_HWIN hWin, int Id) {
     38            WM_SCROLL_STATE ScrollState = {0};
     39            WM_HWIN hVScroll;
     40            hVScroll = WM_GetDialogItem(hWin, Id);
     41            if (hVScroll) {
     42              WM_GetScrollState(hVScroll, &ScrollState);
     43            }
     44            return ScrollState.v;
     45          }
     46          
     47          /*********************************************************************
     48          *
     49          *       Public code
     50          *
     51          **********************************************************************
     52          */
     53          /*********************************************************************
     54          *
     55          *       WM_GetScrollPosH
     56          */

   \                                 In section .text, align 4, keep-with-next
     57          int WM_GetScrollPosH(WM_HWIN hWin) {
   \                     WM_GetScrollPosH:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
     58            int ScrollPos;
     59            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     60            ScrollPos = _GetScrollPos(hWin, GUI_ID_HSCROLL);
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   0E00A0E8           STM      R0!,{R1-R3}
   \   00000024   FF10A0E3           MOV      R1,#+255
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       WM_GetDialogItem
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0100000A           BEQ      ??WM_GetScrollPosH_0
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   ........           BL       WM_GetScrollState
     61            WM_UNLOCK();
   \                     ??WM_GetScrollPosH_0:
   \   00000040   ........           BL       GUI_Unlock
     62            return ScrollPos;
   \   00000044   04009DE5           LDR      R0,[SP, #+4]
   \   00000048   10D08DE2           ADD      SP,SP,#+16
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
     63          }
     64          
     65          /*********************************************************************
     66          *
     67          *       WM_GetScrollPosV
     68          */

   \                                 In section .text, align 4, keep-with-next
     69          int WM_GetScrollPosV(WM_HWIN hWin) {
   \                     WM_GetScrollPosV:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   \   00000008   0040A0E1           MOV      R4,R0
     70            int ScrollPos;
     71            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     72            ScrollPos = _GetScrollPos(hWin, GUI_ID_VSCROLL);
   \   00000010   0D00A0E1           MOV      R0,SP
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0030A0E3           MOV      R3,#+0
   \   00000020   0E00A0E8           STM      R0!,{R1-R3}
   \   00000024   FE10A0E3           MOV      R1,#+254
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       WM_GetDialogItem
   \   00000030   000050E3           CMP      R0,#+0
   \   00000034   0100000A           BEQ      ??WM_GetScrollPosV_0
   \   00000038   0D10A0E1           MOV      R1,SP
   \   0000003C   ........           BL       WM_GetScrollState
     73            WM_UNLOCK();
   \                     ??WM_GetScrollPosV_0:
   \   00000040   ........           BL       GUI_Unlock
     74            return ScrollPos;
   \   00000044   04009DE5           LDR      R0,[SP, #+4]
   \   00000048   10D08DE2           ADD      SP,SP,#+16
   \   0000004C   1080BDE8           POP      {R4,PC}          ;; return
     75          }

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0000        
     76          
     77          #else
     78            void WM_GetScrollPos_C(void) {} /* avoid empty object files */
     79          #endif
     80          
     81          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     WM_GetScrollPosH     24
     WM_GetScrollPosV     24


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     WM_GetScrollPosH   80
     WM_GetScrollPosV   80
     ?<Constant {0}>    12

 
  12 bytes in section .rodata
 160 bytes in section .text
 
 160 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
