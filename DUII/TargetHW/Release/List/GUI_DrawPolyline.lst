###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:57 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawPolyline.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawPolyline.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_DrawPolyline.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_DrawPolyline.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawPolyline.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawPolyLine.c
     19          Purpose     : Implementation of GUI_DrawPolyline
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _DrawPolyLine
     36          *
     37          * Draw Poly line, which does not have to be a closed shape
     38          */
     39          static void _DrawPolyLine(const GUI_POINT*pPoints, int NumPoints, int x0, int y0) {
     40            unsigned PixelCnt;
     41            PixelCnt = 0;
     42            GL_MoveTo(pPoints->x+x0, pPoints->y+y0);
     43            while (--NumPoints >0) {
     44              pPoints++;
     45              GL_DrawLineToEx(pPoints->x+x0, pPoints->y+y0, &PixelCnt);
     46            }
     47          }
     48          
     49          /*********************************************************************
     50          *
     51          *       Public code
     52          *
     53          **********************************************************************
     54          */
     55          /*********************************************************************
     56          *
     57          *       GUI_DrawPolyLine
     58          */

   \                                 In section .text, align 4, keep-with-next
     59          void GUI_DrawPolyLine(const GUI_POINT* pPoints, int NumPoints, int x0, int y0) {
   \                     GUI_DrawPolyLine:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   0260A0E1           MOV      R6,R2
   \   00000014   0370A0E1           MOV      R7,R3
     60            GUI_LOCK();
   \   00000018   ........           BL       GUI_Lock
     61            #if (GUI_WINSUPPORT)
     62              WM_ADDORG(x0,y0);
   \   0000001C   84009FE5           LDR      R0,??GUI_DrawPolyLine_0
   \   00000020   401090E5           LDR      R1,[R0, #+64]
   \   00000024   440090E5           LDR      R0,[R0, #+68]
   \   00000028   066081E0           ADD      R6,R1,R6
   \   0000002C   077080E0           ADD      R7,R0,R7
     63              WM_ITERATE_START(NULL); {
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   ........           BL       WM__InitIVRSearch
   \   00000038   000050E3           CMP      R0,#+0
   \   0000003C   1600000A           BEQ      ??GUI_DrawPolyLine_1
     64            #endif
     65            _DrawPolyLine (pPoints, NumPoints, x0, y0);
   \                     ??GUI_DrawPolyLine_2:
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0480A0E1           MOV      R8,R4
   \   00000048   00108DE5           STR      R1,[SP, #+0]
   \   0000004C   F200D8E1           LDRSH    R0,[R8, #+2]
   \   00000050   001087E0           ADD      R1,R7,R0
   \   00000054   F000D8E1           LDRSH    R0,[R8, #+0]
   \   00000058   000086E0           ADD      R0,R6,R0
   \   0000005C   ........           BL       GL_MoveTo
   \   00000060   019045E2           SUB      R9,R5,#+1
   \   00000064   010059E3           CMP      R9,#+1
   \   00000068   080000BA           BLT      ??GUI_DrawPolyLine_3
   \                     ??GUI_DrawPolyLine_4:
   \   0000006C   048088E2           ADD      R8,R8,#+4
   \   00000070   F200D8E1           LDRSH    R0,[R8, #+2]
   \   00000074   0D20A0E1           MOV      R2,SP
   \   00000078   001087E0           ADD      R1,R7,R0
   \   0000007C   F000D8E1           LDRSH    R0,[R8, #+0]
   \   00000080   000086E0           ADD      R0,R6,R0
   \   00000084   ........           BL       GL_DrawLineToEx
   \   00000088   019059E2           SUBS     R9,R9,#+1
   \   0000008C   F6FFFF1A           BNE      ??GUI_DrawPolyLine_4
     66            #if (GUI_WINSUPPORT)
     67              } WM_ITERATE_END();
   \                     ??GUI_DrawPolyLine_3:
   \   00000090   ........           BL       WM__GetNextIVR
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   E8FFFF1A           BNE      ??GUI_DrawPolyLine_2
     68            #endif
     69            GUI_UNLOCK();
   \                     ??GUI_DrawPolyLine_1:
   \   0000009C   ........           BL       GUI_Unlock
     70          }
   \   000000A0   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000A4   F083BDE8           POP      {R4-R9,PC}       ;; return
   \                     ??GUI_DrawPolyLine_0:
   \   000000A8   ........           DC32     GUI_Context
     71          
     72          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function         .cstack
     --------         -------
     GUI_DrawPolyLine     32


   Section sizes:

     Function/Label   Bytes
     --------------   -----
     GUI_DrawPolyLine  172

 
 172 bytes in section .text
 
 172 bytes of CODE memory

Errors: none
Warnings: none
