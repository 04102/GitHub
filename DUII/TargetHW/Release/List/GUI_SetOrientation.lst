###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:31 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_SetOrientation.c                #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_SetOrientation.c -D DEBUG=1 -D  #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_SetOrientation.lst     #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_SetOrientation.o        #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_SetOrientation.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_SetOrientation.c
     19          Purpose     : Support for changing the display orientation at run time
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_SetOrientation.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _Log2Phys_xxx
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          static void _Log2Phys_X  (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
     38            *px_phys = pContext->vxSize - 1 - x;
   \                     _Log2Phys_X:
   \   00000000   180090E5           LDR      R0,[R0, #+24]
   \   00000004   00C09DE5           LDR      R12,[SP, #+0]
   \   00000008   010040E2           SUB      R0,R0,#+1
   \   0000000C   010040E0           SUB      R0,R0,R1
   \   00000010   000083E5           STR      R0,[R3, #+0]
     39            *py_phys = y;
   \   00000014   00208CE5           STR      R2,[R12, #+0]
     40          }
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     41          static void _Log2Phys_Y  (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
   \                     _Log2Phys_Y:
   \   00000000   00C09DE5           LDR      R12,[SP, #+0]
     42            *px_phys = x;
   \   00000004   001083E5           STR      R1,[R3, #+0]
     43            *py_phys = pContext->vySize - 1 - y;
   \   00000008   1C0090E5           LDR      R0,[R0, #+28]
   \   0000000C   010040E2           SUB      R0,R0,#+1
   \   00000010   020040E0           SUB      R0,R0,R2
   \   00000014   00008CE5           STR      R0,[R12, #+0]
     44          }
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     45          static void _Log2Phys_XY (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
   \                     _Log2Phys_XY:
   \   00000000   00402DE9           PUSH     {LR}
     46            *px_phys = pContext->vxSize - 1 - x;
   \   00000004   18E090E5           LDR      LR,[R0, #+24]
   \   00000008   04C09DE5           LDR      R12,[SP, #+4]
   \   0000000C   01E04EE2           SUB      LR,LR,#+1
   \   00000010   01104EE0           SUB      R1,LR,R1
   \   00000014   001083E5           STR      R1,[R3, #+0]
     47            *py_phys = pContext->vySize - 1 - y;
   \   00000018   1C0090E5           LDR      R0,[R0, #+28]
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   020040E0           SUB      R0,R0,R2
   \   00000024   00008CE5           STR      R0,[R12, #+0]
     48          }
   \   00000028   0080BDE8           POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
     49          static void _Log2Phys_S  (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
   \                     _Log2Phys_S:
   \   00000000   00009DE5           LDR      R0,[SP, #+0]
     50            GUI_USE_PARA(pContext);
     51            *px_phys = y;
   \   00000004   002083E5           STR      R2,[R3, #+0]
     52            *py_phys = x;
   \   00000008   001080E5           STR      R1,[R0, #+0]
     53          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     54          static void _Log2Phys_SX (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
     55            *px_phys = pContext->vxSize - 1 - y;
   \                     _Log2Phys_SX:
   \   00000000   180090E5           LDR      R0,[R0, #+24]
   \   00000004   00C09DE5           LDR      R12,[SP, #+0]
   \   00000008   010040E2           SUB      R0,R0,#+1
   \   0000000C   020040E0           SUB      R0,R0,R2
   \   00000010   000083E5           STR      R0,[R3, #+0]
     56            *py_phys = x;
   \   00000014   00108CE5           STR      R1,[R12, #+0]
     57          }
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     58          static void _Log2Phys_SY (DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
   \                     _Log2Phys_SY:
   \   00000000   00C09DE5           LDR      R12,[SP, #+0]
     59            *px_phys = y;
   \   00000004   002083E5           STR      R2,[R3, #+0]
     60            *py_phys = pContext->vySize - 1 - x;
   \   00000008   1C0090E5           LDR      R0,[R0, #+28]
   \   0000000C   010040E2           SUB      R0,R0,#+1
   \   00000010   010040E0           SUB      R0,R0,R1
   \   00000014   00008CE5           STR      R0,[R12, #+0]
     61          }
   \   00000018   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     62          static void _Log2Phys_SXY(DRIVER_CONTEXT * pContext, int x, int y, int * px_phys, int * py_phys) {
   \                     _Log2Phys_SXY:
   \   00000000   00402DE9           PUSH     {LR}
     63            *px_phys = pContext->vxSize - 1 - y;
   \   00000004   18E090E5           LDR      LR,[R0, #+24]
   \   00000008   04C09DE5           LDR      R12,[SP, #+4]
   \   0000000C   01E04EE2           SUB      LR,LR,#+1
   \   00000010   02204EE0           SUB      R2,LR,R2
   \   00000014   002083E5           STR      R2,[R3, #+0]
     64            *py_phys = pContext->vySize - 1 - x;
   \   00000018   1C0090E5           LDR      R0,[R0, #+28]
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   010040E0           SUB      R0,R0,R1
   \   00000024   00008CE5           STR      R0,[R12, #+0]
     65          }
   \   00000028   0080BDE8           POP      {PC}             ;; return
     66          
     67          /*********************************************************************
     68          *
     69          *       Static code: API functions for drawing operations
     70          *
     71          * Purpose:
     72          *   The following functions call the real drawing functions depending
     73          *   on the cache settings.
     74          *
     75          **********************************************************************
     76          */
     77          /*********************************************************************
     78          *
     79          *       _DrawBitmap
     80          */

   \                                 In section .text, align 4, keep-with-next
     81          static void _DrawBitmap(GUI_DEVICE * pDevice, int x0, int y0,
     82                                 int xSize, int ySize,
     83                                 int BitsPerPixel, 
     84                                 int BytesPerLine,
     85                                 const U8 GUI_UNI_PTR * pData, int Diff,
     86                                 const LCD_PIXELINDEX* pTrans) {
   \                     _DrawBitmap:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   30C09DE5           LDR      R12,[SP, #+48]
   \   0000000C   34E09DE5           LDR      LR,[SP, #+52]
   \   00000010   38409DE5           LDR      R4,[SP, #+56]
   \   00000014   3C509DE5           LDR      R5,[SP, #+60]
   \   00000018   40609DE5           LDR      R6,[SP, #+64]
   \   0000001C   44709DE5           LDR      R7,[SP, #+68]
     87            DRIVER_CONTEXT * pContext;
     88          
     89            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
     90            pContext->pDrawingAPI->pfDrawBitmap(pDevice, x0, y0, xSize, ySize, BitsPerPixel, BytesPerLine, pData, Diff, pTrans);
   \   00000020   10608DE5           STR      R6,[SP, #+16]
   \   00000024   14708DE5           STR      R7,[SP, #+20]
   \   00000028   0C508DE5           STR      R5,[SP, #+12]
   \   0000002C   08408DE5           STR      R4,[SP, #+8]
   \   00000030   04E08DE5           STR      LR,[SP, #+4]
   \   00000034   00C08DE5           STR      R12,[SP, #+0]
   \   00000038   08C090E5           LDR      R12,[R0, #+8]
   \   0000003C   28C09CE5           LDR      R12,[R12, #+40]
   \   00000040   00C09CE5           LDR      R12,[R12, #+0]
   \   00000044   3CFF2FE1           BLX      R12
     91          }
   \   00000048   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   0000004C   F080BDE8           POP      {R4-R7,PC}       ;; return
     92          
     93          /*********************************************************************
     94          *
     95          *       _GetPixelIndex
     96          */

   \                                 In section .text, align 4, keep-with-next
     97          static unsigned int _GetPixelIndex(GUI_DEVICE * pDevice, int x, int y) {
     98            DRIVER_CONTEXT * pContext;
     99          
    100            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    101            return pContext->pDrawingAPI->pfGetPixelIndex(pDevice, x, y);
   \                     _GetPixelIndex:
   \   00000000   083090E5           LDR      R3,[R0, #+8]
   \   00000004   283093E5           LDR      R3,[R3, #+40]
   \   00000008   103093E5           LDR      R3,[R3, #+16]
   \   0000000C   13FF2FE1           BX       R3               ;; tailcall
    102          }
    103          
    104          /*********************************************************************
    105          *
    106          *       _SetPixelIndex
    107          */

   \                                 In section .text, align 4, keep-with-next
    108          static void _SetPixelIndex(GUI_DEVICE * pDevice, int x, int y, int PixelIndex) {
    109            DRIVER_CONTEXT * pContext;
    110          
    111            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    112            pContext->pDrawingAPI->pfSetPixelIndex(pDevice, x, y, PixelIndex);
   \                     _SetPixelIndex:
   \   00000000   08C090E5           LDR      R12,[R0, #+8]
   \   00000004   28C09CE5           LDR      R12,[R12, #+40]
   \   00000008   14C09CE5           LDR      R12,[R12, #+20]
   \   0000000C   1CFF2FE1           BX       R12              ;; tailcall
    113          }
    114          
    115          /*********************************************************************
    116          *
    117          *       _XorPixel
    118          */

   \                                 In section .text, align 4, keep-with-next
    119          static void _XorPixel(GUI_DEVICE * pDevice, int x, int y) {
    120            DRIVER_CONTEXT * pContext;
    121          
    122            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    123            pContext->pDrawingAPI->pfXorPixel(pDevice, x, y);
   \                     _XorPixel:
   \   00000000   083090E5           LDR      R3,[R0, #+8]
   \   00000004   283093E5           LDR      R3,[R3, #+40]
   \   00000008   183093E5           LDR      R3,[R3, #+24]
   \   0000000C   13FF2FE1           BX       R3               ;; tailcall
    124          }
    125          
    126          /*********************************************************************
    127          *
    128          *       _DrawHLine
    129          */

   \                                 In section .text, align 4, keep-with-next
    130          static void _DrawHLine(GUI_DEVICE * pDevice, int x0, int y, int x1) {
    131            DRIVER_CONTEXT * pContext;
    132          
    133            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    134            pContext->pDrawingAPI->pfDrawHLine(pDevice, x0, y, x1);
   \                     _DrawHLine:
   \   00000000   08C090E5           LDR      R12,[R0, #+8]
   \   00000004   28C09CE5           LDR      R12,[R12, #+40]
   \   00000008   04C09CE5           LDR      R12,[R12, #+4]
   \   0000000C   1CFF2FE1           BX       R12              ;; tailcall
    135          }
    136          
    137          /*********************************************************************
    138          *
    139          *       _DrawVLine
    140          */

   \                                 In section .text, align 4, keep-with-next
    141          static void _DrawVLine(GUI_DEVICE * pDevice, int x, int y0, int y1) {
    142            DRIVER_CONTEXT * pContext;
    143          
    144            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    145            pContext->pDrawingAPI->pfDrawVLine(pDevice, x, y0, y1);
   \                     _DrawVLine:
   \   00000000   08C090E5           LDR      R12,[R0, #+8]
   \   00000004   28C09CE5           LDR      R12,[R12, #+40]
   \   00000008   08C09CE5           LDR      R12,[R12, #+8]
   \   0000000C   1CFF2FE1           BX       R12              ;; tailcall
    146          }
    147          
    148          /*********************************************************************
    149          *
    150          *       _FillRect
    151          */

   \                                 In section .text, align 4, keep-with-next
    152          static void _FillRect(GUI_DEVICE * pDevice, int x0, int y0, int x1, int y1) {
   \                     _FillRect:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   08C09DE5           LDR      R12,[SP, #+8]
    153            DRIVER_CONTEXT * pContext;
    154          
    155            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    156            pContext->pDrawingAPI->pfFillRect(pDevice, x0, y0, x1, y1);
   \   0000000C   00C08DE5           STR      R12,[SP, #+0]
   \   00000010   08C090E5           LDR      R12,[R0, #+8]
   \   00000014   28C09CE5           LDR      R12,[R12, #+40]
   \   00000018   0CC09CE5           LDR      R12,[R12, #+12]
   \   0000001C   3CFF2FE1           BLX      R12
    157          }
   \   00000020   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000024   0080BDE8           POP      {PC}             ;; return
    158          
    159          /*********************************************************************
    160          *
    161          *       Static code: Rest of API functions, only routing is required
    162          *
    163          **********************************************************************
    164          */
    165          /*********************************************************************
    166          *
    167          *       _SetOrg
    168          */

   \                                 In section .text, align 4, keep-with-next
    169          static void _SetOrg(GUI_DEVICE * pDevice, int x, int y) {
    170            pDevice = pDevice->pNext;
   \                     _SetOrg:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    171            pDevice->pDeviceAPI->pfSetOrg(pDevice, x, y);
   \   00000004   0C3090E5           LDR      R3,[R0, #+12]
   \   00000008   203093E5           LDR      R3,[R3, #+32]
   \   0000000C   13FF2FE1           BX       R3               ;; tailcall
    172          }
    173          
    174          /*********************************************************************
    175          *
    176          *       _GetDevFunc
    177          */

   \                                 In section .text, align 4, keep-with-next
    178          static void (* _GetDevFunc(GUI_DEVICE ** ppDevice, int Index))(void) {
    179            switch (Index) {
   \                     _GetDevFunc:
   \   00000000   010051E3           CMP      R1,#+1
    180            case LCD_DEVFUNC_READRECT:
    181              return NULL;
   \   00000004   0000A003           MOVEQ    R0,#+0
   \   00000008   0000001A           BNE      ??_GetDevFunc_0
    182            }
    183            *ppDevice = (*ppDevice)->pNext;
   \   0000000C   1EFF2FE1           BX       LR
   \                     ??_GetDevFunc_0:
   \   00000010   00402DE9           PUSH     {LR}
   \   00000014   002090E5           LDR      R2,[R0, #+0]
   \   00000018   04D04DE2           SUB      SP,SP,#+4
   \   0000001C   002092E5           LDR      R2,[R2, #+0]
   \   00000020   002080E5           STR      R2,[R0, #+0]
    184            return (*ppDevice)->pDeviceAPI->pfGetDevFunc(ppDevice, Index);
   \   00000024   0C2092E5           LDR      R2,[R2, #+12]
   \   00000028   242092E5           LDR      R2,[R2, #+36]
   \   0000002C   32FF2FE1           BLX      R2
   \   00000030   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000034   0080BDE8           POP      {PC}             ;; return
    185          }
    186          
    187          /*********************************************************************
    188          *
    189          *       _GetDevProp
    190          */

   \                                 In section .text, align 4, keep-with-next
    191          static I32 _GetDevProp(GUI_DEVICE * pDevice, int Index) {
   \                     _GetDevProp:
   \   00000000   00402DE9           PUSH     {LR}
    192            DRIVER_CONTEXT * pContext;
    193          
    194            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    195            switch (Index) {
   \   00000004   013041E2           SUB      R3,R1,#+1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   082090E5           LDR      R2,[R0, #+8]
   \   00000010   0D0053E3           CMP      R3,#+13
   \   00000014   03F18F90           ADDLS    PC,PC,R3, LSL #+2
   \                     ??_GetDevProp_0:
   \   00000018   3000008A           BHI      ??_GetDevProp_1
   \   0000001C   0C0000EA           B        ??_GetDevProp_2
   \   00000020   120000EA           B        ??_GetDevProp_3
   \   00000024   150000EA           B        ??_GetDevProp_4
   \   00000028   1B0000EA           B        ??_GetDevProp_5
   \   0000002C   2B0000EA           B        ??_GetDevProp_1
   \   00000030   2A0000EA           B        ??_GetDevProp_1
   \   00000034   290000EA           B        ??_GetDevProp_1
   \   00000038   280000EA           B        ??_GetDevProp_1
   \   0000003C   270000EA           B        ??_GetDevProp_1
   \   00000040   260000EA           B        ??_GetDevProp_1
   \   00000044   250000EA           B        ??_GetDevProp_1
   \   00000048   170000EA           B        ??_GetDevProp_6
   \   0000004C   190000EA           B        ??_GetDevProp_7
   \   00000050   1D0000EA           B        ??_GetDevProp_8
    196            case LCD_DEVCAP_XSIZE:
    197              return (pContext->Orientation & GUI_SWAP_XY)  ? pContext->ySize : pContext->xSize;
   \                     ??_GetDevProp_2:
   \   00000054   0C00D2E5           LDRB     R0,[R2, #+12]
   \   00000058   040010E3           TST      R0,#0x4
   \   0000005C   0100000A           BEQ      ??_GetDevProp_9
   \                     ??_GetDevProp_10:
   \   00000060   140092E5           LDR      R0,[R2, #+20]
   \   00000064   210000EA           B        ??_GetDevProp_11
   \                     ??_GetDevProp_9:
   \   00000068   100092E5           LDR      R0,[R2, #+16]
   \   0000006C   1F0000EA           B        ??_GetDevProp_11
    198            case LCD_DEVCAP_YSIZE:
    199              return (pContext->Orientation & GUI_SWAP_XY)  ? pContext->xSize : pContext->ySize;
   \                     ??_GetDevProp_3:
   \   00000070   0C00D2E5           LDRB     R0,[R2, #+12]
   \   00000074   040010E3           TST      R0,#0x4
   \   00000078   F8FFFF0A           BEQ      ??_GetDevProp_10
   \   0000007C   F9FFFFEA           B        ??_GetDevProp_9
    200            case LCD_DEVCAP_VXSIZE:
    201              return (pContext->Orientation & GUI_SWAP_XY)  ? pContext->vySize : pContext->vxSize;
   \                     ??_GetDevProp_4:
   \   00000080   0C00D2E5           LDRB     R0,[R2, #+12]
   \   00000084   040010E3           TST      R0,#0x4
   \   00000088   0100000A           BEQ      ??_GetDevProp_12
   \                     ??_GetDevProp_13:
   \   0000008C   1C0092E5           LDR      R0,[R2, #+28]
   \   00000090   160000EA           B        ??_GetDevProp_11
   \                     ??_GetDevProp_12:
   \   00000094   180092E5           LDR      R0,[R2, #+24]
   \   00000098   140000EA           B        ??_GetDevProp_11
    202            case LCD_DEVCAP_VYSIZE:
    203              return (pContext->Orientation & GUI_SWAP_XY)  ? pContext->vxSize : pContext->vySize;
   \                     ??_GetDevProp_5:
   \   0000009C   0C00D2E5           LDRB     R0,[R2, #+12]
   \   000000A0   040010E3           TST      R0,#0x4
   \   000000A4   F8FFFF0A           BEQ      ??_GetDevProp_13
   \   000000A8   F9FFFFEA           B        ??_GetDevProp_12
    204            case LCD_DEVCAP_MIRROR_X:
    205              return (pContext->Orientation & GUI_MIRROR_X) ? 1 : 0;
   \                     ??_GetDevProp_6:
   \   000000AC   0C00D2E5           LDRB     R0,[R2, #+12]
   \   000000B0   010000E2           AND      R0,R0,#0x1
   \   000000B4   0D0000EA           B        ??_GetDevProp_11
    206            case LCD_DEVCAP_MIRROR_Y:
    207              return (pContext->Orientation & GUI_MIRROR_Y) ? 1 : 0;
   \                     ??_GetDevProp_7:
   \   000000B8   0C0092E5           LDR      R0,[R2, #+12]
   \   000000BC   0110A0E3           MOV      R1,#+1
   \   000000C0   FF0000E2           AND      R0,R0,#0xFF
   \   000000C4   A00001E0           AND      R0,R1,R0, LSR #+1
   \   000000C8   080000EA           B        ??_GetDevProp_11
    208            case LCD_DEVCAP_SWAP_XY:
    209              return (pContext->Orientation & GUI_SWAP_XY)  ? 1 : 0;
   \                     ??_GetDevProp_8:
   \   000000CC   0C0092E5           LDR      R0,[R2, #+12]
   \   000000D0   0110A0E3           MOV      R1,#+1
   \   000000D4   FF0000E2           AND      R0,R0,#0xFF
   \   000000D8   200101E0           AND      R0,R1,R0, LSR #+2
   \   000000DC   030000EA           B        ??_GetDevProp_11
    210            }
    211            pDevice = pDevice->pNext;
   \                     ??_GetDevProp_1:
   \   000000E0   000090E5           LDR      R0,[R0, #+0]
    212            return pDevice->pDeviceAPI->pfGetDevProp(pDevice, Index);
   \   000000E4   0C2090E5           LDR      R2,[R0, #+12]
   \   000000E8   282092E5           LDR      R2,[R2, #+40]
   \   000000EC   32FF2FE1           BLX      R2
   \                     ??_GetDevProp_11:
   \   000000F0   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000F4   0080BDE8           POP      {PC}             ;; return
    213          }
    214          
    215          /*********************************************************************
    216          *
    217          *       _GetDevData
    218          */

   \                                 In section .text, align 4, keep-with-next
    219          static void * _GetDevData(GUI_DEVICE * pDevice, int Index) {
    220            pDevice = pDevice->pNext;
   \                     _GetDevData:
   \   00000000   000090E5           LDR      R0,[R0, #+0]
    221            return pDevice->pDeviceAPI->pfGetDevData(pDevice, Index);
   \   00000004   0C2090E5           LDR      R2,[R0, #+12]
   \   00000008   2C2092E5           LDR      R2,[R2, #+44]
   \   0000000C   12FF2FE1           BX       R2               ;; tailcall
    222          }
    223          
    224          /*********************************************************************
    225          *
    226          *       _GetRect
    227          */

   \                                 In section .text, align 4, keep-with-next
    228          static void _GetRect(GUI_DEVICE * pDevice, LCD_RECT * pRect) {
   \                     _GetRect:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    229            DRIVER_CONTEXT * pContext;
    230            GUI_RECT Rect;
    231          
    232            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
   \   00000004   085090E5           LDR      R5,[R0, #+8]
    233            pDevice = pDevice->pNext;
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
    234            pDevice->pDeviceAPI->pfGetRect(pDevice, &Rect);
   \   00000010   0C2090E5           LDR      R2,[R0, #+12]
   \   00000014   0140A0E1           MOV      R4,R1
   \   00000018   0D10A0E1           MOV      R1,SP
   \   0000001C   302092E5           LDR      R2,[R2, #+48]
   \   00000020   32FF2FE1           BLX      R2
    235            pRect->x0 = pRect->y0 = 0;
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   B200C4E1           STRH     R0,[R4, #+2]
   \   0000002C   B000C4E1           STRH     R0,[R4, #+0]
    236            if (pContext->Orientation & GUI_SWAP_XY) {
   \   00000030   0C00D5E5           LDRB     R0,[R5, #+12]
   \   00000034   040010E3           TST      R0,#0x4
   \   00000038   0300000A           BEQ      ??_GetRect_0
    237              pRect->x1 = Rect.y1;
   \   0000003C   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000040   B400C4E1           STRH     R0,[R4, #+4]
    238              pRect->y1 = Rect.x1;
   \   00000044   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000048   020000EA           B        ??_GetRect_1
    239            } else {
    240              pRect->x1 = Rect.x1;
   \                     ??_GetRect_0:
   \   0000004C   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000050   B400C4E1           STRH     R0,[R4, #+4]
    241              pRect->y1 = Rect.y1;
   \   00000054   F600DDE1           LDRSH    R0,[SP, #+6]
   \                     ??_GetRect_1:
   \   00000058   B600C4E1           STRH     R0,[R4, #+6]
    242            }
    243          }
   \   0000005C   0CD08DE2           ADD      SP,SP,#+12
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
    244          
    245          /*********************************************************************
    246          *
    247          *       Public data
    248          *
    249          **********************************************************************
    250          */
    251          /*********************************************************************
    252          *
    253          *       GUI_DEVICE_API structure
    254          */

   \                                 In section .text, align 4, keep-with-next
    255          const GUI_DEVICE_API GUIDRV_Rotate_API = {
   \                     GUIDRV_Rotate_API:
   \   00000000                      ; Initializer data, 52 bytes
   \   00000000   00000000....       DC32 0, _DrawBitmap, _DrawHLine, _DrawVLine, _FillRect, _GetPixelIndex, _SetPixelIndex, _XorPixel, _SetOrg, _GetDevFunc
   \              ............
   \              ............
   \              ............
   \              ............
   \              ............
   \              ........    
   \   00000028   ............       DC32 _GetDevProp, _GetDevData, _GetRect
   \              ............
    256            //
    257            // Data
    258            //
    259            DEVICE_CLASS_DRIVER,
    260            //
    261            // Drawing functions
    262            //
    263            _DrawBitmap,
    264            _DrawHLine,
    265            _DrawVLine,
    266            _FillRect,
    267            _GetPixelIndex,
    268            _SetPixelIndex,
    269            _XorPixel,
    270            //
    271            // Set origin
    272            //
    273            _SetOrg,
    274            //
    275            // Request information
    276            //
    277            _GetDevFunc,
    278            _GetDevProp,
    279            _GetDevData,
    280            _GetRect,
    281          };
    282          
    283          /*********************************************************************
    284          *
    285          *       Public code
    286          *
    287          **********************************************************************
    288          */
    289          /*********************************************************************
    290          *
    291          *       GUI_SetOrientationExCached
    292          */

   \                                 In section .text, align 4, keep-with-next
    293          int GUI_SetOrientationExCached(int Orientation, int LayerIndex, const GUI_ORIENTATION_API * pAPI) {
   \                     GUI_SetOrientationExCached:
   \   00000000   F54F2DE9           PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
    294            GUI_DEVICE     * pDevice;  // The 'rotation device'
    295            GUI_DEVICE     * pDriver;  // The real display driver
    296            DRIVER_CONTEXT * pContext; // Context of 'rotation device'
    297            int vxSize, vySize;
    298            int xSize, ySize;
    299          
    300            //
    301            // Delete already existing rotation device
    302            //
    303            pDevice = GUI_DEVICE__GetpDevice(LayerIndex, DEVICE_CLASS_DRIVER);
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   ........           BL       GUI_DEVICE__GetpDevice
   \   00000018   00B0A0E1           MOV      R11,R0
    304            if (pDevice->pDeviceAPI == &GUIDRV_Rotate_API) {
   \   0000001C   ........           ADR      R5,GUIDRV_Rotate_API
   \   00000020   0C009BE5           LDR      R0,[R11, #+12]
   \   00000024   050050E1           CMP      R0,R5
   \   00000028   0A00001A           BNE      ??GUI_SetOrientationExCached_1
    305              pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
   \   0000002C   08A09BE5           LDR      R10,[R11, #+8]
    306              if (pContext->pData) {
   \   00000030   00009AE5           LDR      R0,[R10, #+0]
   \   00000034   000050E3           CMP      R0,#+0
   \   00000038   0000000A           BEQ      ??GUI_SetOrientationExCached_2
    307                GUI_ALLOC_FreeFixedBlock(pContext->pData);
   \   0000003C   ........           BL       GUI_ALLOC_FreeFixedBlock
    308              }
    309              GUI_ALLOC_FreeFixedBlock(pContext);
   \                     ??GUI_SetOrientationExCached_2:
   \   00000040   0A00A0E1           MOV      R0,R10
   \   00000044   ........           BL       GUI_ALLOC_FreeFixedBlock
    310              GUI_DEVICE_Unlink(pDevice);
   \   00000048   0B00A0E1           MOV      R0,R11
   \   0000004C   ........           BL       GUI_DEVICE_Unlink
    311              GUI_DEVICE_Delete(pDevice);
   \   00000050   0B00A0E1           MOV      R0,R11
   \   00000054   ........           BL       GUI_DEVICE_Delete
    312            }
    313            //
    314            // Nothing to do if default orientation is required
    315            //
    316            if (Orientation == 0) {
   \                     ??GUI_SetOrientationExCached_1:
   \   00000058   04009DE5           LDR      R0,[SP, #+4]
   \   0000005C   000050E3           CMP      R0,#+0
   \   00000060   0100001A           BNE      ??GUI_SetOrientationExCached_3
    317              return 1;
   \                     ??GUI_SetOrientationExCached_4:
   \   00000064   0100A0E3           MOV      R0,#+1
   \   00000068   580000EA           B        ??GUI_SetOrientationExCached_5
    318            }
    319            //
    320            // Get size from current layer
    321            //
    322            xSize  = LCD_GetXSizeEx(LayerIndex);
   \                     ??GUI_SetOrientationExCached_3:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       LCD_GetXSizeEx
   \   00000074   0060A0E1           MOV      R6,R0
    323            ySize  = LCD_GetYSizeEx(LayerIndex);
   \   00000078   0400A0E1           MOV      R0,R4
   \   0000007C   ........           BL       LCD_GetYSizeEx
   \   00000080   0070A0E1           MOV      R7,R0
    324            vxSize = LCD_GetVXSizeEx(LayerIndex);
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       LCD_GetVXSizeEx
   \   0000008C   0080A0E1           MOV      R8,R0
    325            vySize = LCD_GetVYSizeEx(LayerIndex);
   \   00000090   0400A0E1           MOV      R0,R4
   \   00000094   ........           BL       LCD_GetVYSizeEx
   \   00000098   0090A0E1           MOV      R9,R0
    326            //
    327            // Don't rotate windows driver!
    328            //
    329            #ifdef WIN32
    330            pDevice = GUI_DEVICE__GetpDevice(LayerIndex, DEVICE_CLASS_DRIVER);
    331            if (pDevice->pDeviceAPI == GUIDRV_WIN32) {
    332              if (Orientation & GUI_SWAP_XY) {
    333                LCD_SetSizeEx(LayerIndex, ySize, xSize);
    334                LCD_SetVSizeEx(LayerIndex, vySize, vxSize);
    335              }
    336              return 0;
    337            }
    338            #endif
    339            //
    340            // Create device
    341            //
    342            pDriver = GUI_DEVICE__GetpDriver(LayerIndex);
   \   0000009C   0400A0E1           MOV      R0,R4
   \   000000A0   ........           BL       GUI_DEVICE__GetpDriver
    343            pDevice = GUI_DEVICE_Create(&GUIDRV_Rotate_API, pDriver->pColorConvAPI, GUI_DEVICE_STAYONTOP, LayerIndex);
   \   000000A4   101090E5           LDR      R1,[R0, #+16]
   \   000000A8   0430A0E1           MOV      R3,R4
   \   000000AC   0120A0E3           MOV      R2,#+1
   \   000000B0   0500A0E1           MOV      R0,R5
   \   000000B4   ........           BL       GUI_DEVICE_Create
   \   000000B8   00B0B0E1           MOVS     R11,R0
    344            //
    345            // Link it into device list
    346            //
    347            if (pDevice) {
   \   000000BC   0000000A           BEQ      ??GUI_SetOrientationExCached_6
    348              GUI_DEVICE_Link(pDevice);
   \   000000C0   ........           BL       GUI_DEVICE_Link
    349            }
    350            //
    351            // Create rotation context
    352            //
    353            pDevice->u.pContext = (DRIVER_CONTEXT *)GUI_ALLOC_GetFixedBlock(sizeof(DRIVER_CONTEXT));
   \                     ??GUI_SetOrientationExCached_6:
   \   000000C4   2C00A0E3           MOV      R0,#+44
   \   000000C8   ........           BL       GUI_ALLOC_GetFixedBlock
    354            if (pDevice->u.pContext == NULL) {
   \   000000CC   00A0A0E1           MOV      R10,R0
   \   000000D0   08008BE5           STR      R0,[R11, #+8]
   \   000000D4   00005AE3           CMP      R10,#+0
   \   000000D8   E1FFFF0A           BEQ      ??GUI_SetOrientationExCached_4
    355              GUI_DEBUG_ERROROUT(__FILE__": Memory allocation failed");
    356              return 1; // Error
    357            }
    358            pContext = (DRIVER_CONTEXT *)pDevice->u.pContext;
    359            //
    360            // Initialize context
    361            //
    362            pContext->xSize         = xSize;
   \   000000DC   10608AE5           STR      R6,[R10, #+16]
    363            pContext->ySize         = ySize;
   \   000000E0   14708AE5           STR      R7,[R10, #+20]
    364            pContext->vxSize        = vxSize;
   \   000000E4   18808AE5           STR      R8,[R10, #+24]
    365            pContext->vySize        = vySize;
   \   000000E8   1C908AE5           STR      R9,[R10, #+28]
    366            pContext->Orientation   = Orientation;
   \   000000EC   04009DE5           LDR      R0,[SP, #+4]
   \   000000F0   0C008AE5           STR      R0,[R10, #+12]
    367            pContext->pDrawingAPI   = pAPI;
   \   000000F4   08009DE5           LDR      R0,[SP, #+8]
   \   000000F8   28008AE5           STR      R0,[R10, #+40]
    368            //
    369            // Set pointer to the right LOG2PHYS-routine and pixel offset
    370            //
    371            switch (pContext->Orientation) {
   \   000000FC   0C009AE5           LDR      R0,[R10, #+12]
   \   00000100   010040E2           SUB      R0,R0,#+1
   \   00000104   060050E3           CMP      R0,#+6
   \   00000108   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GUI_SetOrientationExCached_0:
   \   0000010C   1D00008A           BHI      ??GUI_SetOrientationExCached_7
   \   00000110   050000EA           B        ??GUI_SetOrientationExCached_8
   \   00000114   080000EA           B        ??GUI_SetOrientationExCached_9
   \   00000118   0B0000EA           B        ??GUI_SetOrientationExCached_10
   \   0000011C   0C0000EA           B        ??GUI_SetOrientationExCached_11
   \   00000120   0F0000EA           B        ??GUI_SetOrientationExCached_12
   \   00000124   100000EA           B        ??GUI_SetOrientationExCached_13
   \   00000128   110000EA           B        ??GUI_SetOrientationExCached_14
    372            case GUI_MIRROR_X:
    373              pContext->pfLog2Phys  = _Log2Phys_X;
   \                     ??GUI_SetOrientationExCached_8:
   \   0000012C   ........           LDR      R0,??DataTable3
   \                     ??GUI_SetOrientationExCached_15:
   \   00000130   24008AE5           STR      R0,[R10, #+36]
    374              pContext->PixelOffset = -1;
   \   00000134   0000E0E3           MVN      R0,#+0
   \   00000138   110000EA           B        ??GUI_SetOrientationExCached_16
    375              break;
    376            case GUI_MIRROR_Y:
    377              pContext->pfLog2Phys  = _Log2Phys_Y;
   \                     ??GUI_SetOrientationExCached_9:
   \   0000013C   ........           LDR      R0,??DataTable3_1
   \   00000140   24008AE5           STR      R0,[R10, #+36]
    378              pContext->PixelOffset = 1;
   \   00000144   0100A0E3           MOV      R0,#+1
   \   00000148   0D0000EA           B        ??GUI_SetOrientationExCached_16
    379              break;
    380            case GUI_MIRROR_Y | GUI_MIRROR_X:
    381              pContext->pfLog2Phys  = _Log2Phys_XY;
   \                     ??GUI_SetOrientationExCached_10:
   \   0000014C   ........           LDR      R0,??DataTable3_2
   \   00000150   F6FFFFEA           B        ??GUI_SetOrientationExCached_15
    382              pContext->PixelOffset = -1;
    383              break;
    384            case GUI_SWAP_XY:
    385              pContext->pfLog2Phys  = _Log2Phys_S;
   \                     ??GUI_SetOrientationExCached_11:
   \   00000154   ........           LDR      R0,??DataTable3_3
   \                     ??GUI_SetOrientationExCached_17:
   \   00000158   24008AE5           STR      R0,[R10, #+36]
    386              pContext->PixelOffset = pContext->vxSize;
   \   0000015C   18009AE5           LDR      R0,[R10, #+24]
   \   00000160   070000EA           B        ??GUI_SetOrientationExCached_16
    387              break;
    388            case GUI_SWAP_XY | GUI_MIRROR_X:
    389              pContext->pfLog2Phys  = _Log2Phys_SX;
   \                     ??GUI_SetOrientationExCached_12:
   \   00000164   ........           LDR      R0,??DataTable3_4
   \   00000168   FAFFFFEA           B        ??GUI_SetOrientationExCached_17
    390              pContext->PixelOffset = pContext->vxSize;
    391              break;
    392            case GUI_SWAP_XY | GUI_MIRROR_Y:
    393              pContext->pfLog2Phys  = _Log2Phys_SY;
   \                     ??GUI_SetOrientationExCached_13:
   \   0000016C   ........           LDR      R0,??DataTable3_5
   \   00000170   000000EA           B        ??GUI_SetOrientationExCached_18
    394              pContext->PixelOffset = -pContext->vxSize;
    395              break;
    396            case GUI_SWAP_XY | GUI_MIRROR_Y | GUI_MIRROR_X:
    397              pContext->pfLog2Phys  = _Log2Phys_SXY;
   \                     ??GUI_SetOrientationExCached_14:
   \   00000174   ........           LDR      R0,??DataTable3_6
   \                     ??GUI_SetOrientationExCached_18:
   \   00000178   24008AE5           STR      R0,[R10, #+36]
    398              pContext->PixelOffset = -pContext->vxSize;
   \   0000017C   18009AE5           LDR      R0,[R10, #+24]
   \   00000180   000060E2           RSB      R0,R0,#+0
   \                     ??GUI_SetOrientationExCached_16:
   \   00000184   20008AE5           STR      R0,[R10, #+32]
    399              break;
    400            }
    401            //
    402            // Allocate cache if required
    403            //
    404            if (pAPI->BytesPerPixel) {
   \                     ??GUI_SetOrientationExCached_7:
   \   00000188   08009DE5           LDR      R0,[SP, #+8]
   \   0000018C   1C1090E5           LDR      R1,[R0, #+28]
   \   00000190   000051E3           CMP      R1,#+0
   \   00000194   0C00000A           BEQ      ??GUI_SetOrientationExCached_19
    405              pContext->pData = (U8 *)GUI_ALLOC_GetFixedBlock(vxSize * vySize * pAPI->BytesPerPixel);
   \   00000198   990800E0           MUL      R0,R9,R8
   \   0000019C   910000E0           MUL      R0,R1,R0
   \   000001A0   ........           BL       GUI_ALLOC_GetFixedBlock
   \   000001A4   00008AE5           STR      R0,[R10, #+0]
    406              if (pContext->pData == NULL) {
   \   000001A8   000050E3           CMP      R0,#+0
   \   000001AC   0200001A           BNE      ??GUI_SetOrientationExCached_20
    407                GUI_DEBUG_ERROROUT(__FILE__": Memory allocation failed");
    408                GUI_ALLOC_FreeFixedBlock(pContext);
   \   000001B0   0A00A0E1           MOV      R0,R10
   \   000001B4   ........           BL       GUI_ALLOC_FreeFixedBlock
    409                return 1; // Error
   \   000001B8   A9FFFFEA           B        ??GUI_SetOrientationExCached_4
    410              }
    411              pContext->BytesPerLine = pAPI->BytesPerPixel * vxSize;
   \                     ??GUI_SetOrientationExCached_20:
   \   000001BC   08009DE5           LDR      R0,[SP, #+8]
   \   000001C0   1C0090E5           LDR      R0,[R0, #+28]
   \   000001C4   980000E0           MUL      R0,R8,R0
   \   000001C8   08008AE5           STR      R0,[R10, #+8]
    412            }
    413            return 0;
   \                     ??GUI_SetOrientationExCached_19:
   \   000001CC   0000A0E3           MOV      R0,#+0
   \                     ??GUI_SetOrientationExCached_5:
   \   000001D0   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000001D4   F08FBDE8           POP      {R4-R11,PC}      ;; return
    414          }
    415          
    416          /*********************************************************************
    417          *
    418          *       GUI_SetOrientationEx
    419          */

   \                                 In section .text, align 4, keep-with-next
    420          int GUI_SetOrientationEx(int Orientation, int LayerIndex) {
   \                     GUI_SetOrientationEx:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
    421            int BitsPerPixel;
    422            
    423            BitsPerPixel = LCD_GetBitsPerPixelEx(LayerIndex);
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   ........           BL       LCD_GetBitsPerPixelEx
    424            if        (BitsPerPixel < 8) {
   \   00000018   080050E3           CMP      R0,#+8
    425              return GUI_SetOrientationExCached(Orientation, LayerIndex, GUI_ORIENTATION_C0);
   \   0000001C   ........           LDRLT    R2,??DataTable3_7
   \   00000020   040000BA           BLT      ??GUI_SetOrientationEx_0
    426            } else if (BitsPerPixel == 8) {
    427              return GUI_SetOrientationExCached(Orientation, LayerIndex, GUI_ORIENTATION_C8);
   \   00000024   ........           LDREQ    R2,??DataTable3_8
   \   00000028   0200000A           BEQ      ??GUI_SetOrientationEx_0
    428            } else if (BitsPerPixel <= 16) {
   \   0000002C   110050E3           CMP      R0,#+17
    429              return GUI_SetOrientationExCached(Orientation, LayerIndex, GUI_ORIENTATION_C16);
   \   00000030   ........           LDRLT    R2,??DataTable3_9
    430            } else {
    431              return GUI_SetOrientationExCached(Orientation, LayerIndex, GUI_ORIENTATION_C32);
   \   00000034   ........           LDRGE    R2,??DataTable3_10
   \                     ??GUI_SetOrientationEx_0:
   \   00000038   0510A0E1           MOV      R1,R5
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   04D08DE2           ADD      SP,SP,#+4
   \   00000044   3040BDE8           POP      {R4,R5,LR}
   \   00000048   ........           B        GUI_SetOrientationExCached  ;; tailcall
    432            }
    433          }
    434          
    435          /*********************************************************************
    436          *
    437          *       GUI_SetOrientation
    438          */

   \                                 In section .text, align 4, keep-with-next
    439          int GUI_SetOrientation(int Orientation) {
   \                     GUI_SetOrientation:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    440            return GUI_SetOrientationEx(Orientation, GUI_Context.SelLayer);
   \   00000008   ........           LDR      R0,??DataTable3_11
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   1150D0E5           LDRB     R5,[R0, #+17]
   \   00000014   0500A0E1           MOV      R0,R5
   \   00000018   ........           BL       LCD_GetBitsPerPixelEx
   \   0000001C   080050E3           CMP      R0,#+8
   \   00000020   060000BA           BLT      ??GUI_SetOrientation_0
   \   00000024   0300000A           BEQ      ??GUI_SetOrientation_1
   \   00000028   110050E3           CMP      R0,#+17
   \   0000002C   ........           LDRGE    R2,??DataTable3_10
   \   00000030   ........           LDRLT    R2,??DataTable3_9
   \   00000034   020000EA           B        ??GUI_SetOrientation_2
   \                     ??GUI_SetOrientation_1:
   \   00000038   ........           LDR      R2,??DataTable3_8
   \   0000003C   000000EA           B        ??GUI_SetOrientation_2
   \                     ??GUI_SetOrientation_0:
   \   00000040   ........           LDR      R2,??DataTable3_7
   \                     ??GUI_SetOrientation_2:
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   04D08DE2           ADD      SP,SP,#+4
   \   00000050   3040BDE8           POP      {R4,R5,LR}
   \   00000054   ........           B        GUI_SetOrientationExCached  ;; tailcall
    441          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     _Log2Phys_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   ........           DC32     _Log2Phys_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   ........           DC32     _Log2Phys_XY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   ........           DC32     _Log2Phys_S

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   ........           DC32     _Log2Phys_SX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   ........           DC32     _Log2Phys_SY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   ........           DC32     _Log2Phys_SXY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   ........           DC32     GUI_OrientationAPI_C0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   ........           DC32     GUI_OrientationAPI_C8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   ........           DC32     GUI_OrientationAPI_C16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   ........           DC32     GUI_OrientationAPI_C32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   ........           DC32     GUI_Context
    442          
    443          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                   .cstack
     --------                   -------
     GUI_SetOrientation             16
     GUI_SetOrientationEx           16
     GUI_SetOrientationExCached     48
     _DrawBitmap                    48
     _DrawHLine                      8
     _DrawVLine                      8
     _FillRect                       8
     _GetDevData                     8
     _GetDevFunc                     8
     _GetDevProp                     8
     _GetPixelIndex                  8
     _GetRect                       24
     _Log2Phys_S                     0
     _Log2Phys_SX                    0
     _Log2Phys_SXY                   4
     _Log2Phys_SY                    0
     _Log2Phys_X                     0
     _Log2Phys_XY                    4
     _Log2Phys_Y                     0
     _SetOrg                         8
     _SetPixelIndex                  8
     _XorPixel                       8


   Section sizes:

     Function/Label             Bytes
     --------------             -----
     _Log2Phys_X                  28
     _Log2Phys_Y                  28
     _Log2Phys_XY                 44
     _Log2Phys_S                  16
     _Log2Phys_SX                 28
     _Log2Phys_SY                 28
     _Log2Phys_SXY                44
     _DrawBitmap                  80
     _GetPixelIndex               16
     _SetPixelIndex               16
     _XorPixel                    16
     _DrawHLine                   16
     _DrawVLine                   16
     _FillRect                    40
     _SetOrg                      16
     _GetDevFunc                  56
     _GetDevProp                 248
     _GetDevData                  16
     _GetRect                    100
     GUIDRV_Rotate_API            52
     GUI_SetOrientationExCached  472
     GUI_SetOrientationEx         76
     GUI_SetOrientation           88
     ??DataTable3                  4
     ??DataTable3_1                4
     ??DataTable3_2                4
     ??DataTable3_3                4
     ??DataTable3_4                4
     ??DataTable3_5                4
     ??DataTable3_6                4
     ??DataTable3_7                4
     ??DataTable3_8                4
     ??DataTable3_9                4
     ??DataTable3_10               4
     ??DataTable3_11               4

 
 1 588 bytes in section .text
 
 1 588 bytes of CODE memory

Errors: none
Warnings: none
