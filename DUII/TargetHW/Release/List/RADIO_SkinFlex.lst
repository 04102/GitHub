###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:27 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\RADIO_SkinFlex.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\RADIO_SkinFlex.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\RADIO_SkinFlex.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\RADIO_SkinFlex.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\RADIO_SkinFlex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : RADIO_SkinFlex.c
     19          Purpose     : Implementation of framewindow skin
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "RADIO_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines (configuration defaults)
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   RADIO_SKINFLEX_SIZE
     36            #define RADIO_SKINFLEX_SIZE 12
     37          #endif
     38          
     39          #ifndef   RADIO_SKINPROPS_CHECKED

   \                                 In section .data, align 4
     40            static RADIO_SKINFLEX_PROPS _PropsChecked = {
   \                     _PropsChecked:
   \   00000000   70707000FCFC       DC32 7368816, 16579836, 12170158, 4210752, 12
   \              FC00AEB3B900
   \              404040000C00
   \              0000        
     41              { 0x00707070, 0x00FCFCFC, 0x00B9B3AE, 0x00404040 },
     42              RADIO_SKINFLEX_SIZE,
     43            };
     44            #define RADIO_SKINPROPS_CHECKED     &_PropsChecked
     45          #endif
     46          
     47          #ifndef   RADIO_SKINPROPS_UNCHECKED
     48            static RADIO_SKINFLEX_PROPS _PropsUnchecked = {
   \                     _PropsUnchecked:
   \   00000014   70707000FCFC       DC32 7368816, 16579836, 12170158, 15987699, 12
   \              FC00AEB3B900
   \              F3F3F3000C00
   \              0000        
     49              { 0x00707070, 0x00FCFCFC, 0x00B9B3AE, 0x00F3F3F3 },
     50              RADIO_SKINFLEX_SIZE,
     51            };
     52            #define RADIO_SKINPROPS_UNCHECKED   &_PropsUnchecked
     53          #endif
     54          
     55          /*********************************************************************
     56          *
     57          *       Static data
     58          *
     59          **********************************************************************
     60          */

   \                                 In section .data, align 4
     61          static RADIO_SKINFLEX_PROPS * _apProps[] = {
   \                     _apProps:
   \   00000000   ............       DC32 _PropsChecked, _PropsUnchecked
   \              ....        
     62            RADIO_SKINPROPS_CHECKED,
     63            RADIO_SKINPROPS_UNCHECKED,
     64          };
     65          
     66          /*********************************************************************
     67          *
     68          *       Static code
     69          *
     70          **********************************************************************
     71          */
     72          /*********************************************************************
     73          *
     74          *       _DrawText
     75          */
     76          static void _DrawText(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const RADIO_SKINFLEX_PROPS * pProps) {
     77            RADIO_Obj * pObj;
     78            GUI_COLOR TextColor;
     79            const char * pText;
     80          
     81            GUI_USE_PARA(pProps);
     82            pObj = RADIO_LOCK_H(pDrawItemInfo->hWin);
     83            TextColor = pObj->Props.TextColor;
     84            GUI_UNLOCK_H(pObj);
     85            LCD_SetColor(TextColor);
     86            pText = (const char *)pDrawItemInfo->p;
     87            GUI_DispStringAt(pText, pDrawItemInfo->x0, pDrawItemInfo->y0);
     88          }
     89          
     90          /*********************************************************************
     91          *
     92          *       _DrawFocus
     93          */
     94          static void _DrawFocus(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const RADIO_SKINFLEX_PROPS * pProps) {
     95            RADIO_Obj * pObj;
     96            GUI_RECT Rect;
     97            GUI_COLOR FocusColor;
     98          
     99            GUI_USE_PARA(pProps);
    100            pObj = RADIO_LOCK_H(pDrawItemInfo->hWin);
    101            FocusColor = pObj->Props.FocusColor;
    102            GUI_UNLOCK_H(pObj);
    103            Rect.x0 = pDrawItemInfo->x0;
    104            Rect.y0 = pDrawItemInfo->y0;
    105            Rect.x1 = pDrawItemInfo->x1;
    106            Rect.y1 = pDrawItemInfo->y1;
    107            LCD_SetColor(FocusColor);
    108            GUI_DrawFocusRect(&Rect, 0);
    109          }
    110          
    111          /*********************************************************************
    112          *
    113          *       Public code
    114          *
    115          **********************************************************************
    116          */
    117          /*********************************************************************
    118          *
    119          *       RADIO_DrawSkinFlex
    120          */

   \                                 In section .text, align 4, keep-with-next
    121          int RADIO_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     RADIO_DrawSkinFlex:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
    122            RADIO_Obj * pObj;
    123            const RADIO_SKINFLEX_PROPS * pProps;
    124            int Sel;
    125          
    126            //
    127            // Get object properties
    128            //
    129            pObj = RADIO_LOCK_H(pDrawItemInfo->hWin);
    130            Sel = pObj->Sel;
   \   0000000C   000094E5           LDR      R0,[R4, #+0]
   \   00000010   ........           BL       GUI_ALLOC_LockH
   \   00000014   F056D0E1           LDRSH    R5,[R0, #+96]
    131            GUI_UNLOCK_H(pObj);
   \   00000018   ........           BL       GUI_ALLOC_UnlockH
    132            //
    133            // Get right property pointer
    134            //
    135            pProps = (pDrawItemInfo->ItemIndex == Sel) ? _apProps[0] : _apProps[1];
   \   0000001C   081094E5           LDR      R1,[R4, #+8]
   \   00000020   ........           LDR      R0,??DataTable2
   \   00000024   050051E1           CMP      R1,R5
    136            //
    137            // Draw
    138            //
    139            switch (pDrawItemInfo->Cmd) {
   \   00000028   041094E5           LDR      R1,[R4, #+4]
   \   0000002C   14008012           ADDNE    R0,R0,#+20
   \   00000030   051041E2           SUB      R1,R1,#+5
   \   00000034   120051E3           CMP      R1,#+18
   \   00000038   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??RADIO_DrawSkinFlex_0:
   \   0000003C   1D00008A           BHI      ??RADIO_DrawSkinFlex_1
   \   00000040   110000EA           B        ??RADIO_DrawSkinFlex_2
   \   00000044   1B0000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000048   1A0000EA           B        ??RADIO_DrawSkinFlex_1
   \   0000004C   270000EA           B        ??RADIO_DrawSkinFlex_3
   \   00000050   180000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000054   170000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000058   160000EA           B        ??RADIO_DrawSkinFlex_1
   \   0000005C   150000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000060   140000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000064   130000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000068   120000EA           B        ??RADIO_DrawSkinFlex_1
   \   0000006C   140000EA           B        ??RADIO_DrawSkinFlex_4
   \   00000070   100000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000074   0F0000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000078   0E0000EA           B        ??RADIO_DrawSkinFlex_1
   \   0000007C   0D0000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000080   0C0000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000084   0B0000EA           B        ??RADIO_DrawSkinFlex_1
   \   00000088   2A0000EA           B        ??RADIO_DrawSkinFlex_5
    140            case WIDGET_ITEM_DRAW_BUTTON:
    141              GUI__FillTrippleArc(pDrawItemInfo->x0, 
    142                                  pDrawItemInfo->y0, 
    143                                  pProps->ButtonSize, 
    144                                  pProps->aColorButton[0], 
    145                                  pProps->aColorButton[1], 
    146                                  pProps->aColorButton[2], 
    147                                  pProps->aColorButton[3]);
   \                     ??RADIO_DrawSkinFlex_2:
   \   0000008C   0C1090E5           LDR      R1,[R0, #+12]
   \   00000090   08108DE5           STR      R1,[SP, #+8]
   \   00000094   081090E5           LDR      R1,[R0, #+8]
   \   00000098   04108DE5           STR      R1,[SP, #+4]
   \   0000009C   041090E5           LDR      R1,[R0, #+4]
   \   000000A0   00108DE5           STR      R1,[SP, #+0]
   \   000000A4   003090E5           LDR      R3,[R0, #+0]
   \   000000A8   102090E5           LDR      R2,[R0, #+16]
   \   000000AC   101094E5           LDR      R1,[R4, #+16]
   \   000000B0   0C0094E5           LDR      R0,[R4, #+12]
   \   000000B4   ........           BL       GUI__FillTrippleArc
    148              break;
    149            case WIDGET_ITEM_DRAW_TEXT:
    150              _DrawText(pDrawItemInfo, pProps);
    151              break;
    152            case WIDGET_ITEM_DRAW_FOCUS:
    153              _DrawFocus(pDrawItemInfo, pProps);
    154              break;
    155            case WIDGET_ITEM_GET_BUTTONSIZE:
    156              return pProps->ButtonSize;
    157            }
    158            return 0;
   \                     ??RADIO_DrawSkinFlex_1:
   \   000000B8   0000A0E3           MOV      R0,#+0
   \                     ??RADIO_DrawSkinFlex_6:
   \   000000BC   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   000000C0   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??RADIO_DrawSkinFlex_4:
   \   000000C4   000094E5           LDR      R0,[R4, #+0]
   \   000000C8   ........           BL       GUI_ALLOC_LockH
   \   000000CC   385090E5           LDR      R5,[R0, #+56]
   \   000000D0   ........           BL       GUI_ALLOC_UnlockH
   \   000000D4   0500A0E1           MOV      R0,R5
   \   000000D8   ........           BL       LCD_SetColor
   \   000000DC   102094E5           LDR      R2,[R4, #+16]
   \   000000E0   0C1094E5           LDR      R1,[R4, #+12]
   \   000000E4   1C0094E5           LDR      R0,[R4, #+28]
   \   000000E8   ........           BL       GUI_DispStringAt
   \   000000EC   F1FFFFEA           B        ??RADIO_DrawSkinFlex_1
   \                     ??RADIO_DrawSkinFlex_3:
   \   000000F0   000094E5           LDR      R0,[R4, #+0]
   \   000000F4   ........           BL       GUI_ALLOC_LockH
   \   000000F8   3C5090E5           LDR      R5,[R0, #+60]
   \   000000FC   ........           BL       GUI_ALLOC_UnlockH
   \   00000100   0C0094E5           LDR      R0,[R4, #+12]
   \   00000104   B000CDE1           STRH     R0,[SP, #+0]
   \   00000108   100094E5           LDR      R0,[R4, #+16]
   \   0000010C   B200CDE1           STRH     R0,[SP, #+2]
   \   00000110   140094E5           LDR      R0,[R4, #+20]
   \   00000114   B400CDE1           STRH     R0,[SP, #+4]
   \   00000118   180094E5           LDR      R0,[R4, #+24]
   \   0000011C   B600CDE1           STRH     R0,[SP, #+6]
   \   00000120   0500A0E1           MOV      R0,R5
   \   00000124   ........           BL       LCD_SetColor
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   0D00A0E1           MOV      R0,SP
   \   00000130   ........           BL       GUI_DrawFocusRect
   \   00000134   DFFFFFEA           B        ??RADIO_DrawSkinFlex_1
   \                     ??RADIO_DrawSkinFlex_5:
   \   00000138   100090E5           LDR      R0,[R0, #+16]
   \   0000013C   DEFFFFEA           B        ??RADIO_DrawSkinFlex_6
    159          }
    160          
    161          /*********************************************************************
    162          *
    163          *       RADIO_SetSkinFlexProps
    164          */

   \                                 In section .text, align 4, keep-with-next
    165          void RADIO_SetSkinFlexProps(const RADIO_SKINFLEX_PROPS * pProps, int Index) {
    166            if (Index < GUI_COUNTOF(_apProps)) {
   \                     RADIO_SetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??RADIO_SetSkinFlexProps_0
    167              *_apProps[Index] = *pProps;
   \   00000008   1EFF2FE1           BX       LR
    168            }
   \                     ??RADIO_SetSkinFlexProps_0:
   \   0000000C   10402DE9           PUSH     {R4,LR}
   \   00000010   ........           LDR      R2,??DataTable2_1
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   1C50B0E8           LDM      R0!,{R2-R4,R12,LR}
   \   0000001C   1C50A1E8           STM      R1!,{R2-R4,R12,LR}
    169          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return
    170          
    171          /*********************************************************************
    172          *
    173          *       RADIO_GetSkinFlexProps
    174          */

   \                                 In section .text, align 4, keep-with-next
    175          void RADIO_GetSkinFlexProps(RADIO_SKINFLEX_PROPS * pProps, int Index) {
    176            if (Index < GUI_COUNTOF(_apProps)) {
   \                     RADIO_GetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??RADIO_GetSkinFlexProps_0
    177              *pProps = *_apProps[Index];
   \   00000008   1EFF2FE1           BX       LR
    178            }
   \                     ??RADIO_GetSkinFlexProps_0:
   \   0000000C   10402DE9           PUSH     {R4,LR}
   \   00000010   ........           LDR      R2,??DataTable2_1
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   0000001C   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
    179          }
   \   00000020   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     _PropsChecked

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   ........           DC32     _apProps
    180          
    181          #else
    182            void RADIO_SkinFlex_C(void);
    183            void RADIO_SkinFlex_C(void) {} /* avoid empty object files */
    184          #endif /* GUI_WINSUPPORT */
    185          
    186          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function               .cstack
     --------               -------
     RADIO_DrawSkinFlex         24
     RADIO_GetSkinFlexProps      8
     RADIO_SetSkinFlexProps      8


   Section sizes:

     Function/Label         Bytes
     --------------         -----
     _PropsChecked            40
     _PropsUnchecked
     _apProps                  8
     RADIO_DrawSkinFlex      320
     RADIO_SetSkinFlexProps   36
     RADIO_GetSkinFlexProps   36
     ??DataTable2              4
     ??DataTable2_1            4

 
  48 bytes in section .data
 400 bytes in section .text
 
 400 bytes of CODE memory
  48 bytes of DATA memory

Errors: none
Warnings: none
