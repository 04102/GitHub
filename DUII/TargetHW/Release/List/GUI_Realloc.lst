###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:24 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Realloc.c                       #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Realloc.c -D DEBUG=1 -D         #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_Realloc.lst            #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_Realloc.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Realloc.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIRealloc.C
     19          Purpose     : Dynamic memory management
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <string.h>           /* for memcpy, memset */
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Public routines: Using internal memory management
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUI_ALLOC_Realloc
     36          *
     37          * Purpose:
     38          *   Reallocate a memory block. This is typically used to grow memory
     39          *   blocks. The contents of the old memory block are copied into the
     40          *   new block (or as much as fits in case of shrinkage).
     41          *   In case of error the old memory block (and its handle) remain
     42          *   unchanged.
     43          *
     44          *  Parameters
     45          *    hOld       Current handle of the memory block. 0 (Invalid handle) is permitted.
     46          *    NewSize    Number of bytes required
     47          *
     48          * Return value:
     49          *   On success:    Handle of newly allocated memory block
     50          *   On error:      0
     51          */

   \                                 In section .text, align 4, keep-with-next
     52          GUI_HMEM GUI_ALLOC_Realloc(GUI_HMEM hOld, int NewSize) {
   \                     GUI_ALLOC_Realloc:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
     53            GUI_HMEM hNew;
     54            hNew = GUI_ALLOC_AllocNoInit(NewSize);
   \   00000010   0500A0E1           MOV      R0,R5
   \   00000014   ........           BL       GUI_ALLOC_AllocNoInit
   \   00000018   0060B0E1           MOVS     R6,R0
     55            if (hNew && hOld) {
   \   0000001C   00005413           CMPNE    R4,#+0
   \   00000020   1100000A           BEQ      ??GUI_ALLOC_Realloc_0
     56              void *pNew, *pOld;
     57              int Size, OldSize;
     58              OldSize = GUI_ALLOC_GetSize(hOld);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       GUI_ALLOC_GetSize
   \   0000002C   0070A0E1           MOV      R7,R0
     59              Size = (OldSize < NewSize) ? OldSize : NewSize;
   \   00000030   050057E1           CMP      R7,R5
   \   00000034   0570A0C1           MOVGT    R7,R5
     60              GUI_LOCK();
   \   00000038   ........           BL       GUI_Lock
     61              pNew = GUI_ALLOC_h2p(hNew);
   \   0000003C   0600A0E1           MOV      R0,R6
   \   00000040   ........           BL       GUI_ALLOC_h2p
   \   00000044   0050A0E1           MOV      R5,R0
     62              pOld = GUI_ALLOC_h2p(hOld);
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       GUI_ALLOC_h2p
     63              GUI_MEMCPY(pNew, pOld, Size);
   \   00000050   0010A0E1           MOV      R1,R0
   \   00000054   0720A0E1           MOV      R2,R7
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   ........           BL       __aeabi_memcpy
     64              GUI_ALLOC_Free(hOld);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       GUI_ALLOC_Free
     65              GUI_UNLOCK();
   \   00000068   ........           BL       GUI_Unlock
     66            }
     67            return hNew;
   \                     ??GUI_ALLOC_Realloc_0:
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   04D08DE2           ADD      SP,SP,#+4
   \   00000074   F080BDE8           POP      {R4-R7,PC}       ;; return
     68          }
     69          
     70          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_ALLOC_Realloc     24


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     GUI_ALLOC_Realloc  120

 
 120 bytes in section .text
 
 120 bytes of CODE memory

Errors: none
Warnings: none
