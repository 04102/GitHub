###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:49 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__DrawTwinArc.c                  #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__DrawTwinArc.c -D DEBUG=1 -D    #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI__DrawTwinArc.lst       #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI__DrawTwinArc.o          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__DrawTwinArc.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI__DrawTwinArc.c
     19          Purpose     : Implementation of GUI__DrawTwinArc
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI.h"
     24          
     25          #if GUI_WINSUPPORT
     26            #include "WM_Intern.h"
     27          #endif
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _GetTwinArcPara
     38          */
     39          static void _GetTwinArcPara(int r, int y, int * pl0, int * pl1, int * pl2) {
     40            U32 yy;
     41            int ri;
     42          
     43            yy = y * y;
     44            ri = r - 1;
     45            *pl0 = GUI__sqrt32((U32)r * r - yy);
     46            if (y < ri) {
     47              *pl1 = GUI__sqrt32((U32)ri * ri - yy);
     48              if (y < (r - 2)) {
     49                *pl2 = *pl1 - 1;
     50              } else {
     51                *pl2 = 0;
     52              }
     53            } else {
     54              *pl1 = 0;
     55              *pl2 = 0;
     56            }
     57          }
     58          
     59          /*********************************************************************
     60          *
     61          *       _GetTrippleArcPara
     62          */
     63          static void _GetTrippleArcPara(int r, int y, int * pl0, int * pl1, int * pl2, int * pl3) {
     64            U32 yy;
     65            int ri, rj;
     66          
     67            yy = y * y;
     68            ri = r - 1;
     69            rj = r - 2;
     70            *pl0 = GUI__sqrt32((U32)r * r - yy);
     71            if (y < ri) {
     72              *pl1 = GUI__sqrt32((U32)ri * ri - yy);
     73              if (y < rj) {
     74                *pl2 = GUI__sqrt32((U32)rj * rj - yy);
     75                if (y < (r - 3)) {
     76                  *pl3 = *pl2 - 1;
     77                } else {
     78                  *pl3 = 0;
     79                }
     80              } else {
     81                *pl2 = 0;
     82                *pl3 = 0;
     83              }
     84            } else {
     85              *pl1 = 0;
     86              *pl2 = 0;
     87              *pl3 = 0;
     88            }
     89          }
     90          
     91          /*********************************************************************
     92          *
     93          *       _DrawTwinArc4
     94          *
     95          * Purpose:
     96          *   Fills the edges of the given area with the desired arc.
     97          *   It first draws the pixels of ColorR0, then
     98          *   the pixels of ColorR1 and then it fills up the rest with ColorFill.
     99          *   This is done to make sure that in case of using automatic alpha
    100          *   blending no superfluous device operations are required.
    101          *
    102          * Parameters:
    103          *   x0        - Leftmost pixel
    104          *   x1        - Rightmost pixel
    105          *   y0        - Topmost pixel
    106          *   y1        - Bottommost pixel
    107          *   r         - Desired radius
    108          *   ColorR0   - Outer color of arc
    109          *   ColorR1   - Inner color of arc
    110          *   ColorFill - Color for filling up the remaining pixels
    111          */

   \                                 In section .text, align 4, keep-with-next
    112          static void _DrawTwinArc4(int x0, int y0, int x1, int y1, int r, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorFill) {
   \                     _DrawTwinArc4:
   \   00000000   FF4F2DE9           PUSH     {R0-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   48409DE5           LDR      R4,[SP, #+72]
   \   0000000C   4C009DE5           LDR      R0,[SP, #+76]
    113            int y, l0, l1, l2, yu, yl, xal, xel, xar, xer;
    114          
    115            if (r > 0) {
   \   00000010   010054E3           CMP      R4,#+1
   \   00000014   CC0000BA           BLT      ??_DrawTwinArc4_0
    116              //
    117              // Draw outer arc with ColorR0
    118              //
    119              GUI_SetColor(ColorR0);
   \   00000018   ........           BL       GUI_SetColor
   \   0000001C   015044E2           SUB      R5,R4,#+1
   \   00000020   010055E3           CMP      R5,#+1
   \   00000024   3B0000BA           BLT      ??_DrawTwinArc4_1
   \   00000028   18009DE5           LDR      R0,[SP, #+24]
   \   0000002C   000084E0           ADD      R0,R4,R0
   \   00000030   050040E0           SUB      R0,R0,R5
   \   00000034   04008DE5           STR      R0,[SP, #+4]
   \   00000038   20009DE5           LDR      R0,[SP, #+32]
   \   0000003C   040040E0           SUB      R0,R0,R4
   \   00000040   000085E0           ADD      R0,R5,R0
   \   00000044   00008DE5           STR      R0,[SP, #+0]
   \   00000048   1C009DE5           LDR      R0,[SP, #+28]
   \   0000004C   040040E0           SUB      R0,R0,R4
   \   00000050   0C008DE5           STR      R0,[SP, #+12]
   \   00000054   14009DE5           LDR      R0,[SP, #+20]
   \   00000058   000084E0           ADD      R0,R4,R0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
    120              for (y = r - 1; y > 0; y--) {
    121                yu = y0 + r - y;
    122                yl = y1 - r + y;
    123                _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc4_2:
   \   00000060   95050AE0           MUL      R10,R5,R5
   \   00000064   940400E0           MUL      R0,R4,R4
   \   00000068   04609DE5           LDR      R6,[SP, #+4]
   \   0000006C   00709DE5           LDR      R7,[SP, #+0]
   \   00000070   018044E2           SUB      R8,R4,#+1
   \   00000074   0A0040E0           SUB      R0,R0,R10
   \   00000078   ........           BL       GUI__sqrt32
   \   0000007C   0090A0E1           MOV      R9,R0
   \   00000080   080055E1           CMP      R5,R8
   \   00000084   980800B0           MULLT    R0,R8,R8
   \   00000088   0000A0A3           MOVGE    R0,#+0
   \   0000008C   0A0040B0           SUBLT    R0,R0,R10
   \   00000090   ........           BLLT     GUI__sqrt32
    124                xal = x0 + r - l0;
   \   00000094   08109DE5           LDR      R1,[SP, #+8]
   \   00000098   098041E0           SUB      R8,R1,R9
    125                xel = x0 + r - l1 - 1;
   \   0000009C   001041E0           SUB      R1,R1,R0
   \   000000A0   01B041E2           SUB      R11,R1,#+1
    126                xer = x1 - r + l0;
   \   000000A4   0C109DE5           LDR      R1,[SP, #+12]
    127                xar = x1 - r + l1 + 1;
    128                LCD_DrawHLine(xal, yu, xel);
   \   000000A8   0B20A0E1           MOV      R2,R11
   \   000000AC   010080E0           ADD      R0,R0,R1
   \   000000B0   019089E0           ADD      R9,R9,R1
   \   000000B4   01A080E2           ADD      R10,R0,#+1
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   0800A0E1           MOV      R0,R8
   \   000000C0   ........           BL       LCD_DrawHLine
    129                LCD_DrawHLine(xar, yu, xer);
   \   000000C4   0920A0E1           MOV      R2,R9
   \   000000C8   0610A0E1           MOV      R1,R6
   \   000000CC   0A00A0E1           MOV      R0,R10
   \   000000D0   ........           BL       LCD_DrawHLine
    130                LCD_DrawHLine(xal, yl, xel);
   \   000000D4   0B20A0E1           MOV      R2,R11
   \   000000D8   0710A0E1           MOV      R1,R7
   \   000000DC   0800A0E1           MOV      R0,R8
   \   000000E0   ........           BL       LCD_DrawHLine
    131                LCD_DrawHLine(xar, yl, xer);
   \   000000E4   0920A0E1           MOV      R2,R9
   \   000000E8   0710A0E1           MOV      R1,R7
   \   000000EC   0A00A0E1           MOV      R0,R10
   \   000000F0   ........           BL       LCD_DrawHLine
    132              }
   \   000000F4   00009DE5           LDR      R0,[SP, #+0]
   \   000000F8   015045E2           SUB      R5,R5,#+1
   \   000000FC   010040E2           SUB      R0,R0,#+1
   \   00000100   00008DE5           STR      R0,[SP, #+0]
   \   00000104   04009DE5           LDR      R0,[SP, #+4]
   \   00000108   010055E3           CMP      R5,#+1
   \   0000010C   010080E2           ADD      R0,R0,#+1
   \   00000110   04008DE5           STR      R0,[SP, #+4]
   \   00000114   D1FFFFAA           BGE      ??_DrawTwinArc4_2
    133              if (r > 1) {
   \                     ??_DrawTwinArc4_1:
   \   00000118   020054E3           CMP      R4,#+2
   \   0000011C   8A0000BA           BLT      ??_DrawTwinArc4_0
    134                //
    135                // Draw inner arc with ColorR1
    136                //
    137                GUI_SetColor(ColorR1);
   \   00000120   50009DE5           LDR      R0,[SP, #+80]
   \   00000124   ........           BL       GUI_SetColor
   \   00000128   025044E2           SUB      R5,R4,#+2
   \   0000012C   010055E3           CMP      R5,#+1
   \   00000130   400000BA           BLT      ??_DrawTwinArc4_3
   \   00000134   18009DE5           LDR      R0,[SP, #+24]
   \   00000138   000084E0           ADD      R0,R4,R0
   \   0000013C   050040E0           SUB      R0,R0,R5
   \   00000140   00008DE5           STR      R0,[SP, #+0]
   \   00000144   20009DE5           LDR      R0,[SP, #+32]
   \   00000148   040040E0           SUB      R0,R0,R4
   \   0000014C   000085E0           ADD      R0,R5,R0
   \   00000150   04008DE5           STR      R0,[SP, #+4]
   \   00000154   1C009DE5           LDR      R0,[SP, #+28]
   \   00000158   040040E0           SUB      R0,R0,R4
   \   0000015C   0C008DE5           STR      R0,[SP, #+12]
   \   00000160   14009DE5           LDR      R0,[SP, #+20]
   \   00000164   000084E0           ADD      R0,R4,R0
   \   00000168   08008DE5           STR      R0,[SP, #+8]
    138                for (y = r - 2; y > 0; y--) {
    139                  yu = y0 + r - y;
    140                  yl = y1 - r + y;
    141                  _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc4_4:
   \   0000016C   950508E0           MUL      R8,R5,R5
   \   00000170   940400E0           MUL      R0,R4,R4
   \   00000174   00609DE5           LDR      R6,[SP, #+0]
   \   00000178   04709DE5           LDR      R7,[SP, #+4]
   \   0000017C   019044E2           SUB      R9,R4,#+1
   \   00000180   080040E0           SUB      R0,R0,R8
   \   00000184   ........           BL       GUI__sqrt32
   \   00000188   090055E1           CMP      R5,R9
   \   0000018C   0000A0A3           MOVGE    R0,#+0
   \   00000190   0010A0A3           MOVGE    R1,#+0
   \   00000194   060000AA           BGE      ??_DrawTwinArc4_5
   \   00000198   990900E0           MUL      R0,R9,R9
   \   0000019C   080040E0           SUB      R0,R0,R8
   \   000001A0   ........           BL       GUI__sqrt32
   \   000001A4   021044E2           SUB      R1,R4,#+2
   \   000001A8   010055E1           CMP      R5,R1
   \   000001AC   0010A0A3           MOVGE    R1,#+0
   \   000001B0   011040B2           SUBLT    R1,R0,#+1
    142                  xal = x0 + r - l1;
   \                     ??_DrawTwinArc4_5:
   \   000001B4   08209DE5           LDR      R2,[SP, #+8]
   \   000001B8   008042E0           SUB      R8,R2,R0
    143                  xel = x0 + r - l2 - 1;
   \   000001BC   012042E0           SUB      R2,R2,R1
   \   000001C0   01B042E2           SUB      R11,R2,#+1
    144                  xer = x1 - r + l1;
   \   000001C4   0C209DE5           LDR      R2,[SP, #+12]
   \   000001C8   029080E0           ADD      R9,R0,R2
    145                  xar = x1 - r + l2 + 1;
   \   000001CC   020081E0           ADD      R0,R1,R2
   \   000001D0   01A080E2           ADD      R10,R0,#+1
    146                  LCD_DrawHLine(xal, yu, xel);
   \   000001D4   0B20A0E1           MOV      R2,R11
   \   000001D8   0610A0E1           MOV      R1,R6
   \   000001DC   0800A0E1           MOV      R0,R8
   \   000001E0   ........           BL       LCD_DrawHLine
    147                  LCD_DrawHLine(xar, yu, xer);
   \   000001E4   0920A0E1           MOV      R2,R9
   \   000001E8   0610A0E1           MOV      R1,R6
   \   000001EC   0A00A0E1           MOV      R0,R10
   \   000001F0   ........           BL       LCD_DrawHLine
    148                  LCD_DrawHLine(xal, yl, xel);
   \   000001F4   0B20A0E1           MOV      R2,R11
   \   000001F8   0710A0E1           MOV      R1,R7
   \   000001FC   0800A0E1           MOV      R0,R8
   \   00000200   ........           BL       LCD_DrawHLine
    149                  LCD_DrawHLine(xar, yl, xer);
   \   00000204   0920A0E1           MOV      R2,R9
   \   00000208   0710A0E1           MOV      R1,R7
   \   0000020C   0A00A0E1           MOV      R0,R10
   \   00000210   ........           BL       LCD_DrawHLine
    150                }
   \   00000214   04009DE5           LDR      R0,[SP, #+4]
   \   00000218   015045E2           SUB      R5,R5,#+1
   \   0000021C   010040E2           SUB      R0,R0,#+1
   \   00000220   04008DE5           STR      R0,[SP, #+4]
   \   00000224   00009DE5           LDR      R0,[SP, #+0]
   \   00000228   010055E3           CMP      R5,#+1
   \   0000022C   010080E2           ADD      R0,R0,#+1
   \   00000230   00008DE5           STR      R0,[SP, #+0]
   \   00000234   CCFFFFAA           BGE      ??_DrawTwinArc4_4
    151                if (r > 2) {
   \                     ??_DrawTwinArc4_3:
   \   00000238   030054E3           CMP      R4,#+3
   \   0000023C   420000BA           BLT      ??_DrawTwinArc4_0
    152                  //
    153                  // Fill up with ColorFill
    154                  //
    155                  GUI_SetColor(ColorFill);
   \   00000240   54009DE5           LDR      R0,[SP, #+84]
   \   00000244   ........           BL       GUI_SetColor
    156                  for (y = r - 3; y; y--) {
   \   00000248   035054E2           SUBS     R5,R4,#+3
   \   0000024C   3E00000A           BEQ      ??_DrawTwinArc4_0
   \   00000250   18009DE5           LDR      R0,[SP, #+24]
   \   00000254   000084E0           ADD      R0,R4,R0
   \   00000258   050040E0           SUB      R0,R0,R5
   \   0000025C   04008DE5           STR      R0,[SP, #+4]
   \   00000260   20009DE5           LDR      R0,[SP, #+32]
   \   00000264   040040E0           SUB      R0,R0,R4
   \   00000268   000085E0           ADD      R0,R5,R0
   \   0000026C   00008DE5           STR      R0,[SP, #+0]
   \   00000270   1C009DE5           LDR      R0,[SP, #+28]
   \   00000274   040040E0           SUB      R0,R0,R4
   \   00000278   0C008DE5           STR      R0,[SP, #+12]
   \   0000027C   01A080E2           ADD      R10,R0,#+1
   \   00000280   14009DE5           LDR      R0,[SP, #+20]
   \   00000284   000084E0           ADD      R0,R4,R0
   \   00000288   08008DE5           STR      R0,[SP, #+8]
   \   0000028C   01B040E2           SUB      R11,R0,#+1
    157                    yu = y0 + r - y;
    158                    yl = y1 - r + y;
    159                    _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc4_6:
   \   00000290   950508E0           MUL      R8,R5,R5
   \   00000294   940400E0           MUL      R0,R4,R4
   \   00000298   04609DE5           LDR      R6,[SP, #+4]
   \   0000029C   00709DE5           LDR      R7,[SP, #+0]
   \   000002A0   019044E2           SUB      R9,R4,#+1
   \   000002A4   080040E0           SUB      R0,R0,R8
   \   000002A8   ........           BL       GUI__sqrt32
   \   000002AC   090055E1           CMP      R5,R9
   \   000002B0   010000BA           BLT      ??_DrawTwinArc4_7
   \                     ??_DrawTwinArc4_8:
   \   000002B4   0010A0E3           MOV      R1,#+0
   \   000002B8   060000EA           B        ??_DrawTwinArc4_9
   \                     ??_DrawTwinArc4_7:
   \   000002BC   990900E0           MUL      R0,R9,R9
   \   000002C0   080040E0           SUB      R0,R0,R8
   \   000002C4   ........           BL       GUI__sqrt32
   \   000002C8   021044E2           SUB      R1,R4,#+2
   \   000002CC   010055E1           CMP      R5,R1
   \   000002D0   F7FFFFAA           BGE      ??_DrawTwinArc4_8
   \   000002D4   011040E2           SUB      R1,R0,#+1
    160                    xal = x0 + r - l2;
   \                     ??_DrawTwinArc4_9:
   \   000002D8   08009DE5           LDR      R0,[SP, #+8]
    161                    xel = x0 + r - 1;
    162                    xer = x1 - r + l2;
    163                    xar = x1 - r + 1;
    164                    LCD_DrawHLine(xal, yu, xel);
   \   000002DC   0B20A0E1           MOV      R2,R11
   \   000002E0   018040E0           SUB      R8,R0,R1
   \   000002E4   0C009DE5           LDR      R0,[SP, #+12]
   \   000002E8   009081E0           ADD      R9,R1,R0
   \   000002EC   0610A0E1           MOV      R1,R6
   \   000002F0   0800A0E1           MOV      R0,R8
   \   000002F4   ........           BL       LCD_DrawHLine
    165                    LCD_DrawHLine(xar, yu, xer);
   \   000002F8   0920A0E1           MOV      R2,R9
   \   000002FC   0610A0E1           MOV      R1,R6
   \   00000300   0A00A0E1           MOV      R0,R10
   \   00000304   ........           BL       LCD_DrawHLine
    166                    LCD_DrawHLine(xal, yl, xel);
   \   00000308   0B20A0E1           MOV      R2,R11
   \   0000030C   0710A0E1           MOV      R1,R7
   \   00000310   0800A0E1           MOV      R0,R8
   \   00000314   ........           BL       LCD_DrawHLine
    167                    LCD_DrawHLine(xar, yl, xer);
   \   00000318   0920A0E1           MOV      R2,R9
   \   0000031C   0710A0E1           MOV      R1,R7
   \   00000320   0A00A0E1           MOV      R0,R10
   \   00000324   ........           BL       LCD_DrawHLine
    168                  }
   \   00000328   00009DE5           LDR      R0,[SP, #+0]
   \   0000032C   015045E2           SUB      R5,R5,#+1
   \   00000330   010040E2           SUB      R0,R0,#+1
   \   00000334   00008DE5           STR      R0,[SP, #+0]
   \   00000338   04009DE5           LDR      R0,[SP, #+4]
   \   0000033C   000055E3           CMP      R5,#+0
   \   00000340   010080E2           ADD      R0,R0,#+1
   \   00000344   04008DE5           STR      R0,[SP, #+4]
   \   00000348   D0FFFF1A           BNE      ??_DrawTwinArc4_6
    169                }
    170              }
    171            }
    172          }
   \                     ??_DrawTwinArc4_0:
   \   0000034C   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   00000350   F08FBDE8           POP      {R4-R11,PC}      ;; return
    173          
    174          /*********************************************************************
    175          *
    176          *       _DrawTwinArc2
    177          *
    178          * Purpose:
    179          *   Fills the left and right side of the given area with Q1 and Q0
    180          *   of the desired arc. It first draws the pixels of ColorR0, then
    181          *   the pixels of ColorR1 and then it fills up the rest with ColorFill.
    182          *   This is done to make sure that in case of using automatic alpha
    183          *   blending no superfluous device operations are required.
    184          *
    185          * Parameters:
    186          *   x0        - Leftmost pixel
    187          *   x1        - Rightmost pixel
    188          *   y0        - Topmost pixel
    189          *   r         - Desired radius
    190          *   ColorR0   - Outer color of arc
    191          *   ColorR1   - Inner color of arc
    192          *   ColorFill - Color for filling up the remaining pixels
    193          */

   \                                 In section .text, align 4, keep-with-next
    194          static void _DrawTwinArc2(int x0, int x1, int y0, int r, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorFill) {
   \                     _DrawTwinArc2:
   \   00000000   F04E2DE9           PUSH     {R4-R7,R9-R11,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   07002DE9           PUSH     {R0-R2}
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   0340A0E1           MOV      R4,R3
   \   00000014   38009DE5           LDR      R0,[SP, #+56]
    195            int y, l0, l1, l2, yu, xal, xel, xar, xer;
    196          
    197            if (r > 0) {
   \   00000018   010054E3           CMP      R4,#+1
   \   0000001C   7E0000BA           BLT      ??_DrawTwinArc2_0
    198              //
    199              // Draw outer arc with ColorR0
    200              //
    201              GUI_SetColor(ColorR0);
   \   00000020   ........           BL       GUI_SetColor
   \   00000024   015044E2           SUB      R5,R4,#+1
   \   00000028   010055E3           CMP      R5,#+1
   \   0000002C   240000BA           BLT      ??_DrawTwinArc2_1
   \   00000030   10009DE5           LDR      R0,[SP, #+16]
   \   00000034   000084E0           ADD      R0,R4,R0
   \   00000038   05A040E0           SUB      R10,R0,R5
   \   0000003C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000040   046040E0           SUB      R6,R0,R4
   \   00000044   08009DE5           LDR      R0,[SP, #+8]
   \   00000048   007084E0           ADD      R7,R4,R0
    202              for (y = r - 1; y > 0; y--) {
    203                yu = y0 + r - y;
    204                _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc2_2:
   \   0000004C   950500E0           MUL      R0,R5,R5
   \   00000050   019044E2           SUB      R9,R4,#+1
   \   00000054   00008DE5           STR      R0,[SP, #+0]
   \   00000058   940400E0           MUL      R0,R4,R4
   \   0000005C   00109DE5           LDR      R1,[SP, #+0]
   \   00000060   010040E0           SUB      R0,R0,R1
   \   00000064   ........           BL       GUI__sqrt32
   \   00000068   090055E1           CMP      R5,R9
   \   0000006C   00B0A0E1           MOV      R11,R0
   \   00000070   0090A0A3           MOVGE    R9,#+0
   \   00000074   040000AA           BGE      ??_DrawTwinArc2_3
   \   00000078   990900E0           MUL      R0,R9,R9
   \   0000007C   00109DE5           LDR      R1,[SP, #+0]
   \   00000080   010040E0           SUB      R0,R0,R1
   \   00000084   ........           BL       GUI__sqrt32
   \   00000088   0090A0E1           MOV      R9,R0
    205                xal = x0 + r - l0;
    206                xel = x0 + r - l1 - 1;
    207                xer = x1 - r + l0;
    208                xar = x1 - r + l1 + 1;
    209                LCD_DrawHLine(xal, yu, xel);
   \                     ??_DrawTwinArc2_3:
   \   0000008C   090047E0           SUB      R0,R7,R9
   \   00000090   012040E2           SUB      R2,R0,#+1
   \   00000094   0A10A0E1           MOV      R1,R10
   \   00000098   0B0047E0           SUB      R0,R7,R11
   \   0000009C   ........           BL       LCD_DrawHLine
    210                LCD_DrawHLine(xar, yu, xer);
   \   000000A0   060089E0           ADD      R0,R9,R6
   \   000000A4   06208BE0           ADD      R2,R11,R6
   \   000000A8   0A10A0E1           MOV      R1,R10
   \   000000AC   010080E2           ADD      R0,R0,#+1
   \   000000B0   ........           BL       LCD_DrawHLine
    211              }
   \   000000B4   015045E2           SUB      R5,R5,#+1
   \   000000B8   01A08AE2           ADD      R10,R10,#+1
   \   000000BC   010055E3           CMP      R5,#+1
   \   000000C0   E1FFFFAA           BGE      ??_DrawTwinArc2_2
    212              if (r > 1) {
   \                     ??_DrawTwinArc2_1:
   \   000000C4   020054E3           CMP      R4,#+2
   \   000000C8   530000BA           BLT      ??_DrawTwinArc2_0
    213                //
    214                // Draw inner arc with ColorR1
    215                //
    216                GUI_SetColor(ColorR1);
   \   000000CC   3C009DE5           LDR      R0,[SP, #+60]
   \   000000D0   ........           BL       GUI_SetColor
   \   000000D4   025044E2           SUB      R5,R4,#+2
   \   000000D8   010055E3           CMP      R5,#+1
   \   000000DC   250000BA           BLT      ??_DrawTwinArc2_4
   \   000000E0   10009DE5           LDR      R0,[SP, #+16]
   \   000000E4   000084E0           ADD      R0,R4,R0
   \   000000E8   05B040E0           SUB      R11,R0,R5
   \   000000EC   0C009DE5           LDR      R0,[SP, #+12]
   \   000000F0   046040E0           SUB      R6,R0,R4
   \   000000F4   08009DE5           LDR      R0,[SP, #+8]
   \   000000F8   007084E0           ADD      R7,R4,R0
    217                for (y = r - 2; y > 0; y--) {
    218                  yu = y0 + r - y;
    219                  _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc2_5:
   \   000000FC   950509E0           MUL      R9,R5,R5
   \   00000100   940400E0           MUL      R0,R4,R4
   \   00000104   01A044E2           SUB      R10,R4,#+1
   \   00000108   090040E0           SUB      R0,R0,R9
   \   0000010C   ........           BL       GUI__sqrt32
   \   00000110   0A0055E1           CMP      R5,R10
   \   00000114   0090A0A3           MOVGE    R9,#+0
   \   00000118   00A0A0A3           MOVGE    R10,#+0
   \   0000011C   070000AA           BGE      ??_DrawTwinArc2_6
   \   00000120   9A0A00E0           MUL      R0,R10,R10
   \   00000124   090040E0           SUB      R0,R0,R9
   \   00000128   ........           BL       GUI__sqrt32
   \   0000012C   0090A0E1           MOV      R9,R0
   \   00000130   020044E2           SUB      R0,R4,#+2
   \   00000134   000055E1           CMP      R5,R0
   \   00000138   00A0A0A3           MOVGE    R10,#+0
   \   0000013C   01A049B2           SUBLT    R10,R9,#+1
    220                  xal = x0 + r - l1;
    221                  xel = x0 + r - l2 - 1;
    222                  xer = x1 - r + l1;
    223                  xar = x1 - r + l2 + 1;
    224                  LCD_DrawHLine(xal, yu, xel);
   \                     ??_DrawTwinArc2_6:
   \   00000140   0A0047E0           SUB      R0,R7,R10
   \   00000144   012040E2           SUB      R2,R0,#+1
   \   00000148   0B10A0E1           MOV      R1,R11
   \   0000014C   090047E0           SUB      R0,R7,R9
   \   00000150   ........           BL       LCD_DrawHLine
    225                  LCD_DrawHLine(xar, yu, xer);
   \   00000154   06008AE0           ADD      R0,R10,R6
   \   00000158   062089E0           ADD      R2,R9,R6
   \   0000015C   0B10A0E1           MOV      R1,R11
   \   00000160   010080E2           ADD      R0,R0,#+1
   \   00000164   ........           BL       LCD_DrawHLine
    226                }
   \   00000168   015045E2           SUB      R5,R5,#+1
   \   0000016C   01B08BE2           ADD      R11,R11,#+1
   \   00000170   010055E3           CMP      R5,#+1
   \   00000174   E0FFFFAA           BGE      ??_DrawTwinArc2_5
    227                if (r > 2) {
   \                     ??_DrawTwinArc2_4:
   \   00000178   030054E3           CMP      R4,#+3
   \   0000017C   260000BA           BLT      ??_DrawTwinArc2_0
    228                  //
    229                  // Fill up with ColorFill
    230                  //
    231                  GUI_SetColor(ColorFill);
   \   00000180   40009DE5           LDR      R0,[SP, #+64]
   \   00000184   ........           BL       GUI_SetColor
    232                  for (y = r - 3; y; y--) {
   \   00000188   035054E2           SUBS     R5,R4,#+3
   \   0000018C   2200000A           BEQ      ??_DrawTwinArc2_0
   \   00000190   10009DE5           LDR      R0,[SP, #+16]
   \   00000194   01B044E2           SUB      R11,R4,#+1
   \   00000198   000084E0           ADD      R0,R4,R0
   \   0000019C   059040E0           SUB      R9,R0,R5
   \   000001A0   0C009DE5           LDR      R0,[SP, #+12]
   \   000001A4   046040E0           SUB      R6,R0,R4
   \   000001A8   08009DE5           LDR      R0,[SP, #+8]
   \   000001AC   007084E0           ADD      R7,R4,R0
    233                    yu = y0 + r - y;
    234                    _GetTwinArcPara(r, y, &l0, &l1, &l2);
   \                     ??_DrawTwinArc2_7:
   \   000001B0   95050AE0           MUL      R10,R5,R5
   \   000001B4   940400E0           MUL      R0,R4,R4
   \   000001B8   0A0040E0           SUB      R0,R0,R10
   \   000001BC   ........           BL       GUI__sqrt32
   \   000001C0   0B0055E1           CMP      R5,R11
   \   000001C4   010000BA           BLT      ??_DrawTwinArc2_8
   \                     ??_DrawTwinArc2_9:
   \   000001C8   00A0A0E3           MOV      R10,#+0
   \   000001CC   060000EA           B        ??_DrawTwinArc2_10
   \                     ??_DrawTwinArc2_8:
   \   000001D0   9B0B00E0           MUL      R0,R11,R11
   \   000001D4   0A0040E0           SUB      R0,R0,R10
   \   000001D8   ........           BL       GUI__sqrt32
   \   000001DC   021044E2           SUB      R1,R4,#+2
   \   000001E0   010055E1           CMP      R5,R1
   \   000001E4   F7FFFFAA           BGE      ??_DrawTwinArc2_9
   \   000001E8   01A040E2           SUB      R10,R0,#+1
    235                    xal = x0 + r - l2;
    236                    xel = x0 + r - 1;
    237                    xer = x1 - r + l2;
    238                    xar = x1 - r + 1;
    239                    LCD_DrawHLine(xal, yu, xel);
   \                     ??_DrawTwinArc2_10:
   \   000001EC   012047E2           SUB      R2,R7,#+1
   \   000001F0   0910A0E1           MOV      R1,R9
   \   000001F4   0A0047E0           SUB      R0,R7,R10
   \   000001F8   ........           BL       LCD_DrawHLine
    240                    LCD_DrawHLine(xar, yu, xer);
   \   000001FC   06208AE0           ADD      R2,R10,R6
   \   00000200   0910A0E1           MOV      R1,R9
   \   00000204   010086E2           ADD      R0,R6,#+1
   \   00000208   ........           BL       LCD_DrawHLine
    241                  }
   \   0000020C   015045E2           SUB      R5,R5,#+1
   \   00000210   019089E2           ADD      R9,R9,#+1
   \   00000214   000055E3           CMP      R5,#+0
   \   00000218   E4FFFF1A           BNE      ??_DrawTwinArc2_7
    242                }
    243              }
    244            }
    245          }
   \                     ??_DrawTwinArc2_0:
   \   0000021C   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000220   F08EBDE8           POP      {R4-R7,R9-R11,PC}  ;; return
    246          
    247          /*********************************************************************
    248          *
    249          *       _FillTrippleArc
    250          *
    251          * Purpose:
    252          *   Fills the left and right side of the given area with Q1 and Q0
    253          *   of the desired arc. It first draws the pixels of ColorR0, then
    254          *   the pixels of ColorR1 and then it fills up the rest with ColorFill.
    255          *   This is done to make sure that in case of using automatic alpha
    256          *   blending no superfluous device operations are required.
    257          *
    258          * Parameters:
    259          *   x0, y0    - Upper left corner of area to be filled
    260          *   Size      - Size of area to be filled
    261          *   ColorR0   - Color of outer arc
    262          *   ColorR1   - Color of middle arc
    263          *   ColorR2   - Color of inner arc
    264          *   ColorFill - Color for filling up the remaining pixels
    265          *
    266          * Limitations:
    267          *   Size needs to be a multiple of 2
    268          */
    269          #if 1
    270          

   \                                 In section .text, align 4, keep-with-next
    271          static void _FillTrippleArc(int x0, int y0, int Size, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorR2, GUI_COLOR ColorFill) {
    272            int y, l0, l1, l2, l3, yu, yl, xal, xel, xar, xer, x1, y1, r;
    273          
    274            //
    275            // Check if size is a multiple of 2
    276            //
    277            if (Size & 1) {
   \                     _FillTrippleArc:
   \   00000000   010012E3           TST      R2,#0x1
   \   00000004   0000000A           BEQ      ??_FillTrippleArc_0
    278              return;
    279            }
    280            x1 = --x0 + Size + 1;
   \   00000008   1EFF2FE1           BX       LR
   \                     ??_FillTrippleArc_0:
   \   0000000C   FB4F2DE9           PUSH     {R0,R1,R3-R11,LR}
   \   00000010   20D04DE2           SUB      SP,SP,#+32
   \   00000014   010040E2           SUB      R0,R0,#+1
   \   00000018   20008DE5           STR      R0,[SP, #+32]
   \   0000001C   000082E0           ADD      R0,R2,R0
   \   00000020   010080E2           ADD      R0,R0,#+1
   \   00000024   14008DE5           STR      R0,[SP, #+20]
    281            y1 = --y0 + Size + 1;
   \   00000028   010041E2           SUB      R0,R1,#+1
   \   0000002C   24008DE5           STR      R0,[SP, #+36]
   \   00000030   000082E0           ADD      R0,R2,R0
   \   00000034   010080E2           ADD      R0,R0,#+1
   \   00000038   10008DE5           STR      R0,[SP, #+16]
    282            r = (Size >> 1) + 2;
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   C24080E0           ADD      R4,R0,R2, ASR #+1
    283            if (r > 0) {
   \   00000044   010054E3           CMP      R4,#+1
   \   00000048   430100BA           BLT      ??_FillTrippleArc_1
    284              //
    285              // Draw outer arc with ColorR0
    286              //
    287              GUI_SetColor(ColorR0);
   \   0000004C   0300A0E1           MOV      R0,R3
   \   00000050   ........           BL       GUI_SetColor
   \   00000054   010044E2           SUB      R0,R4,#+1
   \   00000058   015044E2           SUB      R5,R4,#+1
   \   0000005C   020050E3           CMP      R0,#+2
   \   00000060   500000BA           BLT      ??_FillTrippleArc_2
   \   00000064   24009DE5           LDR      R0,[SP, #+36]
   \   00000068   000084E0           ADD      R0,R4,R0
   \   0000006C   050040E0           SUB      R0,R0,R5
   \   00000070   18008DE5           STR      R0,[SP, #+24]
   \   00000074   10009DE5           LDR      R0,[SP, #+16]
   \   00000078   040040E0           SUB      R0,R0,R4
   \   0000007C   000085E0           ADD      R0,R5,R0
   \   00000080   04008DE5           STR      R0,[SP, #+4]
   \   00000084   14009DE5           LDR      R0,[SP, #+20]
   \   00000088   040040E0           SUB      R0,R0,R4
   \   0000008C   0C008DE5           STR      R0,[SP, #+12]
   \   00000090   20009DE5           LDR      R0,[SP, #+32]
   \   00000094   000084E0           ADD      R0,R4,R0
   \   00000098   08008DE5           STR      R0,[SP, #+8]
    288              for (y = r - 1; y > 1; y--) {
    289                yu = y0 + r - y;
    290                yl = y1 - r + y;
    291                _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
   \                     ??_FillTrippleArc_3:
   \   0000009C   020044E2           SUB      R0,R4,#+2
   \   000000A0   00008DE5           STR      R0,[SP, #+0]
   \   000000A4   950509E0           MUL      R9,R5,R5
   \   000000A8   940400E0           MUL      R0,R4,R4
   \   000000AC   18609DE5           LDR      R6,[SP, #+24]
   \   000000B0   04709DE5           LDR      R7,[SP, #+4]
   \   000000B4   018044E2           SUB      R8,R4,#+1
   \   000000B8   090040E0           SUB      R0,R0,R9
   \   000000BC   ........           BL       GUI__sqrt32
   \   000000C0   080055E1           CMP      R5,R8
   \   000000C4   00B0A0E1           MOV      R11,R0
   \   000000C8   0080A0A3           MOVGE    R8,#+0
   \   000000CC   0A0000AA           BGE      ??_FillTrippleArc_4
   \   000000D0   980800E0           MUL      R0,R8,R8
   \   000000D4   090040E0           SUB      R0,R0,R9
   \   000000D8   ........           BL       GUI__sqrt32
   \   000000DC   0080A0E1           MOV      R8,R0
   \   000000E0   00009DE5           LDR      R0,[SP, #+0]
   \   000000E4   000055E1           CMP      R5,R0
   \   000000E8   030000AA           BGE      ??_FillTrippleArc_4
   \   000000EC   0010A0E1           MOV      R1,R0
   \   000000F0   910000E0           MUL      R0,R1,R0
   \   000000F4   090040E0           SUB      R0,R0,R9
   \   000000F8   ........           BL       GUI__sqrt32
    292                xal = x0 + r - l0;
   \                     ??_FillTrippleArc_4:
   \   000000FC   08009DE5           LDR      R0,[SP, #+8]
   \   00000100   0B9040E0           SUB      R9,R0,R11
    293                xel = x0 + r - l1 - 1;
   \   00000104   080040E0           SUB      R0,R0,R8
   \   00000108   01A040E2           SUB      R10,R0,#+1
    294                xer = x1 - r + l0;
   \   0000010C   0C009DE5           LDR      R0,[SP, #+12]
   \   00000110   00B08BE0           ADD      R11,R11,R0
    295                xar = x1 - r + l1 + 1;
   \   00000114   000088E0           ADD      R0,R8,R0
   \   00000118   018080E2           ADD      R8,R0,#+1
    296                if (xar < xel) {
   \   0000011C   0A0058E1           CMP      R8,R10
   \   00000120   070000AA           BGE      ??_FillTrippleArc_5
    297                  LCD_DrawHLine(xal, yu, xer);
   \   00000124   0B20A0E1           MOV      R2,R11
   \   00000128   0610A0E1           MOV      R1,R6
   \   0000012C   0900A0E1           MOV      R0,R9
   \   00000130   ........           BL       LCD_DrawHLine
    298                  LCD_DrawHLine(xal, yl, xer);
   \   00000134   0B20A0E1           MOV      R2,R11
   \   00000138   0710A0E1           MOV      R1,R7
   \   0000013C   0900A0E1           MOV      R0,R9
   \   00000140   0E0000EA           B        ??_FillTrippleArc_6
    299                } else {
    300                  LCD_DrawHLine(xal, yu, xel);
   \                     ??_FillTrippleArc_5:
   \   00000144   0A20A0E1           MOV      R2,R10
   \   00000148   0610A0E1           MOV      R1,R6
   \   0000014C   0900A0E1           MOV      R0,R9
   \   00000150   ........           BL       LCD_DrawHLine
    301                  LCD_DrawHLine(xar, yu, xer);
   \   00000154   0B20A0E1           MOV      R2,R11
   \   00000158   0610A0E1           MOV      R1,R6
   \   0000015C   0800A0E1           MOV      R0,R8
   \   00000160   ........           BL       LCD_DrawHLine
    302                  LCD_DrawHLine(xal, yl, xel);
   \   00000164   0A20A0E1           MOV      R2,R10
   \   00000168   0710A0E1           MOV      R1,R7
   \   0000016C   0900A0E1           MOV      R0,R9
   \   00000170   ........           BL       LCD_DrawHLine
    303                  LCD_DrawHLine(xar, yl, xer);
   \   00000174   0B20A0E1           MOV      R2,R11
   \   00000178   0710A0E1           MOV      R1,R7
   \   0000017C   0800A0E1           MOV      R0,R8
   \                     ??_FillTrippleArc_6:
   \   00000180   ........           BL       LCD_DrawHLine
    304                }
    305              }
   \   00000184   04009DE5           LDR      R0,[SP, #+4]
   \   00000188   015045E2           SUB      R5,R5,#+1
   \   0000018C   010040E2           SUB      R0,R0,#+1
   \   00000190   04008DE5           STR      R0,[SP, #+4]
   \   00000194   18009DE5           LDR      R0,[SP, #+24]
   \   00000198   020055E3           CMP      R5,#+2
   \   0000019C   010080E2           ADD      R0,R0,#+1
   \   000001A0   18008DE5           STR      R0,[SP, #+24]
   \   000001A4   BCFFFFAA           BGE      ??_FillTrippleArc_3
    306              if (r > 1) {
   \                     ??_FillTrippleArc_2:
   \   000001A8   020054E3           CMP      R4,#+2
   \   000001AC   EA0000BA           BLT      ??_FillTrippleArc_1
    307                //
    308                // Draw middle arc with ColorR1
    309                //
    310                GUI_SetColor(ColorR1);
   \   000001B0   50009DE5           LDR      R0,[SP, #+80]
   \   000001B4   ........           BL       GUI_SetColor
   \   000001B8   020044E2           SUB      R0,R4,#+2
   \   000001BC   025044E2           SUB      R5,R4,#+2
   \   000001C0   020050E3           CMP      R0,#+2
   \   000001C4   4D0000BA           BLT      ??_FillTrippleArc_7
   \   000001C8   24009DE5           LDR      R0,[SP, #+36]
   \   000001CC   000084E0           ADD      R0,R4,R0
   \   000001D0   050040E0           SUB      R0,R0,R5
   \   000001D4   00008DE5           STR      R0,[SP, #+0]
   \   000001D8   10009DE5           LDR      R0,[SP, #+16]
   \   000001DC   040040E0           SUB      R0,R0,R4
   \   000001E0   000085E0           ADD      R0,R5,R0
   \   000001E4   04008DE5           STR      R0,[SP, #+4]
   \   000001E8   14009DE5           LDR      R0,[SP, #+20]
   \   000001EC   040040E0           SUB      R0,R0,R4
   \   000001F0   0C008DE5           STR      R0,[SP, #+12]
   \   000001F4   20009DE5           LDR      R0,[SP, #+32]
   \   000001F8   000084E0           ADD      R0,R4,R0
   \   000001FC   08008DE5           STR      R0,[SP, #+8]
    311                for (y = r - 2; y > 1; y--) {
    312                  yu = y0 + r - y;
    313                  yl = y1 - r + y;
    314                  _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
   \                     ??_FillTrippleArc_8:
   \   00000200   950509E0           MUL      R9,R5,R5
   \   00000204   940400E0           MUL      R0,R4,R4
   \   00000208   00609DE5           LDR      R6,[SP, #+0]
   \   0000020C   04709DE5           LDR      R7,[SP, #+4]
   \   00000210   018044E2           SUB      R8,R4,#+1
   \   00000214   02A044E2           SUB      R10,R4,#+2
   \   00000218   090040E0           SUB      R0,R0,R9
   \   0000021C   ........           BL       GUI__sqrt32
   \   00000220   080055E1           CMP      R5,R8
   \   00000224   0080A0A3           MOVGE    R8,#+0
   \   00000228   0000A0A3           MOVGE    R0,#+0
   \   0000022C   080000AA           BGE      ??_FillTrippleArc_9
   \   00000230   980800E0           MUL      R0,R8,R8
   \   00000234   090040E0           SUB      R0,R0,R9
   \   00000238   ........           BL       GUI__sqrt32
   \   0000023C   0080A0E1           MOV      R8,R0
   \   00000240   0A0055E1           CMP      R5,R10
   \   00000244   9A0A00B0           MULLT    R0,R10,R10
   \   00000248   0000A0A3           MOVGE    R0,#+0
   \   0000024C   090040B0           SUBLT    R0,R0,R9
   \   00000250   ........           BLLT     GUI__sqrt32
    315                  xal = x0 + r - l1;
   \                     ??_FillTrippleArc_9:
   \   00000254   08109DE5           LDR      R1,[SP, #+8]
   \   00000258   089041E0           SUB      R9,R1,R8
    316                  xel = x0 + r - l2 - 1;
   \   0000025C   001041E0           SUB      R1,R1,R0
   \   00000260   01A041E2           SUB      R10,R1,#+1
    317                  xer = x1 - r + l1;
   \   00000264   0C109DE5           LDR      R1,[SP, #+12]
   \   00000268   01B088E0           ADD      R11,R8,R1
    318                  xar = x1 - r + l2 + 1;
   \   0000026C   010080E0           ADD      R0,R0,R1
   \   00000270   018080E2           ADD      R8,R0,#+1
    319                  if (xar < xel) {
   \   00000274   0A0058E1           CMP      R8,R10
   \   00000278   070000AA           BGE      ??_FillTrippleArc_10
    320                    LCD_DrawHLine(xal, yu, xer);
   \   0000027C   0B20A0E1           MOV      R2,R11
   \   00000280   0610A0E1           MOV      R1,R6
   \   00000284   0900A0E1           MOV      R0,R9
   \   00000288   ........           BL       LCD_DrawHLine
    321                    LCD_DrawHLine(xal, yl, xer);
   \   0000028C   0B20A0E1           MOV      R2,R11
   \   00000290   0710A0E1           MOV      R1,R7
   \   00000294   0900A0E1           MOV      R0,R9
   \   00000298   0E0000EA           B        ??_FillTrippleArc_11
    322                  } else {
    323                    LCD_DrawHLine(xal, yu, xel);
   \                     ??_FillTrippleArc_10:
   \   0000029C   0A20A0E1           MOV      R2,R10
   \   000002A0   0610A0E1           MOV      R1,R6
   \   000002A4   0900A0E1           MOV      R0,R9
   \   000002A8   ........           BL       LCD_DrawHLine
    324                    LCD_DrawHLine(xar, yu, xer);
   \   000002AC   0B20A0E1           MOV      R2,R11
   \   000002B0   0610A0E1           MOV      R1,R6
   \   000002B4   0800A0E1           MOV      R0,R8
   \   000002B8   ........           BL       LCD_DrawHLine
    325                    LCD_DrawHLine(xal, yl, xel);
   \   000002BC   0A20A0E1           MOV      R2,R10
   \   000002C0   0710A0E1           MOV      R1,R7
   \   000002C4   0900A0E1           MOV      R0,R9
   \   000002C8   ........           BL       LCD_DrawHLine
    326                    LCD_DrawHLine(xar, yl, xer);
   \   000002CC   0B20A0E1           MOV      R2,R11
   \   000002D0   0710A0E1           MOV      R1,R7
   \   000002D4   0800A0E1           MOV      R0,R8
   \                     ??_FillTrippleArc_11:
   \   000002D8   ........           BL       LCD_DrawHLine
    327                  }
    328                }
   \   000002DC   04009DE5           LDR      R0,[SP, #+4]
   \   000002E0   015045E2           SUB      R5,R5,#+1
   \   000002E4   010040E2           SUB      R0,R0,#+1
   \   000002E8   04008DE5           STR      R0,[SP, #+4]
   \   000002EC   00009DE5           LDR      R0,[SP, #+0]
   \   000002F0   020055E3           CMP      R5,#+2
   \   000002F4   010080E2           ADD      R0,R0,#+1
   \   000002F8   00008DE5           STR      R0,[SP, #+0]
   \   000002FC   BFFFFFAA           BGE      ??_FillTrippleArc_8
    329                if (r > 2) {
   \                     ??_FillTrippleArc_7:
   \   00000300   030054E3           CMP      R4,#+3
   \   00000304   940000BA           BLT      ??_FillTrippleArc_1
    330                  //
    331                  // Draw inner arc with ColorR2
    332                  //
    333                  GUI_SetColor(ColorR2);
   \   00000308   54009DE5           LDR      R0,[SP, #+84]
   \   0000030C   ........           BL       GUI_SetColor
   \   00000310   030044E2           SUB      R0,R4,#+3
   \   00000314   035044E2           SUB      R5,R4,#+3
   \   00000318   020050E3           CMP      R0,#+2
   \   0000031C   510000BA           BLT      ??_FillTrippleArc_12
   \   00000320   24009DE5           LDR      R0,[SP, #+36]
   \   00000324   000084E0           ADD      R0,R4,R0
   \   00000328   050040E0           SUB      R0,R0,R5
   \   0000032C   04008DE5           STR      R0,[SP, #+4]
   \   00000330   10009DE5           LDR      R0,[SP, #+16]
   \   00000334   040040E0           SUB      R0,R0,R4
   \   00000338   000085E0           ADD      R0,R5,R0
   \   0000033C   00008DE5           STR      R0,[SP, #+0]
   \   00000340   14009DE5           LDR      R0,[SP, #+20]
   \   00000344   040040E0           SUB      R0,R0,R4
   \   00000348   0C008DE5           STR      R0,[SP, #+12]
   \   0000034C   20009DE5           LDR      R0,[SP, #+32]
   \   00000350   000084E0           ADD      R0,R4,R0
   \   00000354   08008DE5           STR      R0,[SP, #+8]
    334                  for (y = r - 3; y > 1; y--) {
    335                    yu = y0 + r - y;
    336                    yl = y1 - r + y;
    337                    _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
   \                     ??_FillTrippleArc_13:
   \   00000358   950509E0           MUL      R9,R5,R5
   \   0000035C   940400E0           MUL      R0,R4,R4
   \   00000360   04609DE5           LDR      R6,[SP, #+4]
   \   00000364   00709DE5           LDR      R7,[SP, #+0]
   \   00000368   018044E2           SUB      R8,R4,#+1
   \   0000036C   02A044E2           SUB      R10,R4,#+2
   \   00000370   090040E0           SUB      R0,R0,R9
   \   00000374   ........           BL       GUI__sqrt32
   \   00000378   080055E1           CMP      R5,R8
   \   0000037C   020000BA           BLT      ??_FillTrippleArc_14
   \                     ??_FillTrippleArc_15:
   \   00000380   0000A0E3           MOV      R0,#+0
   \   00000384   0010A0E3           MOV      R1,#+0
   \   00000388   0B0000EA           B        ??_FillTrippleArc_16
   \                     ??_FillTrippleArc_14:
   \   0000038C   980800E0           MUL      R0,R8,R8
   \   00000390   090040E0           SUB      R0,R0,R9
   \   00000394   ........           BL       GUI__sqrt32
   \   00000398   0A0055E1           CMP      R5,R10
   \   0000039C   F7FFFFAA           BGE      ??_FillTrippleArc_15
   \   000003A0   9A0A00E0           MUL      R0,R10,R10
   \   000003A4   090040E0           SUB      R0,R0,R9
   \   000003A8   ........           BL       GUI__sqrt32
   \   000003AC   031044E2           SUB      R1,R4,#+3
   \   000003B0   010055E1           CMP      R5,R1
   \   000003B4   0010A0A3           MOVGE    R1,#+0
   \   000003B8   011040B2           SUBLT    R1,R0,#+1
    338                    xal = x0 + r - l2;
   \                     ??_FillTrippleArc_16:
   \   000003BC   08209DE5           LDR      R2,[SP, #+8]
   \   000003C0   009042E0           SUB      R9,R2,R0
    339                    xel = x0 + r - l3 - 1;
   \   000003C4   012042E0           SUB      R2,R2,R1
   \   000003C8   01A042E2           SUB      R10,R2,#+1
    340                    xer = x1 - r + l2;
   \   000003CC   0C209DE5           LDR      R2,[SP, #+12]
   \   000003D0   02B080E0           ADD      R11,R0,R2
    341                    xar = x1 - r + l3 + 1;
   \   000003D4   020081E0           ADD      R0,R1,R2
   \   000003D8   018080E2           ADD      R8,R0,#+1
    342                    if (xar < xel) {
   \   000003DC   0A0058E1           CMP      R8,R10
   \   000003E0   070000AA           BGE      ??_FillTrippleArc_17
    343                      LCD_DrawHLine(xal, yu, xer);
   \   000003E4   0B20A0E1           MOV      R2,R11
   \   000003E8   0610A0E1           MOV      R1,R6
   \   000003EC   0900A0E1           MOV      R0,R9
   \   000003F0   ........           BL       LCD_DrawHLine
    344                      LCD_DrawHLine(xal, yl, xer);
   \   000003F4   0B20A0E1           MOV      R2,R11
   \   000003F8   0710A0E1           MOV      R1,R7
   \   000003FC   0900A0E1           MOV      R0,R9
   \   00000400   0E0000EA           B        ??_FillTrippleArc_18
    345                    } else {
    346                      LCD_DrawHLine(xal, yu, xel);
   \                     ??_FillTrippleArc_17:
   \   00000404   0A20A0E1           MOV      R2,R10
   \   00000408   0610A0E1           MOV      R1,R6
   \   0000040C   0900A0E1           MOV      R0,R9
   \   00000410   ........           BL       LCD_DrawHLine
    347                      LCD_DrawHLine(xar, yu, xer);
   \   00000414   0B20A0E1           MOV      R2,R11
   \   00000418   0610A0E1           MOV      R1,R6
   \   0000041C   0800A0E1           MOV      R0,R8
   \   00000420   ........           BL       LCD_DrawHLine
    348                      LCD_DrawHLine(xal, yl, xel);
   \   00000424   0A20A0E1           MOV      R2,R10
   \   00000428   0710A0E1           MOV      R1,R7
   \   0000042C   0900A0E1           MOV      R0,R9
   \   00000430   ........           BL       LCD_DrawHLine
    349                      LCD_DrawHLine(xar, yl, xer);
   \   00000434   0B20A0E1           MOV      R2,R11
   \   00000438   0710A0E1           MOV      R1,R7
   \   0000043C   0800A0E1           MOV      R0,R8
   \                     ??_FillTrippleArc_18:
   \   00000440   ........           BL       LCD_DrawHLine
    350                    }
    351                  }
   \   00000444   00009DE5           LDR      R0,[SP, #+0]
   \   00000448   015045E2           SUB      R5,R5,#+1
   \   0000044C   010040E2           SUB      R0,R0,#+1
   \   00000450   00008DE5           STR      R0,[SP, #+0]
   \   00000454   04009DE5           LDR      R0,[SP, #+4]
   \   00000458   020055E3           CMP      R5,#+2
   \   0000045C   010080E2           ADD      R0,R0,#+1
   \   00000460   04008DE5           STR      R0,[SP, #+4]
   \   00000464   BBFFFFAA           BGE      ??_FillTrippleArc_13
    352                  if (r > 3) {
   \                     ??_FillTrippleArc_12:
   \   00000468   040054E3           CMP      R4,#+4
   \   0000046C   3A0000BA           BLT      ??_FillTrippleArc_1
    353                    //
    354                    // Fill up with ColorFill
    355                    //
    356                    GUI_SetColor(ColorFill);
   \   00000470   58009DE5           LDR      R0,[SP, #+88]
   \   00000474   ........           BL       GUI_SetColor
    357                    for (y = r - 4; y; y--) {
   \   00000478   045054E2           SUBS     R5,R4,#+4
   \   0000047C   3600000A           BEQ      ??_FillTrippleArc_1
   \   00000480   10009DE5           LDR      R0,[SP, #+16]
   \   00000484   24109DE5           LDR      R1,[SP, #+36]
   \   00000488   040040E0           SUB      R0,R0,R4
   \   0000048C   008085E0           ADD      R8,R5,R0
   \   00000490   14009DE5           LDR      R0,[SP, #+20]
   \   00000494   011084E0           ADD      R1,R4,R1
   \   00000498   040040E0           SUB      R0,R0,R4
   \   0000049C   0C008DE5           STR      R0,[SP, #+12]
   \   000004A0   20009DE5           LDR      R0,[SP, #+32]
   \   000004A4   051041E0           SUB      R1,R1,R5
   \   000004A8   000084E0           ADD      R0,R4,R0
   \   000004AC   00108DE5           STR      R1,[SP, #+0]
   \   000004B0   08008DE5           STR      R0,[SP, #+8]
   \   000004B4   01A044E2           SUB      R10,R4,#+1
    358                      yu = y0 + r - y;
    359                      yl = y1 - r + y;
    360                      _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
   \                     ??_FillTrippleArc_19:
   \   000004B8   950509E0           MUL      R9,R5,R5
   \   000004BC   940400E0           MUL      R0,R4,R4
   \   000004C0   00609DE5           LDR      R6,[SP, #+0]
   \   000004C4   02B044E2           SUB      R11,R4,#+2
   \   000004C8   090040E0           SUB      R0,R0,R9
   \   000004CC   ........           BL       GUI__sqrt32
   \   000004D0   0A0055E1           CMP      R5,R10
   \   000004D4   010000BA           BLT      ??_FillTrippleArc_20
   \                     ??_FillTrippleArc_21:
   \   000004D8   0010A0E3           MOV      R1,#+0
   \   000004DC   0B0000EA           B        ??_FillTrippleArc_22
   \                     ??_FillTrippleArc_20:
   \   000004E0   9A0A00E0           MUL      R0,R10,R10
   \   000004E4   090040E0           SUB      R0,R0,R9
   \   000004E8   ........           BL       GUI__sqrt32
   \   000004EC   0B0055E1           CMP      R5,R11
   \   000004F0   F8FFFFAA           BGE      ??_FillTrippleArc_21
   \   000004F4   9B0B00E0           MUL      R0,R11,R11
   \   000004F8   090040E0           SUB      R0,R0,R9
   \   000004FC   ........           BL       GUI__sqrt32
   \   00000500   031044E2           SUB      R1,R4,#+3
   \   00000504   010055E1           CMP      R5,R1
   \   00000508   0010A0A3           MOVGE    R1,#+0
   \   0000050C   011040B2           SUBLT    R1,R0,#+1
    361                      xal = x0 + r - l3;
   \                     ??_FillTrippleArc_22:
   \   00000510   08009DE5           LDR      R0,[SP, #+8]
   \   00000514   019040E0           SUB      R9,R0,R1
    362                      xer = x1 - r + l3;
   \   00000518   0C009DE5           LDR      R0,[SP, #+12]
   \   0000051C   00B081E0           ADD      R11,R1,R0
    363                      LCD_DrawHLine(xal, yu, xer);
   \   00000520   0B20A0E1           MOV      R2,R11
   \   00000524   0610A0E1           MOV      R1,R6
   \   00000528   0900A0E1           MOV      R0,R9
   \   0000052C   ........           BL       LCD_DrawHLine
    364                      LCD_DrawHLine(xal, yl, xer);
   \   00000530   0B20A0E1           MOV      R2,R11
   \   00000534   0810A0E1           MOV      R1,R8
   \   00000538   0900A0E1           MOV      R0,R9
   \   0000053C   ........           BL       LCD_DrawHLine
    365                    }
   \   00000540   00109DE5           LDR      R1,[SP, #+0]
   \   00000544   015045E2           SUB      R5,R5,#+1
   \   00000548   011081E2           ADD      R1,R1,#+1
   \   0000054C   018048E2           SUB      R8,R8,#+1
   \   00000550   00108DE5           STR      R1,[SP, #+0]
   \   00000554   000055E3           CMP      R5,#+0
   \   00000558   D6FFFF1A           BNE      ??_FillTrippleArc_19
   \                     ??_FillTrippleArc_1:
   \   0000055C   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000560   F08FBDE8           POP      {R4-R11,PC}      ;; return
    366                  }
    367                }
    368              }
    369            }
    370          }
    371          
    372          #else
    373          
    374          static void _FillTrippleArc(int x0, int y0, int Size, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorR2, GUI_COLOR ColorFill) {
    375            int y, l0, l1, l2, l3, yu, yl, xal, xel, xar, xer, x1, y1, r;
    376          
    377            //
    378            // Check if size is a multiple of 2
    379            //
    380            if (Size & 1) {
    381              return;
    382            }
    383            x1 = --x0 + Size + 1;
    384            y1 = --y0 + Size + 1;
    385            r = (Size >> 1) + 1;
    386            if (r > 0) {
    387              //
    388              // Draw outer arc with ColorR0
    389              //
    390              GUI_SetColor(ColorR0);
    391              for (y = r - 1; y > 0; y--) {
    392                yu = y0 + r - y;
    393                yl = y1 - r + y;
    394                _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
    395                xal = x0 + r - l0;
    396                xel = x0 + r - l1 - 1;
    397                xer = x1 - r + l0;
    398                xar = x1 - r + l1 + 1;
    399                LCD_DrawHLine(xal, yu, xel);
    400                LCD_DrawHLine(xar, yu, xer);
    401                LCD_DrawHLine(xal, yl, xel);
    402                LCD_DrawHLine(xar, yl, xer);
    403              }
    404              if (r > 1) {
    405                //
    406                // Draw middle arc with ColorR1
    407                //
    408                GUI_SetColor(ColorR1);
    409                for (y = r - 2; y > 0; y--) {
    410                  yu = y0 + r - y;
    411                  yl = y1 - r + y;
    412                  _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
    413                  xal = x0 + r - l1;
    414                  xel = x0 + r - l2 - 1;
    415                  xer = x1 - r + l1;
    416                  xar = x1 - r + l2 + 1;
    417                  LCD_DrawHLine(xal, yu, xel);
    418                  LCD_DrawHLine(xar, yu, xer);
    419                  LCD_DrawHLine(xal, yl, xel);
    420                  LCD_DrawHLine(xar, yl, xer);
    421                }
    422                if (r > 2) {
    423                  //
    424                  // Draw inner arc with ColorR2
    425                  //
    426                  GUI_SetColor(ColorR2);
    427                  for (y = r - 3; y > 0; y--) {
    428                    yu = y0 + r - y;
    429                    yl = y1 - r + y;
    430                    _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
    431                    xal = x0 + r - l2;
    432                    xel = x0 + r - l3 - 1;
    433                    xer = x1 - r + l2;
    434                    xar = x1 - r + l3 + 1;
    435                    LCD_DrawHLine(xal, yu, xel);
    436                    LCD_DrawHLine(xar, yu, xer);
    437                    LCD_DrawHLine(xal, yl, xel);
    438                    LCD_DrawHLine(xar, yl, xer);
    439                  }
    440                  if (r > 3) {
    441                    //
    442                    // Fill up with ColorFill
    443                    //
    444                    GUI_SetColor(ColorFill);
    445                    for (y = r - 4; y; y--) {
    446                      yu = y0 + r - y;
    447                      yl = y1 - r + y;
    448                      _GetTrippleArcPara(r, y, &l0, &l1, &l2, &l3);
    449                      xal = x0 + r - l3;
    450                      xer = x1 - r + l3;
    451                      LCD_DrawHLine(xal, yu, xer);
    452                      LCD_DrawHLine(xal, yl, xer);
    453                    }
    454                  }
    455                }
    456              }
    457            }
    458          }
    459          
    460          #endif
    461          
    462          /*********************************************************************
    463          *
    464          *       Public code
    465          *
    466          **********************************************************************
    467          */
    468          /*********************************************************************
    469          *
    470          *       GUI__DrawTwinArc2
    471          */

   \                                 In section .text, align 4, keep-with-next
    472          void GUI__DrawTwinArc2(int x0, int x1, int y0, int r, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorFill) {
   \                     GUI__DrawTwinArc2:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0090A0E1           MOV      R9,R0
   \   0000000C   01A0A0E1           MOV      R10,R1
   \   00000010   0240A0E1           MOV      R4,R2
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   38609DE5           LDR      R6,[SP, #+56]
   \   0000001C   3C709DE5           LDR      R7,[SP, #+60]
   \   00000020   40809DE5           LDR      R8,[SP, #+64]
    473            #if (GUI_WINSUPPORT)
    474              GUI_RECT Rect;
    475            #endif
    476            GUI_LOCK();
   \   00000024   ........           BL       GUI_Lock
    477            #if (GUI_WINSUPPORT)
    478              WM_ADDORGX(x0);
   \   00000028   ........           LDR      R0,??DataTable2
   \   0000002C   401090E5           LDR      R1,[R0, #+64]
    479              WM_ADDORGX(x1);
    480              WM_ADDORGY(y0);
   \   00000030   440090E5           LDR      R0,[R0, #+68]
   \   00000034   099081E0           ADD      R9,R1,R9
   \   00000038   044080E0           ADD      R4,R0,R4
    481              Rect.x0 = x0;
    482              Rect.x1 = x1;
    483              Rect.y0 = y0;
   \   0000003C   BE40CDE1           STRH     R4,[SP, #+14]
    484              Rect.y1 = Rect.y0 + r - 1;
   \   00000040   FE00DDE1           LDRSH    R0,[SP, #+14]
   \   00000044   0AA081E0           ADD      R10,R1,R10
   \   00000048   BC90CDE1           STRH     R9,[SP, #+12]
   \   0000004C   000085E0           ADD      R0,R5,R0
   \   00000050   010040E2           SUB      R0,R0,#+1
   \   00000054   B201CDE1           STRH     R0,[SP, #+18]
   \   00000058   B0A1CDE1           STRH     R10,[SP, #+16]
    485              WM_ITERATE_START(&Rect) {
   \   0000005C   0C008DE2           ADD      R0,SP,#+12
   \   00000060   ........           BL       WM__InitIVRSearch
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0A00000A           BEQ      ??GUI__DrawTwinArc2_0
    486            #endif
    487            _DrawTwinArc2(x0, x1, y0, r, ColorR0, ColorR1, ColorFill);
   \                     ??GUI__DrawTwinArc2_1:
   \   0000006C   08808DE5           STR      R8,[SP, #+8]
   \   00000070   04708DE5           STR      R7,[SP, #+4]
   \   00000074   00608DE5           STR      R6,[SP, #+0]
   \   00000078   0530A0E1           MOV      R3,R5
   \   0000007C   0420A0E1           MOV      R2,R4
   \   00000080   0A10A0E1           MOV      R1,R10
   \   00000084   0900A0E1           MOV      R0,R9
   \   00000088   ........           BL       _DrawTwinArc2
    488            #if (GUI_WINSUPPORT)
    489              } WM_ITERATE_END();
   \   0000008C   ........           BL       WM__GetNextIVR
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F4FFFF1A           BNE      ??GUI__DrawTwinArc2_1
    490            #endif
    491            GUI_UNLOCK();
   \                     ??GUI__DrawTwinArc2_0:
   \   00000098   ........           BL       GUI_Unlock
    492          }
   \   0000009C   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000A0   F087BDE8           POP      {R4-R10,PC}      ;; return
    493          
    494          /*********************************************************************
    495          *
    496          *       GUI__DrawTwinArc4
    497          */

   \                                 In section .text, align 4, keep-with-next
    498          void GUI__DrawTwinArc4(int x0, int y0, int x1, int y1, int r, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorFill) {
   \                     GUI__DrawTwinArc4:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   00A0A0E1           MOV      R10,R0
   \   0000000C   01B0A0E1           MOV      R11,R1
   \   00000010   0240A0E1           MOV      R4,R2
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   40609DE5           LDR      R6,[SP, #+64]
   \   0000001C   44709DE5           LDR      R7,[SP, #+68]
   \   00000020   48809DE5           LDR      R8,[SP, #+72]
   \   00000024   4C909DE5           LDR      R9,[SP, #+76]
    499            #if (GUI_WINSUPPORT)
    500              GUI_RECT Rect;
    501            #endif
    502            GUI_LOCK();
   \   00000028   ........           BL       GUI_Lock
    503            #if (GUI_WINSUPPORT)
    504              WM_ADDORG(x0, y0);
   \   0000002C   ........           LDR      R0,??DataTable2
   \   00000030   401090E5           LDR      R1,[R0, #+64]
   \   00000034   440090E5           LDR      R0,[R0, #+68]
   \   00000038   0AA081E0           ADD      R10,R1,R10
   \   0000003C   0BB080E0           ADD      R11,R0,R11
    505              WM_ADDORG(x1, y1);
   \   00000040   044081E0           ADD      R4,R1,R4
   \   00000044   055080E0           ADD      R5,R0,R5
    506              Rect.x0 = x0;
   \   00000048   B0A1CDE1           STRH     R10,[SP, #+16]
    507              Rect.y0 = y0;
   \   0000004C   B2B1CDE1           STRH     R11,[SP, #+18]
    508              Rect.x1 = x1;
   \   00000050   B441CDE1           STRH     R4,[SP, #+20]
    509              Rect.y1 = y1;
   \   00000054   B651CDE1           STRH     R5,[SP, #+22]
    510              WM_ITERATE_START(&Rect) {
   \   00000058   10008DE2           ADD      R0,SP,#+16
   \   0000005C   ........           BL       WM__InitIVRSearch
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0B00000A           BEQ      ??GUI__DrawTwinArc4_0
    511            #endif
    512            _DrawTwinArc4(x0, y0, x1, y1, r, ColorR0, ColorR1, ColorFill);
   \                     ??GUI__DrawTwinArc4_1:
   \   00000068   0C908DE5           STR      R9,[SP, #+12]
   \   0000006C   08808DE5           STR      R8,[SP, #+8]
   \   00000070   04708DE5           STR      R7,[SP, #+4]
   \   00000074   00608DE5           STR      R6,[SP, #+0]
   \   00000078   0530A0E1           MOV      R3,R5
   \   0000007C   0420A0E1           MOV      R2,R4
   \   00000080   0B10A0E1           MOV      R1,R11
   \   00000084   0A00A0E1           MOV      R0,R10
   \   00000088   ........           BL       _DrawTwinArc4
    513            #if (GUI_WINSUPPORT)
    514              } WM_ITERATE_END();
   \   0000008C   ........           BL       WM__GetNextIVR
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F3FFFF1A           BNE      ??GUI__DrawTwinArc4_1
    515            #endif
    516            GUI_UNLOCK();
   \                     ??GUI__DrawTwinArc4_0:
   \   00000098   ........           BL       GUI_Unlock
    517          }
   \   0000009C   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000000A0   F08FBDE8           POP      {R4-R11,PC}      ;; return
    518          
    519          /*********************************************************************
    520          *
    521          *       GUI__FillTrippleArc
    522          */

   \                                 In section .text, align 4, keep-with-next
    523          void GUI__FillTrippleArc(int x0, int y0, int Size, GUI_COLOR ColorR0, GUI_COLOR ColorR1, GUI_COLOR ColorR2, GUI_COLOR ColorFill) {
   \                     GUI__FillTrippleArc:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   00A0A0E1           MOV      R10,R0
   \   0000000C   0190A0E1           MOV      R9,R1
   \   00000010   0240A0E1           MOV      R4,R2
   \   00000014   0350A0E1           MOV      R5,R3
   \   00000018   38609DE5           LDR      R6,[SP, #+56]
   \   0000001C   3C709DE5           LDR      R7,[SP, #+60]
   \   00000020   40809DE5           LDR      R8,[SP, #+64]
    524            #if (GUI_WINSUPPORT)
    525              GUI_RECT Rect;
    526            #endif
    527            GUI_LOCK();
   \   00000024   ........           BL       GUI_Lock
    528            #if (GUI_WINSUPPORT)
    529              WM_ADDORG(x0, y0);
   \   00000028   ........           LDR      R0,??DataTable2
   \   0000002C   401090E5           LDR      R1,[R0, #+64]
   \   00000030   440090E5           LDR      R0,[R0, #+68]
   \   00000034   0AA081E0           ADD      R10,R1,R10
   \   00000038   099080E0           ADD      R9,R0,R9
    530              Rect.x0 = x0;
    531              Rect.y0 = y0;
    532              Rect.x1 = x0 + Size - 1;
   \   0000003C   0A0084E0           ADD      R0,R4,R10
   \   00000040   010040E2           SUB      R0,R0,#+1
   \   00000044   B001CDE1           STRH     R0,[SP, #+16]
    533              Rect.y1 = y0 + Size - 1;
   \   00000048   090084E0           ADD      R0,R4,R9
   \   0000004C   010040E2           SUB      R0,R0,#+1
   \   00000050   B201CDE1           STRH     R0,[SP, #+18]
   \   00000054   BCA0CDE1           STRH     R10,[SP, #+12]
   \   00000058   BE90CDE1           STRH     R9,[SP, #+14]
    534              WM_ITERATE_START(&Rect) {
   \   0000005C   0C008DE2           ADD      R0,SP,#+12
   \   00000060   ........           BL       WM__InitIVRSearch
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   0A00000A           BEQ      ??GUI__FillTrippleArc_0
    535            #endif
    536            _FillTrippleArc(x0, y0, Size, ColorR0, ColorR1, ColorR2, ColorFill);
   \                     ??GUI__FillTrippleArc_1:
   \   0000006C   08808DE5           STR      R8,[SP, #+8]
   \   00000070   04708DE5           STR      R7,[SP, #+4]
   \   00000074   00608DE5           STR      R6,[SP, #+0]
   \   00000078   0530A0E1           MOV      R3,R5
   \   0000007C   0420A0E1           MOV      R2,R4
   \   00000080   0910A0E1           MOV      R1,R9
   \   00000084   0A00A0E1           MOV      R0,R10
   \   00000088   ........           BL       _FillTrippleArc
    537            #if (GUI_WINSUPPORT)
    538              } WM_ITERATE_END();
   \   0000008C   ........           BL       WM__GetNextIVR
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F4FFFF1A           BNE      ??GUI__FillTrippleArc_1
    539            #endif
    540            GUI_UNLOCK();
   \                     ??GUI__FillTrippleArc_0:
   \   00000098   ........           BL       GUI_Unlock
    541          }
   \   0000009C   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000A0   F087BDE8           POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   ........           DC32     GUI_Context
    542          
    543          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     GUI__DrawTwinArc2       56
     GUI__DrawTwinArc4       64
     GUI__FillTrippleArc     56
     _DrawTwinArc2           56
     _DrawTwinArc4           72
     _FillTrippleArc         80


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     _DrawTwinArc4        852
     _DrawTwinArc2        548
     _FillTrippleArc     1380
     GUI__DrawTwinArc2    164
     GUI__DrawTwinArc4    164
     GUI__FillTrippleArc  164
     ??DataTable2           4

 
 3 276 bytes in section .text
 
 3 276 bytes of CODE memory

Errors: none
Warnings: none
