###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:08 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUIAA_Char4Ext.c                    #
#    Command line =  C:\DUII\TargetHW\GUI\GUIAA_Char4Ext.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUIAA_Char4Ext.lst         #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUIAA_Char4Ext.o            #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUIAA_Char4Ext.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUIAA_Char4Ext.c
     19          Purpose     : Draw antialiased characters with extended font information
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       GUIPROP_AA4_EXT_DispChar
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void GUIPROP_AA4_EXT_DispChar(U16P c) {
   \                     GUIPROP_AA4_EXT_DispChar:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
     38            int BytesPerLine;
     39            GUI_DRAWMODE DrawMode, OldDrawMode;
     40            const GUI_FONT_PROP_EXT GUI_UNI_PTR * pPropExt;
     41            const GUI_CHARINFO_EXT  GUI_UNI_PTR * pCharInfo;
     42          
     43            DrawMode = GUI_Context.TextMode;
   \   00000004   DC409FE5           LDR      R4,??GUIPROP_AA4_EXT_DispChar_0
   \   00000008   0050A0E1           MOV      R5,R0
     44            pPropExt = GUIPROP_EXT__FindChar(GUI_Context.pAFont->p.pPropExt, c);
   \   0000000C   1C0094E5           LDR      R0,[R4, #+28]
   \   00000010   18D04DE2           SUB      SP,SP,#+24
   \   00000014   FA72D4E1           LDRSH    R7,[R4, #+42]
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   1C0090E5           LDR      R0,[R0, #+28]
   \   00000020   ........           BL       GUIPROP_EXT__FindChar
     45            if (pPropExt) {
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   2C00000A           BEQ      ??GUIPROP_AA4_EXT_DispChar_1
     46              pCharInfo    = pPropExt->paCharInfo + (c - pPropExt->First);
   \   0000002C   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000030   0C20A0E3           MOV      R2,#+12
   \   00000034   040090E5           LDR      R0,[R0, #+4]
   \   00000038   011045E0           SUB      R1,R5,R1
   \   0000003C   920125E0           MLA      R5,R2,R1,R0
     47              BytesPerLine = (pCharInfo->XSize + 1) >> 1;
   \   00000040   0000D5E5           LDRB     R0,[R5, #+0]
   \   00000044   010080E2           ADD      R0,R0,#+1
   \   00000048   C060A0E1           ASR      R6,R0,#+1
     48              OldDrawMode  = LCD_SetDrawMode(DrawMode);
   \   0000004C   0700A0E1           MOV      R0,R7
   \   00000050   ........           BL       LCD_SetDrawMode
   \   00000054   0070A0E1           MOV      R7,R0
     49              #if GUI_SUPPORT_ROTATION
     50              if (GUI_pLCD_APIList) {
   \   00000058   F202D4E1           LDRSH    R0,[R4, #+34]
   \   0000005C   D210D5E1           LDRSB    R1,[R5, #+2]
   \   00000060   D320D5E1           LDRSB    R2,[R5, #+3]
   \   00000064   80C09FE5           LDR      R12,??GUIPROP_AA4_EXT_DispChar_0+0x4
   \   00000068   000081E0           ADD      R0,R1,R0
   \   0000006C   F412D4E1           LDRSH    R1,[R4, #+36]
   \   00000070   00C09CE5           LDR      R12,[R12, #+0]
   \   00000074   0130D5E5           LDRB     R3,[R5, #+1]
   \   00000078   011082E0           ADD      R1,R2,R1
   \   0000007C   0020D5E5           LDRB     R2,[R5, #+0]
   \   00000080   08E095E5           LDR      LR,[R5, #+8]
   \   00000084   00005CE3           CMP      R12,#+0
   \   00000088   0B00000A           BEQ      ??GUIPROP_AA4_EXT_DispChar_2
     51                GUI_pLCD_APIList->pfDrawBitmap(GUI_Context.DispPosX + pCharInfo->XPos, // XPos
     52                                               GUI_Context.DispPosY + pCharInfo->YPos, // YPos
     53                                               pCharInfo->XSize,                       // XSize
     54                                               pCharInfo->YSize,                       // YSize
     55                                               1,                                      // XMag
     56                                               1,                                      // YMag
     57                                               4,                                      // BitsPerPixel
     58                                               BytesPerLine,                           // BytesPerLine
     59                                               pCharInfo->pData,                       // Pointer to pixel data
     60                                               NULL);                                  // Translation table
   \   0000008C   10E08DE5           STR      LR,[SP, #+16]
   \   00000090   04E0A0E3           MOV      LR,#+4
   \   00000094   08E08DE5           STR      LR,[SP, #+8]
   \   00000098   0080A0E3           MOV      R8,#+0
   \   0000009C   01E0A0E3           MOV      LR,#+1
   \   000000A0   14808DE5           STR      R8,[SP, #+20]
   \   000000A4   0C608DE5           STR      R6,[SP, #+12]
   \   000000A8   04E08DE5           STR      LR,[SP, #+4]
   \   000000AC   00E08DE5           STR      LR,[SP, #+0]
   \   000000B0   00C09CE5           LDR      R12,[R12, #+0]
   \   000000B4   3CFF2FE1           BLX      R12
   \   000000B8   020000EA           B        ??GUIPROP_AA4_EXT_DispChar_3
     61              } else {
     62              #else
     63              {
     64              #endif
     65                GUI_AA__DrawCharAA4(GUI_Context.DispPosX + pCharInfo->XPos, // XPos
     66                                    GUI_Context.DispPosY + pCharInfo->YPos, // YPos
     67                                    pCharInfo->XSize,                       // XSize
     68                                    pCharInfo->YSize,                       // YSize
     69                                    BytesPerLine,                           // BytesPerLine
     70                                    (U8 const *)pCharInfo->pData);          // Pointer to pixel data
   \                     ??GUIPROP_AA4_EXT_DispChar_2:
   \   000000BC   04E08DE5           STR      LR,[SP, #+4]
   \   000000C0   00608DE5           STR      R6,[SP, #+0]
   \   000000C4   ........           BL       GUI_AA__DrawCharAA4
     71              }
     72              LCD_SetDrawMode(OldDrawMode); // Restore draw mode
   \                     ??GUIPROP_AA4_EXT_DispChar_3:
   \   000000C8   0700A0E1           MOV      R0,R7
   \   000000CC   ........           BL       LCD_SetDrawMode
     73              GUI_Context.DispPosX += pCharInfo->XDist;
   \   000000D0   F202D4E1           LDRSH    R0,[R4, #+34]
   \   000000D4   0410D5E5           LDRB     R1,[R5, #+4]
   \   000000D8   000081E0           ADD      R0,R1,R0
   \   000000DC   B202C4E1           STRH     R0,[R4, #+34]
     74            }
     75          }
   \                     ??GUIPROP_AA4_EXT_DispChar_1:
   \   000000E0   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000E4   F081BDE8           POP      {R4-R8,PC}       ;; return
   \                     ??GUIPROP_AA4_EXT_DispChar_0:
   \   000000E8   ........           DC32     GUI_Context
   \   000000EC   ........           DC32     GUI_pLCD_APIList
     76          
     77          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GUIPROP_AA4_EXT_DispChar     48


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     GUIPROP_AA4_EXT_DispChar  240

 
 240 bytes in section .text
 
 240 bytes of CODE memory

Errors: none
Warnings: none
