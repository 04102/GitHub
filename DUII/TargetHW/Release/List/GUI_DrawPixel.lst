###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:15:41 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_DrawPixel.c                     #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_DrawPixel.c -D DEBUG=1 -D       #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_DrawPixel.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_DrawPixel.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_DrawPixel.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_DrawPixel.c
     19          Purpose     : Implementation of GUI_DrawPixel
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_DrawPixel
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          void GUI_DrawPixel(int x, int y) {
   \                     GUI_DrawPixel:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
     36            #if (GUI_WINSUPPORT)
     37              GUI_RECT r;
     38            #endif
     39            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     40            #if (GUI_WINSUPPORT)
     41              WM_ADDORG(x,y);
   \   00000014   60409FE5           LDR      R4,??GUI_DrawPixel_0
   \   00000018   400094E5           LDR      R0,[R4, #+64]
   \   0000001C   055080E0           ADD      R5,R0,R5
   \   00000020   440094E5           LDR      R0,[R4, #+68]
     42              r.x0 = r.x1 = x;
   \   00000024   B450CDE1           STRH     R5,[SP, #+4]
   \   00000028   066080E0           ADD      R6,R0,R6
   \   0000002C   F400DDE1           LDRSH    R0,[SP, #+4]
     43              r.y0 = r.y1 = y;
   \   00000030   B660CDE1           STRH     R6,[SP, #+6]
   \   00000034   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000038   B000CDE1           STRH     R0,[SP, #+0]
     44              WM_ITERATE_START(&r); {
   \   0000003C   0D00A0E1           MOV      R0,SP
   \   00000040   B210CDE1           STRH     R1,[SP, #+2]
   \   00000044   ........           BL       WM__InitIVRSearch
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0700000A           BEQ      ??GUI_DrawPixel_1
     45            #endif
     46            LCD_HL_DrawPixel(x,y);
   \                     ??GUI_DrawPixel_2:
   \   00000050   942094E5           LDR      R2,[R4, #+148]
   \   00000054   0610A0E1           MOV      R1,R6
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   042092E5           LDR      R2,[R2, #+4]
   \   00000060   32FF2FE1           BLX      R2
     47            #if (GUI_WINSUPPORT)
     48              } WM_ITERATE_END();
   \   00000064   ........           BL       WM__GetNextIVR
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   F7FFFF1A           BNE      ??GUI_DrawPixel_2
     49            #endif
     50            GUI_UNLOCK();
   \                     ??GUI_DrawPixel_1:
   \   00000070   ........           BL       GUI_Unlock
     51          }
   \   00000074   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000078   7080BDE8           POP      {R4-R6,PC}       ;; return
   \                     ??GUI_DrawPixel_0:
   \   0000007C   ........           DC32     GUI_Context
     52          
     53          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     GUI_DrawPixel     24


   Section sizes:

     Function/Label Bytes
     -------------- -----
     GUI_DrawPixel   128

 
 128 bytes in section .text
 
 128 bytes of CODE memory

Errors: none
Warnings: none
