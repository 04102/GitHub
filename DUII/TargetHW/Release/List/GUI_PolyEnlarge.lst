###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:14 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_PolyEnlarge.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_PolyEnlarge.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_PolyEnlarge.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_PolyEnlarge.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_PolyEnlarge.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_PolyEnlarge.c
     19          Purpose     : Polygon enlarge
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <math.h>
     24          
     25          #include "GUI.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Types
     30          *
     31          **********************************************************************
     32          */
     33          
     34          typedef struct {
     35            float x, y;
     36          } tfPoint;
     37          
     38          /*********************************************************************
     39          *
     40          *       Static code
     41          *
     42          **********************************************************************
     43          */
     44          /*********************************************************************
     45          *
     46          *       _fround
     47          */
     48          static int _fround(float f) {
     49            if (f > 0) {
     50              return (int)(f + 0.5);
     51            }
     52            return (int)(f - 0.5);
     53          }
     54          
     55          /*********************************************************************
     56          *
     57          *       _Normalize
     58          */
     59          static void _Normalize(tfPoint * pfPoint) {
     60            float fx;
     61            float fy;
     62            float r;
     63          
     64            fx = pfPoint->x;
     65            fy = pfPoint->y;
     66            r = sqrt(fx * fx + fy * fy);
     67            if (r > 0) {
     68              pfPoint->x = fx / r;
     69              pfPoint->y = fy / r;
     70            }
     71          }
     72          
     73          /*********************************************************************
     74          *
     75          *       _ReverseLen
     76          */
     77          static void _ReverseLen(tfPoint * pfPoint) {
     78            float fx;
     79            float fy;
     80            float r;
     81            
     82            fx = pfPoint->x;
     83            fy = pfPoint->y;
     84            r = sqrt((fx * fx + fy * fy) / 2);
     85            if (r > 0) {
     86              pfPoint->x = fx / r / r;
     87              pfPoint->y = fy / r / r;
     88            }
     89          }
     90          
     91          /*********************************************************************
     92          *
     93          *       _GetVect
     94          */
     95          static void _GetVect(tfPoint * pfPoint, const GUI_POINT * pSrc, unsigned NumPoints, unsigned Index) {
     96            int Off0;
     97            int Off1;
     98            
     99            Off0 = (Index + NumPoints - 1) % NumPoints;
    100            Off1 = Index % NumPoints;
    101            pfPoint->x = pSrc[Off1].x - pSrc[Off0].x; 
    102            pfPoint->y = pSrc[Off1].y - pSrc[Off0].y; 
    103          }
    104          
    105          /*********************************************************************
    106          *
    107          *       Public code
    108          *
    109          **********************************************************************
    110          */
    111          /*********************************************************************
    112          *
    113          *       GUI_EnlargePolygon
    114          */
    115          #if 0
    116          void GUI_EnlargePolygon(GUI_POINT * pDest, const GUI_POINT * pSrc, int NumPoints, int Len) {
    117            int x, y, j;
    118            tfPoint aVect[2];
    119            
    120            /* Calc destination points */
    121            for (j = 0; j < NumPoints; j++) {
    122              /* Get the vectors */
    123              _GetVect(&aVect[0], pSrc, NumPoints, j);
    124              _GetVect(&aVect[1], pSrc, NumPoints, j + 1);
    125              /* Normalize the vectors and add vectors */
    126              _Normalize(&aVect[0]);
    127              _Normalize(&aVect[1]);
    128              aVect[0].x += aVect[1].x;
    129              aVect[0].y += aVect[1].y;
    130              /* Resulting vector needs to be normalized again */
    131              _Normalize(&aVect[0]);
    132              x =  _fround(aVect[0].y * Len);
    133              y = -_fround(aVect[0].x * Len);
    134              /* Store destination */
    135              (pDest + j)->x = (pSrc + j)->x + x;
    136              (pDest + j)->y = (pSrc + j)->y + y;
    137            }
    138          }
    139          
    140          #else
    141          

   \                                 In section .text, align 4, keep-with-next
    142          void GUI_EnlargePolygon(GUI_POINT * pDest, const GUI_POINT * pSrc, int NumPoints, int Len) {
   \                     GUI_EnlargePolygon:
   \   00000000   FC4F2DE9           PUSH     {R2-R11,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   \   00000008   0150A0E1           MOV      R5,R1
    143            int x, y, j;
    144            tfPoint aVect[2];
    145            
    146            /* Calc destination points */
    147            for (j = 0; j < NumPoints; j++) {
   \   0000000C   0080A0E3           MOV      R8,#+0
   \   00000010   010052E3           CMP      R2,#+1
   \   00000014   C90000BA           BLT      ??GUI_EnlargePolygon_0
   \   00000018   0C008DE5           STR      R0,[SP, #+12]
   \   0000001C   00208DE5           STR      R2,[SP, #+0]
   \   00000020   08508DE5           STR      R5,[SP, #+8]
   \   00000024   28009DE5           LDR      R0,[SP, #+40]
   \   00000028   ........           BL       __aeabi_i2f
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   10608DE2           ADD      R6,SP,#+16
    148              /* Get the vectors */
    149              _GetVect(&aVect[0], pSrc, NumPoints, j);
   \                     ??GUI_EnlargePolygon_1:
   \   00000034   24709DE5           LDR      R7,[SP, #+36]
   \   00000038   00009DE5           LDR      R0,[SP, #+0]
   \   0000003C   0710A0E1           MOV      R1,R7
   \   00000040   010040E2           SUB      R0,R0,#+1
   \   00000044   ........           BL       __aeabi_uidivmod
   \   00000048   0140A0E1           MOV      R4,R1
   \   0000004C   0800A0E1           MOV      R0,R8
   \   00000050   0710A0E1           MOV      R1,R7
   \   00000054   ........           BL       __aeabi_uidivmod
   \   00000058   0170A0E1           MOV      R7,R1
   \   0000005C   070185E0           ADD      R0,R5,R7, LSL #+2
   \   00000060   041185E0           ADD      R1,R5,R4, LSL #+2
   \   00000064   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000068   F010D1E1           LDRSH    R1,[R1, #+0]
   \   0000006C   010040E0           SUB      R0,R0,R1
   \   00000070   ........           BL       __aeabi_i2f
   \   00000074   10008DE5           STR      R0,[SP, #+16]
   \   00000078   070185E0           ADD      R0,R5,R7, LSL #+2
   \   0000007C   041185E0           ADD      R1,R5,R4, LSL #+2
   \   00000080   F200D0E1           LDRSH    R0,[R0, #+2]
   \   00000084   F210D1E1           LDRSH    R1,[R1, #+2]
   \   00000088   010040E0           SUB      R0,R0,R1
   \   0000008C   ........           BL       __aeabi_i2f
    150              _GetVect(&aVect[1], pSrc, NumPoints, j + 1);
   \   00000090   24409DE5           LDR      R4,[SP, #+36]
   \   00000094   00A0A0E1           MOV      R10,R0
   \   00000098   00009DE5           LDR      R0,[SP, #+0]
   \   0000009C   0410A0E1           MOV      R1,R4
   \   000000A0   ........           BL       __aeabi_uidivmod
   \   000000A4   0170A0E1           MOV      R7,R1
   \   000000A8   010088E2           ADD      R0,R8,#+1
   \   000000AC   0410A0E1           MOV      R1,R4
   \   000000B0   ........           BL       __aeabi_uidivmod
   \   000000B4   0190A0E1           MOV      R9,R1
   \   000000B8   04A086E5           STR      R10,[R6, #+4]
   \   000000BC   090185E0           ADD      R0,R5,R9, LSL #+2
   \   000000C0   071185E0           ADD      R1,R5,R7, LSL #+2
   \   000000C4   F000D0E1           LDRSH    R0,[R0, #+0]
   \   000000C8   F010D1E1           LDRSH    R1,[R1, #+0]
   \   000000CC   010040E0           SUB      R0,R0,R1
   \   000000D0   ........           BL       __aeabi_i2f
   \   000000D4   0040A0E1           MOV      R4,R0
   \   000000D8   084086E5           STR      R4,[R6, #+8]
   \   000000DC   090185E0           ADD      R0,R5,R9, LSL #+2
   \   000000E0   071185E0           ADD      R1,R5,R7, LSL #+2
   \   000000E4   F200D0E1           LDRSH    R0,[R0, #+2]
   \   000000E8   F210D1E1           LDRSH    R1,[R1, #+2]
   \   000000EC   010040E0           SUB      R0,R0,R1
   \   000000F0   ........           BL       __aeabi_i2f
    151              /* Normalize the vectors and add vectors */
    152              _Normalize(&aVect[0]);
   \   000000F4   10909DE5           LDR      R9,[SP, #+16]
   \   000000F8   0070A0E1           MOV      R7,R0
   \   000000FC   0C7086E5           STR      R7,[R6, #+12]
   \   00000100   0900A0E1           MOV      R0,R9
   \   00000104   0910A0E1           MOV      R1,R9
   \   00000108   ........           BL       __aeabi_fmul
   \   0000010C   00B0A0E1           MOV      R11,R0
   \   00000110   0A00A0E1           MOV      R0,R10
   \   00000114   0A10A0E1           MOV      R1,R10
   \   00000118   ........           BL       __aeabi_fmul
   \   0000011C   0B10A0E1           MOV      R1,R11
   \   00000120   ........           BL       __aeabi_fadd
   \   00000124   ........           BL       __aeabi_f2d
   \   00000128   ........           BL       sqrt
   \   0000012C   ........           BL       __aeabi_d2f
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   ........           BL       __aeabi_cfrcmple
   \   00000138   00B0A0E1           MOV      R11,R0
   \   0000013C   0700002A           BCS      ??GUI_EnlargePolygon_2
   \   00000140   0900A0E1           MOV      R0,R9
   \   00000144   0B10A0E1           MOV      R1,R11
   \   00000148   ........           BL       __aeabi_fdiv
   \   0000014C   10008DE5           STR      R0,[SP, #+16]
   \   00000150   0A00A0E1           MOV      R0,R10
   \   00000154   0B10A0E1           MOV      R1,R11
   \   00000158   ........           BL       __aeabi_fdiv
   \   0000015C   040086E5           STR      R0,[R6, #+4]
    153              _Normalize(&aVect[1]);
   \                     ??GUI_EnlargePolygon_2:
   \   00000160   0400A0E1           MOV      R0,R4
   \   00000164   0410A0E1           MOV      R1,R4
   \   00000168   ........           BL       __aeabi_fmul
   \   0000016C   0090A0E1           MOV      R9,R0
   \   00000170   0700A0E1           MOV      R0,R7
   \   00000174   0710A0E1           MOV      R1,R7
   \   00000178   ........           BL       __aeabi_fmul
   \   0000017C   0910A0E1           MOV      R1,R9
   \   00000180   ........           BL       __aeabi_fadd
   \   00000184   ........           BL       __aeabi_f2d
   \   00000188   ........           BL       sqrt
   \   0000018C   ........           BL       __aeabi_d2f
   \   00000190   0010A0E3           MOV      R1,#+0
   \   00000194   ........           BL       __aeabi_cfrcmple
   \   00000198   0090A0E1           MOV      R9,R0
   \   0000019C   0700002A           BCS      ??GUI_EnlargePolygon_3
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   0910A0E1           MOV      R1,R9
   \   000001A8   ........           BL       __aeabi_fdiv
   \   000001AC   080086E5           STR      R0,[R6, #+8]
   \   000001B0   0700A0E1           MOV      R0,R7
   \   000001B4   0910A0E1           MOV      R1,R9
   \   000001B8   ........           BL       __aeabi_fdiv
   \   000001BC   0C0086E5           STR      R0,[R6, #+12]
    154              aVect[0].x += aVect[1].x;
   \                     ??GUI_EnlargePolygon_3:
   \   000001C0   10009DE5           LDR      R0,[SP, #+16]
   \   000001C4   081096E5           LDR      R1,[R6, #+8]
   \   000001C8   ........           BL       __aeabi_fadd
   \   000001CC   10008DE5           STR      R0,[SP, #+16]
    155              aVect[0].y += aVect[1].y;
   \   000001D0   040096E5           LDR      R0,[R6, #+4]
   \   000001D4   0C1096E5           LDR      R1,[R6, #+12]
   \   000001D8   ........           BL       __aeabi_fadd
    156              /* Resulting vector needs to be normalized again */
    157              _ReverseLen(&aVect[0]);
   \   000001DC   10709DE5           LDR      R7,[SP, #+16]
   \   000001E0   040086E5           STR      R0,[R6, #+4]
   \   000001E4   0040A0E1           MOV      R4,R0
   \   000001E8   0700A0E1           MOV      R0,R7
   \   000001EC   0710A0E1           MOV      R1,R7
   \   000001F0   ........           BL       __aeabi_fmul
   \   000001F4   0090A0E1           MOV      R9,R0
   \   000001F8   0400A0E1           MOV      R0,R4
   \   000001FC   0410A0E1           MOV      R1,R4
   \   00000200   ........           BL       __aeabi_fmul
   \   00000204   0910A0E1           MOV      R1,R9
   \   00000208   ........           BL       __aeabi_fadd
   \   0000020C   FC15A0E3           MOV      R1,#+1056964608
   \   00000210   ........           BL       __aeabi_fmul
   \   00000214   ........           BL       __aeabi_f2d
   \   00000218   ........           BL       sqrt
   \   0000021C   ........           BL       __aeabi_d2f
   \   00000220   0010A0E3           MOV      R1,#+0
   \   00000224   ........           BL       __aeabi_cfrcmple
   \   00000228   0090A0E1           MOV      R9,R0
   \   0000022C   0B00002A           BCS      ??GUI_EnlargePolygon_4
   \   00000230   0700A0E1           MOV      R0,R7
   \   00000234   0910A0E1           MOV      R1,R9
   \   00000238   ........           BL       __aeabi_fdiv
   \   0000023C   0910A0E1           MOV      R1,R9
   \   00000240   ........           BL       __aeabi_fdiv
   \   00000244   10008DE5           STR      R0,[SP, #+16]
   \   00000248   0400A0E1           MOV      R0,R4
   \   0000024C   0910A0E1           MOV      R1,R9
   \   00000250   ........           BL       __aeabi_fdiv
   \   00000254   0910A0E1           MOV      R1,R9
   \   00000258   ........           BL       __aeabi_fdiv
   \   0000025C   040086E5           STR      R0,[R6, #+4]
    158              x =  _fround(aVect[0].y * Len);
   \                     ??GUI_EnlargePolygon_4:
   \   00000260   04009DE5           LDR      R0,[SP, #+4]
   \   00000264   041096E5           LDR      R1,[R6, #+4]
   \   00000268   ........           BL       __aeabi_fmul
   \   0000026C   0040A0E1           MOV      R4,R0
   \   00000270   ........           BL       __aeabi_f2d
   \   00000274   0020A0E1           MOV      R2,R0
   \   00000278   0130A0E1           MOV      R3,R1
   \   0000027C   0400A0E1           MOV      R0,R4
   \   00000280   0010A0E3           MOV      R1,#+0
   \   00000284   ........           BL       __aeabi_cfrcmple
   \   00000288   0100A0E1           MOV      R0,R1
   \   0000028C   B014A023           MOVCS    R1,#-1342177280
   \   00000290   C015A033           MOVCC    R1,#+805306368
   \   00000294   FE1681E3           ORR      R1,R1,#0xFE00000
   \   00000298   ........           BL       __aeabi_dadd
   \   0000029C   ........           BL       __aeabi_d2iz
   \   000002A0   0070A0E1           MOV      R7,R0
    159              y = -_fround(aVect[0].x * Len);
   \   000002A4   04009DE5           LDR      R0,[SP, #+4]
   \   000002A8   10109DE5           LDR      R1,[SP, #+16]
   \   000002AC   ........           BL       __aeabi_fmul
   \   000002B0   0040A0E1           MOV      R4,R0
   \   000002B4   ........           BL       __aeabi_f2d
   \   000002B8   0020A0E1           MOV      R2,R0
   \   000002BC   0130A0E1           MOV      R3,R1
   \   000002C0   0400A0E1           MOV      R0,R4
   \   000002C4   0010A0E3           MOV      R1,#+0
   \   000002C8   ........           BL       __aeabi_cfrcmple
   \   000002CC   0310A0E1           MOV      R1,R3
   \   000002D0   0200A0E1           MOV      R0,R2
   \   000002D4   B034A023           MOVCS    R3,#-1342177280
   \   000002D8   C035A033           MOVCC    R3,#+805306368
   \   000002DC   0020A0E3           MOV      R2,#+0
   \   000002E0   FE3683E3           ORR      R3,R3,#0xFE00000
   \   000002E4   ........           BL       __aeabi_dadd
   \   000002E8   ........           BL       __aeabi_d2iz
    160              /* Store destination */
    161              (pDest + j)->x = (pSrc + j)->x + x;
   \   000002EC   08209DE5           LDR      R2,[SP, #+8]
    162              (pDest + j)->y = (pSrc + j)->y + y;
    163            }
   \   000002F0   018088E2           ADD      R8,R8,#+1
   \   000002F4   F230D2E0           LDRSH    R3,[R2], #+2
   \   000002F8   08208DE5           STR      R2,[SP, #+8]
   \   000002FC   031087E0           ADD      R1,R7,R3
   \   00000300   0C309DE5           LDR      R3,[SP, #+12]
   \   00000304   B210C3E0           STRH     R1,[R3], #+2
   \   00000308   08209DE5           LDR      R2,[SP, #+8]
   \   0000030C   0C308DE5           STR      R3,[SP, #+12]
   \   00000310   F230D2E0           LDRSH    R3,[R2], #+2
   \   00000314   08208DE5           STR      R2,[SP, #+8]
   \   00000318   0C209DE5           LDR      R2,[SP, #+12]
   \   0000031C   000043E0           SUB      R0,R3,R0
   \   00000320   B200C2E0           STRH     R0,[R2], #+2
   \   00000324   00109DE5           LDR      R1,[SP, #+0]
   \   00000328   24009DE5           LDR      R0,[SP, #+36]
   \   0000032C   011081E2           ADD      R1,R1,#+1
   \   00000330   0C208DE5           STR      R2,[SP, #+12]
   \   00000334   00108DE5           STR      R1,[SP, #+0]
   \   00000338   000058E1           CMP      R8,R0
   \   0000033C   3CFFFFBA           BLT      ??GUI_EnlargePolygon_1
    164          }
   \                     ??GUI_EnlargePolygon_0:
   \   00000340   2CD08DE2           ADD      SP,SP,#+44       ;; stack cleaning
   \   00000344   F08FBDE8           POP      {R4-R11,PC}      ;; return
    165          #endif
    166          
    167          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function           .cstack
     --------           -------
     GUI_EnlargePolygon     80


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     GUI_EnlargePolygon  840

 
 840 bytes in section .text
 
 840 bytes of CODE memory

Errors: none
Warnings: none
