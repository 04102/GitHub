###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:11:13 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI__SinHQ.c                        #
#    Command line =  C:\DUII\TargetHW\GUI\GUI__SinHQ.c -D DEBUG=1 -D          #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI__SinHQ.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI__SinHQ.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI__SinHQ.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI__SinHQ.c
     19          Purpose     : Integer based sin and cos functions
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Defines
     28          *
     29          **********************************************************************
     30          */
     31          #define DEG_90   90000L
     32          #define DEG_180 180000L
     33          #define DEG_270 270000L
     34          #define DEG_360 360000L
     35          
     36          /*********************************************************************
     37          *
     38          *       Static const data
     39          *
     40          **********************************************************************
     41          */
     42          /*********************************************************************
     43          *
     44          *       _aSin
     45          *
     46          * Purpose:
     47          *   Array of sinus values for 0 - 90 degrees (<< 16)
     48          *
     49          **********************************************************************
     50          */

   \                                 In section .text, align 4, keep-with-next
     51          static const U32 _aSin[] = {
   \                     _aSin:
   \   00000000                      ; Initializer data, 364 bytes
   \   00000000   000000007804       DC32 0, 1144, 2287, 3430, 4572, 5712, 6850, 7987, 9121, 10252
   \              0000EF080000
   \              660D0000DC11
   \              000050160000
   \              C21A0000331F
   \              0000A1230000
   \              0C280000    
   \   00000028   742C0000D930       DC32 11380, 12505, 13626, 14742, 15855, 16962, 18064, 19161, 20252, 21336
   \              00003A350000
   \              96390000EF3D
   \              000042420000
   \              90460000D94A
   \              00001C4F0000
   \              58530000    
   \   00000050   8F570000BE5B       DC32 22415, 23486, 24550, 25607, 26656, 27697, 28729, 29753, 30767, 31772
   \              0000E65F0000
   \              076400002068
   \              0000316C0000
   \              397000003974
   \              00002F780000
   \              1C7C0000    
   \   00000078   00800000DA83       DC32 32768, 33754, 34729, 35693, 36647, 37590, 38521, 39441, 40348, 41243
   \              0000A9870000
   \              6D8B0000278F
   \              0000D6920000
   \              79960000119A
   \              00009C9D0000
   \              1BA10000    
   \   000000A0   8EA40000F3A7       DC32 42126, 42995, 43852, 44695, 45525, 46341, 47143, 47930, 48703, 49461
   \              00004CAB0000
   \              97AE0000D5B1
   \              000005B50000
   \              27B800003ABB
   \              00003FBE0000
   \              35C10000    
   \   000000C8   1BC40000F3C6       DC32 50203, 50931, 51643, 52339, 53020, 53684, 54332, 54963, 55578, 56175
   \              0000BBC90000
   \              73CC00001CCF
   \              0000B4D10000
   \              3CD40000B3D6
   \              00001AD90000
   \              6FDB0000    
   \   000000F0   B4DD0000E7DF       DC32 56756, 57319, 57865, 58393, 58903, 59396, 59870, 60326, 60764, 61183
   \              000009E20000
   \              19E4000017E6
   \              000004E80000
   \              DEE90000A6EB
   \              00005CED0000
   \              FFEE0000    
   \   00000118   90F000000EF2       DC32 61584, 61966, 62328, 62672, 62997, 63303, 63589, 63856, 64104, 64332
   \              000078F30000
   \              D0F4000015F6
   \              000047F70000
   \              65F8000070F9
   \              000068FA0000
   \              4CFB0000    
   \   00000140   1CFC0000D9FC       DC32 64540, 64729, 64898, 65048, 65177, 65287, 65376, 65446, 65496, 65526
   \              000082FD0000
   \              18FE000099FE
   \              000007FF0000
   \              60FF0000A6FF
   \              0000D8FF0000
   \              F6FF0000    
   \   00000168   00000100           DC32 65536
     52            0    , 1144 , 2287 , 3430 , 4572 , 5712 , 6850 ,
     53            7987 , 9121 , 10252, 11380, 12505, 13626, 14742,
     54            15855, 16962, 18064, 19161, 20252, 21336, 22415,
     55            23486, 24550, 25607, 26656, 27697, 28729, 29753,
     56            30767, 31772, 32768, 33754, 34729, 35693, 36647,
     57            37590, 38521, 39441, 40348, 41243, 42126, 42995,
     58            43852, 44695, 45525, 46341, 47143, 47930, 48703,
     59            49461, 50203, 50931, 51643, 52339, 53020, 53684,
     60            54332, 54963, 55578, 56175, 56756, 57319, 57865,
     61            58393, 58903, 59396, 59870, 60326, 60764, 61183,
     62            61584, 61966, 62328, 62672, 62997, 63303, 63589,
     63            63856, 64104, 64332, 64540, 64729, 64898, 65048,
     64            65177, 65287, 65376, 65446, 65496, 65526, 65536,
     65          };
     66          
     67          /*********************************************************************
     68          *
     69          *       Public code
     70          *
     71          **********************************************************************
     72          */
     73          /*********************************************************************
     74          *
     75          *       GUI__SinHQ
     76          *
     77          * Purpose:
     78          *   Returns the sinus value for the given angle (<< 16)
     79          *
     80          * Parameter:
     81          *   Requested angle (in degrees) * 1000
     82          *
     83          * Return value:
     84          *   sin << 16
     85          */

   \                                 In section .text, align 4, keep-with-next
     86          I32 GUI__SinHQ(I32 Ang1000) {
     87            I32 r;
     88            int Index;
     89            int Mul;
     90            int Remain;
     91          
     92            if (Ang1000 < 0) {
   \                     GUI__SinHQ:
   \   00000000   000050E3           CMP      R0,#+0
     93              Mul = -1;
     94              Ang1000 = -Ang1000;
     95            } else {
     96              Mul = 1;
     97            }
     98            Ang1000 %= DEG_360;
   \   00000004   ........           LDR      R2,??DataTable2  ;; 0x5d34edef
   \   00000008   00006042           RSBMI    R0,R0,#+0
   \   0000000C   9032C2E0           SMULL    R3,R2,R0,R2
   \   00000010   0010E043           MVNMI    R1,#+0
   \   00000014   0110A053           MOVPL    R1,#+1
   \   00000018   C228B0E1           ASRS     R2,R2,#+17
   \   0000001C   543AA0E3           MOV      R3,#+344064
   \   00000020   01208242           ADDMI    R2,R2,#+1
   \   00000024   F93D83E3           ORR      R3,R3,#0x3E40
   \   00000028   930202E0           MUL      R2,R3,R2
   \   0000002C   020040E0           SUB      R0,R0,R2
     99            if (Ang1000 > DEG_180) {
   \   00000030   ........           LDR      R2,??DataTable2_1  ;; 0x2bf21
   \   00000034   020050E1           CMP      R0,R2
    100              Mul = -Mul;
    101              Ang1000 -= DEG_180;
   \   00000038   ........           LDRGE    R2,??DataTable2_2  ;; 0xfffd40e0
   \   0000003C   001061A2           RSBGE    R1,R1,#+0
   \   00000040   000082A0           ADDGE    R0,R2,R0
    102            }
    103            if (Ang1000 > DEG_90) {
   \   00000044   ........           LDR      R2,??DataTable2_3  ;; 0x15f91
   \   00000048   020050E1           CMP      R0,R2
    104              Ang1000 = DEG_90 - (Ang1000 - DEG_90);
   \   0000004C   A320A0A1           MOVGE    R2,R3, LSR #+1
   \   00000050   000042A0           SUBGE    R0,R2,R0
    105            }
    106            Index  = Ang1000 / 1000;
   \   00000054   ........           LDR      R2,??DataTable2_4  ;; 0x10624dd3
   \   00000058   9032C2E0           SMULL    R3,R2,R0,R2
   \   0000005C   00402DE9           PUSH     {LR}
   \   00000060   4223B0E1           ASRS     R2,R2,#+6
    107            Remain = Ang1000 - Index * 1000;
    108            r = (_aSin[Index] + ((_aSin[Index + 1] - _aSin[Index]) * Remain) / 1000);
   \   00000064   ........           ADR      R3,_aSin
   \   00000068   01208242           ADDMI    R2,R2,#+1
   \   0000006C   02C193E7           LDR      R12,[R3, +R2, LSL #+2]
   \   00000070   023183E0           ADD      R3,R3,R2, LSL #+2
   \   00000074   FAEFA0E3           MOV      LR,#+1000
   \   00000078   9E0202E0           MUL      R2,LR,R2
   \   0000007C   043093E5           LDR      R3,[R3, #+4]
   \   00000080   020040E0           SUB      R0,R0,R2
   \   00000084   0C3043E0           SUB      R3,R3,R12
   \   00000088   900302E0           MUL      R2,R0,R3
   \   0000008C   ........           LDR      R3,??DataTable2_5  ;; 0x83126e98
    109            r = (Mul > 0) ? r : -r;
   \   00000090   010051E3           CMP      R1,#+1
   \   00000094   923380E0           UMULL    R3,R0,R2,R3
   \   00000098   A0048CE0           ADD      R0,R12,R0, LSR #+9
   \   0000009C   000060B2           RSBLT    R0,R0,#+0
    110            return r;
   \   000000A0   0080BDE8           POP      {PC}             ;; return
    111          }
    112          
    113          /*********************************************************************
    114          *
    115          *       GUI__CosHQ
    116          *
    117          * Purpose:
    118          *   Returns the cosine value for the given angle (<< 16)
    119          *
    120          * Parameter:
    121          *   Requested angle (in degrees) * 1000
    122          *
    123          * Return value:
    124          *   cos << 16
    125          */

   \                                 In section .text, align 4, keep-with-next
    126          I32 GUI__CosHQ(I32 Ang1000) {
    127            return GUI__SinHQ(Ang1000 + DEG_90);
   \                     GUI__CosHQ:
   \   00000000   541BA0E3           MOV      R1,#+86016
   \   00000004   F91E81E3           ORR      R1,R1,#0xF90
   \   00000008   000091E0           ADDS     R0,R1,R0
   \   0000000C   ........           LDR      R2,??DataTable2  ;; 0x5d34edef
   \   00000010   00006042           RSBMI    R0,R0,#+0
   \   00000014   9032C2E0           SMULL    R3,R2,R0,R2
   \   00000018   0110A053           MOVPL    R1,#+1
   \   0000001C   0010E043           MVNMI    R1,#+0
   \   00000020   C228B0E1           ASRS     R2,R2,#+17
   \   00000024   543AA0E3           MOV      R3,#+344064
   \   00000028   01208242           ADDMI    R2,R2,#+1
   \   0000002C   F93D83E3           ORR      R3,R3,#0x3E40
   \   00000030   930202E0           MUL      R2,R3,R2
   \   00000034   020040E0           SUB      R0,R0,R2
   \   00000038   ........           LDR      R2,??DataTable2_1  ;; 0x2bf21
   \   0000003C   020050E1           CMP      R0,R2
   \   00000040   ........           LDRGE    R2,??DataTable2_2  ;; 0xfffd40e0
   \   00000044   001061A2           RSBGE    R1,R1,#+0
   \   00000048   000082A0           ADDGE    R0,R2,R0
   \   0000004C   ........           LDR      R2,??DataTable2_3  ;; 0x15f91
   \   00000050   020050E1           CMP      R0,R2
   \   00000054   A320A0A1           MOVGE    R2,R3, LSR #+1
   \   00000058   000042A0           SUBGE    R0,R2,R0
   \   0000005C   ........           LDR      R2,??DataTable2_4  ;; 0x10624dd3
   \   00000060   9032C2E0           SMULL    R3,R2,R0,R2
   \   00000064   00402DE9           PUSH     {LR}
   \   00000068   4223B0E1           ASRS     R2,R2,#+6
   \   0000006C   ........           ADR      R3,_aSin
   \   00000070   01208242           ADDMI    R2,R2,#+1
   \   00000074   02C193E7           LDR      R12,[R3, +R2, LSL #+2]
   \   00000078   023183E0           ADD      R3,R3,R2, LSL #+2
   \   0000007C   FAEFA0E3           MOV      LR,#+1000
   \   00000080   9E0202E0           MUL      R2,LR,R2
   \   00000084   043093E5           LDR      R3,[R3, #+4]
   \   00000088   020040E0           SUB      R0,R0,R2
   \   0000008C   0C3043E0           SUB      R3,R3,R12
   \   00000090   900302E0           MUL      R2,R0,R3
   \   00000094   ........           LDR      R3,??DataTable2_5  ;; 0x83126e98
   \   00000098   010051E3           CMP      R1,#+1
   \   0000009C   923380E0           UMULL    R3,R0,R2,R3
   \   000000A0   A0048CE0           ADD      R0,R12,R0, LSR #+9
   \   000000A4   000060B2           RSBLT    R0,R0,#+0
   \   000000A8   0080BDE8           POP      {PC}             ;; return
    128          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   EFED345D           DC32     0x5d34edef

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   21BF0200           DC32     0x2bf21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   E040FDFF           DC32     0xfffd40e0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   915F0100           DC32     0x15f91

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   D34D6210           DC32     0x10624dd3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   986E1283           DC32     0x83126e98
    129          
    130          /*************************** end of file ****************************/

   Maximum stack usage in bytes:

     Function   .cstack
     --------   -------
     GUI__CosHQ      4
     GUI__SinHQ      4


   Section sizes:

     Function/Label Bytes
     -------------- -----
     _aSin           364
     GUI__SinHQ      164
     GUI__CosHQ      172
     ??DataTable2      4
     ??DataTable2_1    4
     ??DataTable2_2    4
     ??DataTable2_3    4
     ??DataTable2_4    4
     ??DataTable2_5    4

 
 724 bytes in section .text
 
 724 bytes of CODE memory

Errors: none
Warnings: none
