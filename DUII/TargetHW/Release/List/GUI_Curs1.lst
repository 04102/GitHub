###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:10:46 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_Curs1.c                         #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_Curs1.c -D DEBUG=1 -D           #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_Curs1.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_Curs1.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_Curs1.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUICurs.c
     19          Purpose     : Cursor routines of the graphics library based on sprites
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI_Private.h"
     26          
     27          #if (GUI_SUPPORT_CURSOR)
     28          
     29          /*********************************************************************
     30          *
     31          *       Types
     32          *
     33          **********************************************************************
     34          */
     35          typedef struct {
     36            const GUI_CURSOR GUI_UNI_PTR * pCursor;
     37            char CursorIsVis;        /* Currently visible ? */
     38            char CursorOn;
     39            int  x, y;               /* Position of hot spot */
     40            GUI_HSPRITE hSprite;
     41          } CURSOR_CONTEXT;
     42          
     43          /*********************************************************************
     44          *
     45          *       Static data
     46          *
     47          **********************************************************************
     48          */

   \                                 In section .bss, align 4
     49          static CURSOR_CONTEXT _aCursorContext[GUI_NUM_LAYERS];
   \                     _aCursorContext:
   \   00000000                      DS8 320
     50          
     51          /*********************************************************************
     52          *
     53          *       Static code
     54          *
     55          **********************************************************************
     56          */
     57          /*********************************************************************
     58          *
     59          *       _Show
     60          */
     61          static void _Show(int Layer) {
     62            unsigned CursorLayer;
     63            CursorLayer = GUI_GetCursorLayer(Layer);
     64            if (CursorLayer) {
     65              GUI_SetLayerVisEx(CursorLayer, 1);
     66            } else {
     67              if (_aCursorContext[Layer].CursorOn) {
     68                _aCursorContext[Layer].CursorIsVis = 1;
     69                GUI_SPRITE_Show(_aCursorContext[Layer].hSprite);
     70              }
     71            }
     72          }
     73          
     74          /*********************************************************************
     75          *
     76          *       _Hide
     77          */
     78          static void _Hide(int Layer) {
     79            unsigned CursorLayer;
     80            CursorLayer = GUI_GetCursorLayer(Layer);
     81            if (CursorLayer) {
     82              GUI_SetLayerVisEx(CursorLayer, 0);
     83              _aCursorContext[Layer].CursorIsVis = 0;
     84            } else {
     85              if (_aCursorContext[Layer].CursorIsVis) {
     86                GUI_SPRITE_Hide(_aCursorContext[Layer].hSprite);
     87                _aCursorContext[Layer].CursorIsVis = 0;
     88              }
     89            }
     90          }
     91          
     92          /*********************************************************************
     93          *
     94          *       Public code
     95          *
     96          **********************************************************************
     97          */
     98          /*********************************************************************
     99          *
    100          *       GUI_CURSOR_SelectEx
    101          */

   \                                 In section .text, align 4, keep-with-next
    102          const GUI_CURSOR GUI_UNI_PTR * GUI_CURSOR_SelectEx(const GUI_CURSOR GUI_UNI_PTR * pCursor, int Layer) {
   \                     GUI_CURSOR_SelectEx:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0060A0E1           MOV      R6,R0
   \   0000000C   0170A0E1           MOV      R7,R1
    103            unsigned CursorLayer;
    104            const GUI_CURSOR GUI_UNI_PTR * pOldCursor;
    105            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
    106            //GUI_DEBUG_ASSERT((Layer < GUI_NUM_CURSORS));
    107            CursorLayer = GUI_GetCursorLayer(Layer);
   \   00000014   0700A0E1           MOV      R0,R7
   \   00000018   ........           BL       GUI_GetCursorLayer
   \   0000001C   0080A0E1           MOV      R8,R0
   \   00000020   1400A0E3           MOV      R0,#+20
   \   00000024   900709E0           MUL      R9,R0,R7
   \   00000028   ........           LDR      R10,??DataTable9
    108            pOldCursor = _aCursorContext[Layer].pCursor;
    109            if (CursorLayer) {
   \   0000002C   0150A0E3           MOV      R5,#+1
   \   00000030   0A1099E7           LDR      R1,[R9, +R10]
   \   00000034   0A4089E0           ADD      R4,R9,R10
   \   00000038   04108DE5           STR      R1,[SP, #+4]
   \   0000003C   000058E3           CMP      R8,#+0
   \   00000040   1900000A           BEQ      ??GUI_CURSOR_SelectEx_0
    110              /* Manage hardware cursors */
    111              unsigned OldLayer;
    112              OldLayer = GUI_SelectLayer(CursorLayer);
   \   00000044   0800A0E1           MOV      R0,R8
   \   00000048   ........           BL       GUI_SelectLayer
   \   0000004C   00B0A0E1           MOV      R11,R0
    113              GUI_SetBkColor(GUI_TRANSPARENT);
   \   00000050   FF04A0E3           MOV      R0,#-16777216
   \   00000054   ........           BL       GUI_SetBkColor
    114              GUI_Clear();
   \   00000058   ........           BL       GUI_Clear
    115              GUI_DrawBitmap(pCursor->pBitmap, 0, 0);
   \   0000005C   0020A0E3           MOV      R2,#+0
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   000096E5           LDR      R0,[R6, #+0]
   \   00000068   ........           BL       GUI_DrawBitmap
    116              GUI_SetLayerSizeEx(CursorLayer, pCursor->pBitmap->XSize, pCursor->pBitmap->YSize);
   \   0000006C   000096E5           LDR      R0,[R6, #+0]
   \   00000070   B220D0E1           LDRH     R2,[R0, #+2]
   \   00000074   B010D0E1           LDRH     R1,[R0, #+0]
   \   00000078   0800A0E1           MOV      R0,R8
   \   0000007C   ........           BL       GUI_SetLayerSizeEx
    117              _aCursorContext[Layer].pCursor  = pCursor;
   \   00000080   0A6089E7           STR      R6,[R9, +R10]
    118              _aCursorContext[Layer].CursorOn = 1;
   \   00000084   0550C4E5           STRB     R5,[R4, #+5]
    119              GUI_SelectLayer(OldLayer);
   \   00000088   0B00A0E1           MOV      R0,R11
   \   0000008C   ........           BL       GUI_SelectLayer
    120              _Show(Layer);
   \                     ??GUI_CURSOR_SelectEx_1:
   \   00000090   0700A0E1           MOV      R0,R7
   \   00000094   ........           BL       GUI_GetCursorLayer
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   1800000A           BEQ      ??GUI_CURSOR_SelectEx_2
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   ........           BL       GUI_SetLayerVisEx
   \   000000A8   1B0000EA           B        ??GUI_CURSOR_SelectEx_3
    121            } else {
    122              /* Manage sprite cursors */
    123              _aCursorContext[Layer].pCursor  = pCursor;
   \                     ??GUI_CURSOR_SelectEx_0:
   \   000000AC   0A6089E7           STR      R6,[R9, +R10]
    124              _aCursorContext[Layer].CursorOn = 1;
   \   000000B0   0550C4E5           STRB     R5,[R4, #+5]
    125              if (_aCursorContext[Layer].hSprite) {
   \   000000B4   100094E5           LDR      R0,[R4, #+16]
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   0200000A           BEQ      ??GUI_CURSOR_SelectEx_4
    126                GUI_SPRITE_Delete(_aCursorContext[Layer].hSprite);
   \   000000C0   ........           BL       GUI_SPRITE_Delete
    127                _aCursorContext[Layer].hSprite = 0;
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   100084E5           STR      R0,[R4, #+16]
    128              }
    129              if (pCursor) {
   \                     ??GUI_CURSOR_SelectEx_4:
   \   000000CC   000056E3           CMP      R6,#+0
   \   000000D0   1100000A           BEQ      ??GUI_CURSOR_SelectEx_3
    130                _aCursorContext[Layer].hSprite  = GUI_SPRITE__CreateEx(pCursor->pBitmap, _aCursorContext[Layer].x - pCursor->xHot, _aCursorContext[Layer].y - pCursor->yHot, Layer, GUI_SPRITE_CF_STAYONTOP);
   \   000000D4   00508DE5           STR      R5,[SP, #+0]
   \   000000D8   0C0094E5           LDR      R0,[R4, #+12]
   \   000000DC   081096E5           LDR      R1,[R6, #+8]
   \   000000E0   0730A0E1           MOV      R3,R7
   \   000000E4   012040E0           SUB      R2,R0,R1
   \   000000E8   080094E5           LDR      R0,[R4, #+8]
   \   000000EC   041096E5           LDR      R1,[R6, #+4]
   \   000000F0   011040E0           SUB      R1,R0,R1
   \   000000F4   000096E5           LDR      R0,[R6, #+0]
   \   000000F8   ........           BL       GUI_SPRITE__CreateEx
   \   000000FC   100084E5           STR      R0,[R4, #+16]
    131                _Show(Layer);
   \   00000100   E2FFFFEA           B        ??GUI_CURSOR_SelectEx_1
   \                     ??GUI_CURSOR_SelectEx_2:
   \   00000104   0500D4E5           LDRB     R0,[R4, #+5]
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   0200000A           BEQ      ??GUI_CURSOR_SelectEx_3
   \   00000110   0450C4E5           STRB     R5,[R4, #+4]
   \   00000114   100094E5           LDR      R0,[R4, #+16]
   \   00000118   ........           BL       GUI_SPRITE_Show
    132              }
    133            }
    134            GUI_UNLOCK();
   \                     ??GUI_CURSOR_SelectEx_3:
   \   0000011C   ........           BL       GUI_Unlock
    135            return pOldCursor;
   \   00000120   04009DE5           LDR      R0,[SP, #+4]
   \   00000124   0CD08DE2           ADD      SP,SP,#+12
   \   00000128   F08FBDE8           POP      {R4-R11,PC}      ;; return
    136          }
    137          
    138          /*********************************************************************
    139          *
    140          *       GUI_CURSOR_HideEx
    141          */

   \                                 In section .text, align 4, keep-with-next
    142          void GUI_CURSOR_HideEx(int Layer) {
   \                     GUI_CURSOR_HideEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    143            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
   \   0000000C   1410A0E3           MOV      R1,#+20
   \   00000010   910400E0           MUL      R0,R1,R4
   \   00000014   ........           LDR      R1,??DataTable9
   \   00000018   0060A0E3           MOV      R6,#+0
   \   0000001C   015080E0           ADD      R5,R0,R1
   \   00000020   0560C5E5           STRB     R6,[R5, #+5]
    144            //GUI_DEBUG_ASSERT((Layer < GUI_NUM_CURSORS));
    145            _aCursorContext[Layer].CursorOn = 0;
    146            if (_aCursorContext[Layer].hSprite) {
   \   00000024   102095E5           LDR      R2,[R5, #+16]
   \   00000028   000052E3           CMP      R2,#+0
   \   0000002C   0900000A           BEQ      ??GUI_CURSOR_HideEx_0
    147              GUI_SPRITE_SetPosition(_aCursorContext[Layer].hSprite, _aCursorContext[Layer].x - _aCursorContext[Layer].pCursor->xHot, _aCursorContext[Layer].y - _aCursorContext[Layer].pCursor->yHot);
   \   00000030   013090E7           LDR      R3,[R0, +R1]
   \   00000034   0C2095E5           LDR      R2,[R5, #+12]
   \   00000038   083093E5           LDR      R3,[R3, #+8]
   \   0000003C   010090E7           LDR      R0,[R0, +R1]
   \   00000040   032042E0           SUB      R2,R2,R3
   \   00000044   083095E5           LDR      R3,[R5, #+8]
   \   00000048   040090E5           LDR      R0,[R0, #+4]
   \   0000004C   001043E0           SUB      R1,R3,R0
   \   00000050   100095E5           LDR      R0,[R5, #+16]
   \   00000054   ........           BL       GUI_SPRITE_SetPosition
    148            }
    149            _Hide(Layer);
   \                     ??GUI_CURSOR_HideEx_0:
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       GUI_GetCursorLayer
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0200000A           BEQ      ??GUI_CURSOR_HideEx_1
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   ........           BL       GUI_SetLayerVisEx
   \   00000070   040000EA           B        ??GUI_CURSOR_HideEx_2
   \                     ??GUI_CURSOR_HideEx_1:
   \   00000074   0400D5E5           LDRB     R0,[R5, #+4]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0200000A           BEQ      ??GUI_CURSOR_HideEx_3
   \   00000080   100095E5           LDR      R0,[R5, #+16]
   \   00000084   ........           BL       GUI_SPRITE_Hide
   \                     ??GUI_CURSOR_HideEx_2:
   \   00000088   0460C5E5           STRB     R6,[R5, #+4]
    150            GUI_UNLOCK();
   \                     ??GUI_CURSOR_HideEx_3:
   \   0000008C   7040BDE8           POP      {R4-R6,LR}
   \   00000090   ........           B        GUI_Unlock       ;; tailcall
    151          }
    152          
    153          /*********************************************************************
    154          *
    155          *       GUI_CURSOR_ShowEx
    156          */

   \                                 In section .text, align 4, keep-with-next
    157          void GUI_CURSOR_ShowEx(int Layer) {
   \                     GUI_CURSOR_ShowEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    158            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
   \   0000000C   1410A0E3           MOV      R1,#+20
   \   00000010   910400E0           MUL      R0,R1,R4
   \   00000014   ........           LDR      R1,??DataTable9
   \   00000018   0160A0E3           MOV      R6,#+1
   \   0000001C   015080E0           ADD      R5,R0,R1
   \   00000020   0560C5E5           STRB     R6,[R5, #+5]
    159            //GUI_DEBUG_ASSERT((Layer < GUI_NUM_CURSORS));
    160            _aCursorContext[Layer].CursorOn = 1;
    161            if (!_aCursorContext[Layer].pCursor) {
   \   00000024   010090E7           LDR      R0,[R0, +R1]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0300001A           BNE      ??GUI_CURSOR_ShowEx_0
    162              GUI_CURSOR_SelectEx(GUI_DEFAULT_CURSOR, Layer);
   \   00000030   0410A0E1           MOV      R1,R4
   \   00000034   ........           LDR      R0,??DataTable9_1
   \   00000038   ........           BL       GUI_CURSOR_SelectEx
   \   0000003C   0C0000EA           B        ??GUI_CURSOR_ShowEx_1
    163            } else {
    164              _Show(Layer);
   \                     ??GUI_CURSOR_ShowEx_0:
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       GUI_GetCursorLayer
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0200000A           BEQ      ??GUI_CURSOR_ShowEx_2
   \   00000050   0110A0E3           MOV      R1,#+1
   \   00000054   ........           BL       GUI_SetLayerVisEx
   \   00000058   050000EA           B        ??GUI_CURSOR_ShowEx_1
   \                     ??GUI_CURSOR_ShowEx_2:
   \   0000005C   0500D5E5           LDRB     R0,[R5, #+5]
   \   00000060   000050E3           CMP      R0,#+0
   \   00000064   0200000A           BEQ      ??GUI_CURSOR_ShowEx_1
   \   00000068   0460C5E5           STRB     R6,[R5, #+4]
   \   0000006C   100095E5           LDR      R0,[R5, #+16]
   \   00000070   ........           BL       GUI_SPRITE_Show
    165            }
    166            GUI_UNLOCK();
   \                     ??GUI_CURSOR_ShowEx_1:
   \   00000074   7040BDE8           POP      {R4-R6,LR}
   \   00000078   ........           B        GUI_Unlock       ;; tailcall
    167          }
    168          
    169          /*********************************************************************
    170          *
    171          *       GUI_CURSOR_GetStateEx
    172          */

   \                                 In section .text, align 4, keep-with-next
    173          int GUI_CURSOR_GetStateEx(int Layer) {
   \                     GUI_CURSOR_GetStateEx:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    174            int r;
    175            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
    176            //GUI_DEBUG_ASSERT((Layer < GUI_NUM_CURSORS));
    177            r = _aCursorContext[Layer].CursorOn;
   \   0000000C   1400A0E3           MOV      R0,#+20
   \   00000010   ........           LDR      R1,??DataTable9
   \   00000014   901421E0           MLA      R1,R0,R4,R1
   \   00000018   0540D1E5           LDRB     R4,[R1, #+5]
    178            GUI_UNLOCK();
   \   0000001C   ........           BL       GUI_Unlock
    179            return r;
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   1080BDE8           POP      {R4,PC}          ;; return
    180          }
    181          
    182          /*********************************************************************
    183          *
    184          *       GUI_CURSOR_SetPositionEx
    185          */

   \                                 In section .text, align 4, keep-with-next
    186          void GUI_CURSOR_SetPositionEx(int xNewPos, int yNewPos, int Layer) {
   \                     GUI_CURSOR_SetPositionEx:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
    187            unsigned CursorLayer;
    188            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
    189            //GUI_DEBUG_ASSERT((Layer < GUI_NUM_CURSORS));
    190            CursorLayer = GUI_GetCursorLayer(Layer);
   \   00000014   0600A0E1           MOV      R0,R6
   \   00000018   ........           BL       GUI_GetCursorLayer
   \   0000001C   1420A0E3           MOV      R2,#+20
   \   00000020   920601E0           MUL      R1,R2,R6
   \   00000024   ........           LDR      R2,??DataTable9
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0600000A           BEQ      ??GUI_CURSOR_SetPositionEx_0
    191            if (CursorLayer) {
    192              xNewPos -= _aCursorContext[Layer].pCursor->xHot;
    193              yNewPos -= _aCursorContext[Layer].pCursor->yHot;
    194              GUI_SetLayerPosEx(CursorLayer, xNewPos, yNewPos);
   \   00000030   021091E7           LDR      R1,[R1, +R2]
   \   00000034   082091E5           LDR      R2,[R1, #+8]
   \   00000038   041091E5           LDR      R1,[R1, #+4]
   \   0000003C   022045E0           SUB      R2,R5,R2
   \   00000040   011044E0           SUB      R1,R4,R1
   \   00000044   ........           BL       GUI_SetLayerPosEx
   \   00000048   110000EA           B        ??GUI_CURSOR_SetPositionEx_1
    195            } else {
    196              if ((_aCursorContext[Layer].x != xNewPos) | (_aCursorContext[Layer].y != yNewPos)) {
   \                     ??GUI_CURSOR_SetPositionEx_0:
   \   0000004C   026081E0           ADD      R6,R1,R2
   \   00000050   080096E5           LDR      R0,[R6, #+8]
   \   00000054   040050E1           CMP      R0,R4
   \   00000058   0C009605           LDREQ    R0,[R6, #+12]
   \   0000005C   05005001           CMPEQ    R0,R5
   \   00000060   0B00000A           BEQ      ??GUI_CURSOR_SetPositionEx_1
    197                if (_aCursorContext[Layer].hSprite) {
   \   00000064   100096E5           LDR      R0,[R6, #+16]
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0600000A           BEQ      ??GUI_CURSOR_SetPositionEx_2
    198                  GUI_SPRITE_SetPosition(_aCursorContext[Layer].hSprite, xNewPos - _aCursorContext[Layer].pCursor->xHot, yNewPos - _aCursorContext[Layer].pCursor->yHot);
   \   00000070   020091E7           LDR      R0,[R1, +R2]
   \   00000074   081090E5           LDR      R1,[R0, #+8]
   \   00000078   040090E5           LDR      R0,[R0, #+4]
   \   0000007C   012045E0           SUB      R2,R5,R1
   \   00000080   001044E0           SUB      R1,R4,R0
   \   00000084   100096E5           LDR      R0,[R6, #+16]
   \   00000088   ........           BL       GUI_SPRITE_SetPosition
    199                }
    200                _aCursorContext[Layer].x = xNewPos;
   \                     ??GUI_CURSOR_SetPositionEx_2:
   \   0000008C   084086E5           STR      R4,[R6, #+8]
    201                _aCursorContext[Layer].y = yNewPos;
   \   00000090   0C5086E5           STR      R5,[R6, #+12]
    202              }
    203            }
    204            GUI_UNLOCK();
   \                     ??GUI_CURSOR_SetPositionEx_1:
   \   00000094   7040BDE8           POP      {R4-R6,LR}
   \   00000098   ........           B        GUI_Unlock       ;; tailcall
    205          }
    206          
    207          /*********************************************************************
    208          *
    209          *       GUI_CURSOR_Select
    210          */

   \                                 In section .text, align 4, keep-with-next
    211          const GUI_CURSOR GUI_UNI_PTR * GUI_CURSOR_Select(const GUI_CURSOR GUI_UNI_PTR * pCursor) {
    212            return GUI_CURSOR_SelectEx(pCursor, GUI_Context.SelLayer);
   \                     GUI_CURSOR_Select:
   \   00000000   ........           LDR      R1,??DataTable9_2
   \   00000004   1110D1E5           LDRB     R1,[R1, #+17]
   \   00000008   ........           B        GUI_CURSOR_SelectEx  ;; tailcall
    213          }
    214          
    215          /*********************************************************************
    216          *
    217          *       GUI_CURSOR_Hide
    218          */

   \                                 In section .text, align 4, keep-with-next
    219          void GUI_CURSOR_Hide(void) {
    220            GUI_CURSOR_HideEx(GUI_Context.SelLayer);
   \                     GUI_CURSOR_Hide:
   \   00000000   ........           LDR      R0,??DataTable9_2
   \   00000004   1100D0E5           LDRB     R0,[R0, #+17]
   \   00000008   ........           B        GUI_CURSOR_HideEx  ;; tailcall
    221          }
    222          
    223          /*********************************************************************
    224          *
    225          *       GUI_CURSOR_Show
    226          */

   \                                 In section .text, align 4, keep-with-next
    227          void GUI_CURSOR_Show(void) {
   \                     GUI_CURSOR_Show:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    228            GUI_CURSOR_ShowEx(GUI_Context.SelLayer);
   \   00000004   ........           LDR      R0,??DataTable9_2
   \   00000008   1140D0E5           LDRB     R4,[R0, #+17]
   \   0000000C   ........           BL       GUI_Lock
   \   00000010   1410A0E3           MOV      R1,#+20
   \   00000014   810460E1           SMULBB   R0,R1,R4
   \   00000018   ........           LDR      R1,??DataTable9
   \   0000001C   0160A0E3           MOV      R6,#+1
   \   00000020   015080E0           ADD      R5,R0,R1
   \   00000024   0560C5E5           STRB     R6,[R5, #+5]
   \   00000028   010090E7           LDR      R0,[R0, +R1]
   \   0000002C   000050E3           CMP      R0,#+0
   \   00000030   0D00000A           BEQ      ??GUI_CURSOR_Show_0
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       GUI_GetCursorLayer
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0200000A           BEQ      ??GUI_CURSOR_Show_1
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   ........           BL       GUI_SetLayerVisEx
   \   0000004C   090000EA           B        ??GUI_CURSOR_Show_2
   \                     ??GUI_CURSOR_Show_1:
   \   00000050   0500D5E5           LDRB     R0,[R5, #+5]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0600000A           BEQ      ??GUI_CURSOR_Show_2
   \   0000005C   0460C5E5           STRB     R6,[R5, #+4]
   \   00000060   100095E5           LDR      R0,[R5, #+16]
   \   00000064   ........           BL       GUI_SPRITE_Show
   \   00000068   020000EA           B        ??GUI_CURSOR_Show_2
   \                     ??GUI_CURSOR_Show_0:
   \   0000006C   0410A0E1           MOV      R1,R4
   \   00000070   ........           LDR      R0,??DataTable9_1
   \   00000074   ........           BL       GUI_CURSOR_SelectEx
   \                     ??GUI_CURSOR_Show_2:
   \   00000078   7040BDE8           POP      {R4-R6,LR}
   \   0000007C   ........           B        GUI_Unlock       ;; tailcall
    229          }
    230          
    231          /*********************************************************************
    232          *
    233          *       GUI_CURSOR_GetState
    234          */

   \                                 In section .text, align 4, keep-with-next
    235          int GUI_CURSOR_GetState(void) {
   \                     GUI_CURSOR_GetState:
   \   00000000   10402DE9           PUSH     {R4,LR}
    236            return GUI_CURSOR_GetStateEx(GUI_Context.SelLayer);
   \   00000004   ........           LDR      R0,??DataTable9_2
   \   00000008   1140D0E5           LDRB     R4,[R0, #+17]
   \   0000000C   ........           BL       GUI_Lock
   \   00000010   ........           LDR      R1,??DataTable9
   \   00000014   1400A0E3           MOV      R0,#+20
   \   00000018   801401E1           SMLABB   R1,R0,R4,R1
   \   0000001C   0540D1E5           LDRB     R4,[R1, #+5]
   \   00000020   ........           BL       GUI_Unlock
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
    237          }
    238          
    239          /*********************************************************************
    240          *
    241          *       GUI_CURSOR_SetPosition
    242          */

   \                                 In section .text, align 4, keep-with-next
    243          void GUI_CURSOR_SetPosition(int xNewPos, int yNewPos) {
    244            GUI_CURSOR_SetPositionEx(xNewPos, yNewPos, GUI_Context.SelLayer);
   \                     GUI_CURSOR_SetPosition:
   \   00000000   ........           LDR      R2,??DataTable9_2
   \   00000004   1120D2E5           LDRB     R2,[R2, #+17]
   \   00000008   ........           B        GUI_CURSOR_SetPositionEx  ;; tailcall
    245          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   ........           DC32     _aCursorContext

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   ........           DC32     GUI_CursorArrowM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   ........           DC32     GUI_Context
    246          
    247          #else
    248          
    249          void GUICurs1_C(void);
    250          void GUICurs1_C(void) {} /* avoid empty object files */
    251          
    252          #endif   /* (GUI_SUPPORT_CURSOR) */
    253          
    254          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                 .cstack
     --------                 -------
     GUI_CURSOR_GetState           8
     GUI_CURSOR_GetStateEx         8
     GUI_CURSOR_Hide               8
     GUI_CURSOR_HideEx            16
     GUI_CURSOR_Select             8
     GUI_CURSOR_SelectEx          48
     GUI_CURSOR_SetPosition        8
     GUI_CURSOR_SetPositionEx     16
     GUI_CURSOR_Show              16
     GUI_CURSOR_ShowEx            16


   Section sizes:

     Function/Label           Bytes
     --------------           -----
     _aCursorContext           320
     GUI_CURSOR_SelectEx       300
     GUI_CURSOR_HideEx         148
     GUI_CURSOR_ShowEx         124
     GUI_CURSOR_GetStateEx      40
     GUI_CURSOR_SetPositionEx  156
     GUI_CURSOR_Select          12
     GUI_CURSOR_Hide            12
     GUI_CURSOR_Show           128
     GUI_CURSOR_GetState        44
     GUI_CURSOR_SetPosition     12
     ??DataTable9                4
     ??DataTable9_1              4
     ??DataTable9_2              4

 
 320 bytes in section .bss
 988 bytes in section .text
 
 988 bytes of CODE memory
 320 bytes of DATA memory

Errors: none
Warnings: none
