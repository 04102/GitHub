###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:16 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\DialogBox.c                                 #
#    Command line =  C:\DUII\DUII\DialogBox.c -D DEBUG=1 -D SDRAM_TARGET=1    #
#                    -D USB_IS_HIGH_SPEED -D NOPROFILER -D OS_TRACE=0 -D      #
#                    OS_VIEW_ENABLE=0 -lCN C:\DUII\TargetHW\Release\List\ -o  #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\DialogBox.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\DialogBox.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\DialogBox.c
      1          /****************************************************************
      2          *							Track Systems						*
      3          -----------------------------------------------------------------
      4          File: DialogBox.c
      5          Description: Display a dialog box with the specified text
      6          -----------------------------------------------------------------
      7          */
      8          
      9          #include "GUI.h"
     10          #include "DUII.h"
     11          #include "BUTTON.h"
     12          

   \                                 In section .bss, align 4
     13          WM_HWIN _hDlg, _hPrevWin;
   \                     _hDlg:
   \   00000000                      DS8 4
   \                     _hPrevWin:
   \   00000004                      DS8 4
     14          const char *Title, *Text;
   \                     Title:
   \   00000008                      DS8 4
   \                     Text:
   \   0000000C                      DS8 4
     15          

   \                                 In section .text, align 4, keep-with-next
     16          static const GUI_WIDGET_CREATE_INFO _aDialogCreate[] = {
   \                     _aDialogCreate:
   \   00000000                      ; Initializer data, 96 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "">`
   \              ....        
   \   00000008   00005A002400       DC16 0, 90, 36, 300, 200, 16
   \              2C01C8001000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "text">`
   \              ............
   \   00000020   61010A000A00       DC16 353, 10, 10, 280, 110, 0
   \              18016E000000
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000038   710132007800       DC16 369, 50, 120, 75, 50
   \              4B003200    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "NO">`
   \              ....        
   \   00000050   7201AA007800       DC16 370, 170, 120, 75, 50
   \              4B003200    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
     17          	{ FRAMEWIN_CreateIndirect, "", 0, 90, 36, 300, 200, FRAMEWIN_CF_MOVEABLE, 0 },
     18          	{ TEXT_CreateIndirect, "text", GUI_ID_TEXT1, 10, 10, 280, 110, 0},
     19          	{ BUTTON_CreateIndirect, "YES", GUI_ID_BUTTON1, 50, 120, 75, 50 },
     20          	{ BUTTON_CreateIndirect, "NO", GUI_ID_BUTTON2, 170, 120, 75, 50 },
     21          };
     22          

   \                                 In section .text, align 4, keep-with-next
     23          static void _cbCallback(WM_MESSAGE * pMsg) {
   \                     _cbCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     24          	int NCode, Id;
     25          	WM_HWIN hTxt1;
     26          
     27          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   1D0050E2           SUBS     R0,R0,#+29
   \   00000014   0200000A           BEQ      ??_cbCallback_0
   \   00000018   090050E2           SUBS     R0,R0,#+9
   \   0000001C   1200000A           BEQ      ??_cbCallback_1
   \   00000020   220000EA           B        ??_cbCallback_2
     28          	{
     29          		case WM_INIT_DIALOG:
     30          			hTxt1 = WM_GetDialogItem(_hDlg, GUI_ID_TEXT1);
   \                     ??_cbCallback_0:
   \   00000024   ........           LDR      R4,??DataTable6
   \   00000028   6110A0E3           MOV      R1,#+97
   \   0000002C   401F81E3           ORR      R1,R1,#0x100
   \   00000030   000094E5           LDR      R0,[R4, #+0]
   \   00000034   ........           BL       WM_GetDialogItem
   \   00000038   0050A0E1           MOV      R5,R0
     31          			TEXT_SetTextAlign(hTxt1, TEXT_CF_HCENTER | TEXT_CF_VCENTER);
   \   0000003C   0E10A0E3           MOV      R1,#+14
   \   00000040   ........           BL       TEXT_SetTextAlign
     32          			TEXT_SetWrapMode(hTxt1, GUI_WRAPMODE_WORD);
   \   00000044   0110A0E3           MOV      R1,#+1
   \   00000048   0500A0E1           MOV      R0,R5
   \   0000004C   ........           BL       TEXT_SetWrapMode
     33          			TEXT_SetText(hTxt1, Text);
   \   00000050   0C1094E5           LDR      R1,[R4, #+12]
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   ........           BL       TEXT_SetText
     34          
     35          			FRAMEWIN_SetText(_hDlg, Title);
   \   0000005C   081094E5           LDR      R1,[R4, #+8]
   \   00000060   000094E5           LDR      R0,[R4, #+0]
   \   00000064   ........           BL       FRAMEWIN_SetText
     36          
     37          			break;
   \   00000068   120000EA           B        ??_cbCallback_3
     38          		case WM_NOTIFY_PARENT:
     39          			Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??_cbCallback_1:
   \   0000006C   080094E5           LDR      R0,[R4, #+8]
   \   00000070   ........           BL       WM_GetId
     40          			NCode = pMsg->Data.v;                 // Notification code
     41          			switch(NCode)
   \   00000074   0C1094E5           LDR      R1,[R4, #+12]
   \   00000078   020051E3           CMP      R1,#+2
   \   0000007C   0D00001A           BNE      ??_cbCallback_3
     42          			{
     43          				case WM_NOTIFICATION_RELEASED:	// Note: must be 'released' not 'clicked' so we don't "move" the parent
     44          												// when this window goes away and the parent finds the pointer pressed
     45          												// in a new location
     46          			  // button clicked
     47          			  switch (Id) {
   \   00000080   710040E2           SUB      R0,R0,#+113
   \   00000084   400F50E2           SUBS     R0,R0,#+256
   \   00000088   0600000A           BEQ      ??_cbCallback_4
   \   0000008C   010050E2           SUBS     R0,R0,#+1
   \   00000090   0800001A           BNE      ??_cbCallback_3
     48          				case GUI_ID_BUTTON2:
     49          						GUI_EndDialog(_hDlg, NO);
   \   00000094   0010A0E3           MOV      R1,#+0
   \                     ??_cbCallback_5:
   \   00000098   ........           LDR      R0,??DataTable6
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   ........           BL       GUI_EndDialog
     50          					break;
   \   000000A4   030000EA           B        ??_cbCallback_3
     51          				case GUI_ID_BUTTON1:
     52          						GUI_EndDialog(_hDlg, YES);
   \                     ??_cbCallback_4:
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   F9FFFFEA           B        ??_cbCallback_5
     53          					break;
     54          			  };
     55          
     56          			};
     57          			break;
     58          	 	default:
     59          		  WM_DefaultProc(pMsg);
   \                     ??_cbCallback_2:
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       WM_DefaultProc
     60          };
     61          }
   \                     ??_cbCallback_3:
   \   000000B8   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000BC   3080BDE8           POP      {R4,R5,PC}       ;; return
     62          

   \                                 In section .text, align 4, keep-with-next
     63          int ShowDialog(const char *sTitle, const char *sText, int x_org, int y_org)
     64          {
   \                     ShowDialog:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   0160A0E1           MOV      R6,R1
   \   00000010   0270A0E1           MOV      R7,R2
   \   00000014   0380A0E1           MOV      R8,R3
     65          	WM_HWIN hTxt1;
     66          	//Title = sTitle;
     67          	//Text = sText;
     68          
     69          	_hPrevWin = WM_GetFocussedWindow();
   \   00000018   ........           LDR      R4,??DataTable6
   \   0000001C   ........           BL       WM_GetFocussedWindow
   \   00000020   040084E5           STR      R0,[R4, #+4]
     70          	//_hDlg = GUI_ExecDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbCallback, 0, 0, 0);
     71          	_hDlg = GUI_CreateDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &_cbCallback, 0, x_org, y_org);
   \   00000024   04808DE5           STR      R8,[SP, #+4]
   \   00000028   00708DE5           STR      R7,[SP, #+0]
   \   0000002C   0030A0E3           MOV      R3,#+0
   \   00000030   ........           LDR      R2,??DataTable6_1
   \   00000034   0410A0E3           MOV      R1,#+4
   \   00000038   ........           ADR      R0,_aDialogCreate
   \   0000003C   ........           BL       GUI_CreateDialogBox
   \   00000040   000084E5           STR      R0,[R4, #+0]
     72          
     73          	FRAMEWIN_SetText(_hDlg, sTitle);
   \   00000044   0510A0E1           MOV      R1,R5
   \   00000048   ........           BL       FRAMEWIN_SetText
     74          
     75          	hTxt1 = TEXT_CreateEx(10, 10, 280, 110, _hDlg, WM_CF_SHOW, 0, GUI_ID_TEXT1, sText);
   \   0000004C   6100A0E3           MOV      R0,#+97
   \   00000050   400F80E3           ORR      R0,R0,#0x100
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0200A0E3           MOV      R0,#+2
   \   00000064   04008DE5           STR      R0,[SP, #+4]
   \   00000068   000094E5           LDR      R0,[R4, #+0]
   \   0000006C   10608DE5           STR      R6,[SP, #+16]
   \   00000070   00008DE5           STR      R0,[SP, #+0]
   \   00000074   6E30A0E3           MOV      R3,#+110
   \   00000078   462FA0E3           MOV      R2,#+280
   \   0000007C   0A10A0E3           MOV      R1,#+10
   \   00000080   0A00A0E3           MOV      R0,#+10
   \   00000084   ........           BL       TEXT_CreateEx
   \   00000088   0050A0E1           MOV      R5,R0
     76          	TEXT_SetTextAlign(hTxt1, TEXT_CF_HCENTER | TEXT_CF_VCENTER);
   \   0000008C   0E10A0E3           MOV      R1,#+14
   \   00000090   ........           BL       TEXT_SetTextAlign
     77          	TEXT_SetWrapMode(hTxt1, GUI_WRAPMODE_WORD);
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   ........           BL       TEXT_SetWrapMode
     78          
     79          	return GUI_ExecCreatedDialog(_hDlg);
   \   000000A0   000094E5           LDR      R0,[R4, #+0]
   \   000000A4   18D08DE2           ADD      SP,SP,#+24
   \   000000A8   F041BDE8           POP      {R4-R8,LR}
   \   000000AC   ........           B        GUI_ExecCreatedDialog  ;; tailcall
     80          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     _hDlg

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   ........           DC32     _cbCallback

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "text">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   746578740000       DC8 116, 101, 120, 116, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "YES">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   59455300           DC8 89, 69, 83, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NO">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4E4F0000           DC8 78, 79, 0, 0

   Maximum stack usage in bytes:

     Function    .cstack
     --------    -------
     ShowDialog      48
     _cbCallback     16


   Section sizes:

     Function/Label     Bytes
     --------------     -----
     _hDlg                16
     _hPrevWin
     Title
     Text
     _aDialogCreate       96
     _cbCallback         192
     ShowDialog          176
     ??DataTable6          4
     ??DataTable6_1        4
     ?<Constant "">        1
     ?<Constant "text">    8
     ?<Constant "YES">     4
     ?<Constant "NO">      4

 
  16 bytes in section .bss
  17 bytes in section .rodata
 472 bytes in section .text
 
 472 bytes of CODE  memory
  17 bytes of CONST memory
  16 bytes of DATA  memory

Errors: none
Warnings: none
