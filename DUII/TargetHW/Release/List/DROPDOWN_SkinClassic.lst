###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:33 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\DROPDOWN_SkinClassic.c              #
#    Command line =  C:\DUII\TargetHW\GUI\DROPDOWN_SkinClassic.c -D DEBUG=1   #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\DROPDOWN_SkinClassic.lst   #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\DROPDOWN_SkinClassic.o      #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\DROPDOWN_SkinClassic.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : DROPDOWN_SkinClassic.c
     19          Purpose     : Implementation of DROPDOWN widget
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "DROPDOWN_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static code
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _DrawTriangleDown
     38          */
     39          static void _DrawTriangleDown(int x, int y, int Size) {
     40            for (; Size >= 0; Size--, y++ ) {
     41              GUI_DrawHLine(y, x - Size, x + Size);
     42            }
     43          }
     44          
     45          /*********************************************************************
     46          *
     47          *       _Paint
     48          */

   \                                 In section .text, align 4, keep-with-next
     49          static void _Paint(DROPDOWN_Handle hObj) {
   \                     _Paint:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   \   00000008   0050A0E1           MOV      R5,R0
     50            int Border;
     51            GUI_RECT r;
     52            const char * s;
     53            int InnerSize, ColorIndex;
     54            DROPDOWN_Obj * pObj;
     55            int TextBorderSize;
     56          
     57            //
     58            // Do some initial calculations
     59            //
     60            pObj = DROPDOWN_LOCK_H(hObj);
   \   0000000C   ........           BL       GUI_ALLOC_LockH
   \   00000010   0040A0E1           MOV      R4,R0
     61            Border = pObj->Widget.pEffect->EffectSize;
   \   00000014   2C0094E5           LDR      R0,[R4, #+44]
     62            TextBorderSize = pObj->Props.TextBorderSize;
   \   00000018   F078D4E1           LDRSH    R7,[R4, #+128]
   \   0000001C   006090E5           LDR      R6,[R0, #+0]
     63            GUI_SetFont(pObj->Props.pFont);
   \   00000020   4C0094E5           LDR      R0,[R4, #+76]
   \   00000024   ........           BL       GUI_SetFont
     64            ColorIndex = (pObj->Widget.State & WIDGET_STATE_FOCUS) ? 2 : 1;
   \   00000028   3200D4E5           LDRB     R0,[R4, #+50]
   \   0000002C   010010E3           TST      R0,#0x1
   \   00000030   0280A013           MOVNE    R8,#+2
   \   00000034   0180A003           MOVEQ    R8,#+1
     65            WM_GetClientRect(&r);
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           BL       WM_GetClientRect
     66            GUI__ReduceRect(&r, &r, Border);
   \   00000040   0620A0E1           MOV      R2,R6
   \   00000044   0D10A0E1           MOV      R1,SP
   \   00000048   0D00A0E1           MOV      R0,SP
   \   0000004C   ........           BL       GUI__ReduceRect
     67            InnerSize = r.y1 - r.y0 + 1;
   \   00000050   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000054   F210DDE1           LDRSH    R1,[SP, #+2]
   \   00000058   010040E0           SUB      R0,R0,R1
   \   0000005C   019080E2           ADD      R9,R0,#+1
     68            //
     69            // Draw the 3D effect (if configured)
     70            //
     71            WIDGET__EFFECT_DrawDown(&pObj->Widget);
   \   00000060   0400A0E1           MOV      R0,R4
   \   00000064   ........           BL       WIDGET__EFFECT_DrawDown
     72            //
     73            // Draw the outer text frames
     74            //
     75            r.x1 -= InnerSize;     // Spare square area to the right
   \   00000068   F400DDE1           LDRSH    R0,[SP, #+4]
     76            LCD_SetColor(pObj->Props.aBackColor[ColorIndex]);
   \   0000006C   088184E0           ADD      R8,R4,R8, LSL #+2
   \   00000070   090040E0           SUB      R0,R0,R9
   \   00000074   B400CDE1           STRH     R0,[SP, #+4]
   \   00000078   500098E5           LDR      R0,[R8, #+80]
   \   0000007C   ........           BL       LCD_SetColor
     77            //
     78            // Draw the text
     79            //
     80            LCD_SetBkColor(pObj->Props.aBackColor[ColorIndex]);
   \   00000080   500098E5           LDR      R0,[R8, #+80]
   \   00000084   ........           BL       LCD_SetBkColor
     81            GUI_FillRectEx(&r);
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           BL       GUI_FillRectEx
     82            r.x0 += TextBorderSize;
   \   00000090   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000094   000087E0           ADD      R0,R7,R0
   \   00000098   B000CDE1           STRH     R0,[SP, #+0]
     83            r.x1 -= TextBorderSize;
   \   0000009C   F400DDE1           LDRSH    R0,[SP, #+4]
   \   000000A0   070040E0           SUB      R0,R0,R7
   \   000000A4   B400CDE1           STRH     R0,[SP, #+4]
     84            LCD_SetColor(pObj->Props.aTextColor[ColorIndex]);
   \   000000A8   5C0098E5           LDR      R0,[R8, #+92]
   \   000000AC   ........           BL       LCD_SetColor
     85            s = DROPDOWN__GetpItemLocked(hObj, pObj->Sel);
   \   000000B0   F413D4E1           LDRSH    R1,[R4, #+52]
   \   000000B4   0500A0E1           MOV      R0,R5
   \   000000B8   ........           BL       DROPDOWN__GetpItemLocked
   \   000000BC   0050A0E1           MOV      R5,R0
     86            GUI_DispStringInRect(s, &r, pObj->Props.Align);
   \   000000C0   F228D4E1           LDRSH    R2,[R4, #+130]
   \   000000C4   0D10A0E1           MOV      R1,SP
   \   000000C8   ........           BL       GUI_DispStringInRect
     87            if (s) {
   \   000000CC   000055E3           CMP      R5,#+0
   \   000000D0   0000000A           BEQ      ??_Paint_0
     88              GUI_UNLOCK_H(s);
   \   000000D4   ........           BL       GUI_ALLOC_UnlockH
     89            }
     90            //
     91            // Draw arrow
     92            //
     93            WM_GetClientRect(&r);
   \                     ??_Paint_0:
   \   000000D8   0D00A0E1           MOV      R0,SP
   \   000000DC   ........           BL       WM_GetClientRect
     94            GUI__ReduceRect(&r, &r, Border);
   \   000000E0   0620A0E1           MOV      R2,R6
   \   000000E4   0D10A0E1           MOV      R1,SP
   \   000000E8   0D00A0E1           MOV      R0,SP
   \   000000EC   ........           BL       GUI__ReduceRect
     95            r.x0 = r.x1 + 1 - InnerSize;
   \   000000F0   F400DDE1           LDRSH    R0,[SP, #+4]
   \   000000F4   010080E2           ADD      R0,R0,#+1
   \   000000F8   090040E0           SUB      R0,R0,R9
   \   000000FC   B000CDE1           STRH     R0,[SP, #+0]
     96            LCD_SetColor(pObj->Props.aColor[DROPDOWN_CI_BUTTON]);
   \   00000100   6C0094E5           LDR      R0,[R4, #+108]
   \   00000104   ........           BL       LCD_SetColor
     97            GUI_FillRectEx(&r);
   \   00000108   0D00A0E1           MOV      R0,SP
   \   0000010C   ........           BL       GUI_FillRectEx
     98            LCD_SetColor(pObj->Props.aColor[DROPDOWN_CI_ARROW]);
   \   00000110   680094E5           LDR      R0,[R4, #+104]
   \   00000114   ........           BL       LCD_SetColor
     99            _DrawTriangleDown((r.x1 + r.x0) / 2, r.y0 + 5, (r.y1 - r.y0 - 8) / 2);
   \   00000118   F200DDE1           LDRSH    R0,[SP, #+2]
   \   0000011C   F610DDE1           LDRSH    R1,[SP, #+6]
   \   00000120   001041E0           SUB      R1,R1,R0
   \   00000124   081041E2           SUB      R1,R1,#+8
   \   00000128   A11F81E0           ADD      R1,R1,R1, LSR #+31
   \   0000012C   C150A0E1           ASR      R5,R1,#+1
   \   00000130   056080E2           ADD      R6,R0,#+5
   \   00000134   F400DDE1           LDRSH    R0,[SP, #+4]
   \   00000138   F010DDE1           LDRSH    R1,[SP, #+0]
   \   0000013C   000055E3           CMP      R5,#+0
   \   00000140   000081E0           ADD      R0,R1,R0
   \   00000144   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000148   C070A0E1           ASR      R7,R0,#+1
   \   0000014C   0900004A           BMI      ??_Paint_1
   \   00000150   078085E0           ADD      R8,R5,R7
   \                     ??_Paint_2:
   \   00000154   0820A0E1           MOV      R2,R8
   \   00000158   051047E0           SUB      R1,R7,R5
   \   0000015C   0600A0E1           MOV      R0,R6
   \   00000160   ........           BL       GUI_DrawHLine
   \   00000164   015045E2           SUB      R5,R5,#+1
   \   00000168   016086E2           ADD      R6,R6,#+1
   \   0000016C   018048E2           SUB      R8,R8,#+1
   \   00000170   000055E3           CMP      R5,#+0
   \   00000174   F6FFFF5A           BPL      ??_Paint_2
    100            WIDGET__EFFECT_DrawUpRect(&pObj->Widget, &r);
   \                     ??_Paint_1:
   \   00000178   0D10A0E1           MOV      R1,SP
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   ........           BL       WIDGET__EFFECT_DrawUpRect
    101            GUI_UNLOCK_H(pObj);
   \   00000184   ........           BL       GUI_ALLOC_UnlockH
    102          }
   \   00000188   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000018C   F083BDE8           POP      {R4-R9,PC}       ;; return
    103          
    104          /*********************************************************************
    105          *
    106          *       _Create
    107          */

   \                                 In section .text, align 4, keep-with-next
    108          static void _Create(DROPDOWN_Handle hObj) {
    109            // Nothing special to do...
    110            GUI_USE_PARA(hObj);
    111          }
   \                     _Create:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    112          
    113          /*********************************************************************
    114          *
    115          *        Private data
    116          *
    117          **********************************************************************
    118          */
    119          /*********************************************************************
    120          *
    121          *       DROPDOWN__SkinClassic
    122          */

   \                                 In section .text, align 4, keep-with-next
    123          const WIDGET_SKIN DROPDOWN__SkinClassic = {
   \                     DROPDOWN__SkinClassic:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   ............       DC32 _Paint, _Create
   \              ....        
   \   00000008   00000000           DC8 0, 0, 0, 0
    124            _Paint,
    125            _Create,
    126          };
    127          
    128          /*********************************************************************
    129          *
    130          *        Public code
    131          *
    132          **********************************************************************
    133          */
    134          /*********************************************************************
    135          *
    136          *       DROPDOWN_SetSkinClassic
    137          */

   \                                 In section .text, align 4, keep-with-next
    138          void DROPDOWN_SetSkinClassic(DROPDOWN_Handle hObj) {
   \                     DROPDOWN_SetSkinClassic:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    139            DROPDOWN_Obj * pObj;
    140          
    141            pObj = DROPDOWN_LOCK_H(hObj);
    142            pObj->pWidgetSkin = &DROPDOWN__SkinClassic;
   \   00000008   ........           BL       GUI_ALLOC_LockH
   \   0000000C   ........           ADR      R1,DROPDOWN__SkinClassic
   \   00000010   841080E5           STR      R1,[R0, #+132]
    143            GUI_UNLOCK_H(pObj);
   \   00000014   ........           BL       GUI_ALLOC_UnlockH
    144            WM_InvalidateWindow(hObj);
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   1040BDE8           POP      {R4,LR}
   \   00000020   ........           B        WM_InvalidateWindow  ;; tailcall
    145          }
    146          
    147          /*********************************************************************
    148          *
    149          *       DROPDOWN_SetDefaultSkinClassic
    150          */

   \                                 In section .text, align 4, keep-with-next
    151          void DROPDOWN_SetDefaultSkinClassic(void) {
    152            DROPDOWN__pSkinDefault = &DROPDOWN__SkinClassic;
   \                     DROPDOWN_SetDefaultSkinClassic:
   \   00000000   ........           LDR      R0,??DataTable1
   \   00000004   ........           ADR      R1,DROPDOWN__SkinClassic
   \   00000008   001080E5           STR      R1,[R0, #+0]
    153          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     DROPDOWN__pSkinDefault
    154          
    155          
    156          #else                            /* Avoid empty object files */
    157            void DROPDOWN_SkinClassic_C(void);
    158            void DROPDOWN_SkinClassic_C(void) {}
    159          #endif /* GUI_WINSUPPORT */
    160          
    161          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     DROPDOWN_SetDefaultSkinClassic      0
     DROPDOWN_SetSkinClassic             8
     _Create                             0
     _Paint                             40


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     _Paint                          400
     _Create                           4
     DROPDOWN__SkinClassic            12
     DROPDOWN_SetSkinClassic          36
     DROPDOWN_SetDefaultSkinClassic   16
     ??DataTable1                      4

 
 472 bytes in section .text
 
 472 bytes of CODE memory

Errors: none
Warnings: none
