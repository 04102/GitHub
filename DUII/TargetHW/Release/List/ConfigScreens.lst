###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:15 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\ConfigScreens.c                             #
#    Command line =  C:\DUII\DUII\ConfigScreens.c -D DEBUG=1 -D               #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\ConfigScreens.lst          #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\ConfigScreens.o             #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\ConfigScreens.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          #include <stdio.h>
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include <ctype.h>
     26          #include "DUII.h"
     27          #include "GUI.h"
     28          #include "commondefs.h"
     29          #include "DIALOG.h"
     30          #include "ConfigScreens.h"
     31          #include "GeneralConfig.h"
     32          #include "GaugeScreen.h"
     33          #include "FlashReadWrite.h"
     34          #include "GMeterScreen.h"
     35          #include "RunningGauges.h"
     36          #include "RaceSetupScreens.h"
     37          #include "SystemSettingsScreens.h"
     38          #include "VehicleSettingsScreens.h"
     39          #include "DataHandler.h"
     40          #include "LEDHandler.h"
     41          #include "TachSetupScreens.h"
     42          #include "InputScreens.h"
     43          #include "ReviewSessionsScreens.h"
     44          #include "StandardList.h"
     45          #include "TrackSettingsScreens.h"
     46          #include "GearingScreens.h"
     47          #include "AnalogInputSettings.h"
     48          #include "DigitalInputSettings.h"
     49          #include "InterTask.h"
     50          #include "AnalogInputsScale.h"
     51          #include "GearRatios.h"
     52          #include "SFScreens.h"
     53          #ifndef _WINDOWS
     54          #include "FS.h"
     55          #include "CommTask.h"
     56          #include "dataflash.h"
     57          #endif
     58          #include "TrackDetect.h"
     59          #include "Utilities.h"
     60          #include "ConfigurableGaugeCommon.h"
     61          #include "HelpScreens.h"
     62          
     63          
     64          //
     65          // Local conditional compile flags
     66          //
     67          //#define	SUPPORT_AUDIO
     68          
     69          
     70          // KMC Development code for slideout test
     71          
     72          #define	SLIDEOUT_OPEN_REGION_X		350
     73          #define	SLIDEOUT_OPEN_REGION_Y		225
     74          #define	SLIDEOUT_CLOSE_REGION		264
     75          #ifdef SUPPORT_AUDIO
     76          #define	SPRITE_END_POS				234
     77          #else
     78          #define	SPRITE_END_POS				240
     79          #define	SLIDEOUT_CLOSE_REGION_Y		187
     80          #endif
     81          #define	SU_SPRITE_ICON_X_OFFSET			122
     82          #define	CAMERA_SPRITE_ICON_X_OFFSET		165
     83          #define	SIGSTRN_SPRITE_ICON_X_OFFSET	202
     84          
     85          #define	SLIDEOUT_OPEN_TIME			5000
     86          #define	TWO_SECONDS					2000
     87          
     88          #ifdef _WINDOWS
     89          // Slideout moves at different speeds on the traget HW so use seperate contants to control it
     90          // PC version
     91          #define	SLIDEOUT_STEP_FAST_TIME		10
     92          #define	SLIDEOUT_STEP_FAST_SIZE		100
     93          #define	SLIDEOUT_STEP_SLOW_TIME		10
     94          #define	SLIDEOUT_STEP_SLOW_SIZE		8
     95          #else
     96          // Target HW version
     97          #define	SLIDEOUT_STEP_FAST_TIME		10
     98          #define	SLIDEOUT_STEP_FAST_SIZE		100
     99          #define	SLIDEOUT_STEP_SLOW_TIME		10
    100          #define	SLIDEOUT_STEP_SLOW_SIZE		24
    101          #endif
    102          
    103          enum SLIDEOUT_STATE {
    104          	SO_CLOSED,
    105          	SO_OPENING,
    106          	SO_CLOSING,
    107          	SO_WAITING
    108          };
    109          enum MOVE_BACK {
    110          	ONE_SCREEN,
    111          	ALL_THE_WAY
    112          };
    113          
    114          enum SLIDEOUT_STATE slideoutState;
    115          int slideoutXPos = 0;
    116          int slideoutYPos = 0;
    117          long hSlideoutTimer = 0;
    118          int backKeyPressedTime = 0;
    119          int configKeyPressedTime = 0;
    120          int slideoutStepSize, slideoutStepTime;
    121          GUI_HSPRITE hSlideout = 0;
    122          GUI_HSPRITE hSUStatusSprite = 0;
    123          GUI_HSPRITE hCameraSprite = 0;
    124          GUI_HSPRITE hSignalStrengthSprite = 0;
    125          
    126          #ifdef	INCLUDE_RACE_HELP
    127          int raceStartTime = 0;
    128          int raceTimerActive = 0;
    129          
    130          extern GUI_CONST_STORAGE GUI_BITMAP bmGenericGaugeHelp;
    131          #endif
    132          
    133          extern GUI_CONST_STORAGE GUI_BITMAP bmNoAudioSlideout;
    134          //extern GUI_CONST_STORAGE GUI_BITMAP bmSystemStatusScreenHelp;
    135          //extern GUI_CONST_STORAGE GUI_BITMAP bmSystemStatusScreenHelpBlackBack;
    136          
    137          #ifdef SUPPORT_AUDIO
    138          extern GUI_CONST_STORAGE GUI_BITMAP bmSlideOut;
    139          extern GUI_CONST_STORAGE GUI_BITMAP bmSlideOutMuted;
    140          #endif
    141          
    142          void StartSlideout(void);
    143          void ProcessSlideoutKeyPress(int lastx, int lasty);
    144          void CloseSlider(void);
    145          void DeleteSlideout(void);
    146          int TouchPosIsReset(int lastx, int lasty);
    147          
    148          
    149          /*********************************************************************
    150          *
    151          *       Public Variables
    152          *
    153          **********************************************************************
    154          */
    155          int screen_scrolling;
    156          int pressingbutton_semaphore = 0;
    157          long hScreenTimer;
    158          int selectedSessionUnsorted;

   \                                 In section .bss, align 1
    159          char processingScreenTransition = false;
   \                     processingScreenTransition:
   \   00000000                      DS8 1
    160          enum RACE_MODES raceModeState;
    161          enum GUI_RACE_MODES selectedRaceMode;
    162          int glbBlackoutFlag = false;
    163          int numSessions;
    164          
    165          /*********************************************************************
    166          *
    167          *       External data and code
    168          *
    169          **********************************************************************
    170          */
    171          // Note that the button bitmaps must be encoded for the appropriate color
    172          // conversion selected in LCDConf.c
    173          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
    174          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
    175          extern GUI_CONST_STORAGE GUI_BITMAP bmGoRacingText;
    176          extern GUI_CONST_STORAGE GUI_BITMAP bmDrive;
    177          extern GUI_CONST_STORAGE GUI_BITMAP bmDragButton;
    178          extern GUI_CONST_STORAGE GUI_BITMAP bmDisplayText;
    179          extern GUI_CONST_STORAGE GUI_BITMAP bmDriver;
    180          extern GUI_CONST_STORAGE GUI_BITMAP bmDriverText;
    181          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceReview;
    182          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceReviewText;
    183          extern GUI_CONST_STORAGE GUI_BITMAP bmSingleSpinner;
    184          extern GUI_CONST_STORAGE GUI_BITMAP bmBackgroundWithPanel;
    185          extern GUI_CONST_STORAGE GUI_BITMAP bmRaceSetupText;
    186          extern GUI_CONST_STORAGE GUI_BITMAP bmStorage;
    187          extern GUI_CONST_STORAGE GUI_BITMAP bmSystemSetup;
    188          extern GUI_CONST_STORAGE GUI_BITMAP bmSystemSettingsText;
    189          extern GUI_CONST_STORAGE GUI_BITMAP bmSystemSetupText;
    190          extern GUI_CONST_STORAGE GUI_BITMAP bmTimeGPS;
    191          extern GUI_CONST_STORAGE GUI_BITMAP bmTimeText;
    192          extern GUI_CONST_STORAGE GUI_BITMAP bmTrack;
    193          extern GUI_CONST_STORAGE GUI_BITMAP bmTrackText;
    194          extern GUI_CONST_STORAGE GUI_BITMAP bmUnits;
    195          extern GUI_CONST_STORAGE GUI_BITMAP bmUnitsText;
    196          extern GUI_CONST_STORAGE GUI_BITMAP bmVehicle;
    197          extern GUI_CONST_STORAGE GUI_BITMAP bmVehicleText;
    198          extern GUI_CONST_STORAGE GUI_BITMAP bmDisplay;
    199          extern GUI_CONST_STORAGE GUI_BITMAP bmGoRacing;
    200          extern GUI_CONST_STORAGE GUI_BITMAP bmTraqmateLogo;
    201          extern GUI_CONST_STORAGE GUI_BITMAP bmBackground;
    202          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoxRally;
    203          extern GUI_CONST_STORAGE GUI_BITMAP bmRace;
    204          //extern GUI_CONST_STORAGE GUI_BITMAP bmInstruments;
    205          extern GUI_CONST_STORAGE GUI_BITMAP bmCamera;
    206          extern GUI_CONST_STORAGE GUI_BITMAP bmBlackButton;
    207          extern GUI_CONST_STORAGE GUI_BITMAP bmGrayButton;
    208          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenButton;
    209          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
    210          extern GUI_CONST_STORAGE GUI_BITMAP bmBigGreenButton;
    211          extern GUI_CONST_STORAGE GUI_BITMAP bmStdGreenButton;
    212          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallBlueButton;
    213          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallRedButton;
    214          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallYellowButton;
    215          extern GUI_CONST_STORAGE GUI_BITMAP bmBlankListWheelScreen;
    216          //extern GUI_CONST_STORAGE GUI_BITMAP bmLaunchGForce;
    217          extern GUI_CONST_STORAGE GUI_BITMAP bmAutoStartButton;
    218          extern GUI_CONST_STORAGE GUI_BITMAP bmPredictive;
    219          extern GUI_CONST_STORAGE GUI_BITMAP bmLapsQualifyButton;
    220          extern GUI_CONST_STORAGE GUI_BITMAP bmRecordingOn;
    221          extern GUI_CONST_STORAGE GUI_BITMAP bmRecordingOff;
    222          extern int testMode;			// Test variable to enable test mode - the 9th screen!
    223          #ifndef _WINDOWS
    224          extern char OkToUseSDCard(void);
    225          extern int demoMode;
    226          #endif
    227          extern char fullSessionName[];
    228          extern char sessionName[];
    229          extern char fileList[];			// List of failed config files at startup
    230          extern int popupTitleTextColor;
    231          
    232          /*********************************************************************
    233          *
    234          *       Local Prototypes
    235          *
    236          **********************************************************************
    237          */
    238          void MoveRight(enum MOVE_BACK howFar);
    239          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen);
    240          void DisplayGoRacing(WM_HWIN);
    241          void DisplayReviewSessions(WM_HWIN);
    242          void DisplaySystemSettings(WM_HWIN);
    243          void DisplayRaceSetup(WM_HWIN);
    244          void GoRacingPaint(WM_HWIN);
    245          void ReviewSessionsPaint(WM_HWIN);
    246          void SystemSettingsPaint(WM_HWIN);
    247          void RaceSetupPaint(WM_HWIN);
    248          void SetConfigWindowHandle(WM_HWIN);
    249          WM_HWIN GetCurrentWindowHandle(void);
    250          int GetNumScreens(enum SCREEN_TYPE screenType);
    251          //int okToStopRecording(WM_HWIN hParent, int ypos);
    252          void SetSessionSelection(int sel);
    253          void ShowHelpPopup(int detailsAvail);
    254          void HelpCallback(WM_MESSAGE * pMsg);
    255          int ProcessScreenExit(void);
    256          char *GetSystemStatsHelpText(const char *pText);
    257          char *GetStorageStatsHelpText(const char *pText);
    258          
    259          void DisplayClosestTracks(WM_HWIN hPrev);
    260          void ProceedToRaceMode(enum GUI_RACE_MODES mode, WM_HWIN hParent);
    261          void SaveRaceMode(enum GUI_RACE_MODES mode);
    262          int GetCurrentScreenID(void);
    263          WM_HWIN DisplaySavingData(void);
    264          int DateTimeSort(void const *p1, void const *p2);
    265          int LapTimeSort(void const *p1, void const *p2);
    266          int PopulateSessionLISTVIEW(int selection);
    267          int GetMins(const char *pData);
    268          void SetButtonColors(int i);
    269          void SetRecordModeGraphic(void);
    270          enum SESSION_TYPE ConvertRaceModeToSessionType(enum GUI_RACE_MODES mode);
    271          void FinishPressed(void);
    272          int GetPrevGaugeScreen(void);
    273          int GetNextGaugeScreen(void);
    274          char InactiveGaugeScreen(int screen);
    275          int GaugeScreenIndexToID(enum SCREEN_TYPE screenType, int screenIndex);
    276          void UpdateSessionListView(WM_HWIN hParent, char updateSelectedSession);
    277          void SetSpritePositions(void);
    278          char TouchPosIsBackKey2(int lastx, int lasty);
    279          void StartBackKeyTimer(void);
    280          char BackTimerExpired(void);
    281          void StartConfigKeyTimer(void);
    282          char ConfigTimerExpired(void);
    283          char AnyNonDragGaugeScreen(enum SCREEN_TYPE type);
    284          char *GetAnalogInputText(int index, char *pBuffer);
    285          char *GetDigitalInputText(int index, char *pBuffer);
    286          unsigned char CheckForStopRecord(void);
    287          
    288          
    289          /*********************************************************************
    290          *
    291          *       Tables and Constants
    292          *
    293          **********************************************************************
    294          */
    295          // Note: the order of these entries must correspond to the screen ID indexes
    296          struct SCREEN_LIST ConfigScreenList[NUM_CONFIG_SCREENS+1] = {
    297          	{ GO_RACING, DisplayGoRacing, GoRacingPaint },
    298          	{ RACE_SETUP, DisplayRaceSetup, RaceSetupPaint },
    299          	{ REVIEW_SESSIONS, DisplayReviewSessions, ReviewSessionsPaint },
    300          	{ SYSTEM_SETUP, DisplaySystemSettings, SystemSettingsPaint },
    301          	{ -1, NULL, NULL }
    302          };
    303          
    304          // Size of touchscreen dedicated to the reactive portion for the navigation (BACK) and INFO keys
    305          #define	NAVI_SIZE_X		60
    306          #define	NAVI_SIZE_Y		60
    307          #define	INFO_SIZE_X		50
    308          #define	INFO_SIZE_Y		50
    309          
    310          #define	NARROW_BUTTON_WIDTH	80
    311          #define	NARROW_BUTTON_LEFT	358
    312          #define	BOTTOM_BUTTON_ROW	228
    313          #define	COL1	36
    314          #define	COL2	214
    315          #define	COL3	302
    316          #define	COL4	390
    317          
    318          
    319          #define	GRAPHICS
    320          #define	TRANSITION			2
    321          
    322          #define	SCROLL_TIME			6
    323          #define	SCROLL_STEP_SIZE	2
    324          
    325          #define	DELETE_SESSION_BTN		GUI_ID_USER + 1
    326          #define	CHECK_TIMES_BTN			GUI_ID_USER + 2
    327          #define	SESSION_TYPE_BTN		GUI_ID_USER + 3
    328          #define	DRIVER_BUTTON			GUI_ID_USER + 4
    329          #define	VEHICLE_BUTTON			GUI_ID_USER + 5
    330          #define	TRACK_BUTTON			GUI_ID_USER + 6
    331          #define	ROADRACE_BUTTON			GUI_ID_USER + 7
    332          #define	AUTOXRALLY_BUTTON		GUI_ID_USER + 8
    333          #define	DRIVE_BUTTON			GUI_ID_USER + 9
    334          #define	RECORDMODE_BUTTON		GUI_ID_USER + 10
    335          #define	LAPSQUALIFYING_BUTTON	GUI_ID_USER + 11
    336          #define	DISPLAY_BUTTON			GUI_ID_USER + 12
    337          #define	UNITS_BUTTON			GUI_ID_USER + 13
    338          #define	TIME_BUTTON				GUI_ID_USER + 14
    339          #define	AUTOSTART_BUTTON		GUI_ID_USER + 15
    340          #define	STORAGE_BUTTON			GUI_ID_USER + 16
    341          #define	PREDICTIVE_BUTTON		GUI_ID_USER + 17
    342          #define	GUI_ID_ABORT			GUI_ID_USER + 18
    343          #define	BEST_LAP_BTN			GUI_ID_USER + 19
    344          #define	DRAG_BUTTON				GUI_ID_USER + 20
    345          
    346          // KMC - changed to LISTVIEW
    347          //#define	REVIEW_SESSIONS_LIST		GUI_ID_LISTWHEEL1
    348          #define	REVIEW_SESSIONS_LIST		GUI_ID_LISTVIEW0
    349          
    350          
    351          /*********************************************************************
    352          *
    353          *       Local Variables
    354          *
    355          **********************************************************************
    356          */
    357          static WM_HWIN hConfigScreen = 0;
    358          //WM_HWIN hDataRequester;
    359          static int previous_touch_state;
    360          //static int KMCDialogSemaphone = 0;
    361          static int nextScreen/*, peekingScreen*/;
    362          static int clickedOnThisScreen;
    363          BUTTON_Handle hBestTime, hDetailsButton, hDeleteButton;
    364          BUTTON_Handle hSelectedReviewMode;
    365          BUTTON_Handle hRecordModeButton;
    366          // KMC - changed to LISTVIEW
    367          //LISTWHEEL_Handle hListWheel;
    368          LISTVIEW_Handle hListView;
    369          GUI_HWIN hDisplayClosestTracks;
    370          static char waitedForSF = false;
    371          static char GSignoreRelease = false;
    372          WM_HWIN hSavingDataDialog;
    373          char userAbort;

   \                                 In section .bss, align 1
    374          char searchingSemaphore;
   \                     searchingSemaphore:
   \   00000000                      DS8 1
    375          char reviewingSession = 0;
    376          int selectedSessionSorted;
    377          
    378          /*********************************************************************
    379          *
    380          *       Help Screen Definitions
    381          *
    382          **********************************************************************
    383          */

   \                                 In section .text, align 4, keep-with-next
    384          const char MAIN_SCREEN_INFO[] =
   \                     MAIN_SCREEN_INFO:
   \   00000000                      ; Initializer data, 288 bytes
   \   00000000   476F20526163       DC8 71, 111, 32, 82, 97, 99, 105, 110, 103, 32
   \              696E6720    
   \   0000000A   746F20726563       DC8 116, 111, 32, 114, 101, 99, 111, 114, 100, 32
   \              6F726420    
   \   00000014   64617461206F       DC8 100, 97, 116, 97, 32, 111, 114, 32, 115, 104
   \              72207368    
   \   0000001E   6F7720696E73       DC8 111, 119, 32, 105, 110, 115, 116, 114, 117, 109
   \              7472756D    
   \   00000028   656E74732E0A       DC8 101, 110, 116, 115, 46, 10, 10, 82, 97, 99
   \              0A526163    
   \   00000032   652052657669       DC8 101, 32, 82, 101, 118, 105, 101, 119, 32, 116
   \              65772074    
   \   0000003C   6F2073656520       DC8 111, 32, 115, 101, 101, 32, 115, 101, 115, 115
   \              73657373    
   \   00000046   696F6E732061       DC8 105, 111, 110, 115, 32, 97, 110, 100, 32, 108
   \              6E64206C    
   \   00000050   61702074696D       DC8 97, 112, 32, 116, 105, 109, 101, 115, 46, 10
   \              65732E0A    
   \   0000005A   0A5261636520       DC8 10, 82, 97, 99, 101, 32, 83, 101, 116, 117
   \              53657475    
   \   00000064   7020746F2073       DC8 112, 32, 116, 111, 32, 115, 101, 108, 101, 99
   \              656C6563    
   \   0000006E   742044726976       DC8 116, 32, 68, 114, 105, 118, 101, 114, 44, 32
   \              65722C20    
   \   00000078   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 44, 32, 111
   \              652C206F    
   \   00000082   722054726163       DC8 114, 32, 84, 114, 97, 99, 107, 32, 111, 114
   \              6B206F72    
   \   0000008C   207365742075       DC8 32, 115, 101, 116, 32, 117, 112, 32, 73, 110
   \              7020496E    
   \   00000096   707574732E0A       DC8 112, 117, 116, 115, 46, 10, 10, 83, 121, 115
   \              0A537973    
   \   000000A0   74656D205365       DC8 116, 101, 109, 32, 83, 101, 116, 117, 112, 32
   \              74757020    
   \   000000AA   666F72206469       DC8 102, 111, 114, 32, 100, 105, 115, 112, 108, 97
   \              73706C61    
   \   000000B4   792C2074696D       DC8 121, 44, 32, 116, 105, 109, 101, 44, 32, 115
   \              652C2073    
   \   000000BE   746F72616765       DC8 116, 111, 114, 97, 103, 101, 44, 32, 97, 110
   \              2C20616E    
   \   000000C8   64206F746865       DC8 100, 32, 111, 116, 104, 101, 114, 32, 103, 101
   \              72206765    
   \   000000D2   6E6572616C20       DC8 110, 101, 114, 97, 108, 32, 115, 101, 116, 116
   \              73657474    
   \   000000DC   696E67732E0A       DC8 105, 110, 103, 115, 46, 10, 10, 73, 99, 111
   \              0A49636F    
   \   000000E6   6E733A204361       DC8 110, 115, 58, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   000000F0   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 83
   \              732C2053    
   \   000000FA   442043617264       DC8 68, 32, 67, 97, 114, 100, 32, 83, 116, 97
   \              20537461    
   \   00000104   7475732C2047       DC8 116, 117, 115, 44, 32, 71, 80, 83, 32, 83
   \              50532053    
   \   0000010E   69676E616C20       DC8 105, 103, 110, 97, 108, 32, 83, 116, 114, 101
   \              53747265    
   \   00000118   6E6774680000       DC8 110, 103, 116, 104, 0, 0, 0, 0
   \              0000        
    385          "Go Racing to record data or show instruments.\
    386          \n\nRace Review to see sessions and lap times.\
    387          \n\nRace Setup to select Driver, Vehicle, or Track or set up Inputs.\
    388          \n\nSystem Setup for display, time, storage, and other general settings.\
    389          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    390          

   \                                 In section .text, align 4, keep-with-next
    391          const char GO_RACING_INFO[] =
   \                     GO_RACING_INFO:
   \   00000000                      ; Initializer data, 452 bytes
   \   00000000   4C61702F5261       DC8 76, 97, 112, 47, 82, 97, 99, 101, 32, 116
   \              63652074    
   \   0000000A   6F207265636F       DC8 111, 32, 114, 101, 99, 111, 114, 100, 32, 100
   \              72642064    
   \   00000014   617461206F6E       DC8 97, 116, 97, 32, 111, 110, 32, 99, 108, 111
   \              20636C6F    
   \   0000001E   736564206369       DC8 115, 101, 100, 32, 99, 105, 114, 99, 117, 105
   \              72637569    
   \   00000028   742072616365       DC8 116, 32, 114, 97, 99, 101, 116, 114, 97, 99
   \              74726163    
   \   00000032   6B2E0A0A4175       DC8 107, 46, 10, 10, 65, 117, 116, 111, 45, 88
   \              746F2D58    
   \   0000003C   2F52616C6C79       DC8 47, 82, 97, 108, 108, 121, 32, 102, 111, 114
   \              20666F72    
   \   00000046   206C61756E63       DC8 32, 108, 97, 117, 110, 99, 104, 45, 101, 110
   \              682D656E    
   \   00000050   61626C656420       DC8 97, 98, 108, 101, 100, 32, 115, 101, 112, 97
   \              73657061    
   \   0000005A   726174652073       DC8 114, 97, 116, 101, 32, 115, 116, 97, 114, 116
   \              74617274    
   \   00000064   2F66696E6973       DC8 47, 102, 105, 110, 105, 115, 104, 32, 114, 101
   \              68207265    
   \   0000006E   636F7264696E       DC8 99, 111, 114, 100, 105, 110, 103, 46, 10, 10
   \              672E0A0A    
   \   00000078   447269766520       DC8 68, 114, 105, 118, 101, 32, 45, 32, 116, 111
   \              2D20746F    
   \   00000082   756368206C65       DC8 117, 99, 104, 32, 108, 101, 102, 116, 32, 115
   \              66742073    
   \   0000008C   696465206F66       DC8 105, 100, 101, 32, 111, 102, 32, 98, 117, 116
   \              20627574    
   \   00000096   746F6E20666F       DC8 116, 111, 110, 32, 102, 111, 114, 32, 103, 101
   \              72206765    
   \   000000A0   6E6572616C20       DC8 110, 101, 114, 97, 108, 32, 100, 114, 105, 118
   \              64726976    
   \   000000AA   65207265636F       DC8 101, 32, 114, 101, 99, 111, 114, 100, 105, 110
   \              7264696E    
   \   000000B4   672E20526967       DC8 103, 46, 32, 82, 105, 103, 104, 116, 32, 115
   \              68742073    
   \   000000BE   696465206F66       DC8 105, 100, 101, 32, 111, 102, 32, 98, 117, 116
   \              20627574    
   \   000000C8   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 103, 103, 108, 101
   \              67676C65    
   \   000000D2   73207265636F       DC8 115, 32, 114, 101, 99, 111, 114, 100, 105, 110
   \              7264696E    
   \   000000DC   6720666F7220       DC8 103, 32, 102, 111, 114, 32, 116, 104, 105, 115
   \              74686973    
   \   000000E6   206D6F64652E       DC8 32, 109, 111, 100, 101, 46, 10, 10, 68, 114
   \              0A0A4472    
   \   000000F0   616720666F72       DC8 97, 103, 32, 102, 111, 114, 32, 108, 97, 117
   \              206C6175    
   \   000000FA   6E63682D656E       DC8 110, 99, 104, 45, 101, 110, 97, 98, 108, 101
   \              61626C65    
   \   00000104   642064726167       DC8 100, 32, 100, 114, 97, 103, 32, 114, 97, 99
   \              20726163    
   \   0000010E   652070657266       DC8 101, 32, 112, 101, 114, 102, 111, 114, 109, 97
   \              6F726D61    
   \   00000118   6E6365206D6F       DC8 110, 99, 101, 32, 109, 111, 100, 101, 115, 32
   \              64657320    
   \   00000122   696E636C7564       DC8 105, 110, 99, 108, 117, 100, 105, 110, 103, 32
   \              696E6720    
   \   0000012C   312F386D696C       DC8 49, 47, 56, 109, 105, 108, 101, 44, 32, 49
   \              652C2031    
   \   00000136   303030272C20       DC8 48, 48, 48, 39, 44, 32, 97, 110, 100, 32
   \              616E6420    
   \   00000140   312F346D696C       DC8 49, 47, 52, 109, 105, 108, 101, 46, 10, 10
   \              652E0A0A    
   \   0000014A   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   00000154   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   0000015E   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   00000168   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   00000172   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   0000017C   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   00000186   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   00000190   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   0000019A   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   000001A4   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   000001AE   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   000001B8   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   000001C2   6800               DC8 104, 0
    392          "Lap/Race to record data on closed circuit racetrack.\
    393          \n\nAuto-X/Rally for launch-enabled separate start/finish recording.\
    394          \n\nDrive - touch left side of button for general drive recording. Right side of button toggles recording for this mode.\
    395          \n\nDrag for launch-enabled drag race performance modes including 1/8mile, 1000', and 1/4mile.\
    396          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    397          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    398          

   \                                 In section .text, align 4, keep-with-next
    399          const char RACE_SETUP_INFO[] =
   \                     RACE_SETUP_INFO:
   \   00000000                      ; Initializer data, 504 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 116, 111, 32
   \              20746F20    
   \   0000000A   73656C656374       DC8 115, 101, 108, 101, 99, 116, 32, 111, 114, 32
   \              206F7220    
   \   00000014   637265617465       DC8 99, 114, 101, 97, 116, 101, 32, 100, 114, 105
   \              20647269    
   \   0000001E   7665722E0A0A       DC8 118, 101, 114, 46, 10, 10, 86, 101, 104, 105
   \              56656869    
   \   00000028   636C6520746F       DC8 99, 108, 101, 32, 116, 111, 32, 115, 101, 108
   \              2073656C    
   \   00000032   656374206F72       DC8 101, 99, 116, 32, 111, 114, 32, 99, 114, 101
   \              20637265    
   \   0000003C   617465207665       DC8 97, 116, 101, 32, 118, 101, 104, 105, 99, 108
   \              6869636C    
   \   00000046   65206F722065       DC8 101, 32, 111, 114, 32, 101, 100, 105, 116, 32
   \              64697420    
   \   00000050   746163682C20       DC8 116, 97, 99, 104, 44, 32, 103, 101, 97, 114
   \              67656172    
   \   0000005A   696E672C2069       DC8 105, 110, 103, 44, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000064   732C20616E64       DC8 115, 44, 32, 97, 110, 100, 32, 99, 97, 109
   \              2063616D    
   \   0000006E   657261207365       DC8 101, 114, 97, 32, 115, 101, 116, 116, 105, 110
   \              7474696E    
   \   00000078   67732E0A0A54       DC8 103, 115, 46, 10, 10, 84, 114, 97, 99, 107
   \              7261636B    
   \   00000082   20746F206D61       DC8 32, 116, 111, 32, 109, 97, 110, 117, 97, 108
   \              6E75616C    
   \   0000008C   6C792073656C       DC8 108, 121, 32, 115, 101, 108, 101, 99, 116, 32
   \              65637420    
   \   00000096   6F7220637265       DC8 111, 114, 32, 99, 114, 101, 97, 116, 101, 32
   \              61746520    
   \   000000A0   747261636B2E       DC8 116, 114, 97, 99, 107, 46, 10, 10, 76, 97
   \              0A0A4C61    
   \   000000AA   70732F517561       DC8 112, 115, 47, 81, 117, 97, 108, 105, 102, 121
   \              6C696679    
   \   000000B4   20746F206368       DC8 32, 116, 111, 32, 99, 104, 111, 111, 115, 101
   \              6F6F7365    
   \   000000BE   204C61707320       DC8 32, 76, 97, 112, 115, 32, 111, 114, 32, 81
   \              6F722051    
   \   000000C8   75616C696679       DC8 117, 97, 108, 105, 102, 121, 105, 110, 103, 32
   \              696E6720    
   \   000000D2   507265646963       DC8 80, 114, 101, 100, 105, 99, 116, 105, 118, 101
   \              74697665    
   \   000000DC   2054696D696E       DC8 32, 84, 105, 109, 105, 110, 103, 32, 77, 111
   \              67204D6F    
   \   000000E6   64652E0A496E       DC8 100, 101, 46, 10, 73, 110, 32, 76, 97, 112
   \              204C6170    
   \   000000F0   204D6F64652C       DC8 32, 77, 111, 100, 101, 44, 32, 108, 97, 112
   \              206C6170    
   \   000000FA   2074696D6520       DC8 32, 116, 105, 109, 101, 32, 105, 115, 32, 99
   \              69732063    
   \   00000104   6F6D70617265       DC8 111, 109, 112, 97, 114, 101, 100, 32, 119, 105
   \              64207769    
   \   0000010E   746820626573       DC8 116, 104, 32, 98, 101, 115, 116, 32, 101, 118
   \              74206576    
   \   00000118   657220617420       DC8 101, 114, 32, 97, 116, 32, 116, 104, 105, 115
   \              74686973    
   \   00000122   20747261636B       DC8 32, 116, 114, 97, 99, 107, 46, 10, 73, 110
   \              2E0A496E    
   \   0000012C   205175616C69       DC8 32, 81, 117, 97, 108, 105, 102, 121, 105, 110
   \              6679696E    
   \   00000136   67204D6F6465       DC8 103, 32, 77, 111, 100, 101, 44, 32, 108, 97
   \              2C206C61    
   \   00000140   702074696D65       DC8 112, 32, 116, 105, 109, 101, 32, 105, 115, 32
   \              20697320    
   \   0000014A   636F6D706172       DC8 99, 111, 109, 112, 97, 114, 101, 100, 32, 119
   \              65642077    
   \   00000154   697468206265       DC8 105, 116, 104, 32, 98, 101, 115, 116, 32, 116
   \              73742074    
   \   0000015E   696D6520696E       DC8 105, 109, 101, 32, 105, 110, 32, 116, 104, 101
   \              20746865    
   \   00000168   206375727265       DC8 32, 99, 117, 114, 114, 101, 110, 116, 32, 115
   \              6E742073    
   \   00000172   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 46, 10, 10, 80
   \              2E0A0A50    
   \   0000017C   726573732052       DC8 114, 101, 115, 115, 32, 82, 101, 100, 32, 66
   \              65642042    
   \   00000186   61636B204275       DC8 97, 99, 107, 32, 66, 117, 116, 116, 111, 110
   \              74746F6E    
   \   00000190   20746F20676F       DC8 32, 116, 111, 32, 103, 111, 32, 117, 112, 32
   \              20757020    
   \   0000019A   6F6E65206D65       DC8 111, 110, 101, 32, 109, 101, 110, 117, 32, 111
   \              6E75206F    
   \   000001A4   7220686F6C64       DC8 114, 32, 104, 111, 108, 100, 32, 102, 111, 114
   \              20666F72    
   \   000001AE   204D61696E20       DC8 32, 77, 97, 105, 110, 32, 77, 101, 110, 117
   \              4D656E75    
   \   000001B8   2E0A0A49636F       DC8 46, 10, 10, 73, 99, 111, 110, 115, 58, 32
   \              6E733A20    
   \   000001C2   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 116, 97
   \              20537461    
   \   000001CC   7475732C2053       DC8 116, 117, 115, 44, 32, 83, 68, 32, 67, 97
   \              44204361    
   \   000001D6   726420537461       DC8 114, 100, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   000001E0   204750532053       DC8 32, 71, 80, 83, 32, 83, 105, 103, 110, 97
   \              69676E61    
   \   000001EA   6C2053747265       DC8 108, 32, 83, 116, 114, 101, 110, 103, 116, 104
   \              6E677468    
   \   000001F4   00000000           DC8 0, 0, 0, 0
    400          "Driver to select or create driver.\
    401          \n\nVehicle to select or create vehicle or edit tach, gearing, inputs, and camera settings.\
    402          \n\nTrack to manually select or create track.\
    403          \n\nLaps/Qualify to choose Laps or Qualifying Predictive Timing Mode.\
    404          \nIn Lap Mode, lap time is compared with best ever at this track.\
    405          \nIn Qualifying Mode, lap time is compared with best time in the current session.\
    406          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    407          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    408          

   \                                 In section .text, align 4, keep-with-next
    409          const char SYSTEMS_SETUP_INFO[] =
   \                     SYSTEMS_SETUP_INFO:
   \   00000000                      ; Initializer data, 484 bytes
   \   00000000   446973706C61       DC8 68, 105, 115, 112, 108, 97, 121, 32, 116, 111
   \              7920746F    
   \   0000000A   2061646A7573       DC8 32, 97, 100, 106, 117, 115, 116, 32, 98, 97
   \              74206261    
   \   00000014   636B6C696768       DC8 99, 107, 108, 105, 103, 104, 116, 32, 97, 110
   \              7420616E    
   \   0000001E   64204C454420       DC8 100, 32, 76, 69, 68, 32, 105, 110, 116, 101
   \              696E7465    
   \   00000028   6E736974792E       DC8 110, 115, 105, 116, 121, 46, 10, 10, 85, 110
   \              0A0A556E    
   \   00000032   69747320746F       DC8 105, 116, 115, 32, 116, 111, 32, 115, 101, 108
   \              2073656C    
   \   0000003C   656374206265       DC8 101, 99, 116, 32, 98, 101, 116, 119, 101, 101
   \              74776565    
   \   00000046   6E2055532061       DC8 110, 32, 85, 83, 32, 97, 110, 100, 32, 77
   \              6E64204D    
   \   00000050   657472696320       DC8 101, 116, 114, 105, 99, 32, 117, 110, 105, 116
   \              756E6974    
   \   0000005A   732E0A0A5469       DC8 115, 46, 10, 10, 84, 105, 109, 101, 32, 116
   \              6D652074    
   \   00000064   6F2073656C65       DC8 111, 32, 115, 101, 108, 101, 99, 116, 32, 84
   \              63742054    
   \   0000006E   696D65205A6F       DC8 105, 109, 101, 32, 90, 111, 110, 101, 44, 32
   \              6E652C20    
   \   00000078   4461796C6967       DC8 68, 97, 121, 108, 105, 103, 104, 116, 32, 83
   \              68742053    
   \   00000082   6176696E6773       DC8 97, 118, 105, 110, 103, 115, 32, 84, 105, 109
   \              2054696D    
   \   0000008C   652C20616E64       DC8 101, 44, 32, 97, 110, 100, 32, 71, 80, 83
   \              20475053    
   \   00000096   2053696D756C       DC8 32, 83, 105, 109, 117, 108, 97, 116, 105, 111
   \              6174696F    
   \   000000A0   6E2E0A0A5374       DC8 110, 46, 10, 10, 83, 116, 97, 114, 116, 117
   \              61727475    
   \   000000AA   7020746F2045       DC8 112, 32, 116, 111, 32, 69, 110, 97, 98, 108
   \              6E61626C    
   \   000000B4   65204175746F       DC8 101, 32, 65, 117, 116, 111, 83, 116, 97, 114
   \              53746172    
   \   000000BE   7420616E6420       DC8 116, 32, 97, 110, 100, 32, 65, 117, 116, 111
   \              4175746F    
   \   000000C8   4F6E20666561       DC8 79, 110, 32, 102, 101, 97, 116, 117, 114, 101
   \              74757265    
   \   000000D2   732E0A0A5769       DC8 115, 46, 10, 10, 87, 105, 70, 105, 47, 83
   \              46692F53    
   \   000000DC   4420746F206D       DC8 68, 32, 116, 111, 32, 109, 97, 110, 97, 103
   \              616E6167    
   \   000000E6   652053442063       DC8 101, 32, 83, 68, 32, 99, 97, 114, 100, 32
   \              61726420    
   \   000000F0   616E6420636F       DC8 97, 110, 100, 32, 99, 111, 110, 102, 105, 103
   \              6E666967    
   \   000000FA   757265207769       DC8 117, 114, 101, 32, 119, 105, 114, 101, 108, 101
   \              72656C65    
   \   00000104   737320646F77       DC8 115, 115, 32, 100, 111, 119, 110, 108, 111, 97
   \              6E6C6F61    
   \   0000010E   642066656174       DC8 100, 32, 102, 101, 97, 116, 117, 114, 101, 46
   \              7572652E    
   \   00000118   0A0A50726564       DC8 10, 10, 80, 114, 101, 100, 105, 99, 116, 105
   \              69637469    
   \   00000122   766520477261       DC8 118, 101, 32, 71, 114, 97, 112, 104, 32, 83
   \              70682053    
   \   0000012C   63616C652074       DC8 99, 97, 108, 101, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000136   74207363616C       DC8 116, 32, 115, 99, 97, 108, 101, 32, 111, 102
   \              65206F66    
   \   00000140   205072656469       DC8 32, 80, 114, 101, 100, 105, 99, 116, 105, 118
   \              63746976    
   \   0000014A   65204C617020       DC8 101, 32, 76, 97, 112, 32, 84, 105, 109, 101
   \              54696D65    
   \   00000154   72206F6E2074       DC8 114, 32, 111, 110, 32, 116, 105, 109, 105, 110
   \              696D696E    
   \   0000015E   672073637265       DC8 103, 32, 115, 99, 114, 101, 101, 110, 115, 46
   \              656E732E    
   \   00000168   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   00000172   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   0000017C   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   00000186   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   00000190   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   0000019A   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   000001A4   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   000001AE   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   000001B8   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   000001C2   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   000001CC   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   000001D6   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   000001E0   67746800           DC8 103, 116, 104, 0
    410          "Display to adjust backlight and LED intensity.\
    411          \n\nUnits to select between US and Metric units.\
    412          \n\nTime to select Time Zone, Daylight Savings Time, and GPS Simulation.\
    413          \n\nStartup to Enable AutoStart and AutoOn features.\
    414          \n\nWiFi/SD to manage SD card and configure wireless download feature.\
    415          \n\nPredictive Graph Scale to set scale of Predictive Lap Timer on timing screens.\
    416          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    417          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    418          

   \                                 In section .text, align 4, keep-with-next
    419          const char REVIEW_SESSIONS_INFO[] =
   \                     REVIEW_SESSIONS_INFO:
   \   00000000                      ; Initializer data, 600 bytes
   \   00000000   53686F777320       DC8 83, 104, 111, 119, 115, 32, 100, 97, 116, 101
   \              64617465    
   \   0000000A   207468617420       DC8 32, 116, 104, 97, 116, 32, 115, 101, 115, 115
   \              73657373    
   \   00000014   696F6E207761       DC8 105, 111, 110, 32, 119, 97, 115, 32, 114, 101
   \              73207265    
   \   0000001E   636F72646564       DC8 99, 111, 114, 100, 101, 100, 44, 32, 115, 101
   \              2C207365    
   \   00000028   7373696F6E20       DC8 115, 115, 105, 111, 110, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   6572206F6E20       DC8 101, 114, 32, 111, 110, 32, 116, 104, 97, 116
   \              74686174    
   \   0000003C   206461792C20       DC8 32, 100, 97, 121, 44, 32, 97, 110, 100, 32
   \              616E6420    
   \   00000046   747261636B2E       DC8 116, 114, 97, 99, 107, 46, 10, 10, 84, 111
   \              0A0A546F    
   \   00000050   75636820616E       DC8 117, 99, 104, 32, 97, 110, 121, 32, 115, 101
   \              79207365    
   \   0000005A   7373696F6E20       DC8 115, 115, 105, 111, 110, 32, 111, 110, 32, 108
   \              6F6E206C    
   \   00000064   69737420746F       DC8 105, 115, 116, 32, 116, 111, 32, 115, 101, 108
   \              2073656C    
   \   0000006E   6563742E0A54       DC8 101, 99, 116, 46, 10, 84, 111, 117, 99, 104
   \              6F756368    
   \   00000078   20636F6C756D       DC8 32, 99, 111, 108, 117, 109, 110, 32, 104, 101
   \              6E206865    
   \   00000082   6164696E6773       DC8 97, 100, 105, 110, 103, 115, 32, 116, 111, 32
   \              20746F20    
   \   0000008C   736F72742E0A       DC8 115, 111, 114, 116, 46, 10, 84, 111, 117, 99
   \              546F7563    
   \   00000096   68207363726F       DC8 104, 32, 115, 99, 114, 111, 108, 108, 98, 97
   \              6C6C6261    
   \   000000A0   7220746F2073       DC8 114, 32, 116, 111, 32, 115, 101, 101, 32, 97
   \              65652061    
   \   000000AA   64646974696F       DC8 100, 100, 105, 116, 105, 111, 110, 97, 108, 32
   \              6E616C20    
   \   000000B4   6C6170732E0A       DC8 108, 97, 112, 115, 46, 10, 10, 84, 111, 117
   \              0A546F75    
   \   000000BE   6368206C6172       DC8 99, 104, 32, 108, 97, 114, 103, 101, 32, 98
   \              67652062    
   \   000000C8   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 111, 110, 32, 108
   \              6F6E206C    
   \   000000D2   6F776572206C       DC8 111, 119, 101, 114, 32, 108, 101, 102, 116, 32
   \              65667420    
   \   000000DC   746F2073686F       DC8 116, 111, 32, 115, 104, 111, 119, 32, 66, 101
   \              77204265    
   \   000000E6   73742054696D       DC8 115, 116, 32, 84, 105, 109, 101, 44, 32, 68
   \              652C2044    
   \   000000F0   72697665722C       DC8 114, 105, 118, 101, 114, 44, 32, 97, 110, 100
   \              20616E64    
   \   000000FA   205665686963       DC8 32, 86, 101, 104, 105, 99, 108, 101, 46, 10
   \              6C652E0A    
   \   00000104   0A546F756368       DC8 10, 84, 111, 117, 99, 104, 32, 115, 101, 99
   \              20736563    
   \   0000010E   6F6E64206275       DC8 111, 110, 100, 32, 98, 117, 116, 116, 111, 110
   \              74746F6E    
   \   00000118   206F6E20626F       DC8 32, 111, 110, 32, 98, 111, 116, 116, 111, 109
   \              74746F6D    
   \   00000122   20746F207368       DC8 32, 116, 111, 32, 115, 104, 111, 119, 32, 115
   \              6F772073    
   \   0000012C   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 115, 32, 114, 101
   \              73207265    
   \   00000136   636F72646564       DC8 99, 111, 114, 100, 101, 100, 32, 105, 110, 32
   \              20696E20    
   \   00000140   526163652C20       DC8 82, 97, 99, 101, 44, 32, 65, 117, 116, 111
   \              4175746F    
   \   0000014A   582C20447269       DC8 88, 44, 32, 68, 114, 105, 118, 101, 44, 32
   \              76652C20    
   \   00000154   616E64204472       DC8 97, 110, 100, 32, 68, 114, 97, 103, 32, 82
   \              61672052    
   \   0000015E   616365206D6F       DC8 97, 99, 101, 32, 109, 111, 100, 101, 115, 46
   \              6465732E    
   \   00000168   0A0A55736520       DC8 10, 10, 85, 115, 101, 32, 68, 101, 116, 97
   \              44657461    
   \   00000172   696C7320746F       DC8 105, 108, 115, 32, 116, 111, 32, 115, 101, 101
   \              20736565    
   \   0000017C   207365737369       DC8 32, 115, 101, 115, 115, 105, 111, 110, 32, 108
   \              6F6E206C    
   \   00000186   61702074696D       DC8 97, 112, 32, 116, 105, 109, 101, 115, 32, 97
   \              65732061    
   \   00000190   6E64206F7468       DC8 110, 100, 32, 111, 116, 104, 101, 114, 32, 115
   \              65722073    
   \   0000019A   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 32, 105, 110, 102
   \              20696E66    
   \   000001A4   6F726D617469       DC8 111, 114, 109, 97, 116, 105, 111, 110, 46, 10
   \              6F6E2E0A    
   \   000001AE   0A44656C6574       DC8 10, 68, 101, 108, 101, 116, 101, 32, 119, 105
   \              65207769    
   \   000001B8   6C6C20657261       DC8 108, 108, 32, 101, 114, 97, 115, 101, 32, 99
   \              73652063    
   \   000001C2   757272656E74       DC8 117, 114, 114, 101, 110, 116, 108, 121, 32, 115
   \              6C792073    
   \   000001CC   656C65637465       DC8 101, 108, 101, 99, 116, 101, 100, 32, 115, 101
   \              64207365    
   \   000001D6   7373696F6E2E       DC8 115, 115, 105, 111, 110, 46, 10, 10, 80, 114
   \              0A0A5072    
   \   000001E0   657373205265       DC8 101, 115, 115, 32, 82, 101, 100, 32, 66, 97
   \              64204261    
   \   000001EA   636B20427574       DC8 99, 107, 32, 66, 117, 116, 116, 111, 110, 32
   \              746F6E20    
   \   000001F4   746F20676F20       DC8 116, 111, 32, 103, 111, 32, 117, 112, 32, 111
   \              7570206F    
   \   000001FE   6E65206D656E       DC8 110, 101, 32, 109, 101, 110, 117, 32, 111, 114
   \              75206F72    
   \   00000208   20686F6C6420       DC8 32, 104, 111, 108, 100, 32, 102, 111, 114, 32
   \              666F7220    
   \   00000212   4D61696E204D       DC8 77, 97, 105, 110, 32, 77, 101, 110, 117, 46
   \              656E752E    
   \   0000021C   0A0A49636F6E       DC8 10, 10, 73, 99, 111, 110, 115, 58, 32, 67
   \              733A2043    
   \   00000226   616D65726120       DC8 97, 109, 101, 114, 97, 32, 83, 116, 97, 116
   \              53746174    
   \   00000230   75732C205344       DC8 117, 115, 44, 32, 83, 68, 32, 67, 97, 114
   \              20436172    
   \   0000023A   642053746174       DC8 100, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   00000244   475053205369       DC8 71, 80, 83, 32, 83, 105, 103, 110, 97, 108
   \              676E616C    
   \   0000024E   20537472656E       DC8 32, 83, 116, 114, 101, 110, 103, 116, 104, 0
   \              67746800    
    420          "Shows date that session was recorded, session number on that day, and track.\
    421          \n\nTouch any session on list to select.\
    422          \nTouch column headings to sort.\
    423          \nTouch scrollbar to see additional laps.\
    424          \n\nTouch large button on lower left to show Best Time, Driver, and Vehicle.\
    425          \n\nTouch second button on bottom to show sessions recorded in Race, AutoX, Drive, and Drag Race modes.\
    426          \n\nUse Details to see session lap times and other session information.\
    427          \n\nDelete will erase currently selected session.\
    428          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    429          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    430          

   \                                 In section .text, align 4, keep-with-next
    431          const char SESSION_DETAILS_INFO[] =
   \                     SESSION_DETAILS_INFO:
   \   00000000                      ; Initializer data, 832 bytes
   \   00000000   546F75636820       DC8 84, 111, 117, 99, 104, 32, 98, 108, 117, 101
   \              626C7565    
   \   0000000A   20627574746F       DC8 32, 98, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   00000014   207374657020       DC8 32, 115, 116, 101, 112, 32, 116, 104, 114, 111
   \              7468726F    
   \   0000001E   756768207365       DC8 117, 103, 104, 32, 115, 101, 115, 115, 105, 111
   \              7373696F    
   \   00000028   6E2064657461       DC8 110, 32, 100, 101, 116, 97, 105, 108, 32, 112
   \              696C2070    
   \   00000032   616765732E0A       DC8 97, 103, 101, 115, 46, 10, 10, 84, 73, 77
   \              0A54494D    
   \   0000003C   494E470A466F       DC8 73, 78, 71, 10, 70, 111, 114, 32, 82, 97
   \              72205261    
   \   00000046   6365206D6F64       DC8 99, 101, 32, 109, 111, 100, 101, 44, 32, 115
   \              652C2073    
   \   00000050   686F7773206C       DC8 104, 111, 119, 115, 32, 108, 97, 112, 32, 110
   \              6170206E    
   \   0000005A   756D6265722C       DC8 117, 109, 98, 101, 114, 44, 32, 108, 97, 112
   \              206C6170    
   \   00000064   2074696D6520       DC8 32, 116, 105, 109, 101, 32, 105, 110, 32, 108
   \              696E206C    
   \   0000006E   69737420616E       DC8 105, 115, 116, 32, 97, 110, 100, 32, 115, 101
   \              64207365    
   \   00000078   7373696F6E20       DC8 115, 115, 105, 111, 110, 32, 105, 110, 102, 111
   \              696E666F    
   \   00000082   726D6174696F       DC8 114, 109, 97, 116, 105, 111, 110, 32, 111, 110
   \              6E206F6E    
   \   0000008C   207269676874       DC8 32, 114, 105, 103, 104, 116, 46, 32, 66, 101
   \              2E204265    
   \   00000096   7374204C6170       DC8 115, 116, 32, 76, 97, 112, 32, 115, 104, 111
   \              2073686F    
   \   000000A0   776E20696E20       DC8 119, 110, 32, 105, 110, 32, 103, 114, 101, 101
   \              67726565    
   \   000000AA   6E2E0A466F72       DC8 110, 46, 10, 70, 111, 114, 32, 68, 114, 97
   \              20447261    
   \   000000B4   67206D6F6465       DC8 103, 32, 109, 111, 100, 101, 44, 32, 115, 104
   \              2C207368    
   \   000000BE   6F7773207469       DC8 111, 119, 115, 32, 116, 105, 109, 101, 32, 115
   \              6D652073    
   \   000000C8   6C69702E0A0A       DC8 108, 105, 112, 46, 10, 10, 84, 111, 117, 99
   \              546F7563    
   \   000000D2   6820636F6C75       DC8 104, 32, 99, 111, 108, 117, 109, 110, 32, 104
   \              6D6E2068    
   \   000000DC   656164696E67       DC8 101, 97, 100, 105, 110, 103, 115, 32, 116, 111
   \              7320746F    
   \   000000E6   20736F72742E       DC8 32, 115, 111, 114, 116, 46, 10, 84, 111, 117
   \              0A546F75    
   \   000000F0   636820736372       DC8 99, 104, 32, 115, 99, 114, 111, 108, 108, 98
   \              6F6C6C62    
   \   000000FA   617220746F20       DC8 97, 114, 32, 116, 111, 32, 115, 101, 101, 32
   \              73656520    
   \   00000104   616464697469       DC8 97, 100, 100, 105, 116, 105, 111, 110, 97, 108
   \              6F6E616C    
   \   0000010E   206C6170732E       DC8 32, 108, 97, 112, 115, 46, 10, 10, 71, 69
   \              0A0A4745    
   \   00000118   4E4552414C0A       DC8 78, 69, 82, 65, 76, 10, 83, 104, 111, 119
   \              53686F77    
   \   00000122   732073657373       DC8 115, 32, 115, 101, 115, 115, 105, 111, 110, 32
   \              696F6E20    
   \   0000012C   647572617469       DC8 100, 117, 114, 97, 116, 105, 111, 110, 32, 105
   \              6F6E2069    
   \   00000136   6E206D696E75       DC8 110, 32, 109, 105, 110, 117, 116, 101, 115, 44
   \              7465732C    
   \   00000140   206469737461       DC8 32, 100, 105, 115, 116, 97, 110, 99, 101, 32
   \              6E636520    
   \   0000014A   74726176656C       DC8 116, 114, 97, 118, 101, 108, 101, 100, 32, 105
   \              65642069    
   \   00000154   6E2073657373       DC8 110, 32, 115, 101, 115, 115, 105, 111, 110, 44
   \              696F6E2C    
   \   0000015E   2072616E6765       DC8 32, 114, 97, 110, 103, 101, 32, 111, 102, 32
   \              206F6620    
   \   00000168   736174656C6C       DC8 115, 97, 116, 101, 108, 108, 105, 116, 101, 115
   \              69746573    
   \   00000172   207365656E20       DC8 32, 115, 101, 101, 110, 32, 100, 117, 114, 105
   \              64757269    
   \   0000017C   6E6720736573       DC8 110, 103, 32, 115, 101, 115, 115, 105, 111, 110
   \              73696F6E    
   \   00000186   2C20616E6420       DC8 44, 32, 97, 110, 100, 32, 68, 105, 108, 117
   \              44696C75    
   \   00000190   74696F6E206F       DC8 116, 105, 111, 110, 32, 111, 102, 32, 80, 114
   \              66205072    
   \   0000019A   65636973696F       DC8 101, 99, 105, 115, 105, 111, 110, 32, 105, 110
   \              6E20696E    
   \   000001A4   646963617469       DC8 100, 105, 99, 97, 116, 105, 110, 103, 32, 113
   \              6E672071    
   \   000001AE   75616C697479       DC8 117, 97, 108, 105, 116, 121, 32, 111, 102, 32
   \              206F6620    
   \   000001B8   736174656C6C       DC8 115, 97, 116, 101, 108, 108, 105, 116, 101, 115
   \              69746573    
   \   000001C2   20617661696C       DC8 32, 97, 118, 97, 105, 108, 97, 98, 108, 101
   \              61626C65    
   \   000001CC   2E20466F7220       DC8 46, 32, 70, 111, 114, 32, 68, 79, 80, 32
   \              444F5020    
   \   000001D6   6C6F77657220       DC8 108, 111, 119, 101, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   000001E0   657273206172       DC8 101, 114, 115, 32, 97, 114, 101, 32, 98, 101
   \              65206265    
   \   000001EA   747465722E0A       DC8 116, 116, 101, 114, 46, 10, 10, 80, 69, 82
   \              0A504552    
   \   000001F4   464F524D414E       DC8 70, 79, 82, 77, 65, 78, 67, 69, 10, 83
   \              43450A53    
   \   000001FE   686F7773204D       DC8 104, 111, 119, 115, 32, 77, 97, 120, 32, 80
   \              61782050    
   \   00000208   6572666F726D       DC8 101, 114, 102, 111, 114, 109, 97, 110, 99, 101
   \              616E6365    
   \   00000212   2056616C7565       DC8 32, 86, 97, 108, 117, 101, 115, 32, 115, 117
   \              73207375    
   \   0000021C   636820617320       DC8 99, 104, 32, 97, 115, 32, 115, 112, 101, 101
   \              73706565    
   \   00000226   6420616E6420       DC8 100, 32, 97, 110, 100, 32, 97, 99, 99, 101
   \              61636365    
   \   00000230   6C65726F6D65       DC8 108, 101, 114, 111, 109, 101, 116, 101, 114, 32
   \              74657220    
   \   0000023A   47732E0A0A49       DC8 71, 115, 46, 10, 10, 73, 78, 80, 85, 84
   \              4E505554    
   \   00000244   530A53686F77       DC8 83, 10, 83, 104, 111, 119, 115, 32, 116, 97
   \              73207461    
   \   0000024E   6368206F7665       DC8 99, 104, 32, 111, 118, 101, 114, 114, 101, 118
   \              72726576    
   \   00000258   732C20616E64       DC8 115, 44, 32, 97, 110, 100, 32, 114, 97, 110
   \              2072616E    
   \   00000262   6765206F6620       DC8 103, 101, 32, 111, 102, 32, 97, 108, 108, 32
   \              616C6C20    
   \   0000026C   656E61626C65       DC8 101, 110, 97, 98, 108, 101, 100, 32, 97, 110
   \              6420616E    
   \   00000276   616C6F672069       DC8 97, 108, 111, 103, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000280   732E0A0A434F       DC8 115, 46, 10, 10, 67, 79, 78, 70, 73, 71
   \              4E464947    
   \   0000028A   0A53686F7773       DC8 10, 83, 104, 111, 119, 115, 32, 119, 104, 105
   \              20776869    
   \   00000294   636820616E61       DC8 99, 104, 32, 97, 110, 97, 108, 111, 103, 115
   \              6C6F6773    
   \   0000029E   2C2064696769       DC8 44, 32, 100, 105, 103, 105, 116, 97, 108, 115
   \              74616C73    
   \   000002A8   2C20616E6420       DC8 44, 32, 97, 110, 100, 32, 99, 97, 109, 101
   \              63616D65    
   \   000002B2   726173206172       DC8 114, 97, 115, 32, 97, 114, 101, 32, 101, 110
   \              6520656E    
   \   000002BC   61626C65642E       DC8 97, 98, 108, 101, 100, 46, 10, 10, 80, 114
   \              0A0A5072    
   \   000002C6   657373205265       DC8 101, 115, 115, 32, 82, 101, 100, 32, 66, 97
   \              64204261    
   \   000002D0   636B20427574       DC8 99, 107, 32, 66, 117, 116, 116, 111, 110, 32
   \              746F6E20    
   \   000002DA   746F20676F20       DC8 116, 111, 32, 103, 111, 32, 117, 112, 32, 111
   \              7570206F    
   \   000002E4   6E65206D656E       DC8 110, 101, 32, 109, 101, 110, 117, 32, 111, 114
   \              75206F72    
   \   000002EE   20686F6C6420       DC8 32, 104, 111, 108, 100, 32, 102, 111, 114, 32
   \              666F7220    
   \   000002F8   4D61696E204D       DC8 77, 97, 105, 110, 32, 77, 101, 110, 117, 46
   \              656E752E    
   \   00000302   0A0A49636F6E       DC8 10, 10, 73, 99, 111, 110, 115, 58, 32, 67
   \              733A2043    
   \   0000030C   616D65726120       DC8 97, 109, 101, 114, 97, 32, 83, 116, 97, 116
   \              53746174    
   \   00000316   75732C205344       DC8 117, 115, 44, 32, 83, 68, 32, 67, 97, 114
   \              20436172    
   \   00000320   642053746174       DC8 100, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   0000032A   475053205369       DC8 71, 80, 83, 32, 83, 105, 103, 110, 97, 108
   \              676E616C    
   \   00000334   20537472656E       DC8 32, 83, 116, 114, 101, 110, 103, 116, 104, 0
   \              67746800    
   \   0000033E   0000               DC8 0, 0
    432          "Touch blue button to step through session detail pages.\
    433          \n\nTIMING\nFor Race mode, shows lap number, lap time in list and session information on right. \
    434          Best Lap shown in green.\
    435          \nFor Drag mode, shows time slip.\
    436          \n\nTouch column headings to sort.\
    437          \nTouch scrollbar to see additional laps.\
    438          \n\nGENERAL\nShows session duration in minutes, distance traveled in session, range of satellites \
    439          seen during session, and Dilution of Precision indicating quality of satellites available. For DOP \
    440          lower numbers are better.\
    441          \n\nPERFORMANCE\nShows Max Performance Values such as speed and accelerometer Gs.\
    442          \n\nINPUTS\nShows tach overrevs, and range of all enabled analog inputs.\
    443          \n\nCONFIG\nShows which analogs, digitals, and cameras are enabled.\
    444          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    445          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    446          

   \                                 In section .text, align 4, keep-with-next
    447          const char SELECT_DRIVER_INFO[] =
   \                     SELECT_DRIVER_INFO:
   \   00000000                      ; Initializer data, 300 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 116
   \              73742074    
   \   0000000A   6F2073656C65       DC8 111, 32, 115, 101, 108, 101, 99, 116, 32, 100
   \              63742064    
   \   00000014   72697665722E       DC8 114, 105, 118, 101, 114, 46, 32, 69, 120, 105
   \              20457869    
   \   0000001E   742073637265       DC8 116, 32, 115, 99, 114, 101, 101, 110, 32, 119
   \              656E2077    
   \   00000028   68656E20636F       DC8 104, 101, 110, 32, 99, 111, 109, 112, 108, 101
   \              6D706C65    
   \   00000032   74652E0A0A4E       DC8 116, 101, 46, 10, 10, 78, 101, 119, 32, 68
   \              65772044    
   \   0000003C   726976657220       DC8 114, 105, 118, 101, 114, 32, 116, 111, 32, 99
   \              746F2063    
   \   00000046   726561746520       DC8 114, 101, 97, 116, 101, 32, 97, 32, 100, 114
   \              61206472    
   \   00000050   697665722E0A       DC8 105, 118, 101, 114, 46, 10, 10, 69, 100, 105
   \              0A456469    
   \   0000005A   74204E616D65       DC8 116, 32, 78, 97, 109, 101, 32, 116, 111, 32
   \              20746F20    
   \   00000064   6368616E6765       DC8 99, 104, 97, 110, 103, 101, 32, 115, 101, 108
   \              2073656C    
   \   0000006E   656374656420       DC8 101, 99, 116, 101, 100, 32, 100, 114, 105, 118
   \              64726976    
   \   00000078   65722773206E       DC8 101, 114, 39, 115, 32, 110, 97, 109, 101, 46
   \              616D652E    
   \   00000082   0A0A44656C65       DC8 10, 10, 68, 101, 108, 101, 116, 101, 32, 68
   \              74652044    
   \   0000008C   726976657220       DC8 114, 105, 118, 101, 114, 32, 116, 111, 32, 114
   \              746F2072    
   \   00000096   656D6F766520       DC8 101, 109, 111, 118, 101, 32, 100, 114, 105, 118
   \              64726976    
   \   000000A0   65722066726F       DC8 101, 114, 32, 102, 114, 111, 109, 32, 108, 105
   \              6D206C69    
   \   000000AA   73742E0A0A50       DC8 115, 116, 46, 10, 10, 80, 114, 101, 115, 115
   \              72657373    
   \   000000B4   205265642042       DC8 32, 82, 101, 100, 32, 66, 97, 99, 107, 32
   \              61636B20    
   \   000000BE   427574746F6E       DC8 66, 117, 116, 116, 111, 110, 32, 116, 111, 32
   \              20746F20    
   \   000000C8   676F20757020       DC8 103, 111, 32, 117, 112, 32, 111, 110, 101, 32
   \              6F6E6520    
   \   000000D2   6D656E75206F       DC8 109, 101, 110, 117, 32, 111, 114, 32, 104, 111
   \              7220686F    
   \   000000DC   6C6420666F72       DC8 108, 100, 32, 102, 111, 114, 32, 77, 97, 105
   \              204D6169    
   \   000000E6   6E204D656E75       DC8 110, 32, 77, 101, 110, 117, 46, 10, 10, 73
   \              2E0A0A49    
   \   000000F0   636F6E733A20       DC8 99, 111, 110, 115, 58, 32, 67, 97, 109, 101
   \              43616D65    
   \   000000FA   726120537461       DC8 114, 97, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   00000104   205344204361       DC8 32, 83, 68, 32, 67, 97, 114, 100, 32, 83
   \              72642053    
   \   0000010E   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 71, 80, 83
   \              20475053    
   \   00000118   205369676E61       DC8 32, 83, 105, 103, 110, 97, 108, 32, 83, 116
   \              6C205374    
   \   00000122   72656E677468       DC8 114, 101, 110, 103, 116, 104, 0, 0, 0, 0
   \              00000000    
    448          "Use list to select driver. Exit screen when complete.\
    449          \n\nNew Driver to create a driver.\
    450          \n\nEdit Name to change selected driver's name.\
    451          \n\nDelete Driver to remove driver from list.\
    452          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    453          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    454          

   \                                 In section .text, align 4, keep-with-next
    455          const char SELECT_VEHICLE_INFO[] =
   \                     SELECT_VEHICLE_INFO:
   \   00000000                      ; Initializer data, 368 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 116
   \              73742074    
   \   0000000A   6F2073656C65       DC8 111, 32, 115, 101, 108, 101, 99, 116, 32, 118
   \              63742076    
   \   00000014   656869636C65       DC8 101, 104, 105, 99, 108, 101, 46, 32, 69, 120
   \              2E204578    
   \   0000001E   697420736372       DC8 105, 116, 32, 115, 99, 114, 101, 101, 110, 32
   \              65656E20    
   \   00000028   7768656E2063       DC8 119, 104, 101, 110, 32, 99, 111, 109, 112, 108
   \              6F6D706C    
   \   00000032   6574652E0A0A       DC8 101, 116, 101, 46, 10, 10, 86, 101, 104, 105
   \              56656869    
   \   0000003C   636C65205365       DC8 99, 108, 101, 32, 83, 101, 116, 116, 105, 110
   \              7474696E    
   \   00000046   677320746F20       DC8 103, 115, 32, 116, 111, 32, 99, 104, 97, 110
   \              6368616E    
   \   00000050   676520746163       DC8 103, 101, 32, 116, 97, 99, 104, 44, 32, 105
   \              682C2069    
   \   0000005A   6E707574732C       DC8 110, 112, 117, 116, 115, 44, 32, 99, 97, 109
   \              2063616D    
   \   00000064   6572612C2067       DC8 101, 114, 97, 44, 32, 103, 101, 97, 114, 105
   \              65617269    
   \   0000006E   6E672C206574       DC8 110, 103, 44, 32, 101, 116, 99, 46, 10, 10
   \              632E0A0A    
   \   00000078   4E6577205665       DC8 78, 101, 119, 32, 86, 101, 104, 105, 99, 108
   \              6869636C    
   \   00000082   6520746F2063       DC8 101, 32, 116, 111, 32, 99, 114, 101, 97, 116
   \              72656174    
   \   0000008C   652061207665       DC8 101, 32, 97, 32, 118, 101, 104, 105, 99, 108
   \              6869636C    
   \   00000096   652E0A0A4564       DC8 101, 46, 10, 10, 69, 100, 105, 116, 32, 78
   \              6974204E    
   \   000000A0   616D6520746F       DC8 97, 109, 101, 32, 116, 111, 32, 99, 104, 97
   \              20636861    
   \   000000AA   6E6765207365       DC8 110, 103, 101, 32, 115, 101, 108, 101, 99, 116
   \              6C656374    
   \   000000B4   656420766568       DC8 101, 100, 32, 118, 101, 104, 105, 99, 108, 101
   \              69636C65    
   \   000000BE   2773206E616D       DC8 39, 115, 32, 110, 97, 109, 101, 46, 10, 10
   \              652E0A0A    
   \   000000C8   44656C657465       DC8 68, 101, 108, 101, 116, 101, 32, 86, 101, 104
   \              20566568    
   \   000000D2   69636C652074       DC8 105, 99, 108, 101, 32, 116, 111, 32, 114, 101
   \              6F207265    
   \   000000DC   6D6F76652076       DC8 109, 111, 118, 101, 32, 118, 101, 104, 105, 99
   \              65686963    
   \   000000E6   6C652066726F       DC8 108, 101, 32, 102, 114, 111, 109, 32, 108, 105
   \              6D206C69    
   \   000000F0   73742E0A0A50       DC8 115, 116, 46, 10, 10, 80, 114, 101, 115, 115
   \              72657373    
   \   000000FA   205265642042       DC8 32, 82, 101, 100, 32, 66, 97, 99, 107, 32
   \              61636B20    
   \   00000104   427574746F6E       DC8 66, 117, 116, 116, 111, 110, 32, 116, 111, 32
   \              20746F20    
   \   0000010E   676F20757020       DC8 103, 111, 32, 117, 112, 32, 111, 110, 101, 32
   \              6F6E6520    
   \   00000118   6D656E75206F       DC8 109, 101, 110, 117, 32, 111, 114, 32, 104, 111
   \              7220686F    
   \   00000122   6C6420666F72       DC8 108, 100, 32, 102, 111, 114, 32, 77, 97, 105
   \              204D6169    
   \   0000012C   6E204D656E75       DC8 110, 32, 77, 101, 110, 117, 46, 10, 10, 73
   \              2E0A0A49    
   \   00000136   636F6E733A20       DC8 99, 111, 110, 115, 58, 32, 67, 97, 109, 101
   \              43616D65    
   \   00000140   726120537461       DC8 114, 97, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   0000014A   205344204361       DC8 32, 83, 68, 32, 67, 97, 114, 100, 32, 83
   \              72642053    
   \   00000154   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 71, 80, 83
   \              20475053    
   \   0000015E   205369676E61       DC8 32, 83, 105, 103, 110, 97, 108, 32, 83, 116
   \              6C205374    
   \   00000168   72656E677468       DC8 114, 101, 110, 103, 116, 104, 0, 0
   \              0000        
    456          "Use list to select vehicle. Exit screen when complete.\
    457          \n\nVehicle Settings to change tach, inputs, camera, gearing, etc.\
    458          \n\nNew Vehicle to create a vehicle.\
    459          \n\nEdit Name to change selected vehicle's name.\
    460          \n\nDelete Vehicle to remove vehicle from list.\
    461          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    462          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    463          
    464          // through the Race Setup menu

   \                                 In section .text, align 4, keep-with-next
    465          const char SELECT_TRACK_INFO[] =
   \                     SELECT_TRACK_INFO:
   \   00000000                      ; Initializer data, 544 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 116
   \              73742074    
   \   0000000A   6F2073656C65       DC8 111, 32, 115, 101, 108, 101, 99, 116, 32, 116
   \              63742074    
   \   00000014   7261636B2E20       DC8 114, 97, 99, 107, 46, 32, 69, 120, 105, 116
   \              45786974    
   \   0000001E   207363726565       DC8 32, 115, 99, 114, 101, 101, 110, 32, 119, 104
   \              6E207768    
   \   00000028   656E20636F6D       DC8 101, 110, 32, 99, 111, 109, 112, 108, 101, 116
   \              706C6574    
   \   00000032   652E0A0A546F       DC8 101, 46, 10, 10, 84, 111, 112, 32, 111, 114
   \              70206F72    
   \   0000003C   616E67652062       DC8 97, 110, 103, 101, 32, 98, 117, 116, 116, 111
   \              7574746F    
   \   00000046   6E2063686F6F       DC8 110, 32, 99, 104, 111, 111, 115, 101, 115, 32
   \              73657320    
   \   00000050   72616E676520       DC8 114, 97, 110, 103, 101, 32, 111, 102, 32, 116
   \              6F662074    
   \   0000005A   7261636B7320       DC8 114, 97, 99, 107, 115, 32, 116, 111, 32, 100
   \              746F2064    
   \   00000064   6973706C6179       DC8 105, 115, 112, 108, 97, 121, 46, 10, 10, 83
   \              2E0A0A53    
   \   0000006E   657474696E67       DC8 101, 116, 116, 105, 110, 103, 115, 32, 116, 111
   \              7320746F    
   \   00000078   206368616E67       DC8 32, 99, 104, 97, 110, 103, 101, 32, 115, 116
   \              65207374    
   \   00000082   6172742F6669       DC8 97, 114, 116, 47, 102, 105, 110, 105, 115, 104
   \              6E697368    
   \   0000008C   2C2074726163       DC8 44, 32, 116, 114, 97, 99, 107, 32, 116, 121
   \              6B207479    
   \   00000096   70652C20636C       DC8 112, 101, 44, 32, 99, 108, 101, 97, 114, 32
   \              65617220    
   \   000000A0   707265646963       DC8 112, 114, 101, 100, 105, 99, 116, 105, 118, 101
   \              74697665    
   \   000000AA   206C61702C20       DC8 32, 108, 97, 112, 44, 32, 97, 110, 100, 32
   \              616E6420    
   \   000000B4   736574206C61       DC8 115, 101, 116, 32, 108, 97, 112, 32, 104, 111
   \              7020686F    
   \   000000BE   6C642074696D       DC8 108, 100, 32, 116, 105, 109, 101, 46, 10, 10
   \              652E0A0A    
   \   000000C8   526967687420       DC8 82, 105, 103, 104, 116, 32, 98, 117, 116, 116
   \              62757474    
   \   000000D2   6F6E206F6E20       DC8 111, 110, 32, 111, 110, 32, 115, 101, 99, 111
   \              7365636F    
   \   000000DC   6E64206C696E       DC8 110, 100, 32, 108, 105, 110, 101, 32, 116, 111
   \              6520746F    
   \   000000E6   2073656C6563       DC8 32, 115, 101, 108, 101, 99, 116, 32, 119, 104
   \              74207768    
   \   000000F0   696368207479       DC8 105, 99, 104, 32, 116, 121, 112, 101, 32, 111
   \              7065206F    
   \   000000FA   662074726163       DC8 102, 32, 116, 114, 97, 99, 107, 115, 32, 116
   \              6B732074    
   \   00000104   6F2073686F77       DC8 111, 32, 115, 104, 111, 119, 44, 32, 82, 111
   \              2C20526F    
   \   0000010E   616420526163       DC8 97, 100, 32, 82, 97, 99, 101, 44, 32, 68
   \              652C2044    
   \   00000118   726976652C20       DC8 114, 105, 118, 101, 44, 32, 65, 117, 116, 111
   \              4175746F    
   \   00000122   582C20616E64       DC8 88, 44, 32, 97, 110, 100, 32, 68, 114, 97
   \              20447261    
   \   0000012C   672E0A0A4E65       DC8 103, 46, 10, 10, 78, 101, 119, 32, 84, 114
   \              77205472    
   \   00000136   61636B20746F       DC8 97, 99, 107, 32, 116, 111, 32, 99, 114, 101
   \              20637265    
   \   00000140   617465206120       DC8 97, 116, 101, 32, 97, 32, 116, 114, 97, 99
   \              74726163    
   \   0000014A   6B2E0A0A4564       DC8 107, 46, 10, 10, 69, 100, 105, 116, 32, 78
   \              6974204E    
   \   00000154   616D6520746F       DC8 97, 109, 101, 32, 116, 111, 32, 99, 104, 97
   \              20636861    
   \   0000015E   6E6765207365       DC8 110, 103, 101, 32, 115, 101, 108, 101, 99, 116
   \              6C656374    
   \   00000168   656420747261       DC8 101, 100, 32, 116, 114, 97, 99, 107, 39, 115
   \              636B2773    
   \   00000172   206E616D652E       DC8 32, 110, 97, 109, 101, 46, 10, 10, 68, 101
   \              0A0A4465    
   \   0000017C   6C6574652054       DC8 108, 101, 116, 101, 32, 84, 114, 97, 99, 107
   \              7261636B    
   \   00000186   20746F207265       DC8 32, 116, 111, 32, 114, 101, 109, 111, 118, 101
   \              6D6F7665    
   \   00000190   20747261636B       DC8 32, 116, 114, 97, 99, 107, 32, 102, 114, 111
   \              2066726F    
   \   0000019A   6D206C697374       DC8 109, 32, 108, 105, 115, 116, 46, 10, 10, 80
   \              2E0A0A50    
   \   000001A4   726573732052       DC8 114, 101, 115, 115, 32, 82, 101, 100, 32, 66
   \              65642042    
   \   000001AE   61636B204275       DC8 97, 99, 107, 32, 66, 117, 116, 116, 111, 110
   \              74746F6E    
   \   000001B8   20746F20676F       DC8 32, 116, 111, 32, 103, 111, 32, 117, 112, 32
   \              20757020    
   \   000001C2   6F6E65206D65       DC8 111, 110, 101, 32, 109, 101, 110, 117, 32, 111
   \              6E75206F    
   \   000001CC   7220686F6C64       DC8 114, 32, 104, 111, 108, 100, 32, 102, 111, 114
   \              20666F72    
   \   000001D6   204D61696E20       DC8 32, 77, 97, 105, 110, 32, 77, 101, 110, 117
   \              4D656E75    
   \   000001E0   2E0A0A49636F       DC8 46, 10, 10, 73, 99, 111, 110, 115, 58, 32
   \              6E733A20    
   \   000001EA   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 116, 97
   \              20537461    
   \   000001F4   7475732C2053       DC8 116, 117, 115, 44, 32, 83, 68, 32, 67, 97
   \              44204361    
   \   000001FE   726420537461       DC8 114, 100, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   00000208   204750532053       DC8 32, 71, 80, 83, 32, 83, 105, 103, 110, 97
   \              69676E61    
   \   00000212   6C2053747265       DC8 108, 32, 83, 116, 114, 101, 110, 103, 116, 104
   \              6E677468    
   \   0000021C   00000000           DC8 0, 0, 0, 0
    466          "Use list to select track. Exit screen when complete.\
    467          \n\nTop orange button chooses range of tracks to display.\
    468          \n\nSettings to change start/finish, track type, clear predictive lap, and set lap hold time.\
    469          \n\nRight button on second line to select which type of tracks to show, Road Race, Drive, AutoX, and Drag.\
    470          \n\nNew Track to create a track.\
    471          \n\nEdit Name to change selected track's name.\
    472          \n\nDelete Track to remove track from list.\
    473          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    474          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    475          
    476          // when current track out of range

   \                                 In section .text, align 4, keep-with-next
    477          const char CHOOSE_TRACK_INFO[] =
   \                     CHOOSE_TRACK_INFO:
   \   00000000                      ; Initializer data, 472 bytes
   \   00000000   526561636869       DC8 82, 101, 97, 99, 104, 105, 110, 103, 32, 116
   \              6E672074    
   \   0000000A   686973207363       DC8 104, 105, 115, 32, 115, 99, 114, 101, 101, 110
   \              7265656E    
   \   00000014   20696E646963       DC8 32, 105, 110, 100, 105, 99, 97, 116, 101, 115
   \              61746573    
   \   0000001E   207468617420       DC8 32, 116, 104, 97, 116, 32, 116, 104, 101, 32
   \              74686520    
   \   00000028   63757272656E       DC8 99, 117, 114, 114, 101, 110, 116, 108, 121, 32
   \              746C7920    
   \   00000032   73656C656374       DC8 115, 101, 108, 101, 99, 116, 101, 100, 32, 116
   \              65642074    
   \   0000003C   7261636B2069       DC8 114, 97, 99, 107, 32, 105, 115, 32, 110, 111
   \              73206E6F    
   \   00000046   7420636C6F73       DC8 116, 32, 99, 108, 111, 115, 101, 32, 116, 111
   \              6520746F    
   \   00000050   20796F757220       DC8 32, 121, 111, 117, 114, 32, 99, 117, 114, 114
   \              63757272    
   \   0000005A   656E74204750       DC8 101, 110, 116, 32, 71, 80, 83, 32, 108, 111
   \              53206C6F    
   \   00000064   636174696F6E       DC8 99, 97, 116, 105, 111, 110, 46, 10, 84, 104
   \              2E0A5468    
   \   0000006E   652074726163       DC8 101, 32, 116, 114, 97, 99, 107, 115, 32, 110
   \              6B73206E    
   \   00000078   656172627920       DC8 101, 97, 114, 98, 121, 32, 97, 114, 101, 32
   \              61726520    
   \   00000082   73686F776E20       DC8 115, 104, 111, 119, 110, 32, 105, 110, 32, 116
   \              696E2074    
   \   0000008C   6865206C6973       DC8 104, 101, 32, 108, 105, 115, 116, 32, 111, 114
   \              74206F72    
   \   00000096   20796F752063       DC8 32, 121, 111, 117, 32, 99, 97, 110, 32, 104
   \              616E2068    
   \   000000A0   617665205472       DC8 97, 118, 101, 32, 84, 114, 97, 113, 68, 97
   \              61714461    
   \   000000AA   736820617574       DC8 115, 104, 32, 97, 117, 116, 111, 109, 97, 116
   \              6F6D6174    
   \   000000B4   6963616C6C79       DC8 105, 99, 97, 108, 108, 121, 32, 99, 114, 101
   \              20637265    
   \   000000BE   617465206120       DC8 97, 116, 101, 32, 97, 32, 110, 101, 119, 32
   \              6E657720    
   \   000000C8   747261636B2E       DC8 116, 114, 97, 99, 107, 46, 10, 10, 85, 115
   \              0A0A5573    
   \   000000D2   65206C697374       DC8 101, 32, 108, 105, 115, 116, 32, 116, 111, 32
   \              20746F20    
   \   000000DC   73656C656374       DC8 115, 101, 108, 101, 99, 116, 32, 116, 114, 97
   \              20747261    
   \   000000E6   636B2E0A0A43       DC8 99, 107, 46, 10, 10, 67, 111, 110, 102, 105
   \              6F6E6669    
   \   000000F0   726D20547261       DC8 114, 109, 32, 84, 114, 97, 99, 107, 32, 119
   \              636B2077    
   \   000000FA   68656E207472       DC8 104, 101, 110, 32, 116, 114, 97, 99, 107, 32
   \              61636B20    
   \   00000104   69732073656C       DC8 105, 115, 32, 115, 101, 108, 101, 99, 116, 101
   \              65637465    
   \   0000010E   642E0A0A4175       DC8 100, 46, 10, 10, 65, 117, 116, 111, 45, 67
   \              746F2D43    
   \   00000118   726561746520       DC8 114, 101, 97, 116, 101, 32, 84, 114, 97, 99
   \              54726163    
   \   00000122   6B20746F2063       DC8 107, 32, 116, 111, 32, 99, 114, 101, 97, 116
   \              72656174    
   \   0000012C   652061207472       DC8 101, 32, 97, 32, 116, 114, 97, 99, 107, 46
   \              61636B2E    
   \   00000136   0A0A4E657720       DC8 10, 10, 78, 101, 119, 32, 84, 114, 97, 99
   \              54726163    
   \   00000140   6B20746F2063       DC8 107, 32, 116, 111, 32, 99, 114, 101, 97, 116
   \              72656174    
   \   0000014A   652061207472       DC8 101, 32, 97, 32, 116, 114, 97, 99, 107, 32
   \              61636B20    
   \   00000154   6279206E616D       DC8 98, 121, 32, 110, 97, 109, 101, 46, 10, 10
   \              652E0A0A    
   \   0000015E   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   00000168   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   00000172   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   0000017C   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   00000186   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   00000190   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   0000019A   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   000001A4   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   000001AE   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   000001B8   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   000001C2   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   000001CC   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   000001D6   6800               DC8 104, 0
    478          "Reaching this screen indicates that the currently selected track is not close to your current GPS location.\
    479          \nThe tracks nearby are shown in the list or you can have TraqDash automatically create a new track.\
    480          \n\nUse list to select track.\
    481          \n\nConfirm Track when track is selected.\
    482          \n\nAuto-Create Track to create a track.\
    483          \n\nNew Track to create a track by name.\
    484          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    485          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    486          

   \                                 In section .text, align 4, keep-with-next
    487          const char LAP_QUAL_INFO[] =
   \                     LAP_QUAL_INFO:
   \   00000000                      ; Initializer data, 340 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 76, 97, 112
   \              204C6170    
   \   0000000A   206F72205175       DC8 32, 111, 114, 32, 81, 117, 97, 108, 105, 102
   \              616C6966    
   \   00000014   79696E67204D       DC8 121, 105, 110, 103, 32, 77, 111, 100, 101, 32
   \              6F646520    
   \   0000001E   666F72207468       DC8 102, 111, 114, 32, 116, 104, 101, 32, 80, 114
   \              65205072    
   \   00000028   656469637469       DC8 101, 100, 105, 99, 116, 105, 118, 101, 32, 76
   \              7665204C    
   \   00000032   61702054696D       DC8 97, 112, 32, 84, 105, 109, 105, 110, 103, 46
   \              696E672E    
   \   0000003C   0A0A4E4F5445       DC8 10, 10, 78, 79, 84, 69, 58, 32, 76, 97
   \              3A204C61    
   \   00000046   7070696E6720       DC8 112, 112, 105, 110, 103, 32, 77, 111, 100, 101
   \              4D6F6465    
   \   00000050   20636F6D7061       DC8 32, 99, 111, 109, 112, 97, 114, 101, 115, 32
   \              72657320    
   \   0000005A   616761696E73       DC8 97, 103, 97, 105, 110, 115, 116, 32, 116, 104
   \              74207468    
   \   00000064   652042657374       DC8 101, 32, 66, 101, 115, 116, 32, 76, 97, 112
   \              204C6170    
   \   0000006E   207265636F72       DC8 32, 114, 101, 99, 111, 114, 100, 101, 100, 32
   \              64656420    
   \   00000078   617420746869       DC8 97, 116, 32, 116, 104, 105, 115, 32, 116, 114
   \              73207472    
   \   00000082   61636B2E0A0A       DC8 97, 99, 107, 46, 10, 10, 81, 117, 97, 108
   \              5175616C    
   \   0000008C   696679696E67       DC8 105, 102, 121, 105, 110, 103, 32, 77, 111, 100
   \              204D6F64    
   \   00000096   6520636F6D70       DC8 101, 32, 99, 111, 109, 112, 97, 114, 101, 115
   \              61726573    
   \   000000A0   20616761696E       DC8 32, 97, 103, 97, 105, 110, 115, 116, 32, 111
   \              7374206F    
   \   000000AA   6E6C79207468       DC8 110, 108, 121, 32, 116, 104, 101, 32, 98, 101
   \              65206265    
   \   000000B4   7374206C6170       DC8 115, 116, 32, 108, 97, 112, 32, 119, 105, 116
   \              20776974    
   \   000000BE   68696E207468       DC8 104, 105, 110, 32, 116, 104, 101, 32, 99, 117
   \              65206375    
   \   000000C8   7272656E7420       DC8 114, 114, 101, 110, 116, 32, 115, 101, 115, 115
   \              73657373    
   \   000000D2   696F6E2E0A0A       DC8 105, 111, 110, 46, 10, 10, 80, 114, 101, 115
   \              50726573    
   \   000000DC   732052656420       DC8 115, 32, 82, 101, 100, 32, 66, 97, 99, 107
   \              4261636B    
   \   000000E6   20427574746F       DC8 32, 66, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   000000F0   20676F207570       DC8 32, 103, 111, 32, 117, 112, 32, 111, 110, 101
   \              206F6E65    
   \   000000FA   206D656E7520       DC8 32, 109, 101, 110, 117, 32, 111, 114, 32, 104
   \              6F722068    
   \   00000104   6F6C6420666F       DC8 111, 108, 100, 32, 102, 111, 114, 32, 77, 97
   \              72204D61    
   \   0000010E   696E204D656E       DC8 105, 110, 32, 77, 101, 110, 117, 46, 10, 10
   \              752E0A0A    
   \   00000118   49636F6E733A       DC8 73, 99, 111, 110, 115, 58, 32, 67, 97, 109
   \              2043616D    
   \   00000122   657261205374       DC8 101, 114, 97, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   0000012C   2C2053442043       DC8 44, 32, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   00000136   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 71, 80
   \              2C204750    
   \   00000140   53205369676E       DC8 83, 32, 83, 105, 103, 110, 97, 108, 32, 83
   \              616C2053    
   \   0000014A   7472656E6774       DC8 116, 114, 101, 110, 103, 116, 104, 0, 0, 0
   \              68000000    
    488          "Select Lap or Qualifying Mode for the Predictive Lap Timing.\
    489          \n\nNOTE: Lapping Mode compares against the Best Lap recorded at this track.\
    490          \n\nQualifying Mode compares against only the best lap within the current session.\
    491          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    492          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    493          

   \                                 In section .text, align 4, keep-with-next
    494          const char VEHICLE_SETTINGS_INFO[] =
   \                     VEHICLE_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 408 bytes
   \   00000000   546163682074       DC8 84, 97, 99, 104, 32, 116, 111, 32, 99, 104
   \              6F206368    
   \   0000000A   616E67652072       DC8 97, 110, 103, 101, 32, 114, 97, 110, 103, 101
   \              616E6765    
   \   00000014   206F66207461       DC8 32, 111, 102, 32, 116, 97, 99, 104, 32, 76
   \              6368204C    
   \   0000001E   4544732E0A0A       DC8 69, 68, 115, 46, 10, 10, 65, 101, 114, 111
   \              4165726F    
   \   00000028   2F4772697020       DC8 47, 71, 114, 105, 112, 32, 116, 111, 32, 99
   \              746F2063    
   \   00000032   68616E676520       DC8 104, 97, 110, 103, 101, 32, 116, 105, 114, 101
   \              74697265    
   \   0000003C   20616E642076       DC8 32, 97, 110, 100, 32, 118, 101, 104, 105, 99
   \              65686963    
   \   00000046   6C6520616572       DC8 108, 101, 32, 97, 101, 114, 111, 32, 115, 101
   \              6F207365    
   \   00000050   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 46, 10, 10, 71
   \              2E0A0A47    
   \   0000005A   656172205261       DC8 101, 97, 114, 32, 82, 97, 116, 105, 111, 32
   \              74696F20    
   \   00000064   746F20656E74       DC8 116, 111, 32, 101, 110, 116, 101, 114, 32, 103
   \              65722067    
   \   0000006E   65617220616E       DC8 101, 97, 114, 32, 97, 110, 100, 32, 100, 105
   \              64206469    
   \   00000078   666620726174       DC8 102, 102, 32, 114, 97, 116, 105, 111, 115, 32
   \              696F7320    
   \   00000082   666F72206765       DC8 102, 111, 114, 32, 103, 101, 97, 114, 32, 100
   \              61722064    
   \   0000008C   6973706C6179       DC8 105, 115, 112, 108, 97, 121, 46, 10, 10, 73
   \              2E0A0A49    
   \   00000096   6E7075747320       DC8 110, 112, 117, 116, 115, 32, 116, 111, 32, 99
   \              746F2063    
   \   000000A0   68616E676520       DC8 104, 97, 110, 103, 101, 32, 97, 110, 97, 108
   \              616E616C    
   \   000000AA   6F672C206469       DC8 111, 103, 44, 32, 100, 105, 103, 105, 116, 97
   \              67697461    
   \   000000B4   6C20696E7075       DC8 108, 32, 105, 110, 112, 117, 116, 115, 32, 102
   \              74732066    
   \   000000BE   6F7220746869       DC8 111, 114, 32, 116, 104, 105, 115, 32, 118, 101
   \              73207665    
   \   000000C8   6869636C652E       DC8 104, 105, 99, 108, 101, 46, 10, 10, 87, 101
   \              0A0A5765    
   \   000000D2   696768742074       DC8 105, 103, 104, 116, 32, 116, 111, 32, 101, 110
   \              6F20656E    
   \   000000DC   746572207665       DC8 116, 101, 114, 32, 118, 101, 104, 105, 99, 108
   \              6869636C    
   \   000000E6   652077656967       DC8 101, 32, 119, 101, 105, 103, 104, 116, 46, 10
   \              68742E0A    
   \   000000F0   0A43616D6572       DC8 10, 67, 97, 109, 101, 114, 97, 32, 116, 111
   \              6120746F    
   \   000000FA   2073656C6563       DC8 32, 115, 101, 108, 101, 99, 116, 32, 97, 32
   \              74206120    
   \   00000104   63616D657261       DC8 99, 97, 109, 101, 114, 97, 32, 102, 111, 114
   \              20666F72    
   \   0000010E   207468697320       DC8 32, 116, 104, 105, 115, 32, 118, 101, 104, 105
   \              76656869    
   \   00000118   636C652E0A0A       DC8 99, 108, 101, 46, 10, 10, 80, 114, 101, 115
   \              50726573    
   \   00000122   732052656420       DC8 115, 32, 82, 101, 100, 32, 66, 97, 99, 107
   \              4261636B    
   \   0000012C   20427574746F       DC8 32, 66, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   00000136   20676F207570       DC8 32, 103, 111, 32, 117, 112, 32, 111, 110, 101
   \              206F6E65    
   \   00000140   206D656E7520       DC8 32, 109, 101, 110, 117, 32, 111, 114, 32, 104
   \              6F722068    
   \   0000014A   6F6C6420666F       DC8 111, 108, 100, 32, 102, 111, 114, 32, 77, 97
   \              72204D61    
   \   00000154   696E204D656E       DC8 105, 110, 32, 77, 101, 110, 117, 46, 10, 10
   \              752E0A0A    
   \   0000015E   49636F6E733A       DC8 73, 99, 111, 110, 115, 58, 32, 67, 97, 109
   \              2043616D    
   \   00000168   657261205374       DC8 101, 114, 97, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   00000172   2C2053442043       DC8 44, 32, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   0000017C   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 71, 80
   \              2C204750    
   \   00000186   53205369676E       DC8 83, 32, 83, 105, 103, 110, 97, 108, 32, 83
   \              616C2053    
   \   00000190   7472656E6774       DC8 116, 114, 101, 110, 103, 116, 104, 0
   \              6800        
    495          "Tach to change range of tach LEDs.\
    496          \n\nAero/Grip to change tire and vehicle aero settings.\
    497          \n\nGear Ratio to enter gear and diff ratios for gear display.\
    498          \n\nInputs to change analog, digital inputs for this vehicle.\
    499          \n\nWeight to enter vehicle weight.\
    500          \n\nCamera to select a camera for this vehicle.\
    501          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    502          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    503          

   \                                 In section .text, align 4, keep-with-next
    504          const char TRACK_SETTINGS_INFO[] =
   \                     TRACK_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 364 bytes
   \   00000000   547261636B20       DC8 84, 114, 97, 99, 107, 32, 84, 121, 112, 101
   \              54797065    
   \   0000000A   20746F206368       DC8 32, 116, 111, 32, 99, 104, 97, 110, 103, 101
   \              616E6765    
   \   00000014   20636F6E6669       DC8 32, 99, 111, 110, 102, 105, 103, 117, 114, 97
   \              67757261    
   \   0000001E   74696F6E206F       DC8 116, 105, 111, 110, 32, 111, 102, 32, 114, 97
   \              66207261    
   \   00000028   636520747261       DC8 99, 101, 32, 116, 114, 97, 99, 107, 46, 10
   \              636B2E0A    
   \   00000032   0A4C61702048       DC8 10, 76, 97, 112, 32, 72, 111, 108, 100, 116
   \              6F6C6474    
   \   0000003C   696D6520746F       DC8 105, 109, 101, 32, 116, 111, 32, 99, 104, 97
   \              20636861    
   \   00000046   6E6765206475       DC8 110, 103, 101, 32, 100, 117, 114, 97, 116, 105
   \              72617469    
   \   00000050   6F6E20746861       DC8 111, 110, 32, 116, 104, 97, 116, 32, 108, 97
   \              74206C61    
   \   0000005A   702074696D65       DC8 112, 32, 116, 105, 109, 101, 32, 104, 101, 108
   \              2068656C    
   \   00000064   70206F6E2064       DC8 112, 32, 111, 110, 32, 100, 105, 115, 112, 108
   \              6973706C    
   \   0000006E   61792E0A0A53       DC8 97, 121, 46, 10, 10, 83, 116, 97, 114, 116
   \              74617274    
   \   00000078   2F46696E6973       DC8 47, 70, 105, 110, 105, 115, 104, 32, 116, 111
   \              6820746F    
   \   00000082   20636C656172       DC8 32, 99, 108, 101, 97, 114, 32, 115, 116, 97
   \              20737461    
   \   0000008C   72742F66696E       DC8 114, 116, 47, 102, 105, 110, 105, 115, 104, 32
   \              69736820    
   \   00000096   6F7220656E74       DC8 111, 114, 32, 101, 110, 116, 101, 114, 32, 110
   \              6572206E    
   \   000000A0   657720636F6F       DC8 101, 119, 32, 99, 111, 111, 114, 100, 105, 110
   \              7264696E    
   \   000000AA   617465732E0A       DC8 97, 116, 101, 115, 46, 10, 10, 80, 114, 101
   \              0A507265    
   \   000000B4   646963746976       DC8 100, 105, 99, 116, 105, 118, 101, 32, 76, 97
   \              65204C61    
   \   000000BE   7020746F2063       DC8 112, 32, 116, 111, 32, 99, 108, 101, 97, 114
   \              6C656172    
   \   000000C8   207072656469       DC8 32, 112, 114, 101, 100, 105, 99, 116, 105, 118
   \              63746976    
   \   000000D2   65206C617020       DC8 101, 32, 108, 97, 112, 32, 100, 97, 116, 97
   \              64617461    
   \   000000DC   20666F722073       DC8 32, 102, 111, 114, 32, 115, 101, 108, 101, 99
   \              656C6563    
   \   000000E6   746564207472       DC8 116, 101, 100, 32, 116, 114, 97, 99, 107, 46
   \              61636B2E    
   \   000000F0   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000000FA   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   00000104   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   0000010E   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   00000118   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   00000122   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   0000012C   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   00000136   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   00000140   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   0000014A   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   00000154   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   0000015E   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   00000168   67746800           DC8 103, 116, 104, 0
    505          "Track Type to change configuration of race track.\
    506          \n\nLap Holdtime to change duration that lap time help on display.\
    507          \n\nStart/Finish to clear start/finish or enter new coordinates.\
    508          \n\nPredictive Lap to clear predictive lap data for selected track.\
    509          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    510          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    511          

   \                                 In section .text, align 4, keep-with-next
    512          const char TRACK_TYPE_INFO[] =
   \                     TRACK_TYPE_INFO:
   \   00000000                      ; Initializer data, 544 bytes
   \   00000000   526F61642052       DC8 82, 111, 97, 100, 32, 82, 97, 99, 101, 32
   \              61636520    
   \   0000000A   2D20436C6F73       DC8 45, 32, 67, 108, 111, 115, 101, 100, 32, 61
   \              6564203D    
   \   00000014   20726F616420       DC8 32, 114, 111, 97, 100, 32, 99, 111, 117, 114
   \              636F7572    
   \   0000001E   736520776974       DC8 115, 101, 32, 119, 105, 116, 104, 32, 115, 116
   \              68207374    
   \   00000028   6172742F6669       DC8 97, 114, 116, 47, 102, 105, 110, 105, 115, 104
   \              6E697368    
   \   00000032   2E0A0A417574       DC8 46, 10, 10, 65, 117, 116, 111, 45, 88, 47
   \              6F2D582F    
   \   0000003C   52616C6C7920       DC8 82, 97, 108, 108, 121, 32, 45, 32, 79, 112
   \              2D204F70    
   \   00000046   656E203D2061       DC8 101, 110, 32, 61, 32, 97, 117, 116, 111, 99
   \              75746F63    
   \   00000050   726F7373206F       DC8 114, 111, 115, 115, 32, 111, 114, 32, 114, 97
   \              72207261    
   \   0000005A   6C6C79207374       DC8 108, 108, 121, 32, 115, 116, 97, 103, 101, 32
   \              61676520    
   \   00000064   77697468206C       DC8 119, 105, 116, 104, 32, 108, 97, 117, 110, 99
   \              61756E63    
   \   0000006E   68206D6F6465       DC8 104, 32, 109, 111, 100, 101, 32, 97, 110, 100
   \              20616E64    
   \   00000078   207365706172       DC8 32, 115, 101, 112, 97, 114, 97, 116, 101, 32
   \              61746520    
   \   00000082   737461727420       DC8 115, 116, 97, 114, 116, 32, 97, 110, 100, 32
   \              616E6420    
   \   0000008C   66696E697368       DC8 102, 105, 110, 105, 115, 104, 46, 10, 10, 68
   \              2E0A0A44    
   \   00000096   726167737472       DC8 114, 97, 103, 115, 116, 114, 105, 112, 32, 45
   \              6970202D    
   \   000000A0   204F70656E20       DC8 32, 79, 112, 101, 110, 32, 61, 32, 108, 97
   \              3D206C61    
   \   000000AA   756E6368206D       DC8 117, 110, 99, 104, 32, 109, 111, 100, 101, 32
   \              6F646520    
   \   000000B4   666F7220312F       DC8 102, 111, 114, 32, 49, 47, 56, 32, 109, 105
   \              38206D69    
   \   000000BE   2C20312F3420       DC8 44, 32, 49, 47, 52, 32, 109, 105, 44, 32
   \              6D692C20    
   \   000000C8   6F7220313030       DC8 111, 114, 32, 49, 48, 48, 48, 39, 32, 100
   \              30272064    
   \   000000D2   697374616E63       DC8 105, 115, 116, 97, 110, 99, 101, 46, 10, 10
   \              652E0A0A    
   \   000000DC   4F76616C202D       DC8 79, 118, 97, 108, 32, 45, 32, 67, 108, 111
   \              20436C6F    
   \   000000E6   736564203D20       DC8 115, 101, 100, 32, 61, 32, 111, 118, 97, 108
   \              6F76616C    
   \   000000F0   20747261636B       DC8 32, 116, 114, 97, 99, 107, 32, 119, 105, 116
   \              20776974    
   \   000000FA   682073746172       DC8 104, 32, 115, 116, 97, 114, 116, 47, 102, 105
   \              742F6669    
   \   00000104   6E6973682E0A       DC8 110, 105, 115, 104, 46, 10, 10, 72, 105, 108
   \              0A48696C    
   \   0000010E   6C20436C696D       DC8 108, 32, 67, 108, 105, 109, 98, 32, 45, 32
   \              62202D20    
   \   00000118   4F70656E203D       DC8 79, 112, 101, 110, 32, 61, 32, 114, 111, 108
   \              20726F6C    
   \   00000122   6C696E672073       DC8 108, 105, 110, 103, 32, 115, 116, 97, 114, 116
   \              74617274    
   \   0000012C   207374616765       DC8 32, 115, 116, 97, 103, 101, 32, 119, 105, 116
   \              20776974    
   \   00000136   682073657061       DC8 104, 32, 115, 101, 112, 97, 114, 97, 116, 101
   \              72617465    
   \   00000140   207374617274       DC8 32, 115, 116, 97, 114, 116, 32, 97, 110, 100
   \              20616E64    
   \   0000014A   2066696E6973       DC8 32, 102, 105, 110, 105, 115, 104, 46, 10, 10
   \              682E0A0A    
   \   00000154   447269766520       DC8 68, 114, 105, 118, 101, 32, 45, 32, 79, 112
   \              2D204F70    
   \   0000015E   656E203D2072       DC8 101, 110, 32, 61, 32, 114, 101, 99, 111, 114
   \              65636F72    
   \   00000168   642064617461       DC8 100, 32, 100, 97, 116, 97, 32, 111, 118, 101
   \              206F7665    
   \   00000172   722064697374       DC8 114, 32, 100, 105, 115, 116, 97, 110, 99, 101
   \              616E6365    
   \   0000017C   207769746820       DC8 32, 119, 105, 116, 104, 32, 115, 116, 97, 114
   \              73746172    
   \   00000186   742061742062       DC8 116, 32, 97, 116, 32, 98, 101, 103, 105, 110
   \              6567696E    
   \   00000190   6E696E672C20       DC8 110, 105, 110, 103, 44, 32, 102, 105, 110, 105
   \              66696E69    
   \   0000019A   736820617420       DC8 115, 104, 32, 97, 116, 32, 101, 110, 100, 46
   \              656E642E    
   \   000001A4   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000001AE   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   000001B8   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   000001C2   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   000001CC   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   000001D6   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   000001E0   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   000001EA   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   000001F4   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   000001FE   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   00000208   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   00000212   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   0000021C   67746800           DC8 103, 116, 104, 0
    513          "Road Race - Closed = road course with start/finish.\
    514          \n\nAuto-X/Rally - Open = autocross or rally stage with launch mode and separate start and finish.\
    515          \n\nDragstrip - Open = launch mode for 1/8 mi, 1/4 mi, or 1000' distance.\
    516          \n\nOval - Closed = oval track with start/finish.\
    517          \n\nHill Climb - Open = rolling start stage with separate start and finish.\
    518          \n\nDrive - Open = record data over distance with start at beginning, finish at end.\
    519          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    520          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    521          

   \                                 In section .text, align 4, keep-with-next
    522          const char LAP_HOLD_INFO[] =
   \                     LAP_HOLD_INFO:
   \   00000000                      ; Initializer data, 300 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   6C656374206C       DC8 108, 101, 99, 116, 32, 108, 97, 112, 32, 104
   \              61702068    
   \   0000001E   6F6C64207469       DC8 111, 108, 100, 32, 116, 105, 109, 101, 46, 32
   \              6D652E20    
   \   00000028   457869742073       DC8 69, 120, 105, 116, 32, 115, 99, 114, 101, 101
   \              63726565    
   \   00000032   6E207768656E       DC8 110, 32, 119, 104, 101, 110, 32, 99, 111, 109
   \              20636F6D    
   \   0000003C   706C6574652E       DC8 112, 108, 101, 116, 101, 46, 10, 10, 84, 104
   \              0A0A5468    
   \   00000046   697320697320       DC8 105, 115, 32, 105, 115, 32, 116, 104, 101, 32
   \              74686520    
   \   00000050   616D6F756E74       DC8 97, 109, 111, 117, 110, 116, 32, 111, 102, 32
   \              206F6620    
   \   0000005A   74696D652074       DC8 116, 105, 109, 101, 32, 116, 104, 101, 32, 112
   \              68652070    
   \   00000064   726576696F75       DC8 114, 101, 118, 105, 111, 117, 115, 32, 108, 97
   \              73206C61    
   \   0000006E   702074696D65       DC8 112, 32, 116, 105, 109, 101, 32, 119, 105, 108
   \              2077696C    
   \   00000078   6C2062652064       DC8 108, 32, 98, 101, 32, 100, 105, 115, 112, 108
   \              6973706C    
   \   00000082   617965642061       DC8 97, 121, 101, 100, 32, 97, 102, 116, 101, 114
   \              66746572    
   \   0000008C   2063726F7373       DC8 32, 99, 114, 111, 115, 115, 105, 110, 103, 32
   \              696E6720    
   \   00000096   746865207374       DC8 116, 104, 101, 32, 115, 116, 97, 114, 116, 32
   \              61727420    
   \   000000A0   2F2066696E69       DC8 47, 32, 102, 105, 110, 105, 115, 104, 32, 108
   \              7368206C    
   \   000000AA   696E652E0A0A       DC8 105, 110, 101, 46, 10, 10, 80, 114, 101, 115
   \              50726573    
   \   000000B4   732052656420       DC8 115, 32, 82, 101, 100, 32, 66, 97, 99, 107
   \              4261636B    
   \   000000BE   20427574746F       DC8 32, 66, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   000000C8   20676F207570       DC8 32, 103, 111, 32, 117, 112, 32, 111, 110, 101
   \              206F6E65    
   \   000000D2   206D656E7520       DC8 32, 109, 101, 110, 117, 32, 111, 114, 32, 104
   \              6F722068    
   \   000000DC   6F6C6420666F       DC8 111, 108, 100, 32, 102, 111, 114, 32, 77, 97
   \              72204D61    
   \   000000E6   696E204D656E       DC8 105, 110, 32, 77, 101, 110, 117, 46, 10, 10
   \              752E0A0A    
   \   000000F0   49636F6E733A       DC8 73, 99, 111, 110, 115, 58, 32, 67, 97, 109
   \              2043616D    
   \   000000FA   657261205374       DC8 101, 114, 97, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   00000104   2C2053442043       DC8 44, 32, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   0000010E   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 71, 80
   \              2C204750    
   \   00000118   53205369676E       DC8 83, 32, 83, 105, 103, 110, 97, 108, 32, 83
   \              616C2053    
   \   00000122   7472656E6774       DC8 116, 114, 101, 110, 103, 116, 104, 0, 0, 0
   \              68000000    
    523          "Use list wheel to select lap hold time. Exit screen when complete.\
    524          \n\nThis is the amount of time the previous lap time will be displayed after crossing the start / finish line.\
    525          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    526          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    527          

   \                                 In section .text, align 4, keep-with-next
    528          const char START_FINISH_INFO[] =
   \                     START_FINISH_INFO:
   \   00000000                      ; Initializer data, 348 bytes
   \   00000000   546F75636820       DC8 84, 111, 117, 99, 104, 32, 76, 65, 84, 44
   \              4C41542C    
   \   0000000A   204C4F4E2C20       DC8 32, 76, 79, 78, 44, 32, 97, 110, 100, 32
   \              616E6420    
   \   00000014   48454144494E       DC8 72, 69, 65, 68, 73, 78, 71, 32, 98, 117
   \              47206275    
   \   0000001E   74746F6E7320       DC8 116, 116, 111, 110, 115, 32, 116, 111, 32, 101
   \              746F2065    
   \   00000028   6E7465722074       DC8 110, 116, 101, 114, 32, 116, 104, 101, 32, 99
   \              68652063    
   \   00000032   6F6F7264696E       DC8 111, 111, 114, 100, 105, 110, 97, 116, 101, 115
   \              61746573    
   \   0000003C   2E0A4578616D       DC8 46, 10, 69, 120, 97, 109, 112, 108, 101, 58
   \              706C653A    
   \   00000046   2033342E3135       DC8 32, 51, 52, 46, 49, 53, 48, 51, 56, 51
   \              30333833    
   \   00000050   2C202D38332E       DC8 44, 32, 45, 56, 51, 46, 56, 49, 52, 50
   \              38313432    
   \   0000005A   33322C203132       DC8 51, 50, 44, 32, 49, 50, 49, 10, 10, 67
   \              310A0A43    
   \   00000064   6C6561722053       DC8 108, 101, 97, 114, 32, 83, 116, 97, 114, 116
   \              74617274    
   \   0000006E   2F46696E6973       DC8 47, 70, 105, 110, 105, 115, 104, 32, 116, 111
   \              6820746F    
   \   00000078   20636C656172       DC8 32, 99, 108, 101, 97, 114, 32, 99, 111, 111
   \              20636F6F    
   \   00000082   7264696E6174       DC8 114, 100, 105, 110, 97, 116, 101, 115, 32, 97
   \              65732061    
   \   0000008C   6E6420736574       DC8 110, 100, 32, 115, 101, 116, 32, 100, 117, 114
   \              20647572    
   \   00000096   696E67207468       DC8 105, 110, 103, 32, 116, 104, 101, 32, 110, 101
   \              65206E65    
   \   000000A0   787420736573       DC8 120, 116, 32, 115, 101, 115, 115, 105, 111, 110
   \              73696F6E    
   \   000000AA   2E0A54686973       DC8 46, 10, 84, 104, 105, 115, 32, 119, 105, 108
   \              2077696C    
   \   000000B4   6C20616C736F       DC8 108, 32, 97, 108, 115, 111, 32, 99, 108, 101
   \              20636C65    
   \   000000BE   617220746865       DC8 97, 114, 32, 116, 104, 101, 32, 80, 114, 101
   \              20507265    
   \   000000C8   646963746976       DC8 100, 105, 99, 116, 105, 118, 101, 32, 76, 97
   \              65204C61    
   \   000000D2   7020696E666F       DC8 112, 32, 105, 110, 102, 111, 114, 109, 97, 116
   \              726D6174    
   \   000000DC   696F6E2E0A0A       DC8 105, 111, 110, 46, 10, 10, 80, 114, 101, 115
   \              50726573    
   \   000000E6   732052656420       DC8 115, 32, 82, 101, 100, 32, 66, 97, 99, 107
   \              4261636B    
   \   000000F0   20427574746F       DC8 32, 66, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   000000FA   20676F207570       DC8 32, 103, 111, 32, 117, 112, 32, 111, 110, 101
   \              206F6E65    
   \   00000104   206D656E7520       DC8 32, 109, 101, 110, 117, 32, 111, 114, 32, 104
   \              6F722068    
   \   0000010E   6F6C6420666F       DC8 111, 108, 100, 32, 102, 111, 114, 32, 77, 97
   \              72204D61    
   \   00000118   696E204D656E       DC8 105, 110, 32, 77, 101, 110, 117, 46, 10, 10
   \              752E0A0A    
   \   00000122   49636F6E733A       DC8 73, 99, 111, 110, 115, 58, 32, 67, 97, 109
   \              2043616D    
   \   0000012C   657261205374       DC8 101, 114, 97, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   00000136   2C2053442043       DC8 44, 32, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   00000140   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 71, 80
   \              2C204750    
   \   0000014A   53205369676E       DC8 83, 32, 83, 105, 103, 110, 97, 108, 32, 83
   \              616C2053    
   \   00000154   7472656E6774       DC8 116, 114, 101, 110, 103, 116, 104, 0
   \              6800        
    529          "Touch LAT, LON, and HEADING buttons to enter the coordinates.\
    530          \nExample: 34.150383, -83.814232, 121\
    531          \n\nClear Start/Finish to clear coordinates and set during the next session.\
    532          \nThis will also clear the Predictive Lap information.\
    533          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    534          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    535          

   \                                 In section .text, align 4, keep-with-next
    536          const char PREDICTIVE_LAP_INFO[] =
   \                     PREDICTIVE_LAP_INFO:
   \   00000000                      ; Initializer data, 196 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 84, 105, 109, 101
   \              54696D65    
   \   0000000A   20746F20636C       DC8 32, 116, 111, 32, 99, 108, 101, 97, 114, 32
   \              65617220    
   \   00000014   746865207072       DC8 116, 104, 101, 32, 112, 114, 101, 100, 105, 99
   \              65646963    
   \   0000001E   74697665206C       DC8 116, 105, 118, 101, 32, 108, 97, 112, 32, 116
   \              61702074    
   \   00000028   696D6520696E       DC8 105, 109, 101, 32, 105, 110, 102, 111, 114, 109
   \              666F726D    
   \   00000032   6174696F6E20       DC8 97, 116, 105, 111, 110, 32, 102, 111, 114, 32
   \              666F7220    
   \   0000003C   746869732074       DC8 116, 104, 105, 115, 32, 116, 114, 97, 99, 107
   \              7261636B    
   \   00000046   2E0A0A507265       DC8 46, 10, 10, 80, 114, 101, 115, 115, 32, 82
   \              73732052    
   \   00000050   656420426163       DC8 101, 100, 32, 66, 97, 99, 107, 32, 66, 117
   \              6B204275    
   \   0000005A   74746F6E2074       DC8 116, 116, 111, 110, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   00000064   207570206F6E       DC8 32, 117, 112, 32, 111, 110, 101, 32, 109, 101
   \              65206D65    
   \   0000006E   6E75206F7220       DC8 110, 117, 32, 111, 114, 32, 104, 111, 108, 100
   \              686F6C64    
   \   00000078   20666F72204D       DC8 32, 102, 111, 114, 32, 77, 97, 105, 110, 32
   \              61696E20    
   \   00000082   4D656E752E0A       DC8 77, 101, 110, 117, 46, 10, 10, 73, 99, 111
   \              0A49636F    
   \   0000008C   6E733A204361       DC8 110, 115, 58, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   00000096   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 83
   \              732C2053    
   \   000000A0   442043617264       DC8 68, 32, 67, 97, 114, 100, 32, 83, 116, 97
   \              20537461    
   \   000000AA   7475732C2047       DC8 116, 117, 115, 44, 32, 71, 80, 83, 32, 83
   \              50532053    
   \   000000B4   69676E616C20       DC8 105, 103, 110, 97, 108, 32, 83, 116, 114, 101
   \              53747265    
   \   000000BE   6E6774680000       DC8 110, 103, 116, 104, 0, 0
    537          "Reset Time to clear the predictive lap time information for this track.\
    538          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    539          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    540          

   \                                 In section .text, align 4, keep-with-next
    541          const char DISPLAY_SETTINGS_INFO[] =
   \                     DISPLAY_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 276 bytes
   \   00000000   55736520736C       DC8 85, 115, 101, 32, 115, 108, 105, 100, 101, 114
   \              69646572    
   \   0000000A   7320746F2073       DC8 115, 32, 116, 111, 32, 115, 101, 116, 32, 76
   \              6574204C    
   \   00000014   434420626163       DC8 67, 68, 32, 98, 97, 99, 107, 108, 105, 103
   \              6B6C6967    
   \   0000001E   687420616E64       DC8 104, 116, 32, 97, 110, 100, 32, 84, 97, 99
   \              20546163    
   \   00000028   6820616E6420       DC8 104, 32, 97, 110, 100, 32, 87, 97, 114, 110
   \              5761726E    
   \   00000032   696E67204C45       DC8 105, 110, 103, 32, 76, 69, 68, 32, 105, 110
   \              4420696E    
   \   0000003C   74656E736974       DC8 116, 101, 110, 115, 105, 116, 121, 46, 10, 10
   \              792E0A0A    
   \   00000046   4175746F2D41       DC8 65, 117, 116, 111, 45, 65, 100, 106, 117, 115
   \              646A7573    
   \   00000050   74204F4E2077       DC8 116, 32, 79, 78, 32, 119, 105, 108, 108, 32
   \              696C6C20    
   \   0000005A   6175746F6D61       DC8 97, 117, 116, 111, 109, 97, 116, 105, 99, 97
   \              74696361    
   \   00000064   6C6C79206164       DC8 108, 108, 121, 32, 97, 100, 106, 117, 115, 116
   \              6A757374    
   \   0000006E   206272696768       DC8 32, 98, 114, 105, 103, 104, 116, 110, 101, 115
   \              746E6573    
   \   00000078   7320666F7220       DC8 115, 32, 102, 111, 114, 32, 99, 104, 97, 110
   \              6368616E    
   \   00000082   67657320696E       DC8 103, 101, 115, 32, 105, 110, 32, 97, 109, 98
   \              20616D62    
   \   0000008C   69656E74206C       DC8 105, 101, 110, 116, 32, 108, 105, 103, 104, 116
   \              69676874    
   \   00000096   2E0A0A507265       DC8 46, 10, 10, 80, 114, 101, 115, 115, 32, 82
   \              73732052    
   \   000000A0   656420426163       DC8 101, 100, 32, 66, 97, 99, 107, 32, 66, 117
   \              6B204275    
   \   000000AA   74746F6E2074       DC8 116, 116, 111, 110, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   000000B4   207570206F6E       DC8 32, 117, 112, 32, 111, 110, 101, 32, 109, 101
   \              65206D65    
   \   000000BE   6E75206F7220       DC8 110, 117, 32, 111, 114, 32, 104, 111, 108, 100
   \              686F6C64    
   \   000000C8   20666F72204D       DC8 32, 102, 111, 114, 32, 77, 97, 105, 110, 32
   \              61696E20    
   \   000000D2   4D656E752E0A       DC8 77, 101, 110, 117, 46, 10, 10, 73, 99, 111
   \              0A49636F    
   \   000000DC   6E733A204361       DC8 110, 115, 58, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   000000E6   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 83
   \              732C2053    
   \   000000F0   442043617264       DC8 68, 32, 67, 97, 114, 100, 32, 83, 116, 97
   \              20537461    
   \   000000FA   7475732C2047       DC8 116, 117, 115, 44, 32, 71, 80, 83, 32, 83
   \              50532053    
   \   00000104   69676E616C20       DC8 105, 103, 110, 97, 108, 32, 83, 116, 114, 101
   \              53747265    
   \   0000010E   6E6774680000       DC8 110, 103, 116, 104, 0, 0
    542          "Use sliders to set LCD backlight and Tach and Warning LED intensity.\
    543          \n\nAuto-Adjust ON will automatically adjust brightness for changes in ambient light.\
    544          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    545          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    546          

   \                                 In section .text, align 4, keep-with-next
    547          const char UNITS_SETTINGS_INFO[] =
   \                     UNITS_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 152 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 85, 83, 32
   \              20555320    
   \   0000000A   6F72204D6574       DC8 111, 114, 32, 77, 101, 116, 114, 105, 99, 32
   \              72696320    
   \   00000014   756E6974732E       DC8 117, 110, 105, 116, 115, 46, 10, 10, 80, 114
   \              0A0A5072    
   \   0000001E   657373205265       DC8 101, 115, 115, 32, 82, 101, 100, 32, 66, 97
   \              64204261    
   \   00000028   636B20427574       DC8 99, 107, 32, 66, 117, 116, 116, 111, 110, 32
   \              746F6E20    
   \   00000032   746F20676F20       DC8 116, 111, 32, 103, 111, 32, 117, 112, 32, 111
   \              7570206F    
   \   0000003C   6E65206D656E       DC8 110, 101, 32, 109, 101, 110, 117, 32, 111, 114
   \              75206F72    
   \   00000046   20686F6C6420       DC8 32, 104, 111, 108, 100, 32, 102, 111, 114, 32
   \              666F7220    
   \   00000050   4D61696E204D       DC8 77, 97, 105, 110, 32, 77, 101, 110, 117, 46
   \              656E752E    
   \   0000005A   0A0A49636F6E       DC8 10, 10, 73, 99, 111, 110, 115, 58, 32, 67
   \              733A2043    
   \   00000064   616D65726120       DC8 97, 109, 101, 114, 97, 32, 83, 116, 97, 116
   \              53746174    
   \   0000006E   75732C205344       DC8 117, 115, 44, 32, 83, 68, 32, 67, 97, 114
   \              20436172    
   \   00000078   642053746174       DC8 100, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   00000082   475053205369       DC8 71, 80, 83, 32, 83, 105, 103, 110, 97, 108
   \              676E616C    
   \   0000008C   20537472656E       DC8 32, 83, 116, 114, 101, 110, 103, 116, 104, 0
   \              67746800    
   \   00000096   0000               DC8 0, 0
    548          "Select US or Metric units.\
    549          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    550          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    551          

   \                                 In section .text, align 4, keep-with-next
    552          const char TIME_SETTINGS_INFO[] =
   \                     TIME_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 596 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074696D65       DC8 116, 32, 116, 105, 109, 101, 32, 122, 111, 110
   \              207A6F6E    
   \   0000001E   652E0A0A4461       DC8 101, 46, 10, 10, 68, 97, 121, 108, 105, 103
   \              796C6967    
   \   00000028   687420536176       DC8 104, 116, 32, 83, 97, 118, 105, 110, 103, 115
   \              696E6773    
   \   00000032   204F4E2F4F46       DC8 32, 79, 78, 47, 79, 70, 70, 32, 119, 105
   \              46207769    
   \   0000003C   6C6C20616464       DC8 108, 108, 32, 97, 100, 100, 32, 111, 114, 32
   \              206F7220    
   \   00000046   737562747261       DC8 115, 117, 98, 116, 114, 97, 99, 116, 32, 97
   \              63742061    
   \   00000050   6E20686F7572       DC8 110, 32, 104, 111, 117, 114, 46, 10, 10, 87
   \              2E0A0A57    
   \   0000005A   68656E204E6F       DC8 104, 101, 110, 32, 78, 111, 114, 109, 97, 108
   \              726D616C    
   \   00000064   204750532069       DC8 32, 71, 80, 83, 32, 105, 115, 32, 115, 104
   \              73207368    
   \   0000006E   6F776E2C2073       DC8 111, 119, 110, 44, 32, 115, 121, 115, 116, 101
   \              79737465    
   \   00000078   6D2069732061       DC8 109, 32, 105, 115, 32, 97, 116, 116, 101, 109
   \              7474656D    
   \   00000082   7074696E6720       DC8 112, 116, 105, 110, 103, 32, 116, 111, 32, 117
   \              746F2075    
   \   0000008C   736520726561       DC8 115, 101, 32, 114, 101, 97, 108, 32, 71, 80
   \              6C204750    
   \   00000096   53207369676E       DC8 83, 32, 115, 105, 103, 110, 97, 108, 46, 32
   \              616C2E20    
   \   000000A0   507265737369       DC8 80, 114, 101, 115, 115, 105, 110, 103, 32, 116
   \              6E672074    
   \   000000AA   686973206275       DC8 104, 105, 115, 32, 98, 117, 116, 116, 111, 110
   \              74746F6E    
   \   000000B4   2077696C6C20       DC8 32, 119, 105, 108, 108, 32, 99, 97, 117, 115
   \              63617573    
   \   000000BE   652073797374       DC8 101, 32, 115, 121, 115, 116, 101, 109, 32, 116
   \              656D2074    
   \   000000C8   6F20656E7465       DC8 111, 32, 101, 110, 116, 101, 114, 32, 71, 80
   \              72204750    
   \   000000D2   532053696D75       DC8 83, 32, 83, 105, 109, 117, 108, 97, 116, 105
   \              6C617469    
   \   000000DC   6F6E204D6F64       DC8 111, 110, 32, 77, 111, 100, 101, 46, 10, 10
   \              652E0A0A    
   \   000000E6   5768656E2053       DC8 87, 104, 101, 110, 32, 83, 105, 109, 117, 108
   \              696D756C    
   \   000000F0   6174696E6720       DC8 97, 116, 105, 110, 103, 32, 71, 80, 83, 32
   \              47505320    
   \   000000FA   69732073686F       DC8 105, 115, 32, 115, 104, 111, 119, 110, 44, 32
   \              776E2C20    
   \   00000104   73797374656D       DC8 115, 121, 115, 116, 101, 109, 32, 105, 115, 32
   \              20697320    
   \   0000010E   7573696E6720       DC8 117, 115, 105, 110, 103, 32, 97, 32, 102, 97
   \              61206661    
   \   00000118   6B6520475053       DC8 107, 101, 32, 71, 80, 83, 32, 115, 105, 103
   \              20736967    
   \   00000122   6E616C2E2054       DC8 110, 97, 108, 46, 32, 84, 104, 105, 115, 32
   \              68697320    
   \   0000012C   697320757365       DC8 105, 115, 32, 117, 115, 101, 102, 117, 108, 32
   \              66756C20    
   \   00000136   666F72207465       DC8 102, 111, 114, 32, 116, 101, 115, 116, 105, 110
   \              7374696E    
   \   00000140   672063616D65       DC8 103, 32, 99, 97, 109, 101, 114, 97, 115, 32
   \              72617320    
   \   0000014A   6F7220646F69       DC8 111, 114, 32, 100, 111, 105, 110, 103, 32, 100
   \              6E672064    
   \   00000154   796E6F207275       DC8 121, 110, 111, 32, 114, 117, 110, 115, 32, 119
   \              6E732077    
   \   0000015E   68656E204750       DC8 104, 101, 110, 32, 71, 80, 83, 32, 115, 105
   \              53207369    
   \   00000168   676E616C2063       DC8 103, 110, 97, 108, 32, 99, 97, 110, 110, 111
   \              616E6E6F    
   \   00000172   742062652072       DC8 116, 32, 98, 101, 32, 114, 101, 99, 101, 105
   \              65636569    
   \   0000017C   7665642E2050       DC8 118, 101, 100, 46, 32, 80, 114, 101, 115, 115
   \              72657373    
   \   00000186   696E67207468       DC8 105, 110, 103, 32, 116, 104, 105, 115, 32, 98
   \              69732062    
   \   00000190   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 119, 105, 108, 108
   \              77696C6C    
   \   0000019A   206361757365       DC8 32, 99, 97, 117, 115, 101, 32, 115, 121, 115
   \              20737973    
   \   000001A4   74656D20746F       DC8 116, 101, 109, 32, 116, 111, 32, 115, 116, 111
   \              2073746F    
   \   000001AE   702073696D75       DC8 112, 32, 115, 105, 109, 117, 108, 97, 116, 105
   \              6C617469    
   \   000001B8   6F6E20616E64       DC8 111, 110, 32, 97, 110, 100, 32, 101, 110, 116
   \              20656E74    
   \   000001C2   6572204E6F72       DC8 101, 114, 32, 78, 111, 114, 109, 97, 108, 32
   \              6D616C20    
   \   000001CC   475053204D6F       DC8 71, 80, 83, 32, 77, 111, 100, 101, 46, 10
   \              64652E0A    
   \   000001D6   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   000001E0   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   000001EA   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000001F4   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   000001FE   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   00000208   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   00000212   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   0000021C   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   00000226   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   00000230   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   0000023A   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   00000244   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   0000024E   746800000000       DC8 116, 104, 0, 0, 0, 0
    553          "Use list wheel to set time zone.\
    554          \n\nDaylight Savings ON/OFF will add or subtract an hour.\
    555          \n\nWhen Normal GPS is shown, system is attempting to use real GPS signal. Pressing this button will cause system to enter GPS Simulation Mode.\
    556          \n\nWhen Simulating GPS is shown, system is using a fake GPS signal. This is useful for testing cameras or doing dyno runs when GPS signal cannot \
    557          be received. Pressing this button will cause system to stop simulation and enter Normal GPS Mode.\
    558          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    559          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    560          

   \                                 In section .text, align 4, keep-with-next
    561          const char AUTOSTART_SETTINGS_INFO[] =
   \                     AUTOSTART_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 672 bytes
   \   00000000   4175746F2050       DC8 65, 117, 116, 111, 32, 80, 111, 119, 101, 114
   \              6F776572    
   \   0000000A   204F6E207377       DC8 32, 79, 110, 32, 115, 119, 105, 116, 99, 104
   \              69746368    
   \   00000014   657320626574       DC8 101, 115, 32, 98, 101, 116, 119, 101, 101, 110
   \              7765656E    
   \   0000001E   20706F776572       DC8 32, 112, 111, 119, 101, 114, 32, 111, 110, 32
   \              206F6E20    
   \   00000028   776974682054       DC8 119, 105, 116, 104, 32, 84, 114, 97, 113, 68
   \              72617144    
   \   00000032   617368206275       DC8 97, 115, 104, 32, 98, 117, 116, 116, 111, 110
   \              74746F6E    
   \   0000003C   20616E642070       DC8 32, 97, 110, 100, 32, 112, 111, 119, 101, 114
   \              6F776572    
   \   00000046   206F6E207768       DC8 32, 111, 110, 32, 119, 104, 101, 110, 32, 112
   \              656E2070    
   \   00000050   6F7765722069       DC8 111, 119, 101, 114, 32, 105, 115, 32, 97, 112
   \              73206170    
   \   0000005A   706C69656420       DC8 112, 108, 105, 101, 100, 32, 116, 111, 32, 116
   \              746F2074    
   \   00000064   686520547261       DC8 104, 101, 32, 84, 114, 97, 113, 109, 97, 116
   \              716D6174    
   \   0000006E   652073797374       DC8 101, 32, 115, 121, 115, 116, 101, 109, 46, 32
   \              656D2E20    
   \   00000078   4E6F74652074       DC8 78, 111, 116, 101, 32, 116, 104, 97, 116, 32
   \              68617420    
   \   00000082   4175746F2050       DC8 65, 117, 116, 111, 32, 80, 111, 119, 101, 114
   \              6F776572    
   \   0000008C   204F6E207769       DC8 32, 79, 110, 32, 119, 105, 108, 108, 32, 100
   \              6C6C2064    
   \   00000096   697361626C65       DC8 105, 115, 97, 98, 108, 101, 32, 116, 104, 101
   \              20746865    
   \   000000A0   20706F776572       DC8 32, 112, 111, 119, 101, 114, 32, 98, 117, 116
   \              20627574    
   \   000000AA   746F6E20616E       DC8 116, 111, 110, 32, 97, 110, 100, 32, 111, 110
   \              64206F6E    
   \   000000B4   6C7920776F72       DC8 108, 121, 32, 119, 111, 114, 107, 115, 32, 119
   \              6B732077    
   \   000000BE   68656E20636F       DC8 104, 101, 110, 32, 99, 111, 110, 110, 101, 99
   \              6E6E6563    
   \   000000C8   74656420746F       DC8 116, 101, 100, 32, 116, 111, 32, 97, 32, 115
   \              20612073    
   \   000000D2   65636F6E6420       DC8 101, 99, 111, 110, 100, 32, 103, 101, 110, 101
   \              67656E65    
   \   000000DC   726174696F6E       DC8 114, 97, 116, 105, 111, 110, 32, 83, 101, 110
   \              2053656E    
   \   000000E6   736F7220556E       DC8 115, 111, 114, 32, 85, 110, 105, 116, 32, 40
   \              69742028    
   \   000000F0   626C61636B20       DC8 98, 108, 97, 99, 107, 32, 108, 97, 98, 101
   \              6C616265    
   \   000000FA   6C2C20332061       DC8 108, 44, 32, 51, 32, 97, 120, 105, 115, 41
   \              78697329    
   \   00000104   2E0A0A417574       DC8 46, 10, 10, 65, 117, 116, 111, 83, 116, 97
   \              6F537461    
   \   0000010E   727420746F20       DC8 114, 116, 32, 116, 111, 32, 82, 97, 99, 101
   \              52616365    
   \   00000118   205363726565       DC8 32, 83, 99, 114, 101, 101, 110, 115, 32, 119
   \              6E732077    
   \   00000122   696C6C20616C       DC8 105, 108, 108, 32, 97, 108, 108, 111, 119, 32
   \              6C6F7720    
   \   0000012C   74686520756E       DC8 116, 104, 101, 32, 117, 110, 105, 116, 32, 116
   \              69742074    
   \   00000136   6F2073746172       DC8 111, 32, 115, 116, 97, 114, 116, 32, 114, 101
   \              74207265    
   \   00000140   636F7264696E       DC8 99, 111, 114, 100, 105, 110, 103, 32, 105, 102
   \              67206966    
   \   0000014A   20756E697420       DC8 32, 117, 110, 105, 116, 32, 119, 97, 115, 32
   \              77617320    
   \   00000154   706F77657265       DC8 112, 111, 119, 101, 114, 101, 100, 32, 100, 111
   \              6420646F    
   \   0000015E   776E206F6E20       DC8 119, 110, 32, 111, 110, 32, 97, 32, 114, 101
   \              61207265    
   \   00000168   636F7264696E       DC8 99, 111, 114, 100, 105, 110, 103, 32, 115, 99
   \              67207363    
   \   00000172   7265656E2E20       DC8 114, 101, 101, 110, 46, 32, 65, 117, 116, 111
   \              4175746F    
   \   0000017C   537461727420       DC8 83, 116, 97, 114, 116, 32, 116, 111, 32, 77
   \              746F204D    
   \   00000186   656E75205363       DC8 101, 110, 117, 32, 83, 99, 114, 101, 101, 110
   \              7265656E    
   \   00000190   732077696C6C       DC8 115, 32, 119, 105, 108, 108, 32, 115, 116, 97
   \              20737461    
   \   0000019A   7274206F6E20       DC8 114, 116, 32, 111, 110, 32, 116, 104, 101, 32
   \              74686520    
   \   000001A4   6C617374206D       DC8 108, 97, 115, 116, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   000001AE   73637265656E       DC8 115, 99, 114, 101, 101, 110, 32, 118, 105, 115
   \              20766973    
   \   000001B8   697465642E0A       DC8 105, 116, 101, 100, 46, 10, 10, 80, 114, 101
   \              0A507265    
   \   000001C2   737320526563       DC8 115, 115, 32, 82, 101, 99, 111, 114, 100, 32
   \              6F726420    
   \   000001CC   53657474696E       DC8 83, 101, 116, 116, 105, 110, 103, 115, 32, 116
   \              67732074    
   \   000001D6   6F2073657420       DC8 111, 32, 115, 101, 116, 32, 97, 32, 115, 112
   \              61207370    
   \   000001E0   65656420746F       DC8 101, 101, 100, 32, 116, 111, 32, 115, 116, 97
   \              20737461    
   \   000001EA   727420726563       DC8 114, 116, 32, 114, 101, 99, 111, 114, 100, 105
   \              6F726469    
   \   000001F4   6E6720616E64       DC8 110, 103, 32, 97, 110, 100, 32, 97, 32, 115
   \              20612073    
   \   000001FE   697474696E67       DC8 105, 116, 116, 105, 110, 103, 32, 115, 116, 105
   \              20737469    
   \   00000208   6C6C2074696D       DC8 108, 108, 32, 116, 105, 109, 101, 32, 116, 111
   \              6520746F    
   \   00000212   2073746F7020       DC8 32, 115, 116, 111, 112, 32, 114, 101, 99, 111
   \              7265636F    
   \   0000021C   7264696E672E       DC8 114, 100, 105, 110, 103, 46, 10, 10, 80, 114
   \              0A0A5072    
   \   00000226   657373205265       DC8 101, 115, 115, 32, 82, 101, 100, 32, 66, 97
   \              64204261    
   \   00000230   636B20427574       DC8 99, 107, 32, 66, 117, 116, 116, 111, 110, 32
   \              746F6E20    
   \   0000023A   746F20676F20       DC8 116, 111, 32, 103, 111, 32, 117, 112, 32, 111
   \              7570206F    
   \   00000244   6E65206D656E       DC8 110, 101, 32, 109, 101, 110, 117, 32, 111, 114
   \              75206F72    
   \   0000024E   20686F6C6420       DC8 32, 104, 111, 108, 100, 32, 102, 111, 114, 32
   \              666F7220    
   \   00000258   4D61696E204D       DC8 77, 97, 105, 110, 32, 77, 101, 110, 117, 46
   \              656E752E    
   \   00000262   0A0A49636F6E       DC8 10, 10, 73, 99, 111, 110, 115, 58, 32, 67
   \              733A2043    
   \   0000026C   616D65726120       DC8 97, 109, 101, 114, 97, 32, 83, 116, 97, 116
   \              53746174    
   \   00000276   75732C205344       DC8 117, 115, 44, 32, 83, 68, 32, 67, 97, 114
   \              20436172    
   \   00000280   642053746174       DC8 100, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   0000028A   475053205369       DC8 71, 80, 83, 32, 83, 105, 103, 110, 97, 108
   \              676E616C    
   \   00000294   20537472656E       DC8 32, 83, 116, 114, 101, 110, 103, 116, 104, 0
   \              67746800    
   \   0000029E   0000               DC8 0, 0
    562          "Auto Power On switches between power on with TraqDash button and power on when power is applied to the Traqmate system. \
    563          Note that Auto Power On will disable the power button and only works when connected to a second generation Sensor Unit (black label, 3 axis).\
    564          \n\nAutoStart to Race Screens will allow the unit to start recording if unit was powered down on a recording screen. \
    565          AutoStart to Menu Screens will start on the last menu screen visited.\
    566          \n\nPress Record Settings to set a speed to start recording and a sitting still time to stop recording.\
    567          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    568          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    569          

   \                                 In section .text, align 4, keep-with-next
    570          const char STORAGE_SETTINGS_INFO[] =
   \                     STORAGE_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 604 bytes
   \   00000000   457261736520       DC8 69, 114, 97, 115, 101, 32, 65, 108, 108, 32
   \              416C6C20    
   \   0000000A   53657373696F       DC8 83, 101, 115, 115, 105, 111, 110, 115, 32, 119
   \              6E732077    
   \   00000014   696C6C206572       DC8 105, 108, 108, 32, 101, 114, 97, 115, 101, 32
   \              61736520    
   \   0000001E   616C6C206461       DC8 97, 108, 108, 32, 100, 97, 116, 97, 32, 115
   \              74612073    
   \   00000028   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 115, 32, 102, 114
   \              73206672    
   \   00000032   6F6D20746865       DC8 111, 109, 32, 116, 104, 101, 32, 83, 68, 32
   \              20534420    
   \   0000003C   636172642062       DC8 99, 97, 114, 100, 32, 98, 117, 116, 32, 114
   \              75742072    
   \   00000046   657461696E20       DC8 101, 116, 97, 105, 110, 32, 111, 116, 104, 101
   \              6F746865    
   \   00000050   722073657474       DC8 114, 32, 115, 101, 116, 116, 105, 110, 103, 115
   \              696E6773    
   \   0000005A   2E0A0A466163       DC8 46, 10, 10, 70, 97, 99, 116, 111, 114, 121
   \              746F7279    
   \   00000064   204465666175       DC8 32, 68, 101, 102, 97, 117, 108, 116, 115, 32
   \              6C747320    
   \   0000006E   77696C6C2065       DC8 119, 105, 108, 108, 32, 101, 114, 97, 115, 101
   \              72617365    
   \   00000078   20616C6C2064       DC8 32, 97, 108, 108, 32, 100, 97, 116, 97, 32
   \              61746120    
   \   00000082   73657373696F       DC8 115, 101, 115, 115, 105, 111, 110, 115, 44, 32
   \              6E732C20    
   \   0000008C   647269766572       DC8 100, 114, 105, 118, 101, 114, 115, 44, 32, 118
   \              732C2076    
   \   00000096   656869636C65       DC8 101, 104, 105, 99, 108, 101, 115, 44, 32, 97
   \              732C2061    
   \   000000A0   6E6420747261       DC8 110, 100, 32, 116, 114, 97, 99, 107, 115, 44
   \              636B732C    
   \   000000AA   20746F207265       DC8 32, 116, 111, 32, 114, 101, 116, 117, 114, 110
   \              7475726E    
   \   000000B4   20746F206661       DC8 32, 116, 111, 32, 102, 97, 99, 116, 111, 114
   \              63746F72    
   \   000000BE   792073657474       DC8 121, 32, 115, 101, 116, 116, 105, 110, 103, 115
   \              696E6773    
   \   000000C8   2E204E6F6E2D       DC8 46, 32, 78, 111, 110, 45, 84, 114, 97, 113
   \              54726171    
   \   000000D2   6D6174652064       DC8 109, 97, 116, 101, 32, 100, 97, 116, 97, 32
   \              61746120    
   \   000000DC   6973206E6F74       DC8 105, 115, 32, 110, 111, 116, 32, 97, 102, 102
   \              20616666    
   \   000000E6   65637465642E       DC8 101, 99, 116, 101, 100, 46, 10, 10, 70, 111
   \              0A0A466F    
   \   000000F0   726D61742053       DC8 114, 109, 97, 116, 32, 83, 68, 32, 67, 97
   \              44204361    
   \   000000FA   72642077696C       DC8 114, 100, 32, 119, 105, 108, 108, 32, 102, 111
   \              6C20666F    
   \   00000104   726D61742074       DC8 114, 109, 97, 116, 32, 116, 104, 101, 32, 99
   \              68652063    
   \   0000010E   61726420616E       DC8 97, 114, 100, 32, 97, 110, 100, 32, 114, 101
   \              64207265    
   \   00000118   73657420746F       DC8 115, 101, 116, 32, 116, 111, 32, 102, 97, 99
   \              20666163    
   \   00000122   746F72792073       DC8 116, 111, 114, 121, 32, 115, 101, 116, 116, 105
   \              65747469    
   \   0000012C   6E67732E2041       DC8 110, 103, 115, 46, 32, 65, 108, 108, 32, 100
   \              6C6C2064    
   \   00000136   617461206F6E       DC8 97, 116, 97, 32, 111, 110, 32, 83, 68, 32
   \              20534420    
   \   00000140   636172642069       DC8 99, 97, 114, 100, 32, 105, 115, 32, 108, 111
   \              73206C6F    
   \   0000014A   73742E0A0A50       DC8 115, 116, 46, 10, 10, 80, 101, 114, 115, 111
   \              6572736F    
   \   00000154   6E616C697A65       DC8 110, 97, 108, 105, 122, 101, 47, 87, 105, 70
   \              2F576946    
   \   0000015E   692077696C6C       DC8 105, 32, 119, 105, 108, 108, 32, 108, 101, 116
   \              206C6574    
   \   00000168   20796F752065       DC8 32, 121, 111, 117, 32, 101, 110, 116, 101, 114
   \              6E746572    
   \   00000172   20796F757220       DC8 32, 121, 111, 117, 114, 32, 79, 119, 110, 101
   \              4F776E65    
   \   0000017C   72204E616D65       DC8 114, 32, 78, 97, 109, 101, 32, 97, 110, 100
   \              20616E64    
   \   00000186   20436F6E7461       DC8 32, 67, 111, 110, 116, 97, 99, 116, 32, 73
   \              63742049    
   \   00000190   6E666F2C2063       DC8 110, 102, 111, 44, 32, 99, 111, 110, 102, 105
   \              6F6E6669    
   \   0000019A   677572652074       DC8 103, 117, 114, 101, 32, 116, 104, 101, 32, 87
   \              68652057    
   \   000001A4   69466920646F       DC8 105, 70, 105, 32, 100, 111, 119, 110, 108, 111
   \              776E6C6F    
   \   000001AE   616420666561       DC8 97, 100, 32, 102, 101, 97, 116, 117, 114, 101
   \              74757265    
   \   000001B8   20616E642073       DC8 32, 97, 110, 100, 32, 115, 104, 111, 119, 32
   \              686F7720    
   \   000001C2   73657269616C       DC8 115, 101, 114, 105, 97, 108, 32, 110, 117, 109
   \              206E756D    
   \   000001CC   62657220616E       DC8 98, 101, 114, 32, 97, 110, 100, 32, 98, 117
   \              64206275    
   \   000001D6   696C64206461       DC8 105, 108, 100, 32, 100, 97, 116, 101, 46, 10
   \              74652E0A    
   \   000001E0   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   000001EA   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   000001F4   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000001FE   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   00000208   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   00000212   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   0000021C   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   00000226   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   00000230   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   0000023A   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   00000244   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   0000024E   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   00000258   74680000           DC8 116, 104, 0, 0
    571          "Erase All Sessions will erase all data sessions from the SD card but retain other settings.\
    572          \n\nFactory Defaults will erase all data sessions, drivers, vehicles, and tracks, to return to factory settings. Non-Traqmate data is not affected.\
    573          \n\nFormat SD Card will format the card and reset to factory settings. All data on SD card is lost.\
    574          \n\nPersonalize/WiFi will let you enter your Owner Name and Contact Info, configure the WiFi download feature and show serial number and build date.\
    575          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    576          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    577          

   \                                 In section .text, align 4, keep-with-next
    578          const char PREDICTIVE_SCALE_INFO[] =
   \                     PREDICTIVE_SCALE_INFO:
   \   00000000                      ; Initializer data, 236 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 99, 104
   \              6F206368    
   \   00000014   6F6F73652074       DC8 111, 111, 115, 101, 32, 116, 104, 101, 32, 115
   \              68652073    
   \   0000001E   63616C652066       DC8 99, 97, 108, 101, 32, 102, 111, 114, 32, 116
   \              6F722074    
   \   00000028   686520707265       DC8 104, 101, 32, 112, 114, 101, 100, 105, 99, 116
   \              64696374    
   \   00000032   697665206C61       DC8 105, 118, 101, 32, 108, 97, 112, 32, 116, 105
   \              70207469    
   \   0000003C   6D6520677261       DC8 109, 101, 32, 103, 114, 97, 112, 104, 105, 99
   \              70686963    
   \   00000046   2E0A0A466F72       DC8 46, 10, 10, 70, 111, 114, 32, 101, 120, 97
   \              20657861    
   \   00000050   6D706C652C20       DC8 109, 112, 108, 101, 44, 32, 49, 32, 115, 101
   \              31207365    
   \   0000005A   636F6E64203D       DC8 99, 111, 110, 100, 32, 61, 32, 43, 45, 32
   \              202B2D20    
   \   00000064   31207365636F       DC8 49, 32, 115, 101, 99, 111, 110, 100, 46, 10
   \              6E642E0A    
   \   0000006E   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   00000078   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   00000082   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   0000008C   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   00000096   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   000000A0   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   000000AA   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   000000B4   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   000000BE   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   000000C8   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   000000D2   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   000000DC   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   000000E6   746800000000       DC8 116, 104, 0, 0, 0, 0
    579          "Use list wheel to choose the scale for the predictive lap time graphic.\
    580          \n\nFor example, 1 second = +- 1 second.\
    581          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    582          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    583          

   \                                 In section .text, align 4, keep-with-next
    584          const char TACH_SETTINGS_INFO[] =
   \                     TACH_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 596 bytes
   \   00000000   43757272656E       DC8 67, 117, 114, 114, 101, 110, 116, 32, 82, 80
   \              74205250    
   \   0000000A   4D206973206C       DC8 77, 32, 105, 115, 32, 108, 105, 118, 101, 32
   \              69766520    
   \   00000014   656E67696E65       DC8 101, 110, 103, 105, 110, 101, 32, 115, 112, 101
   \              20737065    
   \   0000001E   656420666F72       DC8 101, 100, 32, 102, 111, 114, 32, 114, 101, 102
   \              20726566    
   \   00000028   6572656E6365       DC8 101, 114, 101, 110, 99, 101, 46, 10, 10, 77
   \              2E0A0A4D    
   \   00000032   61782052504D       DC8 97, 120, 32, 82, 80, 77, 32, 116, 111, 32
   \              20746F20    
   \   0000003C   736574207468       DC8 115, 101, 116, 32, 116, 104, 101, 32, 116, 114
   \              65207472    
   \   00000046   756520726564       DC8 117, 101, 32, 114, 101, 100, 108, 105, 110, 101
   \              6C696E65    
   \   00000050   206F66207468       DC8 32, 111, 102, 32, 116, 104, 101, 32, 118, 101
   \              65207665    
   \   0000005A   6869636C652E       DC8 104, 105, 99, 108, 101, 46, 10, 10, 68, 114
   \              0A0A4472    
   \   00000064   616720726564       DC8 97, 103, 32, 114, 101, 100, 32, 115, 108, 105
   \              20736C69    
   \   0000006E   64657220746F       DC8 100, 101, 114, 32, 116, 111, 32, 82, 80, 77
   \              2052504D    
   \   00000078   207768657265       DC8 32, 119, 104, 101, 114, 101, 32, 114, 101, 100
   \              20726564    
   \   00000082   207368696674       DC8 32, 115, 104, 105, 102, 116, 32, 108, 105, 103
   \              206C6967    
   \   0000008C   68742077696C       DC8 104, 116, 32, 119, 105, 108, 108, 32, 105, 108
   \              6C20696C    
   \   00000096   6C756D696E61       DC8 108, 117, 109, 105, 110, 97, 116, 101, 46, 32
   \              74652E20    
   \   000000A0   546F75636820       DC8 84, 111, 117, 99, 104, 32, 99, 111, 114, 114
   \              636F7272    
   \   000000AA   6573706F6E64       DC8 101, 115, 112, 111, 110, 100, 105, 110, 103, 32
   \              696E6720    
   \   000000B4   6E756D626572       DC8 110, 117, 109, 98, 101, 114, 32, 118, 97, 108
   \              2076616C    
   \   000000BE   756520666F72       DC8 117, 101, 32, 102, 111, 114, 32, 102, 105, 110
   \              2066696E    
   \   000000C8   652074756E69       DC8 101, 32, 116, 117, 110, 105, 110, 103, 46, 10
   \              6E672E0A    
   \   000000D2   0A4472616720       DC8 10, 68, 114, 97, 103, 32, 121, 101, 108, 108
   \              79656C6C    
   \   000000DC   6F7720736C69       DC8 111, 119, 32, 115, 108, 105, 100, 101, 114, 32
   \              64657220    
   \   000000E6   746F2052504D       DC8 116, 111, 32, 82, 80, 77, 32, 119, 104, 101
   \              20776865    
   \   000000F0   726520666972       DC8 114, 101, 32, 102, 105, 114, 115, 116, 32, 121
   \              73742079    
   \   000000FA   656C6C6F7720       DC8 101, 108, 108, 111, 119, 32, 115, 104, 105, 102
   \              73686966    
   \   00000104   74206C696768       DC8 116, 32, 108, 105, 103, 104, 116, 32, 119, 105
   \              74207769    
   \   0000010E   6C6C20696C6C       DC8 108, 108, 32, 105, 108, 108, 117, 109, 105, 110
   \              756D696E    
   \   00000118   6174652E2054       DC8 97, 116, 101, 46, 32, 84, 111, 117, 99, 104
   \              6F756368    
   \   00000122   20636F727265       DC8 32, 99, 111, 114, 114, 101, 115, 112, 111, 110
   \              73706F6E    
   \   0000012C   64696E67206E       DC8 100, 105, 110, 103, 32, 110, 117, 109, 98, 101
   \              756D6265    
   \   00000136   722076616C75       DC8 114, 32, 118, 97, 108, 117, 101, 32, 102, 111
   \              6520666F    
   \   00000140   722066696E65       DC8 114, 32, 102, 105, 110, 101, 32, 116, 117, 110
   \              2074756E    
   \   0000014A   696E672E0A0A       DC8 105, 110, 103, 46, 10, 10, 68, 114, 97, 103
   \              44726167    
   \   00000154   20677265656E       DC8 32, 103, 114, 101, 101, 110, 32, 115, 108, 105
   \              20736C69    
   \   0000015E   64657220746F       DC8 100, 101, 114, 32, 116, 111, 32, 115, 101, 116
   \              20736574    
   \   00000168   20656E67696E       DC8 32, 101, 110, 103, 105, 110, 101, 32, 99, 121
   \              65206379    
   \   00000172   6C696E646572       DC8 108, 105, 110, 100, 101, 114, 115, 32, 111, 114
   \              73206F72    
   \   0000017C   20746F756368       DC8 32, 116, 111, 117, 99, 104, 32, 110, 117, 109
   \              206E756D    
   \   00000186   6265722E2045       DC8 98, 101, 114, 46, 32, 69, 110, 103, 105, 110
   \              6E67696E    
   \   00000190   652043796C20       DC8 101, 32, 67, 121, 108, 32, 105, 115, 32, 116
   \              69732074    
   \   0000019A   686520646976       DC8 104, 101, 32, 100, 105, 118, 105, 100, 101, 114
   \              69646572    
   \   000001A4   20666F722074       DC8 32, 102, 111, 114, 32, 116, 104, 101, 32, 82
   \              68652052    
   \   000001AE   504D2C206F66       DC8 80, 77, 44, 32, 111, 102, 116, 101, 110, 32
   \              74656E20    
   \   000001B8   657175616C20       DC8 101, 113, 117, 97, 108, 32, 116, 111, 32, 110
   \              746F206E    
   \   000001C2   756D62657220       DC8 117, 109, 98, 101, 114, 32, 111, 102, 32, 99
   \              6F662063    
   \   000001CC   796C696E6465       DC8 121, 108, 105, 110, 100, 101, 114, 115, 46, 10
   \              72732E0A    
   \   000001D6   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   000001E0   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   000001EA   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000001F4   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   000001FE   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   00000208   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   00000212   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   0000021C   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   00000226   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   00000230   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   0000023A   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   00000244   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   0000024E   746800000000       DC8 116, 104, 0, 0, 0, 0
    585          "Current RPM is live engine speed for reference.\
    586          \n\nMax RPM to set the true redline of the vehicle.\
    587          \n\nDrag red slider to RPM where red shift light will illuminate. \
    588          Touch corresponding number value for fine tuning.\
    589          \n\nDrag yellow slider to RPM where first yellow shift light will illuminate. \
    590          Touch corresponding number value for fine tuning.\
    591          \n\nDrag green slider to set engine cylinders or touch number. \
    592          Engine Cyl is the divider for the RPM, often equal to number of cylinders.\
    593          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    594          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    595          

   \                                 In section .text, align 4, keep-with-next
    596          const char TACH_PWREND_INFO[] =
   \                     TACH_PWREND_INFO:
   \   00000000                      ; Initializer data, 260 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074686520       DC8 116, 32, 116, 104, 101, 32, 112, 111, 119, 101
   \              706F7765    
   \   0000001E   7262616E6420       DC8 114, 98, 97, 110, 100, 32, 101, 110, 100, 32
   \              656E6420    
   \   00000028   746163682052       DC8 116, 97, 99, 104, 32, 82, 80, 77, 46, 10
   \              504D2E0A    
   \   00000032   0A5468697320       DC8 10, 84, 104, 105, 115, 32, 105, 115, 32, 116
   \              69732074    
   \   0000003C   686520656E64       DC8 104, 101, 32, 101, 110, 100, 32, 111, 102, 32
   \              206F6620    
   \   00000046   746865206772       DC8 116, 104, 101, 32, 103, 114, 101, 101, 110, 32
   \              65656E20    
   \   00000050   746163682061       DC8 116, 97, 99, 104, 32, 97, 114, 101, 97, 32
   \              72656120    
   \   0000005A   616E64206861       DC8 97, 110, 100, 32, 104, 97, 115, 32, 110, 111
   \              73206E6F    
   \   00000064   206566666563       DC8 32, 101, 102, 102, 101, 99, 116, 32, 111, 110
   \              74206F6E    
   \   0000006E   207468652074       DC8 32, 116, 104, 101, 32, 116, 97, 99, 104, 32
   \              61636820    
   \   00000078   7761726E696E       DC8 119, 97, 114, 110, 105, 110, 103, 32, 76, 69
   \              67204C45    
   \   00000082   44732E0A0A50       DC8 68, 115, 46, 10, 10, 80, 114, 101, 115, 115
   \              72657373    
   \   0000008C   205265642042       DC8 32, 82, 101, 100, 32, 66, 97, 99, 107, 32
   \              61636B20    
   \   00000096   427574746F6E       DC8 66, 117, 116, 116, 111, 110, 32, 116, 111, 32
   \              20746F20    
   \   000000A0   676F20757020       DC8 103, 111, 32, 117, 112, 32, 111, 110, 101, 32
   \              6F6E6520    
   \   000000AA   6D656E75206F       DC8 109, 101, 110, 117, 32, 111, 114, 32, 104, 111
   \              7220686F    
   \   000000B4   6C6420666F72       DC8 108, 100, 32, 102, 111, 114, 32, 77, 97, 105
   \              204D6169    
   \   000000BE   6E204D656E75       DC8 110, 32, 77, 101, 110, 117, 46, 10, 10, 73
   \              2E0A0A49    
   \   000000C8   636F6E733A20       DC8 99, 111, 110, 115, 58, 32, 67, 97, 109, 101
   \              43616D65    
   \   000000D2   726120537461       DC8 114, 97, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   000000DC   205344204361       DC8 32, 83, 68, 32, 67, 97, 114, 100, 32, 83
   \              72642053    
   \   000000E6   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 71, 80, 83
   \              20475053    
   \   000000F0   205369676E61       DC8 32, 83, 105, 103, 110, 97, 108, 32, 83, 116
   \              6C205374    
   \   000000FA   72656E677468       DC8 114, 101, 110, 103, 116, 104, 0, 0, 0, 0
   \              00000000    
    597          "Use list wheel to set the powerband end tach RPM.\
    598          \n\nThis is the end of the green tach area and has no effect on the tach warning LEDs.\
    599          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    600          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    601          

   \                                 In section .text, align 4, keep-with-next
    602          const char TACH_WARNING_INFO[] =
   \                     TACH_WARNING_INFO:
   \   00000000                      ; Initializer data, 356 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074686520       DC8 116, 32, 116, 104, 101, 32, 119, 97, 114, 110
   \              7761726E    
   \   0000001E   696E67207461       DC8 105, 110, 103, 32, 116, 97, 99, 104, 32, 82
   \              63682052    
   \   00000028   504D2E0A0A54       DC8 80, 77, 46, 10, 10, 84, 104, 105, 115, 32
   \              68697320    
   \   00000032   697320746865       DC8 105, 115, 32, 116, 104, 101, 32, 115, 116, 97
   \              20737461    
   \   0000003C   7274206F6620       DC8 114, 116, 32, 111, 102, 32, 116, 104, 101, 32
   \              74686520    
   \   00000046   79656C6C6F77       DC8 121, 101, 108, 108, 111, 119, 32, 116, 97, 99
   \              20746163    
   \   00000050   682061726561       DC8 104, 32, 97, 114, 101, 97, 32, 97, 110, 100
   \              20616E64    
   \   0000005A   207374617274       DC8 32, 115, 116, 97, 114, 116, 105, 110, 103, 32
   \              696E6720    
   \   00000064   52504D20666F       DC8 82, 80, 77, 32, 102, 111, 114, 32, 119, 97
   \              72207761    
   \   0000006E   726E696E6720       DC8 114, 110, 105, 110, 103, 32, 76, 69, 68, 115
   \              4C454473    
   \   00000078   2E0A0A546865       DC8 46, 10, 10, 84, 104, 101, 32, 82, 80, 77
   \              2052504D    
   \   00000082   206265747765       DC8 32, 98, 101, 116, 119, 101, 101, 110, 32, 87
   \              656E2057    
   \   0000008C   41524E494E47       DC8 65, 82, 78, 73, 78, 71, 32, 97, 110, 100
   \              20616E64    
   \   00000096   205245444C49       DC8 32, 82, 69, 68, 76, 73, 78, 69, 32, 105
   \              4E452069    
   \   000000A0   732064697669       DC8 115, 32, 100, 105, 118, 105, 100, 101, 100, 32
   \              64656420    
   \   000000AA   6576656E6C79       DC8 101, 118, 101, 110, 108, 121, 32, 116, 111, 32
   \              20746F20    
   \   000000B4   736574207468       DC8 115, 101, 116, 32, 116, 104, 101, 32, 82, 80
   \              65205250    
   \   000000BE   4D2077686572       DC8 77, 32, 119, 104, 101, 114, 101, 32, 116, 104
   \              65207468    
   \   000000C8   652079656C6C       DC8 101, 32, 121, 101, 108, 108, 111, 119, 32, 76
   \              6F77204C    
   \   000000D2   454473207769       DC8 69, 68, 115, 32, 119, 105, 108, 108, 32, 105
   \              6C6C2069    
   \   000000DC   6C6C756D696E       DC8 108, 108, 117, 109, 105, 110, 97, 116, 101, 46
   \              6174652E    
   \   000000E6   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000000F0   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   000000FA   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   00000104   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   0000010E   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   00000118   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   00000122   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   0000012C   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   00000136   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   00000140   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   0000014A   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   00000154   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   0000015E   677468000000       DC8 103, 116, 104, 0, 0, 0
    603          "Use list wheel to set the warning tach RPM.\
    604          \n\nThis is the start of the yellow tach area and starting RPM for warning LEDs.\
    605          \n\nThe RPM between WARNING and REDLINE is divided evenly to set the RPM where the yellow LEDs will illuminate.\
    606          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    607          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    608          

   \                                 In section .text, align 4, keep-with-next
    609          const char TACH_REDLINE_INFO[] =
   \                     TACH_REDLINE_INFO:
   \   00000000                      ; Initializer data, 336 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074686520       DC8 116, 32, 116, 104, 101, 32, 114, 101, 100, 108
   \              7265646C    
   \   0000001E   696E65207461       DC8 105, 110, 101, 32, 116, 97, 99, 104, 32, 82
   \              63682052    
   \   00000028   504D2E0A0A54       DC8 80, 77, 46, 10, 10, 84, 104, 105, 115, 32
   \              68697320    
   \   00000032   697320746865       DC8 105, 115, 32, 116, 104, 101, 32, 82, 80, 77
   \              2052504D    
   \   0000003C   207768657265       DC8 32, 119, 104, 101, 114, 101, 32, 116, 104, 101
   \              20746865    
   \   00000046   207265642074       DC8 32, 114, 101, 100, 32, 116, 97, 99, 104, 32
   \              61636820    
   \   00000050   4C4544207769       DC8 76, 69, 68, 32, 119, 105, 108, 108, 32, 105
   \              6C6C2069    
   \   0000005A   6C6C756D696E       DC8 108, 108, 117, 109, 105, 110, 97, 116, 101, 46
   \              6174652E    
   \   00000064   0A0A54686520       DC8 10, 10, 84, 104, 101, 32, 82, 80, 77, 32
   \              52504D20    
   \   0000006E   626574776565       DC8 98, 101, 116, 119, 101, 101, 110, 32, 87, 65
   \              6E205741    
   \   00000078   524E494E4720       DC8 82, 78, 73, 78, 71, 32, 97, 110, 100, 32
   \              616E6420    
   \   00000082   5245444C494E       DC8 82, 69, 68, 76, 73, 78, 69, 32, 105, 115
   \              45206973    
   \   0000008C   206469766964       DC8 32, 100, 105, 118, 105, 100, 101, 100, 32, 101
   \              65642065    
   \   00000096   76656E6C7920       DC8 118, 101, 110, 108, 121, 32, 116, 111, 32, 115
   \              746F2073    
   \   000000A0   657420746865       DC8 101, 116, 32, 116, 104, 101, 32, 82, 80, 77
   \              2052504D    
   \   000000AA   207768657265       DC8 32, 119, 104, 101, 114, 101, 32, 116, 104, 101
   \              20746865    
   \   000000B4   2079656C6C6F       DC8 32, 121, 101, 108, 108, 111, 119, 32, 76, 69
   \              77204C45    
   \   000000BE   44732077696C       DC8 68, 115, 32, 119, 105, 108, 108, 32, 105, 108
   \              6C20696C    
   \   000000C8   6C756D696E61       DC8 108, 117, 109, 105, 110, 97, 116, 101, 46, 10
   \              74652E0A    
   \   000000D2   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   000000DC   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   000000E6   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000000F0   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   000000FA   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   00000104   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   0000010E   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   00000118   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   00000122   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   0000012C   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   00000136   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   00000140   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   0000014A   746800000000       DC8 116, 104, 0, 0, 0, 0
    610          "Use list wheel to set the redline tach RPM.\
    611          \n\nThis is the RPM where the red tach LED will illuminate.\
    612          \n\nThe RPM between WARNING and REDLINE is divided evenly to set the RPM where the yellow LEDs will illuminate.\
    613          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    614          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    615          

   \                                 In section .text, align 4, keep-with-next
    616          const char TACH_MAXRPM_INFO[] =
   \                     TACH_MAXRPM_INFO:
   \   00000000                      ; Initializer data, 256 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074686520       DC8 116, 32, 116, 104, 101, 32, 109, 97, 120, 105
   \              6D617869    
   \   0000001E   6D756D207461       DC8 109, 117, 109, 32, 116, 97, 99, 104, 32, 82
   \              63682052    
   \   00000028   504D2E0A0A54       DC8 80, 77, 46, 10, 10, 84, 104, 105, 115, 32
   \              68697320    
   \   00000032   697320746865       DC8 105, 115, 32, 116, 104, 101, 32, 109, 97, 120
   \              206D6178    
   \   0000003C   696D756D2076       DC8 105, 109, 117, 109, 32, 118, 97, 108, 117, 101
   \              616C7565    
   \   00000046   20666F722074       DC8 32, 102, 111, 114, 32, 116, 104, 101, 32, 116
   \              68652074    
   \   00000050   616368206469       DC8 97, 99, 104, 32, 100, 105, 115, 112, 108, 97
   \              73706C61    
   \   0000005A   7920616E6420       DC8 121, 32, 97, 110, 100, 32, 116, 104, 101, 32
   \              74686520    
   \   00000064   6C696D697420       DC8 108, 105, 109, 105, 116, 32, 102, 111, 114, 32
   \              666F7220    
   \   0000006E   746865205472       DC8 116, 104, 101, 32, 84, 114, 97, 113, 118, 105
   \              61717669    
   \   00000078   657720677261       DC8 101, 119, 32, 103, 114, 97, 112, 104, 46, 10
   \              70682E0A    
   \   00000082   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   0000008C   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   00000096   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000000A0   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   000000AA   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   000000B4   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   000000BE   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   000000C8   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   000000D2   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   000000DC   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   000000E6   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   000000F0   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   000000FA   746800000000       DC8 116, 104, 0, 0, 0, 0
    617          "Use list wheel to set the maximum tach RPM.\
    618          \n\nThis is the maximum value for the tach display and the limit for the Traqview graph.\
    619          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    620          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    621          

   \                                 In section .text, align 4, keep-with-next
    622          const char NUM_CYL_INFO[] =
   \                     NUM_CYL_INFO:
   \   00000000                      ; Initializer data, 276 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742064697669       DC8 116, 32, 100, 105, 118, 105, 100, 101, 114, 32
   \              64657220    
   \   0000001E   666F72207468       DC8 102, 111, 114, 32, 116, 104, 101, 32, 82, 80
   \              65205250    
   \   00000028   4D20746F2061       DC8 77, 32, 116, 111, 32, 97, 100, 106, 117, 115
   \              646A7573    
   \   00000032   742074686520       DC8 116, 32, 116, 104, 101, 32, 116, 97, 99, 104
   \              74616368    
   \   0000003C   2076616C7565       DC8 32, 118, 97, 108, 117, 101, 32, 100, 105, 115
   \              20646973    
   \   00000046   706C61796564       DC8 112, 108, 97, 121, 101, 100, 46, 10, 10, 78
   \              2E0A0A4E    
   \   00000050   4F54453A2046       DC8 79, 84, 69, 58, 32, 70, 111, 114, 32, 69
   \              6F722045    
   \   0000005A   435520746163       DC8 67, 85, 32, 116, 97, 99, 104, 32, 119, 105
   \              68207769    
   \   00000064   726520636F6E       DC8 114, 101, 32, 99, 111, 110, 110, 101, 99, 116
   \              6E656374    
   \   0000006E   696F6E2C2075       DC8 105, 111, 110, 44, 32, 117, 115, 101, 32, 99
   \              73652063    
   \   00000078   796C696E6465       DC8 121, 108, 105, 110, 100, 101, 114, 115, 32, 61
   \              7273203D    
   \   00000082   2031206F7220       DC8 32, 49, 32, 111, 114, 32, 99, 121, 108, 105
   \              63796C69    
   \   0000008C   6E6465727320       DC8 110, 100, 101, 114, 115, 32, 61, 32, 50, 46
   \              3D20322E    
   \   00000096   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000000A0   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   000000AA   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   000000B4   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   000000BE   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   000000C8   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   000000D2   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   000000DC   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   000000E6   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   000000F0   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   000000FA   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   00000104   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   0000010E   677468000000       DC8 103, 116, 104, 0, 0, 0
    623          "Use list wheel to set divider for the RPM to adjust the tach value displayed.\
    624          \n\nNOTE: For ECU tach wire connection, use cylinders = 1 or cylinders = 2.\
    625          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    626          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    627          

   \                                 In section .text, align 4, keep-with-next
    628          const char AERO_GRIP_INFO[] =
   \                     AERO_GRIP_INFO:
   \   00000000                      ; Initializer data, 324 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 104, 111, 114
   \              20686F72    
   \   00000028   7365706F7765       DC8 115, 101, 112, 111, 119, 101, 114, 46, 10, 10
   \              722E0A0A    
   \   00000032   55736520736C       DC8 85, 115, 101, 32, 115, 108, 105, 100, 101, 114
   \              69646572    
   \   0000003C   20746F207365       DC8 32, 116, 111, 32, 115, 101, 116, 32, 97, 101
   \              74206165    
   \   00000046   726F64796E61       DC8 114, 111, 100, 121, 110, 97, 109, 105, 99, 32
   \              6D696320    
   \   00000050   64726167206F       DC8 100, 114, 97, 103, 32, 111, 102, 32, 118, 101
   \              66207665    
   \   0000005A   6869636C652E       DC8 104, 105, 99, 108, 101, 46, 10, 10, 85, 115
   \              0A0A5573    
   \   00000064   6520736C6964       DC8 101, 32, 115, 108, 105, 100, 101, 114, 32, 116
   \              65722074    
   \   0000006E   6F2073657420       DC8 111, 32, 115, 101, 116, 32, 116, 105, 114, 101
   \              74697265    
   \   00000078   206672696374       DC8 32, 102, 114, 105, 99, 116, 105, 111, 110, 32
   \              696F6E20    
   \   00000082   636F65666669       DC8 99, 111, 101, 102, 102, 105, 99, 105, 101, 110
   \              6369656E    
   \   0000008C   74206F662076       DC8 116, 32, 111, 102, 32, 118, 101, 104, 105, 99
   \              65686963    
   \   00000096   6C652E0A0A4E       DC8 108, 101, 46, 10, 10, 78, 79, 84, 69, 58
   \              4F54453A    
   \   000000A0   536565205573       DC8 83, 101, 101, 32, 85, 115, 101, 114, 32, 77
   \              6572204D    
   \   000000AA   616E75616C20       DC8 97, 110, 117, 97, 108, 32, 102, 111, 114, 32
   \              666F7220    
   \   000000B4   737567676573       DC8 115, 117, 103, 103, 101, 115, 116, 101, 100, 32
   \              74656420    
   \   000000BE   73657474696E       DC8 115, 101, 116, 116, 105, 110, 103, 115, 46, 10
   \              67732E0A    
   \   000000C8   0A5072657373       DC8 10, 80, 114, 101, 115, 115, 32, 82, 101, 100
   \              20526564    
   \   000000D2   204261636B20       DC8 32, 66, 97, 99, 107, 32, 66, 117, 116, 116
   \              42757474    
   \   000000DC   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 103, 111, 32, 117
   \              676F2075    
   \   000000E6   70206F6E6520       DC8 112, 32, 111, 110, 101, 32, 109, 101, 110, 117
   \              6D656E75    
   \   000000F0   206F7220686F       DC8 32, 111, 114, 32, 104, 111, 108, 100, 32, 102
   \              6C642066    
   \   000000FA   6F72204D6169       DC8 111, 114, 32, 77, 97, 105, 110, 32, 77, 101
   \              6E204D65    
   \   00000104   6E752E0A0A49       DC8 110, 117, 46, 10, 10, 73, 99, 111, 110, 115
   \              636F6E73    
   \   0000010E   3A2043616D65       DC8 58, 32, 67, 97, 109, 101, 114, 97, 32, 83
   \              72612053    
   \   00000118   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 83, 68, 32
   \              20534420    
   \   00000122   436172642053       DC8 67, 97, 114, 100, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   0000012C   732C20475053       DC8 115, 44, 32, 71, 80, 83, 32, 83, 105, 103
   \              20536967    
   \   00000136   6E616C205374       DC8 110, 97, 108, 32, 83, 116, 114, 101, 110, 103
   \              72656E67    
   \   00000140   74680000           DC8 116, 104, 0, 0
    629          "These settings are used to calculate horsepower.\
    630          \n\nUse slider to set aerodynamic drag of vehicle.\
    631          \n\nUse slider to set tire friction coefficient of vehicle.\
    632          \n\nNOTE:See User Manual for suggested settings.\
    633          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    634          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    635          

   \                                 In section .text, align 4, keep-with-next
    636          const char CAR_METRICS_INFO[] =
   \                     CAR_METRICS_INFO:
   \   00000000                      ; Initializer data, 640 bytes
   \   00000000   546869732073       DC8 84, 104, 105, 115, 32, 115, 99, 114, 101, 101
   \              63726565    
   \   0000000A   6E2064697370       DC8 110, 32, 100, 105, 115, 112, 108, 97, 121, 115
   \              6C617973    
   \   00000014   20616E642063       DC8 32, 97, 110, 100, 32, 99, 111, 110, 116, 114
   \              6F6E7472    
   \   0000001E   6F6C73207661       DC8 111, 108, 115, 32, 118, 97, 114, 105, 111, 117
   \              72696F75    
   \   00000028   732063756D75       DC8 115, 32, 99, 117, 109, 117, 108, 97, 116, 105
   \              6C617469    
   \   00000032   7665206D6574       DC8 118, 101, 32, 109, 101, 116, 114, 105, 99, 115
   \              72696373    
   \   0000003C   2E2052657370       DC8 46, 32, 82, 101, 115, 112, 101, 99, 116, 105
   \              65637469    
   \   00000046   766520726573       DC8 118, 101, 32, 114, 101, 115, 101, 116, 32, 98
   \              65742062    
   \   00000050   7574746F6E73       DC8 117, 116, 116, 111, 110, 115, 32, 99, 108, 101
   \              20636C65    
   \   0000005A   617220746865       DC8 97, 114, 32, 116, 104, 101, 32, 99, 117, 109
   \              2063756D    
   \   00000064   756C61746976       DC8 117, 108, 97, 116, 105, 118, 101, 32, 109, 101
   \              65206D65    
   \   0000006E   74726963732E       DC8 116, 114, 105, 99, 115, 46, 32, 78, 111, 116
   \              204E6F74    
   \   00000078   652074686174       DC8 101, 32, 116, 104, 97, 116, 32, 109, 101, 116
   \              206D6574    
   \   00000082   726963732073       DC8 114, 105, 99, 115, 32, 115, 112, 97, 110, 32
   \              70616E20    
   \   0000008C   6D756C746970       DC8 109, 117, 108, 116, 105, 112, 108, 101, 32, 115
   \              6C652073    
   \   00000096   657373696F6E       DC8 101, 115, 115, 105, 111, 110, 115, 32, 97, 110
   \              7320616E    
   \   000000A0   6420706F7765       DC8 100, 32, 112, 111, 119, 101, 114, 32, 99, 121
   \              72206379    
   \   000000AA   636C65732E0A       DC8 99, 108, 101, 115, 46, 10, 10, 84, 111, 116
   \              0A546F74    
   \   000000B4   616C2074696D       DC8 97, 108, 32, 116, 105, 109, 101, 32, 105, 115
   \              65206973    
   \   000000BE   20686F77206C       DC8 32, 104, 111, 119, 32, 108, 111, 110, 103, 32
   \              6F6E6720    
   \   000000C8   746865205472       DC8 116, 104, 101, 32, 84, 114, 97, 113, 109, 97
   \              61716D61    
   \   000000D2   746520686173       DC8 116, 101, 32, 104, 97, 115, 32, 98, 101, 101
   \              20626565    
   \   000000DC   6E206F706572       DC8 110, 32, 111, 112, 101, 114, 97, 116, 101, 100
   \              61746564    
   \   000000E6   2073696E6365       DC8 32, 115, 105, 110, 99, 101, 32, 108, 97, 115
   \              206C6173    
   \   000000F0   7420636C6561       DC8 116, 32, 99, 108, 101, 97, 114, 101, 100, 46
   \              7265642E    
   \   000000FA   0A0A546F7461       DC8 10, 10, 84, 111, 116, 97, 108, 32, 100, 105
   \              6C206469    
   \   00000104   7374616E6365       DC8 115, 116, 97, 110, 99, 101, 32, 105, 115, 32
   \              20697320    
   \   0000010E   616D6F756E74       DC8 97, 109, 111, 117, 110, 116, 32, 116, 104, 101
   \              20746865    
   \   00000118   207665686963       DC8 32, 118, 101, 104, 105, 99, 108, 101, 32, 104
   \              6C652068    
   \   00000122   617320747261       DC8 97, 115, 32, 116, 114, 97, 118, 101, 108, 101
   \              76656C65    
   \   0000012C   642073696E63       DC8 100, 32, 115, 105, 110, 99, 101, 32, 108, 97
   \              65206C61    
   \   00000136   737420636C65       DC8 115, 116, 32, 99, 108, 101, 97, 114, 101, 100
   \              61726564    
   \   00000140   2E0A0A4D6178       DC8 46, 10, 10, 77, 97, 120, 32, 82, 80, 77
   \              2052504D    
   \   0000014A   206973207468       DC8 32, 105, 115, 32, 116, 104, 101, 32, 109, 97
   \              65206D61    
   \   00000154   78696D756D20       DC8 120, 105, 109, 117, 109, 32, 82, 80, 77, 32
   \              52504D20    
   \   0000015E   7265636F7264       DC8 114, 101, 99, 111, 114, 100, 101, 100, 32, 115
   \              65642073    
   \   00000168   696E6365206C       DC8 105, 110, 99, 101, 32, 108, 97, 115, 116, 32
   \              61737420    
   \   00000172   636C65617265       DC8 99, 108, 101, 97, 114, 101, 100, 46, 10, 10
   \              642E0A0A    
   \   0000017C   4165726F2F47       DC8 65, 101, 114, 111, 47, 71, 114, 105, 112, 32
   \              72697020    
   \   00000186   76616C756573       DC8 118, 97, 108, 117, 101, 115, 32, 97, 114, 101
   \              20617265    
   \   00000190   207665686963       DC8 32, 118, 101, 104, 105, 99, 108, 101, 32, 115
   \              6C652073    
   \   0000019A   657474696E67       DC8 101, 116, 116, 105, 110, 103, 115, 32, 114, 101
   \              73207265    
   \   000001A4   6C6174656420       DC8 108, 97, 116, 101, 100, 32, 116, 111, 32, 72
   \              746F2048    
   \   000001AE   502063616C63       DC8 80, 32, 99, 97, 108, 99, 117, 108, 97, 116
   \              756C6174    
   \   000001B8   696F6E732E54       DC8 105, 111, 110, 115, 46, 84, 104, 101, 32, 65
   \              68652041    
   \   000001C2   65726F2F4772       DC8 101, 114, 111, 47, 71, 114, 105, 112, 32, 98
   \              69702062    
   \   000001CC   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 116, 114, 97, 110
   \              7472616E    
   \   000001D6   736665727320       DC8 115, 102, 101, 114, 115, 32, 116, 111, 32, 115
   \              746F2073    
   \   000001E0   657475702073       DC8 101, 116, 117, 112, 32, 115, 99, 114, 101, 101
   \              63726565    
   \   000001EA   6E20666F7220       DC8 110, 32, 102, 111, 114, 32, 65, 101, 114, 111
   \              4165726F    
   \   000001F4   2F4772697020       DC8 47, 71, 114, 105, 112, 32, 115, 101, 116, 116
   \              73657474    
   \   000001FE   696E67732E0A       DC8 105, 110, 103, 115, 46, 10, 10, 80, 114, 101
   \              0A507265    
   \   00000208   737320526564       DC8 115, 115, 32, 82, 101, 100, 32, 66, 97, 99
   \              20426163    
   \   00000212   6B2042757474       DC8 107, 32, 66, 117, 116, 116, 111, 110, 32, 116
   \              6F6E2074    
   \   0000021C   6F20676F2075       DC8 111, 32, 103, 111, 32, 117, 112, 32, 111, 110
   \              70206F6E    
   \   00000226   65206D656E75       DC8 101, 32, 109, 101, 110, 117, 32, 111, 114, 32
   \              206F7220    
   \   00000230   686F6C642066       DC8 104, 111, 108, 100, 32, 102, 111, 114, 32, 77
   \              6F72204D    
   \   0000023A   61696E204D65       DC8 97, 105, 110, 32, 77, 101, 110, 117, 46, 10
   \              6E752E0A    
   \   00000244   0A49636F6E73       DC8 10, 73, 99, 111, 110, 115, 58, 32, 67, 97
   \              3A204361    
   \   0000024E   6D6572612053       DC8 109, 101, 114, 97, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   00000258   732C20534420       DC8 115, 44, 32, 83, 68, 32, 67, 97, 114, 100
   \              43617264    
   \   00000262   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 71
   \              732C2047    
   \   0000026C   505320536967       DC8 80, 83, 32, 83, 105, 103, 110, 97, 108, 32
   \              6E616C20    
   \   00000276   537472656E67       DC8 83, 116, 114, 101, 110, 103, 116, 104, 0, 0
   \              74680000    
    637          "This screen displays and controls various cumulative metrics. \
    638          Respective reset buttons clear the cumulative metrics. \
    639          Note that metrics span multiple sessions and power cycles.\
    640          \n\nTotal time is how long the Traqmate has been operated since last cleared.\
    641          \n\nTotal distance is amount the vehicle has traveled since last cleared.\
    642          \n\nMax RPM is the maximum RPM recorded since last cleared.\
    643          \n\nAero/Grip values are vehicle settings related to HP calculations.\
    644          The Aero/Grip button transfers to setup screen for Aero/Grip settings.\
    645          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    646          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    647          

   \                                 In section .text, align 4, keep-with-next
    648          const char GEAR_RATIO_INFO[] =
   \                     GEAR_RATIO_INFO:
   \   00000000                      ; Initializer data, 860 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 116, 104, 101
   \              20746865    
   \   00000028   206765617220       DC8 32, 103, 101, 97, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   65722073686F       DC8 101, 114, 32, 115, 104, 111, 119, 110, 32, 111
   \              776E206F    
   \   0000003C   6E2074616368       DC8 110, 32, 116, 97, 99, 104, 32, 115, 99, 114
   \              20736372    
   \   00000046   65656E2E0A0A       DC8 101, 101, 110, 46, 10, 10, 84, 105, 114, 101
   \              54697265    
   \   00000050   2053697A6520       DC8 32, 83, 105, 122, 101, 32, 116, 111, 32, 101
   \              746F2065    
   \   0000005A   6E7465722073       DC8 110, 116, 101, 114, 32, 115, 105, 122, 101, 32
   \              697A6520    
   \   00000064   6F6620647269       DC8 111, 102, 32, 100, 114, 105, 118, 101, 32, 119
   \              76652077    
   \   0000006E   6865656C732F       DC8 104, 101, 101, 108, 115, 47, 116, 105, 114, 101
   \              74697265    
   \   00000078   732E0A0A4469       DC8 115, 46, 10, 10, 68, 105, 102, 102, 32, 82
   \              66662052    
   \   00000082   6174696F2074       DC8 97, 116, 105, 111, 32, 116, 111, 32, 101, 110
   \              6F20656E    
   \   0000008C   746572207261       DC8 116, 101, 114, 32, 114, 97, 116, 105, 111, 32
   \              74696F20    
   \   00000096   6F6620646966       DC8 111, 102, 32, 100, 105, 102, 102, 101, 114, 101
   \              66657265    
   \   000000A0   6E7469616C20       DC8 110, 116, 105, 97, 108, 32, 116, 111, 32, 100
   \              746F2064    
   \   000000AA   726976652077       DC8 114, 105, 118, 101, 32, 119, 104, 101, 101, 108
   \              6865656C    
   \   000000B4   732E0A0A5472       DC8 115, 46, 10, 10, 84, 114, 97, 110, 115, 32
   \              616E7320    
   \   000000BE   526174696F20       DC8 82, 97, 116, 105, 111, 32, 116, 111, 32, 101
   \              746F2065    
   \   000000C8   6E7465722074       DC8 110, 116, 101, 114, 32, 116, 114, 97, 110, 115
   \              72616E73    
   \   000000D2   6D697373696F       DC8 109, 105, 115, 115, 105, 111, 110, 32, 103, 101
   \              6E206765    
   \   000000DC   617220726174       DC8 97, 114, 32, 114, 97, 116, 105, 111, 115, 46
   \              696F732E    
   \   000000E6   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000000F0   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   000000FA   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   00000104   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   0000010E   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   00000118   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   00000122   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   0000012C   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   00000136   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   00000140   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   0000014A   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   00000154   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   0000015E   6774682E0A0A       DC8 103, 116, 104, 46, 10, 10, 78, 79, 84, 69
   \              4E4F5445    
   \   00000168   3A20496E206F       DC8 58, 32, 73, 110, 32, 111, 114, 100, 101, 114
   \              72646572    
   \   00000172   20746F206465       DC8 32, 116, 111, 32, 100, 101, 116, 101, 114, 109
   \              7465726D    
   \   0000017C   696E65207768       DC8 105, 110, 101, 32, 119, 104, 105, 99, 104, 32
   \              69636820    
   \   00000186   676561722069       DC8 103, 101, 97, 114, 32, 105, 115, 32, 115, 101
   \              73207365    
   \   00000190   6C6563746564       DC8 108, 101, 99, 116, 101, 100, 32, 105, 110, 32
   \              20696E20    
   \   0000019A   746865207665       DC8 116, 104, 101, 32, 118, 101, 104, 105, 99, 108
   \              6869636C    
   \   000001A4   652C20746865       DC8 101, 44, 32, 116, 104, 101, 32, 99, 111, 109
   \              20636F6D    
   \   000001AE   706C65746520       DC8 112, 108, 101, 116, 101, 32, 103, 101, 97, 114
   \              67656172    
   \   000001B8   696E6720696E       DC8 105, 110, 103, 32, 105, 110, 102, 111, 114, 109
   \              666F726D    
   \   000001C2   6174696F6E20       DC8 97, 116, 105, 111, 110, 32, 102, 111, 114, 32
   \              666F7220    
   \   000001CC   746865207665       DC8 116, 104, 101, 32, 118, 101, 104, 105, 99, 108
   \              6869636C    
   \   000001D6   65206D757374       DC8 101, 32, 109, 117, 115, 116, 32, 98, 101, 32
   \              20626520    
   \   000001E0   6B6E6F776E2E       DC8 107, 110, 111, 119, 110, 46, 32, 32, 84, 104
   \              20205468    
   \   000001EA   697320696E63       DC8 105, 115, 32, 105, 110, 99, 108, 117, 100, 101
   \              6C756465    
   \   000001F4   732074686520       DC8 115, 32, 116, 104, 101, 32, 103, 101, 97, 114
   \              67656172    
   \   000001FE   20726174696F       DC8 32, 114, 97, 116, 105, 111, 115, 32, 97, 115
   \              73206173    
   \   00000208   2077656C6C20       DC8 32, 119, 101, 108, 108, 32, 97, 115, 32, 116
   \              61732074    
   \   00000212   686520646966       DC8 104, 101, 32, 100, 105, 102, 102, 101, 114, 101
   \              66657265    
   \   0000021C   6E7469616C20       DC8 110, 116, 105, 97, 108, 32, 114, 97, 116, 105
   \              72617469    
   \   00000226   6F20616E6420       DC8 111, 32, 97, 110, 100, 32, 116, 104, 101, 32
   \              74686520    
   \   00000230   746972652072       DC8 116, 105, 114, 101, 32, 114, 111, 108, 108, 105
   \              6F6C6C69    
   \   0000023A   6E6720636972       DC8 110, 103, 32, 99, 105, 114, 99, 117, 109, 102
   \              63756D66    
   \   00000244   6572656E6365       DC8 101, 114, 101, 110, 99, 101, 46, 32, 73, 102
   \              2E204966    
   \   0000024E   20796F752064       DC8 32, 121, 111, 117, 32, 100, 111, 32, 110, 111
   \              6F206E6F    
   \   00000258   742077697368       DC8 116, 32, 119, 105, 115, 104, 32, 116, 111, 32
   \              20746F20    
   \   00000262   757365207468       DC8 117, 115, 101, 32, 116, 104, 105, 115, 32, 102
   \              69732066    
   \   0000026C   656174757265       DC8 101, 97, 116, 117, 114, 101, 32, 105, 116, 32
   \              20697420    
   \   00000276   63616E206265       DC8 99, 97, 110, 32, 98, 101, 32, 100, 105, 115
   \              20646973    
   \   00000280   61626C656420       DC8 97, 98, 108, 101, 100, 32, 98, 121, 32, 101
   \              62792065    
   \   0000028A   6E746572696E       DC8 110, 116, 101, 114, 105, 110, 103, 32, 97, 32
   \              67206120    
   \   00000294   646966666572       DC8 100, 105, 102, 102, 101, 114, 101, 110, 116, 105
   \              656E7469    
   \   0000029E   616C20726174       DC8 97, 108, 32, 114, 97, 116, 105, 111, 32, 111
   \              696F206F    
   \   000002A8   6620302E3030       DC8 102, 32, 48, 46, 48, 48, 46, 32, 73, 102
   \              2E204966    
   \   000002B2   207468697320       DC8 32, 116, 104, 105, 115, 32, 118, 97, 108, 117
   \              76616C75    
   \   000002BC   652069732065       DC8 101, 32, 105, 115, 32, 101, 110, 116, 101, 114
   \              6E746572    
   \   000002C6   656420796F75       DC8 101, 100, 32, 121, 111, 117, 32, 119, 105, 108
   \              2077696C    
   \   000002D0   6C2062652061       DC8 108, 32, 98, 101, 32, 97, 115, 107, 101, 100
   \              736B6564    
   \   000002DA   20746F20636F       DC8 32, 116, 111, 32, 99, 111, 110, 102, 105, 114
   \              6E666972    
   \   000002E4   6D2074686174       DC8 109, 32, 116, 104, 97, 116, 32, 121, 111, 117
   \              20796F75    
   \   000002EE   20646F206E6F       DC8 32, 100, 111, 32, 110, 111, 116, 32, 119, 105
   \              74207769    
   \   000002F8   736820746F20       DC8 115, 104, 32, 116, 111, 32, 99, 97, 108, 99
   \              63616C63    
   \   00000302   756C61746520       DC8 117, 108, 97, 116, 101, 32, 103, 101, 97, 114
   \              67656172    
   \   0000030C   20726174696F       DC8 32, 114, 97, 116, 105, 111, 115, 46, 32, 73
   \              732E2049    
   \   00000316   662061636365       DC8 102, 32, 97, 99, 99, 101, 112, 116, 101, 100
   \              70746564    
   \   00000320   207468656E20       DC8 32, 116, 104, 101, 110, 32, 116, 104, 101, 32
   \              74686520    
   \   0000032A   63616C63756C       DC8 99, 97, 108, 99, 117, 108, 97, 116, 101, 100
   \              61746564    
   \   00000334   206765617220       DC8 32, 103, 101, 97, 114, 32, 112, 111, 115, 105
   \              706F7369    
   \   0000033E   74696F6E2077       DC8 116, 105, 111, 110, 32, 119, 105, 108, 108, 32
   \              696C6C20    
   \   00000348   6E6F74206265       DC8 110, 111, 116, 32, 98, 101, 32, 100, 105, 115
   \              20646973    
   \   00000352   706C61796564       DC8 112, 108, 97, 121, 101, 100, 46, 0, 0, 0
   \              2E000000    
    649          "These settings are used to calculate the gear number shown on tach screen.\
    650          \n\nTire Size to enter size of drive wheels/tires.\
    651          \n\nDiff Ratio to enter ratio of differential to drive wheels.\
    652          \n\nTrans Ratio to enter transmission gear ratios.\
    653          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    654          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength.\
    655          \n\nNOTE: In order to determine which gear is selected in the vehicle, the \
    656          complete gearing information for the vehicle must be known.  This \
    657          includes the gear ratios as well as the differential ratio and the \
    658          tire rolling circumference. If you do not wish to use this \
    659          feature it can be disabled by entering a differential ratio of 0.00. \
    660          If this value is entered you will be asked to confirm that you do not \
    661          wish to calculate gear ratios. If accepted then the calculated gear \
    662          position will not be displayed.";
    663          

   \                                 In section .text, align 4, keep-with-next
    664          const char TIRE_SIZE_INFO[] =
   \                     TIRE_SIZE_INFO:
   \   00000000                      ; Initializer data, 852 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 116, 104, 101
   \              20746865    
   \   00000028   206765617220       DC8 32, 103, 101, 97, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   65722073686F       DC8 101, 114, 32, 115, 104, 111, 119, 110, 32, 111
   \              776E206F    
   \   0000003C   6E2074616368       DC8 110, 32, 116, 97, 99, 104, 32, 115, 99, 114
   \              20736372    
   \   00000046   65656E2E0A0A       DC8 101, 101, 110, 46, 10, 10, 84, 105, 114, 101
   \              54697265    
   \   00000050   2053697A6520       DC8 32, 83, 105, 122, 101, 32, 116, 111, 32, 101
   \              746F2065    
   \   0000005A   6E7465722069       DC8 110, 116, 101, 114, 32, 105, 110, 102, 111, 114
   \              6E666F72    
   \   00000064   6D6174696F6E       DC8 109, 97, 116, 105, 111, 110, 32, 98, 97, 115
   \              20626173    
   \   0000006E   6564206F6E20       DC8 101, 100, 32, 111, 110, 32, 109, 97, 110, 117
   \              6D616E75    
   \   00000078   666163747572       DC8 102, 97, 99, 116, 117, 114, 101, 114, 32, 116
   \              65722074    
   \   00000082   697265207369       DC8 105, 114, 101, 32, 115, 105, 122, 101, 46, 10
   \              7A652E0A    
   \   0000008C   0A5469726520       DC8 10, 84, 105, 114, 101, 32, 99, 105, 114, 99
   \              63697263    
   \   00000096   756D66657265       DC8 117, 109, 102, 101, 114, 101, 110, 99, 101, 32
   \              6E636520    
   \   000000A0   746F206D616E       DC8 116, 111, 32, 109, 97, 110, 117, 97, 108, 108
   \              75616C6C    
   \   000000AA   79206D656173       DC8 121, 32, 109, 101, 97, 115, 117, 114, 101, 32
   \              75726520    
   \   000000B4   616E6420656E       DC8 97, 110, 100, 32, 101, 110, 116, 101, 114, 32
   \              74657220    
   \   000000BE   746865206369       DC8 116, 104, 101, 32, 99, 105, 114, 99, 117, 109
   \              7263756D    
   \   000000C8   666572656E63       DC8 102, 101, 114, 101, 110, 99, 101, 32, 111, 102
   \              65206F66    
   \   000000D2   207468652074       DC8 32, 116, 104, 101, 32, 116, 105, 114, 101, 46
   \              6972652E    
   \   000000DC   0A0A54697265       DC8 10, 10, 84, 105, 114, 101, 32, 99, 105, 114
   \              20636972    
   \   000000E6   63756D666572       DC8 99, 117, 109, 102, 101, 114, 101, 110, 99, 101
   \              656E6365    
   \   000000F0   20697320696E       DC8 32, 105, 115, 32, 105, 110, 32, 105, 110, 99
   \              20696E63    
   \   000000FA   686573206F72       DC8 104, 101, 115, 32, 111, 114, 32, 99, 101, 110
   \              2063656E    
   \   00000104   74696D657465       DC8 116, 105, 109, 101, 116, 101, 114, 115, 44, 32
   \              72732C20    
   \   0000010E   646570656E64       DC8 100, 101, 112, 101, 110, 100, 105, 110, 103, 32
   \              696E6720    
   \   00000118   6F6E20756E69       DC8 111, 110, 32, 117, 110, 105, 116, 115, 32, 115
   \              74732073    
   \   00000122   657474696E67       DC8 101, 116, 116, 105, 110, 103, 46, 10, 10, 78
   \              2E0A0A4E    
   \   0000012C   4F54453A2049       DC8 79, 84, 69, 58, 32, 73, 110, 32, 111, 114
   \              6E206F72    
   \   00000136   64657220746F       DC8 100, 101, 114, 32, 116, 111, 32, 100, 101, 116
   \              20646574    
   \   00000140   65726D696E65       DC8 101, 114, 109, 105, 110, 101, 32, 119, 104, 105
   \              20776869    
   \   0000014A   636820676561       DC8 99, 104, 32, 103, 101, 97, 114, 32, 105, 115
   \              72206973    
   \   00000154   2073656C6563       DC8 32, 115, 101, 108, 101, 99, 116, 101, 100, 32
   \              74656420    
   \   0000015E   696E20746865       DC8 105, 110, 32, 116, 104, 101, 32, 118, 101, 104
   \              20766568    
   \   00000168   69636C652C20       DC8 105, 99, 108, 101, 44, 32, 116, 104, 101, 32
   \              74686520    
   \   00000172   63697263756D       DC8 99, 105, 114, 99, 117, 109, 102, 101, 114, 101
   \              66657265    
   \   0000017C   6E63652E2028       DC8 110, 99, 101, 46, 32, 40, 100, 105, 115, 116
   \              64697374    
   \   00000186   616E63652061       DC8 97, 110, 99, 101, 32, 97, 114, 111, 117, 110
   \              726F756E    
   \   00000190   642920746865       DC8 100, 41, 32, 116, 104, 101, 32, 116, 105, 114
   \              20746972    
   \   0000019A   65206D757374       DC8 101, 32, 109, 117, 115, 116, 32, 98, 101, 32
   \              20626520    
   \   000001A4   6D6561737572       DC8 109, 101, 97, 115, 117, 114, 101, 100, 46, 32
   \              65642E20    
   \   000001AE   205468697320       DC8 32, 84, 104, 105, 115, 32, 105, 115, 32, 116
   \              69732074    
   \   000001B8   686520646973       DC8 104, 101, 32, 100, 105, 115, 116, 97, 110, 99
   \              74616E63    
   \   000001C2   652074686520       DC8 101, 32, 116, 104, 101, 32, 118, 101, 104, 105
   \              76656869    
   \   000001CC   636C65207472       DC8 99, 108, 101, 32, 116, 114, 97, 118, 101, 108
   \              6176656C    
   \   000001D6   7320666F7220       DC8 115, 32, 102, 111, 114, 32, 101, 118, 101, 114
   \              65766572    
   \   000001E0   79207265766F       DC8 121, 32, 114, 101, 118, 111, 108, 117, 116, 105
   \              6C757469    
   \   000001EA   6F6E206F6620       DC8 111, 110, 32, 111, 102, 32, 116, 104, 101, 32
   \              74686520    
   \   000001F4   746972652E20       DC8 116, 105, 114, 101, 46, 32, 89, 111, 117, 32
   \              596F7520    
   \   000001FE   6D617920656E       DC8 109, 97, 121, 32, 101, 110, 116, 101, 114, 32
   \              74657220    
   \   00000208   746865206E75       DC8 116, 104, 101, 32, 110, 117, 109, 98, 101, 114
   \              6D626572    
   \   00000212   206F6E207468       DC8 32, 111, 110, 32, 116, 104, 101, 32, 115, 105
   \              65207369    
   \   0000021C   646577616C6C       DC8 100, 101, 119, 97, 108, 108, 32, 111, 102, 32
   \              206F6620    
   \   00000226   746865207469       DC8 116, 104, 101, 32, 116, 105, 114, 101, 32, 117
   \              72652075    
   \   00000230   73696E672074       DC8 115, 105, 110, 103, 32, 116, 104, 101, 32, 99
   \              68652063    
   \   0000023A   616C63756C61       DC8 97, 108, 99, 117, 108, 97, 116, 111, 114, 32
   \              746F7220    
   \   00000244   6F7220796F75       DC8 111, 114, 32, 121, 111, 117, 32, 99, 97, 110
   \              2063616E    
   \   0000024E   206D65617375       DC8 32, 109, 101, 97, 115, 117, 114, 101, 32, 116
   \              72652074    
   \   00000258   686520646973       DC8 104, 101, 32, 100, 105, 115, 116, 97, 110, 99
   \              74616E63    
   \   00000262   652061726F75       DC8 101, 32, 97, 114, 111, 117, 110, 100, 32, 116
   \              6E642074    
   \   0000026C   686520746972       DC8 104, 101, 32, 116, 105, 114, 101, 32, 119, 105
   \              65207769    
   \   00000276   746820612074       DC8 116, 104, 32, 97, 32, 116, 97, 112, 101, 32
   \              61706520    
   \   00000280   6D6561737572       DC8 109, 101, 97, 115, 117, 114, 101, 46, 32, 32
   \              652E2020    
   \   0000028A   4D6F73742074       DC8 77, 111, 115, 116, 32, 116, 105, 114, 101, 32
   \              69726520    
   \   00000294   63697263756D       DC8 99, 105, 114, 99, 117, 109, 102, 101, 114, 101
   \              66657265    
   \   0000029E   6E6365732061       DC8 110, 99, 101, 115, 32, 97, 114, 101, 32, 105
   \              72652069    
   \   000002A8   6E2074686520       DC8 110, 32, 116, 104, 101, 32, 114, 97, 110, 103
   \              72616E67    
   \   000002B2   65206F662035       DC8 101, 32, 111, 102, 32, 53, 48, 105, 110, 32
   \              30696E20    
   \   000002BC   28313237636D       DC8 40, 49, 50, 55, 99, 109, 41, 32, 116, 111
   \              2920746F    
   \   000002C6   20313530696E       DC8 32, 49, 53, 48, 105, 110, 32, 40, 51, 56
   \              20283338    
   \   000002D0   31636D292E0A       DC8 49, 99, 109, 41, 46, 10, 10, 80, 114, 101
   \              0A507265    
   \   000002DA   737320526564       DC8 115, 115, 32, 82, 101, 100, 32, 66, 97, 99
   \              20426163    
   \   000002E4   6B2042757474       DC8 107, 32, 66, 117, 116, 116, 111, 110, 32, 116
   \              6F6E2074    
   \   000002EE   6F20676F2075       DC8 111, 32, 103, 111, 32, 117, 112, 32, 111, 110
   \              70206F6E    
   \   000002F8   65206D656E75       DC8 101, 32, 109, 101, 110, 117, 32, 111, 114, 32
   \              206F7220    
   \   00000302   686F6C642066       DC8 104, 111, 108, 100, 32, 102, 111, 114, 32, 77
   \              6F72204D    
   \   0000030C   61696E204D65       DC8 97, 105, 110, 32, 77, 101, 110, 117, 46, 10
   \              6E752E0A    
   \   00000316   0A49636F6E73       DC8 10, 73, 99, 111, 110, 115, 58, 32, 67, 97
   \              3A204361    
   \   00000320   6D6572612053       DC8 109, 101, 114, 97, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   0000032A   732C20534420       DC8 115, 44, 32, 83, 68, 32, 67, 97, 114, 100
   \              43617264    
   \   00000334   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 71
   \              732C2047    
   \   0000033E   505320536967       DC8 80, 83, 32, 83, 105, 103, 110, 97, 108, 32
   \              6E616C20    
   \   00000348   537472656E67       DC8 83, 116, 114, 101, 110, 103, 116, 104, 0, 0
   \              74680000    
   \   00000352   0000               DC8 0, 0
    665          "These settings are used to calculate the gear number shown on tach screen.\
    666          \n\nTire Size to enter information based on manufacturer tire size.\
    667          \n\nTire circumference to manually measure and enter the circumference of the tire.\
    668          \n\nTire circumference is in inches or centimeters, depending on units setting.\
    669          \n\nNOTE: In order to determine which gear is selected in the vehicle, the \
    670          circumference. (distance around) the tire must be measured.  This is \
    671          the distance the vehicle travels for every revolution of the tire. \
    672          You may enter the number on the sidewall of the tire using the \
    673          calculator or you can measure the distance around the tire with a tape \
    674          measure.  Most tire circumferences are in the range of 50in (127cm) \
    675          to 150in (381cm).\
    676          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    677          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    678          

   \                                 In section .text, align 4, keep-with-next
    679          const char TIRE_DIMENSIONS_INFO[] =
   \                     TIRE_DIMENSIONS_INFO:
   \   00000000                      ; Initializer data, 380 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 116, 104, 101
   \              20746865    
   \   00000028   206765617220       DC8 32, 103, 101, 97, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   65722073686F       DC8 101, 114, 32, 115, 104, 111, 119, 110, 32, 111
   \              776E206F    
   \   0000003C   6E2074616368       DC8 110, 32, 116, 97, 99, 104, 32, 115, 99, 114
   \              20736372    
   \   00000046   65656E2E0A0A       DC8 101, 101, 110, 46, 10, 10, 83, 101, 108, 101
   \              53656C65    
   \   00000050   637420746865       DC8 99, 116, 32, 116, 104, 101, 32, 109, 97, 110
   \              206D616E    
   \   0000005A   756661637475       DC8 117, 102, 97, 99, 116, 117, 114, 101, 114, 32
   \              72657220    
   \   00000064   746972652073       DC8 116, 105, 114, 101, 32, 115, 105, 122, 101, 32
   \              697A6520    
   \   0000006E   28757375616C       DC8 40, 117, 115, 117, 97, 108, 108, 121, 32, 102
   \              6C792066    
   \   00000078   6F756E64206F       DC8 111, 117, 110, 100, 32, 111, 110, 32, 115, 105
   \              6E207369    
   \   00000082   646577616C6C       DC8 100, 101, 119, 97, 108, 108, 41, 46, 10, 10
   \              292E0A0A    
   \   0000008C   466972737420       DC8 70, 105, 114, 115, 116, 32, 99, 111, 108, 117
   \              636F6C75    
   \   00000096   6D6E20697320       DC8 109, 110, 32, 105, 115, 32, 116, 105, 114, 101
   \              74697265    
   \   000000A0   207769647468       DC8 32, 119, 105, 100, 116, 104, 32, 105, 110, 32
   \              20696E20    
   \   000000AA   6D6D2E0A0A53       DC8 109, 109, 46, 10, 10, 83, 101, 99, 111, 110
   \              65636F6E    
   \   000000B4   6420636F6C75       DC8 100, 32, 99, 111, 108, 117, 109, 110, 32, 105
   \              6D6E2069    
   \   000000BE   732074697265       DC8 115, 32, 116, 105, 114, 101, 32, 97, 115, 112
   \              20617370    
   \   000000C8   656374207261       DC8 101, 99, 116, 32, 114, 97, 116, 105, 111, 46
   \              74696F2E    
   \   000000D2   0A0A54686972       DC8 10, 10, 84, 104, 105, 114, 100, 32, 99, 111
   \              6420636F    
   \   000000DC   6C756D6E2069       DC8 108, 117, 109, 110, 32, 105, 115, 32, 119, 104
   \              73207768    
   \   000000E6   65656C206469       DC8 101, 101, 108, 32, 100, 105, 97, 109, 101, 116
   \              616D6574    
   \   000000F0   657220696E20       DC8 101, 114, 32, 105, 110, 32, 105, 110, 99, 104
   \              696E6368    
   \   000000FA   65732E0A0A50       DC8 101, 115, 46, 10, 10, 80, 114, 101, 115, 115
   \              72657373    
   \   00000104   205265642042       DC8 32, 82, 101, 100, 32, 66, 97, 99, 107, 32
   \              61636B20    
   \   0000010E   427574746F6E       DC8 66, 117, 116, 116, 111, 110, 32, 116, 111, 32
   \              20746F20    
   \   00000118   676F20757020       DC8 103, 111, 32, 117, 112, 32, 111, 110, 101, 32
   \              6F6E6520    
   \   00000122   6D656E75206F       DC8 109, 101, 110, 117, 32, 111, 114, 32, 104, 111
   \              7220686F    
   \   0000012C   6C6420666F72       DC8 108, 100, 32, 102, 111, 114, 32, 77, 97, 105
   \              204D6169    
   \   00000136   6E204D656E75       DC8 110, 32, 77, 101, 110, 117, 46, 10, 10, 73
   \              2E0A0A49    
   \   00000140   636F6E733A20       DC8 99, 111, 110, 115, 58, 32, 67, 97, 109, 101
   \              43616D65    
   \   0000014A   726120537461       DC8 114, 97, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   00000154   205344204361       DC8 32, 83, 68, 32, 67, 97, 114, 100, 32, 83
   \              72642053    
   \   0000015E   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 71, 80, 83
   \              20475053    
   \   00000168   205369676E61       DC8 32, 83, 105, 103, 110, 97, 108, 32, 83, 116
   \              6C205374    
   \   00000172   72656E677468       DC8 114, 101, 110, 103, 116, 104, 0, 0, 0, 0
   \              00000000    
    680          "These settings are used to calculate the gear number shown on tach screen.\
    681          \n\nSelect the manufacturer tire size (usually found on sidewall).\
    682          \n\nFirst column is tire width in mm.\
    683          \n\nSecond column is tire aspect ratio.\
    684          \n\nThird column is wheel diameter in inches.\
    685          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    686          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    687          

   \                                 In section .text, align 4, keep-with-next
    688          const char DIFF_RATIO_INFO[] =
   \                     DIFF_RATIO_INFO:
   \   00000000                      ; Initializer data, 392 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 116, 104, 101
   \              20746865    
   \   00000028   206765617220       DC8 32, 103, 101, 97, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   65722073686F       DC8 101, 114, 32, 115, 104, 111, 119, 110, 32, 111
   \              776E206F    
   \   0000003C   6E2074616368       DC8 110, 32, 116, 97, 99, 104, 32, 115, 99, 114
   \              20736372    
   \   00000046   65656E2E0A0A       DC8 101, 101, 110, 46, 10, 10, 85, 115, 101, 32
   \              55736520    
   \   00000050   746865206C69       DC8 116, 104, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000005A   6865656C7320       DC8 104, 101, 101, 108, 115, 32, 116, 111, 32, 101
   \              746F2065    
   \   00000064   6E7465722074       DC8 110, 116, 101, 114, 32, 116, 104, 101, 32, 51
   \              68652033    
   \   0000006E   206469676974       DC8 32, 100, 105, 103, 105, 116, 32, 100, 105, 102
   \              20646966    
   \   00000078   666572656E74       DC8 102, 101, 114, 101, 110, 116, 105, 97, 108, 32
   \              69616C20    
   \   00000082   726174696F2E       DC8 114, 97, 116, 105, 111, 46, 10, 10, 78, 79
   \              0A0A4E4F    
   \   0000008C   54453A20456E       DC8 84, 69, 58, 32, 69, 110, 116, 101, 114, 32
   \              74657220    
   \   00000096   302E30302074       DC8 48, 46, 48, 48, 32, 116, 111, 32, 100, 105
   \              6F206469    
   \   000000A0   7361626C6520       DC8 115, 97, 98, 108, 101, 32, 116, 104, 101, 32
   \              74686520    
   \   000000AA   67656172206E       DC8 103, 101, 97, 114, 32, 110, 117, 109, 98, 101
   \              756D6265    
   \   000000B4   722064697370       DC8 114, 32, 100, 105, 115, 112, 108, 97, 121, 32
   \              6C617920    
   \   000000BE   6F6E20746865       DC8 111, 110, 32, 116, 104, 101, 32, 116, 97, 99
   \              20746163    
   \   000000C8   682073637265       DC8 104, 32, 115, 99, 114, 101, 101, 110, 46, 10
   \              656E2E0A    
   \   000000D2   0A466F722065       DC8 10, 70, 111, 114, 32, 101, 120, 97, 109, 112
   \              78616D70    
   \   000000DC   6C652C206966       DC8 108, 101, 44, 32, 105, 102, 32, 100, 105, 102
   \              20646966    
   \   000000E6   666572656E74       DC8 102, 101, 114, 101, 110, 116, 105, 97, 108, 32
   \              69616C20    
   \   000000F0   726174696F20       DC8 114, 97, 116, 105, 111, 32, 105, 115, 32, 52
   \              69732034    
   \   000000FA   2E31303A312C       DC8 46, 49, 48, 58, 49, 44, 32, 101, 110, 116
   \              20656E74    
   \   00000104   657220342E31       DC8 101, 114, 32, 52, 46, 49, 48, 46, 10, 10
   \              302E0A0A    
   \   0000010E   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   00000118   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   00000122   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   0000012C   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   00000136   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   00000140   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   0000014A   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   00000154   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   0000015E   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   00000168   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   00000172   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   0000017C   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   00000186   6800               DC8 104, 0
    689          "These settings are used to calculate the gear number shown on tach screen.\
    690          \n\nUse the list wheels to enter the 3 digit differential ratio.\
    691          \n\nNOTE: Enter 0.00 to disable the gear number display on the tach screen.\
    692          \n\nFor example, if differential ratio is 4.10:1, enter 4.10.\
    693          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    694          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    695          

   \                                 In section .text, align 4, keep-with-next
    696          const char TRANS_RATIO_INFO[] =
   \                     TRANS_RATIO_INFO:
   \   00000000                      ; Initializer data, 312 bytes
   \   00000000   546865736520       DC8 84, 104, 101, 115, 101, 32, 115, 101, 116, 116
   \              73657474    
   \   0000000A   696E67732061       DC8 105, 110, 103, 115, 32, 97, 114, 101, 32, 117
   \              72652075    
   \   00000014   73656420746F       DC8 115, 101, 100, 32, 116, 111, 32, 99, 97, 108
   \              2063616C    
   \   0000001E   63756C617465       DC8 99, 117, 108, 97, 116, 101, 32, 116, 104, 101
   \              20746865    
   \   00000028   206765617220       DC8 32, 103, 101, 97, 114, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000032   65722073686F       DC8 101, 114, 32, 115, 104, 111, 119, 110, 32, 111
   \              776E206F    
   \   0000003C   6E2074616368       DC8 110, 32, 116, 97, 99, 104, 32, 115, 99, 114
   \              20736372    
   \   00000046   65656E2E0A0A       DC8 101, 101, 110, 46, 10, 10, 84, 111, 117, 99
   \              546F7563    
   \   00000050   682065616368       DC8 104, 32, 101, 97, 99, 104, 32, 111, 102, 32
   \              206F6620    
   \   0000005A   746865207261       DC8 116, 104, 101, 32, 114, 97, 116, 105, 111, 115
   \              74696F73    
   \   00000064   20696E207475       DC8 32, 105, 110, 32, 116, 117, 114, 110, 32, 116
   \              726E2074    
   \   0000006E   6F20656E7465       DC8 111, 32, 101, 110, 116, 101, 114, 32, 116, 104
   \              72207468    
   \   00000078   652067656172       DC8 101, 32, 103, 101, 97, 114, 32, 114, 97, 116
   \              20726174    
   \   00000082   696F732E0A0A       DC8 105, 111, 115, 46, 10, 10, 70, 111, 114, 32
   \              466F7220    
   \   0000008C   6578616D706C       DC8 101, 120, 97, 109, 112, 108, 101, 44, 32, 105
   \              652C2069    
   \   00000096   662067656172       DC8 102, 32, 103, 101, 97, 114, 32, 114, 97, 116
   \              20726174    
   \   000000A0   696F20697320       DC8 105, 111, 32, 105, 115, 32, 49, 46, 51, 51
   \              312E3333    
   \   000000AA   3A312C20656E       DC8 58, 49, 44, 32, 101, 110, 116, 101, 114, 32
   \              74657220    
   \   000000B4   312E33332E0A       DC8 49, 46, 51, 51, 46, 10, 10, 80, 114, 101
   \              0A507265    
   \   000000BE   737320526564       DC8 115, 115, 32, 82, 101, 100, 32, 66, 97, 99
   \              20426163    
   \   000000C8   6B2042757474       DC8 107, 32, 66, 117, 116, 116, 111, 110, 32, 116
   \              6F6E2074    
   \   000000D2   6F20676F2075       DC8 111, 32, 103, 111, 32, 117, 112, 32, 111, 110
   \              70206F6E    
   \   000000DC   65206D656E75       DC8 101, 32, 109, 101, 110, 117, 32, 111, 114, 32
   \              206F7220    
   \   000000E6   686F6C642066       DC8 104, 111, 108, 100, 32, 102, 111, 114, 32, 77
   \              6F72204D    
   \   000000F0   61696E204D65       DC8 97, 105, 110, 32, 77, 101, 110, 117, 46, 10
   \              6E752E0A    
   \   000000FA   0A49636F6E73       DC8 10, 73, 99, 111, 110, 115, 58, 32, 67, 97
   \              3A204361    
   \   00000104   6D6572612053       DC8 109, 101, 114, 97, 32, 83, 116, 97, 116, 117
   \              74617475    
   \   0000010E   732C20534420       DC8 115, 44, 32, 83, 68, 32, 67, 97, 114, 100
   \              43617264    
   \   00000118   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 71
   \              732C2047    
   \   00000122   505320536967       DC8 80, 83, 32, 83, 105, 103, 110, 97, 108, 32
   \              6E616C20    
   \   0000012C   537472656E67       DC8 83, 116, 114, 101, 110, 103, 116, 104, 0, 0
   \              74680000    
   \   00000136   0000               DC8 0, 0
    697          "These settings are used to calculate the gear number shown on tach screen.\
    698          \n\nTouch each of the ratios in turn to enter the gear ratios.\
    699          \n\nFor example, if gear ratio is 1.33:1, enter 1.33.\
    700          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    701          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    702          

   \                                 In section .text, align 4, keep-with-next
    703          const char INPUTS_INFO[] =
   \                     INPUTS_INFO:
   \   00000000                      ; Initializer data, 348 bytes
   \   00000000   546F75636820       DC8 84, 111, 117, 99, 104, 32, 116, 104, 101, 32
   \              74686520    
   \   0000000A   416E616C6F67       DC8 65, 110, 97, 108, 111, 103, 32, 111, 114, 32
   \              206F7220    
   \   00000014   446967697461       DC8 68, 105, 103, 105, 116, 97, 108, 32, 116, 111
   \              6C20746F    
   \   0000001E   20656E61626C       DC8 32, 101, 110, 97, 98, 108, 101, 32, 111, 114
   \              65206F72    
   \   00000028   206469736162       DC8 32, 100, 105, 115, 97, 98, 108, 101, 32, 116
   \              6C652074    
   \   00000032   686520696E70       DC8 104, 101, 32, 105, 110, 112, 117, 116, 46, 10
   \              75742E0A    
   \   0000003C   0A5768656E20       DC8 10, 87, 104, 101, 110, 32, 101, 110, 97, 98
   \              656E6162    
   \   00000046   6C65642C2074       DC8 108, 101, 100, 44, 32, 116, 104, 101, 32, 97
   \              68652061    
   \   00000050   6E616C6F6720       DC8 110, 97, 108, 111, 103, 32, 98, 117, 116, 116
   \              62757474    
   \   0000005A   6F6E73207368       DC8 111, 110, 115, 32, 115, 104, 111, 119, 32, 116
   \              6F772074    
   \   00000064   68652076616C       DC8 104, 101, 32, 118, 97, 108, 117, 101, 32, 111
   \              7565206F    
   \   0000006E   662074686520       DC8 102, 32, 116, 104, 101, 32, 105, 110, 112, 117
   \              696E7075    
   \   00000078   7420696E2074       DC8 116, 32, 105, 110, 32, 116, 104, 101, 32, 100
   \              68652064    
   \   00000082   6566696E6564       DC8 101, 102, 105, 110, 101, 100, 32, 117, 110, 105
   \              20756E69    
   \   0000008C   74732E0A0A57       DC8 116, 115, 46, 10, 10, 87, 104, 101, 110, 32
   \              68656E20    
   \   00000096   656E61626C65       DC8 101, 110, 97, 98, 108, 101, 100, 44, 32, 116
   \              642C2074    
   \   000000A0   686520646967       DC8 104, 101, 32, 100, 105, 103, 105, 116, 97, 108
   \              6974616C    
   \   000000AA   20627574746F       DC8 32, 98, 117, 116, 116, 111, 110, 115, 32, 115
   \              6E732073    
   \   000000B4   686F77207468       DC8 104, 111, 119, 32, 116, 104, 101, 32, 110, 97
   \              65206E61    
   \   000000BE   6D6564206C6F       DC8 109, 101, 100, 32, 108, 111, 103, 105, 99, 97
   \              67696361    
   \   000000C8   6C2073746174       DC8 108, 32, 115, 116, 97, 116, 101, 32, 111, 102
   \              65206F66    
   \   000000D2   207468652069       DC8 32, 116, 104, 101, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   000000DC   2E0A0A507265       DC8 46, 10, 10, 80, 114, 101, 115, 115, 32, 82
   \              73732052    
   \   000000E6   656420426163       DC8 101, 100, 32, 66, 97, 99, 107, 32, 66, 117
   \              6B204275    
   \   000000F0   74746F6E2074       DC8 116, 116, 111, 110, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   000000FA   207570206F6E       DC8 32, 117, 112, 32, 111, 110, 101, 32, 109, 101
   \              65206D65    
   \   00000104   6E75206F7220       DC8 110, 117, 32, 111, 114, 32, 104, 111, 108, 100
   \              686F6C64    
   \   0000010E   20666F72204D       DC8 32, 102, 111, 114, 32, 77, 97, 105, 110, 32
   \              61696E20    
   \   00000118   4D656E752E0A       DC8 77, 101, 110, 117, 46, 10, 10, 73, 99, 111
   \              0A49636F    
   \   00000122   6E733A204361       DC8 110, 115, 58, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   0000012C   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 83
   \              732C2053    
   \   00000136   442043617264       DC8 68, 32, 67, 97, 114, 100, 32, 83, 116, 97
   \              20537461    
   \   00000140   7475732C2047       DC8 116, 117, 115, 44, 32, 71, 80, 83, 32, 83
   \              50532053    
   \   0000014A   69676E616C20       DC8 105, 103, 110, 97, 108, 32, 83, 116, 114, 101
   \              53747265    
   \   00000154   6E6774680000       DC8 110, 103, 116, 104, 0, 0, 0, 0
   \              0000        
    704          "Touch the Analog or Digital to enable or disable the input.\
    705          \n\nWhen enabled, the analog buttons show the value of the input in the defined units.\
    706          \n\nWhen enabled, the digital buttons show the named logical state of the input.\
    707          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    708          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    709          

   \                                 In section .text, align 4, keep-with-next
    710          const char WEIGHT_INFO[] =
   \                     WEIGHT_INFO:
   \   00000000                      ; Initializer data, 224 bytes
   \   00000000   557365207468       DC8 85, 115, 101, 32, 116, 104, 101, 32, 108, 105
   \              65206C69    
   \   0000000A   737420776865       DC8 115, 116, 32, 119, 104, 101, 101, 108, 115, 32
   \              656C7320    
   \   00000014   746F20656E74       DC8 116, 111, 32, 101, 110, 116, 101, 114, 32, 116
   \              65722074    
   \   0000001E   686520342064       DC8 104, 101, 32, 52, 32, 100, 105, 103, 105, 116
   \              69676974    
   \   00000028   207765696768       DC8 32, 119, 101, 105, 103, 104, 116, 32, 105, 110
   \              7420696E    
   \   00000032   20706F756E64       DC8 32, 112, 111, 117, 110, 100, 115, 32, 111, 114
   \              73206F72    
   \   0000003C   206B696C6F67       DC8 32, 107, 105, 108, 111, 103, 114, 97, 109, 115
   \              72616D73    
   \   00000046   2C2064657065       DC8 44, 32, 100, 101, 112, 101, 110, 100, 105, 110
   \              6E64696E    
   \   00000050   67206F6E2055       DC8 103, 32, 111, 110, 32, 85, 110, 105, 116, 32
   \              6E697420    
   \   0000005A   73657474696E       DC8 115, 101, 116, 116, 105, 110, 103, 46, 10, 10
   \              672E0A0A    
   \   00000064   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   0000006E   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   00000078   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   00000082   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   0000008C   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   00000096   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   000000A0   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   000000AA   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   000000B4   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   000000BE   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   000000C8   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   000000D2   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   000000DC   68000000           DC8 104, 0, 0, 0
    711          "Use the list wheels to enter the 4 digit weight in pounds or kilograms, depending on Unit setting.\
    712          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    713          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    714          

   \                                 In section .text, align 4, keep-with-next
    715          const char CAMERA_INFO[] =
   \                     CAMERA_INFO:
   \   00000000                      ; Initializer data, 748 bytes
   \   00000000   557365207468       DC8 85, 115, 101, 32, 116, 104, 101, 32, 108, 105
   \              65206C69    
   \   0000000A   737420746F20       DC8 115, 116, 32, 116, 111, 32, 115, 101, 108, 101
   \              73656C65    
   \   00000014   637420612063       DC8 99, 116, 32, 97, 32, 99, 97, 109, 101, 114
   \              616D6572    
   \   0000001E   6120666F7220       DC8 97, 32, 102, 111, 114, 32, 116, 104, 101, 32
   \              74686520    
   \   00000028   547261716D61       DC8 84, 114, 97, 113, 109, 97, 116, 101, 32, 116
   \              74652074    
   \   00000032   6F20636F6E74       DC8 111, 32, 99, 111, 110, 116, 114, 111, 108, 32
   \              726F6C20    
   \   0000003C   6F72204E4F4E       DC8 111, 114, 32, 78, 79, 78, 69, 32, 105, 102
   \              45206966    
   \   00000046   206E6F206361       DC8 32, 110, 111, 32, 99, 97, 109, 101, 114, 97
   \              6D657261    
   \   00000050   20697320636F       DC8 32, 105, 115, 32, 99, 111, 110, 110, 101, 99
   \              6E6E6563    
   \   0000005A   7465642E0A0A       DC8 116, 101, 100, 46, 10, 10, 73, 102, 32, 71
   \              49662047    
   \   00000064   6F50726F2048       DC8 111, 80, 114, 111, 32, 72, 69, 82, 79, 49
   \              45524F31    
   \   0000006E   206F72204845       DC8 32, 111, 114, 32, 72, 69, 82, 79, 50, 44
   \              524F322C    
   \   00000078   2063686F6F73       DC8 32, 99, 104, 111, 111, 115, 101, 32, 116, 104
   \              65207468    
   \   00000082   652073656C65       DC8 101, 32, 115, 101, 108, 101, 99, 116, 105, 111
   \              6374696F    
   \   0000008C   6E20666F7220       DC8 110, 32, 102, 111, 114, 32, 116, 104, 101, 32
   \              74686520    
   \   00000096   617070726F70       DC8 97, 112, 112, 114, 111, 112, 114, 105, 97, 116
   \              72696174    
   \   000000A0   652053656E73       DC8 101, 32, 83, 101, 110, 115, 111, 114, 32, 85
   \              6F722055    
   \   000000AA   6E697420696E       DC8 110, 105, 116, 32, 105, 110, 116, 101, 114, 102
   \              74657266    
   \   000000B4   616365206D6F       DC8 97, 99, 101, 32, 109, 111, 100, 117, 108, 101
   \              64756C65    
   \   000000BE   2E0A0A496620       DC8 46, 10, 10, 73, 102, 32, 82, 101, 112, 108
   \              5265706C    
   \   000000C8   617920584431       DC8 97, 121, 32, 88, 68, 49, 48, 56, 48, 44
   \              3038302C    
   \   000000D2   2063686F6F73       DC8 32, 99, 104, 111, 111, 115, 101, 32, 116, 104
   \              65207468    
   \   000000DC   652073656C65       DC8 101, 32, 115, 101, 108, 101, 99, 116, 105, 111
   \              6374696F    
   \   000000E6   6E20666F7220       DC8 110, 32, 102, 111, 114, 32, 116, 104, 101, 32
   \              74686520    
   \   000000F0   617070726F70       DC8 97, 112, 112, 114, 111, 112, 114, 105, 97, 116
   \              72696174    
   \   000000FA   652053656E73       DC8 101, 32, 83, 101, 110, 115, 111, 114, 32, 85
   \              6F722055    
   \   00000104   6E697420696E       DC8 110, 105, 116, 32, 105, 110, 116, 101, 114, 102
   \              74657266    
   \   0000010E   616365206D6F       DC8 97, 99, 101, 32, 109, 111, 100, 117, 108, 101
   \              64756C65    
   \   00000118   2E0A0A496620       DC8 46, 10, 10, 73, 102, 32, 82, 101, 112, 108
   \              5265706C    
   \   00000122   6179204D696E       DC8 97, 121, 32, 77, 105, 110, 105, 32, 111, 114
   \              69206F72    
   \   0000012C   205072696D65       DC8 32, 80, 114, 105, 109, 101, 32, 88, 44, 32
   \              20582C20    
   \   00000136   63686F6F7365       DC8 99, 104, 111, 111, 115, 101, 32, 116, 104, 101
   \              20746865    
   \   00000140   20617070726F       DC8 32, 97, 112, 112, 114, 111, 112, 114, 105, 97
   \              70726961    
   \   0000014A   74652073656C       DC8 116, 101, 32, 115, 101, 108, 101, 99, 116, 105
   \              65637469    
   \   00000154   6F6E2E0A0A49       DC8 111, 110, 46, 10, 10, 73, 102, 32, 83, 111
   \              6620536F    
   \   0000015E   6E7920484420       DC8 110, 121, 32, 72, 68, 32, 99, 97, 109, 99
   \              63616D63    
   \   00000168   6F726465722C       DC8 111, 114, 100, 101, 114, 44, 32, 115, 101, 108
   \              2073656C    
   \   00000172   65637420536F       DC8 101, 99, 116, 32, 83, 111, 110, 121, 32, 72
   \              6E792048    
   \   0000017C   442E0A0A4966       DC8 68, 46, 10, 10, 73, 102, 32, 82, 97, 99
   \              20526163    
   \   00000186   6543616D2048       DC8 101, 67, 97, 109, 32, 72, 68, 32, 99, 97
   \              44206361    
   \   00000190   6D636F726465       DC8 109, 99, 111, 114, 100, 101, 114, 44, 32, 99
   \              722C2063    
   \   0000019A   686F6F736520       DC8 104, 111, 111, 115, 101, 32, 82, 97, 99, 101
   \              52616365    
   \   000001A4   43616D204844       DC8 67, 97, 109, 32, 72, 68, 46, 10, 10, 73
   \              2E0A0A49    
   \   000001AE   662043686173       DC8 102, 32, 67, 104, 97, 115, 101, 67, 97, 109
   \              6543616D    
   \   000001B8   205044522D31       DC8 32, 80, 68, 82, 45, 49, 48, 48, 32, 99
   \              30302063    
   \   000001C2   6F6E6E656374       DC8 111, 110, 110, 101, 99, 116, 101, 100, 32, 118
   \              65642076    
   \   000001CC   696120547261       DC8 105, 97, 32, 84, 114, 97, 113, 68, 97, 116
   \              71446174    
   \   000001D6   612048442028       DC8 97, 32, 72, 68, 32, 40, 76, 65, 78, 67
   \              4C414E43    
   \   000001E0   292C2073656C       DC8 41, 44, 32, 115, 101, 108, 101, 99, 116, 32
   \              65637420    
   \   000001EA   436861736543       DC8 67, 104, 97, 115, 101, 67, 97, 109, 32, 83
   \              616D2053    
   \   000001F4   44204C414E43       DC8 68, 32, 76, 65, 78, 67, 46, 10, 10, 78
   \              2E0A0A4E    
   \   000001FE   4F54453A2043       DC8 79, 84, 69, 58, 32, 67, 104, 97, 115, 101
   \              68617365    
   \   00000208   43616D205044       DC8 67, 97, 109, 32, 80, 68, 82, 45, 49, 48
   \              522D3130    
   \   00000212   3020636F6E6E       DC8 48, 32, 99, 111, 110, 110, 101, 99, 116, 101
   \              65637465    
   \   0000021C   642076696120       DC8 100, 32, 118, 105, 97, 32, 84, 114, 97, 113
   \              54726171    
   \   00000226   53796E63206F       DC8 83, 121, 110, 99, 32, 111, 114, 32, 84, 114
   \              72205472    
   \   00000230   617144617461       DC8 97, 113, 68, 97, 116, 97, 32, 73, 73, 32
   \              20494920    
   \   0000023A   616E6420616C       DC8 97, 110, 100, 32, 97, 108, 108, 32, 83, 111
   \              6C20536F    
   \   00000244   6E7920534420       DC8 110, 121, 32, 83, 68, 32, 99, 97, 109, 99
   \              63616D63    
   \   0000024E   6F7264657273       DC8 111, 114, 100, 101, 114, 115, 32, 97, 114, 101
   \              20617265    
   \   00000258   206E6F206C6F       DC8 32, 110, 111, 32, 108, 111, 110, 103, 101, 114
   \              6E676572    
   \   00000262   20737570706F       DC8 32, 115, 117, 112, 112, 111, 114, 116, 101, 100
   \              72746564    
   \   0000026C   2E0A0A507265       DC8 46, 10, 10, 80, 114, 101, 115, 115, 32, 82
   \              73732052    
   \   00000276   656420426163       DC8 101, 100, 32, 66, 97, 99, 107, 32, 66, 117
   \              6B204275    
   \   00000280   74746F6E2074       DC8 116, 116, 111, 110, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   0000028A   207570206F6E       DC8 32, 117, 112, 32, 111, 110, 101, 32, 109, 101
   \              65206D65    
   \   00000294   6E75206F7220       DC8 110, 117, 32, 111, 114, 32, 104, 111, 108, 100
   \              686F6C64    
   \   0000029E   20666F72204D       DC8 32, 102, 111, 114, 32, 77, 97, 105, 110, 32
   \              61696E20    
   \   000002A8   4D656E752E0A       DC8 77, 101, 110, 117, 46, 10, 10, 73, 99, 111
   \              0A49636F    
   \   000002B2   6E733A204361       DC8 110, 115, 58, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   000002BC   205374617475       DC8 32, 83, 116, 97, 116, 117, 115, 44, 32, 83
   \              732C2053    
   \   000002C6   442043617264       DC8 68, 32, 67, 97, 114, 100, 32, 83, 116, 97
   \              20537461    
   \   000002D0   7475732C2047       DC8 116, 117, 115, 44, 32, 71, 80, 83, 32, 83
   \              50532053    
   \   000002DA   69676E616C20       DC8 105, 103, 110, 97, 108, 32, 83, 116, 114, 101
   \              53747265    
   \   000002E4   6E6774680000       DC8 110, 103, 116, 104, 0, 0, 0, 0
   \              0000        
    716          "Use the list to select a camera for the Traqmate to control or NONE if no camera is connected.\
    717          \n\nIf GoPro HERO1 or HERO2, choose the selection for the appropriate Sensor Unit interface module.\
    718          \n\nIf Replay XD1080, choose the selection for the appropriate Sensor Unit interface module.\
    719          \n\nIf Replay Mini or Prime X, choose the appropriate selection.\
    720          \n\nIf Sony HD camcorder, select Sony HD.\
    721          \n\nIf RaceCam HD camcorder, choose RaceCam HD.\
    722          \n\nIf ChaseCam PDR-100 connected via TraqData HD (LANC), select ChaseCam SD LANC.\
    723          \n\nNOTE: ChaseCam PDR-100 connected via TraqSync or TraqData II and all Sony SD camcorders are no longer supported.\
    724          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    725          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    726          

   \                                 In section .text, align 4, keep-with-next
    727          const char CAMERA_SETUP_INFO[] =
   \                     CAMERA_SETUP_INFO:
   \   00000000                      ; Initializer data, 904 bytes
   \   00000000   456E61626C65       DC8 69, 110, 97, 98, 108, 101, 115, 47, 100, 105
   \              732F6469    
   \   0000000A   7361626C6573       DC8 115, 97, 98, 108, 101, 115, 32, 97, 110, 100
   \              20616E64    
   \   00000014   20636F6E6669       DC8 32, 99, 111, 110, 102, 105, 103, 117, 114, 101
   \              67757265    
   \   0000001E   732063616D65       DC8 115, 32, 99, 97, 109, 101, 114, 97, 115, 46
   \              7261732E    
   \   00000028   0A0A54726171       DC8 10, 10, 84, 114, 97, 113, 68, 97, 115, 104
   \              44617368    
   \   00000032   205553422043       DC8 32, 85, 83, 66, 32, 67, 97, 109, 32, 116
   \              616D2074    
   \   0000003C   6F67676C6573       DC8 111, 103, 103, 108, 101, 115, 32, 101, 110, 97
   \              20656E61    
   \   00000046   626C696E6720       DC8 98, 108, 105, 110, 103, 32, 111, 102, 32, 99
   \              6F662063    
   \   00000050   616D65726120       DC8 97, 109, 101, 114, 97, 32, 97, 116, 116, 97
   \              61747461    
   \   0000005A   636865642074       DC8 99, 104, 101, 100, 32, 116, 111, 32, 116, 104
   \              6F207468    
   \   00000064   652054726171       DC8 101, 32, 84, 114, 97, 113, 68, 97, 115, 104
   \              44617368    
   \   0000006E   205553422070       DC8 32, 85, 83, 66, 32, 112, 111, 114, 116, 46
   \              6F72742E    
   \   00000078   0A0A54726171       DC8 10, 10, 84, 114, 97, 113, 68, 97, 115, 104
   \              44617368    
   \   00000082   2043616D2044       DC8 32, 67, 97, 109, 32, 68, 101, 108, 97, 121
   \              656C6179    
   \   0000008C   207365747320       DC8 32, 115, 101, 116, 115, 32, 116, 104, 101, 32
   \              74686520    
   \   00000096   737461727475       DC8 115, 116, 97, 114, 116, 117, 112, 32, 116, 105
   \              70207469    
   \   000000A0   6D6520666F72       DC8 109, 101, 32, 102, 111, 114, 32, 116, 104, 101
   \              20746865    
   \   000000AA   205553422063       DC8 32, 85, 83, 66, 32, 99, 97, 109, 101, 114
   \              616D6572    
   \   000000B4   612E20496620       DC8 97, 46, 32, 73, 102, 32, 97, 32, 99, 97
   \              61206361    
   \   000000BE   6D6572612069       DC8 109, 101, 114, 97, 32, 105, 115, 32, 97, 116
   \              73206174    
   \   000000C8   746163686564       DC8 116, 97, 99, 104, 101, 100, 32, 116, 111, 32
   \              20746F20    
   \   000000D2   746865205365       DC8 116, 104, 101, 32, 83, 101, 110, 115, 111, 114
   \              6E736F72    
   \   000000DC   20556E69742C       DC8 32, 85, 110, 105, 116, 44, 32, 116, 104, 101
   \              20746865    
   \   000000E6   205553422063       DC8 32, 85, 83, 66, 32, 99, 97, 109, 101, 114
   \              616D6572    
   \   000000F0   612077696C6C       DC8 97, 32, 119, 105, 108, 108, 32, 98, 101, 32
   \              20626520    
   \   000000FA   64656C617965       DC8 100, 101, 108, 97, 121, 101, 100, 32, 98, 121
   \              64206279    
   \   00000104   207468652073       DC8 32, 116, 104, 101, 32, 115, 101, 116, 32, 116
   \              65742074    
   \   0000010E   696D652E204F       DC8 105, 109, 101, 46, 32, 79, 116, 104, 101, 114
   \              74686572    
   \   00000118   776973652C20       DC8 119, 105, 115, 101, 44, 32, 116, 104, 101, 32
   \              74686520    
   \   00000122   646174612063       DC8 100, 97, 116, 97, 32, 99, 111, 108, 108, 101
   \              6F6C6C65    
   \   0000012C   6374696F6E20       DC8 99, 116, 105, 111, 110, 32, 119, 105, 108, 108
   \              77696C6C    
   \   00000136   206265206465       DC8 32, 98, 101, 32, 100, 101, 108, 97, 121, 101
   \              6C617965    
   \   00000140   642062792074       DC8 100, 32, 98, 121, 32, 116, 104, 101, 32, 115
   \              68652073    
   \   0000014A   65742074696D       DC8 101, 116, 32, 116, 105, 109, 101, 32, 116, 111
   \              6520746F    
   \   00000154   20616C6C6F77       DC8 32, 97, 108, 108, 111, 119, 32, 116, 104, 101
   \              20746865    
   \   0000015E   2063616D6572       DC8 32, 99, 97, 109, 101, 114, 97, 32, 116, 105
   \              61207469    
   \   00000168   6D6520746F20       DC8 109, 101, 32, 116, 111, 32, 105, 110, 105, 116
   \              696E6974    
   \   00000172   69616C697A65       DC8 105, 97, 108, 105, 122, 101, 46, 10, 10, 73
   \              2E0A0A49    
   \   0000017C   66206E6F2053       DC8 102, 32, 110, 111, 32, 83, 85, 32, 99, 97
   \              55206361    
   \   00000186   6D6572612069       DC8 109, 101, 114, 97, 32, 105, 115, 32, 99, 111
   \              7320636F    
   \   00000190   6E6E65637465       DC8 110, 110, 101, 99, 116, 101, 100, 44, 32, 117
   \              642C2075    
   \   0000019A   736520746865       DC8 115, 101, 32, 116, 104, 101, 115, 101, 32, 118
   \              73652076    
   \   000001A4   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 77, 111, 98
   \              204D6F62    
   \   000001AE   697573206F72       DC8 105, 117, 115, 32, 111, 114, 32, 73, 110, 110
   \              20496E6E    
   \   000001B8   6F7676206361       DC8 111, 118, 118, 32, 99, 97, 109, 101, 114, 97
   \              6D657261    
   \   000001C2   203D20342E30       DC8 32, 61, 32, 52, 46, 48, 115, 44, 32, 82
   \              732C2052    
   \   000001CC   65706C617958       DC8 101, 112, 108, 97, 121, 88, 68, 32, 61, 32
   \              44203D20    
   \   000001D6   372E34732E0A       DC8 55, 46, 52, 115, 46, 10, 10, 83, 101, 110
   \              0A53656E    
   \   000001E0   736F7220556E       DC8 115, 111, 114, 32, 85, 110, 105, 116, 32, 67
   \              69742043    
   \   000001EA   616D2073656C       DC8 97, 109, 32, 115, 101, 108, 101, 99, 116, 115
   \              65637473    
   \   000001F4   207468652063       DC8 32, 116, 104, 101, 32, 99, 97, 109, 101, 114
   \              616D6572    
   \   000001FE   612074797065       DC8 97, 32, 116, 121, 112, 101, 32, 119, 104, 105
   \              20776869    
   \   00000208   636820697320       DC8 99, 104, 32, 105, 115, 32, 97, 116, 116, 97
   \              61747461    
   \   00000212   636865642074       DC8 99, 104, 101, 100, 32, 116, 111, 32, 116, 104
   \              6F207468    
   \   0000021C   652053656E73       DC8 101, 32, 83, 101, 110, 115, 111, 114, 32, 85
   \              6F722055    
   \   00000226   6E6974207669       DC8 110, 105, 116, 32, 118, 105, 97, 32, 84, 114
   \              61205472    
   \   00000230   617144617461       DC8 97, 113, 68, 97, 116, 97, 32, 111, 114, 32
   \              206F7220    
   \   0000023A   547261715379       DC8 84, 114, 97, 113, 83, 121, 110, 99, 32, 109
   \              6E63206D    
   \   00000244   6F64756C6573       DC8 111, 100, 117, 108, 101, 115, 46, 10, 10, 84
   \              2E0A0A54    
   \   0000024E   657374204361       DC8 101, 115, 116, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   00000258   732077696C6C       DC8 115, 32, 119, 105, 108, 108, 32, 115, 101, 110
   \              2073656E    
   \   00000262   64206F757420       DC8 100, 32, 111, 117, 116, 32, 116, 104, 101, 32
   \              74686520    
   \   0000026C   636F6D6D616E       DC8 99, 111, 109, 109, 97, 110, 100, 32, 116, 111
   \              6420746F    
   \   00000276   207475726E20       DC8 32, 116, 117, 114, 110, 32, 111, 110, 32, 97
   \              6F6E2061    
   \   00000280   6C6C20656E61       DC8 108, 108, 32, 101, 110, 97, 98, 108, 101, 100
   \              626C6564    
   \   0000028A   2063616D6572       DC8 32, 99, 97, 109, 101, 114, 97, 115, 32, 116
   \              61732074    
   \   00000294   6F20616C6C6F       DC8 111, 32, 97, 108, 108, 111, 119, 32, 116, 104
   \              77207468    
   \   0000029E   656D20746F20       DC8 101, 109, 32, 116, 111, 32, 98, 101, 32, 116
   \              62652074    
   \   000002A8   65737465642E       DC8 101, 115, 116, 101, 100, 46, 32, 67, 97, 109
   \              2043616D    
   \   000002B2   657261732077       DC8 101, 114, 97, 115, 32, 119, 105, 108, 108, 32
   \              696C6C20    
   \   000002BC   626520747572       DC8 98, 101, 32, 116, 117, 114, 110, 101, 100, 32
   \              6E656420    
   \   000002C6   6F6666207768       DC8 111, 102, 102, 32, 119, 104, 101, 110, 32, 121
   \              656E2079    
   \   000002D0   6F75206C6561       DC8 111, 117, 32, 108, 101, 97, 118, 101, 32, 116
   \              76652074    
   \   000002DA   686973207363       DC8 104, 105, 115, 32, 115, 99, 114, 101, 101, 110
   \              7265656E    
   \   000002E4   206F72207072       DC8 32, 111, 114, 32, 112, 114, 101, 115, 115, 32
   \              65737320    
   \   000002EE   546573742043       DC8 84, 101, 115, 116, 32, 67, 97, 109, 101, 114
   \              616D6572    
   \   000002F8   617320612073       DC8 97, 115, 32, 97, 32, 115, 101, 99, 111, 110
   \              65636F6E    
   \   00000302   642074696D65       DC8 100, 32, 116, 105, 109, 101, 46, 10, 10, 80
   \              2E0A0A50    
   \   0000030C   726573732052       DC8 114, 101, 115, 115, 32, 82, 101, 100, 32, 66
   \              65642042    
   \   00000316   61636B204275       DC8 97, 99, 107, 32, 66, 117, 116, 116, 111, 110
   \              74746F6E    
   \   00000320   20746F20676F       DC8 32, 116, 111, 32, 103, 111, 32, 117, 112, 32
   \              20757020    
   \   0000032A   6F6E65206D65       DC8 111, 110, 101, 32, 109, 101, 110, 117, 32, 111
   \              6E75206F    
   \   00000334   7220686F6C64       DC8 114, 32, 104, 111, 108, 100, 32, 102, 111, 114
   \              20666F72    
   \   0000033E   204D61696E20       DC8 32, 77, 97, 105, 110, 32, 77, 101, 110, 117
   \              4D656E75    
   \   00000348   2E0A0A49636F       DC8 46, 10, 10, 73, 99, 111, 110, 115, 58, 32
   \              6E733A20    
   \   00000352   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 116, 97
   \              20537461    
   \   0000035C   7475732C2053       DC8 116, 117, 115, 44, 32, 83, 68, 32, 67, 97
   \              44204361    
   \   00000366   726420537461       DC8 114, 100, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   00000370   204750532053       DC8 32, 71, 80, 83, 32, 83, 105, 103, 110, 97
   \              69676E61    
   \   0000037A   6C2053747265       DC8 108, 32, 83, 116, 114, 101, 110, 103, 116, 104
   \              6E677468    
   \   00000384   00000000           DC8 0, 0, 0, 0
    728          "Enables/disables and configures cameras.\
    729          \n\nTraqDash USB Cam toggles enabling of camera attached to the TraqDash USB port.\
    730          \n\nTraqDash Cam Delay sets the startup time for the USB camera. If a camera is attached to the Sensor Unit, the USB camera will be delayed by the set time. \
    731          Otherwise, the data collection will be delayed by the set time to allow the camera time to initialize.\
    732          \n\nIf no SU camera is connected, use these values: Mobius or Innovv camera = 4.0s, ReplayXD = 7.4s.\
    733          \n\nSensor Unit Cam selects the camera type which is attached to the Sensor Unit via TraqData or TraqSync modules.\
    734          \n\nTest Cameras will send out the command to turn on all enabled cameras to allow them to be tested. \
    735          Cameras will be turned off when you leave this screen or press Test Cameras a second time.\
    736          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    737          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    738          

   \                                 In section .text, align 4, keep-with-next
    739          const char CAMERA_DELAY_INFO[] =
   \                     CAMERA_DELAY_INFO:
   \   00000000                      ; Initializer data, 508 bytes
   \   00000000   557365207468       DC8 85, 115, 101, 32, 116, 104, 101, 32, 108, 105
   \              65206C69    
   \   0000000A   737420776865       DC8 115, 116, 32, 119, 104, 101, 101, 108, 32, 116
   \              656C2074    
   \   00000014   6F2063686F6F       DC8 111, 32, 99, 104, 111, 111, 115, 101, 32, 116
   \              73652074    
   \   0000001E   6865206E756D       DC8 104, 101, 32, 110, 117, 109, 98, 101, 114, 32
   \              62657220    
   \   00000028   6F6620736563       DC8 111, 102, 32, 115, 101, 99, 111, 110, 100, 115
   \              6F6E6473    
   \   00000032   2E2049662061       DC8 46, 32, 73, 102, 32, 97, 32, 99, 97, 109
   \              2063616D    
   \   0000003C   657261206973       DC8 101, 114, 97, 32, 105, 115, 32, 97, 116, 116
   \              20617474    
   \   00000046   616368656420       DC8 97, 99, 104, 101, 100, 32, 116, 111, 32, 116
   \              746F2074    
   \   00000050   68652053656E       DC8 104, 101, 32, 83, 101, 110, 115, 111, 114, 32
   \              736F7220    
   \   0000005A   556E69742C20       DC8 85, 110, 105, 116, 44, 32, 116, 104, 101, 32
   \              74686520    
   \   00000064   555342206361       DC8 85, 83, 66, 32, 99, 97, 109, 101, 114, 97
   \              6D657261    
   \   0000006E   2077696C6C20       DC8 32, 119, 105, 108, 108, 32, 98, 101, 32, 100
   \              62652064    
   \   00000078   656C61796564       DC8 101, 108, 97, 121, 101, 100, 32, 98, 121, 32
   \              20627920    
   \   00000082   746865207365       DC8 116, 104, 101, 32, 115, 101, 116, 32, 116, 105
   \              74207469    
   \   0000008C   6D652E204F74       DC8 109, 101, 46, 32, 79, 116, 104, 101, 114, 119
   \              68657277    
   \   00000096   6973652C2074       DC8 105, 115, 101, 44, 32, 116, 104, 101, 32, 100
   \              68652064    
   \   000000A0   61746120636F       DC8 97, 116, 97, 32, 99, 111, 108, 108, 101, 99
   \              6C6C6563    
   \   000000AA   74696F6E2077       DC8 116, 105, 111, 110, 32, 119, 105, 108, 108, 32
   \              696C6C20    
   \   000000B4   62652064656C       DC8 98, 101, 32, 100, 101, 108, 97, 121, 101, 100
   \              61796564    
   \   000000BE   206279207468       DC8 32, 98, 121, 32, 116, 104, 101, 32, 115, 101
   \              65207365    
   \   000000C8   742074696D65       DC8 116, 32, 116, 105, 109, 101, 32, 116, 111, 32
   \              20746F20    
   \   000000D2   616C6C6F7720       DC8 97, 108, 108, 111, 119, 32, 116, 104, 101, 32
   \              74686520    
   \   000000DC   63616D657261       DC8 99, 97, 109, 101, 114, 97, 32, 116, 105, 109
   \              2074696D    
   \   000000E6   6520746F2069       DC8 101, 32, 116, 111, 32, 105, 110, 105, 116, 105
   \              6E697469    
   \   000000F0   616C697A652E       DC8 97, 108, 105, 122, 101, 46, 77, 105, 110, 105
   \              4D696E69    
   \   000000FA   6D756D207661       DC8 109, 117, 109, 32, 118, 97, 108, 117, 101, 32
   \              6C756520    
   \   00000104   697320302E30       DC8 105, 115, 32, 48, 46, 48, 32, 97, 110, 100
   \              20616E64    
   \   0000010E   206D6178696D       DC8 32, 109, 97, 120, 105, 109, 117, 109, 32, 118
   \              756D2076    
   \   00000118   616C75652069       DC8 97, 108, 117, 101, 32, 105, 115, 32, 57, 46
   \              7320392E    
   \   00000122   392E0A0A5573       DC8 57, 46, 10, 10, 85, 115, 101, 32, 97, 112
   \              65206170    
   \   0000012C   70726F78696D       DC8 112, 114, 111, 120, 105, 109, 97, 116, 101, 108
   \              6174656C    
   \   00000136   7920372E3420       DC8 121, 32, 55, 46, 52, 32, 115, 101, 99, 111
   \              7365636F    
   \   00000140   6E647320666F       DC8 110, 100, 115, 32, 102, 111, 114, 32, 97, 32
   \              72206120    
   \   0000014A   5265706C6179       DC8 82, 101, 112, 108, 97, 121, 32, 99, 97, 109
   \              2063616D    
   \   00000154   65726120616E       DC8 101, 114, 97, 32, 97, 110, 100, 32, 52, 46
   \              6420342E    
   \   0000015E   30207365636F       DC8 48, 32, 115, 101, 99, 111, 110, 100, 32, 102
   \              6E642066    
   \   00000168   6F722061204D       DC8 111, 114, 32, 97, 32, 77, 111, 98, 105, 117
   \              6F626975    
   \   00000172   732041637469       DC8 115, 32, 65, 99, 116, 105, 111, 110, 32, 67
   \              6F6E2043    
   \   0000017C   616D2E0A0A50       DC8 97, 109, 46, 10, 10, 80, 114, 101, 115, 115
   \              72657373    
   \   00000186   205265642042       DC8 32, 82, 101, 100, 32, 66, 97, 99, 107, 32
   \              61636B20    
   \   00000190   427574746F6E       DC8 66, 117, 116, 116, 111, 110, 32, 116, 111, 32
   \              20746F20    
   \   0000019A   676F20757020       DC8 103, 111, 32, 117, 112, 32, 111, 110, 101, 32
   \              6F6E6520    
   \   000001A4   6D656E75206F       DC8 109, 101, 110, 117, 32, 111, 114, 32, 104, 111
   \              7220686F    
   \   000001AE   6C6420666F72       DC8 108, 100, 32, 102, 111, 114, 32, 77, 97, 105
   \              204D6169    
   \   000001B8   6E204D656E75       DC8 110, 32, 77, 101, 110, 117, 46, 10, 10, 73
   \              2E0A0A49    
   \   000001C2   636F6E733A20       DC8 99, 111, 110, 115, 58, 32, 67, 97, 109, 101
   \              43616D65    
   \   000001CC   726120537461       DC8 114, 97, 32, 83, 116, 97, 116, 117, 115, 44
   \              7475732C    
   \   000001D6   205344204361       DC8 32, 83, 68, 32, 67, 97, 114, 100, 32, 83
   \              72642053    
   \   000001E0   74617475732C       DC8 116, 97, 116, 117, 115, 44, 32, 71, 80, 83
   \              20475053    
   \   000001EA   205369676E61       DC8 32, 83, 105, 103, 110, 97, 108, 32, 83, 116
   \              6C205374    
   \   000001F4   72656E677468       DC8 114, 101, 110, 103, 116, 104, 0, 0
   \              0000        
    740          "Use the list wheel to choose the number of seconds. If a camera is attached to the Sensor Unit, the USB camera will be delayed by the set time. \
    741          Otherwise, the data collection will be delayed by the set time to allow the camera time to initialize.\
    742          Minimum value is 0.0 and maximum value is 9.9.\
    743          \n\nUse approximately 7.4 seconds for a Replay camera and 4.0 second for a Mobius Action Cam.\
    744          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    745          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    746          

   \                                 In section .text, align 4, keep-with-next
    747          const char ANALOG_SETTINGS_INFO[] =
   \                     ANALOG_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 1772 bytes
   \   00000000   53686F777320       DC8 83, 104, 111, 119, 115, 32, 116, 104, 101, 32
   \              74686520    
   \   0000000A   706879736963       DC8 112, 104, 121, 115, 105, 99, 97, 108, 32, 97
   \              616C2061    
   \   00000014   6E6420616C61       DC8 110, 100, 32, 97, 108, 97, 114, 109, 32, 115
   \              726D2073    
   \   0000001E   74617465206F       DC8 116, 97, 116, 101, 32, 111, 102, 32, 116, 104
   \              66207468    
   \   00000028   6520616E616C       DC8 101, 32, 97, 110, 97, 108, 111, 103, 32, 105
   \              6F672069    
   \   00000032   6E7075742E0A       DC8 110, 112, 117, 116, 46, 10, 10, 69, 110, 97
   \              0A456E61    
   \   0000003C   626C65206F72       DC8 98, 108, 101, 32, 111, 114, 32, 68, 105, 115
   \              20446973    
   \   00000046   61626C652062       DC8 97, 98, 108, 101, 32, 98, 117, 116, 116, 111
   \              7574746F    
   \   00000050   6E20746F2074       DC8 110, 32, 116, 111, 32, 116, 117, 114, 110, 32
   \              75726E20    
   \   0000005A   6F6E206F7220       DC8 111, 110, 32, 111, 114, 32, 111, 102, 102, 32
   \              6F666620    
   \   00000064   7265636F7264       DC8 114, 101, 99, 111, 114, 100, 105, 110, 103, 32
   \              696E6720    
   \   0000006E   6F6620746869       DC8 111, 102, 32, 116, 104, 105, 115, 32, 105, 110
   \              7320696E    
   \   00000078   7075742E0A0A       DC8 112, 117, 116, 46, 10, 10, 69, 100, 105, 116
   \              45646974    
   \   00000082   205363616C65       DC8 32, 83, 99, 97, 108, 101, 32, 116, 111, 32
   \              20746F20    
   \   0000008C   6368616E6765       DC8 99, 104, 97, 110, 103, 101, 32, 98, 101, 116
   \              20626574    
   \   00000096   7765656E2076       DC8 119, 101, 101, 110, 32, 118, 111, 108, 116, 97
   \              6F6C7461    
   \   000000A0   67652072616E       DC8 103, 101, 32, 114, 97, 110, 103, 101, 115, 46
   \              6765732E    
   \   000000AA   0A0A45646974       DC8 10, 10, 69, 100, 105, 116, 32, 65, 108, 97
   \              20416C61    
   \   000000B4   726D20746F20       DC8 114, 109, 32, 116, 111, 32, 97, 115, 115, 105
   \              61737369    
   \   000000BE   676E20616E20       DC8 103, 110, 32, 97, 110, 32, 97, 108, 97, 114
   \              616C6172    
   \   000000C8   6D2072616E67       DC8 109, 32, 114, 97, 110, 103, 101, 32, 116, 111
   \              6520746F    
   \   000000D2   20616E20416C       DC8 32, 97, 110, 32, 65, 108, 97, 114, 109, 32
   \              61726D20    
   \   000000DC   4C45442E0A0A       DC8 76, 69, 68, 46, 10, 10, 82, 101, 110, 97
   \              52656E61    
   \   000000E6   6D6520496E70       DC8 109, 101, 32, 73, 110, 112, 117, 116, 32, 116
   \              75742074    
   \   000000F0   6F206368616E       DC8 111, 32, 99, 104, 97, 110, 103, 101, 32, 116
   \              67652074    
   \   000000FA   6865206E616D       DC8 104, 101, 32, 110, 97, 109, 101, 32, 111, 102
   \              65206F66    
   \   00000104   207468652061       DC8 32, 116, 104, 101, 32, 97, 110, 97, 108, 111
   \              6E616C6F    
   \   0000010E   6720696E7075       DC8 103, 32, 105, 110, 112, 117, 116, 46, 10, 10
   \              742E0A0A    
   \   00000118   52656E616D65       DC8 82, 101, 110, 97, 109, 101, 32, 85, 110, 105
   \              20556E69    
   \   00000122   747320746F20       DC8 116, 115, 32, 116, 111, 32, 99, 104, 97, 110
   \              6368616E    
   \   0000012C   676520746865       DC8 103, 101, 32, 116, 104, 101, 32, 110, 97, 109
   \              206E616D    
   \   00000136   65206F662074       DC8 101, 32, 111, 102, 32, 116, 104, 101, 32, 117
   \              68652075    
   \   00000140   6E6974732064       DC8 110, 105, 116, 115, 32, 100, 105, 115, 112, 108
   \              6973706C    
   \   0000014A   617965642E0A       DC8 97, 121, 101, 100, 46, 10, 10, 83, 111, 109
   \              0A536F6D    
   \   00000154   6520636F6D6D       DC8 101, 32, 99, 111, 109, 109, 111, 110, 32, 105
   \              6F6E2069    
   \   0000015E   6E707574733A       DC8 110, 112, 117, 116, 115, 58, 10, 10, 42, 42
   \              0A0A2A2A    
   \   00000168   2041454D2041       DC8 32, 65, 69, 77, 32, 65, 105, 114, 70, 117
   \              69724675    
   \   00000172   656C202A2A0A       DC8 101, 108, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   0000017C   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 86, 32
   \              20305620    
   \   00000186   484947482035       DC8 72, 73, 71, 72, 32, 53, 86, 44, 10, 86
   \              562C0A56    
   \   00000190   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   0000019A   20382E352048       DC8 32, 56, 46, 53, 32, 72, 73, 71, 72, 32
   \              49474820    
   \   000001A4   31382E302C0A       DC8 49, 56, 46, 48, 44, 10, 53, 32, 86, 111
   \              3520566F    
   \   000001AE   6C742052616E       DC8 108, 116, 32, 82, 97, 110, 103, 101, 44, 10
   \              67652C0A    
   \   000001B8   556E69747320       DC8 85, 110, 105, 116, 115, 32, 61, 32, 34, 82
   \              3D202252    
   \   000001C2   6174696F222C       DC8 97, 116, 105, 111, 34, 44, 10, 65, 108, 97
   \              0A416C61    
   \   000001CC   726D2041626F       DC8 114, 109, 32, 65, 98, 111, 118, 101, 32, 49
   \              76652031    
   \   000001D6   332E370A0A2A       DC8 51, 46, 55, 10, 10, 42, 42, 32, 65, 69
   \              2A204145    
   \   000001E0   4D2037355053       DC8 77, 32, 55, 53, 80, 83, 73, 32, 77, 65
   \              49204D41    
   \   000001EA   502053656E73       DC8 80, 32, 83, 101, 110, 115, 111, 114, 32, 42
   \              6F72202A    
   \   000001F4   2A0A566F6C74       DC8 42, 10, 86, 111, 108, 116, 115, 58, 32, 76
   \              733A204C    
   \   000001FE   4F5720302E35       DC8 79, 87, 32, 48, 46, 53, 86, 32, 72, 73
   \              56204849    
   \   00000208   474820342E35       DC8 71, 72, 32, 52, 46, 53, 86, 44, 10, 86
   \              562C0A56    
   \   00000212   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   0000021C   202D31342E37       DC8 32, 45, 49, 52, 46, 55, 32, 72, 73, 71
   \              20484947    
   \   00000226   482033352E33       DC8 72, 32, 51, 53, 46, 51, 44, 10, 53, 32
   \              2C0A3520    
   \   00000230   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   0000023A   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   00000244   22505349220A       DC8 34, 80, 83, 73, 34, 10, 10, 42, 42, 32
   \              0A2A2A20    
   \   0000024E   41454D205465       DC8 65, 69, 77, 32, 84, 101, 109, 112, 101, 114
   \              6D706572    
   \   00000258   617475726520       DC8 97, 116, 117, 114, 101, 32, 83, 101, 110, 115
   \              53656E73    
   \   00000262   6F72202A2A0A       DC8 111, 114, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   0000026C   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 46, 48
   \              20302E30    
   \   00000276   313656204849       DC8 49, 54, 86, 32, 72, 73, 71, 72, 32, 48
   \              47482030    
   \   00000280   2E39562C0A56       DC8 46, 57, 86, 44, 10, 86, 97, 108, 117, 101
   \              616C7565    
   \   0000028A   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 51, 50, 46
   \              2033322E    
   \   00000294   302048494748       DC8 48, 32, 72, 73, 71, 72, 32, 50, 51, 48
   \              20323330    
   \   0000029E   2E302C0A3520       DC8 46, 48, 44, 10, 53, 32, 86, 111, 108, 116
   \              566F6C74    
   \   000002A8   2052616E6765       DC8 32, 82, 97, 110, 103, 101, 44, 10, 85, 110
   \              2C0A556E    
   \   000002B2   697473203D20       DC8 105, 116, 115, 32, 61, 32, 34, 68, 101, 103
   \              22446567    
   \   000002BC   46220A0A2A2A       DC8 70, 34, 10, 10, 42, 42, 32, 80, 76, 88
   \              20504C58    
   \   000002C6   204169724675       DC8 32, 65, 105, 114, 70, 117, 101, 108, 32, 42
   \              656C202A    
   \   000002D0   2A0A566F6C74       DC8 42, 10, 86, 111, 108, 116, 115, 58, 32, 76
   \              733A204C    
   \   000002DA   4F5720305620       DC8 79, 87, 32, 48, 86, 32, 72, 73, 71, 72
   \              48494748    
   \   000002E4   2035562C0A56       DC8 32, 53, 86, 44, 10, 86, 97, 108, 117, 101
   \              616C7565    
   \   000002EE   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 49, 48, 46
   \              2031302E    
   \   000002F8   302048494748       DC8 48, 32, 72, 73, 71, 72, 32, 50, 48, 46
   \              2032302E    
   \   00000302   302C0A352056       DC8 48, 44, 10, 53, 32, 86, 111, 108, 116, 32
   \              6F6C7420    
   \   0000030C   52616E67652C       DC8 82, 97, 110, 103, 101, 44, 10, 85, 110, 105
   \              0A556E69    
   \   00000316   7473203D2022       DC8 116, 115, 32, 61, 32, 34, 82, 97, 116, 105
   \              52617469    
   \   00000320   6F222C0A416C       DC8 111, 34, 44, 10, 65, 108, 97, 114, 109, 32
   \              61726D20    
   \   0000032A   41626F766520       DC8 65, 98, 111, 118, 101, 32, 49, 51, 46, 55
   \              31332E37    
   \   00000334   0A0A2A2A2050       DC8 10, 10, 42, 42, 32, 80, 76, 88, 32, 80
   \              4C582050    
   \   0000033E   726573737572       DC8 114, 101, 115, 115, 117, 114, 101, 32, 83, 101
   \              65205365    
   \   00000348   6E736F72202A       DC8 110, 115, 111, 114, 32, 42, 42, 10, 86, 111
   \              2A0A566F    
   \   00000352   6C74733A204C       DC8 108, 116, 115, 58, 32, 76, 79, 87, 32, 48
   \              4F572030    
   \   0000035C   2E3056204849       DC8 46, 48, 86, 32, 72, 73, 71, 72, 32, 51
   \              47482033    
   \   00000366   2E3735562C0A       DC8 46, 55, 53, 86, 44, 10, 86, 97, 108, 117
   \              56616C75    
   \   00000370   65733A204C4F       DC8 101, 115, 58, 32, 76, 79, 87, 32, 48, 46
   \              5720302E    
   \   0000037A   302048494748       DC8 48, 32, 72, 73, 71, 72, 32, 49, 53, 48
   \              20313530    
   \   00000384   2E302C0A3520       DC8 46, 48, 44, 10, 53, 32, 86, 111, 108, 116
   \              566F6C74    
   \   0000038E   2052616E6765       DC8 32, 82, 97, 110, 103, 101, 44, 10, 85, 110
   \              2C0A556E    
   \   00000398   697473203D20       DC8 105, 116, 115, 32, 61, 32, 34, 80, 83, 73
   \              22505349    
   \   000003A2   220A0A2A2A20       DC8 34, 10, 10, 42, 42, 32, 80, 76, 88, 32
   \              504C5820    
   \   000003AC   54656D706572       DC8 84, 101, 109, 112, 101, 114, 97, 116, 117, 114
   \              61747572    
   \   000003B6   652053656E73       DC8 101, 32, 83, 101, 110, 115, 111, 114, 32, 42
   \              6F72202A    
   \   000003C0   2A0A566F6C74       DC8 42, 10, 86, 111, 108, 116, 115, 58, 32, 76
   \              733A204C    
   \   000003CA   4F5720302E30       DC8 79, 87, 32, 48, 46, 48, 86, 32, 72, 73
   \              56204849    
   \   000003D4   474820352E30       DC8 71, 72, 32, 53, 46, 48, 86, 44, 10, 86
   \              562C0A56    
   \   000003DE   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   000003E8   2033322E3020       DC8 32, 51, 50, 46, 48, 32, 72, 73, 71, 72
   \              48494748    
   \   000003F2   203330322E30       DC8 32, 51, 48, 50, 46, 48, 44, 10, 53, 32
   \              2C0A3520    
   \   000003FC   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   00000406   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   00000410   224465674622       DC8 34, 68, 101, 103, 70, 34, 10, 10, 42, 42
   \              0A0A2A2A    
   \   0000041A   20504C582045       DC8 32, 80, 76, 88, 32, 69, 120, 104, 97, 117
   \              78686175    
   \   00000424   73742054656D       DC8 115, 116, 32, 84, 101, 109, 112, 101, 114, 97
   \              70657261    
   \   0000042E   74757265202A       DC8 116, 117, 114, 101, 32, 42, 42, 10, 86, 111
   \              2A0A566F    
   \   00000438   6C74733A204C       DC8 108, 116, 115, 58, 32, 76, 79, 87, 32, 48
   \              4F572030    
   \   00000442   2E3056204849       DC8 46, 48, 86, 32, 72, 73, 71, 72, 32, 51
   \              47482033    
   \   0000044C   2E3333562C0A       DC8 46, 51, 51, 86, 44, 10, 86, 97, 108, 117
   \              56616C75    
   \   00000456   65733A204C4F       DC8 101, 115, 58, 32, 76, 79, 87, 32, 51, 50
   \              57203332    
   \   00000460   2E3020484947       DC8 46, 48, 32, 72, 73, 71, 72, 32, 49, 48
   \              48203130    
   \   0000046A   30302E302C0A       DC8 48, 48, 46, 48, 44, 10, 53, 32, 86, 111
   \              3520566F    
   \   00000474   6C742052616E       DC8 108, 116, 32, 82, 97, 110, 103, 101, 44, 10
   \              67652C0A    
   \   0000047E   556E69747320       DC8 85, 110, 105, 116, 115, 32, 61, 32, 34, 68
   \              3D202244    
   \   00000488   656746220A0A       DC8 101, 103, 70, 34, 10, 10, 42, 42, 32, 80
   \              2A2A2050    
   \   00000492   4C5820426F6F       DC8 76, 88, 32, 66, 111, 111, 115, 116, 32, 83
   \              73742053    
   \   0000049C   656E736F7220       DC8 101, 110, 115, 111, 114, 32, 42, 42, 10, 86
   \              2A2A0A56    
   \   000004A6   6F6C74733A20       DC8 111, 108, 116, 115, 58, 32, 76, 79, 87, 32
   \              4C4F5720    
   \   000004B0   302E30562048       DC8 48, 46, 48, 86, 32, 72, 73, 71, 72, 32
   \              49474820    
   \   000004BA   35562C0A5661       DC8 53, 86, 44, 10, 86, 97, 108, 117, 101, 115
   \              6C756573    
   \   000004C4   3A204C4F5720       DC8 58, 32, 76, 79, 87, 32, 45, 49, 53, 32
   \              2D313520    
   \   000004CE   484947482033       DC8 72, 73, 71, 72, 32, 51, 48, 44, 10, 53
   \              302C0A35    
   \   000004D8   20566F6C7420       DC8 32, 86, 111, 108, 116, 32, 82, 97, 110, 103
   \              52616E67    
   \   000004E2   652C0A556E69       DC8 101, 44, 10, 85, 110, 105, 116, 115, 32, 61
   \              7473203D    
   \   000004EC   202250534922       DC8 32, 34, 80, 83, 73, 34, 10, 10, 42, 42
   \              0A0A2A2A    
   \   000004F6   20496E6E6F76       DC8 32, 73, 110, 110, 111, 118, 97, 116, 101, 32
   \              61746520    
   \   00000500   4C432D312041       DC8 76, 67, 45, 49, 32, 65, 105, 114, 70, 117
   \              69724675    
   \   0000050A   656C202A2A0A       DC8 101, 108, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   00000514   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 86, 32
   \              20305620    
   \   0000051E   484947482035       DC8 72, 73, 71, 72, 32, 53, 86, 44, 10, 86
   \              562C0A56    
   \   00000528   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   00000532   20372E333520       DC8 32, 55, 46, 51, 53, 32, 72, 73, 71, 72
   \              48494748    
   \   0000053C   2032322E3333       DC8 32, 50, 50, 46, 51, 51, 44, 10, 53, 32
   \              2C0A3520    
   \   00000546   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   00000550   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   0000055A   22526174696F       DC8 34, 82, 97, 116, 105, 111, 34, 44, 10, 65
   \              222C0A41    
   \   00000564   6C61726D2041       DC8 108, 97, 114, 109, 32, 65, 98, 111, 118, 101
   \              626F7665    
   \   0000056E   2031332E370A       DC8 32, 49, 51, 46, 55, 10, 10, 42, 42, 32
   \              0A2A2A20    
   \   00000578   415053582057       DC8 65, 80, 83, 88, 32, 87, 105, 100, 101, 98
   \              69646562    
   \   00000582   616E64204431       DC8 97, 110, 100, 32, 68, 49, 32, 65, 105, 114
   \              20416972    
   \   0000058C   4675656C202A       DC8 70, 117, 101, 108, 32, 42, 42, 10, 86, 111
   \              2A0A566F    
   \   00000596   6C74733A204C       DC8 108, 116, 115, 58, 32, 76, 79, 87, 32, 48
   \              4F572030    
   \   000005A0   562048494748       DC8 86, 32, 72, 73, 71, 72, 32, 53, 86, 44
   \              2035562C    
   \   000005AA   0A56616C7565       DC8 10, 86, 97, 108, 117, 101, 115, 58, 32, 76
   \              733A204C    
   \   000005B4   4F5720392E30       DC8 79, 87, 32, 57, 46, 48, 32, 72, 73, 71
   \              20484947    
   \   000005BE   482031392E30       DC8 72, 32, 49, 57, 46, 48, 44, 10, 53, 32
   \              2C0A3520    
   \   000005C8   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   000005D2   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   000005DC   22526174696F       DC8 34, 82, 97, 116, 105, 111, 34, 44, 10, 65
   \              222C0A41    
   \   000005E6   6C61726D2041       DC8 108, 97, 114, 109, 32, 65, 98, 111, 118, 101
   \              626F7665    
   \   000005F0   2031332E370A       DC8 32, 49, 51, 46, 55, 10, 10, 42, 42, 32
   \              0A2A2A20    
   \   000005FA   426174746572       DC8 66, 97, 116, 116, 101, 114, 121, 32, 86, 111
   \              7920566F    
   \   00000604   6C7461676520       DC8 108, 116, 97, 103, 101, 32, 42, 42, 10, 86
   \              2A2A0A56    
   \   0000060E   6F6C74733A20       DC8 111, 108, 116, 115, 58, 32, 76, 79, 87, 32
   \              4C4F5720    
   \   00000618   305620484947       DC8 48, 86, 32, 72, 73, 71, 72, 32, 50, 48
   \              48203230    
   \   00000622   562C0A56616C       DC8 86, 44, 10, 86, 97, 108, 117, 101, 115, 58
   \              7565733A    
   \   0000062C   204C4F572030       DC8 32, 76, 79, 87, 32, 48, 46, 48, 32, 72
   \              2E302048    
   \   00000636   494748203230       DC8 73, 71, 72, 32, 50, 48, 46, 48, 44, 10
   \              2E302C0A    
   \   00000640   323020566F6C       DC8 50, 48, 32, 86, 111, 108, 116, 32, 82, 97
   \              74205261    
   \   0000064A   6E67652C0A55       DC8 110, 103, 101, 44, 10, 85, 110, 105, 116, 115
   \              6E697473    
   \   00000654   203D2022566F       DC8 32, 61, 32, 34, 86, 111, 108, 116, 115, 34
   \              6C747322    
   \   0000065E   2C0A416C6172       DC8 44, 10, 65, 108, 97, 114, 109, 32, 66, 101
   \              6D204265    
   \   00000668   6C6F77203131       DC8 108, 111, 119, 32, 49, 49, 46, 53, 10, 10
   \              2E350A0A    
   \   00000672   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   0000067C   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   00000686   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   00000690   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   0000069A   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   000006A4   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   000006AE   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   000006B8   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   000006C2   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   000006CC   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   000006D6   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   000006E0   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   000006EA   6800               DC8 104, 0
    748          "Shows the physical and alarm state of the analog input.\
    749          \n\nEnable or Disable button to turn on or off recording of this input.\
    750          \n\nEdit Scale to change between voltage ranges.\
    751          \n\nEdit Alarm to assign an alarm range to an Alarm LED.\
    752          \n\nRename Input to change the name of the analog input.\
    753          \n\nRename Units to change the name of the units displayed.\
    754          \n\nSome common inputs:\
    755          \n\n** AEM AirFuel **\
    756          \nVolts: LOW 0V HIGH 5V,\
    757          \nValues: LOW 8.5 HIGH 18.0,\
    758          \n5 Volt Range,\
    759          \nUnits = \"Ratio\",\
    760          \nAlarm Above 13.7\
    761          \n\n** AEM 75PSI MAP Sensor **\
    762          \nVolts: LOW 0.5V HIGH 4.5V,\
    763          \nValues: LOW -14.7 HIGH 35.3,\
    764          \n5 Volt Range,\
    765          \nUnits = \"PSI\"\
    766          \n\n** AEM Temperature Sensor **\
    767          \nVolts: LOW 0.016V HIGH 0.9V,\
    768          \nValues: LOW 32.0 HIGH 230.0,\
    769          \n5 Volt Range,\
    770          \nUnits = \"DegF\"\
    771          \n\n** PLX AirFuel **\
    772          \nVolts: LOW 0V HIGH 5V,\
    773          \nValues: LOW 10.0 HIGH 20.0,\
    774          \n5 Volt Range,\
    775          \nUnits = \"Ratio\",\
    776          \nAlarm Above 13.7\
    777          \n\n** PLX Pressure Sensor **\
    778          \nVolts: LOW 0.0V HIGH 3.75V,\
    779          \nValues: LOW 0.0 HIGH 150.0,\
    780          \n5 Volt Range,\
    781          \nUnits = \"PSI\"\
    782          \n\n** PLX Temperature Sensor **\
    783          \nVolts: LOW 0.0V HIGH 5.0V,\
    784          \nValues: LOW 32.0 HIGH 302.0,\
    785          \n5 Volt Range,\
    786          \nUnits = \"DegF\"\
    787          \n\n** PLX Exhaust Temperature **\
    788          \nVolts: LOW 0.0V HIGH 3.33V,\
    789          \nValues: LOW 32.0 HIGH 1000.0,\
    790          \n5 Volt Range,\
    791          \nUnits = \"DegF\"\
    792          \n\n** PLX Boost Sensor **\
    793          \nVolts: LOW 0.0V HIGH 5V,\
    794          \nValues: LOW -15 HIGH 30,\
    795          \n5 Volt Range,\
    796          \nUnits = \"PSI\"\
    797          \n\n** Innovate LC-1 AirFuel **\
    798          \nVolts: LOW 0V HIGH 5V,\
    799          \nValues: LOW 7.35 HIGH 22.33,\
    800          \n5 Volt Range,\
    801          \nUnits = \"Ratio\",\
    802          \nAlarm Above 13.7\
    803          \n\n** APSX Wideband D1 AirFuel **\
    804          \nVolts: LOW 0V HIGH 5V,\
    805          \nValues: LOW 9.0 HIGH 19.0,\
    806          \n5 Volt Range,\
    807          \nUnits = \"Ratio\",\
    808          \nAlarm Above 13.7\
    809          \n\n** Battery Voltage **\
    810          \nVolts: LOW 0V HIGH 20V,\
    811          \nValues: LOW 0.0 HIGH 20.0,\
    812          \n20 Volt Range,\
    813          \nUnits = \"Volts\",\
    814          \nAlarm Below 11.5\
    815          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    816          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    817          

   \                                 In section .text, align 4, keep-with-next
    818          const char DIGITAL_SETTINGS_INFO[] =
   \                     DIGITAL_SETTINGS_INFO:
   \   00000000                      ; Initializer data, 580 bytes
   \   00000000   53686F777320       DC8 83, 104, 111, 119, 115, 32, 116, 104, 101, 32
   \              74686520    
   \   0000000A   706879736963       DC8 112, 104, 121, 115, 105, 99, 97, 108, 32, 115
   \              616C2073    
   \   00000014   74617465206F       DC8 116, 97, 116, 101, 32, 111, 102, 32, 116, 104
   \              66207468    
   \   0000001E   652064696769       DC8 101, 32, 100, 105, 103, 105, 116, 97, 108, 32
   \              74616C20    
   \   00000028   696E7075742E       DC8 105, 110, 112, 117, 116, 46, 10, 10, 69, 110
   \              0A0A456E    
   \   00000032   61626C65206F       DC8 97, 98, 108, 101, 32, 111, 114, 32, 68, 105
   \              72204469    
   \   0000003C   7361626C6520       DC8 115, 97, 98, 108, 101, 32, 98, 117, 116, 116
   \              62757474    
   \   00000046   6F6E20746F20       DC8 111, 110, 32, 116, 111, 32, 116, 117, 114, 110
   \              7475726E    
   \   00000050   206F6E206F72       DC8 32, 111, 110, 32, 111, 114, 32, 111, 102, 102
   \              206F6666    
   \   0000005A   207265636F72       DC8 32, 114, 101, 99, 111, 114, 100, 105, 110, 103
   \              64696E67    
   \   00000064   206F66207468       DC8 32, 111, 102, 32, 116, 104, 105, 115, 32, 105
   \              69732069    
   \   0000006E   6E7075742E0A       DC8 110, 112, 117, 116, 46, 10, 10, 69, 100, 105
   \              0A456469    
   \   00000078   7420416C6172       DC8 116, 32, 65, 108, 97, 114, 109, 32, 116, 111
   \              6D20746F    
   \   00000082   206173736967       DC8 32, 97, 115, 115, 105, 103, 110, 32, 111, 110
   \              6E206F6E    
   \   0000008C   652073746174       DC8 101, 32, 115, 116, 97, 116, 101, 32, 111, 102
   \              65206F66    
   \   00000096   207468652064       DC8 32, 116, 104, 101, 32, 100, 105, 103, 105, 116
   \              69676974    
   \   000000A0   616C20696E70       DC8 97, 108, 32, 105, 110, 112, 117, 116, 32, 116
   \              75742074    
   \   000000AA   6F20616E2041       DC8 111, 32, 97, 110, 32, 65, 108, 97, 114, 109
   \              6C61726D    
   \   000000B4   204C45442E0A       DC8 32, 76, 69, 68, 46, 10, 10, 82, 101, 110
   \              0A52656E    
   \   000000BE   616D6520496E       DC8 97, 109, 101, 32, 73, 110, 112, 117, 116, 32
   \              70757420    
   \   000000C8   746F20636861       DC8 116, 111, 32, 99, 104, 97, 110, 103, 101, 32
   \              6E676520    
   \   000000D2   746865206E61       DC8 116, 104, 101, 32, 110, 97, 109, 101, 32, 111
   \              6D65206F    
   \   000000DC   662074686520       DC8 102, 32, 116, 104, 101, 32, 100, 105, 103, 116
   \              64696774    
   \   000000E6   69616C20696E       DC8 105, 97, 108, 32, 105, 110, 112, 117, 116, 46
   \              7075742E    
   \   000000F0   0A0A52656E61       DC8 10, 10, 82, 101, 110, 97, 109, 101, 32, 72
   \              6D652048    
   \   000000FA   69676820746F       DC8 105, 103, 104, 32, 116, 111, 32, 99, 104, 97
   \              20636861    
   \   00000104   6E6765207468       DC8 110, 103, 101, 32, 116, 104, 101, 32, 110, 97
   \              65206E61    
   \   0000010E   6D65206F6620       DC8 109, 101, 32, 111, 102, 32, 116, 104, 101, 32
   \              74686520    
   \   00000118   484947482070       DC8 72, 73, 71, 72, 32, 112, 104, 121, 115, 105
   \              68797369    
   \   00000122   63616C207374       DC8 99, 97, 108, 32, 115, 116, 97, 116, 101, 46
   \              6174652E    
   \   0000012C   0A0A52656E61       DC8 10, 10, 82, 101, 110, 97, 109, 101, 32, 76
   \              6D65204C    
   \   00000136   6F7720746F20       DC8 111, 119, 32, 116, 111, 32, 99, 104, 97, 110
   \              6368616E    
   \   00000140   676520746865       DC8 103, 101, 32, 116, 104, 101, 32, 110, 97, 109
   \              206E616D    
   \   0000014A   65206F662074       DC8 101, 32, 111, 102, 32, 116, 104, 101, 32, 76
   \              6865204C    
   \   00000154   4F5720706879       DC8 79, 87, 32, 112, 104, 121, 115, 105, 99, 97
   \              73696361    
   \   0000015E   6C2073746174       DC8 108, 32, 115, 116, 97, 116, 101, 46, 10, 10
   \              652E0A0A    
   \   00000168   546F20436F6E       DC8 84, 111, 32, 67, 111, 110, 110, 101, 99, 116
   \              6E656374    
   \   00000172   204272616B65       DC8 32, 66, 114, 97, 107, 101, 32, 76, 105, 103
   \              204C6967    
   \   0000017C   68743A0A5365       DC8 104, 116, 58, 10, 83, 101, 116, 32, 73, 110
   \              7420496E    
   \   00000186   707574204E61       DC8 112, 117, 116, 32, 78, 97, 109, 101, 32, 116
   \              6D652074    
   \   00000190   6F2022427261       DC8 111, 32, 34, 66, 114, 97, 107, 101, 34, 10
   \              6B65220A    
   \   0000019A   536574204849       DC8 83, 101, 116, 32, 72, 73, 71, 72, 32, 78
   \              4748204E    
   \   000001A4   616D6520746F       DC8 97, 109, 101, 32, 116, 111, 32, 34, 83, 116
   \              20225374    
   \   000001AE   6F70220A5365       DC8 111, 112, 34, 10, 83, 101, 116, 32, 76, 79
   \              74204C4F    
   \   000001B8   57204E616D65       DC8 87, 32, 78, 97, 109, 101, 32, 116, 111, 32
   \              20746F20    
   \   000001C2   22476F220A0A       DC8 34, 71, 111, 34, 10, 10, 80, 114, 101, 115
   \              50726573    
   \   000001CC   732052656420       DC8 115, 32, 82, 101, 100, 32, 66, 97, 99, 107
   \              4261636B    
   \   000001D6   20427574746F       DC8 32, 66, 117, 116, 116, 111, 110, 32, 116, 111
   \              6E20746F    
   \   000001E0   20676F207570       DC8 32, 103, 111, 32, 117, 112, 32, 111, 110, 101
   \              206F6E65    
   \   000001EA   206D656E7520       DC8 32, 109, 101, 110, 117, 32, 111, 114, 32, 104
   \              6F722068    
   \   000001F4   6F6C6420666F       DC8 111, 108, 100, 32, 102, 111, 114, 32, 77, 97
   \              72204D61    
   \   000001FE   696E204D656E       DC8 105, 110, 32, 77, 101, 110, 117, 46, 10, 10
   \              752E0A0A    
   \   00000208   49636F6E733A       DC8 73, 99, 111, 110, 115, 58, 32, 67, 97, 109
   \              2043616D    
   \   00000212   657261205374       DC8 101, 114, 97, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   0000021C   2C2053442043       DC8 44, 32, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   00000226   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 71, 80
   \              2C204750    
   \   00000230   53205369676E       DC8 83, 32, 83, 105, 103, 110, 97, 108, 32, 83
   \              616C2053    
   \   0000023A   7472656E6774       DC8 116, 114, 101, 110, 103, 116, 104, 0, 0, 0
   \              68000000    
    819          "Shows the physical state of the digital input.\
    820          \n\nEnable or Disable button to turn on or off recording of this input.\
    821          \n\nEdit Alarm to assign one state of the digital input to an Alarm LED.\
    822          \n\nRename Input to change the name of the digtial input.\
    823          \n\nRename High to change the name of the HIGH physical state.\
    824          \n\nRename Low to change the name of the LOW physical state.\
    825          \n\nTo Connect Brake Light:\
    826          \nSet Input Name to \"Brake\"\
    827          \nSet HIGH Name to \"Stop\"\
    828          \nSet LOW Name to \"Go\"\
    829          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    830          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    831          

   \                                 In section .text, align 4, keep-with-next
    832          const char ANALOG_SCALE_INFO[] =
   \                     ANALOG_SCALE_INFO:
   \   00000000                      ; Initializer data, 1736 bytes
   \   00000000   546869732073       DC8 84, 104, 105, 115, 32, 115, 99, 114, 101, 101
   \              63726565    
   \   0000000A   6E2073657473       DC8 110, 32, 115, 101, 116, 115, 32, 116, 104, 101
   \              20746865    
   \   00000014   207363616C69       DC8 32, 115, 99, 97, 108, 105, 110, 103, 32, 102
   \              6E672066    
   \   0000001E   6163746F7273       DC8 97, 99, 116, 111, 114, 115, 32, 102, 111, 114
   \              20666F72    
   \   00000028   207468652061       DC8 32, 116, 104, 101, 32, 97, 110, 97, 108, 111
   \              6E616C6F    
   \   00000032   6720696E7075       DC8 103, 32, 105, 110, 112, 117, 116, 32, 102, 114
   \              74206672    
   \   0000003C   6F6D20746865       DC8 111, 109, 32, 116, 104, 101, 32, 118, 111, 108
   \              20766F6C    
   \   00000046   746167652074       DC8 116, 97, 103, 101, 32, 116, 111, 32, 116, 104
   \              6F207468    
   \   00000050   6520656E7465       DC8 101, 32, 101, 110, 116, 101, 114, 101, 100, 32
   \              72656420    
   \   0000005A   756E6974732E       DC8 117, 110, 105, 116, 115, 46, 10, 10, 86, 111
   \              0A0A566F    
   \   00000064   6C7473207365       DC8 108, 116, 115, 32, 115, 101, 116, 115, 32, 116
   \              74732074    
   \   0000006E   6865206D6561       DC8 104, 101, 32, 109, 101, 97, 115, 117, 114, 101
   \              73757265    
   \   00000078   642072616E67       DC8 100, 32, 114, 97, 110, 103, 101, 32, 111, 102
   \              65206F66    
   \   00000082   20766F6C7461       DC8 32, 118, 111, 108, 116, 97, 103, 101, 32, 102
   \              67652066    
   \   0000008C   726F6D207468       DC8 114, 111, 109, 32, 116, 104, 101, 32, 76, 79
   \              65204C4F    
   \   00000096   572072656164       DC8 87, 32, 114, 101, 97, 100, 105, 110, 103, 32
   \              696E6720    
   \   000000A0   746F20746865       DC8 116, 111, 32, 116, 104, 101, 32, 72, 73, 71
   \              20484947    
   \   000000AA   482072656164       DC8 72, 32, 114, 101, 97, 100, 105, 110, 103, 46
   \              696E672E    
   \   000000B4   0A0A56616C75       DC8 10, 10, 86, 97, 108, 117, 101, 32, 115, 101
   \              65207365    
   \   000000BE   747320746865       DC8 116, 115, 32, 116, 104, 101, 32, 97, 99, 116
   \              20616374    
   \   000000C8   75616C207265       DC8 117, 97, 108, 32, 114, 101, 97, 100, 105, 110
   \              6164696E    
   \   000000D2   672072616E67       DC8 103, 32, 114, 97, 110, 103, 101, 32, 99, 111
   \              6520636F    
   \   000000DC   72726573706F       DC8 114, 114, 101, 115, 112, 111, 110, 100, 105, 110
   \              6E64696E    
   \   000000E6   6720746F2074       DC8 103, 32, 116, 111, 32, 116, 104, 101, 32, 118
   \              68652076    
   \   000000F0   6F6C74616765       DC8 111, 108, 116, 97, 103, 101, 32, 114, 97, 110
   \              2072616E    
   \   000000FA   676520696E20       DC8 103, 101, 32, 105, 110, 32, 116, 104, 101, 32
   \              74686520    
   \   00000104   73656C656374       DC8 115, 101, 108, 101, 99, 116, 101, 100, 32, 117
   \              65642075    
   \   0000010E   6E6974732E0A       DC8 110, 105, 116, 115, 46, 10, 10, 86, 111, 108
   \              0A566F6C    
   \   00000118   746167652052       DC8 116, 97, 103, 101, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   00000122   2073656C6563       DC8 32, 115, 101, 108, 101, 99, 116, 115, 32, 102
   \              74732066    
   \   0000012C   726F6D20352C       DC8 114, 111, 109, 32, 53, 44, 32, 49, 48, 44
   \              2031302C    
   \   00000136   206F72203230       DC8 32, 111, 114, 32, 50, 48, 32, 118, 111, 108
   \              20766F6C    
   \   00000140   742072616E67       DC8 116, 32, 114, 97, 110, 103, 101, 115, 32, 102
   \              65732066    
   \   0000014A   726F6D207468       DC8 114, 111, 109, 32, 116, 104, 101, 32, 84, 114
   \              65205472    
   \   00000154   617144617461       DC8 97, 113, 68, 97, 116, 97, 32, 105, 110, 112
   \              20696E70    
   \   0000015E   7574206D6F64       DC8 117, 116, 32, 109, 111, 100, 117, 108, 101, 46
   \              756C652E    
   \   00000168   0A0A4E4F5445       DC8 10, 10, 78, 79, 84, 69, 58, 32, 84, 104
   \              3A205468    
   \   00000172   6520566F6C74       DC8 101, 32, 86, 111, 108, 116, 115, 32, 114, 97
   \              73207261    
   \   0000017C   6E6765206361       DC8 110, 103, 101, 32, 99, 97, 110, 110, 111, 116
   \              6E6E6F74    
   \   00000186   206265206F75       DC8 32, 98, 101, 32, 111, 117, 116, 115, 105, 100
   \              74736964    
   \   00000190   652074686520       DC8 101, 32, 116, 104, 101, 32, 115, 101, 108, 101
   \              73656C65    
   \   0000019A   637465642056       DC8 99, 116, 101, 100, 32, 86, 111, 108, 116, 97
   \              6F6C7461    
   \   000001A4   67652052616E       DC8 103, 101, 32, 82, 97, 110, 103, 101, 46, 10
   \              67652E0A    
   \   000001AE   0A536F6D6520       DC8 10, 83, 111, 109, 101, 32, 99, 111, 109, 109
   \              636F6D6D    
   \   000001B8   6F6E20696E70       DC8 111, 110, 32, 105, 110, 112, 117, 116, 115, 58
   \              7574733A    
   \   000001C2   0A0A2A2A2041       DC8 10, 10, 42, 42, 32, 65, 69, 77, 32, 65
   \              454D2041    
   \   000001CC   69724675656C       DC8 105, 114, 70, 117, 101, 108, 32, 42, 42, 10
   \              202A2A0A    
   \   000001D6   566F6C74733A       DC8 86, 111, 108, 116, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   000001E0   203056204849       DC8 32, 48, 86, 32, 72, 73, 71, 72, 32, 53
   \              47482035    
   \   000001EA   562C0A56616C       DC8 86, 44, 10, 86, 97, 108, 117, 101, 115, 58
   \              7565733A    
   \   000001F4   204C4F572038       DC8 32, 76, 79, 87, 32, 56, 46, 53, 32, 72
   \              2E352048    
   \   000001FE   494748203138       DC8 73, 71, 72, 32, 49, 56, 46, 48, 44, 10
   \              2E302C0A    
   \   00000208   3520566F6C74       DC8 53, 32, 86, 111, 108, 116, 32, 82, 97, 110
   \              2052616E    
   \   00000212   67652C0A556E       DC8 103, 101, 44, 10, 85, 110, 105, 116, 115, 32
   \              69747320    
   \   0000021C   3D2022526174       DC8 61, 32, 34, 82, 97, 116, 105, 111, 34, 44
   \              696F222C    
   \   00000226   0A416C61726D       DC8 10, 65, 108, 97, 114, 109, 32, 65, 98, 111
   \              2041626F    
   \   00000230   76652031332E       DC8 118, 101, 32, 49, 51, 46, 55, 10, 10, 42
   \              370A0A2A    
   \   0000023A   2A2041454D20       DC8 42, 32, 65, 69, 77, 32, 55, 53, 80, 83
   \              37355053    
   \   00000244   49204D415020       DC8 73, 32, 77, 65, 80, 32, 83, 101, 110, 115
   \              53656E73    
   \   0000024E   6F72202A2A0A       DC8 111, 114, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   00000258   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 46, 53
   \              20302E35    
   \   00000262   562048494748       DC8 86, 32, 72, 73, 71, 72, 32, 52, 46, 53
   \              20342E35    
   \   0000026C   562C0A56616C       DC8 86, 44, 10, 86, 97, 108, 117, 101, 115, 58
   \              7565733A    
   \   00000276   204C4F57202D       DC8 32, 76, 79, 87, 32, 45, 49, 52, 46, 55
   \              31342E37    
   \   00000280   204849474820       DC8 32, 72, 73, 71, 72, 32, 51, 53, 46, 51
   \              33352E33    
   \   0000028A   2C0A3520566F       DC8 44, 10, 53, 32, 86, 111, 108, 116, 32, 82
   \              6C742052    
   \   00000294   616E67652C0A       DC8 97, 110, 103, 101, 44, 10, 85, 110, 105, 116
   \              556E6974    
   \   0000029E   73203D202250       DC8 115, 32, 61, 32, 34, 80, 83, 73, 34, 10
   \              5349220A    
   \   000002A8   0A2A2A204145       DC8 10, 42, 42, 32, 65, 69, 77, 32, 84, 101
   \              4D205465    
   \   000002B2   6D7065726174       DC8 109, 112, 101, 114, 97, 116, 117, 114, 101, 32
   \              75726520    
   \   000002BC   53656E736F72       DC8 83, 101, 110, 115, 111, 114, 32, 42, 42, 10
   \              202A2A0A    
   \   000002C6   566F6C74733A       DC8 86, 111, 108, 116, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   000002D0   20302E303136       DC8 32, 48, 46, 48, 49, 54, 86, 32, 72, 73
   \              56204849    
   \   000002DA   474820302E39       DC8 71, 72, 32, 48, 46, 57, 86, 44, 10, 86
   \              562C0A56    
   \   000002E4   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   000002EE   2033322E3020       DC8 32, 51, 50, 46, 48, 32, 72, 73, 71, 72
   \              48494748    
   \   000002F8   203233302E30       DC8 32, 50, 51, 48, 46, 48, 44, 10, 53, 32
   \              2C0A3520    
   \   00000302   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   0000030C   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   00000316   224465674622       DC8 34, 68, 101, 103, 70, 34, 10, 10, 42, 42
   \              0A0A2A2A    
   \   00000320   20504C582041       DC8 32, 80, 76, 88, 32, 65, 105, 114, 70, 117
   \              69724675    
   \   0000032A   656C202A2A0A       DC8 101, 108, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   00000334   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 86, 32
   \              20305620    
   \   0000033E   484947482035       DC8 72, 73, 71, 72, 32, 53, 86, 44, 10, 86
   \              562C0A56    
   \   00000348   616C7565733A       DC8 97, 108, 117, 101, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   00000352   2031302E3020       DC8 32, 49, 48, 46, 48, 32, 72, 73, 71, 72
   \              48494748    
   \   0000035C   2032302E302C       DC8 32, 50, 48, 46, 48, 44, 10, 53, 32, 86
   \              0A352056    
   \   00000366   6F6C74205261       DC8 111, 108, 116, 32, 82, 97, 110, 103, 101, 44
   \              6E67652C    
   \   00000370   0A556E697473       DC8 10, 85, 110, 105, 116, 115, 32, 61, 32, 34
   \              203D2022    
   \   0000037A   526174696F22       DC8 82, 97, 116, 105, 111, 34, 44, 10, 65, 108
   \              2C0A416C    
   \   00000384   61726D204162       DC8 97, 114, 109, 32, 65, 98, 111, 118, 101, 32
   \              6F766520    
   \   0000038E   31332E370A0A       DC8 49, 51, 46, 55, 10, 10, 42, 42, 32, 80
   \              2A2A2050    
   \   00000398   4C5820507265       DC8 76, 88, 32, 80, 114, 101, 115, 115, 117, 114
   \              73737572    
   \   000003A2   652053656E73       DC8 101, 32, 83, 101, 110, 115, 111, 114, 32, 42
   \              6F72202A    
   \   000003AC   2A0A566F6C74       DC8 42, 10, 86, 111, 108, 116, 115, 58, 32, 76
   \              733A204C    
   \   000003B6   4F5720302E30       DC8 79, 87, 32, 48, 46, 48, 86, 32, 72, 73
   \              56204849    
   \   000003C0   474820332E37       DC8 71, 72, 32, 51, 46, 55, 53, 86, 44, 10
   \              35562C0A    
   \   000003CA   56616C756573       DC8 86, 97, 108, 117, 101, 115, 58, 32, 76, 79
   \              3A204C4F    
   \   000003D4   5720302E3020       DC8 87, 32, 48, 46, 48, 32, 72, 73, 71, 72
   \              48494748    
   \   000003DE   203135302E30       DC8 32, 49, 53, 48, 46, 48, 44, 10, 53, 32
   \              2C0A3520    
   \   000003E8   566F6C742052       DC8 86, 111, 108, 116, 32, 82, 97, 110, 103, 101
   \              616E6765    
   \   000003F2   2C0A556E6974       DC8 44, 10, 85, 110, 105, 116, 115, 32, 61, 32
   \              73203D20    
   \   000003FC   22505349220A       DC8 34, 80, 83, 73, 34, 10, 10, 42, 42, 32
   \              0A2A2A20    
   \   00000406   504C58205465       DC8 80, 76, 88, 32, 84, 101, 109, 112, 101, 114
   \              6D706572    
   \   00000410   617475726520       DC8 97, 116, 117, 114, 101, 32, 83, 101, 110, 115
   \              53656E73    
   \   0000041A   6F72202A2A0A       DC8 111, 114, 32, 42, 42, 10, 86, 111, 108, 116
   \              566F6C74    
   \   00000424   733A204C4F57       DC8 115, 58, 32, 76, 79, 87, 32, 48, 46, 48
   \              20302E30    
   \   0000042E   562048494748       DC8 86, 32, 72, 73, 71, 72, 32, 53, 46, 48
   \              20352E30    
   \   00000438   562C0A56616C       DC8 86, 44, 10, 86, 97, 108, 117, 101, 115, 58
   \              7565733A    
   \   00000442   204C4F572033       DC8 32, 76, 79, 87, 32, 51, 50, 46, 48, 32
   \              322E3020    
   \   0000044C   484947482033       DC8 72, 73, 71, 72, 32, 51, 48, 50, 46, 48
   \              30322E30    
   \   00000456   2C0A3520566F       DC8 44, 10, 53, 32, 86, 111, 108, 116, 32, 82
   \              6C742052    
   \   00000460   616E67652C0A       DC8 97, 110, 103, 101, 44, 10, 85, 110, 105, 116
   \              556E6974    
   \   0000046A   73203D202244       DC8 115, 32, 61, 32, 34, 68, 101, 103, 70, 34
   \              65674622    
   \   00000474   0A0A2A2A2050       DC8 10, 10, 42, 42, 32, 80, 76, 88, 32, 69
   \              4C582045    
   \   0000047E   786861757374       DC8 120, 104, 97, 117, 115, 116, 32, 84, 101, 109
   \              2054656D    
   \   00000488   706572617475       DC8 112, 101, 114, 97, 116, 117, 114, 101, 32, 42
   \              7265202A    
   \   00000492   2A0A566F6C74       DC8 42, 10, 86, 111, 108, 116, 115, 58, 32, 76
   \              733A204C    
   \   0000049C   4F5720302E30       DC8 79, 87, 32, 48, 46, 48, 86, 32, 72, 73
   \              56204849    
   \   000004A6   474820332E33       DC8 71, 72, 32, 51, 46, 51, 51, 86, 44, 10
   \              33562C0A    
   \   000004B0   56616C756573       DC8 86, 97, 108, 117, 101, 115, 58, 32, 76, 79
   \              3A204C4F    
   \   000004BA   572033322E30       DC8 87, 32, 51, 50, 46, 48, 32, 72, 73, 71
   \              20484947    
   \   000004C4   482031303030       DC8 72, 32, 49, 48, 48, 48, 46, 48, 44, 10
   \              2E302C0A    
   \   000004CE   3520566F6C74       DC8 53, 32, 86, 111, 108, 116, 32, 82, 97, 110
   \              2052616E    
   \   000004D8   67652C0A556E       DC8 103, 101, 44, 10, 85, 110, 105, 116, 115, 32
   \              69747320    
   \   000004E2   3D2022446567       DC8 61, 32, 34, 68, 101, 103, 70, 34, 10, 10
   \              46220A0A    
   \   000004EC   2A2A20504C58       DC8 42, 42, 32, 80, 76, 88, 32, 66, 111, 111
   \              20426F6F    
   \   000004F6   73742053656E       DC8 115, 116, 32, 83, 101, 110, 115, 111, 114, 32
   \              736F7220    
   \   00000500   2A2A0A566F6C       DC8 42, 42, 10, 86, 111, 108, 116, 115, 58, 32
   \              74733A20    
   \   0000050A   4C4F5720302E       DC8 76, 79, 87, 32, 48, 46, 48, 86, 32, 72
   \              30562048    
   \   00000514   494748203556       DC8 73, 71, 72, 32, 53, 86, 44, 10, 86, 97
   \              2C0A5661    
   \   0000051E   6C7565733A20       DC8 108, 117, 101, 115, 58, 32, 76, 79, 87, 32
   \              4C4F5720    
   \   00000528   2D3135204849       DC8 45, 49, 53, 32, 72, 73, 71, 72, 32, 51
   \              47482033    
   \   00000532   302C0A352056       DC8 48, 44, 10, 53, 32, 86, 111, 108, 116, 32
   \              6F6C7420    
   \   0000053C   52616E67652C       DC8 82, 97, 110, 103, 101, 44, 10, 85, 110, 105
   \              0A556E69    
   \   00000546   7473203D2022       DC8 116, 115, 32, 61, 32, 34, 80, 83, 73, 34
   \              50534922    
   \   00000550   0A0A2A2A2049       DC8 10, 10, 42, 42, 32, 73, 110, 110, 111, 118
   \              6E6E6F76    
   \   0000055A   617465204C43       DC8 97, 116, 101, 32, 76, 67, 45, 49, 32, 65
   \              2D312041    
   \   00000564   69724675656C       DC8 105, 114, 70, 117, 101, 108, 32, 42, 42, 10
   \              202A2A0A    
   \   0000056E   566F6C74733A       DC8 86, 111, 108, 116, 115, 58, 32, 76, 79, 87
   \              204C4F57    
   \   00000578   203056204849       DC8 32, 48, 86, 32, 72, 73, 71, 72, 32, 53
   \              47482035    
   \   00000582   562C0A56616C       DC8 86, 44, 10, 86, 97, 108, 117, 101, 115, 58
   \              7565733A    
   \   0000058C   204C4F572037       DC8 32, 76, 79, 87, 32, 55, 46, 51, 53, 32
   \              2E333520    
   \   00000596   484947482032       DC8 72, 73, 71, 72, 32, 50, 50, 46, 51, 51
   \              322E3333    
   \   000005A0   2C0A3520566F       DC8 44, 10, 53, 32, 86, 111, 108, 116, 32, 82
   \              6C742052    
   \   000005AA   616E67652C0A       DC8 97, 110, 103, 101, 44, 10, 85, 110, 105, 116
   \              556E6974    
   \   000005B4   73203D202252       DC8 115, 32, 61, 32, 34, 82, 97, 116, 105, 111
   \              6174696F    
   \   000005BE   222C0A416C61       DC8 34, 44, 10, 65, 108, 97, 114, 109, 32, 65
   \              726D2041    
   \   000005C8   626F76652031       DC8 98, 111, 118, 101, 32, 49, 51, 46, 55, 10
   \              332E370A    
   \   000005D2   0A2A2A204261       DC8 10, 42, 42, 32, 66, 97, 116, 116, 101, 114
   \              74746572    
   \   000005DC   7920566F6C74       DC8 121, 32, 86, 111, 108, 116, 97, 103, 101, 32
   \              61676520    
   \   000005E6   2A2A0A566F6C       DC8 42, 42, 10, 86, 111, 108, 116, 115, 58, 32
   \              74733A20    
   \   000005F0   4C4F57203056       DC8 76, 79, 87, 32, 48, 86, 32, 72, 73, 71
   \              20484947    
   \   000005FA   48203230562C       DC8 72, 32, 50, 48, 86, 44, 10, 86, 97, 108
   \              0A56616C    
   \   00000604   7565733A204C       DC8 117, 101, 115, 58, 32, 76, 79, 87, 32, 48
   \              4F572030    
   \   0000060E   2E3020484947       DC8 46, 48, 32, 72, 73, 71, 72, 32, 50, 48
   \              48203230    
   \   00000618   2E302C0A3230       DC8 46, 48, 44, 10, 50, 48, 32, 86, 111, 108
   \              20566F6C    
   \   00000622   742052616E67       DC8 116, 32, 82, 97, 110, 103, 101, 44, 10, 85
   \              652C0A55    
   \   0000062C   6E697473203D       DC8 110, 105, 116, 115, 32, 61, 32, 34, 86, 111
   \              2022566F    
   \   00000636   6C7473222C0A       DC8 108, 116, 115, 34, 44, 10, 65, 108, 97, 114
   \              416C6172    
   \   00000640   6D2042656C6F       DC8 109, 32, 66, 101, 108, 111, 119, 32, 49, 49
   \              77203131    
   \   0000064A   2E350A0A5072       DC8 46, 53, 10, 10, 80, 114, 101, 115, 115, 32
   \              65737320    
   \   00000654   526564204261       DC8 82, 101, 100, 32, 66, 97, 99, 107, 32, 66
   \              636B2042    
   \   0000065E   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 116, 111, 32, 103
   \              746F2067    
   \   00000668   6F207570206F       DC8 111, 32, 117, 112, 32, 111, 110, 101, 32, 109
   \              6E65206D    
   \   00000672   656E75206F72       DC8 101, 110, 117, 32, 111, 114, 32, 104, 111, 108
   \              20686F6C    
   \   0000067C   6420666F7220       DC8 100, 32, 102, 111, 114, 32, 77, 97, 105, 110
   \              4D61696E    
   \   00000686   204D656E752E       DC8 32, 77, 101, 110, 117, 46, 10, 10, 73, 99
   \              0A0A4963    
   \   00000690   6F6E733A2043       DC8 111, 110, 115, 58, 32, 67, 97, 109, 101, 114
   \              616D6572    
   \   0000069A   612053746174       DC8 97, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   000006A4   534420436172       DC8 83, 68, 32, 67, 97, 114, 100, 32, 83, 116
   \              64205374    
   \   000006AE   617475732C20       DC8 97, 116, 117, 115, 44, 32, 71, 80, 83, 32
   \              47505320    
   \   000006B8   5369676E616C       DC8 83, 105, 103, 110, 97, 108, 32, 83, 116, 114
   \              20537472    
   \   000006C2   656E67746800       DC8 101, 110, 103, 116, 104, 0
    833          "This screen sets the scaling factors for the analog input from the voltage to the entered units.\
    834          \n\nVolts sets the measured range of voltage from the LOW reading to the HIGH reading.\
    835          \n\nValue sets the actual reading range corresponding to the voltage range in the selected units.\
    836          \n\nVoltage Range selects from 5, 10, or 20 volt ranges from the TraqData input module.\
    837          \n\nNOTE: The Volts range cannot be outside the selected Voltage Range.\
    838          \n\nSome common inputs:\
    839          \n\n** AEM AirFuel **\
    840          \nVolts: LOW 0V HIGH 5V,\
    841          \nValues: LOW 8.5 HIGH 18.0,\
    842          \n5 Volt Range,\
    843          \nUnits = \"Ratio\",\
    844          \nAlarm Above 13.7\
    845          \n\n** AEM 75PSI MAP Sensor **\
    846          \nVolts: LOW 0.5V HIGH 4.5V,\
    847          \nValues: LOW -14.7 HIGH 35.3,\
    848          \n5 Volt Range,\
    849          \nUnits = \"PSI\"\
    850          \n\n** AEM Temperature Sensor **\
    851          \nVolts: LOW 0.016V HIGH 0.9V,\
    852          \nValues: LOW 32.0 HIGH 230.0,\
    853          \n5 Volt Range,\
    854          \nUnits = \"DegF\"\
    855          \n\n** PLX AirFuel **\
    856          \nVolts: LOW 0V HIGH 5V,\
    857          \nValues: LOW 10.0 HIGH 20.0,\
    858          \n5 Volt Range,\
    859          \nUnits = \"Ratio\",\
    860          \nAlarm Above 13.7\
    861          \n\n** PLX Pressure Sensor **\
    862          \nVolts: LOW 0.0V HIGH 3.75V,\
    863          \nValues: LOW 0.0 HIGH 150.0,\
    864          \n5 Volt Range,\
    865          \nUnits = \"PSI\"\
    866          \n\n** PLX Temperature Sensor **\
    867          \nVolts: LOW 0.0V HIGH 5.0V,\
    868          \nValues: LOW 32.0 HIGH 302.0,\
    869          \n5 Volt Range,\
    870          \nUnits = \"DegF\"\
    871          \n\n** PLX Exhaust Temperature **\
    872          \nVolts: LOW 0.0V HIGH 3.33V,\
    873          \nValues: LOW 32.0 HIGH 1000.0,\
    874          \n5 Volt Range,\
    875          \nUnits = \"DegF\"\
    876          \n\n** PLX Boost Sensor **\
    877          \nVolts: LOW 0.0V HIGH 5V,\
    878          \nValues: LOW -15 HIGH 30,\
    879          \n5 Volt Range,\
    880          \nUnits = \"PSI\"\
    881          \n\n** Innovate LC-1 AirFuel **\
    882          \nVolts: LOW 0V HIGH 5V,\
    883          \nValues: LOW 7.35 HIGH 22.33,\
    884          \n5 Volt Range,\
    885          \nUnits = \"Ratio\",\
    886          \nAlarm Above 13.7\
    887          \n\n** Battery Voltage **\
    888          \nVolts: LOW 0V HIGH 20V,\
    889          \nValues: LOW 0.0 HIGH 20.0,\
    890          \n20 Volt Range,\
    891          \nUnits = \"Volts\",\
    892          \nAlarm Below 11.5\
    893          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    894          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    895          

   \                                 In section .text, align 4, keep-with-next
    896          const char ANALOG_ALARM_INFO[] =
   \                     ANALOG_ALARM_INFO:
   \   00000000                      ; Initializer data, 376 bytes
   \   00000000   4C4544203120       DC8 76, 69, 68, 32, 49, 32, 69, 110, 97, 98
   \              456E6162    
   \   0000000A   6C65202F2044       DC8 108, 101, 32, 47, 32, 68, 105, 115, 97, 98
   \              69736162    
   \   00000014   6C6520746F20       DC8 108, 101, 32, 116, 111, 32, 97, 100, 100, 32
   \              61646420    
   \   0000001E   6F722072656D       DC8 111, 114, 32, 114, 101, 109, 111, 118, 101, 32
   \              6F766520    
   \   00000028   746869732069       DC8 116, 104, 105, 115, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000032   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 116, 104, 101, 10
   \              7468650A    
   \   0000003C   557070657220       DC8 85, 112, 112, 101, 114, 32, 87, 97, 114, 110
   \              5761726E    
   \   00000046   696E67204C45       DC8 105, 110, 103, 32, 76, 69, 68, 46, 10, 10
   \              442E0A0A    
   \   00000050   4C4544203220       DC8 76, 69, 68, 32, 50, 32, 69, 110, 97, 98
   \              456E6162    
   \   0000005A   6C65202F2044       DC8 108, 101, 32, 47, 32, 68, 105, 115, 97, 98
   \              69736162    
   \   00000064   6C6520746F20       DC8 108, 101, 32, 116, 111, 32, 97, 100, 100, 32
   \              61646420    
   \   0000006E   6F722072656D       DC8 111, 114, 32, 114, 101, 109, 111, 118, 101, 32
   \              6F766520    
   \   00000078   746869732069       DC8 116, 104, 105, 115, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000082   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 116, 104, 101, 10
   \              7468650A    
   \   0000008C   4C6F77657220       DC8 76, 111, 119, 101, 114, 32, 87, 97, 114, 110
   \              5761726E    
   \   00000096   696E67204C45       DC8 105, 110, 103, 32, 76, 69, 68, 46, 10, 10
   \              442E0A0A    
   \   000000A0   416C61726D20       DC8 65, 108, 97, 114, 109, 32, 76, 101, 118, 101
   \              4C657665    
   \   000000AA   6C2073657473       DC8 108, 32, 115, 101, 116, 115, 32, 116, 104, 101
   \              20746865    
   \   000000B4   206C696D6974       DC8 32, 108, 105, 109, 105, 116, 32, 102, 111, 114
   \              20666F72    
   \   000000BE   207468652061       DC8 32, 116, 104, 101, 32, 97, 108, 97, 114, 109
   \              6C61726D    
   \   000000C8   207374617465       DC8 32, 115, 116, 97, 116, 101, 44, 32, 65, 98
   \              2C204162    
   \   000000D2   6F76652C2042       DC8 111, 118, 101, 44, 32, 66, 101, 108, 111, 119
   \              656C6F77    
   \   000000DC   2C206F722045       DC8 44, 32, 111, 114, 32, 69, 113, 117, 97, 108
   \              7175616C    
   \   000000E6   20546F207468       DC8 32, 84, 111, 32, 116, 104, 101, 32, 101, 110
   \              6520656E    
   \   000000F0   746572656420       DC8 116, 101, 114, 101, 100, 32, 118, 97, 108, 117
   \              76616C75    
   \   000000FA   652E0A0A5072       DC8 101, 46, 10, 10, 80, 114, 101, 115, 115, 32
   \              65737320    
   \   00000104   526564204261       DC8 82, 101, 100, 32, 66, 97, 99, 107, 32, 66
   \              636B2042    
   \   0000010E   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 116, 111, 32, 103
   \              746F2067    
   \   00000118   6F207570206F       DC8 111, 32, 117, 112, 32, 111, 110, 101, 32, 109
   \              6E65206D    
   \   00000122   656E75206F72       DC8 101, 110, 117, 32, 111, 114, 32, 104, 111, 108
   \              20686F6C    
   \   0000012C   6420666F7220       DC8 100, 32, 102, 111, 114, 32, 77, 97, 105, 110
   \              4D61696E    
   \   00000136   204D656E752E       DC8 32, 77, 101, 110, 117, 46, 10, 10, 73, 99
   \              0A0A4963    
   \   00000140   6F6E733A2043       DC8 111, 110, 115, 58, 32, 67, 97, 109, 101, 114
   \              616D6572    
   \   0000014A   612053746174       DC8 97, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   00000154   534420436172       DC8 83, 68, 32, 67, 97, 114, 100, 32, 83, 116
   \              64205374    
   \   0000015E   617475732C20       DC8 97, 116, 117, 115, 44, 32, 71, 80, 83, 32
   \              47505320    
   \   00000168   5369676E616C       DC8 83, 105, 103, 110, 97, 108, 32, 83, 116, 114
   \              20537472    
   \   00000172   656E67746800       DC8 101, 110, 103, 116, 104, 0
    897          "LED 1 Enable / Disable to add or remove this input from the\
    898          \nUpper Warning LED.\
    899          \n\nLED 2 Enable / Disable to add or remove this input from the\
    900          \nLower Warning LED.\
    901          \n\nAlarm Level sets the limit for the alarm state, Above, Below, or Equal To the entered value.\
    902          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    903          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    904          

   \                                 In section .text, align 4, keep-with-next
    905          const char DIGITAL_ALARM_INFO[] =
   \                     DIGITAL_ALARM_INFO:
   \   00000000                      ; Initializer data, 356 bytes
   \   00000000   4C4544203120       DC8 76, 69, 68, 32, 49, 32, 69, 110, 97, 98
   \              456E6162    
   \   0000000A   6C65202F2044       DC8 108, 101, 32, 47, 32, 68, 105, 115, 97, 98
   \              69736162    
   \   00000014   6C6520746F20       DC8 108, 101, 32, 116, 111, 32, 97, 100, 100, 32
   \              61646420    
   \   0000001E   6F722072656D       DC8 111, 114, 32, 114, 101, 109, 111, 118, 101, 32
   \              6F766520    
   \   00000028   746869732069       DC8 116, 104, 105, 115, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000032   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 116, 104, 101, 10
   \              7468650A    
   \   0000003C   557070657220       DC8 85, 112, 112, 101, 114, 32, 119, 97, 114, 110
   \              7761726E    
   \   00000046   696E67204C45       DC8 105, 110, 103, 32, 76, 69, 68, 46, 10, 10
   \              442E0A0A    
   \   00000050   4C4544203220       DC8 76, 69, 68, 32, 50, 32, 69, 110, 97, 98
   \              456E6162    
   \   0000005A   6C65202F2044       DC8 108, 101, 32, 47, 32, 68, 105, 115, 97, 98
   \              69736162    
   \   00000064   6C6520746F20       DC8 108, 101, 32, 116, 111, 32, 97, 100, 100, 32
   \              61646420    
   \   0000006E   6F722072656D       DC8 111, 114, 32, 114, 101, 109, 111, 118, 101, 32
   \              6F766520    
   \   00000078   746869732069       DC8 116, 104, 105, 115, 32, 105, 110, 112, 117, 116
   \              6E707574    
   \   00000082   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 116, 104, 101, 10
   \              7468650A    
   \   0000008C   4C6F77657220       DC8 76, 111, 119, 101, 114, 32, 87, 97, 114, 110
   \              5761726E    
   \   00000096   696E67204C45       DC8 105, 110, 103, 32, 76, 69, 68, 46, 10, 10
   \              442E0A0A    
   \   000000A0   416C61726D20       DC8 65, 108, 97, 114, 109, 32, 83, 116, 97, 116
   \              53746174    
   \   000000AA   652073656C65       DC8 101, 32, 115, 101, 108, 101, 99, 116, 115, 32
   \              63747320    
   \   000000B4   746865206C6F       DC8 116, 104, 101, 32, 108, 111, 103, 105, 99, 97
   \              67696361    
   \   000000BE   6C2076616C75       DC8 108, 32, 118, 97, 108, 117, 101, 32, 99, 111
   \              6520636F    
   \   000000C8   72726573706F       DC8 114, 114, 101, 115, 112, 111, 110, 100, 105, 110
   \              6E64696E    
   \   000000D2   6720746F2061       DC8 103, 32, 116, 111, 32, 97, 110, 32, 97, 108
   \              6E20616C    
   \   000000DC   61726D207374       DC8 97, 114, 109, 32, 115, 116, 97, 116, 101, 46
   \              6174652E    
   \   000000E6   0A0A50726573       DC8 10, 10, 80, 114, 101, 115, 115, 32, 82, 101
   \              73205265    
   \   000000F0   64204261636B       DC8 100, 32, 66, 97, 99, 107, 32, 66, 117, 116
   \              20427574    
   \   000000FA   746F6E20746F       DC8 116, 111, 110, 32, 116, 111, 32, 103, 111, 32
   \              20676F20    
   \   00000104   7570206F6E65       DC8 117, 112, 32, 111, 110, 101, 32, 109, 101, 110
   \              206D656E    
   \   0000010E   75206F722068       DC8 117, 32, 111, 114, 32, 104, 111, 108, 100, 32
   \              6F6C6420    
   \   00000118   666F72204D61       DC8 102, 111, 114, 32, 77, 97, 105, 110, 32, 77
   \              696E204D    
   \   00000122   656E752E0A0A       DC8 101, 110, 117, 46, 10, 10, 73, 99, 111, 110
   \              49636F6E    
   \   0000012C   733A2043616D       DC8 115, 58, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   00000136   537461747573       DC8 83, 116, 97, 116, 117, 115, 44, 32, 83, 68
   \              2C205344    
   \   00000140   204361726420       DC8 32, 67, 97, 114, 100, 32, 83, 116, 97, 116
   \              53746174    
   \   0000014A   75732C204750       DC8 117, 115, 44, 32, 71, 80, 83, 32, 83, 105
   \              53205369    
   \   00000154   676E616C2053       DC8 103, 110, 97, 108, 32, 83, 116, 114, 101, 110
   \              7472656E    
   \   0000015E   677468000000       DC8 103, 116, 104, 0, 0, 0
    906          "LED 1 Enable / Disable to add or remove this input from the\
    907          \nUpper warning LED.\
    908          \n\nLED 2 Enable / Disable to add or remove this input from the\
    909          \nLower Warning LED.\
    910          \n\nAlarm State selects the logical value corresponding to an alarm state.\
    911          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    912          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    913          

   \                                 In section .text, align 4, keep-with-next
    914          const char PERSONALIZE_INFO[] =
   \                     PERSONALIZE_INFO:
   \   00000000                      ; Initializer data, 452 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 115, 104, 32, 111
   \              7368206F    
   \   0000000A   776E65722074       DC8 119, 110, 101, 114, 32, 116, 111, 32, 99, 104
   \              6F206368    
   \   00000014   616E6765206F       DC8 97, 110, 103, 101, 32, 111, 119, 110, 101, 114
   \              776E6572    
   \   0000001E   206E616D652E       DC8 32, 110, 97, 109, 101, 46, 10, 10, 67, 111
   \              0A0A436F    
   \   00000028   6E7461637420       DC8 110, 116, 97, 99, 116, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000032   20746F20656E       DC8 32, 116, 111, 32, 101, 110, 116, 101, 114, 32
   \              74657220    
   \   0000003C   612070686F6E       DC8 97, 32, 112, 104, 111, 110, 101, 32, 110, 117
   \              65206E75    
   \   00000046   6D626572206F       DC8 109, 98, 101, 114, 32, 111, 114, 32, 101, 109
   \              7220656D    
   \   00000050   61696C206164       DC8 97, 105, 108, 32, 97, 100, 100, 114, 101, 115
   \              64726573    
   \   0000005A   7320696E2063       DC8 115, 32, 105, 110, 32, 99, 97, 115, 101, 32
   \              61736520    
   \   00000064   6F66206C6F73       DC8 111, 102, 32, 108, 111, 115, 115, 32, 111, 114
   \              73206F72    
   \   0000006E   207365727669       DC8 32, 115, 101, 114, 118, 105, 99, 101, 46, 10
   \              63652E0A    
   \   00000078   0A5769466920       DC8 10, 87, 105, 70, 105, 32, 78, 97, 109, 101
   \              4E616D65    
   \   00000082   206973207468       DC8 32, 105, 115, 32, 116, 104, 101, 32, 98, 114
   \              65206272    
   \   0000008C   6F6164636173       DC8 111, 97, 100, 99, 97, 115, 116, 32, 110, 97
   \              74206E61    
   \   00000096   6D6520666F72       DC8 109, 101, 32, 102, 111, 114, 32, 116, 104, 101
   \              20746865    
   \   000000A0   20776972656C       DC8 32, 119, 105, 114, 101, 108, 101, 115, 115, 32
   \              65737320    
   \   000000AA   646F776E6C6F       DC8 100, 111, 119, 110, 108, 111, 97, 100, 32, 111
   \              6164206F    
   \   000000B4   7074696F6E2E       DC8 112, 116, 105, 111, 110, 46, 10, 10, 87, 105
   \              0A0A5769    
   \   000000BE   466920506173       DC8 70, 105, 32, 80, 97, 115, 115, 119, 111, 114
   \              73776F72    
   \   000000C8   642069732074       DC8 100, 32, 105, 115, 32, 116, 104, 101, 32, 112
   \              68652070    
   \   000000D2   617373776F72       DC8 97, 115, 115, 119, 111, 114, 100, 32, 102, 111
   \              6420666F    
   \   000000DC   722074686520       DC8 114, 32, 116, 104, 101, 32, 119, 105, 114, 101
   \              77697265    
   \   000000E6   6C657373206E       DC8 108, 101, 115, 115, 32, 110, 101, 116, 119, 111
   \              6574776F    
   \   000000F0   726B2E204D75       DC8 114, 107, 46, 32, 77, 117, 115, 116, 32, 98
   \              73742062    
   \   000000FA   65206174206C       DC8 101, 32, 97, 116, 32, 108, 101, 97, 115, 116
   \              65617374    
   \   00000104   203820636861       DC8 32, 56, 32, 99, 104, 97, 114, 97, 99, 116
   \              72616374    
   \   0000010E   6572732E0A0A       DC8 101, 114, 115, 46, 10, 10, 83, 99, 114, 101
   \              53637265    
   \   00000118   656E20616C73       DC8 101, 110, 32, 97, 108, 115, 111, 32, 115, 104
   \              6F207368    
   \   00000122   6F777320756E       DC8 111, 119, 115, 32, 117, 110, 105, 116, 32, 115
   \              69742073    
   \   0000012C   657269616C20       DC8 101, 114, 105, 97, 108, 32, 110, 117, 109, 98
   \              6E756D62    
   \   00000136   657220616E64       DC8 101, 114, 32, 97, 110, 100, 32, 98, 117, 105
   \              20627569    
   \   00000140   6C6420646174       DC8 108, 100, 32, 100, 97, 116, 101, 46, 10, 10
   \              652E0A0A    
   \   0000014A   507265737320       DC8 80, 114, 101, 115, 115, 32, 82, 101, 100, 32
   \              52656420    
   \   00000154   4261636B2042       DC8 66, 97, 99, 107, 32, 66, 117, 116, 116, 111
   \              7574746F    
   \   0000015E   6E20746F2067       DC8 110, 32, 116, 111, 32, 103, 111, 32, 117, 112
   \              6F207570    
   \   00000168   206F6E65206D       DC8 32, 111, 110, 101, 32, 109, 101, 110, 117, 32
   \              656E7520    
   \   00000172   6F7220686F6C       DC8 111, 114, 32, 104, 111, 108, 100, 32, 102, 111
   \              6420666F    
   \   0000017C   72204D61696E       DC8 114, 32, 77, 97, 105, 110, 32, 77, 101, 110
   \              204D656E    
   \   00000186   752E0A0A4963       DC8 117, 46, 10, 10, 73, 99, 111, 110, 115, 58
   \              6F6E733A    
   \   00000190   2043616D6572       DC8 32, 67, 97, 109, 101, 114, 97, 32, 83, 116
   \              61205374    
   \   0000019A   617475732C20       DC8 97, 116, 117, 115, 44, 32, 83, 68, 32, 67
   \              53442043    
   \   000001A4   617264205374       DC8 97, 114, 100, 32, 83, 116, 97, 116, 117, 115
   \              61747573    
   \   000001AE   2C2047505320       DC8 44, 32, 71, 80, 83, 32, 83, 105, 103, 110
   \              5369676E    
   \   000001B8   616C20537472       DC8 97, 108, 32, 83, 116, 114, 101, 110, 103, 116
   \              656E6774    
   \   000001C2   6800               DC8 104, 0
    915          "TraqDash owner to change owner name.\
    916          \n\nContact Info to enter a phone number or email address in case of loss or service.\
    917          \n\nWiFi Name is the broadcast name for the wireless download option.\
    918          \n\nWiFi Password is the password for the wireless network. Must be at least 8 characters.\
    919          \n\nScreen also shows unit serial number and build date.\
    920          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    921          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    922          

   \                                 In section .text, align 4, keep-with-next
    923          const char DRAG_STAGE_SCREEN_INFO[] =
   \                     DRAG_STAGE_SCREEN_INFO:
   \   00000000                      ; Initializer data, 320 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 116, 105, 109
   \              2074696D    
   \   0000000A   696E67207363       DC8 105, 110, 103, 32, 115, 99, 114, 101, 101, 110
   \              7265656E    
   \   00000014   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 103, 97, 117, 103
   \              67617567    
   \   0000001E   652073637265       DC8 101, 32, 115, 99, 114, 101, 101, 110, 32, 98
   \              656E2062    
   \   00000028   7574746F6E73       DC8 117, 116, 116, 111, 110, 115, 32, 111, 110, 32
   \              206F6E20    
   \   00000032   6C656674206F       DC8 108, 101, 102, 116, 32, 111, 102, 32, 115, 99
   \              66207363    
   \   0000003C   7265656E2E0A       DC8 114, 101, 101, 110, 46, 10, 10, 83, 101, 108
   \              0A53656C    
   \   00000046   656374207468       DC8 101, 99, 116, 32, 116, 104, 101, 32, 100, 114
   \              65206472    
   \   00000050   616720737472       DC8 97, 103, 32, 115, 116, 114, 105, 112, 32, 108
   \              6970206C    
   \   0000005A   656E67746820       DC8 101, 110, 103, 116, 104, 32, 102, 114, 111, 109
   \              66726F6D    
   \   00000064   20627574746F       DC8 32, 98, 117, 116, 116, 111, 110, 115, 32, 105
   \              6E732069    
   \   0000006E   6E2063656E74       DC8 110, 32, 99, 101, 110, 116, 101, 114, 32, 99
   \              65722063    
   \   00000078   6F6C756D6E20       DC8 111, 108, 117, 109, 110, 32, 111, 102, 32, 115
   \              6F662073    
   \   00000082   637265656E2E       DC8 99, 114, 101, 101, 110, 46, 10, 10, 84, 111
   \              0A0A546F    
   \   0000008C   75636820746F       DC8 117, 99, 104, 32, 116, 111, 32, 83, 116, 97
   \              20537461    
   \   00000096   676520776865       DC8 103, 101, 32, 119, 104, 101, 110, 32, 116, 104
   \              6E207468    
   \   000000A0   652076656869       DC8 101, 32, 118, 101, 104, 105, 99, 108, 101, 32
   \              636C6520    
   \   000000AA   69732073746F       DC8 105, 115, 32, 115, 116, 111, 112, 112, 101, 100
   \              70706564    
   \   000000B4   206174207468       DC8 32, 97, 116, 32, 116, 104, 101, 32, 115, 116
   \              65207374    
   \   000000BE   617274696E67       DC8 97, 114, 116, 105, 110, 103, 32, 108, 105, 110
   \              206C696E    
   \   000000C8   652E2054696D       DC8 101, 46, 32, 84, 105, 109, 105, 110, 103, 32
   \              696E6720    
   \   000000D2   77696C6C2062       DC8 119, 105, 108, 108, 32, 98, 101, 103, 105, 110
   \              6567696E    
   \   000000DC   207768656E20       DC8 32, 119, 104, 101, 110, 32, 116, 104, 101, 32
   \              74686520    
   \   000000E6   76656869636C       DC8 118, 101, 104, 105, 99, 108, 101, 32, 115, 116
   \              65207374    
   \   000000F0   61727473206D       DC8 97, 114, 116, 115, 32, 109, 111, 118, 105, 110
   \              6F76696E    
   \   000000FA   672E0A0A5072       DC8 103, 46, 10, 10, 80, 114, 101, 115, 115, 32
   \              65737320    
   \   00000104   526564204261       DC8 82, 101, 100, 32, 66, 97, 99, 107, 32, 66
   \              636B2042    
   \   0000010E   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 116, 111, 32, 103
   \              746F2067    
   \   00000118   6F207570206F       DC8 111, 32, 117, 112, 32, 111, 110, 101, 32, 109
   \              6E65206D    
   \   00000122   656E75206F72       DC8 101, 110, 117, 32, 111, 114, 32, 104, 111, 108
   \              20686F6C    
   \   0000012C   6420666F7220       DC8 100, 32, 102, 111, 114, 32, 77, 97, 105, 110
   \              4D61696E    
   \   00000136   204D656E752E       DC8 32, 77, 101, 110, 117, 46, 0, 0, 0, 0
   \              00000000    
    924          "Select timing screen from gauge screen buttons on left of screen.\
    925          \n\nSelect the drag strip length from buttons in center column of screen.\
    926          \n\nTouch to Stage when the vehicle is stopped at the starting line. \
    927          Timing will begin when the vehicle starts moving.\
    928          \n\nPress Red Back Button to go up one menu or hold for Main Menu.";
    929          

   \                                 In section .text, align 4, keep-with-next
    930          const char AUTOX_STAGE_SCREEN_INFO[] =
   \                     AUTOX_STAGE_SCREEN_INFO:
   \   00000000                      ; Initializer data, 248 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 116, 105, 109
   \              2074696D    
   \   0000000A   696E67207363       DC8 105, 110, 103, 32, 115, 99, 114, 101, 101, 110
   \              7265656E    
   \   00000014   2066726F6D20       DC8 32, 102, 114, 111, 109, 32, 103, 97, 117, 103
   \              67617567    
   \   0000001E   652073637265       DC8 101, 32, 115, 99, 114, 101, 101, 110, 32, 98
   \              656E2062    
   \   00000028   7574746F6E73       DC8 117, 116, 116, 111, 110, 115, 32, 111, 110, 32
   \              206F6E20    
   \   00000032   6C656674206F       DC8 108, 101, 102, 116, 32, 111, 102, 32, 115, 99
   \              66207363    
   \   0000003C   7265656E2E0A       DC8 114, 101, 101, 110, 46, 10, 10, 84, 111, 117
   \              0A546F75    
   \   00000046   636820746F20       DC8 99, 104, 32, 116, 111, 32, 83, 116, 97, 103
   \              53746167    
   \   00000050   65207768656E       DC8 101, 32, 119, 104, 101, 110, 32, 116, 104, 101
   \              20746865    
   \   0000005A   207665686963       DC8 32, 118, 101, 104, 105, 99, 108, 101, 32, 105
   \              6C652069    
   \   00000064   732073746F70       DC8 115, 32, 115, 116, 111, 112, 112, 101, 100, 32
   \              70656420    
   \   0000006E   617420746865       DC8 97, 116, 32, 116, 104, 101, 32, 115, 116, 97
   \              20737461    
   \   00000078   7274696E6720       DC8 114, 116, 105, 110, 103, 32, 108, 105, 110, 101
   \              6C696E65    
   \   00000082   2E2054696D69       DC8 46, 32, 84, 105, 109, 105, 110, 103, 32, 119
   \              6E672077    
   \   0000008C   696C6C206265       DC8 105, 108, 108, 32, 98, 101, 103, 105, 110, 32
   \              67696E20    
   \   00000096   7768656E2074       DC8 119, 104, 101, 110, 32, 116, 104, 101, 32, 118
   \              68652076    
   \   000000A0   656869636C65       DC8 101, 104, 105, 99, 108, 101, 32, 115, 116, 97
   \              20737461    
   \   000000AA   727473206D6F       DC8 114, 116, 115, 32, 109, 111, 118, 105, 110, 103
   \              76696E67    
   \   000000B4   2E0A0A507265       DC8 46, 10, 10, 80, 114, 101, 115, 115, 32, 82
   \              73732052    
   \   000000BE   656420426163       DC8 101, 100, 32, 66, 97, 99, 107, 32, 66, 117
   \              6B204275    
   \   000000C8   74746F6E2074       DC8 116, 116, 111, 110, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   000000D2   207570206F6E       DC8 32, 117, 112, 32, 111, 110, 101, 32, 109, 101
   \              65206D65    
   \   000000DC   6E75206F7220       DC8 110, 117, 32, 111, 114, 32, 104, 111, 108, 100
   \              686F6C64    
   \   000000E6   20666F72204D       DC8 32, 102, 111, 114, 32, 77, 97, 105, 110, 32
   \              61696E20    
   \   000000F0   4D656E752E00       DC8 77, 101, 110, 117, 46, 0, 0, 0
   \              0000        
    931          "Select timing screen from gauge screen buttons on left of screen.\
    932          \n\nTouch to Stage when the vehicle is stopped at the starting line. \
    933          Timing will begin when the vehicle starts moving.\
    934          \n\nPress Red Back Button to go up one menu or hold for Main Menu.";
    935          

   \                                 In section .text, align 4, keep-with-next
    936          const char RECORD_SPEED_INFO[] =
   \                     RECORD_SPEED_INFO:
   \   00000000                      ; Initializer data, 496 bytes
   \   00000000   557365206C69       DC8 85, 115, 101, 32, 108, 105, 115, 116, 32, 119
   \              73742077    
   \   0000000A   6865656C2074       DC8 104, 101, 101, 108, 32, 116, 111, 32, 115, 101
   \              6F207365    
   \   00000014   742074686520       DC8 116, 32, 116, 104, 101, 32, 118, 101, 104, 105
   \              76656869    
   \   0000001E   636C65207370       DC8 99, 108, 101, 32, 115, 112, 101, 101, 100, 32
   \              65656420    
   \   00000028   617420776869       DC8 97, 116, 32, 119, 104, 105, 99, 104, 32, 121
   \              63682079    
   \   00000032   6F7520776F75       DC8 111, 117, 32, 119, 111, 117, 108, 100, 32, 108
   \              6C64206C    
   \   0000003C   696B65207468       DC8 105, 107, 101, 32, 116, 104, 101, 32, 84, 114
   \              65205472    
   \   00000046   61716D617465       DC8 97, 113, 109, 97, 116, 101, 32, 97, 110, 100
   \              20616E64    
   \   00000050   2063616D6572       DC8 32, 99, 97, 109, 101, 114, 97, 115, 32, 116
   \              61732074    
   \   0000005A   6F2062656769       DC8 111, 32, 98, 101, 103, 105, 110, 32, 114, 101
   \              6E207265    
   \   00000064   636F7264696E       DC8 99, 111, 114, 100, 105, 110, 103, 46, 32, 84
   \              672E2054    
   \   0000006E   68656E20656E       DC8 104, 101, 110, 32, 101, 110, 116, 101, 114, 32
   \              74657220    
   \   00000078   61205265636F       DC8 97, 32, 82, 101, 99, 111, 114, 100, 105, 110
   \              7264696E    
   \   00000082   672028526163       DC8 103, 32, 40, 82, 97, 99, 101, 32, 111, 114
   \              65206F72    
   \   0000008C   204472697665       DC8 32, 68, 114, 105, 118, 101, 41, 32, 109, 111
   \              29206D6F    
   \   00000096   64652E204163       DC8 100, 101, 46, 32, 65, 99, 116, 117, 97, 108
   \              7475616C    
   \   000000A0   207265636F72       DC8 32, 114, 101, 99, 111, 114, 100, 105, 110, 103
   \              64696E67    
   \   000000AA   202864617461       DC8 32, 40, 100, 97, 116, 97, 32, 97, 110, 100
   \              20616E64    
   \   000000B4   20766964656F       DC8 32, 118, 105, 100, 101, 111, 41, 32, 119, 105
   \              29207769    
   \   000000BE   6C6C20626567       DC8 108, 108, 32, 98, 101, 103, 105, 110, 32, 97
   \              696E2061    
   \   000000C8   742074686520       DC8 116, 32, 116, 104, 101, 32, 99, 104, 111, 115
   \              63686F73    
   \   000000D2   656E20737065       DC8 101, 110, 32, 115, 112, 101, 101, 100, 46, 10
   \              65642E0A    
   \   000000DC   0A557365206C       DC8 10, 85, 115, 101, 32, 108, 105, 115, 116, 32
   \              69737420    
   \   000000E6   776865656C20       DC8 119, 104, 101, 101, 108, 32, 116, 111, 32, 115
   \              746F2073    
   \   000000F0   657420612073       DC8 101, 116, 32, 97, 32, 115, 116, 97, 116, 105
   \              74617469    
   \   000000FA   6F6E61727920       DC8 111, 110, 97, 114, 121, 32, 116, 105, 109, 101
   \              74696D65    
   \   00000104   2E2049662074       DC8 46, 32, 73, 102, 32, 116, 104, 101, 32, 84
   \              68652054    
   \   0000010E   7261716D6174       DC8 114, 97, 113, 109, 97, 116, 101, 32, 105, 115
   \              65206973    
   \   00000118   207265636F72       DC8 32, 114, 101, 99, 111, 114, 100, 105, 110, 103
   \              64696E67    
   \   00000122   20616E642074       DC8 32, 97, 110, 100, 32, 116, 104, 101, 32, 118
   \              68652076    
   \   0000012C   656869636C65       DC8 101, 104, 105, 99, 108, 101, 32, 105, 115, 32
   \              20697320    
   \   00000136   6E6F74206D6F       DC8 110, 111, 116, 32, 109, 111, 118, 105, 110, 103
   \              76696E67    
   \   00000140   2C207265636F       DC8 44, 32, 114, 101, 99, 111, 114, 100, 105, 110
   \              7264696E    
   \   0000014A   672077696C6C       DC8 103, 32, 119, 105, 108, 108, 32, 115, 116, 111
   \              2073746F    
   \   00000154   702061667465       DC8 112, 32, 97, 102, 116, 101, 114, 32, 116, 104
   \              72207468    
   \   0000015E   652063686F73       DC8 101, 32, 99, 104, 111, 115, 101, 110, 32, 116
   \              656E2074    
   \   00000168   696D65206578       DC8 105, 109, 101, 32, 101, 120, 112, 105, 114, 101
   \              70697265    
   \   00000172   732E0A0A5072       DC8 115, 46, 10, 10, 80, 114, 101, 115, 115, 32
   \              65737320    
   \   0000017C   526564204261       DC8 82, 101, 100, 32, 66, 97, 99, 107, 32, 66
   \              636B2042    
   \   00000186   7574746F6E20       DC8 117, 116, 116, 111, 110, 32, 116, 111, 32, 103
   \              746F2067    
   \   00000190   6F207570206F       DC8 111, 32, 117, 112, 32, 111, 110, 101, 32, 109
   \              6E65206D    
   \   0000019A   656E75206F72       DC8 101, 110, 117, 32, 111, 114, 32, 104, 111, 108
   \              20686F6C    
   \   000001A4   6420666F7220       DC8 100, 32, 102, 111, 114, 32, 77, 97, 105, 110
   \              4D61696E    
   \   000001AE   204D656E752E       DC8 32, 77, 101, 110, 117, 46, 10, 10, 73, 99
   \              0A0A4963    
   \   000001B8   6F6E733A2043       DC8 111, 110, 115, 58, 32, 67, 97, 109, 101, 114
   \              616D6572    
   \   000001C2   612053746174       DC8 97, 32, 83, 116, 97, 116, 117, 115, 44, 32
   \              75732C20    
   \   000001CC   534420436172       DC8 83, 68, 32, 67, 97, 114, 100, 32, 83, 116
   \              64205374    
   \   000001D6   617475732C20       DC8 97, 116, 117, 115, 44, 32, 71, 80, 83, 32
   \              47505320    
   \   000001E0   5369676E616C       DC8 83, 105, 103, 110, 97, 108, 32, 83, 116, 114
   \              20537472    
   \   000001EA   656E67746800       DC8 101, 110, 103, 116, 104, 0
    937          "Use list wheel to set the vehicle speed at which you would like the Traqmate and cameras to \
    938          begin recording. Then enter a Recording (Race or Drive) mode. Actual \
    939          recording (data and video) will begin at the chosen speed.\
    940          \n\nUse list wheel to set a stationary time. If the Traqmate is recording and the vehicle is not \
    941          moving, recording will stop after the chosen time expires.\
    942          \n\nPress Red Back Button to go up one menu or hold for Main Menu.\
    943          \n\nIcons: Camera Status, SD Card Status, GPS Signal Strength";
    944          
    945          /*********************************************************************
    946          *
    947          *       Public code
    948          *
    949          **********************************************************************
    950          */
    951          
    952          //
    953          // Set the last screen of any type and save changes to the file system
    954          //

   \                                 In section .text, align 4, keep-with-next
    955          void SetLastScreen(enum SCREEN_TYPE screen_type, int screen)
    956          {
    957          	switch (sysData.screentype = screen_type)
   \                     SetLastScreen:
   \   00000000   ........           LDR      R2,??DataTable150
   \   00000004   1400C2E5           STRB     R0,[R2, #+20]
   \   00000008   010040E2           SUB      R0,R0,#+1
   \   0000000C   150050E3           CMP      R0,#+21
   \   00000010   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SetLastScreen_0:
   \   00000014   3800008A           BHI      ??SetLastScreen_1
   \   00000018   140000EA           B        ??SetLastScreen_2
   \   0000001C   230000EA           B        ??SetLastScreen_3
   \   00000020   240000EA           B        ??SetLastScreen_4
   \   00000024   250000EA           B        ??SetLastScreen_5
   \   00000028   120000EA           B        ??SetLastScreen_6
   \   0000002C   130000EA           B        ??SetLastScreen_7
   \   00000030   140000EA           B        ??SetLastScreen_8
   \   00000034   300000EA           B        ??SetLastScreen_1
   \   00000038   140000EA           B        ??SetLastScreen_9
   \   0000003C   150000EA           B        ??SetLastScreen_10
   \   00000040   160000EA           B        ??SetLastScreen_11
   \   00000044   2C0000EA           B        ??SetLastScreen_1
   \   00000048   160000EA           B        ??SetLastScreen_12
   \   0000004C   1D0000EA           B        ??SetLastScreen_13
   \   00000050   220000EA           B        ??SetLastScreen_14
   \   00000054   250000EA           B        ??SetLastScreen_15
   \   00000058   270000EA           B        ??SetLastScreen_1
   \   0000005C   210000EA           B        ??SetLastScreen_16
   \   00000060   1A0000EA           B        ??SetLastScreen_17
   \   00000064   240000EA           B        ??SetLastScreen_1
   \   00000068   1A0000EA           B        ??SetLastScreen_18
   \   0000006C   210000EA           B        ??SetLastScreen_19
    958          	{
    959          		case CONFIG_SCREEN_TYPE:			sysData.lastConfigScreen = screen;				break;
   \                     ??SetLastScreen_2:
   \   00000070   181082E5           STR      R1,[R2, #+24]
   \   00000074   1EFF2FE1           BX       LR
    960          		case RACE_SETUP_SCREENS_TYPE:		sysData.lastRaceSetupScreen = screen;			break;
   \                     ??SetLastScreen_6:
   \   00000078   281082E5           STR      R1,[R2, #+40]
   \   0000007C   1EFF2FE1           BX       LR
    961          		case SYSTEM_SETTINGS_SCREENS_TYPE:	sysData.lastSystemSettingsScreen = screen;		break;
   \                     ??SetLastScreen_7:
   \   00000080   2C1082E5           STR      R1,[R2, #+44]
   \   00000084   1EFF2FE1           BX       LR
    962          		case VEHICLE_SETTINGS_SCREENS_TYPE:	sysData.lastVehicleSettingsScreen = screen;		break;
   \                     ??SetLastScreen_8:
   \   00000088   301082E5           STR      R1,[R2, #+48]
   \   0000008C   1EFF2FE1           BX       LR
    963          		case TACH_SETUP_SCREENS_TYPE:		sysData.lastTachSetupScreen = screen;			break;
   \                     ??SetLastScreen_9:
   \   00000090   341082E5           STR      R1,[R2, #+52]
   \   00000094   1EFF2FE1           BX       LR
    964          		case INPUTS_SCREENS_TYPE:			sysData.lastInputsScreen = screen;				break;
   \                     ??SetLastScreen_10:
   \   00000098   381082E5           STR      R1,[R2, #+56]
   \   0000009C   1EFF2FE1           BX       LR
    965          		case REVIEW_SESSIONS_SCREENS_TYPE:	sysData.lastReviewSessionsScreen = screen;		break;
   \                     ??SetLastScreen_11:
   \   000000A0   3C1082E5           STR      R1,[R2, #+60]
   \   000000A4   1EFF2FE1           BX       LR
    966          		case TRACK_SETTINGS_SCREENS_TYPE:	sysData.lastTrackSettingsScreen = screen;		break;
   \                     ??SetLastScreen_12:
   \   000000A8   401082E5           STR      R1,[R2, #+64]
   \   000000AC   1EFF2FE1           BX       LR
    967          		case GAUGES_SCREEN_TYPE:			sysData.lastGaugeScreen = screen;				break;
   \                     ??SetLastScreen_3:
   \   000000B0   1C1082E5           STR      R1,[R2, #+28]
   \   000000B4   1EFF2FE1           BX       LR
    968          		case DRIVE_MODE_SCREEN_TYPE:		sysData.lastDriveScreen = screen;				break;
   \                     ??SetLastScreen_4:
   \   000000B8   201082E5           STR      R1,[R2, #+32]
   \   000000BC   1EFF2FE1           BX       LR
    969          		case INSTRUMENTS_MODE_SCREEN_TYPE:	sysData.lastInstrumentsScreen = screen;			break;
   \                     ??SetLastScreen_5:
   \   000000C0   241082E5           STR      R1,[R2, #+36]
   \   000000C4   1EFF2FE1           BX       LR
    970          		case GEARING_SCREENS_TYPE:			sysData.lastGearingScreen = screen;				break;
   \                     ??SetLastScreen_13:
   \   000000C8   441082E5           STR      R1,[R2, #+68]
   \   000000CC   1EFF2FE1           BX       LR
    971          		case GEAR_RATIOS:					sysData.lastGearRatioScreen = screen;			break;
   \                     ??SetLastScreen_17:
   \   000000D0   481082E5           STR      R1,[R2, #+72]
   \   000000D4   1EFF2FE1           BX       LR
    972          		case SFSCREENS_TYPE:				sysData.lastSFScreen = screen;					break;
   \                     ??SetLastScreen_18:
   \   000000D8   4C1082E5           STR      R1,[R2, #+76]
   \   000000DC   1EFF2FE1           BX       LR
    973          		case ANALOG_SETTINGS_SCREEN_TYPE:	sysData.lastAnalogInputSettingsScreen = screen;	break;
   \                     ??SetLastScreen_14:
   \   000000E0   501082E5           STR      R1,[R2, #+80]
   \   000000E4   1EFF2FE1           BX       LR
    974          		case ANALOG_INPUTS_SCALE:			sysData.lastAnalogScaleScreen = screen;			break;
   \                     ??SetLastScreen_16:
   \   000000E8   541082E5           STR      R1,[R2, #+84]
   \   000000EC   1EFF2FE1           BX       LR
    975          		case DIGITAL_SETTINGS_SCREEN_TYPE:	sysData.lastDigitalInputSettingsScreen = screen;break;
   \                     ??SetLastScreen_15:
   \   000000F0   581082E5           STR      R1,[R2, #+88]
   \   000000F4   1EFF2FE1           BX       LR
    976          		case TIRE_DIMENSIONS_SCREEN_TYPE:	sysData.lastTireDimensionsScreen = screen;		break;
   \                     ??SetLastScreen_19:
   \   000000F8   5C1082E5           STR      R1,[R2, #+92]
    977          	}
    978          }
   \                     ??SetLastScreen_1:
   \   000000FC   1EFF2FE1           BX       LR               ;; return
    979          

   \                                 In section .text, align 4, keep-with-next
    980          WM_HWIN GetCurrentWindowHandle(void)
    981          {
   \                     GetCurrentWindowHandle:
   \   00000000   00402DE9           PUSH     {LR}
    982          	switch (GetScreenType())
   \   00000004   ........           LDR      R0,??DataTable150
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000010   130050E3           CMP      R0,#+19
   \   00000014   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetCurrentWindowHandle_0:
   \   00000018   3600008A           BHI      ??GetCurrentWindowHandle_1
   \   0000001C   330000EA           B        ??GetCurrentWindowHandle_2
   \   00000020   110000EA           B        ??GetCurrentWindowHandle_3
   \   00000024   1B0000EA           B        ??GetCurrentWindowHandle_4
   \   00000028   1A0000EA           B        ??GetCurrentWindowHandle_4
   \   0000002C   190000EA           B        ??GetCurrentWindowHandle_4
   \   00000030   100000EA           B        ??GetCurrentWindowHandle_5
   \   00000034   110000EA           B        ??GetCurrentWindowHandle_6
   \   00000038   140000EA           B        ??GetCurrentWindowHandle_7
   \   0000003C   110000EA           B        ??GetCurrentWindowHandle_8
   \   00000040   160000EA           B        ??GetCurrentWindowHandle_9
   \   00000044   170000EA           B        ??GetCurrentWindowHandle_10
   \   00000048   180000EA           B        ??GetCurrentWindowHandle_11
   \   0000004C   190000EA           B        ??GetCurrentWindowHandle_12
   \   00000050   1A0000EA           B        ??GetCurrentWindowHandle_13
   \   00000054   1B0000EA           B        ??GetCurrentWindowHandle_14
   \   00000058   1E0000EA           B        ??GetCurrentWindowHandle_15
   \   0000005C   210000EA           B        ??GetCurrentWindowHandle_16
   \   00000060   240000EA           B        ??GetCurrentWindowHandle_1
   \   00000064   1D0000EA           B        ??GetCurrentWindowHandle_17
   \   00000068   180000EA           B        ??GetCurrentWindowHandle_18
    983          	{
    984          	case CONFIG_SCREEN_TYPE:			return hConfigScreen;
   \                     ??GetCurrentWindowHandle_3:
   \   0000006C   ........           LDR      R0,??DataTable151
   \   00000070   800090E5           LDR      R0,[R0, #+128]
   \   00000074   200000EA           B        ??GetCurrentWindowHandle_19
    985          	case RACE_SETUP_SCREENS_TYPE:		return GetRaceSetupScreensWindowHandle();
   \                     ??GetCurrentWindowHandle_5:
   \   00000078   ........           BL       GetRaceSetupScreensWindowHandle
   \   0000007C   1E0000EA           B        ??GetCurrentWindowHandle_19
    986          	case SYSTEM_SETTINGS_SCREENS_TYPE:	return GetSystemSettingsWindowHandle();
   \                     ??GetCurrentWindowHandle_6:
   \   00000080   ........           BL       GetSystemSettingsWindowHandle
   \   00000084   1C0000EA           B        ??GetCurrentWindowHandle_19
    987          	case VEHICLE_SETTING_SCREEN_TYPE:	return GetVehicleSettingMainWindowHandle();
   \                     ??GetCurrentWindowHandle_8:
   \   00000088   ........           BL       GetVehicleSettingMainWindowHandle
   \   0000008C   1A0000EA           B        ??GetCurrentWindowHandle_19
    988          	case VEHICLE_SETTINGS_SCREENS_TYPE:	return GetVehicleSettingsWindowHandle();
   \                     ??GetCurrentWindowHandle_7:
   \   00000090   ........           BL       GetVehicleSettingsWindowHandle
   \   00000094   180000EA           B        ??GetCurrentWindowHandle_19
    989          	case DRIVE_MODE_SCREEN_TYPE:
    990          	case INSTRUMENTS_MODE_SCREEN_TYPE:
    991          	case GAUGES_SCREEN_TYPE:			return GetRunningGaugesWindowHandle();
   \                     ??GetCurrentWindowHandle_4:
   \   00000098   ........           BL       GetRunningGaugesWindowHandle
   \   0000009C   160000EA           B        ??GetCurrentWindowHandle_19
    992          	case TACH_SETUP_SCREENS_TYPE:		return GetTachSetupWindowHandle();
   \                     ??GetCurrentWindowHandle_9:
   \   000000A0   ........           BL       GetTachSetupWindowHandle
   \   000000A4   140000EA           B        ??GetCurrentWindowHandle_19
    993          	case INPUTS_SCREENS_TYPE:			return GetInputsWindowHandle();
   \                     ??GetCurrentWindowHandle_10:
   \   000000A8   ........           BL       GetInputsWindowHandle
   \   000000AC   120000EA           B        ??GetCurrentWindowHandle_19
    994          	case REVIEW_SESSIONS_SCREENS_TYPE:	return GetReviewSessionsWindowHandle();
   \                     ??GetCurrentWindowHandle_11:
   \   000000B0   ........           BL       GetReviewSessionsWindowHandle
   \   000000B4   100000EA           B        ??GetCurrentWindowHandle_19
    995          	case TRACK_SETTING_SCREEN_TYPE:		return GetTrackSettingMainWindowHandle();
   \                     ??GetCurrentWindowHandle_12:
   \   000000B8   ........           BL       GetTrackSettingMainWindowHandle
   \   000000BC   0E0000EA           B        ??GetCurrentWindowHandle_19
    996          	case TRACK_SETTINGS_SCREENS_TYPE:	return GetTrackSettingsWindowHandle();
   \                     ??GetCurrentWindowHandle_13:
   \   000000C0   ........           BL       GetTrackSettingsWindowHandle
   \   000000C4   0C0000EA           B        ??GetCurrentWindowHandle_19
    997          	case GEARING_SCREENS_TYPE:			return GetGearingWindowHandle();
   \                     ??GetCurrentWindowHandle_14:
   \   000000C8   ........           BL       GetGearingWindowHandle
   \   000000CC   0A0000EA           B        ??GetCurrentWindowHandle_19
    998          	case GEAR_RATIOS:					return GetGearRatiosWindowHandle();
   \                     ??GetCurrentWindowHandle_18:
   \   000000D0   ........           BL       GetGearRatiosWindowHandle
   \   000000D4   080000EA           B        ??GetCurrentWindowHandle_19
    999          	case ANALOG_SETTINGS_SCREEN_TYPE:	return GetAnalogInputSettingsWindowHandle();
   \                     ??GetCurrentWindowHandle_15:
   \   000000D8   ........           BL       GetAnalogInputSettingsWindowHandle
   \   000000DC   060000EA           B        ??GetCurrentWindowHandle_19
   1000          	case ANALOG_INPUTS_SCALE:			return GetAnalogInputsScaleWindowHandle();
   \                     ??GetCurrentWindowHandle_17:
   \   000000E0   ........           BL       GetAnalogInputsScaleWindowHandle
   \   000000E4   040000EA           B        ??GetCurrentWindowHandle_19
   1001          	case DIGITAL_SETTINGS_SCREEN_TYPE:	return GetDigitalInputSettingsWindowHandle();
   \                     ??GetCurrentWindowHandle_16:
   \   000000E8   ........           BL       GetDigitalInputSettingsWindowHandle
   \   000000EC   020000EA           B        ??GetCurrentWindowHandle_19
   1002          	case GENERAL_CONFIG_SCREEN_TYPE:	return GetGeneralConfinScreenWindowHandle();
   \                     ??GetCurrentWindowHandle_2:
   \   000000F0   ........           BL       GetGeneralConfinScreenWindowHandle
   \   000000F4   000000EA           B        ??GetCurrentWindowHandle_19
   1003          	default:							return 0;
   \                     ??GetCurrentWindowHandle_1:
   \   000000F8   0000A0E3           MOV      R0,#+0
   \                     ??GetCurrentWindowHandle_19:
   \   000000FC   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000100   0080BDE8           POP      {PC}             ;; return
   1004          	}
   1005          }
   1006          

   \                                 In section .text, align 4, keep-with-next
   1007          int GetLastScreen(enum SCREEN_TYPE screenType)
   1008          {
   1009          	switch (screenType)
   \                     GetLastScreen:
   \   00000000   010040E2           SUB      R0,R0,#+1
   \   00000004   1F0050E3           CMP      R0,#+31
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetLastScreen_0:
   \   0000000C   8A00008A           BHI      ??GetLastScreen_1
   \   00000010   1E0000EA           B        ??GetLastScreen_2
   \   00000014   5D0000EA           B        ??GetLastScreen_3
   \   00000018   340000EA           B        ??GetLastScreen_4
   \   0000001C   470000EA           B        ??GetLastScreen_5
   \   00000020   1D0000EA           B        ??GetLastScreen_6
   \   00000024   1F0000EA           B        ??GetLastScreen_7
   \   00000028   210000EA           B        ??GetLastScreen_8
   \   0000002C   820000EA           B        ??GetLastScreen_1
   \   00000030   220000EA           B        ??GetLastScreen_9
   \   00000034   240000EA           B        ??GetLastScreen_10
   \   00000038   260000EA           B        ??GetLastScreen_11
   \   0000003C   7E0000EA           B        ??GetLastScreen_1
   \   00000040   270000EA           B        ??GetLastScreen_12
   \   00000044   650000EA           B        ??GetLastScreen_13
   \   00000048   6D0000EA           B        ??GetLastScreen_14
   \   0000004C   720000EA           B        ??GetLastScreen_15
   \   00000050   790000EA           B        ??GetLastScreen_1
   \   00000054   6D0000EA           B        ??GetLastScreen_16
   \   00000058   630000EA           B        ??GetLastScreen_17
   \   0000005C   760000EA           B        ??GetLastScreen_1
   \   00000060   640000EA           B        ??GetLastScreen_18
   \   00000064   6F0000EA           B        ??GetLastScreen_19
   \   00000068   730000EA           B        ??GetLastScreen_1
   \   0000006C   720000EA           B        ??GetLastScreen_1
   \   00000070   710000EA           B        ??GetLastScreen_1
   \   00000074   700000EA           B        ??GetLastScreen_1
   \   00000078   6F0000EA           B        ??GetLastScreen_1
   \   0000007C   6E0000EA           B        ??GetLastScreen_1
   \   00000080   6D0000EA           B        ??GetLastScreen_1
   \   00000084   6C0000EA           B        ??GetLastScreen_1
   \   00000088   6B0000EA           B        ??GetLastScreen_1
   \   0000008C   680000EA           B        ??GetLastScreen_20
   1010          	{
   1011          		case CONFIG_SCREEN_TYPE:			return sysData.lastConfigScreen;
   \                     ??GetLastScreen_2:
   \   00000090   ........           LDR      R0,??DataTable150
   \   00000094   180090E5           LDR      R0,[R0, #+24]
   \   00000098   1EFF2FE1           BX       LR
   1012          		case RACE_SETUP_SCREENS_TYPE:		return sysData.lastRaceSetupScreen;
   \                     ??GetLastScreen_6:
   \   0000009C   ........           LDR      R0,??DataTable150
   \   000000A0   280090E5           LDR      R0,[R0, #+40]
   \   000000A4   1EFF2FE1           BX       LR
   1013          		case SYSTEM_SETTINGS_SCREENS_TYPE:	return sysData.lastSystemSettingsScreen;
   \                     ??GetLastScreen_7:
   \   000000A8   ........           LDR      R0,??DataTable150
   \   000000AC   2C0090E5           LDR      R0,[R0, #+44]
   \   000000B0   1EFF2FE1           BX       LR
   1014          		case VEHICLE_SETTINGS_SCREENS_TYPE:	return sysData.lastVehicleSettingsScreen;
   \                     ??GetLastScreen_8:
   \   000000B4   ........           LDR      R0,??DataTable150
   \   000000B8   300090E5           LDR      R0,[R0, #+48]
   \   000000BC   1EFF2FE1           BX       LR
   1015          		case TACH_SETUP_SCREENS_TYPE:		return sysData.lastTachSetupScreen;
   \                     ??GetLastScreen_9:
   \   000000C0   ........           LDR      R0,??DataTable150
   \   000000C4   340090E5           LDR      R0,[R0, #+52]
   \   000000C8   1EFF2FE1           BX       LR
   1016          		case INPUTS_SCREENS_TYPE:			return sysData.lastInputsScreen;
   \                     ??GetLastScreen_10:
   \   000000CC   ........           LDR      R0,??DataTable150
   \   000000D0   380090E5           LDR      R0,[R0, #+56]
   \   000000D4   1EFF2FE1           BX       LR
   1017          		case REVIEW_SESSIONS_SCREENS_TYPE:	return sysData.lastReviewSessionsScreen;
   \                     ??GetLastScreen_11:
   \   000000D8   ........           LDR      R0,??DataTable150
   \   000000DC   3C0090E5           LDR      R0,[R0, #+60]
   \   000000E0   1EFF2FE1           BX       LR
   1018          		case TRACK_SETTINGS_SCREENS_TYPE:	return sysData.lastTrackSettingsScreen;
   \                     ??GetLastScreen_12:
   \   000000E4   ........           LDR      R0,??DataTable150
   \   000000E8   400090E5           LDR      R0,[R0, #+64]
   \   000000EC   1EFF2FE1           BX       LR
   1019          		case DRIVE_MODE_SCREEN_TYPE:
   1020          			if (!testMode)
   \                     ??GetLastScreen_4:
   \   000000F0   ........           LDR      R1,??DataTable157
   \   000000F4   ........           LDR      R0,??DataTable150
   \   000000F8   001091E5           LDR      R1,[R1, #+0]
   \   000000FC   000051E3           CMP      R1,#+0
   \   00000100   0C00001A           BNE      ??GetLastScreen_21
   1021          			{	// Only allow to return to TEST_INFO_SCREEN (last screen in list) if we are in testMode,
   1022          				// otherwise go back to the screen prior to the last screen
   1023          				if (sysData.lastDriveScreen >= NUM_DRIVE_SCREENS - 1)
   \   00000104   201090E5           LDR      R1,[R0, #+32]
   1024          					sysData.lastDriveScreen = NUM_DRIVE_SCREENS - 2;
   1025          
   1026          				// Be sure the screen we ended up on is not the TEST_INFO_SCREEN screen
   1027          				if (GaugeScreenIndexToID(DRIVE_MODE_SCREEN_TYPE, sysData.lastDriveScreen) == TEST_INFO_SCREEN)
   \   00000108   ........           LDR      R3,??DataTable157_1
   \   0000010C   060051E3           CMP      R1,#+6
   \   00000110   0510A0A3           MOVGE    R1,#+5
   \   00000114   201080A5           STRGE    R1,[R0, #+32]
   \   00000118   201090E5           LDR      R1,[R0, #+32]
   \   0000011C   0120A0E1           MOV      R2,R1
   \   00000120   070052E3           CMP      R2,#+7
   \   00000124   0220A023           MOVCS    R2,#+2
   \   00000128   822193E7           LDR      R2,[R3, +R2, LSL #+3]
   \   0000012C   090052E3           CMP      R2,#+9
   1028          					sysData.lastDriveScreen -= 1;		// Rotate to the previous screen in the rotation
   \   00000130   01104102           SUBEQ    R1,R1,#+1
   \   00000134   20108005           STREQ    R1,[R0, #+32]
   1029          														// Note this means the test mode screen CANNOT be the first
   1030          														// screen in the rotation!
   1031          			}
   1032          			return sysData.lastDriveScreen;
   \                     ??GetLastScreen_21:
   \   00000138   200090E5           LDR      R0,[R0, #+32]
   \   0000013C   1EFF2FE1           BX       LR
   1033          		case INSTRUMENTS_MODE_SCREEN_TYPE:
   1034          			if (!testMode)
   \                     ??GetLastScreen_5:
   \   00000140   ........           LDR      R1,??DataTable157
   \   00000144   ........           LDR      R0,??DataTable150
   \   00000148   001091E5           LDR      R1,[R1, #+0]
   \   0000014C   000051E3           CMP      R1,#+0
   \   00000150   0C00001A           BNE      ??GetLastScreen_22
   1035          			{	// Only allow to return to TEST_INFO_SCREEN (last screen in list) if we are in testMode,
   1036          				// otherwise go back to the screen prior to the last screen
   1037          				if (sysData.lastInstrumentsScreen >= NUM_INSTRUMENTS_SCREENS - 1)
   \   00000154   241090E5           LDR      R1,[R0, #+36]
   1038          					sysData.lastInstrumentsScreen = NUM_INSTRUMENTS_SCREENS - 2;
   1039          
   1040          				// Be sure the screen we ended up on is not the TEST_INFO_SCREEN screen
   1041          				if (GaugeScreenIndexToID(INSTRUMENTS_MODE_SCREEN_TYPE, sysData.lastInstrumentsScreen) == TEST_INFO_SCREEN)
   \   00000158   ........           LDR      R3,??DataTable157_2
   \   0000015C   060051E3           CMP      R1,#+6
   \   00000160   0510A0A3           MOVGE    R1,#+5
   \   00000164   241080A5           STRGE    R1,[R0, #+36]
   \   00000168   241090E5           LDR      R1,[R0, #+36]
   \   0000016C   0120A0E1           MOV      R2,R1
   \   00000170   070052E3           CMP      R2,#+7
   \   00000174   0120A023           MOVCS    R2,#+1
   \   00000178   822193E7           LDR      R2,[R3, +R2, LSL #+3]
   \   0000017C   090052E3           CMP      R2,#+9
   1042          					sysData.lastInstrumentsScreen -= 1;		// Rotate to the previous screen in the rotation
   \   00000180   01104102           SUBEQ    R1,R1,#+1
   \   00000184   24108005           STREQ    R1,[R0, #+36]
   1043          															// Note this means the test mode screen CANNOT be the first
   1044          															// screen in the rotation!
   1045          			}
   1046          			return sysData.lastInstrumentsScreen;
   \                     ??GetLastScreen_22:
   \   00000188   240090E5           LDR      R0,[R0, #+36]
   \   0000018C   1EFF2FE1           BX       LR
   1047          		case GAUGES_SCREEN_TYPE:
   1048          			if (!testMode)
   \                     ??GetLastScreen_3:
   \   00000190   ........           LDR      R1,??DataTable157
   \   00000194   ........           LDR      R0,??DataTable150
   \   00000198   001091E5           LDR      R1,[R1, #+0]
   \   0000019C   000051E3           CMP      R1,#+0
   \   000001A0   0C00001A           BNE      ??GetLastScreen_23
   1049          			{	// Only allow to return to TEST_INFO_SCREEN or GPS_INFO (last two screens in list) if we are in testMode,
   1050          				// otherwise go back to the screen prior to the last screen
   1051          				if (sysData.lastGaugeScreen >= NUM_GAUGE_SCREENS - 1)
   \   000001A4   1C1090E5           LDR      R1,[R0, #+28]
   1052          					sysData.lastGaugeScreen = NUM_GAUGE_SCREENS - 2;
   1053          
   1054          				// Be sure the screen we ended up on is not the TEST_INFO_SCREEN screen
   1055          				if (GaugeScreenIndexToID(GAUGES_SCREEN_TYPE, sysData.lastGaugeScreen) == TEST_INFO_SCREEN)
   \   000001A8   ........           LDR      R3,??DataTable157_3
   \   000001AC   050051E3           CMP      R1,#+5
   \   000001B0   0410A0A3           MOVGE    R1,#+4
   \   000001B4   1C1080A5           STRGE    R1,[R0, #+28]
   \   000001B8   1C1090E5           LDR      R1,[R0, #+28]
   \   000001BC   0120A0E1           MOV      R2,R1
   \   000001C0   060052E3           CMP      R2,#+6
   \   000001C4   0120A023           MOVCS    R2,#+1
   \   000001C8   822193E7           LDR      R2,[R3, +R2, LSL #+3]
   \   000001CC   090052E3           CMP      R2,#+9
   1056          					sysData.lastGaugeScreen -= 1;		// Rotate to the previous screen in the rotation
   \   000001D0   01104102           SUBEQ    R1,R1,#+1
   \   000001D4   1C108005           STREQ    R1,[R0, #+28]
   1057          														// Note this means the test mode screen CANNOT be the first
   1058          														// screen in the rotation!
   1059          			}
   1060          			return sysData.lastGaugeScreen;
   \                     ??GetLastScreen_23:
   \   000001D8   1C0090E5           LDR      R0,[R0, #+28]
   \   000001DC   1EFF2FE1           BX       LR
   1061          		case GEARING_SCREENS_TYPE:			return sysData.lastGearingScreen;
   \                     ??GetLastScreen_13:
   \   000001E0   ........           LDR      R0,??DataTable150
   \   000001E4   440090E5           LDR      R0,[R0, #+68]
   \   000001E8   1EFF2FE1           BX       LR
   1062          		case GEAR_RATIOS:					return sysData.lastGearRatioScreen;
   \                     ??GetLastScreen_17:
   \   000001EC   ........           LDR      R0,??DataTable150
   \   000001F0   480090E5           LDR      R0,[R0, #+72]
   \   000001F4   1EFF2FE1           BX       LR
   1063          		case SFSCREENS_TYPE:				return sysData.lastSFScreen;
   \                     ??GetLastScreen_18:
   \   000001F8   ........           LDR      R0,??DataTable150
   \   000001FC   4C0090E5           LDR      R0,[R0, #+76]
   \   00000200   1EFF2FE1           BX       LR
   1064          		case ANALOG_SETTINGS_SCREEN_TYPE:	return sysData.lastAnalogInputSettingsScreen;
   \                     ??GetLastScreen_14:
   \   00000204   ........           LDR      R0,??DataTable150
   \   00000208   500090E5           LDR      R0,[R0, #+80]
   \   0000020C   1EFF2FE1           BX       LR
   1065          		case ANALOG_INPUTS_SCALE:			return sysData.lastAnalogScaleScreen;
   \                     ??GetLastScreen_16:
   \   00000210   ........           LDR      R0,??DataTable150
   \   00000214   540090E5           LDR      R0,[R0, #+84]
   \   00000218   1EFF2FE1           BX       LR
   1066          		case DIGITAL_SETTINGS_SCREEN_TYPE:	return sysData.lastDigitalInputSettingsScreen;
   \                     ??GetLastScreen_15:
   \   0000021C   ........           LDR      R0,??DataTable150
   \   00000220   580090E5           LDR      R0,[R0, #+88]
   \   00000224   1EFF2FE1           BX       LR
   1067          		case TIRE_DIMENSIONS_SCREEN_TYPE:	return sysData.lastTireDimensionsScreen;
   \                     ??GetLastScreen_19:
   \   00000228   ........           LDR      R0,??DataTable150
   \   0000022C   5C0090E5           LDR      R0,[R0, #+92]
   \   00000230   1EFF2FE1           BX       LR
   1068          		case AERO_GRIP_SCREEN_TYPE:			return AERO_GRIP_SCREEN_TYPE;
   \                     ??GetLastScreen_20:
   \   00000234   2000A0E3           MOV      R0,#+32
   \   00000238   1EFF2FE1           BX       LR
   1069          		default:							return 0;
   \                     ??GetLastScreen_1:
   \   0000023C   0000A0E3           MOV      R0,#+0
   \   00000240   1EFF2FE1           BX       LR               ;; return
   1070          	}
   1071          }
   1072          

   \                                 In section .text, align 4, keep-with-next
   1073          int GetCurrentScreen(void)
   1074          {
   1075          	return GetLastScreen(GetScreenType());
   \                     GetCurrentScreen:
   \   00000000   ........           LDR      R0,??DataTable150
   \   00000004   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000008   ........           B        GetLastScreen    ;; tailcall
   1076          }
   1077          

   \                                 In section .text, align 4, keep-with-next
   1078          int GetNumScreens(enum SCREEN_TYPE screenType)
   1079          {
   1080          	switch (screenType)
   \                     GetNumScreens:
   \   00000000   010040E2           SUB      R0,R0,#+1
   \   00000004   140050E3           CMP      R0,#+20
   \   00000008   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetNumScreens_0:
   \   0000000C   2F00008A           BHI      ??GetNumScreens_1
   \   00000010   130000EA           B        ??GetNumScreens_2
   \   00000014   210000EA           B        ??GetNumScreens_3
   \   00000018   150000EA           B        ??GetNumScreens_4
   \   0000001C   190000EA           B        ??GetNumScreens_5
   \   00000020   0F0000EA           B        ??GetNumScreens_2
   \   00000024   100000EA           B        ??GetNumScreens_6
   \   00000028   1A0000EA           B        ??GetNumScreens_7
   \   0000002C   270000EA           B        ??GetNumScreens_1
   \   00000030   1E0000EA           B        ??GetNumScreens_8
   \   00000034   170000EA           B        ??GetNumScreens_7
   \   00000038   1E0000EA           B        ??GetNumScreens_9
   \   0000003C   230000EA           B        ??GetNumScreens_1
   \   00000040   070000EA           B        ??GetNumScreens_2
   \   00000044   060000EA           B        ??GetNumScreens_2
   \   00000048   050000EA           B        ??GetNumScreens_2
   \   0000004C   040000EA           B        ??GetNumScreens_2
   \   00000050   1E0000EA           B        ??GetNumScreens_1
   \   00000054   020000EA           B        ??GetNumScreens_2
   \   00000058   180000EA           B        ??GetNumScreens_10
   \   0000005C   1B0000EA           B        ??GetNumScreens_1
   \   00000060   180000EA           B        ??GetNumScreens_11
   1081          	{
   1082          		case CONFIG_SCREEN_TYPE:			return NUM_CONFIG_SCREENS;
   \                     ??GetNumScreens_2:
   \   00000064   0400A0E3           MOV      R0,#+4
   \   00000068   1EFF2FE1           BX       LR
   1083          		case RACE_SETUP_SCREENS_TYPE:		return NUM_RACE_SETUP_SCREENS;
   1084          		case SYSTEM_SETTINGS_SCREENS_TYPE:	return NUM_SYSTEM_SETTINGS_SCREENS;
   \                     ??GetNumScreens_6:
   \   0000006C   0700A0E3           MOV      R0,#+7
   \   00000070   1EFF2FE1           BX       LR
   1085          		case VEHICLE_SETTINGS_SCREENS_TYPE:	return NUM_VEHICLE_SETTINGS_SCREENS;
   1086          		case DRIVE_MODE_SCREEN_TYPE:
   1087          			if (testMode)
   \                     ??GetNumScreens_4:
   \   00000074   ........           LDR      R0,??DataTable157
   \   00000078   000090E5           LDR      R0,[R0, #+0]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0400000A           BEQ      ??GetNumScreens_7
   1088          				return NUM_DRIVE_SCREENS;
   \   00000084   F8FFFFEA           B        ??GetNumScreens_6
   1089          #if PROFILER
   1090          			else return NUM_DRIVE_SCREENS - 2;
   1091          #else
   1092          			else return NUM_DRIVE_SCREENS - 1;
   1093          #endif
   1094          		case INSTRUMENTS_MODE_SCREEN_TYPE:
   1095          			if (testMode)
   \                     ??GetNumScreens_5:
   \   00000088   ........           LDR      R0,??DataTable157
   \   0000008C   000090E5           LDR      R0,[R0, #+0]
   \   00000090   000050E3           CMP      R0,#+0
   \   00000094   F4FFFF1A           BNE      ??GetNumScreens_6
   1096          				return NUM_INSTRUMENTS_SCREENS;
   1097          #if PROFILER
   1098          			else return NUM_INSTRUMENTS_SCREENS - 2;
   1099          #else
   1100          			else return NUM_INSTRUMENTS_SCREENS - 1;
   \                     ??GetNumScreens_7:
   \   00000098   0600A0E3           MOV      R0,#+6
   \   0000009C   1EFF2FE1           BX       LR
   1101          #endif
   1102          		case GAUGES_SCREEN_TYPE:
   1103          			if (testMode)
   \                     ??GetNumScreens_3:
   \   000000A0   ........           LDR      R0,??DataTable157
   \   000000A4   000090E5           LDR      R0,[R0, #+0]
   \   000000A8   000050E3           CMP      R0,#+0
   \   000000AC   F9FFFF1A           BNE      ??GetNumScreens_7
   1104          				return NUM_GAUGE_SCREENS;
   1105          #if PROFILER
   1106          			else return NUM_GAUGE_SCREENS - 2;
   1107          #else
   1108          			else return NUM_GAUGE_SCREENS - 1;
   \                     ??GetNumScreens_8:
   \   000000B0   0500A0E3           MOV      R0,#+5
   \   000000B4   1EFF2FE1           BX       LR
   1109          #endif
   1110          		case TACH_SETUP_SCREENS_TYPE:		return NUM_TACH_SETUP_SCREENS;
   1111          		case INPUTS_SCREENS_TYPE:			return NUM_INPUTS_SCREENS;
   1112          		case REVIEW_SESSIONS_SCREENS_TYPE:	return NUM_REVIEW_SESSIONS_SCREENS;
   \                     ??GetNumScreens_9:
   \   000000B8   0200A0E3           MOV      R0,#+2
   \   000000BC   1EFF2FE1           BX       LR
   1113          		case TRACK_SETTINGS_SCREENS_TYPE:	return NUM_TRACK_SETTINGS_SCREENS;
   1114          		case GEARING_SCREENS_TYPE:			return NUM_GEARING_SCREENS;
   1115          		case GEAR_RATIOS:					return NUM_GEAR_RATIOS_SCREENS;
   \                     ??GetNumScreens_10:
   \   000000C0   0800A0E3           MOV      R0,#+8
   \   000000C4   1EFF2FE1           BX       LR
   1116          		case SFSCREENS_TYPE:				return NUM_SF_SCREENS;
   \                     ??GetNumScreens_11:
   \   000000C8   0900A0E3           MOV      R0,#+9
   \   000000CC   1EFF2FE1           BX       LR
   1117          		case ANALOG_SETTINGS_SCREEN_TYPE:	return NUM_ANALOG_INPUT_SCREENS;
   1118          		case ANALOG_INPUTS_SCALE:			return NUM_ANALOG_SCALE_SCREENS;
   1119          		case DIGITAL_SETTINGS_SCREEN_TYPE:	return NUM_DIGITAL_INPUT_SCREENS;
   1120          		default:							return 1;
   \                     ??GetNumScreens_1:
   \   000000D0   0100A0E3           MOV      R0,#+1
   \   000000D4   1EFF2FE1           BX       LR               ;; return
   1121          	}
   1122          }
   1123          

   \                                 In section .text, align 4, keep-with-next
   1124          void SetScreenType(enum SCREEN_TYPE screentype)
   1125          {
   1126          	sysData.screentype = screentype;
   \                     SetScreenType:
   \   00000000   ........           LDR      R1,??DataTable150
   \   00000004   1400C1E5           STRB     R0,[R1, #+20]
   1127          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1128          

   \                                 In section .text, align 4, keep-with-next
   1129          enum SCREEN_TYPE GetScreenType(void)
   1130          {
   1131          	return sysData.screentype;
   \                     GetScreenType:
   \   00000000   ........           LDR      R0,??DataTable150
   \   00000004   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1132          }
   1133          
   1134          

   \                                 In section .text, align 4, keep-with-next
   1135          int GetPrevIndex(void)
   1136          {
   \                     GetPrevIndex:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1137          int index;
   1138          	
   1139          	index = GetLastScreen(sysData.screentype);
   \   00000004   ........           LDR      R4,??DataTable150
   \   00000008   1400D4E5           LDRB     R0,[R4, #+20]
   \   0000000C   ........           BL       GetLastScreen
   1140          	if (--index < 0)
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   3700005A           BPL      ??GetPrevIndex_1
   1141          		index = GetNumScreens(sysData.screentype) - 1;
   \   00000018   1400D4E5           LDRB     R0,[R4, #+20]
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   140050E3           CMP      R0,#+20
   \   00000024   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetPrevIndex_0:
   \   00000028   3000008A           BHI      ??GetPrevIndex_2
   \   0000002C   2D0000EA           B        ??GetPrevIndex_3
   \   00000030   1C0000EA           B        ??GetPrevIndex_4
   \   00000034   260000EA           B        ??GetPrevIndex_5
   \   00000038   1F0000EA           B        ??GetPrevIndex_6
   \   0000003C   290000EA           B        ??GetPrevIndex_3
   \   00000040   210000EA           B        ??GetPrevIndex_7
   \   00000044   130000EA           B        ??GetPrevIndex_8
   \   00000048   280000EA           B        ??GetPrevIndex_2
   \   0000004C   130000EA           B        ??GetPrevIndex_9
   \   00000050   100000EA           B        ??GetPrevIndex_8
   \   00000054   0D0000EA           B        ??GetPrevIndex_10
   \   00000058   240000EA           B        ??GetPrevIndex_2
   \   0000005C   210000EA           B        ??GetPrevIndex_3
   \   00000060   200000EA           B        ??GetPrevIndex_3
   \   00000064   1F0000EA           B        ??GetPrevIndex_3
   \   00000068   1E0000EA           B        ??GetPrevIndex_3
   \   0000006C   1F0000EA           B        ??GetPrevIndex_2
   \   00000070   1C0000EA           B        ??GetPrevIndex_3
   \   00000074   030000EA           B        ??GetPrevIndex_11
   \   00000078   1C0000EA           B        ??GetPrevIndex_2
   \   0000007C   FFFFFFEA           B        ??GetPrevIndex_12
   \                     ??GetPrevIndex_12:
   \   00000080   0900A0E3           MOV      R0,#+9
   \   00000084   1A0000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_11:
   \   00000088   0800A0E3           MOV      R0,#+8
   \   0000008C   180000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_10:
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   160000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_8:
   \   00000098   0600A0E3           MOV      R0,#+6
   \   0000009C   140000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_9:
   \   000000A0   0500A0E3           MOV      R0,#+5
   \   000000A4   120000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_4:
   \   000000A8   ........           LDR      R0,??DataTable157
   \   000000AC   000090E5           LDR      R0,[R0, #+0]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   F9FFFF0A           BEQ      ??GetPrevIndex_9
   \   000000B8   F6FFFFEA           B        ??GetPrevIndex_8
   \                     ??GetPrevIndex_6:
   \   000000BC   ........           LDR      R0,??DataTable157
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   F2FFFF0A           BEQ      ??GetPrevIndex_8
   \                     ??GetPrevIndex_7:
   \   000000CC   0700A0E3           MOV      R0,#+7
   \   000000D0   070000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_5:
   \   000000D4   ........           LDR      R0,??DataTable157
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   ECFFFF0A           BEQ      ??GetPrevIndex_8
   \   000000E4   F8FFFFEA           B        ??GetPrevIndex_7
   \                     ??GetPrevIndex_3:
   \   000000E8   0400A0E3           MOV      R0,#+4
   \   000000EC   000000EA           B        ??GetPrevIndex_13
   \                     ??GetPrevIndex_2:
   \   000000F0   0100A0E3           MOV      R0,#+1
   \                     ??GetPrevIndex_13:
   \   000000F4   010040E2           SUB      R0,R0,#+1
   1142          	return index;
   \                     ??GetPrevIndex_1:
   \   000000F8   1080BDE8           POP      {R4,PC}          ;; return
   1143          }
   1144          

   \                                 In section .text, align 4, keep-with-next
   1145          int GetNextIndex(void)
   1146          {
   \                     GetNextIndex:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1147          int index;
   1148          
   1149          	index = GetLastScreen(sysData.screentype) + 1;
   \   00000004   ........           LDR      R4,??DataTable150
   \   00000008   1400D4E5           LDRB     R0,[R4, #+20]
   \   0000000C   ........           BL       GetLastScreen
   1150          	if (index > GetNumScreens(sysData.screentype) - 1)
   \   00000010   1410D4E5           LDRB     R1,[R4, #+20]
   \   00000014   010080E2           ADD      R0,R0,#+1
   \   00000018   011041E2           SUB      R1,R1,#+1
   \   0000001C   140051E3           CMP      R1,#+20
   \   00000020   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??GetNextIndex_0:
   \   00000024   3000008A           BHI      ??GetNextIndex_1
   \   00000028   2D0000EA           B        ??GetNextIndex_2
   \   0000002C   1C0000EA           B        ??GetNextIndex_3
   \   00000030   260000EA           B        ??GetNextIndex_4
   \   00000034   1F0000EA           B        ??GetNextIndex_5
   \   00000038   290000EA           B        ??GetNextIndex_2
   \   0000003C   210000EA           B        ??GetNextIndex_6
   \   00000040   130000EA           B        ??GetNextIndex_7
   \   00000044   280000EA           B        ??GetNextIndex_1
   \   00000048   130000EA           B        ??GetNextIndex_8
   \   0000004C   100000EA           B        ??GetNextIndex_7
   \   00000050   0D0000EA           B        ??GetNextIndex_9
   \   00000054   240000EA           B        ??GetNextIndex_1
   \   00000058   210000EA           B        ??GetNextIndex_2
   \   0000005C   200000EA           B        ??GetNextIndex_2
   \   00000060   1F0000EA           B        ??GetNextIndex_2
   \   00000064   1E0000EA           B        ??GetNextIndex_2
   \   00000068   1F0000EA           B        ??GetNextIndex_1
   \   0000006C   1C0000EA           B        ??GetNextIndex_2
   \   00000070   030000EA           B        ??GetNextIndex_10
   \   00000074   1C0000EA           B        ??GetNextIndex_1
   \   00000078   FFFFFFEA           B        ??GetNextIndex_11
   \                     ??GetNextIndex_11:
   \   0000007C   0910A0E3           MOV      R1,#+9
   \   00000080   1A0000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_10:
   \   00000084   0810A0E3           MOV      R1,#+8
   \   00000088   180000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_9:
   \   0000008C   0210A0E3           MOV      R1,#+2
   \   00000090   160000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_7:
   \   00000094   0610A0E3           MOV      R1,#+6
   \   00000098   140000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_8:
   \   0000009C   0510A0E3           MOV      R1,#+5
   \   000000A0   120000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_3:
   \   000000A4   ........           LDR      R1,??DataTable157
   \   000000A8   001091E5           LDR      R1,[R1, #+0]
   \   000000AC   000051E3           CMP      R1,#+0
   \   000000B0   F9FFFF0A           BEQ      ??GetNextIndex_8
   \   000000B4   F6FFFFEA           B        ??GetNextIndex_7
   \                     ??GetNextIndex_5:
   \   000000B8   ........           LDR      R1,??DataTable157
   \   000000BC   001091E5           LDR      R1,[R1, #+0]
   \   000000C0   000051E3           CMP      R1,#+0
   \   000000C4   F2FFFF0A           BEQ      ??GetNextIndex_7
   \                     ??GetNextIndex_6:
   \   000000C8   0710A0E3           MOV      R1,#+7
   \   000000CC   070000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_4:
   \   000000D0   ........           LDR      R1,??DataTable157
   \   000000D4   001091E5           LDR      R1,[R1, #+0]
   \   000000D8   000051E3           CMP      R1,#+0
   \   000000DC   ECFFFF0A           BEQ      ??GetNextIndex_7
   \   000000E0   F8FFFFEA           B        ??GetNextIndex_6
   \                     ??GetNextIndex_2:
   \   000000E4   0410A0E3           MOV      R1,#+4
   \   000000E8   000000EA           B        ??GetNextIndex_12
   \                     ??GetNextIndex_1:
   \   000000EC   0110A0E3           MOV      R1,#+1
   \                     ??GetNextIndex_12:
   \   000000F0   011041E2           SUB      R1,R1,#+1
   \   000000F4   000051E1           CMP      R1,R0
   1151          		index = 0;
   \   000000F8   0000A0B3           MOVLT    R0,#+0
   1152          	return index;
   \   000000FC   1080BDE8           POP      {R4,PC}          ;; return
   1153          }
   1154          

   \                                 In section .text, align 4, keep-with-next
   1155          void ValidateRaceScreens(void)
   1156          {
   1157          	int maxDriveScreens, maxInstrumentsScreens, maxGaugesScreens;
   1158          
   1159          	maxDriveScreens =  GetNumScreens(DRIVE_MODE_SCREEN_TYPE) - 1;
   \                     ValidateRaceScreens:
   \   00000000   ........           LDR      R0,??DataTable157
   1160          	maxInstrumentsScreens = GetNumScreens(INSTRUMENTS_MODE_SCREEN_TYPE) - 1;
   1161          	maxGaugesScreens = GetNumScreens(GAUGES_SCREEN_TYPE) - 1;
   1162          
   1163          	if (sysData.lastDriveScreen > maxDriveScreens)
   \   00000004   ........           LDR      R3,??DataTable150
   \   00000008   000090E5           LDR      R0,[R0, #+0]
   \   0000000C   20C093E5           LDR      R12,[R3, #+32]
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   0600A013           MOVNE    R0,#+6
   \   00000018   0500A003           MOVEQ    R0,#+5
   \   0000001C   0010A0E1           MOV      R1,R0
   \   00000020   012040E2           SUB      R2,R0,#+1
   \   00000024   0C0050E1           CMP      R0,R12
   \   00000028   0C00A0C1           MOVGT    R0,R12
   \   0000002C   200083E5           STR      R0,[R3, #+32]
   1164          		sysData.lastDriveScreen = maxDriveScreens;
   1165          	if (sysData.lastInstrumentsScreen > maxInstrumentsScreens)
   \   00000030   240093E5           LDR      R0,[R3, #+36]
   \   00000034   000051E1           CMP      R1,R0
   \   00000038   0010A0C1           MOVGT    R1,R0
   1166          		sysData.lastInstrumentsScreen = maxInstrumentsScreens;
   1167          	if (sysData.lastGaugeScreen > maxGaugesScreens)
   \   0000003C   1C0093E5           LDR      R0,[R3, #+28]
   \   00000040   241083E5           STR      R1,[R3, #+36]
   \   00000044   000052E1           CMP      R2,R0
   \   00000048   0020A0C1           MOVGT    R2,R0
   \   0000004C   1C2083E5           STR      R2,[R3, #+28]
   1168          		sysData.lastGaugeScreen = maxGaugesScreens;
   1169          }
   \   00000050   1EFF2FE1           BX       LR               ;; return
   1170          

   \                                 In section .text, align 4, keep-with-next
   1171          int GetNextGaugeScreen(void)
   1172          {
   \                     GetNextGaugeScreen:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1173          int index, limit;
   1174          
   1175          	index = GetLastScreen(sysData.screentype);
   \   00000004   ........           LDR      R5,??DataTable150
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1400D5E5           LDRB     R0,[R5, #+20]
   \   00000010   ........           BL       GetLastScreen
   \   00000014   0040A0E1           MOV      R4,R0
   1176          	limit = GetNumScreens(sysData.screentype) - 1;
   \   00000018   1400D5E5           LDRB     R0,[R5, #+20]
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   140050E3           CMP      R0,#+20
   \   00000024   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetNextGaugeScreen_0:
   \   00000028   3000008A           BHI      ??GetNextGaugeScreen_1
   \   0000002C   2D0000EA           B        ??GetNextGaugeScreen_2
   \   00000030   1C0000EA           B        ??GetNextGaugeScreen_3
   \   00000034   260000EA           B        ??GetNextGaugeScreen_4
   \   00000038   1F0000EA           B        ??GetNextGaugeScreen_5
   \   0000003C   290000EA           B        ??GetNextGaugeScreen_2
   \   00000040   210000EA           B        ??GetNextGaugeScreen_6
   \   00000044   130000EA           B        ??GetNextGaugeScreen_7
   \   00000048   280000EA           B        ??GetNextGaugeScreen_1
   \   0000004C   130000EA           B        ??GetNextGaugeScreen_8
   \   00000050   100000EA           B        ??GetNextGaugeScreen_7
   \   00000054   0D0000EA           B        ??GetNextGaugeScreen_9
   \   00000058   240000EA           B        ??GetNextGaugeScreen_1
   \   0000005C   210000EA           B        ??GetNextGaugeScreen_2
   \   00000060   200000EA           B        ??GetNextGaugeScreen_2
   \   00000064   1F0000EA           B        ??GetNextGaugeScreen_2
   \   00000068   1E0000EA           B        ??GetNextGaugeScreen_2
   \   0000006C   1F0000EA           B        ??GetNextGaugeScreen_1
   \   00000070   1C0000EA           B        ??GetNextGaugeScreen_2
   \   00000074   030000EA           B        ??GetNextGaugeScreen_10
   \   00000078   1C0000EA           B        ??GetNextGaugeScreen_1
   \   0000007C   FFFFFFEA           B        ??GetNextGaugeScreen_11
   \                     ??GetNextGaugeScreen_11:
   \   00000080   0900A0E3           MOV      R0,#+9
   \   00000084   1A0000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_10:
   \   00000088   0800A0E3           MOV      R0,#+8
   \   0000008C   180000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_9:
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   160000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_7:
   \   00000098   0600A0E3           MOV      R0,#+6
   \   0000009C   140000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_8:
   \   000000A0   0500A0E3           MOV      R0,#+5
   \   000000A4   120000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_3:
   \   000000A8   ........           LDR      R0,??DataTable157
   \   000000AC   000090E5           LDR      R0,[R0, #+0]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   F9FFFF0A           BEQ      ??GetNextGaugeScreen_8
   \   000000B8   F6FFFFEA           B        ??GetNextGaugeScreen_7
   \                     ??GetNextGaugeScreen_5:
   \   000000BC   ........           LDR      R0,??DataTable157
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   F2FFFF0A           BEQ      ??GetNextGaugeScreen_7
   \                     ??GetNextGaugeScreen_6:
   \   000000CC   0700A0E3           MOV      R0,#+7
   \   000000D0   070000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_4:
   \   000000D4   ........           LDR      R0,??DataTable157
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   ECFFFF0A           BEQ      ??GetNextGaugeScreen_7
   \   000000E4   F8FFFFEA           B        ??GetNextGaugeScreen_6
   \                     ??GetNextGaugeScreen_2:
   \   000000E8   0400A0E3           MOV      R0,#+4
   \   000000EC   000000EA           B        ??GetNextGaugeScreen_12
   \                     ??GetNextGaugeScreen_1:
   \   000000F0   0100A0E3           MOV      R0,#+1
   \                     ??GetNextGaugeScreen_12:
   \   000000F4   015040E2           SUB      R5,R0,#+1
   1177          
   1178          	do {
   1179          		if (++index > limit)
   \                     ??GetNextGaugeScreen_13:
   \   000000F8   014084E2           ADD      R4,R4,#+1
   \   000000FC   040055E1           CMP      R5,R4
   1180          			index = 0;
   \   00000100   0040A0B3           MOVLT    R4,#+0
   1181          	} while (InactiveGaugeScreen(index));	// If screen not 'active' get next screen
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   ........           BL       InactiveGaugeScreen
   \   0000010C   000050E3           CMP      R0,#+0
   \   00000110   F8FFFF1A           BNE      ??GetNextGaugeScreen_13
   1182          
   1183          	return index;
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   04D08DE2           ADD      SP,SP,#+4
   \   0000011C   3080BDE8           POP      {R4,R5,PC}       ;; return
   1184          }
   1185          

   \                                 In section .text, align 4, keep-with-next
   1186          int GetPrevGaugeScreen(void)
   1187          {
   \                     GetPrevGaugeScreen:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1188          int index, limit;
   1189          
   1190          	index = GetLastScreen(sysData.screentype);
   \   00000004   ........           LDR      R5,??DataTable150
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1400D5E5           LDRB     R0,[R5, #+20]
   \   00000010   ........           BL       GetLastScreen
   \   00000014   0040A0E1           MOV      R4,R0
   1191          	limit = GetNumScreens(sysData.screentype) - 1;
   \   00000018   1400D5E5           LDRB     R0,[R5, #+20]
   \   0000001C   010040E2           SUB      R0,R0,#+1
   \   00000020   140050E3           CMP      R0,#+20
   \   00000024   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GetPrevGaugeScreen_0:
   \   00000028   3000008A           BHI      ??GetPrevGaugeScreen_1
   \   0000002C   2D0000EA           B        ??GetPrevGaugeScreen_2
   \   00000030   1C0000EA           B        ??GetPrevGaugeScreen_3
   \   00000034   260000EA           B        ??GetPrevGaugeScreen_4
   \   00000038   1F0000EA           B        ??GetPrevGaugeScreen_5
   \   0000003C   290000EA           B        ??GetPrevGaugeScreen_2
   \   00000040   210000EA           B        ??GetPrevGaugeScreen_6
   \   00000044   130000EA           B        ??GetPrevGaugeScreen_7
   \   00000048   280000EA           B        ??GetPrevGaugeScreen_1
   \   0000004C   130000EA           B        ??GetPrevGaugeScreen_8
   \   00000050   100000EA           B        ??GetPrevGaugeScreen_7
   \   00000054   0D0000EA           B        ??GetPrevGaugeScreen_9
   \   00000058   240000EA           B        ??GetPrevGaugeScreen_1
   \   0000005C   210000EA           B        ??GetPrevGaugeScreen_2
   \   00000060   200000EA           B        ??GetPrevGaugeScreen_2
   \   00000064   1F0000EA           B        ??GetPrevGaugeScreen_2
   \   00000068   1E0000EA           B        ??GetPrevGaugeScreen_2
   \   0000006C   1F0000EA           B        ??GetPrevGaugeScreen_1
   \   00000070   1C0000EA           B        ??GetPrevGaugeScreen_2
   \   00000074   030000EA           B        ??GetPrevGaugeScreen_10
   \   00000078   1C0000EA           B        ??GetPrevGaugeScreen_1
   \   0000007C   FFFFFFEA           B        ??GetPrevGaugeScreen_11
   \                     ??GetPrevGaugeScreen_11:
   \   00000080   0900A0E3           MOV      R0,#+9
   \   00000084   1A0000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_10:
   \   00000088   0800A0E3           MOV      R0,#+8
   \   0000008C   180000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_9:
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   160000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_7:
   \   00000098   0600A0E3           MOV      R0,#+6
   \   0000009C   140000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_8:
   \   000000A0   0500A0E3           MOV      R0,#+5
   \   000000A4   120000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_3:
   \   000000A8   ........           LDR      R0,??DataTable157
   \   000000AC   000090E5           LDR      R0,[R0, #+0]
   \   000000B0   000050E3           CMP      R0,#+0
   \   000000B4   F9FFFF0A           BEQ      ??GetPrevGaugeScreen_8
   \   000000B8   F6FFFFEA           B        ??GetPrevGaugeScreen_7
   \                     ??GetPrevGaugeScreen_5:
   \   000000BC   ........           LDR      R0,??DataTable157
   \   000000C0   000090E5           LDR      R0,[R0, #+0]
   \   000000C4   000050E3           CMP      R0,#+0
   \   000000C8   F2FFFF0A           BEQ      ??GetPrevGaugeScreen_7
   \                     ??GetPrevGaugeScreen_6:
   \   000000CC   0700A0E3           MOV      R0,#+7
   \   000000D0   070000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_4:
   \   000000D4   ........           LDR      R0,??DataTable157
   \   000000D8   000090E5           LDR      R0,[R0, #+0]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   ECFFFF0A           BEQ      ??GetPrevGaugeScreen_7
   \   000000E4   F8FFFFEA           B        ??GetPrevGaugeScreen_6
   \                     ??GetPrevGaugeScreen_2:
   \   000000E8   0400A0E3           MOV      R0,#+4
   \   000000EC   000000EA           B        ??GetPrevGaugeScreen_12
   \                     ??GetPrevGaugeScreen_1:
   \   000000F0   0100A0E3           MOV      R0,#+1
   \                     ??GetPrevGaugeScreen_12:
   \   000000F4   015040E2           SUB      R5,R0,#+1
   1192          
   1193          	do {
   1194          		if (--index < 0)
   \                     ??GetPrevGaugeScreen_13:
   \   000000F8   014054E2           SUBS     R4,R4,#+1
   1195          			index = limit;
   \   000000FC   0540A041           MOVMI    R4,R5
   1196          	} while (InactiveGaugeScreen(index));	// If screen not 'active' get previous screen
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       InactiveGaugeScreen
   \   00000108   000050E3           CMP      R0,#+0
   \   0000010C   F9FFFF1A           BNE      ??GetPrevGaugeScreen_13
   1197          
   1198          	return index;
   \   00000110   0400A0E1           MOV      R0,R4
   \   00000114   04D08DE2           ADD      SP,SP,#+4
   \   00000118   3080BDE8           POP      {R4,R5,PC}       ;; return
   1199          }
   1200          
   1201          //
   1202          // Check to see if this screen is a valid gauge screen for this mode.
   1203          //		Screens will be invalid if it is an inactive display (ie gauges on screen are disabled)
   1204          //		or if it is a test mode screen and we are not in test mode.
   1205          // Return true if the screen is disabled
   1206          // Return false if the screen is active and can be displayed
   1207          //

   \                                 In section .text, align 4, keep-with-next
   1208          char InactiveGaugeScreen(int index)
   1209          {
   1210          	int screen;
   1211          
   1212          	screen = GaugeScreenIndexToID(sysData.screentype, index);
   \                     InactiveGaugeScreen:
   \   00000000   ........           LDR      R1,??DataTable150
   \   00000004   1410D1E5           LDRB     R1,[R1, #+20]
   \   00000008   020051E3           CMP      R1,#+2
   \   0000000C   0C00000A           BEQ      ??InactiveGaugeScreen_0
   \   00000010   2400003A           BCC      ??InactiveGaugeScreen_1
   \   00000014   040051E3           CMP      R1,#+4
   \   00000018   0100000A           BEQ      ??InactiveGaugeScreen_2
   \   0000001C   0400003A           BCC      ??InactiveGaugeScreen_3
   \   00000020   200000EA           B        ??InactiveGaugeScreen_1
   \                     ??InactiveGaugeScreen_2:
   \   00000024   070050E3           CMP      R0,#+7
   \   00000028   0100A023           MOVCS    R0,#+1
   \   0000002C   ........           LDR      R1,??DataTable157_2
   \   00000030   060000EA           B        ??InactiveGaugeScreen_4
   \                     ??InactiveGaugeScreen_3:
   \   00000034   070050E3           CMP      R0,#+7
   \   00000038   0200A023           MOVCS    R0,#+2
   \   0000003C   ........           LDR      R1,??DataTable157_1
   \   00000040   020000EA           B        ??InactiveGaugeScreen_4
   \                     ??InactiveGaugeScreen_0:
   \   00000044   060050E3           CMP      R0,#+6
   \   00000048   0100A023           MOVCS    R0,#+1
   \   0000004C   ........           LDR      R1,??DataTable157_3
   \                     ??InactiveGaugeScreen_4:
   \   00000050   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   1213          
   1214          	// Now all dual analog and linear gauge screens are just one, MULTI_ANALOG_GAUGES
   1215          	// See if any analog inputs enabled, if so then display the screen and then determine
   1216          	// which gauges to show when displaying
   1217          	if (screen == MULTI_ANALOG_GAUGES)
   \   00000054   040050E3           CMP      R0,#+4
   \   00000058   0C00001A           BNE      ??InactiveGaugeScreen_5
   1218          	{
   1219          		if (DetermineAnalogScreenSelection() == 0)
   \   0000005C   0000A0E3           MOV      R0,#+0
   \   00000060   ........           LDR      R1,??DataTable159
   \   00000064   0420A0E3           MOV      R2,#+4
   \                     ??InactiveGaugeScreen_6:
   \   00000068   9330D1E5           LDRB     R3,[R1, #+147]
   \   0000006C   401081E2           ADD      R1,R1,#+64
   \   00000070   000053E3           CMP      R3,#+0
   \   00000074   01008012           ADDNE    R0,R0,#+1
   \   00000078   012052E2           SUBS     R2,R2,#+1
   \   0000007C   F9FFFF1A           BNE      ??InactiveGaugeScreen_6
   \   00000080   000050E3           CMP      R0,#+0
   \   00000084   0700001A           BNE      ??InactiveGaugeScreen_1
   1220          			return true;
   \                     ??InactiveGaugeScreen_7:
   \   00000088   0100A0E3           MOV      R0,#+1
   \   0000008C   1EFF2FE1           BX       LR
   1221          		else return false;
   1222          	}
   1223          	if (screen == TEST_INFO_SCREEN)
   \                     ??InactiveGaugeScreen_5:
   \   00000090   090050E3           CMP      R0,#+9
   \   00000094   0300001A           BNE      ??InactiveGaugeScreen_1
   1224          	{
   1225          		if (testMode)
   \   00000098   ........           LDR      R0,??DataTable157
   \   0000009C   000090E5           LDR      R0,[R0, #+0]
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   F7FFFF0A           BEQ      ??InactiveGaugeScreen_7
   1226          			return false;	// screen allowed
   1227          		else return true;	// screen not allowed
   1228          	}
   1229          	else return false;
   \                     ??InactiveGaugeScreen_1:
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   1EFF2FE1           BX       LR               ;; return
   1230          }
   1231          

   \                                 In section .text, align 4, keep-with-next
   1232          int GaugeScreenIndexToID(enum SCREEN_TYPE screenType, int screenIndex)
   1233          {
   1234          	switch (screenType)
   \                     GaugeScreenIndexToID:
   \   00000000   020050E3           CMP      R0,#+2
   \   00000004   0400000A           BEQ      ??GaugeScreenIndexToID_0
   \   00000008   1000003A           BCC      ??GaugeScreenIndexToID_1
   \   0000000C   040050E3           CMP      R0,#+4
   \   00000010   0900000A           BEQ      ??GaugeScreenIndexToID_2
   \   00000014   0400003A           BCC      ??GaugeScreenIndexToID_3
   \   00000018   0C0000EA           B        ??GaugeScreenIndexToID_1
   1235          	{
   1236          	case GAUGES_SCREEN_TYPE:
   1237          		if ((screenIndex < 0) || (screenIndex >= NUM_GAUGE_SCREENS))
   \                     ??GaugeScreenIndexToID_0:
   \   0000001C   060051E3           CMP      R1,#+6
   1238          			screenIndex = DEFAULT_RACE_MODE_SCREEN_INDEX;
   \   00000020   0110A023           MOVCS    R1,#+1
   1239          		return GaugesScreenList[screenIndex].screenID;
   \   00000024   ........           LDR      R0,??DataTable157_3
   \   00000028   060000EA           B        ??GaugeScreenIndexToID_4
   1240          	case DRIVE_MODE_SCREEN_TYPE:
   1241          		if ((screenIndex < 0) || (screenIndex >= NUM_DRIVE_SCREENS))
   \                     ??GaugeScreenIndexToID_3:
   \   0000002C   070051E3           CMP      R1,#+7
   1242          			screenIndex = DEFAULT_DRIVE_MODE_SCREEN_INDEX;
   \   00000030   0210A023           MOVCS    R1,#+2
   1243          		return DriveScreenList[screenIndex].screenID;
   \   00000034   ........           LDR      R0,??DataTable157_1
   \   00000038   020000EA           B        ??GaugeScreenIndexToID_4
   1244          	case INSTRUMENTS_MODE_SCREEN_TYPE:
   1245          		if ((screenIndex < 0) || (screenIndex >= NUM_INSTRUMENTS_SCREENS))
   \                     ??GaugeScreenIndexToID_2:
   \   0000003C   070051E3           CMP      R1,#+7
   1246          			screenIndex = DEFAULT_INSTRUMENTS_MODE_SCREEN_INDEX;
   1247          		return InstrumentsScreenList[screenIndex].screenID;
   \   00000040   ........           LDR      R0,??DataTable157_2
   \   00000044   0110A023           MOVCS    R1,#+1
   \                     ??GaugeScreenIndexToID_4:
   \   00000048   810190E7           LDR      R0,[R0, +R1, LSL #+3]
   \   0000004C   1EFF2FE1           BX       LR
   1248          	default:
   1249          		return 0;
   \                     ??GaugeScreenIndexToID_1:
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   1EFF2FE1           BX       LR               ;; return
   1250          	}
   1251          }
   1252          
   1253          

   \                                 In section .text, align 4, keep-with-next
   1254          void _cbMainCallback(WM_MESSAGE * pMsg)
   1255          {
   \                     _cbMainCallback:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   1256          	int NCode, Id;
   1257          	int Sel;
   1258          
   1259          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   0CD04DE2           SUB      SP,SP,#+12
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   1000000A           BEQ      ??_cbMainCallback_1
   \   00000018   0E0050E2           SUBS     R0,R0,#+14
   \   0000001C   1200000A           BEQ      ??_cbMainCallback_2
   \   00000020   170050E2           SUBS     R0,R0,#+23
   \   00000024   2300000A           BEQ      ??_cbMainCallback_3
   \   00000028   ED0050E2           SUBS     R0,R0,#+237
   \   0000002C   5001001A           BNE      ??_cbMainCallback_4
   1260          	{
   1261          	case WM_TIMER:
   1262          		if (pMsg->Data.v == hScreenTimer)
   \   00000030   ........           LDR      R4,??DataTable151
   \   00000034   0C1095E5           LDR      R1,[R5, #+12]
   \   00000038   700094E5           LDR      R0,[R4, #+112]
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   4D01001A           BNE      ??_cbMainCallback_5
   1263          		{
   1264          			WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000044   7D10A0E3           MOV      R1,#+125
   \   00000048   ........           BL       WM_RestartTimer
   1265          			WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   0000004C   ........           LDR      R1,??DataTable159_1
   \   00000050   040095E5           LDR      R0,[R5, #+4]
   \   00000054   ........           BL       WM_InvalidateRect
   \   00000058   470100EA           B        ??_cbMainCallback_5
   1266          		}
   1267          		break;
   1268          
   1269          	case WM_CREATE:
   1270          		ConfigScreensIgnoreNextKeyRelease();
   \                     ??_cbMainCallback_1:
   \   0000005C   ........           LDR      R0,??DataTable151
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   8C1080E5           STR      R1,[R0, #+140]
   1271          		break;
   \   00000068   430100EA           B        ??_cbMainCallback_5
   1272          
   1273          	case WM_PAINT:
   1274          		if (GetScreenType() == CONFIG_SCREEN_TYPE)
   \                     ??_cbMainCallback_2:
   \   0000006C   ........           LDR      R0,??DataTable159_2
   \   00000070   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000074   010050E3           CMP      R0,#+1
   \   00000078   3F01001A           BNE      ??_cbMainCallback_5
   1275          		{
   1276          			GUI_SetColor(GUI_WHITE);
   \   0000007C   FF04E0E3           MVN      R0,#-16777216
   \   00000080   ........           BL       GUI_SetColor
   1277          			GUI_SetFont(&GUI_Font24_ASCII);
   \   00000084   ........           LDR      R0,??DataTable159_3
   \   00000088   ........           BL       GUI_SetFont
   1278          			// Call paint method of center screen
   1279          			ConfigScreenList[GetLastScreen(CONFIG_SCREEN_TYPE)].paint(hConfigScreen);
   \   0000008C   0100A0E3           MOV      R0,#+1
   \   00000090   ........           BL       GetLastScreen
   \   00000094   0010A0E1           MOV      R1,R0
   \   00000098   ........           LDR      R4,??DataTable151
   \   0000009C   0C20A0E3           MOV      R2,#+12
   \   000000A0   924121E0           MLA      R1,R2,R1,R4
   \   000000A4   800094E5           LDR      R0,[R4, #+128]
   \   000000A8   081091E5           LDR      R1,[R1, #+8]
   \   000000AC   31FF2FE1           BLX      R1
   1280          			DrawSignalStrength();
   \   000000B0   ........           BL       DrawSignalStrength
   \   000000B4   300100EA           B        ??_cbMainCallback_5
   1281          		}
   1282          		break;
   1283          
   1284          	case WM_NOTIFY_PARENT:
   1285          		Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??_cbMainCallback_3:
   \   000000B8   080095E5           LDR      R0,[R5, #+8]
   \   000000BC   ........           BL       WM_GetId
   1286          		NCode = pMsg->Data.v;				// Notification code
   1287          		switch (NCode)
   \   000000C0   0C1095E5           LDR      R1,[R5, #+12]
   \   000000C4   010051E3           CMP      R1,#+1
   \   000000C8   0300000A           BEQ      ??_cbMainCallback_6
   \   000000CC   2A01003A           BCC      ??_cbMainCallback_5
   \   000000D0   020051E3           CMP      R1,#+2
   \   000000D4   1700000A           BEQ      ??_cbMainCallback_7
   \   000000D8   270100EA           B        ??_cbMainCallback_5
   1288          		{
   1289          		case WM_NOTIFICATION_CLICKED:
   1290          			clickedOnThisScreen = true;
   \                     ??_cbMainCallback_6:
   \   000000DC   ........           LDR      R4,??DataTable151
   1291          			if (Id == REVIEW_SESSIONS_LIST)
   \   000000E0   800F50E3           CMP      R0,#+512
   \   000000E4   8C1084E5           STR      R1,[R4, #+140]
   \   000000E8   2301001A           BNE      ??_cbMainCallback_5
   1292          			{
   1293          				if (SessionNameData[0].date[0] != 0)				// Be sure there is session data before attempting to sort/select
   \   000000EC   ........           LDR      R0,??DataTable159_4
   \   000000F0   0A00D0E5           LDRB     R0,[R0, #+10]
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   1F01000A           BEQ      ??_cbMainCallback_5
   1294          				{
   1295          					selectedSessionSorted = LISTVIEW_GetSel(hListView);		// Get current sorted selection
   \   000000FC   A40094E5           LDR      R0,[R4, #+164]
   \   00000100   ........           BL       LISTVIEW_GetSel
   \   00000104   B00084E5           STR      R0,[R4, #+176]
   1296          					Sel = LISTVIEW_GetSelUnsorted(hListView);	// Get current selection
   \   00000108   A40094E5           LDR      R0,[R4, #+164]
   \   0000010C   ........           BL       LISTVIEW_GetSelUnsorted
   1297          					SetSessionSelection(Sel);
   \   00000110   741094E5           LDR      R1,[R4, #+116]
   \   00000114   000051E1           CMP      R1,R0
   \   00000118   0400000A           BEQ      ??_cbMainCallback_8
   \   0000011C   740084E5           STR      R0,[R4, #+116]
   \   00000120   ........           BL       GetSessionData
   \   00000124   ........           BL       SetBestTimeButtonText
   \   00000128   800094E5           LDR      R0,[R4, #+128]
   \   0000012C   ........           BL       WM_InvalidateWindow
   1298          					GetSessionName();
   \                     ??_cbMainCallback_8:
   \   00000130   ........           BL       GetSessionName
   \   00000134   100100EA           B        ??_cbMainCallback_5
   1299          				}
   1300          			}
   1301          			break;
   1302          
   1303          		case WM_NOTIFICATION_RELEASED:
   1304          			if (!clickedOnThisScreen)
   \                     ??_cbMainCallback_7:
   \   00000138   ........           LDR      R4,??DataTable151
   \   0000013C   8C1094E5           LDR      R1,[R4, #+140]
   \   00000140   000051E3           CMP      R1,#+0
   \   00000144   0C01000A           BEQ      ??_cbMainCallback_5
   1305          				break;
   1306          			switch (Id)
   \   00000148   010040E2           SUB      R0,R0,#+1
   \   0000014C   800E40E2           SUB      R0,R0,#+2048
   \   00000150   130050E3           CMP      R0,#+19
   \   00000154   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??_cbMainCallback_0:
   \   00000158   0701008A           BHI      ??_cbMainCallback_5
   \   0000015C   D00000EA           B        ??_cbMainCallback_9
   \   00000160   F90000EA           B        ??_cbMainCallback_10
   \   00000164   970000EA           B        ??_cbMainCallback_11
   \   00000168   630000EA           B        ??_cbMainCallback_12
   \   0000016C   7E0000EA           B        ??_cbMainCallback_13
   \   00000170   840000EA           B        ??_cbMainCallback_14
   \   00000174   350000EA           B        ??_cbMainCallback_15
   \   00000178   410000EA           B        ??_cbMainCallback_16
   \   0000017C   460000EA           B        ??_cbMainCallback_17
   \   00000180   4F0000EA           B        ??_cbMainCallback_18
   \   00000184   870000EA           B        ??_cbMainCallback_19
   \   00000188   070000EA           B        ??_cbMainCallback_20
   \   0000018C   0B0000EA           B        ??_cbMainCallback_21
   \   00000190   0D0000EA           B        ??_cbMainCallback_22
   \   00000194   100000EA           B        ??_cbMainCallback_23
   \   00000198   120000EA           B        ??_cbMainCallback_24
   \   0000019C   280000EA           B        ??_cbMainCallback_25
   \   000001A0   F50000EA           B        ??_cbMainCallback_5
   \   000001A4   BB0000EA           B        ??_cbMainCallback_26
   \   000001A8   300000EA           B        ??_cbMainCallback_27
   1307          			{
   1308          			case DISPLAY_BUTTON:
   1309          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, DISPLAY_SELECTION, hConfigScreen);
   \                     ??_cbMainCallback_20:
   \   000001AC   802094E5           LDR      R2,[R4, #+128]
   \   000001B0   0010A0E3           MOV      R1,#+0
   \                     ??_cbMainCallback_28:
   \   000001B4   0600A0E3           MOV      R0,#+6
   \                     ??_cbMainCallback_29:
   \   000001B8   ........           BL       DisplayNewScreenList
   1310          				break;
   \   000001BC   EE0000EA           B        ??_cbMainCallback_5
   1311          
   1312          			case UNITS_BUTTON:
   1313          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, UNITS_SELECTION, hConfigScreen);
   \                     ??_cbMainCallback_21:
   \   000001C0   802094E5           LDR      R2,[R4, #+128]
   \   000001C4   0110A0E3           MOV      R1,#+1
   \   000001C8   F9FFFFEA           B        ??_cbMainCallback_28
   1314          				break;
   1315          
   1316          			case TIME_BUTTON:
   1317          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, TIME_SELECTION, hConfigScreen);
   \                     ??_cbMainCallback_22:
   \   000001CC   802094E5           LDR      R2,[R4, #+128]
   \   000001D0   0210A0E3           MOV      R1,#+2
   \                     ??_cbMainCallback_30:
   \   000001D4   0600A0E3           MOV      R0,#+6
   \   000001D8   F6FFFFEA           B        ??_cbMainCallback_29
   1318          				break;
   1319          
   1320          			case AUTOSTART_BUTTON:
   1321          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, AUTOSTART_SELECTION, hConfigScreen);
   \                     ??_cbMainCallback_23:
   \   000001DC   802094E5           LDR      R2,[R4, #+128]
   \   000001E0   0310A0E3           MOV      R1,#+3
   \   000001E4   F2FFFFEA           B        ??_cbMainCallback_28
   1322          				break;
   1323          
   1324          			case STORAGE_BUTTON:
   1325          #ifdef _WINDOWS
   1326          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, STORAGE_SELECTION, hConfigScreen);
   1327          #else
   1328          				if (OkToUseSDCard())
   \                     ??_cbMainCallback_24:
   \   000001E8   ........           BL       OkToUseSDCard
   \   000001EC   000050E3           CMP      R0,#+0
   1329          					DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, STORAGE_SELECTION, hConfigScreen);
   \   000001F0   80209415           LDRNE    R2,[R4, #+128]
   \   000001F4   0410A013           MOVNE    R1,#+4
   \   000001F8   F5FFFF1A           BNE      ??_cbMainCallback_30
   1330          				else NotSupportedPopup(hConfigScreen);
   \   000001FC   805094E5           LDR      R5,[R4, #+128]
   \   00000200   0200A0E3           MOV      R0,#+2
   \   00000204   ........           BL       SetPopupDefaults
   \   00000208   ........           LDR      R4,??DataTable159_5
   \   0000020C   0100A0E3           MOV      R0,#+1
   \   00000210   000084E5           STR      R0,[R4, #+0]
   \   00000214   0A00A0E3           MOV      R0,#+10
   \   00000218   04008DE5           STR      R0,[SP, #+4]
   \   0000021C   00008DE5           STR      R0,[SP, #+0]
   \   00000220   0530A0E1           MOV      R3,R5
   \   00000224   ........           LDR      R2,??DataTable159_6
   \   00000228   0410A0E3           MOV      R1,#+4
   \   0000022C   ............       ADRL     R0,NotSupportedResources
   \              ....        
   \   00000234   ........           BL       GUI_ExecDialogBox
   \   00000238   0000A0E3           MOV      R0,#+0
   \   0000023C   000084E5           STR      R0,[R4, #+0]
   \   00000240   CD0000EA           B        ??_cbMainCallback_5
   1331          #endif
   1332          				break;
   1333          
   1334          			case PREDICTIVE_BUTTON:
   1335          				DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, LAP_METER, hConfigScreen);
   \                     ??_cbMainCallback_25:
   \   00000244   802094E5           LDR      R2,[R4, #+128]
   \   00000248   0510A0E3           MOV      R1,#+5
   \   0000024C   D8FFFFEA           B        ??_cbMainCallback_28
   1336          				break;
   1337          
   1338          			case ROADRACE_BUTTON:
   1339          				SaveRaceMode(ROADRACE_MODE);
   \                     ??_cbMainCallback_15:
   \   00000250   0000A0E3           MOV      R0,#+0
   \   00000254   C600C4E5           STRB     R0,[R4, #+198]
   \   00000258   ........           LDR      R0,??DataTable159_2
   \   0000025C   5210A0E3           MOV      R1,#+82
   \                     ??_cbMainCallback_31:
   \   00000260   D010C0E5           STRB     R1,[R0, #+208]
   1340          				GoRacingStateMachine(hConfigScreen);
   \                     ??_cbMainCallback_32:
   \   00000264   800094E5           LDR      R0,[R4, #+128]
   \   00000268   ........           BL       GoRacingStateMachine
   1341          				break;
   \   0000026C   C20000EA           B        ??_cbMainCallback_5
   1342          			case DRAG_BUTTON:
   1343          				SaveRaceMode(DRAG_MODE);
   \                     ??_cbMainCallback_27:
   \   00000270   0400A0E3           MOV      R0,#+4
   \   00000274   C600C4E5           STRB     R0,[R4, #+198]
   \   00000278   ........           LDR      R0,??DataTable159_2
   \   0000027C   5110A0E3           MOV      R1,#+81
   \   00000280   F6FFFFEA           B        ??_cbMainCallback_31
   1344          				GoRacingStateMachine(hConfigScreen);
   1345          				break;
   1346          			case AUTOXRALLY_BUTTON:
   1347          				SaveRaceMode(AUTOXRALLY_MODE);
   \                     ??_cbMainCallback_16:
   \   00000284   0100A0E3           MOV      R0,#+1
   \   00000288   C600C4E5           STRB     R0,[R4, #+198]
   \   0000028C   ........           LDR      R0,??DataTable159_2
   \   00000290   4110A0E3           MOV      R1,#+65
   \   00000294   D010C0E5           STRB     R1,[R0, #+208]
   1348          				GoRacingStateMachine(hConfigScreen);
   \   00000298   F1FFFFEA           B        ??_cbMainCallback_32
   1349          				break;
   1350          			case DRIVE_BUTTON:
   1351          				if (sysData.disableDriveRecordMode)
   \                     ??_cbMainCallback_17:
   \   0000029C   ........           LDR      R5,??DataTable159_2
   \   000002A0   D700D5E5           LDRB     R0,[R5, #+215]
   \   000002A4   000050E3           CMP      R0,#+0
   1352          					SaveRaceMode(INSTRUMENTS_MODE);
   \   000002A8   0200A013           MOVNE    R0,#+2
   \   000002AC   5210A013           MOVNE    R1,#+82
   1353          				else SaveRaceMode(DRIVE_MODE);
   \   000002B0   0300A003           MOVEQ    R0,#+3
   \   000002B4   4410A003           MOVEQ    R1,#+68
   \   000002B8   D010C5E5           STRB     R1,[R5, #+208]
   \   000002BC   C600C4E5           STRB     R0,[R4, #+198]
   1354          				GoRacingStateMachine(hConfigScreen);
   \   000002C0   E7FFFFEA           B        ??_cbMainCallback_32
   1355          				break;
   1356          			case RECORDMODE_BUTTON:
   1357          				if (sysData.disableDriveRecordMode)
   \                     ??_cbMainCallback_18:
   \   000002C4   ........           LDR      R5,??DataTable159_2
   \   000002C8   D700D5E5           LDRB     R0,[R5, #+215]
   \   000002CC   000050E3           CMP      R0,#+0
   1358          					sysData.disableDriveRecordMode = 0;
   \   000002D0   0000A013           MOVNE    R0,#+0
   1359          				else sysData.disableDriveRecordMode = 1;
   \   000002D4   0100A003           MOVEQ    R0,#+1
   \   000002D8   D700C5E5           STRB     R0,[R5, #+215]
   1360          				SetRecordModeGraphic();
   \   000002DC   D710D5E5           LDRB     R1,[R5, #+215]
   \   000002E0   A00094E5           LDR      R0,[R4, #+160]
   \   000002E4   000051E3           CMP      R1,#+0
   \   000002E8   ........           LDRNE    R2,??DataTable159_7
   \   000002EC   0010A013           MOVNE    R1,#+0
   \   000002F0   ........           LDREQ    R2,??DataTable159_8
   \   000002F4   ........           BL       BUTTON_SetBitmap
   \   000002F8   9F0000EA           B        ??_cbMainCallback_5
   1361          				break;
   1362          
   1363          			case DRIVER_BUTTON:
   1364          #ifdef _WINDOWS
   1365          				ctType = CT_NORMAL_MODE;
   1366          				SetWorkingTrackName();
   1367          				DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, DRIVER_SELECTION, hConfigScreen);
   1368          #else
   1369          				if (OkToUseSDCard())
   \                     ??_cbMainCallback_12:
   \   000002FC   0050A0E3           MOV      R5,#+0
   \   00000300   ........           BL       OkToUseSDCard
   \   00000304   000050E3           CMP      R0,#+0
   \   00000308   0600000A           BEQ      ??_cbMainCallback_33
   1370          				{
   1371          					ctType = CT_NORMAL_MODE;
   \   0000030C   ........           LDR      R0,??DataTable159_9
   \   00000310   0050C0E5           STRB     R5,[R0, #+0]
   1372          					SetWorkingTrackName();
   \   00000314   ........           BL       SetWorkingTrackName
   1373          					DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, DRIVER_SELECTION, hConfigScreen);
   \   00000318   802094E5           LDR      R2,[R4, #+128]
   \   0000031C   0010A0E3           MOV      R1,#+0
   \                     ??_cbMainCallback_34:
   \   00000320   0500A0E3           MOV      R0,#+5
   \   00000324   A3FFFFEA           B        ??_cbMainCallback_29
   1374          				}
   1375          				else NotSupportedPopup(hConfigScreen);
   \                     ??_cbMainCallback_33:
   \   00000328   806094E5           LDR      R6,[R4, #+128]
   \   0000032C   0200A0E3           MOV      R0,#+2
   \   00000330   ........           BL       SetPopupDefaults
   \   00000334   ........           LDR      R4,??DataTable159_5
   \   00000338   0100A0E3           MOV      R0,#+1
   \   0000033C   000084E5           STR      R0,[R4, #+0]
   \   00000340   0A00A0E3           MOV      R0,#+10
   \   00000344   04008DE5           STR      R0,[SP, #+4]
   \   00000348   00008DE5           STR      R0,[SP, #+0]
   \   0000034C   0630A0E1           MOV      R3,R6
   \   00000350   ........           LDR      R2,??DataTable159_6
   \   00000354   0410A0E3           MOV      R1,#+4
   \   00000358   ............       ADRL     R0,NotSupportedResources
   \              ....        
   \   00000360   ........           BL       GUI_ExecDialogBox
   \   00000364   005084E5           STR      R5,[R4, #+0]
   \   00000368   830000EA           B        ??_cbMainCallback_5
   1376          #endif
   1377          				break;
   1378          
   1379          			case VEHICLE_BUTTON:
   1380          #ifdef _WINDOWS
   1381          				ctType = CT_NORMAL_MODE;
   1382          				SetWorkingTrackName();
   1383          				DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, VEHICLE_SELECTION, hConfigScreen);
   1384          #else
   1385          				ctType = CT_NORMAL_MODE;
   \                     ??_cbMainCallback_13:
   \   0000036C   ........           LDR      R0,??DataTable159_9
   \   00000370   0010A0E3           MOV      R1,#+0
   \   00000374   0010C0E5           STRB     R1,[R0, #+0]
   1386          				SetWorkingTrackName();
   \   00000378   ........           BL       SetWorkingTrackName
   1387          				DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, VEHICLE_SELECTION, hConfigScreen);
   \   0000037C   802094E5           LDR      R2,[R4, #+128]
   \   00000380   0110A0E3           MOV      R1,#+1
   \   00000384   E5FFFFEA           B        ??_cbMainCallback_34
   1388          #endif
   1389          				break;
   1390          
   1391          			case TRACK_BUTTON:
   1392          				ctType = CT_NORMAL_MODE;
   \                     ??_cbMainCallback_14:
   \   00000388   ........           LDR      R0,??DataTable159_9
   \   0000038C   0010A0E3           MOV      R1,#+0
   \   00000390   0010C0E5           STRB     R1,[R0, #+0]
   1393          				SetWorkingTrackName();
   \   00000394   ........           BL       SetWorkingTrackName
   1394          				DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, TRACK_SELECTION, hConfigScreen);
   \   00000398   802094E5           LDR      R2,[R4, #+128]
   \   0000039C   0210A0E3           MOV      R1,#+2
   \   000003A0   0500A0E3           MOV      R0,#+5
   \   000003A4   83FFFFEA           B        ??_cbMainCallback_29
   1395          				break;
   1396          
   1397          			case LAPSQUALIFYING_BUTTON:
   1398          				ctType = CT_NORMAL_MODE;
   \                     ??_cbMainCallback_19:
   \   000003A8   ........           LDR      R0,??DataTable159_9
   \   000003AC   0010A0E3           MOV      R1,#+0
   \   000003B0   0010C0E5           STRB     R1,[R0, #+0]
   1399          				SetWorkingTrackName();
   \   000003B4   ........           BL       SetWorkingTrackName
   1400          				DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, LAPSQUALIFYING_SELECTION, hConfigScreen);
   \   000003B8   802094E5           LDR      R2,[R4, #+128]
   \   000003BC   0310A0E3           MOV      R1,#+3
   \   000003C0   0500A0E3           MOV      R0,#+5
   \   000003C4   7BFFFFEA           B        ??_cbMainCallback_29
   1401          				break;
   1402          
   1403          			case SESSION_TYPE_BTN:
   1404          				{
   1405          					WM_HWIN hDialog;
   1406          					int endTime;
   1407          
   1408          					hDialog = SystemSettingsPopUp(LOADING_SESSIONS, hConfigScreen);
   \                     ??_cbMainCallback_11:
   \   000003C8   801094E5           LDR      R1,[R4, #+128]
   \   000003CC   0E00A0E3           MOV      R0,#+14
   \   000003D0   ........           BL       SystemSettingsPopUp
   \   000003D4   0060A0E1           MOV      R6,R0
   1409          					endTime = GUI_GetTime() + 500;
   \   000003D8   ........           BL       GUI_GetTime
   \   000003DC   7D7F80E2           ADD      R7,R0,#+500
   1410          					GUI_Exec();
   \   000003E0   ........           BL       GUI_Exec
   1411          
   1412          					IncrementSessionType();
   \   000003E4   ........           LDR      R5,??DataTable159_2
   \   000003E8   D000D5E5           LDRB     R0,[R5, #+208]
   \   000003EC   410050E2           SUBS     R0,R0,#+65
   \   000003F0   0400000A           BEQ      ??_cbMainCallback_35
   \   000003F4   030050E2           SUBS     R0,R0,#+3
   \   000003F8   0400000A           BEQ      ??_cbMainCallback_36
   \   000003FC   0E0050E2           SUBS     R0,R0,#+14
   \   00000400   0400000A           BEQ      ??_cbMainCallback_37
   \   00000404   050000EA           B        ??_cbMainCallback_38
   \                     ??_cbMainCallback_35:
   \   00000408   5100A0E3           MOV      R0,#+81
   \   0000040C   040000EA           B        ??_cbMainCallback_39
   \                     ??_cbMainCallback_36:
   \   00000410   4100A0E3           MOV      R0,#+65
   \   00000414   020000EA           B        ??_cbMainCallback_39
   \                     ??_cbMainCallback_37:
   \   00000418   4400A0E3           MOV      R0,#+68
   \   0000041C   000000EA           B        ??_cbMainCallback_39
   \                     ??_cbMainCallback_38:
   \   00000420   5200A0E3           MOV      R0,#+82
   \                     ??_cbMainCallback_39:
   \   00000424   D000C5E5           STRB     R0,[R5, #+208]
   1413          
   1414          					UpdateSessionListView(hDialog, true);
   \   00000428   0400A0E3           MOV      R0,#+4
   \   0000042C   ........           BL       CreateFileList
   \   00000430   000050E3           CMP      R0,#+0
   \   00000434   0800000A           BEQ      ??_cbMainCallback_40
   \   00000438   D000D5E5           LDRB     R0,[R5, #+208]
   \   0000043C   ........           BL       FindNewestFile
   \   00000440   740084E5           STR      R0,[R4, #+116]
   \   00000444   D020D5E5           LDRB     R2,[R5, #+208]
   \   00000448   0010A0E3           MOV      R1,#+0
   \   0000044C   0600A0E1           MOV      R0,R6
   \   00000450   ........           BL       GetSessionNameData
   \   00000454   ........           BL       GetSessionData
   \   00000458   020000EA           B        ??_cbMainCallback_41
   \                     ??_cbMainCallback_40:
   \   0000045C   0000E0E3           MVN      R0,#+0
   \   00000460   740084E5           STR      R0,[R4, #+116]
   \   00000464   ........           BL       ClearSessionNameData
   \                     ??_cbMainCallback_41:
   \   00000468   740094E5           LDR      R0,[R4, #+116]
   \   0000046C   ........           BL       PopulateSessionLISTVIEW
   \   00000470   0040A0E1           MOV      R4,R0
   \   00000474   ........           BL       SetBestTimeButtonText
   \   00000478   0400A0E1           MOV      R0,R4
   \   0000047C   ........           BL       SetButtonColors
   1415          
   1416          					while (endTime > GUI_GetTime())			// Wait so the popup is displayed for at least 1/2 second
   \                     ??_cbMainCallback_42:
   \   00000480   ........           BL       GUI_GetTime
   \   00000484   070050E1           CMP      R0,R7
   \   00000488   FCFFFFBA           BLT      ??_cbMainCallback_42
   1417          						;									// so it doesn't flicker
   1418          					WM_DeleteWindow(hDialog);
   \   0000048C   0600A0E1           MOV      R0,R6
   \   00000490   ........           BL       WM_DeleteWindow
   1419          				}
   1420          				break;
   \   00000494   380000EA           B        ??_cbMainCallback_5
   1421          
   1422          			case BEST_LAP_BTN:
   1423          				IncrementDisplayType();
   \                     ??_cbMainCallback_26:
   \   00000498   ........           BL       IncrementDisplayType
   1424          				SetBestTimeButtonText();
   \   0000049C   ........           BL       SetBestTimeButtonText
   1425          				break;
   \   000004A0   350000EA           B        ??_cbMainCallback_5
   1426          
   1427          			case DELETE_SESSION_BTN:
   1428          				if (numSessions > 0)
   \                     ??_cbMainCallback_9:
   \   000004A4   7C0094E5           LDR      R0,[R4, #+124]
   \   000004A8   010050E3           CMP      R0,#+1
   \   000004AC   320000BA           BLT      ??_cbMainCallback_5
   1429          				{
   1430          					char *pName;
   1431          
   1432          					pName = GetSessionName();
   \   000004B0   ........           BL       GetSessionName
   1433          					if (strcmp(pName, ""))
   \   000004B4   ........           ADR      R1,??DataTable157_4  ;; ""
   \   000004B8   ........           BL       strcmp
   \   000004BC   000050E3           CMP      R0,#+0
   \   000004C0   2D00000A           BEQ      ??_cbMainCallback_5
   1434          					{
   1435          						if (SystemSettingsPopUp(DELETE_SESSION, hConfigScreen))
   \   000004C4   801094E5           LDR      R1,[R4, #+128]
   \   000004C8   0700A0E3           MOV      R0,#+7
   \   000004CC   ........           BL       SystemSettingsPopUp
   \   000004D0   000050E3           CMP      R0,#+0
   \   000004D4   2800000A           BEQ      ??_cbMainCallback_5
   1436          						{
   1437          							// Get current sorted position in list
   1438          							// Delete the current selection
   1439          							// Repopulate the list with the old session gone
   1440          							// Select the session that falls into the same sorted position as the deleted session
   1441          
   1442          							int i;
   1443          
   1444          							reviewingSession = true;
   \   000004D8   0100A0E3           MOV      R0,#+1
   \   000004DC   CA00C4E5           STRB     R0,[R4, #+202]
   1445          							DeleteSession();
   \   000004E0   ........           BL       DeleteSession
   1446          
   1447          							CreateFileList(SESSION_DATA);	// Get best lap information out of session files
   \   000004E4   0400A0E3           MOV      R0,#+4
   \   000004E8   ........           BL       CreateFileList
   1448          
   1449          							// Call GetSessionNameData with NO parent - don't bother to tell user (potentially again) that there are too many sessions
   1450          							GetSessionNameData(0, 1, (enum SESSION_TYPE)sysData.selectedSessionType);	// Populate SessionNameData table with ALL sessions of this type
   \   000004EC   ........           LDR      R0,??DataTable159_2
   \   000004F0   0110A0E3           MOV      R1,#+1
   \   000004F4   D020D0E5           LDRB     R2,[R0, #+208]
   \   000004F8   0000A0E3           MOV      R0,#+0
   \   000004FC   ........           BL       GetSessionNameData
   1451          							i = PopulateSessionLISTVIEW(-1);
   \   00000500   0000E0E3           MVN      R0,#+0
   \   00000504   ........           BL       PopulateSessionLISTVIEW
   \   00000508   0050A0E1           MOV      R5,R0
   1452          
   1453          							GUI_Exec();		// Let something/someone run to allow the list to reflect new contents
   \   0000050C   ........           BL       GUI_Exec
   1454          							LISTVIEW_SetSel(hListView, selectedSessionSorted);			// Selected the session in this position in the SORTED list after the deleted file has been removed
   \   00000510   B01094E5           LDR      R1,[R4, #+176]
   \   00000514   A40094E5           LDR      R0,[R4, #+164]
   \   00000518   ........           BL       LISTVIEW_SetSel
   1455          							LISTVIEW_SetBkColor(hListView, LISTVIEW_CI_SELFOCUS, GUI_LISTBLUE);
   \   0000051C   ........           LDR      R2,??DataTable159_10  ;; 0xff5480
   \   00000520   0210A0E3           MOV      R1,#+2
   \   00000524   A40094E5           LDR      R0,[R4, #+164]
   \   00000528   ........           BL       LISTVIEW_SetBkColor
   1456          							selectedSessionUnsorted = LISTVIEW_GetSelUnsorted(hListView);	// Get new unsorted position
   \   0000052C   A40094E5           LDR      R0,[R4, #+164]
   \   00000530   ........           BL       LISTVIEW_GetSelUnsorted
   \   00000534   740084E5           STR      R0,[R4, #+116]
   1457          
   1458          				//			BUTTON_SetText(hSelectedReviewMode, GetSelectedReviewModeText());
   1459          							GetSessionData();
   \   00000538   ........           BL       GetSessionData
   1460          							SetBestTimeButtonText();
   \   0000053C   ........           BL       SetBestTimeButtonText
   1461          							SetButtonColors(i);
   \   00000540   0500A0E1           MOV      R0,R5
   \   00000544   ........           BL       SetButtonColors
   \   00000548   0B0000EA           B        ??_cbMainCallback_5
   1462          						}
   1463          					}
   1464          				}
   1465          				break;
   1466          
   1467          			case CHECK_TIMES_BTN:
   1468          				if (numSessions > 0)
   \                     ??_cbMainCallback_10:
   \   0000054C   7C0094E5           LDR      R0,[R4, #+124]
   \   00000550   010050E3           CMP      R0,#+1
   \   00000554   080000BA           BLT      ??_cbMainCallback_5
   1469          				{
   1470          					// In order to preserve session tables selection setting do not delete the old window, just
   1471          					// create a new one for the details button and come back to this when we're done.
   1472          					DisplaySessionDetailsScreen();
   \   00000558   ........           BL       DisplaySessionDetailsScreen
   1473          
   1474          					reviewingSession = true;
   \   0000055C   0100A0E3           MOV      R0,#+1
   \   00000560   CA00C4E5           STRB     R0,[R4, #+202]
   1475          					sysData.navigatedToReviewAfterRace = false;		// Mark that we DID NOT get to the session details by ending a race
   \   00000564   ........           LDR      R0,??DataTable159_2
   \   00000568   0010A0E3           MOV      R1,#+0
   \   0000056C   E410C0E5           STRB     R1,[R0, #+228]
   \   00000570   010000EA           B        ??_cbMainCallback_5
   1476          				}
   1477          				break;
   1478          			}	// End switch (Id)
   1479          			break;
   1480          		}
   1481          		break;	// End case for WM_NOTIFY_PARENT
   1482          
   1483          	default:
   1484          			WM_DefaultProc(pMsg);
   \                     ??_cbMainCallback_4:
   \   00000574   0500A0E1           MOV      R0,R5
   \   00000578   ........           BL       WM_DefaultProc
   1485          	}
   1486          }
   \                     ??_cbMainCallback_5:
   \   0000057C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000580   F080BDE8           POP      {R4-R7,PC}       ;; return
   1487          

   \                                 In section .text, align 4, keep-with-next
   1488          void UpdateSessionListView(WM_HWIN hParent, char updateSelectedSession)
   1489          {
   \                     UpdateSessionListView:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   1490          	int i;
   1491          
   1492          	if ((i = CreateFileList(SESSION_DATA)) != 0)		// Get best lap information out of session files
   \   0000000C   0400A0E3           MOV      R0,#+4
   \   00000010   ........           BL       CreateFileList
   \   00000014   000050E3           CMP      R0,#+0
   \   00000018   0C00000A           BEQ      ??UpdateSessionListView_0
   1493          	{
   1494          		if (updateSelectedSession)
   \   0000001C   ........           LDR      R6,??DataTable159_2
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0300000A           BEQ      ??UpdateSessionListView_1
   1495          			selectedSessionUnsorted = FindNewestFile((enum SESSION_TYPE)sysData.selectedSessionType);
   \   00000028   D000D6E5           LDRB     R0,[R6, #+208]
   \   0000002C   ........           BL       FindNewestFile
   \   00000030   ........           LDR      R1,??DataTable159_11
   \   00000034   740081E5           STR      R0,[R1, #+116]
   1496          
   1497          		GetSessionNameData(hParent, 0, (enum SESSION_TYPE)sysData.selectedSessionType);
   \                     ??UpdateSessionListView_1:
   \   00000038   D020D6E5           LDRB     R2,[R6, #+208]
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       GetSessionNameData
   1498          		GetSessionData();
   \   00000048   ........           BL       GetSessionData
   \   0000004C   030000EA           B        ??UpdateSessionListView_2
   1499          	}
   1500          	else
   1501          	{
   1502          		selectedSessionUnsorted = -1;
   \                     ??UpdateSessionListView_0:
   \   00000050   ........           LDR      R0,??DataTable159_11
   \   00000054   0010E0E3           MVN      R1,#+0
   \   00000058   741080E5           STR      R1,[R0, #+116]
   1503          		ClearSessionNameData();
   \   0000005C   ........           BL       ClearSessionNameData
   1504          	}
   1505          	
   1506          	i = PopulateSessionLISTVIEW(selectedSessionUnsorted);
   \                     ??UpdateSessionListView_2:
   \   00000060   ........           LDR      R0,??DataTable159_11
   \   00000064   740090E5           LDR      R0,[R0, #+116]
   \   00000068   ........           BL       PopulateSessionLISTVIEW
   \   0000006C   0040A0E1           MOV      R4,R0
   1507          	SetBestTimeButtonText();
   \   00000070   ........           BL       SetBestTimeButtonText
   1508          	SetButtonColors(i);
   \   00000074   0400A0E1           MOV      R0,R4
   \   00000078   7040BDE8           POP      {R4-R6,LR}
   \   0000007C   ........           B        SetButtonColors  ;; tailcall
   1509          }
   1510          
   1511          

   \                                 In section .text, align 4, keep-with-next
   1512          void IncrementSessionType(void)
   1513          {
   1514          	switch (sysData.selectedSessionType)
   \                     IncrementSessionType:
   \   00000000   ........           LDR      R0,??DataTable160
   \   00000004   D010D0E5           LDRB     R1,[R0, #+208]
   \   00000008   411051E2           SUBS     R1,R1,#+65
   \   0000000C   0700000A           BEQ      ??IncrementSessionType_0
   \   00000010   031051E2           SUBS     R1,R1,#+3
   \   00000014   0300000A           BEQ      ??IncrementSessionType_1
   \   00000018   0E1051E2           SUBS     R1,R1,#+14
   1515          	{
   1516          	case ROADRACE_TYPE:		sysData.selectedSessionType = DRIVE_TYPE;		break;
   \   0000001C   4410A003           MOVEQ    R1,#+68
   \   00000020   5210A013           MOVNE    R1,#+82
   \   00000024   020000EA           B        ??IncrementSessionType_2
   1517          	case DRIVE_TYPE:		sysData.selectedSessionType = AUTOCROSS_TYPE;	break;
   \                     ??IncrementSessionType_1:
   \   00000028   4110A0E3           MOV      R1,#+65
   \   0000002C   000000EA           B        ??IncrementSessionType_2
   1518          	case AUTOCROSS_TYPE:	sysData.selectedSessionType = QUARTERMILE_TYPE;	break;
   \                     ??IncrementSessionType_0:
   \   00000030   5110A0E3           MOV      R1,#+81
   1519          	//case QUARTERMILE_TYPE:	sysData.selectedSessionType = HILLCLIMB_TYPE;	break;
   1520          	//case EIGHTHMILE_TYPE:		sysData.selectedSessionType = HILLCLIMB_TYPE;	break;
   1521          	//case THOUSANDFOOT_TYPE:	sysData.selectedSessionType = HILLCLIMB_TYPE;	break;
   1522          	//case HILLCLIMB_TYPE:		sysData.selectedSessionType = ROADRACE_TYPE;	break;
   1523          	//case NOT_VALID:			sysData.selectedSessionType = ROADRACE_TYPE;	break;
   1524          	default:				sysData.selectedSessionType = ROADRACE_TYPE;	break;
   \                     ??IncrementSessionType_2:
   \   00000034   D010C0E5           STRB     R1,[R0, #+208]
   1525          	}
   1526          }
   \   00000038   1EFF2FE1           BX       LR               ;; return
   1527          

   \                                 In section .text, align 4, keep-with-next
   1528          void SetSessionSelection(int sel)
   1529          {
   \                     SetSessionSelection:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1530          	if (selectedSessionUnsorted != sel)
   \   00000004   ........           LDR      R4,??DataTable159_11
   \   00000008   741094E5           LDR      R1,[R4, #+116]
   \   0000000C   000051E1           CMP      R1,R0
   \   00000010   0400000A           BEQ      ??SetSessionSelection_0
   1531          	{
   1532          		selectedSessionUnsorted = sel;
   \   00000014   740084E5           STR      R0,[R4, #+116]
   1533          		GetSessionData();
   \   00000018   ........           BL       GetSessionData
   1534          		SetBestTimeButtonText();
   \   0000001C   ........           BL       SetBestTimeButtonText
   1535          		WM_InvalidateWindow(hConfigScreen);	// This seems to be needed on target HW to get the driver name and time to be displayed (but it is not required on the PC!).
   \   00000020   800094E5           LDR      R0,[R4, #+128]
   \   00000024   ........           BL       WM_InvalidateWindow
   1536          	}
   1537          }
   \                     ??SetSessionSelection_0:
   \   00000028   1080BDE8           POP      {R4,PC}          ;; return
   1538          

   \                                 In section .text, align 4, keep-with-next
   1539          void StartPressed(WM_HWIN hLastScreen)
   1540          {
   \                     StartPressed:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1541          	GaugeScreensIgnoreNextKeyRelease();
   \   00000008   ........           LDR      R5,??DataTable159_11
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   C800C5E5           STRB     R0,[R5, #+200]
   1542          	notifyStartSet();
   \   00000018   ........           BL       notifyStartSet
   1543          	raceModeState = RM_HAVE_SF;
   \   0000001C   0800A0E3           MOV      R0,#+8
   \   00000020   C500C5E5           STRB     R0,[R5, #+197]
   1544          	GoRacingStateMachine(hLastScreen);
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   3040BDE8           POP      {R4,R5,LR}
   \   00000030   ........           B        GoRacingStateMachine  ;; tailcall
   1545          }
   1546          

   \                                 In section .text, align 4, keep-with-next
   1547          void FinishPressed(void)
   1548          {
   1549          #ifdef _WINDOWS
   1550          	SetUserMode(DU2_AUTOX_COMPLETE);
   1551          #endif
   1552          	notifyFinishSet();
   \                     FinishPressed:
   \   00000000   ........           B        notifyFinishSet  ;; tailcall
   1553          }
   1554          
   1555          

   \                                 In section .text, align 4, keep-with-next
   1556          WM_HWIN GetConfigWindowHandle(void)
   1557          {
   1558          	return hConfigScreen;
   \                     GetConfigWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable159_11
   \   00000004   800090E5           LDR      R0,[R0, #+128]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1559          }
   1560          

   \                                 In section .text, align 4, keep-with-next
   1561          void SetConfigWindowHandle(WM_HWIN hWin)
   1562          {
   1563          	hConfigScreen = hWin;
   \                     SetConfigWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable159_11
   \   00000004   800081E5           STR      R0,[R1, #+128]
   1564          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1565          
   1566          //
   1567          // Save any data necessary and kill any keyboards, if required, before leaving previous screen
   1568          //	Note: saves sysData every time to save the screen transitions
   1569          // Returns: true if okay to transition to next screen
   1570          //			false if an error was detected with the data and we need to stay where we are
   1571          //

   \                                 In section .text, align 4, keep-with-next
   1572          int ProcessScreenExit(void)
   1573          {
   \                     ProcessScreenExit:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   1574          	switch (GetScreenType())
   \   00000004   ........           LDR      R0,??DataTable159_2
   \   00000008   1400D0E5           LDRB     R0,[R0, #+20]
   \   0000000C   020040E2           SUB      R0,R0,#+2
   \   00000010   210050E3           CMP      R0,#+33
   \   00000014   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ProcessScreenExit_0:
   \   00000018   7400008A           BHI      ??ProcessScreenExit_1
   \   0000001C   200000EA           B        ??ProcessScreenExit_2
   \   00000020   1F0000EA           B        ??ProcessScreenExit_2
   \   00000024   1E0000EA           B        ??ProcessScreenExit_2
   \   00000028   5F0000EA           B        ??ProcessScreenExit_3
   \   0000002C   6F0000EA           B        ??ProcessScreenExit_1
   \   00000030   200000EA           B        ??ProcessScreenExit_4
   \   00000034   6D0000EA           B        ??ProcessScreenExit_1
   \   00000038   6A0000EA           B        ??ProcessScreenExit_5
   \   0000003C   690000EA           B        ??ProcessScreenExit_5
   \   00000040   6A0000EA           B        ??ProcessScreenExit_1
   \   00000044   690000EA           B        ??ProcessScreenExit_1
   \   00000048   240000EA           B        ??ProcessScreenExit_6
   \   0000004C   3A0000EA           B        ??ProcessScreenExit_7
   \   00000050   400000EA           B        ??ProcessScreenExit_8
   \   00000054   630000EA           B        ??ProcessScreenExit_5
   \   00000058   4B0000EA           B        ??ProcessScreenExit_9
   \   0000005C   630000EA           B        ??ProcessScreenExit_1
   \   00000060   600000EA           B        ??ProcessScreenExit_5
   \   00000064   610000EA           B        ??ProcessScreenExit_1
   \   00000068   600000EA           B        ??ProcessScreenExit_1
   \   0000006C   400000EA           B        ??ProcessScreenExit_10
   \   00000070   5E0000EA           B        ??ProcessScreenExit_1
   \   00000074   460000EA           B        ??ProcessScreenExit_11
   \   00000078   5C0000EA           B        ??ProcessScreenExit_1
   \   0000007C   0B0000EA           B        ??ProcessScreenExit_12
   \   00000080   5A0000EA           B        ??ProcessScreenExit_1
   \   00000084   590000EA           B        ??ProcessScreenExit_1
   \   00000088   080000EA           B        ??ProcessScreenExit_12
   \   0000008C   070000EA           B        ??ProcessScreenExit_12
   \   00000090   030000EA           B        ??ProcessScreenExit_2
   \   00000094   070000EA           B        ??ProcessScreenExit_4
   \   00000098   4D0000EA           B        ??ProcessScreenExit_13
   \   0000009C   500000EA           B        ??ProcessScreenExit_14
   \   000000A0   4B0000EA           B        ??ProcessScreenExit_13
   1575          	{
   1576          		case GAUGES_SCREEN_TYPE:
   1577          		case DRIVE_MODE_SCREEN_TYPE:
   1578          		case INSTRUMENTS_MODE_SCREEN_TYPE:
   1579          // KMC 3/25/12 - if waiting for SF we have not yet started recording 'real' data, therefore exit waithout save
   1580          // Would case crash in the case of powerup, then go racing but no track yet existed so went to Press at SF, and then exit
   1581          //		case WAITING_FOR_SF_SCREEN_TYPE:
   1582          		case DRAG_AUTOX_GAUGE_SCREEN_TYPE:
   1583          			ExitRecord(true);
   \                     ??ProcessScreenExit_2:
   \   000000A4   0100A0E3           MOV      R0,#+1
   \                     ??ProcessScreenExit_15:
   \   000000A8   ........           BL       ExitRecord
   1584          			break;
   \   000000AC   4F0000EA           B        ??ProcessScreenExit_1
   1585          
   1586          // KMC 3/25/12 - if waiting for SF we have not yet started recording 'real' data, therefore exit waithout save
   1587          // Would case crash in the case of powerup, then go racing but no track yet existed so went to Press at SF, and then exit
   1588          		case WAITING_FOR_SF_SCREEN_TYPE:			// KMC 3/25/12 - moved here
   1589          		case WAITING_FOR_STAGE_SCREEN_TYPE:
   1590          		case WAITING_FOR_LAUNCH_SCREEN_TYPE:
   1591          			ExitRecord(false);
   \                     ??ProcessScreenExit_12:
   \   000000B0   0000A0E3           MOV      R0,#+0
   \   000000B4   FBFFFFEA           B        ??ProcessScreenExit_15
   1592          			break;
   1593          
   1594          		case AERO_GRIP_SCREEN_TYPE:
   1595          		case VEHICLE_SETTINGS_SCREENS_TYPE:
   1596          			if (ValidateVehicleData())
   \                     ??ProcessScreenExit_4:
   \   000000B8   ........           BL       ValidateVehicleData
   \   000000BC   000050E3           CMP      R0,#+0
   \   000000C0   4D00000A           BEQ      ??ProcessScreenExit_16
   1597          			{
   1598          				TestCameras( false );
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   ........           BL       TestCameras
   1599          				WriteDataStructures(VEHICLE_DATA);
   \   000000CC   0200A0E3           MOV      R0,#+2
   \   000000D0   ........           BL       WriteDataStructures
   1600          				SetGear( GEAR_RESET );		// recalculate gear ratio table
   \   000000D4   0000A0E3           MOV      R0,#+0
   \   000000D8   ........           BL       SetGear
   1601          			}
   1602          			else return false;
   1603          			break;
   \   000000DC   430000EA           B        ??ProcessScreenExit_1
   1604          
   1605          		case TRACK_SETTINGS_SCREENS_TYPE:
   1606          			if (alteredTrackData)
   \                     ??ProcessScreenExit_6:
   \   000000E0   ........           LDR      R4,??DataTable164
   \   000000E4   0000D4E5           LDRB     R0,[R4, #+0]
   \   000000E8   000050E3           CMP      R0,#+0
   \   000000EC   4000000A           BEQ      ??ProcessScreenExit_17
   1607          			{
   1608          				if (ValidateSFCoordinates())
   \   000000F0   ........           BL       ValidateSFCoordinates
   \   000000F4   000050E3           CMP      R0,#+0
   \   000000F8   3F00000A           BEQ      ??ProcessScreenExit_16
   1609          				{
   1610          					trackTable[trackTableIndex].sdCardEntry = 0;	// May have edited track data, we now want to save data to disk!
   \   000000FC   ........           LDR      R7,??DataTable164_1
   \   00000100   4850A0E3           MOV      R5,#+72
   \   00000104   000097E5           LDR      R0,[R7, #+0]
   \   00000108   ........           LDR      R8,??DataTable164_2
   \   0000010C   958020E0           MLA      R0,R5,R0,R8
   \   00000110   0060A0E3           MOV      R6,#+0
   \   00000114   146080E5           STR      R6,[R0, #+20]
   1611          					WriteUserDataEvent(TRACK_DATA);
   \   00000118   0100A0E3           MOV      R0,#+1
   \   0000011C   ........           BL       WriteUserDataEvent
   1612          					trackTable[trackTableIndex].sdCardEntry = 1;
   \   00000120   000097E5           LDR      R0,[R7, #+0]
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   958020E0           MLA      R0,R5,R0,R8
   \   0000012C   141080E5           STR      R1,[R0, #+20]
   1613          					DeleteSFScreensKeyboards();
   \   00000130   ........           BL       DeleteSFScreensKeyboards
   1614          					alteredTrackData = false;
   \   00000134   0060C4E5           STRB     R6,[R4, #+0]
   \   00000138   2C0000EA           B        ??ProcessScreenExit_1
   1615          				}
   1616          				else return false;
   1617          			}
   1618          			break;
   1619          
   1620          		case TACH_SETUP_SCREENS_TYPE:
   1621          		case INPUTS_SCREENS_TYPE:
   1622          		case GEAR_RATIOS:
   1623          		case DIGITAL_SETTINGS_SCREEN_TYPE:
   1624          			WriteDataStructures(VEHICLE_DATA);
   1625          			break;
   1626          
   1627          		case GEARING_SCREENS_TYPE:
   1628          			if (ValidateDiffRatio())
   \                     ??ProcessScreenExit_7:
   \   0000013C   ........           BL       ValidateDiffRatio
   \   00000140   000050E3           CMP      R0,#+0
   \   00000144   2C00000A           BEQ      ??ProcessScreenExit_16
   1629          			{
   1630          				WriteDataStructures(VEHICLE_DATA);
   \   00000148   0200A0E3           MOV      R0,#+2
   \   0000014C   ........           BL       WriteDataStructures
   1631          				DeleteGearRatiosKeyboards();
   \   00000150   ........           BL       DeleteGearRatiosKeyboards
   1632          			}
   1633          			else return false;
   1634          			break;
   \   00000154   250000EA           B        ??ProcessScreenExit_1
   1635          
   1636          		case ANALOG_SETTINGS_SCREEN_TYPE:
   1637          			if (ValidateAnalogData())
   \                     ??ProcessScreenExit_8:
   \   00000158   ........           BL       ValidateAnalogData
   \   0000015C   000050E3           CMP      R0,#+0
   \   00000160   2500000A           BEQ      ??ProcessScreenExit_16
   1638          			{
   1639          				WriteDataStructures(VEHICLE_DATA);
   \   00000164   0200A0E3           MOV      R0,#+2
   \   00000168   ........           BL       WriteDataStructures
   1640          				DeleteAnalogScaleKeyboards();
   \   0000016C   ........           BL       DeleteAnalogScaleKeyboards
   1641          			}
   1642          			else return false;
   1643          			break;
   \   00000170   1E0000EA           B        ??ProcessScreenExit_1
   1644          
   1645          		//case SFSCREENS_TYPE:
   1646          		//	return (ValidateSFCoordinates());
   1647          		//	break;
   1648          
   1649          		case TIRE_DIMENSIONS_SCREEN_TYPE:
   1650          			if (GetLastScreen(TIRE_DIMENSIONS_SCREEN_TYPE) != TIRESIZE_SCREEN)
   \                     ??ProcessScreenExit_10:
   \   00000174   1600A0E3           MOV      R0,#+22
   \   00000178   ........           BL       GetLastScreen
   \   0000017C   040050E3           CMP      R0,#+4
   \   00000180   1A00000A           BEQ      ??ProcessScreenExit_1
   1651          				TCKeyboardSaveButton();
   \   00000184   ........           BL       TCKeyboardSaveButton
   \   00000188   180000EA           B        ??ProcessScreenExit_1
   1652          			break;
   1653          
   1654          		case ANALOG_NUMBER_ENTRY_STANDALONE:
   1655          			AISKillKeyboard();
   \                     ??ProcessScreenExit_9:
   \   0000018C   ........           BL       AISKillKeyboard
   1656          			break;
   \   00000190   160000EA           B        ??ProcessScreenExit_1
   1657          
   1658          		case DISPLAY_CLOSEST_TRACKS_SCREEN_TYPE:
   1659          			ExitTrackSelectionScreen();				// Be sure this track is selected and loaded
   \                     ??ProcessScreenExit_11:
   \   00000194   ........           BL       ExitTrackSelectionScreen
   1660          			ResumeScreenScrolling();
   \   00000198   ........           LDR      R0,??DataTable159_11
   \   0000019C   0110A0E3           MOV      R1,#+1
   \   000001A0   681080E5           STR      R1,[R0, #+104]
   1661          			HideSprites();
   \   000001A4   ........           BL       HideSprites
   1662          			break;
   \   000001A8   100000EA           B        ??ProcessScreenExit_1
   1663          
   1664          		case RACE_SETUP_SCREENS_TYPE:
   1665          			ctType = CT_NORMAL_MODE;
   \                     ??ProcessScreenExit_3:
   \   000001AC   ........           LDR      R0,??DataTable159_9
   \   000001B0   0010A0E3           MOV      R1,#+0
   \   000001B4   0010C0E5           STRB     R1,[R0, #+0]
   1666          			if (vehicleSelectionChanged == true)	// If the vehicle selection has changed on this screen
   \   000001B8   ........           LDR      R0,??DataTable165
   \   000001BC   0000D0E5           LDRB     R0,[R0, #+0]
   \   000001C0   010050E3           CMP      R0,#+1
   \   000001C4   0000001A           BNE      ??ProcessScreenExit_18
   1667          				ChangeVehicle();					// Validate and make the change in the database
   \   000001C8   ........           BL       ChangeVehicle
   1668          			ExitTrackSelectionScreen();				// Be sure this track is selected and loaded
   \                     ??ProcessScreenExit_18:
   \   000001CC   ........           BL       ExitTrackSelectionScreen
   1669          			break;
   \   000001D0   060000EA           B        ??ProcessScreenExit_1
   1670          
   1671          		case CAMERA_SELECTION_SCREEN_TYPE:
   1672          		case TRAQDASH_CAMERA_SCREEN:
   1673          			if (ValidateCamera())
   \                     ??ProcessScreenExit_13:
   \   000001D4   ........           BL       ValidateCamera
   \   000001D8   000050E3           CMP      R0,#+0
   \   000001DC   0100001A           BNE      ??ProcessScreenExit_5
   \   000001E0   F081BDE8           POP      {R4-R8,PC}
   1674          				WriteDataStructures(VEHICLE_DATA);
   1675          			else return false;
   1676          			break;
   1677          
   1678          		case CAMERA_DELAY_SCREEN_TYPE:
   1679          			SetCameraDelay();
   \                     ??ProcessScreenExit_14:
   \   000001E4   ........           BL       SetCameraDelay
   1680          			WriteDataStructures(VEHICLE_DATA);
   \                     ??ProcessScreenExit_5:
   \   000001E8   0200A0E3           MOV      R0,#+2
   \   000001EC   ........           BL       WriteDataStructures
   1681          			break;
   1682          	}
   1683          
   1684          	WriteDataStructures(SYSTEM_DATA);
   \                     ??ProcessScreenExit_1:
   \   000001F0   0000A0E3           MOV      R0,#+0
   \                     ??ProcessScreenExit_17:
   \   000001F4   ........           BL       WriteDataStructures
   1685          	return true;
   \   000001F8   0100A0E3           MOV      R0,#+1
   \                     ??ProcessScreenExit_16:
   \   000001FC   F081BDE8           POP      {R4-R8,PC}       ;; return
   1686          }
   1687          
   1688          //
   1689          // MoveRight - navigate backwards one of more screens
   1690          // Input	howFar = ONE_SCREEN = move back one screen only
   1691          //					 ALL_THE_WAY = move back all the way to the main menu
   1692          //

   \                                 In section .text, align 4, keep-with-next
   1693          void MoveRight(enum MOVE_BACK howFar)
   1694          {
   \                     MoveRight:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0050A0E1           MOV      R5,R0
   1695          	if (ProcessScreenExit())
   \   0000000C   ........           BL       ProcessScreenExit
   \   00000010   000050E3           CMP      R0,#+0
   \   00000014   1C01000A           BEQ      ??MoveRight_2
   1696          	{
   1697          		// see how long back key pressed
   1698          		if (howFar == ALL_THE_WAY)
   \   00000018   ........           LDR      R4,??DataTable159_2
   \   0000001C   010055E3           CMP      R5,#+1
   \   00000020   1400D4E5           LDRB     R0,[R4, #+20]
   \   00000024   3C00001A           BNE      ??MoveRight_3
   1699          			Display_GeneralConfig(GetCurrentWindowHandle());		// Back key pressed more than 2 seconds - jump to main menu
   \   00000028   130050E3           CMP      R0,#+19
   \   0000002C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??MoveRight_0:
   \   00000030   3600008A           BHI      ??MoveRight_4
   \   00000034   120000EA           B        ??MoveRight_5
   \   00000038   310000EA           B        ??MoveRight_6
   \   0000003C   260000EA           B        ??MoveRight_7
   \   00000040   250000EA           B        ??MoveRight_7
   \   00000044   240000EA           B        ??MoveRight_7
   \   00000048   2B0000EA           B        ??MoveRight_8
   \   0000004C   280000EA           B        ??MoveRight_9
   \   00000050   230000EA           B        ??MoveRight_10
   \   00000054   240000EA           B        ??MoveRight_11
   \   00000058   1D0000EA           B        ??MoveRight_12
   \   0000005C   1A0000EA           B        ??MoveRight_13
   \   00000060   170000EA           B        ??MoveRight_14
   \   00000064   140000EA           B        ??MoveRight_15
   \   00000068   110000EA           B        ??MoveRight_16
   \   0000006C   0E0000EA           B        ??MoveRight_17
   \   00000070   090000EA           B        ??MoveRight_18
   \   00000074   040000EA           B        ??MoveRight_19
   \   00000078   240000EA           B        ??MoveRight_4
   \   0000007C   040000EA           B        ??MoveRight_20
   \   00000080   070000EA           B        ??MoveRight_21
   \                     ??MoveRight_5:
   \   00000084   ........           BL       GetGeneralConfinScreenWindowHandle
   \   00000088   210000EA           B        ??MoveRight_22
   \                     ??MoveRight_19:
   \   0000008C   ........           BL       GetDigitalInputSettingsWindowHandle
   \   00000090   1F0000EA           B        ??MoveRight_22
   \                     ??MoveRight_20:
   \   00000094   ........           BL       GetAnalogInputsScaleWindowHandle
   \   00000098   1D0000EA           B        ??MoveRight_22
   \                     ??MoveRight_18:
   \   0000009C   ........           BL       GetAnalogInputSettingsWindowHandle
   \   000000A0   1B0000EA           B        ??MoveRight_22
   \                     ??MoveRight_21:
   \   000000A4   ........           BL       GetGearRatiosWindowHandle
   \   000000A8   190000EA           B        ??MoveRight_22
   \                     ??MoveRight_17:
   \   000000AC   ........           BL       GetGearingWindowHandle
   \   000000B0   170000EA           B        ??MoveRight_22
   \                     ??MoveRight_16:
   \   000000B4   ........           BL       GetTrackSettingsWindowHandle
   \   000000B8   150000EA           B        ??MoveRight_22
   \                     ??MoveRight_15:
   \   000000BC   ........           BL       GetTrackSettingMainWindowHandle
   \   000000C0   130000EA           B        ??MoveRight_22
   \                     ??MoveRight_14:
   \   000000C4   ........           BL       GetReviewSessionsWindowHandle
   \   000000C8   110000EA           B        ??MoveRight_22
   \                     ??MoveRight_13:
   \   000000CC   ........           BL       GetInputsWindowHandle
   \   000000D0   0F0000EA           B        ??MoveRight_22
   \                     ??MoveRight_12:
   \   000000D4   ........           BL       GetTachSetupWindowHandle
   \   000000D8   0D0000EA           B        ??MoveRight_22
   \                     ??MoveRight_7:
   \   000000DC   ........           BL       GetRunningGaugesWindowHandle
   \   000000E0   0B0000EA           B        ??MoveRight_22
   \                     ??MoveRight_10:
   \   000000E4   ........           BL       GetVehicleSettingsWindowHandle
   \   000000E8   090000EA           B        ??MoveRight_22
   \                     ??MoveRight_11:
   \   000000EC   ........           BL       GetVehicleSettingMainWindowHandle
   \   000000F0   070000EA           B        ??MoveRight_22
   \                     ??MoveRight_9:
   \   000000F4   ........           BL       GetSystemSettingsWindowHandle
   \   000000F8   050000EA           B        ??MoveRight_22
   \                     ??MoveRight_8:
   \   000000FC   ........           BL       GetRaceSetupScreensWindowHandle
   \   00000100   030000EA           B        ??MoveRight_22
   \                     ??MoveRight_6:
   \   00000104   ........           LDR      R0,??DataTable159_11
   \   00000108   800090E5           LDR      R0,[R0, #+128]
   \   0000010C   000000EA           B        ??MoveRight_22
   \                     ??MoveRight_4:
   \   00000110   0000A0E3           MOV      R0,#+0
   \                     ??MoveRight_22:
   \   00000114   ........           BL       Display_GeneralConfig
   \   00000118   DB0000EA           B        ??MoveRight_2
   1700          		// else back key pressed less than 2 seconds, perform normal one screen back function
   1701          		else switch (GetScreenType())
   \                     ??MoveRight_3:
   \   0000011C   010040E2           SUB      R0,R0,#+1
   \   00000120   240050E3           CMP      R0,#+36
   \   00000124   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??MoveRight_1:
   \   00000128   D700008A           BHI      ??MoveRight_2
   \   0000012C   F4FFFFEA           B        ??MoveRight_6
   \   00000130   220000EA           B        ??MoveRight_23
   \   00000134   210000EA           B        ??MoveRight_23
   \   00000138   200000EA           B        ??MoveRight_23
   \   0000013C   4D0000EA           B        ??MoveRight_24
   \   00000140   540000EA           B        ??MoveRight_25
   \   00000144   450000EA           B        ??MoveRight_26
   \   00000148   650000EA           B        ??MoveRight_27
   \   0000014C   5A0000EA           B        ??MoveRight_28
   \   00000150   610000EA           B        ??MoveRight_29
   \   00000154   560000EA           B        ??MoveRight_30
   \   00000158   910000EA           B        ??MoveRight_31
   \   0000015C   420000EA           B        ??MoveRight_32
   \   00000160   6A0000EA           B        ??MoveRight_33
   \   00000164   730000EA           B        ??MoveRight_34
   \   00000168   870000EA           B        ??MoveRight_35
   \   0000016C   C60000EA           B        ??MoveRight_2
   \   00000170   7D0000EA           B        ??MoveRight_36
   \   00000174   670000EA           B        ??MoveRight_37
   \   00000178   C30000EA           B        ??MoveRight_2
   \   0000017C   C20000EA           B        ??MoveRight_2
   \   00000180   8C0000EA           B        ??MoveRight_38
   \   00000184   950000EA           B        ??MoveRight_39
   \   00000188   900000EA           B        ??MoveRight_40
   \   0000018C   960000EA           B        ??MoveRight_41
   \   00000190   160000EA           B        ??MoveRight_42
   \   00000194   9B0000EA           B        ??MoveRight_43
   \   00000198   BB0000EA           B        ??MoveRight_2
   \   0000019C   1B0000EA           B        ??MoveRight_44
   \   000001A0   1E0000EA           B        ??MoveRight_45
   \   000001A4   270000EA           B        ??MoveRight_46
   \   000001A8   9A0000EA           B        ??MoveRight_47
   \   000001AC   A00000EA           B        ??MoveRight_48
   \   000001B0   9C0000EA           B        ??MoveRight_49
   \   000001B4   A60000EA           B        ??MoveRight_50
   \   000001B8   AC0000EA           B        ??MoveRight_51
   \   000001BC   AD0000EA           B        ??MoveRight_52
   1702          		{
   1703          		case DRIVE_MODE_SCREEN_TYPE:
   1704          		case INSTRUMENTS_MODE_SCREEN_TYPE:
   1705          		case GAUGES_SCREEN_TYPE:
   1706          // KMC 9/9/12 exit record directly to race review			Display_GeneralConfig(GetRunningGaugesWindowHandle());
   1707          			if (selectedRaceMode != INSTRUMENTS_MODE)		// If recording a session
   \                     ??MoveRight_23:
   \   000001C0   ........           LDR      R5,??DataTable159_11
   \   000001C4   C600D5E5           LDRB     R0,[R5, #+198]
   \   000001C8   020050E3           CMP      R0,#+2
   \   000001CC   C2FFFF0A           BEQ      ??MoveRight_7
   1708          			{												// Go directly to review session screen
   1709          				WM_DeleteWindow(GetRunningGaugesWindowHandle());
   \   000001D0   ........           BL       GetRunningGaugesWindowHandle
   \   000001D4   ........           BL       WM_DeleteWindow
   1710          				SetConfigWindowHandle((GUI_HWIN)NULL);		// Be sure config screen handle is 0 to force exit from
   \   000001D8   0000A0E3           MOV      R0,#+0
   \   000001DC   800085E5           STR      R0,[R5, #+128]
   1711          															// review to go through code to rebuild session list
   1712          				DisplaySessionDetailsScreen();
   \                     ??MoveRight_53:
   \   000001E0   ........           BL       DisplaySessionDetailsScreen
   1713          				sysData.navigatedToReviewAfterRace = true;	// Mark that we navigated by race exit to the review screen
   \   000001E4   0100A0E3           MOV      R0,#+1
   \   000001E8   E400C4E5           STRB     R0,[R4, #+228]
   \   000001EC   A60000EA           B        ??MoveRight_2
   1714          			}
   1715          			else Display_GeneralConfig(GetRunningGaugesWindowHandle());	// Otherwise return, as normal, to main screen
   1716          			break;
   1717          
   1718          		case WAITING_FOR_SF_SCREEN_TYPE:
   1719          			DisplayNewScreenList(CONFIG_SCREEN_TYPE, GetLastScreen(CONFIG_SCREEN_TYPE),GetSFWindowHandle());
   \                     ??MoveRight_42:
   \   000001F0   ........           BL       GetSFWindowHandle
   \   000001F4   0040A0E1           MOV      R4,R0
   \   000001F8   0100A0E3           MOV      R0,#+1
   \   000001FC   ........           BL       GetLastScreen
   \   00000200   0010A0E1           MOV      R1,R0
   \   00000204   0420A0E1           MOV      R2,R4
   \                     ??MoveRight_54:
   \   00000208   0100A0E3           MOV      R0,#+1
   \   0000020C   9D0000EA           B        ??MoveRight_55
   1720          			break;
   1721          
   1722          		case WAITING_FOR_STAGE_SCREEN_TYPE:
   1723          			DisplayNewScreenList(CONFIG_SCREEN_TYPE, GO_RACING, GetStageWindowHandle());
   \                     ??MoveRight_44:
   \   00000210   ........           BL       GetStageWindowHandle
   \   00000214   0020A0E1           MOV      R2,R0
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   F9FFFFEA           B        ??MoveRight_54
   1724          			break;
   1725          
   1726          		case WAITING_FOR_LAUNCH_SCREEN_TYPE:
   1727          			if (selectedRaceMode == DRAG_MODE)
   \                     ??MoveRight_45:
   \   00000220   ........           LDR      R0,??DataTable159_11
   \   00000224   C600D0E5           LDRB     R0,[R0, #+198]
   \   00000228   040050E3           CMP      R0,#+4
   \   0000022C   0200001A           BNE      ??MoveRight_56
   1728          				DisplayDragStageScreen(GetLaunchScreenWindowHandle());
   \   00000230   ........           BL       GetLaunchScreenWindowHandle
   \   00000234   ........           BL       DisplayDragStageScreen
   \   00000238   930000EA           B        ??MoveRight_2
   1729          			else DisplayAutoXStageScreen(GetLaunchScreenWindowHandle());
   \                     ??MoveRight_56:
   \   0000023C   ........           BL       GetLaunchScreenWindowHandle
   \   00000240   ........           BL       DisplayAutoXStageScreen
   \   00000244   900000EA           B        ??MoveRight_2
   1730          			break;
   1731          
   1732          		case DRAG_AUTOX_GAUGE_SCREEN_TYPE:
   1733          // KMC 9/9/12 exit record directly to race review 			Display_GeneralConfig(GetDragAutoXGaugesWindowHandle());
   1734          			WM_DeleteWindow(GetDragAutoXGaugesWindowHandle());
   \                     ??MoveRight_46:
   \   00000248   ........           BL       GetDragAutoXGaugesWindowHandle
   \   0000024C   ........           BL       WM_DeleteWindow
   1735          			SetConfigWindowHandle((GUI_HWIN)NULL);			// Be sure config screen handle is 0 to force exit from
   \   00000250   ........           LDR      R0,??DataTable159_11
   \   00000254   0010A0E3           MOV      R1,#+0
   \   00000258   801080E5           STR      R1,[R0, #+128]
   1736          															// review to go through code to rebuild session list
   1737          			DisplaySessionDetailsScreen();
   \   0000025C   DFFFFFEA           B        ??MoveRight_53
   1738          			sysData.navigatedToReviewAfterRace = true;		// Mark that we navigated by race exit to the review screen
   1739          			break;
   1740          
   1741          		case CONFIG_SCREEN_TYPE:
   1742          			Display_GeneralConfig(GetConfigWindowHandle());
   1743          			break;
   1744          		case VEHICLE_SETTINGS_SCREENS_TYPE:
   1745          			Display_VehicleSettingMainScreen(GetVehicleSettingsWindowHandle());
   \                     ??MoveRight_26:
   \   00000260   ........           BL       GetVehicleSettingsWindowHandle
   \   00000264   ........           BL       Display_VehicleSettingMainScreen
   1746          			break;
   \   00000268   870000EA           B        ??MoveRight_2
   1747          		case TRACK_SETTINGS_SCREENS_TYPE:
   1748          			Display_TrackSettingMainScreen(GetTrackSettingsWindowHandle());
   \                     ??MoveRight_32:
   \   0000026C   ........           BL       GetTrackSettingsWindowHandle
   \   00000270   ........           BL       Display_TrackSettingMainScreen
   1749          			break;
   \   00000274   840000EA           B        ??MoveRight_2
   1750          		case RACE_SETUP_SCREENS_TYPE:
   1751          			DisplayNewScreenList(CONFIG_SCREEN_TYPE, GetLastScreen(CONFIG_SCREEN_TYPE), GetRaceSetupScreensWindowHandle());
   \                     ??MoveRight_24:
   \   00000278   ........           BL       GetRaceSetupScreensWindowHandle
   \   0000027C   0040A0E1           MOV      R4,R0
   \   00000280   0100A0E3           MOV      R0,#+1
   \   00000284   ........           BL       GetLastScreen
   \   00000288   0010A0E1           MOV      R1,R0
   \   0000028C   0420A0E1           MOV      R2,R4
   \   00000290   0100A0E3           MOV      R0,#+1
   \   00000294   7B0000EA           B        ??MoveRight_55
   1752          			break;
   1753          		case SYSTEM_SETTINGS_SCREENS_TYPE:
   1754          			DisplayNewScreenList(CONFIG_SCREEN_TYPE, GetLastScreen(CONFIG_SCREEN_TYPE), GetSystemSettingsWindowHandle());
   \                     ??MoveRight_25:
   \   00000298   ........           BL       GetSystemSettingsWindowHandle
   \   0000029C   0040A0E1           MOV      R4,R0
   \   000002A0   0100A0E3           MOV      R0,#+1
   \   000002A4   ........           BL       GetLastScreen
   \   000002A8   0010A0E1           MOV      R1,R0
   \   000002AC   0420A0E1           MOV      R2,R4
   \   000002B0   D4FFFFEA           B        ??MoveRight_54
   1755          			break;
   1756          		case REVIEW_SESSIONS_SCREENS_TYPE:
   1757          			ReturnFromReviewSessionsScreen();
   \                     ??MoveRight_30:
   \   000002B4   ........           BL       ReturnFromReviewSessionsScreen
   1758          			break;
   \   000002B8   730000EA           B        ??MoveRight_2
   1759          		case TACH_SETUP_SCREENS_TYPE:
   1760          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE), GetTachSetupWindowHandle());
   \                     ??MoveRight_28:
   \   000002BC   ........           BL       GetTachSetupWindowHandle
   \                     ??MoveRight_57:
   \   000002C0   0040A0E1           MOV      R4,R0
   \   000002C4   0700A0E3           MOV      R0,#+7
   \   000002C8   ........           BL       GetLastScreen
   \   000002CC   0010A0E1           MOV      R1,R0
   \   000002D0   0420A0E1           MOV      R2,R4
   \                     ??MoveRight_58:
   \   000002D4   0700A0E3           MOV      R0,#+7
   \   000002D8   6A0000EA           B        ??MoveRight_55
   1761          			break;
   1762          		case INPUTS_SCREENS_TYPE:
   1763          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE), GetInputsWindowHandle());
   \                     ??MoveRight_29:
   \   000002DC   ........           BL       GetInputsWindowHandle
   \   000002E0   F6FFFFEA           B        ??MoveRight_57
   1764          			break;
   1765          		case VEHICLE_SETTING_SCREEN_TYPE:
   1766          			ctType = CT_NORMAL_MODE;
   \                     ??MoveRight_27:
   \   000002E4   ........           LDR      R0,??DataTable159_9
   \   000002E8   0010A0E3           MOV      R1,#+0
   \   000002EC   0010C0E5           STRB     R1,[R0, #+0]
   1767          			DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, GetLastScreen(RACE_SETUP_SCREENS_TYPE), GetVehicleSettingMainWindowHandle());
   \   000002F0   ........           BL       GetVehicleSettingMainWindowHandle
   \                     ??MoveRight_59:
   \   000002F4   0040A0E1           MOV      R4,R0
   \   000002F8   0500A0E3           MOV      R0,#+5
   \   000002FC   ........           BL       GetLastScreen
   \   00000300   0010A0E1           MOV      R1,R0
   \   00000304   0420A0E1           MOV      R2,R4
   \   00000308   0500A0E3           MOV      R0,#+5
   \   0000030C   5D0000EA           B        ??MoveRight_55
   1768          			break;
   1769          		case GEARING_SCREENS_TYPE:
   1770          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE), GetGearingWindowHandle());
   \                     ??MoveRight_33:
   \   00000310   ........           BL       GetGearingWindowHandle
   \   00000314   E9FFFFEA           B        ??MoveRight_57
   1771          			break;
   1772          		case GEAR_RATIOS:
   1773          			DisplayNewScreenList(GEARING_SCREENS_TYPE, GetLastScreen(GEARING_SCREENS_TYPE), GetGearRatiosWindowHandle());
   \                     ??MoveRight_37:
   \   00000318   ........           BL       GetGearRatiosWindowHandle
   \                     ??MoveRight_60:
   \   0000031C   0040A0E1           MOV      R4,R0
   \   00000320   0E00A0E3           MOV      R0,#+14
   \   00000324   ........           BL       GetLastScreen
   \   00000328   0010A0E1           MOV      R1,R0
   \   0000032C   0420A0E1           MOV      R2,R4
   \   00000330   0E00A0E3           MOV      R0,#+14
   \   00000334   530000EA           B        ??MoveRight_55
   1774          			break;
   1775          		case ANALOG_SETTINGS_SCREEN_TYPE:
   1776          			{
   1777          				int lastScreen;
   1778          
   1779          				// Do not allow BACK function from keyboards
   1780          				lastScreen = GetLastScreen(ANALOG_SETTINGS_SCREEN_TYPE);
   \                     ??MoveRight_34:
   \   00000338   0F00A0E3           MOV      R0,#+15
   \   0000033C   ........           BL       GetLastScreen
   1781          				if ((lastScreen == SCALE) || (lastScreen == ALARM))
   \   00000340   000050E3           CMP      R0,#+0
   \   00000344   01005013           CMPNE    R0,#+1
   \   00000348   4F00001A           BNE      ??MoveRight_2
   1782          					DisplayNewScreenList(INPUTS_SCREENS_TYPE, GetLastScreen(INPUTS_SCREENS_TYPE), GetAnalogInputSettingsWindowHandle());
   \   0000034C   ........           BL       GetAnalogInputSettingsWindowHandle
   \                     ??MoveRight_61:
   \   00000350   0040A0E1           MOV      R4,R0
   \   00000354   0A00A0E3           MOV      R0,#+10
   \   00000358   ........           BL       GetLastScreen
   \   0000035C   0010A0E1           MOV      R1,R0
   \   00000360   0420A0E1           MOV      R2,R4
   \   00000364   0A00A0E3           MOV      R0,#+10
   \   00000368   460000EA           B        ??MoveRight_55
   1783          				}
   1784          			break;
   1785          		case ANALOG_INPUTS_SCALE:
   1786          			DisplayNewScreenList(ANALOG_SETTINGS_SCREEN_TYPE, GetLastScreen(ANALOG_SETTINGS_SCREEN_TYPE), GetAnalogInputsScaleWindowHandle());
   \                     ??MoveRight_36:
   \   0000036C   ........           BL       GetAnalogInputsScaleWindowHandle
   \   00000370   0040A0E1           MOV      R4,R0
   \   00000374   0F00A0E3           MOV      R0,#+15
   \   00000378   ........           BL       GetLastScreen
   \   0000037C   0010A0E1           MOV      R1,R0
   \   00000380   0420A0E1           MOV      R2,R4
   \   00000384   0F00A0E3           MOV      R0,#+15
   \   00000388   3E0000EA           B        ??MoveRight_55
   1787          			break;
   1788          		case DIGITAL_SETTINGS_SCREEN_TYPE:
   1789          			// Do not allow BACK function from keyboards
   1790          			if (GetLastScreen(DIGITAL_SETTINGS_SCREEN_TYPE) == DIG_ALARM_STATE)
   \                     ??MoveRight_35:
   \   0000038C   1000A0E3           MOV      R0,#+16
   \   00000390   ........           BL       GetLastScreen
   \   00000394   000050E3           CMP      R0,#+0
   \   00000398   3B00001A           BNE      ??MoveRight_2
   1791          				DisplayNewScreenList(INPUTS_SCREENS_TYPE, GetLastScreen(INPUTS_SCREENS_TYPE), GetDigitalInputSettingsWindowHandle());
   \   0000039C   ........           BL       GetDigitalInputSettingsWindowHandle
   \   000003A0   EAFFFFEA           B        ??MoveRight_61
   1792          			break;
   1793          		case TRACK_SETTING_SCREEN_TYPE:	
   1794          			ctType = CT_NORMAL_MODE;
   \                     ??MoveRight_31:
   \   000003A4   ........           LDR      R0,??DataTable159_9
   \   000003A8   0010A0E3           MOV      R1,#+0
   \   000003AC   0010C0E5           STRB     R1,[R0, #+0]
   1795          			DisplayNewScreenList(RACE_SETUP_SCREENS_TYPE, GetLastScreen(RACE_SETUP_SCREENS_TYPE), GetTrackSettingMainWindowHandle());
   \   000003B0   ........           BL       GetTrackSettingMainWindowHandle
   \   000003B4   CEFFFFEA           B        ??MoveRight_59
   1796          			break;
   1797          		case TIRE_DIMENSIONS_SCREEN_TYPE:
   1798          			if (GetLastScreen(TIRE_DIMENSIONS_SCREEN_TYPE) == TIRESIZE_SCREEN)
   \                     ??MoveRight_38:
   \   000003B8   1600A0E3           MOV      R0,#+22
   \   000003BC   ........           BL       GetLastScreen
   \   000003C0   040050E3           CMP      R0,#+4
   \   000003C4   3000001A           BNE      ??MoveRight_2
   1799          				DisplayNewScreenList(GEARING_SCREENS_TYPE, GetLastScreen(GEARING_SCREENS_TYPE), GetTireSizeScreenWindowHandle());
   \   000003C8   ........           BL       GetTireSizeScreenWindowHandle
   \   000003CC   D2FFFFEA           B        ??MoveRight_60
   1800          			break;
   1801          		case DISPLAY_CLOSEST_TRACKS_SCREEN_TYPE:
   1802          			DisplayNewScreenList(CONFIG_SCREEN_TYPE, GO_RACING, hDisplayClosestTracks);
   \                     ??MoveRight_40:
   \   000003D0   ........           LDR      R0,??DataTable159_11
   \   000003D4   0010A0E3           MOV      R1,#+0
   \   000003D8   A82090E5           LDR      R2,[R0, #+168]
   \   000003DC   89FFFFEA           B        ??MoveRight_54
   1803          			break;
   1804          		case WAITING_FOR_SATELLITES_SCREEN_TYPE:
   1805          			KillWaitingForSatelliteScreen(false);
   \                     ??MoveRight_39:
   \   000003E0   0000A0E3           MOV      R0,#+0
   \   000003E4   ........           BL       KillWaitingForSatelliteScreen
   1806          			break;
   \   000003E8   270000EA           B        ??MoveRight_2
   1807          		case WAITING_FOR_CAMERA_SCREEN_TYPE:
   1808          			raceModeState = RM_CANCELLED_WAITING_FOR_CAMERA;
   \                     ??MoveRight_41:
   \   000003EC   ........           LDR      R0,??DataTable159_11
   \   000003F0   0510A0E3           MOV      R1,#+5
   \   000003F4   C510C0E5           STRB     R1,[R0, #+197]
   1809          			GoRacingStateMachine(hWaitingForCamera);
   \   000003F8   ........           LDR      R0,??DataTable172
   \   000003FC   000090E5           LDR      R0,[R0, #+0]
   \   00000400   ........           BL       GoRacingStateMachine
   1810          			break;
   \   00000404   200000EA           B        ??MoveRight_2
   1811          		case PERSONALIZE_REVIEW_SCREEN_TYPE:
   1812          			PersonalizeScreenExit();			// Check before exiting screen - might want to reset
   \                     ??MoveRight_43:
   \   00000408   ........           BL       PersonalizeScreenExit
   1813          			DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, STORAGE_SELECTION, hPersonalizationScreen);
   \   0000040C   ........           LDR      R0,??DataTable172_1
   \   00000410   0410A0E3           MOV      R1,#+4
   \   00000414   190000EA           B        ??MoveRight_62
   1814          			break;
   1815          		case AERO_GRIP_SCREEN_TYPE:
   1816          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, CARMETRICS_SELECTION, GetAeroGripWindowHandle());
   \                     ??MoveRight_47:
   \   00000418   ........           BL       GetAeroGripWindowHandle
   \   0000041C   0020A0E1           MOV      R2,R0
   \   00000420   0110A0E3           MOV      R1,#+1
   \   00000424   AAFFFFEA           B        ??MoveRight_58
   1817          			break;
   1818          		case CAMERA_DELAY_SCREEN_TYPE:
   1819          			CreateTraqdashCamScreen(GetCameraDelayWindowHandle());
   \                     ??MoveRight_49:
   \   00000428   ........           BL       GetCameraDelayWindowHandle
   \   0000042C   ........           BL       CreateTraqdashCamScreen
   1820          			break;
   \   00000430   150000EA           B        ??MoveRight_2
   1821          		case CAMERA_SELECTION_SCREEN_TYPE:
   1822          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE), GetCameraSelectionWindowHandle());
   \                     ??MoveRight_48:
   \   00000434   ........           BL       GetCameraSelectionWindowHandle
   \   00000438   0040A0E1           MOV      R4,R0
   \   0000043C   0700A0E3           MOV      R0,#+7
   \   00000440   ........           BL       GetLastScreen
   \   00000444   0010A0E1           MOV      R1,R0
   \   00000448   0420A0E1           MOV      R2,R4
   \   0000044C   0700A0E3           MOV      R0,#+7
   \   00000450   0C0000EA           B        ??MoveRight_55
   1823          			break;
   1824          		case TRAQDASH_CAMERA_SCREEN:
   1825          			DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE), GetTraqdashCamWindowHandle());
   \                     ??MoveRight_50:
   \   00000454   ........           BL       GetTraqdashCamWindowHandle
   \   00000458   0040A0E1           MOV      R4,R0
   \   0000045C   0700A0E3           MOV      R0,#+7
   \   00000460   ........           BL       GetLastScreen
   \   00000464   0010A0E1           MOV      R1,R0
   \   00000468   0420A0E1           MOV      R2,R4
   \   0000046C   98FFFFEA           B        ??MoveRight_58
   1826          			break;
   1827          		case HELP_SCREEN_TYPE:
   1828          			DeleteHelpScreen();
   \                     ??MoveRight_51:
   \   00000470   ........           BL       DeleteHelpScreen
   1829          			break;
   \   00000474   040000EA           B        ??MoveRight_2
   1830          		case RECORD_SPEED_SCREEN_TYPE:
   1831          			DisplayNewScreenList(SYSTEM_SETTINGS_SCREENS_TYPE, AUTOSTART_SELECTION, hPersonalizationScreen);
   \                     ??MoveRight_52:
   \   00000478   ........           LDR      R0,??DataTable172_1
   \   0000047C   0310A0E3           MOV      R1,#+3
   \                     ??MoveRight_62:
   \   00000480   002090E5           LDR      R2,[R0, #+0]
   \   00000484   0600A0E3           MOV      R0,#+6
   \                     ??MoveRight_55:
   \   00000488   ........           BL       DisplayNewScreenList
   1832          			break;
   1833          		}
   1834          	}
   1835          }
   \                     ??MoveRight_2:
   \   0000048C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000490   3080BDE8           POP      {R4,R5,PC}       ;; return
   1836          
   1837          
   1838          

   \                                 In section .text, align 4, keep-with-next
   1839          void ProcessScreenMovement(void)
   1840          {
   \                     ProcessScreenMovement:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   1841          	GUI_PID_STATE TouchState;
   1842          	signed int x, y;
   1843          	static signed int lastx, lasty;
   1844          
   1845          	GUI_TOUCH_GetState(&TouchState);  /* Get the touch position in pixel */
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   ........           BL       GUI_TOUCH_GetState
   1846          
   1847          	if (TouchState.Pressed)			// If touch pressed
   \   00000010   0800DDE5           LDRB     R0,[SP, #+8]
   \   00000014   ........           LDR      R4,??CheckForInfoKey_8
   \   00000018   000050E3           CMP      R0,#+0
   \   0000001C   4900000A           BEQ      ??ProcessScreenMovement_0
   1848          	{
   1849          		if (pressingbutton_semaphore == 1)
   \   00000020   6C0094E5           LDR      R0,[R4, #+108]
   \   00000024   010050E3           CMP      R0,#+1
   \   00000028   B101000A           BEQ      ??ProcessScreenMovement_1
   1850          		{
   1851          // Screen self-scrolling no longer handled by executive loop - now handled by timer
   1852          			return;			// Wait for it to be released
   1853          		}
   1854          		x = TouchState.x;
   1855          		y = TouchState.y;
   1856          
   1857          		lastx = x;
   \   0000002C   00009DE5           LDR      R0,[SP, #+0]
   1858          		lasty = y;
   1859          
   1860          		if (previous_touch_state == 0)
   \   00000030   842094E5           LDR      R2,[R4, #+132]
   \   00000034   B40084E5           STR      R0,[R4, #+180]
   \   00000038   04009DE5           LDR      R0,[SP, #+4]
   \   0000003C   B41094E5           LDR      R1,[R4, #+180]
   \   00000040   B80084E5           STR      R0,[R4, #+184]
   \   00000044   000052E3           CMP      R2,#+0
   \   00000048   1500001A           BNE      ??ProcessScreenMovement_2
   1861          		{
   1862          			// Screen just touched - see if any special "buttons" are pressed
   1863          			previous_touch_state = 1;
   \   0000004C   0150A0E3           MOV      R5,#+1
   1864          
   1865          			// Screen just touched - if we just touched the BACK key then start the back key press timer
   1866          			if (TouchPosIsBackKey2(lastx, lasty))
   \   00000050   000051E3           CMP      R1,#+0
   \   00000054   845084E5           STR      R5,[R4, #+132]
   \   00000058   00005053           CMPPL    R0,#+0
   \   0000005C   0600004A           BMI      ??ProcessScreenMovement_3
   \   00000060   3C0051E3           CMP      R1,#+60
   \   00000064   040000AA           BGE      ??ProcessScreenMovement_3
   \   00000068   D50050E3           CMP      R0,#+213
   \   0000006C   020000BA           BLT      ??ProcessScreenMovement_3
   1867          			{
   1868          				StartBackKeyTimer();
   \   00000070   ........           BL       GUI_GetTime
   \   00000074   480084E5           STR      R0,[R4, #+72]
   1869          				return;
   \   00000078   9D0100EA           B        ??ProcessScreenMovement_1
   1870          			}
   1871          			else StartConfigKeyTimer();	// Else check to see if this is a configurable gauge screen 
   \                     ??ProcessScreenMovement_3:
   \   0000007C   ........           BL       StartConfigKeyTimer
   1872          										// and start the configure screen timer if it is
   1873          
   1874          			if (configureGaugeMode == true)				// If we are in configurable gauge mode
   \   00000080   ........           LDR      R0,??DataTable172_2
   \   00000084   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000088   010050E3           CMP      R0,#+1
   \   0000008C   8E01001A           BNE      ??ProcessScreenMovement_4
   1875          			{
   1876          				ProcessGaugeButton(lastx, lasty);		// Send key position info to gauge screen for further processing
   \   00000090   B81094E5           LDR      R1,[R4, #+184]
   \   00000094   B40094E5           LDR      R0,[R4, #+180]
   \   00000098   ........           BL       ProcessGaugeButton
   1877          				GSignoreRelease = true;					// Since the rest of the screen keys respond to release tell to ignore this release
   \   0000009C   C850C4E5           STRB     R5,[R4, #+200]
   \   000000A0   890100EA           B        ??ProcessScreenMovement_4
   1878          			}
   1879          		}
   1880          		else if (TouchPosIsBackKey2(lastx, lasty))		// key still pressed - if this key is the back key
   \                     ??ProcessScreenMovement_2:
   \   000000A4   000051E3           CMP      R1,#+0
   \   000000A8   00005053           CMPPL    R0,#+0
   \   000000AC   1500004A           BMI      ??ProcessScreenMovement_5
   \   000000B0   3C0051E3           CMP      R1,#+60
   \   000000B4   130000AA           BGE      ??ProcessScreenMovement_5
   \   000000B8   D50050E3           CMP      R0,#+213
   \   000000BC   110000BA           BLT      ??ProcessScreenMovement_5
   1881          		{
   1882          			if (BackTimerExpired())						// and it has now been held for the BACK key timeout time
   \   000000C0   ........           BL       GUI_GetTime
   \   000000C4   481094E5           LDR      R1,[R4, #+72]
   \   000000C8   010051E3           CMP      R1,#+1
   \   000000CC   7E0100BA           BLT      ??ProcessScreenMovement_4
   \   000000D0   010040E0           SUB      R0,R0,R1
   \   000000D4   D110A0E3           MOV      R1,#+209
   \   000000D8   701E81E3           ORR      R1,R1,#0x700
   \   000000DC   010050E1           CMP      R0,R1
   \   000000E0   790100BA           BLT      ??ProcessScreenMovement_4
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   480084E5           STR      R0,[R4, #+72]
   1883          				if (configureGaugeMode != true)			// and if we are not in configurable gauge mode
   \   000000EC   ........           LDR      R0,??DataTable172_2
   \   000000F0   0000D0E5           LDRB     R0,[R0, #+0]
   \   000000F4   010050E3           CMP      R0,#+1
   \   000000F8   7301000A           BEQ      ??ProcessScreenMovement_4
   1884          					MoveRight(ALL_THE_WAY);				// process key (jump to main menu)
   \   000000FC   0100A0E3           MOV      R0,#+1
   \   00000100   ........           BL       MoveRight
   \   00000104   700100EA           B        ??ProcessScreenMovement_4
   1885          		}
   1886          		else if (ConfigTimerExpired())
   \                     ??ProcessScreenMovement_5:
   \   00000108   4C0094E5           LDR      R0,[R4, #+76]
   \   0000010C   010050E3           CMP      R0,#+1
   \   00000110   6D0100BA           BLT      ??ProcessScreenMovement_4
   \   00000114   ........           BL       GUI_GetTime
   \   00000118   4C1094E5           LDR      R1,[R4, #+76]
   \   0000011C   010040E0           SUB      R0,R0,R1
   \   00000120   D110A0E3           MOV      R1,#+209
   \   00000124   701E81E3           ORR      R1,R1,#0x700
   \   00000128   010050E1           CMP      R0,R1
   \   0000012C   660100BA           BLT      ??ProcessScreenMovement_4
   \   00000130   0000A0E3           MOV      R0,#+0
   \   00000134   4C0084E5           STR      R0,[R4, #+76]
   1887          		{
   1888          			ConfigureGauge();
   \   00000138   ........           BL       ConfigureGauge
   1889          			GSignoreRelease = true;		// Since the rest of the screen keys respond to release tell to ignore this release
   \   0000013C   0100A0E3           MOV      R0,#+1
   \   00000140   C800C4E5           STRB     R0,[R4, #+200]
   \   00000144   600100EA           B        ??ProcessScreenMovement_4
   1890          		}
   1891          	}
   1892          
   1893          	// Else touch screen not pressed
   1894          	else if (screen_scrolling != HORIZONTAL_ONLY)
   \                     ??ProcessScreenMovement_0:
   \   00000148   680094E5           LDR      R0,[R4, #+104]
   \   0000014C   020050E3           CMP      R0,#+2
   \   00000150   4301000A           BEQ      ??ProcessScreenMovement_6
   1895          	{
   1896          		pressingbutton_semaphore = 0;	// clear semaphore
   1897          		if (previous_touch_state == 1)	// if were just touching
   \   00000154   840094E5           LDR      R0,[R4, #+132]
   \   00000158   0050A0E3           MOV      R5,#+0
   \   0000015C   6C5084E5           STR      R5,[R4, #+108]
   \   00000160   010050E3           CMP      R0,#+1
   \   00000164   2E00001A           BNE      ??ProcessScreenMovement_7
   1898          		{
   1899          			previous_touch_state = 0;	// Calculate position for auto continue
   1900          
   1901          			// We can use this flag more globally than just gauge screens - use for any time we want to ignore the next key release
   1902          			if (GSignoreRelease == true)
   \   00000168   C800D4E5           LDRB     R0,[R4, #+200]
   \   0000016C   845084E5           STR      R5,[R4, #+132]
   \   00000170   010050E3           CMP      R0,#+1
   1903          			{
   1904          				GSignoreRelease = false;
   \   00000174   C850C405           STRBEQ   R5,[R4, #+200]
   1905          				goto skip;
   \   00000178   2900000A           BEQ      ??ProcessScreenMovement_7
   1906          			}
   1907          
   1908          			if (AnyGaugeScreen(GetScreenType()))
   \   0000017C   ........           LDR      R6,??DataTable160
   \   00000180   1400D6E5           LDRB     R0,[R6, #+20]
   \   00000184   020050E3           CMP      R0,#+2
   \   00000188   03005013           CMPNE    R0,#+3
   \   0000018C   04005013           CMPNE    R0,#+4
   \   00000190   1F005013           CMPNE    R0,#+31
   \   00000194   2500000A           BEQ      ??ProcessScreenMovement_8
   1909          			// Jump directly to new screen if touching top or bottom half of screen (gauges screens only)
   1910          			{
   1911          				if ((selectedRaceMode == DRAG_MODE) || (selectedRaceMode == AUTOXRALLY_MODE))
   1912          				{
   1913          					// Drag/Autocross mode selected - see if any processing of the screen touch needs to happen.
   1914          					if (((unsavedSysData.systemMode == DU2_AUTOX_WAITFINISH) || (unsavedSysData.systemMode == DU2_HILLCLIMB_WAITFINISH))
   1915          							&& (selectedRaceMode != DRAG_MODE))		// KMC 2/11/12 - Do not end run in DRAG_MODE
   1916          					{	// Touching the screen in autocross mode is for setting the finish line only when the finish line is not set
   1917          						// Set the finish line and end the run
   1918          						FinishPressed();
   1919          						// Stay on this screen until the user exits manually
   1920          						return;
   1921          					}
   1922          
   1923          					// Otherwise, process normal back action
   1924          					if (TouchPosIsBackKey2(lastx, lasty))
   1925          					{
   1926          						MoveRight(ONE_SCREEN);
   1927          						lastx = lasty = 0;
   1928          					}
   1929          				}
   1930          				// START SLIDEOUT PROCESS!
   1931          				else if (slideoutState == SO_WAITING)
   1932          				{
   1933          #ifdef SUPPORT_AUDIO
   1934          					if (lastx < SLIDEOUT_CLOSE_REGION)
   1935          #else
   1936          					if ((lastx < SLIDEOUT_CLOSE_REGION) || (lasty > SLIDEOUT_CLOSE_REGION_Y))
   1937          #endif
   1938          					{
   1939          						// Pressed outside slideout - fast close slideout
   1940          						WM_RestartTimer(hSlideoutTimer, slideoutStepTime = SLIDEOUT_STEP_FAST_TIME);
   1941          						slideoutStepSize = SLIDEOUT_STEP_FAST_SIZE;
   1942          						CloseSlider();
   1943          					}
   1944          					else ProcessSlideoutKeyPress(lastx, lasty);
   1945          				}
   1946          				else if ((lastx > SLIDEOUT_OPEN_REGION_X) && (lasty < SLIDEOUT_OPEN_REGION_Y))
   1947          				{
   1948          					// Process Slideout
   1949          					if (slideoutState == SO_CLOSED)
   1950          						StartSlideout();
   1951          				}
   1952          				// END SLIDEOUT PROCESS!
   1953          
   1954          				else if (TouchPosIsBackKey2(lastx, lasty))
   1955          				{
   1956          					if (slideoutState != SO_CLOSED)
   1957          						DeleteSlideout();
   1958          
   1959          					if (configureGaugeMode != true)
   1960          					{
   1961          						MoveRight(ONE_SCREEN);
   1962          						lastx = lasty = 0;
   1963          					}
   1964          				}
   1965          				else if (lasty < 110)
   1966          				{
   1967          					if (slideoutState != SO_CLOSED)
   1968          						DeleteSlideout();
   1969          					nextScreen = GetPrevGaugeScreen();
   1970          					RunningGauges(nextScreen, GetRunningGaugesWindowHandle());
   1971          					lastx = lasty = 0;
   1972          				}
   1973          				else if (lasty > 162)
   1974          				{
   1975          					int screenID;
   1976          
   1977          					if (slideoutState != SO_CLOSED)
   1978          						DeleteSlideout();
   1979          					if ((screenID = GetCurrentScreenID()) == DRIVE_MODE_SCREEN)		// Watch out for buttons on DriveMode Screen
   1980          					{
   1981          						if ((lasty > 225) && (lastx > 145))				// These are buttons - leave them alone (give 5 pixel margin)
   1982          							goto skip;
   1983          					}
   1984          					else if (screenID == GMETER)					// Process RESET function before screen scrolling on the GMETER screen
   1985          					{
   1986          						if (TouchPosIsReset(lastx, lasty))
   1987          						{
   1988          							ResetMax();
   1989          							goto skip;
   1990          						}
   1991          					}
   1992          
   1993          					nextScreen = GetNextGaugeScreen();
   1994          					RunningGauges(nextScreen, GetRunningGaugesWindowHandle());
   1995          					lastx = lasty = 0;
   1996          				}
   1997          				else
   1998          				{
   1999          					if (slideoutState != SO_CLOSED)
   2000          						DeleteSlideout();
   2001          				}
   2002          				// Else Drive Mode - see if G-Meter Screen
   2003          				if (GetCurrentScreenID() == GMETER)
   2004          				{
   2005          					if (TouchPosIsReset(lastx, lasty))
   2006          						ResetMax();
   2007          				}
   2008          			}
   2009          			else
   2010          			{
   2011          				if ((lastx > 0) && (lastx < INFO_SIZE_X) && (lasty > 0) && (lasty < INFO_SIZE_Y))
   \   00000198   B41094E5           LDR      R1,[R4, #+180]
   \   0000019C   B80094E5           LDR      R0,[R4, #+184]
   \   000001A0   012041E2           SUB      R2,R1,#+1
   \   000001A4   310052E3           CMP      R2,#+49
   \   000001A8   2701003A           BCC      ??ProcessScreenMovement_9
   2012          					CheckForInfoKey(false);
   2013          				else if (TouchPosIsBackKey2(lastx, lasty))
   \                     ??ProcessScreenMovement_10:
   \   000001AC   000051E3           CMP      R1,#+0
   \   000001B0   00005053           CMPPL    R0,#+0
   \   000001B4   1A00004A           BMI      ??ProcessScreenMovement_7
   \   000001B8   3C0051E3           CMP      R1,#+60
   \   000001BC   180000AA           BGE      ??ProcessScreenMovement_7
   \   000001C0   D50050E3           CMP      R0,#+213
   \   000001C4   160000BA           BLT      ??ProcessScreenMovement_7
   2014          				{
   2015          					if (slideoutState != SO_CLOSED)
   \   000001C8   C400D4E5           LDRB     R0,[R4, #+196]
   \   000001CC   000050E3           CMP      R0,#+0
   \   000001D0   1200000A           BEQ      ??ProcessScreenMovement_11
   2016          						DeleteSlideout();
   \   000001D4   780FA0E3           MOV      R0,#+480
   \   000001D8   3C0084E5           STR      R0,[R4, #+60]
   \   000001DC   C450C4E5           STRB     R5,[R4, #+196]
   \   000001E0   580094E5           LDR      R0,[R4, #+88]
   \   000001E4   ........           BL       GUI_SPRITE_Delete
   \   000001E8   600094E5           LDR      R0,[R4, #+96]
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   0500000A           BEQ      ??ProcessScreenMovement_12
   \   000001F4   5C0094E5           LDR      R0,[R4, #+92]
   \   000001F8   ........           BL       GUI_SPRITE_Delete
   \   000001FC   600094E5           LDR      R0,[R4, #+96]
   \   00000200   ........           BL       GUI_SPRITE_Delete
   \   00000204   640094E5           LDR      R0,[R4, #+100]
   \   00000208   ........           BL       GUI_SPRITE_Delete
   \                     ??ProcessScreenMovement_12:
   \   0000020C   645084E5           STR      R5,[R4, #+100]
   \   00000210   5C5084E5           STR      R5,[R4, #+92]
   \   00000214   605084E5           STR      R5,[R4, #+96]
   \   00000218   585084E5           STR      R5,[R4, #+88]
   2017          // hitting navigation key = back
   2018          					MoveRight(ONE_SCREEN);
   \   0000021C   0000A0E3           MOV      R0,#+0
   \                     ??ProcessScreenMovement_11:
   \   00000220   ........           BL       MoveRight
   2019          					lastx = lasty = 0;
   2020          				}
   2021          			}
   2022          		}
   2023          skip:
   2024          	lastx = lasty = 0;
   \                     ??ProcessScreenMovement_7:
   \   00000224   B85084E5           STR      R5,[R4, #+184]
   \   00000228   B45084E5           STR      R5,[R4, #+180]
   \   0000022C   260100EA           B        ??ProcessScreenMovement_4
   \                     ??ProcessScreenMovement_8:
   \   00000230   C600D4E5           LDRB     R0,[R4, #+198]
   \   00000234   040050E3           CMP      R0,#+4
   \   00000238   01005013           CMPNE    R0,#+1
   \   0000023C   1600001A           BNE      ??ProcessScreenMovement_13
   \   00000240   ........           LDR      R1,??DataTable172_3
   \   00000244   8810D1E5           LDRB     R1,[R1, #+136]
   \   00000248   110051E3           CMP      R1,#+17
   \   0000024C   12005113           CMPNE    R1,#+18
   \   00000250   0300001A           BNE      ??ProcessScreenMovement_14
   \   00000254   040050E3           CMP      R0,#+4
   \   00000258   0100000A           BEQ      ??ProcessScreenMovement_14
   \   0000025C   ........           BL       notifyFinishSet
   \   00000260   230100EA           B        ??ProcessScreenMovement_1
   \                     ??ProcessScreenMovement_14:
   \   00000264   B41094E5           LDR      R1,[R4, #+180]
   \   00000268   B80094E5           LDR      R0,[R4, #+184]
   \   0000026C   000051E3           CMP      R1,#+0
   \   00000270   00005053           CMPPL    R0,#+0
   \   00000274   D900004A           BMI      ??ProcessScreenMovement_15
   \   00000278   3C0051E3           CMP      R1,#+60
   \   0000027C   D70000AA           BGE      ??ProcessScreenMovement_15
   \   00000280   D50050E3           CMP      R0,#+213
   \   00000284   D50000BA           BLT      ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_16:
   \   00000288   0000A0E3           MOV      R0,#+0
   \   0000028C   ........           BL       MoveRight
   \                     ??ProcessScreenMovement_17:
   \   00000290   B85084E5           STR      R5,[R4, #+184]
   \   00000294   B45084E5           STR      R5,[R4, #+180]
   \   00000298   D00000EA           B        ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_13:
   \   0000029C   C420D4E5           LDRB     R2,[R4, #+196]
   \   000002A0   B41094E5           LDR      R1,[R4, #+180]
   \   000002A4   030052E3           CMP      R2,#+3
   \   000002A8   3000001A           BNE      ??ProcessScreenMovement_18
   \   000002AC   420F51E3           CMP      R1,#+264
   \   000002B0   020000BA           BLT      ??ProcessScreenMovement_19
   \   000002B4   B80094E5           LDR      R0,[R4, #+184]
   \   000002B8   BC0050E3           CMP      R0,#+188
   \   000002BC   0B0000BA           BLT      ??ProcessScreenMovement_20
   \                     ??ProcessScreenMovement_19:
   \   000002C0   0A00A0E3           MOV      R0,#+10
   \   000002C4   540084E5           STR      R0,[R4, #+84]
   \   000002C8   0A10A0E3           MOV      R1,#+10
   \   000002CC   440094E5           LDR      R0,[R4, #+68]
   \   000002D0   ........           BL       WM_RestartTimer
   \   000002D4   6400A0E3           MOV      R0,#+100
   \   000002D8   500084E5           STR      R0,[R4, #+80]
   \   000002DC   0200A0E3           MOV      R0,#+2
   \   000002E0   C400C4E5           STRB     R0,[R4, #+196]
   \   000002E4   ........           BL       ResumeLEDUpdates
   \   000002E8   ........           BL       ResumeEnvironmentalUpdates
   \   000002EC   BB0000EA           B        ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_20:
   \   000002F0   660F51E3           CMP      R1,#+408
   \   000002F4   0E0000AA           BGE      ??ProcessScreenMovement_21
   \   000002F8   5320A0E3           MOV      R2,#+83
   \   000002FC   402F82E3           ORR      R2,R2,#0x100
   \   00000300   020051E1           CMP      R1,R2
   \   00000304   140000AA           BGE      ??ProcessScreenMovement_22
   \   00000308   6E0050E3           CMP      R0,#+110
   \   0000030C   050000AA           BGE      ??ProcessScreenMovement_23
   \   00000310   240050E3           CMP      R0,#+36
   \   00000314   100000BA           BLT      ??ProcessScreenMovement_22
   \   00000318   0100A0E3           MOV      R0,#+1
   \   0000031C   ........           BL       SuspendLEDUpdates
   \   00000320   ........           BL       DecreaseLEDBrightness
   \   00000324   0C0000EA           B        ??ProcessScreenMovement_22
   \                     ??ProcessScreenMovement_23:
   \   00000328   ........           BL       ResumeLEDUpdates
   \   0000032C   ........           BL       DecreaseBacklightBrightness
   \   00000330   090000EA           B        ??ProcessScreenMovement_22
   \                     ??ProcessScreenMovement_21:
   \   00000334   6E0050E3           CMP      R0,#+110
   \   00000338   050000AA           BGE      ??ProcessScreenMovement_24
   \   0000033C   240050E3           CMP      R0,#+36
   \   00000340   050000BA           BLT      ??ProcessScreenMovement_22
   \   00000344   0100A0E3           MOV      R0,#+1
   \   00000348   ........           BL       SuspendLEDUpdates
   \   0000034C   ........           BL       IncreaseLEDBrightness
   \   00000350   010000EA           B        ??ProcessScreenMovement_22
   \                     ??ProcessScreenMovement_24:
   \   00000354   ........           BL       ResumeLEDUpdates
   \   00000358   ........           BL       IncreaseBacklightBrightness
   \                     ??ProcessScreenMovement_22:
   \   0000035C   8810A0E3           MOV      R1,#+136
   \   00000360   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000364   440094E5           LDR      R0,[R4, #+68]
   \   00000368   ........           BL       WM_RestartTimer
   \   0000036C   9B0000EA           B        ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_18:
   \   00000370   5F30A0E3           MOV      R3,#+95
   \   00000374   403F83E3           ORR      R3,R3,#0x100
   \   00000378   B80094E5           LDR      R0,[R4, #+184]
   \   0000037C   030051E1           CMP      R1,R3
   \   00000380   050000BA           BLT      ??ProcessScreenMovement_25
   \   00000384   E10050E3           CMP      R0,#+225
   \   00000388   030000AA           BGE      ??ProcessScreenMovement_25
   \   0000038C   000052E3           CMP      R2,#+0
   \   00000390   9200001A           BNE      ??ProcessScreenMovement_15
   \   00000394   ........           BL       StartSlideout
   \   00000398   900000EA           B        ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_25:
   \   0000039C   000051E3           CMP      R1,#+0
   \   000003A0   00005053           CMPPL    R0,#+0
   \   000003A4   1C00004A           BMI      ??ProcessScreenMovement_26
   \   000003A8   3C0051E3           CMP      R1,#+60
   \   000003AC   1A0000AA           BGE      ??ProcessScreenMovement_26
   \   000003B0   D50050E3           CMP      R0,#+213
   \   000003B4   180000BA           BLT      ??ProcessScreenMovement_26
   \   000003B8   000052E3           CMP      R2,#+0
   \   000003BC   1100000A           BEQ      ??ProcessScreenMovement_27
   \   000003C0   780FA0E3           MOV      R0,#+480
   \   000003C4   3C0084E5           STR      R0,[R4, #+60]
   \   000003C8   C450C4E5           STRB     R5,[R4, #+196]
   \   000003CC   580094E5           LDR      R0,[R4, #+88]
   \   000003D0   ........           BL       GUI_SPRITE_Delete
   \   000003D4   600094E5           LDR      R0,[R4, #+96]
   \   000003D8   000050E3           CMP      R0,#+0
   \   000003DC   0500000A           BEQ      ??ProcessScreenMovement_28
   \   000003E0   5C0094E5           LDR      R0,[R4, #+92]
   \   000003E4   ........           BL       GUI_SPRITE_Delete
   \   000003E8   600094E5           LDR      R0,[R4, #+96]
   \   000003EC   ........           BL       GUI_SPRITE_Delete
   \   000003F0   640094E5           LDR      R0,[R4, #+100]
   \   000003F4   ........           BL       GUI_SPRITE_Delete
   \                     ??ProcessScreenMovement_28:
   \   000003F8   645084E5           STR      R5,[R4, #+100]
   \   000003FC   5C5084E5           STR      R5,[R4, #+92]
   \   00000400   605084E5           STR      R5,[R4, #+96]
   \   00000404   585084E5           STR      R5,[R4, #+88]
   \                     ??ProcessScreenMovement_27:
   \   00000408   ........           LDR      R0,??DataTable172_2
   \   0000040C   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000410   010050E3           CMP      R0,#+1
   \   00000414   9BFFFF1A           BNE      ??ProcessScreenMovement_16
   \   00000418   700000EA           B        ??ProcessScreenMovement_15
   \                     ??ProcessScreenMovement_26:
   \   0000041C   6E0050E3           CMP      R0,#+110
   \   00000420   1A0000AA           BGE      ??ProcessScreenMovement_29
   \   00000424   000052E3           CMP      R2,#+0
   \   00000428   1100000A           BEQ      ??ProcessScreenMovement_30
   \   0000042C   780FA0E3           MOV      R0,#+480
   \   00000430   3C0084E5           STR      R0,[R4, #+60]
   \   00000434   C450C4E5           STRB     R5,[R4, #+196]
   \   00000438   580094E5           LDR      R0,[R4, #+88]
   \   0000043C   ........           BL       GUI_SPRITE_Delete
   \   00000440   600094E5           LDR      R0,[R4, #+96]
   \   00000444   000050E3           CMP      R0,#+0
   \   00000448   0500000A           BEQ      ??ProcessScreenMovement_31
   \   0000044C   5C0094E5           LDR      R0,[R4, #+92]
   \   00000450   ........           BL       GUI_SPRITE_Delete
   \   00000454   600094E5           LDR      R0,[R4, #+96]
   \   00000458   ........           BL       GUI_SPRITE_Delete
   \   0000045C   640094E5           LDR      R0,[R4, #+100]
   \   00000460   ........           BL       GUI_SPRITE_Delete
   \                     ??ProcessScreenMovement_31:
   \   00000464   645084E5           STR      R5,[R4, #+100]
   \   00000468   5C5084E5           STR      R5,[R4, #+92]
   \   0000046C   605084E5           STR      R5,[R4, #+96]
   \   00000470   585084E5           STR      R5,[R4, #+88]
   \                     ??ProcessScreenMovement_30:
   \   00000474   ........           BL       GetPrevGaugeScreen
   \   00000478   880084E5           STR      R0,[R4, #+136]
   \   0000047C   ........           BL       GetRunningGaugesWindowHandle
   \   00000480   0010A0E1           MOV      R1,R0
   \   00000484   880094E5           LDR      R0,[R4, #+136]
   \   00000488   ........           BL       RunningGauges
   \   0000048C   7FFFFFEA           B        ??ProcessScreenMovement_17
   \                     ??ProcessScreenMovement_29:
   \   00000490   A30050E3           CMP      R0,#+163
   \   00000494   3D0000BA           BLT      ??ProcessScreenMovement_32
   \   00000498   000052E3           CMP      R2,#+0
   \   0000049C   1100000A           BEQ      ??ProcessScreenMovement_33
   \   000004A0   780FA0E3           MOV      R0,#+480
   \   000004A4   3C0084E5           STR      R0,[R4, #+60]
   \   000004A8   C450C4E5           STRB     R5,[R4, #+196]
   \   000004AC   580094E5           LDR      R0,[R4, #+88]
   \   000004B0   ........           BL       GUI_SPRITE_Delete
   \   000004B4   600094E5           LDR      R0,[R4, #+96]
   \   000004B8   000050E3           CMP      R0,#+0
   \   000004BC   0500000A           BEQ      ??ProcessScreenMovement_34
   \   000004C0   5C0094E5           LDR      R0,[R4, #+92]
   \   000004C4   ........           BL       GUI_SPRITE_Delete
   \   000004C8   600094E5           LDR      R0,[R4, #+96]
   \   000004CC   ........           BL       GUI_SPRITE_Delete
   \   000004D0   640094E5           LDR      R0,[R4, #+100]
   \   000004D4   ........           BL       GUI_SPRITE_Delete
   \                     ??ProcessScreenMovement_34:
   \   000004D8   645084E5           STR      R5,[R4, #+100]
   \   000004DC   5C5084E5           STR      R5,[R4, #+92]
   \   000004E0   605084E5           STR      R5,[R4, #+96]
   \   000004E4   585084E5           STR      R5,[R4, #+88]
   \                     ??ProcessScreenMovement_33:
   \   000004E8   1400D6E5           LDRB     R0,[R6, #+20]
   \   000004EC   030050E3           CMP      R0,#+3
   \   000004F0   0500000A           BEQ      ??ProcessScreenMovement_35
   \   000004F4   0700003A           BCC      ??ProcessScreenMovement_36
   \   000004F8   040050E3           CMP      R0,#+4
   \   000004FC   0500001A           BNE      ??ProcessScreenMovement_36
   \   00000500   ........           BL       GetLastScreen
   \   00000504   ........           LDR      R1,??DataTable172_4
   \   00000508   050000EA           B        ??ProcessScreenMovement_37
   \                     ??ProcessScreenMovement_35:
   \   0000050C   ........           BL       GetLastScreen
   \   00000510   ........           LDR      R1,??DataTable172_5
   \   00000514   020000EA           B        ??ProcessScreenMovement_37
   \                     ??ProcessScreenMovement_36:
   \   00000518   0200A0E3           MOV      R0,#+2
   \   0000051C   ........           BL       GetLastScreen
   \   00000520   ........           LDR      R1,??DataTable172_6
   \                     ??ProcessScreenMovement_37:
   \   00000524   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   \   00000528   050050E3           CMP      R0,#+5
   \   0000052C   0B00001A           BNE      ??ProcessScreenMovement_38
   \   00000530   B80094E5           LDR      R0,[R4, #+184]
   \   00000534   E20050E3           CMP      R0,#+226
   \   00000538   B40094A5           LDRGE    R0,[R4, #+180]
   \   0000053C   920050A3           CMPGE    R0,#+146
   \   00000540   37FFFFAA           BGE      ??ProcessScreenMovement_7
   \                     ??ProcessScreenMovement_39:
   \   00000544   ........           BL       GetNextGaugeScreen
   \   00000548   880084E5           STR      R0,[R4, #+136]
   \   0000054C   ........           BL       GetRunningGaugesWindowHandle
   \   00000550   0010A0E1           MOV      R1,R0
   \   00000554   880094E5           LDR      R0,[R4, #+136]
   \   00000558   ........           BL       RunningGauges
   \   0000055C   4BFFFFEA           B        ??ProcessScreenMovement_17
   \                     ??ProcessScreenMovement_38:
   \   00000560   000050E3           CMP      R0,#+0
   \   00000564   F6FFFF1A           BNE      ??ProcessScreenMovement_39
   \   00000568   B40094E5           LDR      R0,[R4, #+180]
   \   0000056C   650040E2           SUB      R0,R0,#+101
   \   00000570   C70050E3           CMP      R0,#+199
   \   00000574   F2FFFF2A           BCS      ??ProcessScreenMovement_39
   \   00000578   B80094E5           LDR      R0,[R4, #+184]
   \   0000057C   650040E2           SUB      R0,R0,#+101
   \   00000580   630050E3           CMP      R0,#+99
   \   00000584   EEFFFF2A           BCS      ??ProcessScreenMovement_39
   \                     ??ProcessScreenMovement_40:
   \   00000588   ........           BL       ResetMax
   \   0000058C   24FFFFEA           B        ??ProcessScreenMovement_7
   \                     ??ProcessScreenMovement_32:
   \   00000590   000052E3           CMP      R2,#+0
   \   00000594   1100000A           BEQ      ??ProcessScreenMovement_15
   \   00000598   780FA0E3           MOV      R0,#+480
   \   0000059C   3C0084E5           STR      R0,[R4, #+60]
   \   000005A0   C450C4E5           STRB     R5,[R4, #+196]
   \   000005A4   580094E5           LDR      R0,[R4, #+88]
   \   000005A8   ........           BL       GUI_SPRITE_Delete
   \   000005AC   600094E5           LDR      R0,[R4, #+96]
   \   000005B0   000050E3           CMP      R0,#+0
   \   000005B4   0500000A           BEQ      ??ProcessScreenMovement_41
   \   000005B8   5C0094E5           LDR      R0,[R4, #+92]
   \   000005BC   ........           BL       GUI_SPRITE_Delete
   \   000005C0   600094E5           LDR      R0,[R4, #+96]
   \   000005C4   ........           BL       GUI_SPRITE_Delete
   \   000005C8   640094E5           LDR      R0,[R4, #+100]
   \   000005CC   ........           BL       GUI_SPRITE_Delete
   \                     ??ProcessScreenMovement_41:
   \   000005D0   645084E5           STR      R5,[R4, #+100]
   \   000005D4   5C5084E5           STR      R5,[R4, #+92]
   \   000005D8   605084E5           STR      R5,[R4, #+96]
   \   000005DC   585084E5           STR      R5,[R4, #+88]
   \                     ??ProcessScreenMovement_15:
   \   000005E0   1400D6E5           LDRB     R0,[R6, #+20]
   \   000005E4   030050E3           CMP      R0,#+3
   \   000005E8   0500000A           BEQ      ??ProcessScreenMovement_42
   \   000005EC   0700003A           BCC      ??ProcessScreenMovement_43
   \   000005F0   040050E3           CMP      R0,#+4
   \   000005F4   0500001A           BNE      ??ProcessScreenMovement_43
   \   000005F8   ........           BL       GetLastScreen
   \   000005FC   ........           LDR      R1,??DataTable172_4
   \   00000600   050000EA           B        ??ProcessScreenMovement_44
   \                     ??ProcessScreenMovement_42:
   \   00000604   ........           BL       GetLastScreen
   \   00000608   ........           LDR      R1,??DataTable172_5
   \   0000060C   020000EA           B        ??ProcessScreenMovement_44
   \                     ??ProcessScreenMovement_43:
   \   00000610   0200A0E3           MOV      R0,#+2
   \   00000614   ........           BL       GetLastScreen
   \   00000618   ........           LDR      R1,??DataTable172_6
   \                     ??ProcessScreenMovement_44:
   \   0000061C   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   \   00000620   000050E3           CMP      R0,#+0
   \   00000624   FEFEFF1A           BNE      ??ProcessScreenMovement_7
   \   00000628   B40094E5           LDR      R0,[R4, #+180]
   \   0000062C   650040E2           SUB      R0,R0,#+101
   \   00000630   C70050E3           CMP      R0,#+199
   \   00000634   FAFEFF2A           BCS      ??ProcessScreenMovement_7
   \   00000638   B80094E5           LDR      R0,[R4, #+184]
   \   0000063C   650040E2           SUB      R0,R0,#+101
   \   00000640   630050E3           CMP      R0,#+99
   \   00000644   F6FEFF2A           BCS      ??ProcessScreenMovement_7
   \   00000648   CEFFFFEA           B        ??ProcessScreenMovement_40
   \                     ??ProcessScreenMovement_9:
   \   0000064C   012040E2           SUB      R2,R0,#+1
   \   00000650   310052E3           CMP      R2,#+49
   \   00000654   D4FEFF2A           BCS      ??ProcessScreenMovement_10
   \   00000658   0000A0E3           MOV      R0,#+0
   \   0000065C   ........           BL       CheckForInfoKey
   \   00000660   EFFEFFEA           B        ??ProcessScreenMovement_7
   2025          	}
   2026          	else
   2027          	{
   2028          		if ((lastx > 0) && (lastx < INFO_SIZE_X) && (lasty > 0) && (lasty < INFO_SIZE_Y))
   \                     ??ProcessScreenMovement_6:
   \   00000664   B41094E5           LDR      R1,[R4, #+180]
   \   00000668   B80094E5           LDR      R0,[R4, #+184]
   \   0000066C   012041E2           SUB      R2,R1,#+1
   \   00000670   310052E3           CMP      R2,#+49
   \   00000674   01204032           SUBCC    R2,R0,#+1
   \   00000678   31005233           CMPCC    R2,#+49
   \   0000067C   0300002A           BCS      ??ProcessScreenMovement_45
   2029          		{
   2030          			CheckForInfoKey(false);
   \   00000680   0000A0E3           MOV      R0,#+0
   \   00000684   ........           BL       CheckForInfoKey
   2031          			lastx = lasty = 0;
   \   00000688   0050A0E3           MOV      R5,#+0
   \   0000068C   E4FEFFEA           B        ??ProcessScreenMovement_7
   2032          		}
   2033          		else if (TouchPosIsBackKey2(lastx, lasty))
   \                     ??ProcessScreenMovement_45:
   \   00000690   000051E3           CMP      R1,#+0
   \   00000694   00005053           CMPPL    R0,#+0
   \   00000698   0700004A           BMI      ??ProcessScreenMovement_46
   \   0000069C   3C0051E3           CMP      R1,#+60
   \   000006A0   050000AA           BGE      ??ProcessScreenMovement_46
   \   000006A4   D50050E3           CMP      R0,#+213
   \   000006A8   030000BA           BLT      ??ProcessScreenMovement_46
   2034          		{
   2035          // hitting navigation key = back
   2036          			MoveRight(ONE_SCREEN);
   \   000006AC   0000A0E3           MOV      R0,#+0
   \   000006B0   ........           BL       MoveRight
   2037          			lastx = lasty = 0;
   \   000006B4   0050A0E3           MOV      R5,#+0
   \   000006B8   D9FEFFEA           B        ??ProcessScreenMovement_7
   2038          		}
   2039          		else
   2040          		{
   2041          			lastx = lasty = 0;
   \                     ??ProcessScreenMovement_46:
   \   000006BC   0050A0E3           MOV      R5,#+0
   \   000006C0   B85084E5           STR      R5,[R4, #+184]
   \   000006C4   B45084E5           STR      R5,[R4, #+180]
   2042          			previous_touch_state = 0;
   \   000006C8   845084E5           STR      R5,[R4, #+132]
   2043          		}
   2044          	}
   2045          
   2046          	//
   2047          	// If currently racing check to see if the SU has timed out of record mode (timeout after stop)
   2048          	// If timedout perform GUI exit race mode processing.
   2049          	//
   2050          	if (raceModeState == RM_RACING)
   \                     ??ProcessScreenMovement_4:
   \   000006CC   C500D4E5           LDRB     R0,[R4, #+197]
   \   000006D0   0B0050E3           CMP      R0,#+11
   \   000006D4   0600001A           BNE      ??ProcessScreenMovement_1
   2051          	{
   2052          		if (CheckForStopRecord())
   \   000006D8   ........           LDR      R1,??DataTable172_3
   \   000006DC   D400D1E5           LDRB     R0,[R1, #+212]
   \   000006E0   010050E3           CMP      R0,#+1
   \   000006E4   0200001A           BNE      ??ProcessScreenMovement_1
   \   000006E8   0000A0E3           MOV      R0,#+0
   \   000006EC   D400C1E5           STRB     R0,[R1, #+212]
   2053          			MoveRight(ONE_SCREEN);
   \   000006F0   ........           BL       MoveRight
   \                     ??ProcessScreenMovement_1:
   \   000006F4   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000006F8   7080BDE8           POP      {R4-R6,PC}       ;; return
   2054          	}
   2055          }
   2056          
   2057          
   2058          // KMC TODO - note that this needs to be added to sysData struct.  When we do that there will be a change of
   2059          // file format for the config file.  So hold off adding this until we're really ready to add audio!
   2060          // In the meantime here's a working variable to we can see the control bahave correctly.
   2061          #ifdef SUPPORT_AUDIO
   2062          int audioMuted = 0;
   2063          #endif
   2064          
   2065          #define	NONE					0
   2066          #define	VOLUME_DOWN				1	
   2067          #define	MUTE					2
   2068          #define	VOLUME_UP				3
   2069          #define	SHIFT_LIGHTS_DIMMER		4
   2070          #define	BLANK_1					5
   2071          #define	SHIFT_LIGHTS_BRIGHTER	6
   2072          #define	BACKLIGHT_DIMMER		7
   2073          #define	BLANK_2					8
   2074          #define	BACKLIGHT_BRIGHTER		9
   2075          
   2076          #define	BOTTOM_COLUMN	408
   2077          #define	MIDDLE_COLUMN	339
   2078          #define	TOP_COLUMN		264
   2079          
   2080          #ifdef SUPPORT_AUDIO
   2081          #define	MIDDLE_ROW	178
   2082          #define	TOP_ROW		92
   2083          #else
   2084          #define	MIDDLE_ROW	110
   2085          #define	TOP_ROW		36
   2086          #endif
   2087          

   \                                 In section .text, align 4, keep-with-next
   2088          void ProcessSlideoutKeyPress(int lastx, int lasty)
   2089          {
   \                     ProcessSlideoutKeyPress:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   2090          	int key = NONE;
   2091          
   2092          	// Determine key press
   2093          #ifdef SUPPORT_AUDIO
   2094          	if (lastx >= BOTTOM_COLUMN)
   2095          	{
   2096          		if (lasty >= MIDDLE_ROW)
   2097          			key = BACKLIGHT_BRIGHTER;
   2098          		else if (lasty >= TOP_ROW)
   2099          			key = SHIFT_LIGHTS_BRIGHTER;
   2100          		else key = VOLUME_UP;
   2101          	}
   2102          	else if (lastx >= MIDDLE_COLUMN)
   2103          	{
   2104          		if (lasty >= MIDDLE_ROW)
   2105          			key = BLANK_2;
   2106          		else if (lasty >= TOP_ROW)
   2107          			key = BLANK_1;
   2108          		else key = MUTE;
   2109          	}
   2110          	else if (lastx >= TOP_COLUMN)
   2111          	{
   2112          		if (lasty >= MIDDLE_ROW)
   2113          			key = BACKLIGHT_DIMMER;
   2114          		else if (lasty >= TOP_ROW)
   2115          			key = SHIFT_LIGHTS_DIMMER;
   2116          		else key = VOLUME_DOWN;
   2117          	}
   2118          #else
   2119          	if (lastx >= BOTTOM_COLUMN)
   \   00000008   660F50E3           CMP      R0,#+408
   \   0000000C   0A0000BA           BLT      ??ProcessSlideoutKeyPress_0
   2120          	{
   2121          		if (lasty >= MIDDLE_ROW)
   \   00000010   6E0051E3           CMP      R1,#+110
   \   00000014   020000BA           BLT      ??ProcessSlideoutKeyPress_1
   2122          			key = BACKLIGHT_BRIGHTER;
   2123          		else if (lasty >= TOP_ROW)
   2124          			key = SHIFT_LIGHTS_BRIGHTER;
   2125          	}
   2126          	else if (lastx >= MIDDLE_COLUMN)
   2127          	{
   2128          		if (lasty >= MIDDLE_ROW)
   2129          			key = BLANK_2;
   2130          		else if (lasty >= TOP_ROW)
   2131          			key = BLANK_1;
   2132          	}
   2133          	else if (lastx >= TOP_COLUMN)
   2134          	{
   2135          		if (lasty >= MIDDLE_ROW)
   2136          			key = BACKLIGHT_DIMMER;
   2137          		else if (lasty >= TOP_ROW)
   2138          			key = SHIFT_LIGHTS_DIMMER;
   2139          	}
   2140          #endif
   2141          
   2142          	// Process key (note: this could be combined with above but I wanted to make it clean and easy to read (you're welcome)
   2143          	switch (key)
   2144          	{
   2145          #ifdef SUPPORT_AUDIO
   2146          	case MUTE:
   2147          		ResumeLEDUpdates();					// Resume RPM and warning control of the LEDs and reset autoDimming algorithm
   2148          		if (audioMuted)
   2149          		{
   2150          			audioMuted = false;
   2151          			GUI_SPRITE_SetBitmap(hSlideout, &bmSlideOut);
   2152          		}
   2153          		else
   2154          		{
   2155          			audioMuted = true;
   2156          			GUI_SPRITE_SetBitmap(hSlideout, &bmSlideOutMuted);
   2157          		}
   2158          		break;
   2159          	case VOLUME_DOWN:
   2160          	case VOLUME_UP:
   2161          		ResumeLEDUpdates();						// Resume RPM and warning control of the LEDs and reset autoDimming algorithm
   2162          		break;
   2163          #endif
   2164          
   2165          	case SHIFT_LIGHTS_DIMMER:
   2166          		SuspendLEDUpdates(true);				// Suspend RPM and warning control of the LEDs and turn ON
   2167          		DecreaseLEDBrightness();
   2168          		break;
   2169          
   2170          	case SHIFT_LIGHTS_BRIGHTER:
   2171          		SuspendLEDUpdates(true);				// Suspend RPM and warning control of the LEDs and turn ON
   2172          		IncreaseLEDBrightness();
   2173          		break;
   2174          
   2175          	case BACKLIGHT_DIMMER:
   2176          		ResumeLEDUpdates();						// Resume RPM and warning control of the LEDs and reset autoDimming algorithm
   2177          		DecreaseBacklightBrightness();
   2178          		break;
   2179          
   2180          	case BACKLIGHT_BRIGHTER:
   2181          		ResumeLEDUpdates();						// Resume RPM and warning control of the LEDs and reset autoDimming algorithm
   \   00000018   ........           BL       ResumeLEDUpdates
   2182          		IncreaseBacklightBrightness();
   \   0000001C   ........           BL       IncreaseBacklightBrightness
   2183          		break;
   \   00000020   150000EA           B        ??ProcessSlideoutKeyPress_2
   \                     ??ProcessSlideoutKeyPress_1:
   \   00000024   240051E3           CMP      R1,#+36
   \   00000028   130000BA           BLT      ??ProcessSlideoutKeyPress_2
   \   0000002C   0100A0E3           MOV      R0,#+1
   \   00000030   ........           BL       SuspendLEDUpdates
   \   00000034   ........           BL       IncreaseLEDBrightness
   \   00000038   0F0000EA           B        ??ProcessSlideoutKeyPress_2
   \                     ??ProcessSlideoutKeyPress_0:
   \   0000003C   5320A0E3           MOV      R2,#+83
   \   00000040   402F82E3           ORR      R2,R2,#0x100
   \   00000044   020050E1           CMP      R0,R2
   \   00000048   0B0000AA           BGE      ??ProcessSlideoutKeyPress_2
   \   0000004C   420F50E3           CMP      R0,#+264
   \   00000050   090000BA           BLT      ??ProcessSlideoutKeyPress_2
   \   00000054   6E0051E3           CMP      R1,#+110
   \   00000058   020000BA           BLT      ??ProcessSlideoutKeyPress_3
   \   0000005C   ........           BL       ResumeLEDUpdates
   \   00000060   ........           BL       DecreaseBacklightBrightness
   \   00000064   040000EA           B        ??ProcessSlideoutKeyPress_2
   \                     ??ProcessSlideoutKeyPress_3:
   \   00000068   240051E3           CMP      R1,#+36
   \   0000006C   020000BA           BLT      ??ProcessSlideoutKeyPress_2
   \   00000070   0100A0E3           MOV      R0,#+1
   \   00000074   ........           BL       SuspendLEDUpdates
   \   00000078   ........           BL       DecreaseLEDBrightness
   2184          
   2185          	default:
   2186          	case NONE:
   2187          	case BLANK_1:
   2188          	case BLANK_2:
   2189          		break;
   2190          	}
   2191          
   2192          	WM_RestartTimer(hSlideoutTimer, SLIDEOUT_OPEN_TIME);
   \                     ??ProcessSlideoutKeyPress_2:
   \   0000007C   ........           LDR      R0,??CheckForInfoKey_8
   \   00000080   04D08DE2           ADD      SP,SP,#+4
   \   00000084   8810A0E3           MOV      R1,#+136
   \   00000088   0040BDE8           POP      {LR}
   \   0000008C   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000090   440090E5           LDR      R0,[R0, #+68]
   \   00000094   ........           B        WM_RestartTimer  ;; tailcall
   2193          }
   2194          

   \                                 In section .text, align 4, keep-with-next
   2195          void StartSlideout(void)
   2196          {
   \                     StartSlideout:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2197          	const GUI_BITMAP *pGraphic;
   2198          
   2199          	slideoutState = SO_OPENING;
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   0100A0E3           MOV      R0,#+1
   \   0000000C   C400C4E5           STRB     R0,[R4, #+196]
   2200          
   2201          	GUI_GetOrg(&slideoutXPos, &slideoutYPos);
   \   00000010   401084E2           ADD      R1,R4,#+64
   \   00000014   3C0084E2           ADD      R0,R4,#+60
   \   00000018   ........           BL       GUI_GetOrg
   2202          #ifdef SUPPORT_AUDIO
   2203          	if (audioMuted)
   2204          		pGraphic = &bmSlideOutMuted;
   2205          	else pGraphic = &bmSlideOut;
   2206          #else
   2207          	pGraphic = &bmNoAudioSlideout;
   2208          #endif
   2209          
   2210          	slideoutXPos = XSIZE_PHYS;
   \   0000001C   780FA0E3           MOV      R0,#+480
   \   00000020   3C0084E5           STR      R0,[R4, #+60]
   2211          	// Top most sprites are the FIRST ones created (even though the manual says the opposite!)
   2212          	// So create icons first
   2213          	hSUStatusSprite = GUI_SPRITE_Create(GetSUStatusIcon(), slideoutXPos + SU_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   00000024   ........           BL       GetSUStatusIcon
   \   00000028   3C1094E5           LDR      R1,[R4, #+60]
   \   0000002C   402094E5           LDR      R2,[R4, #+64]
   \   00000030   7A1081E2           ADD      R1,R1,#+122
   \   00000034   ........           BL       GUI_SPRITE_Create
   \   00000038   5C0084E5           STR      R0,[R4, #+92]
   2214          	hSignalStrengthSprite = GUI_SPRITE_Create(SlideoutGetSignalStrengthIcon(), slideoutXPos + SIGSTRN_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   0000003C   ........           BL       SlideoutGetSignalStrengthIcon
   \   00000040   3C1094E5           LDR      R1,[R4, #+60]
   \   00000044   402094E5           LDR      R2,[R4, #+64]
   \   00000048   CA1081E2           ADD      R1,R1,#+202
   \   0000004C   ........           BL       GUI_SPRITE_Create
   \   00000050   640084E5           STR      R0,[R4, #+100]
   2215          	hCameraSprite = GUI_SPRITE_Create(GetCameraIcon(), slideoutXPos + CAMERA_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   00000054   ........           BL       GetCameraIcon
   \   00000058   3C1094E5           LDR      R1,[R4, #+60]
   \   0000005C   402094E5           LDR      R2,[R4, #+64]
   \   00000060   A51081E2           ADD      R1,R1,#+165
   \   00000064   ........           BL       GUI_SPRITE_Create
   \   00000068   600084E5           STR      R0,[R4, #+96]
   2216          
   2217          	hSlideout = GUI_SPRITE_Create(pGraphic, slideoutXPos, slideoutYPos);
   \   0000006C   402094E5           LDR      R2,[R4, #+64]
   \   00000070   3C1094E5           LDR      R1,[R4, #+60]
   \   00000074   ........           LDR      R0,??DataTable173
   \   00000078   ........           BL       GUI_SPRITE_Create
   \   0000007C   580084E5           STR      R0,[R4, #+88]
   2218          
   2219          	hSlideoutTimer = WM_CreateTimer(GetRunningGaugesWindowHandle(), 0, slideoutStepTime = SLIDEOUT_STEP_FAST_TIME, 0);
   \   00000080   0A00A0E3           MOV      R0,#+10
   \   00000084   540084E5           STR      R0,[R4, #+84]
   \   00000088   ........           BL       GetRunningGaugesWindowHandle
   \   0000008C   0030A0E3           MOV      R3,#+0
   \   00000090   0A20A0E3           MOV      R2,#+10
   \   00000094   0010A0E3           MOV      R1,#+0
   \   00000098   ........           BL       WM_CreateTimer
   \   0000009C   440084E5           STR      R0,[R4, #+68]
   2220          	slideoutStepSize = SLIDEOUT_STEP_FAST_SIZE;
   \   000000A0   6400A0E3           MOV      R0,#+100
   \   000000A4   500084E5           STR      R0,[R4, #+80]
   2221          }
   \   000000A8   1080BDE8           POP      {R4,PC}          ;; return
   2222          

   \                                 In section .text, align 4, keep-with-next
   2223          void CloseSlider(void)
   2224          {
   \                     CloseSlider:
   \   00000000   00402DE9           PUSH     {LR}
   2225          	slideoutState = SO_CLOSING;
   \   00000004   ........           LDR      R0,??CheckForInfoKey_8
   \   00000008   0210A0E3           MOV      R1,#+2
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   C410C0E5           STRB     R1,[R0, #+196]
   2226          	ResumeLEDUpdates();					// Resume RPM and warning control of the LEDs and reset autoDimming algorithm
   \   00000014   ........           BL       ResumeLEDUpdates
   2227          	ResumeEnvironmentalUpdates();
   \   00000018   04D08DE2           ADD      SP,SP,#+4
   \   0000001C   0040BDE8           POP      {LR}
   \   00000020   ........           B        ResumeEnvironmentalUpdates  ;; tailcall
   2228          }
   2229          

   \                                 In section .text, align 4, keep-with-next
   2230          void DeleteSlideout(void)
   2231          {
   \                     DeleteSlideout:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2232          	slideoutXPos = XSIZE_PHYS;
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   780FA0E3           MOV      R0,#+480
   \   0000000C   3C0084E5           STR      R0,[R4, #+60]
   2233          	slideoutState = SO_CLOSED;
   \   00000010   0050A0E3           MOV      R5,#+0
   \   00000014   04D04DE2           SUB      SP,SP,#+4
   \   00000018   C450C4E5           STRB     R5,[R4, #+196]
   2234          	GUI_SPRITE_Delete(hSlideout);
   \   0000001C   580094E5           LDR      R0,[R4, #+88]
   \   00000020   ........           BL       GUI_SPRITE_Delete
   2235          	if (hCameraSprite)
   \   00000024   600094E5           LDR      R0,[R4, #+96]
   \   00000028   000050E3           CMP      R0,#+0
   \   0000002C   0500000A           BEQ      ??DeleteSlideout_0
   2236          	{
   2237          		GUI_SPRITE_Delete(hSUStatusSprite);
   \   00000030   5C0094E5           LDR      R0,[R4, #+92]
   \   00000034   ........           BL       GUI_SPRITE_Delete
   2238          		GUI_SPRITE_Delete(hCameraSprite);
   \   00000038   600094E5           LDR      R0,[R4, #+96]
   \   0000003C   ........           BL       GUI_SPRITE_Delete
   2239          		GUI_SPRITE_Delete(hSignalStrengthSprite);
   \   00000040   640094E5           LDR      R0,[R4, #+100]
   \   00000044   ........           BL       GUI_SPRITE_Delete
   2240          	}
   2241          	hSlideout = hCameraSprite = hSUStatusSprite = hSignalStrengthSprite = 0;
   \                     ??DeleteSlideout_0:
   \   00000048   645084E5           STR      R5,[R4, #+100]
   \   0000004C   5C5084E5           STR      R5,[R4, #+92]
   \   00000050   605084E5           STR      R5,[R4, #+96]
   \   00000054   585084E5           STR      R5,[R4, #+88]
   2242          	// If not being called through the timer functional allow the timer to get deleted when the window is changed
   2243          }
   \   00000058   04D08DE2           ADD      SP,SP,#+4
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   2244          

   \                                 In section .text, align 4, keep-with-next
   2245          char CheckSlideoutTimer(WM_HWIN hWin)
   2246          {
   \                     CheckSlideoutTimer:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   2247          	if (hWin == hSlideoutTimer)
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   442094E5           LDR      R2,[R4, #+68]
   \   00000010   020050E1           CMP      R0,R2
   \   00000014   4C00001A           BNE      ??CheckSlideoutTimer_0
   2248          	{
   2249          		switch (slideoutState)
   \   00000018   C400D4E5           LDRB     R0,[R4, #+196]
   \   0000001C   010050E3           CMP      R0,#+1
   \   00000020   0400000A           BEQ      ??CheckSlideoutTimer_1
   \   00000024   4600003A           BCC      ??CheckSlideoutTimer_2
   \   00000028   030050E3           CMP      R0,#+3
   \   0000002C   3900000A           BEQ      ??CheckSlideoutTimer_3
   \   00000030   1700003A           BCC      ??CheckSlideoutTimer_4
   \   00000034   420000EA           B        ??CheckSlideoutTimer_2
   2250          		{
   2251          		case SO_OPENING:
   2252          			if (slideoutXPos > SPRITE_END_POS)
   \                     ??CheckSlideoutTimer_1:
   \   00000038   3C0094E5           LDR      R0,[R4, #+60]
   \   0000003C   F10050E3           CMP      R0,#+241
   2253          				slideoutXPos -= SLIDEOUT_STEP_FAST_SIZE;
   \   00000040   640040A2           SUBGE    R0,R0,#+100
   \   00000044   3C0084A5           STRGE    R0,[R4, #+60]
   2254          			if (slideoutXPos <= SPRITE_END_POS)
   \   00000048   3C0094E5           LDR      R0,[R4, #+60]
   \   0000004C   F10050E3           CMP      R0,#+241
   \   00000050   0A0000AA           BGE      ??CheckSlideoutTimer_5
   2255          			{
   2256          				// Slideout now fully open!
   2257          				slideoutXPos = SPRITE_END_POS;
   \   00000054   F000A0E3           MOV      R0,#+240
   \   00000058   3C0084E5           STR      R0,[R4, #+60]
   2258          				slideoutState = SO_WAITING;
   \   0000005C   0300A0E3           MOV      R0,#+3
   \   00000060   C400C4E5           STRB     R0,[R4, #+196]
   2259          				SetSpritePositions();
   \   00000064   ........           BL       SetSpritePositions
   2260          				WM_RestartTimer(hSlideoutTimer, SLIDEOUT_OPEN_TIME);
   \   00000068   8810A0E3           MOV      R1,#+136
   \   0000006C   4C1D81E3           ORR      R1,R1,#0x1300
   \   00000070   440094E5           LDR      R0,[R4, #+68]
   \   00000074   ........           BL       WM_RestartTimer
   2261          				SuspendEnvironmentalUpdates();
   \   00000078   ........           BL       SuspendEnvironmentalUpdates
   \   0000007C   300000EA           B        ??CheckSlideoutTimer_2
   2262          			}
   2263          			else
   2264          			{
   2265          				SetSpritePositions();
   \                     ??CheckSlideoutTimer_5:
   \   00000080   ........           BL       SetSpritePositions
   2266          				WM_RestartTimer(hSlideoutTimer, SLIDEOUT_STEP_FAST_TIME);
   \   00000084   0A10A0E3           MOV      R1,#+10
   \                     ??CheckSlideoutTimer_6:
   \   00000088   440094E5           LDR      R0,[R4, #+68]
   \   0000008C   ........           BL       WM_RestartTimer
   \   00000090   2B0000EA           B        ??CheckSlideoutTimer_2
   2267          			}
   2268          			break;
   2269          
   2270          		case SO_CLOSING:
   2271          			if (slideoutXPos < XSIZE_PHYS)
   \                     ??CheckSlideoutTimer_4:
   \   00000094   3C0094E5           LDR      R0,[R4, #+60]
   \   00000098   780F50E3           CMP      R0,#+480
   2272          				slideoutXPos += slideoutStepSize;
   \   0000009C   501094B5           LDRLT    R1,[R4, #+80]
   \   000000A0   000081B0           ADDLT    R0,R1,R0
   \   000000A4   3C0084B5           STRLT    R0,[R4, #+60]
   2273          			if (slideoutXPos >= XSIZE_PHYS)
   \   000000A8   3C0094E5           LDR      R0,[R4, #+60]
   \   000000AC   780F50E3           CMP      R0,#+480
   \   000000B0   150000BA           BLT      ??CheckSlideoutTimer_7
   2274          			{
   2275          				DeleteSlideout();
   \   000000B4   780FA0E3           MOV      R0,#+480
   \   000000B8   3C0084E5           STR      R0,[R4, #+60]
   \   000000BC   0050A0E3           MOV      R5,#+0
   \   000000C0   C450C4E5           STRB     R5,[R4, #+196]
   \   000000C4   580094E5           LDR      R0,[R4, #+88]
   \   000000C8   ........           BL       GUI_SPRITE_Delete
   \   000000CC   600094E5           LDR      R0,[R4, #+96]
   \   000000D0   000050E3           CMP      R0,#+0
   \   000000D4   0500000A           BEQ      ??CheckSlideoutTimer_8
   \   000000D8   5C0094E5           LDR      R0,[R4, #+92]
   \   000000DC   ........           BL       GUI_SPRITE_Delete
   \   000000E0   600094E5           LDR      R0,[R4, #+96]
   \   000000E4   ........           BL       GUI_SPRITE_Delete
   \   000000E8   640094E5           LDR      R0,[R4, #+100]
   \   000000EC   ........           BL       GUI_SPRITE_Delete
   \                     ??CheckSlideoutTimer_8:
   \   000000F0   645084E5           STR      R5,[R4, #+100]
   \   000000F4   5C5084E5           STR      R5,[R4, #+92]
   \   000000F8   605084E5           STR      R5,[R4, #+96]
   \   000000FC   585084E5           STR      R5,[R4, #+88]
   2276          				GUI_TIMER_Delete(hSlideoutTimer);
   \   00000100   440094E5           LDR      R0,[R4, #+68]
   \   00000104   ........           BL       GUI_TIMER_Delete
   \   00000108   0D0000EA           B        ??CheckSlideoutTimer_2
   2277          			}
   2278          			else
   2279          			{
   2280          				SetSpritePositions();
   \                     ??CheckSlideoutTimer_7:
   \   0000010C   ........           BL       SetSpritePositions
   2281          				WM_RestartTimer(hSlideoutTimer, slideoutStepTime);
   \   00000110   541094E5           LDR      R1,[R4, #+84]
   \   00000114   DBFFFFEA           B        ??CheckSlideoutTimer_6
   2282          			}
   2283          			break;
   2284          
   2285          		case SO_WAITING:
   2286          			// Keypress timeout, start slow autoclose
   2287          			WM_RestartTimer(hSlideoutTimer, slideoutStepTime = SLIDEOUT_STEP_SLOW_TIME);
   \                     ??CheckSlideoutTimer_3:
   \   00000118   0A00A0E3           MOV      R0,#+10
   \   0000011C   540084E5           STR      R0,[R4, #+84]
   \   00000120   0A10A0E3           MOV      R1,#+10
   \   00000124   0200A0E1           MOV      R0,R2
   \   00000128   ........           BL       WM_RestartTimer
   2288          			slideoutStepSize = SLIDEOUT_STEP_SLOW_SIZE;
   \   0000012C   1800A0E3           MOV      R0,#+24
   \   00000130   500084E5           STR      R0,[R4, #+80]
   2289          			CloseSlider();
   \   00000134   0200A0E3           MOV      R0,#+2
   \   00000138   C400C4E5           STRB     R0,[R4, #+196]
   \   0000013C   ........           BL       ResumeLEDUpdates
   \   00000140   ........           BL       ResumeEnvironmentalUpdates
   2290          			break;
   2291          		}
   2292          		return true;
   \                     ??CheckSlideoutTimer_2:
   \   00000144   0100A0E3           MOV      R0,#+1
   \   00000148   000000EA           B        ??CheckSlideoutTimer_9
   2293          	}
   2294          	else return false;
   \                     ??CheckSlideoutTimer_0:
   \   0000014C   0000A0E3           MOV      R0,#+0
   \                     ??CheckSlideoutTimer_9:
   \   00000150   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000154   3080BDE8           POP      {R4,R5,PC}       ;; return
   2295          }
   2296          

   \                                 In section .text, align 4, keep-with-next
   2297          void SetSpritePositions(void)
   2298          {
   \                     SetSpritePositions:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2299          	GUI_SPRITE_SetPosition(hSlideout, slideoutXPos, slideoutYPos);
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   402094E5           LDR      R2,[R4, #+64]
   \   0000000C   3C1094E5           LDR      R1,[R4, #+60]
   \   00000010   580094E5           LDR      R0,[R4, #+88]
   \   00000014   ........           BL       GUI_SPRITE_SetPosition
   2300          	GUI_SPRITE_SetPosition(hSUStatusSprite, slideoutXPos + SU_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   00000018   3C0094E5           LDR      R0,[R4, #+60]
   \   0000001C   402094E5           LDR      R2,[R4, #+64]
   \   00000020   7A1080E2           ADD      R1,R0,#+122
   \   00000024   5C0094E5           LDR      R0,[R4, #+92]
   \   00000028   ........           BL       GUI_SPRITE_SetPosition
   2301          	GUI_SPRITE_SetPosition(hCameraSprite, slideoutXPos + CAMERA_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   0000002C   3C0094E5           LDR      R0,[R4, #+60]
   \   00000030   402094E5           LDR      R2,[R4, #+64]
   \   00000034   A51080E2           ADD      R1,R0,#+165
   \   00000038   600094E5           LDR      R0,[R4, #+96]
   \   0000003C   ........           BL       GUI_SPRITE_SetPosition
   2302          	GUI_SPRITE_SetPosition(hSignalStrengthSprite, slideoutXPos + SIGSTRN_SPRITE_ICON_X_OFFSET, slideoutYPos);
   \   00000040   3C0094E5           LDR      R0,[R4, #+60]
   \   00000044   402094E5           LDR      R2,[R4, #+64]
   \   00000048   CA1080E2           ADD      R1,R0,#+202
   \   0000004C   640094E5           LDR      R0,[R4, #+100]
   \   00000050   1040BDE8           POP      {R4,LR}
   \   00000054   ........           B        GUI_SPRITE_SetPosition  ;; tailcall
   2303          }
   2304          
   2305          //
   2306          // Check status of slideout.  If slideout is fully extended return true, else return false.
   2307          // Used by Drive screen to see if it is safe to process the buttons.
   2308          //

   \                                 In section .text, align 4, keep-with-next
   2309          char SlideOutDeployed(void)
   2310          {
   2311          	if (slideoutState != SO_CLOSED)
   \                     SlideOutDeployed:
   \   00000000   ........           LDR      R0,??CheckForInfoKey_8
   \   00000004   C400D0E5           LDRB     R0,[R0, #+196]
   \   00000008   000050E3           CMP      R0,#+0
   2312          		return true;
   \   0000000C   0100A013           MOVNE    R0,#+1
   2313          	else return false;
   \   00000010   1EFF2FE1           BX       LR               ;; return
   2314          }
   2315          
   2316          //
   2317          // Check status of slideout.  If slideout is visible (including sliding) return true, else return false.
   2318          //

   \                                 In section .text, align 4, keep-with-next
   2319          char SlideOutVisible(void)
   2320          {
   2321          	if (slideoutState == SO_WAITING)
   \                     SlideOutVisible:
   \   00000000   ........           LDR      R0,??CheckForInfoKey_8
   \   00000004   C400D0E5           LDRB     R0,[R0, #+196]
   \   00000008   030050E3           CMP      R0,#+3
   \   0000000C   0100001A           BNE      ??SlideOutVisible_0
   2322          		return true;
   \   00000010   0100A0E3           MOV      R0,#+1
   \   00000014   1EFF2FE1           BX       LR
   2323          	else return false;
   \                     ??SlideOutVisible_0:
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   1EFF2FE1           BX       LR               ;; return
   2324          }
   2325          
   2326          
   2327          //
   2328          // Return true if the current touch position is the BACK navigation arrow key position
   2329          //

   \                                 In section .text, align 4, keep-with-next
   2330          char TouchPosIsBackKey(void)
   2331          {
   \                     TouchPosIsBackKey:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   0CD04DE2           SUB      SP,SP,#+12
   2332          	GUI_PID_STATE TouchState;
   2333          
   2334          	GUI_TOUCH_GetState(&TouchState);		// Get the touch position in pixel
   \   00000008   0D00A0E1           MOV      R0,SP
   \   0000000C   ........           BL       GUI_TOUCH_GetState
   2335          	return TouchPosIsBackKey2(TouchState.x, TouchState.y);
   \   00000010   00109DE5           LDR      R1,[SP, #+0]
   \   00000014   04009DE5           LDR      R0,[SP, #+4]
   \   00000018   000051E3           CMP      R1,#+0
   \   0000001C   00005053           CMPPL    R0,#+0
   \   00000020   0400004A           BMI      ??TouchPosIsBackKey_0
   \   00000024   3C0051E3           CMP      R1,#+60
   \   00000028   020000AA           BGE      ??TouchPosIsBackKey_0
   \   0000002C   D50050E3           CMP      R0,#+213
   \   00000030   0100A0A3           MOVGE    R0,#+1
   \   00000034   000000AA           BGE      ??TouchPosIsBackKey_1
   \                     ??TouchPosIsBackKey_0:
   \   00000038   0000A0E3           MOV      R0,#+0
   \                     ??TouchPosIsBackKey_1:
   \   0000003C   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000040   0080BDE8           POP      {PC}             ;; return
   2336          }
   2337          

   \                                 In section .text, align 4, keep-with-next
   2338          char TouchPosIsBackKey2(int lastx, int lasty)
   2339          {
   2340          	if ((lastx < 0) || (lasty < 0))
   \                     TouchPosIsBackKey2:
   \   00000000   000050E3           CMP      R0,#+0
   \   00000004   00005153           CMPPL    R1,#+0
   \   00000008   0100005A           BPL      ??TouchPosIsBackKey2_0
   2341          		return false;
   \                     ??TouchPosIsBackKey2_1:
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   1EFF2FE1           BX       LR
   2342          	if ((lastx < NAVI_SIZE_X) && (lasty > (YSIZE_PHYS - NAVI_SIZE_Y)))
   \                     ??TouchPosIsBackKey2_0:
   \   00000014   3C0050E3           CMP      R0,#+60
   \   00000018   FBFFFFAA           BGE      ??TouchPosIsBackKey2_1
   \   0000001C   D50051E3           CMP      R1,#+213
   \   00000020   F9FFFFBA           BLT      ??TouchPosIsBackKey2_1
   2343          		return true;
   \   00000024   0100A0E3           MOV      R0,#+1
   \   00000028   1EFF2FE1           BX       LR               ;; return
   2344          	else return false;
   2345          }
   2346          
   2347          //
   2348          // Return true if current touch position is the RESET function on the G-meter screen
   2349          //

   \                                 In section .text, align 4, keep-with-next
   2350          int TouchPosIsReset(int lastx, int lasty)
   2351          {
   2352          	if ((lastx > 100) && (lastx < 300) && (lasty > 100) && (lasty < 200))
   \                     TouchPosIsReset:
   \   00000000   650040E2           SUB      R0,R0,#+101
   \   00000004   C70050E3           CMP      R0,#+199
   \   00000008   65004132           SUBCC    R0,R1,#+101
   \   0000000C   63005033           CMPCC    R0,#+99
   \   00000010   0100002A           BCS      ??TouchPosIsReset_0
   2353          		return true;
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1EFF2FE1           BX       LR
   2354          	else return false;
   \                     ??TouchPosIsReset_0:
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   1EFF2FE1           BX       LR               ;; return
   2355          }
   2356          

   \                                 In section .text, align 4, keep-with-next
   2357          void StartBackKeyTimer(void)
   2358          {
   \                     StartBackKeyTimer:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   2359          	backKeyPressedTime = GUI_GetTime();
   \   00000008   ........           BL       GUI_GetTime
   \   0000000C   ........           LDR      R1,??CheckForInfoKey_8
   2360          }
   \   00000010   04D08DE2           ADD      SP,SP,#+4
   \   00000014   480081E5           STR      R0,[R1, #+72]
   \   00000018   0080BDE8           POP      {PC}             ;; return
   2361          

   \                                 In section .text, align 4, keep-with-next
   2362          char BackTimerExpired(void)
   2363          {
   \                     BackTimerExpired:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   2364          	int backKeyReleasedTime = GUI_GetTime();
   \   00000008   ........           BL       GUI_GetTime
   2365          
   2366          	if (backKeyPressedTime > 0)
   \   0000000C   ........           LDR      R1,??CheckForInfoKey_8
   \   00000010   482091E5           LDR      R2,[R1, #+72]
   \   00000014   010052E3           CMP      R2,#+1
   \   00000018   080000BA           BLT      ??BackTimerExpired_0
   2367          	{
   2368          		if ((backKeyReleasedTime - backKeyPressedTime) > TWO_SECONDS)
   \   0000001C   020040E0           SUB      R0,R0,R2
   \   00000020   D120A0E3           MOV      R2,#+209
   \   00000024   702E82E3           ORR      R2,R2,#0x700
   \   00000028   020050E1           CMP      R0,R2
   \   0000002C   030000BA           BLT      ??BackTimerExpired_0
   2369          		{
   2370          			backKeyPressedTime = 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   480081E5           STR      R0,[R1, #+72]
   2371          			return true;
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   000000EA           B        ??BackTimerExpired_1
   2372          		}
   2373          	}
   2374          	return false;
   \                     ??BackTimerExpired_0:
   \   00000040   0000A0E3           MOV      R0,#+0
   \                     ??BackTimerExpired_1:
   \   00000044   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000048   0080BDE8           POP      {PC}             ;; return
   2375          }
   2376          

   \                                 In section .text, align 4, keep-with-next
   2377          void StartConfigKeyTimer(void)
   2378          {
   \                     StartConfigKeyTimer:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2379          	if (slideoutState == SO_CLOSED)		// only active when slideout closed
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   C400D4E5           LDRB     R0,[R4, #+196]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   1F00001A           BNE      ??StartConfigKeyTimer_0
   \   00000014   ........           LDR      R0,??DataTable175
   \   00000018   1400D0E5           LDRB     R0,[R0, #+20]
   \   0000001C   020050E3           CMP      R0,#+2
   \   00000020   03005013           CMPNE    R0,#+3
   \   00000024   04005013           CMPNE    R0,#+4
   \   00000028   1F005013           CMPNE    R0,#+31
   \   0000002C   1800001A           BNE      ??StartConfigKeyTimer_0
   2380          		if (AnyNonDragGaugeScreen(GetScreenType()))
   2381          			if ((selectedRaceMode == ROADRACE_MODE) || (selectedRaceMode == INSTRUMENTS_MODE) || (selectedRaceMode == DRIVE_MODE))
   \   00000030   C610D4E5           LDRB     R1,[R4, #+198]
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   02005113           CMPNE    R1,#+2
   \   0000003C   03005113           CMPNE    R1,#+3
   \   00000040   1300001A           BNE      ??StartConfigKeyTimer_0
   2382          			{
   2383          				int screenID;
   2384          
   2385          				screenID = GetCurrentScreenID();
   \   00000044   030050E3           CMP      R0,#+3
   \   00000048   0500000A           BEQ      ??StartConfigKeyTimer_1
   \   0000004C   0700003A           BCC      ??StartConfigKeyTimer_2
   \   00000050   040050E3           CMP      R0,#+4
   \   00000054   0500001A           BNE      ??StartConfigKeyTimer_2
   \   00000058   ........           BL       GetLastScreen
   \   0000005C   ........           LDR      R1,??DataTable172_4
   \   00000060   050000EA           B        ??StartConfigKeyTimer_3
   \                     ??StartConfigKeyTimer_1:
   \   00000064   ........           BL       GetLastScreen
   \   00000068   ........           LDR      R1,??DataTable172_5
   \   0000006C   020000EA           B        ??StartConfigKeyTimer_3
   \                     ??StartConfigKeyTimer_2:
   \   00000070   0200A0E3           MOV      R0,#+2
   \   00000074   ........           BL       GetLastScreen
   \   00000078   ........           LDR      R1,??DataTable172_6
   \                     ??StartConfigKeyTimer_3:
   \   0000007C   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   2386          				if (ScreenIsConfigurable(screenID))
   \   00000080   ........           BL       ScreenIsConfigurable
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0200000A           BEQ      ??StartConfigKeyTimer_4
   2387          				{
   2388          					configKeyPressedTime = GUI_GetTime();
   \   0000008C   ........           BL       GUI_GetTime
   \   00000090   000000EA           B        ??StartConfigKeyTimer_4
   2389          					return;
   2390          				}
   2391          			}
   2392          
   2393          	// Otherwise be sure "timer is off"
   2394          	configKeyPressedTime = 0;
   \                     ??StartConfigKeyTimer_0:
   \   00000094   0000A0E3           MOV      R0,#+0
   \                     ??StartConfigKeyTimer_4:
   \   00000098   4C0084E5           STR      R0,[R4, #+76]
   2395          }
   \   0000009C   1080BDE8           POP      {R4,PC}          ;; return
   2396          

   \                                 In section .text, align 4, keep-with-next
   2397          char ConfigTimerExpired(void)
   2398          {
   \                     ConfigTimerExpired:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2399          	if (configKeyPressedTime > 0)
   \   00000004   ........           LDR      R4,??CheckForInfoKey_8
   \   00000008   4C0094E5           LDR      R0,[R4, #+76]
   \   0000000C   010050E3           CMP      R0,#+1
   \   00000010   0A0000BA           BLT      ??ConfigTimerExpired_0
   2400          	{
   2401          		int configKeyReleasedTime = GUI_GetTime();
   \   00000014   ........           BL       GUI_GetTime
   2402          
   2403          		if ((configKeyReleasedTime - configKeyPressedTime) > TWO_SECONDS)
   \   00000018   4C1094E5           LDR      R1,[R4, #+76]
   \   0000001C   010040E0           SUB      R0,R0,R1
   \   00000020   D110A0E3           MOV      R1,#+209
   \   00000024   701E81E3           ORR      R1,R1,#0x700
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   030000BA           BLT      ??ConfigTimerExpired_0
   2404          		{
   2405          			configKeyPressedTime = 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   4C0084E5           STR      R0,[R4, #+76]
   2406          			return true;
   \   00000038   0100A0E3           MOV      R0,#+1
   \   0000003C   1080BDE8           POP      {R4,PC}
   2407          		}
   2408          	}
   2409          	return false;
   \                     ??ConfigTimerExpired_0:
   \   00000040   0000A0E3           MOV      R0,#+0
   \   00000044   1080BDE8           POP      {R4,PC}          ;; return
   2410          }
   2411          
   2412          const char *pHelpText, *pHelpTitle;
   2413          

   \                                 In section .text, align 4, keep-with-next
   2414          int CheckForInfoKey(int hasHelp)
   2415          {
   \                     CheckForInfoKey:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   2416          	int currentScreen;
   2417          	char handleSprites = false;
   2418          
   2419          	currentScreen = GetCurrentScreen();
   \   00000004   ........           LDR      R10,??DataTable175
   \   00000008   0070A0E1           MOV      R7,R0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0080A0E3           MOV      R8,#+0
   \   00000014   0060A0E3           MOV      R6,#+0
   \   00000018   1400DAE5           LDRB     R0,[R10, #+20]
   \   0000001C   ........           BL       GetLastScreen
   2420          	pHelpScreens = (HELP_SCREENS *)-1;	// Initially assume no tutorial topic AT ALL for this screen
   2421          	pHelpText = 0;						// and no help text
   2422          
   2423          #define ONE_K	(1024)
   2424          #define ONE_MEG	(ONE_K * 1024)
   2425          #define ONE_GIG (ONE_MEG * 1024)
   2426          	
   2427          	switch (GetScreenType())
   \   00000020   1410DAE5           LDRB     R1,[R10, #+20]
   \   00000024   ........           LDR      R4,??DataTable175_1
   \   00000028   94529FE5           LDR      R5,??CheckForInfoKey_8
   \   0000002C   0690E0E1           MVN      R9,R6
   \   00000030   009084E5           STR      R9,[R4, #+0]
   \   00000034   BC8085E5           STR      R8,[R5, #+188]
   \   00000038   250051E3           CMP      R1,#+37
   \   0000003C   01F18F90           ADDLS    PC,PC,R1, LSL #+2
   \                     ??CheckForInfoKey_0:
   \   00000040   2702008A           BHI      ??CheckForInfoKey_9
   \   00000044   240000EA           B        ??CheckForInfoKey_10
   \   00000048   2F0000EA           B        ??CheckForInfoKey_11
   \   0000004C   240200EA           B        ??CheckForInfoKey_9
   \   00000050   230200EA           B        ??CheckForInfoKey_9
   \   00000054   220200EA           B        ??CheckForInfoKey_9
   \   00000058   530000EA           B        ??CheckForInfoKey_12
   \   0000005C   7A0000EA           B        ??CheckForInfoKey_13
   \   00000060   F40000EA           B        ??CheckForInfoKey_14
   \   00000064   E30000EA           B        ??CheckForInfoKey_15
   \   00000068   270100EA           B        ??CheckForInfoKey_16
   \   0000006C   4D0100EA           B        ??CheckForInfoKey_17
   \   00000070   650100EA           B        ??CheckForInfoKey_18
   \   00000074   6F0100EA           B        ??CheckForInfoKey_19
   \   00000078   740100EA           B        ??CheckForInfoKey_20
   \   0000007C   9A0100EA           B        ??CheckForInfoKey_21
   \   00000080   B70100EA           B        ??CheckForInfoKey_22
   \   00000084   CB0100EA           B        ??CheckForInfoKey_23
   \   00000088   150200EA           B        ??CheckForInfoKey_9
   \   0000008C   140200EA           B        ??CheckForInfoKey_9
   \   00000090   130200EA           B        ??CheckForInfoKey_9
   \   00000094   120200EA           B        ??CheckForInfoKey_9
   \   00000098   110200EA           B        ??CheckForInfoKey_9
   \   0000009C   CD0100EA           B        ??CheckForInfoKey_24
   \   000000A0   0F0200EA           B        ??CheckForInfoKey_9
   \   000000A4   D10100EA           B        ??CheckForInfoKey_25
   \   000000A8   0D0200EA           B        ??CheckForInfoKey_9
   \   000000AC   0C0200EA           B        ??CheckForInfoKey_9
   \   000000B0   D50100EA           B        ??CheckForInfoKey_26
   \   000000B4   0A0200EA           B        ??CheckForInfoKey_9
   \   000000B8   D90100EA           B        ??CheckForInfoKey_27
   \   000000BC   080200EA           B        ??CheckForInfoKey_9
   \   000000C0   070200EA           B        ??CheckForInfoKey_9
   \   000000C4   D30000EA           B        ??CheckForInfoKey_28
   \   000000C8   F50100EA           B        ??CheckForInfoKey_29
   \   000000CC   E40100EA           B        ??CheckForInfoKey_30
   \   000000D0   EB0100EA           B        ??CheckForInfoKey_31
   \   000000D4   020200EA           B        ??CheckForInfoKey_9
   \   000000D8   F90100EA           B        ??CheckForInfoKey_32
   2428          	{
   2429          	case GENERAL_CONFIG_SCREEN_TYPE:
   2430          		pHelpTitle = "Main Menu";
   \                     ??CheckForInfoKey_10:
   \   000000DC   ............       ADRL     R0,`?<Constant "Main Menu">`
   \              ....        
   \   000000E4   C00085E5           STR      R0,[R5, #+192]
   2431          		pHelpText = GetSystemStatsHelpText(MAIN_SCREEN_INFO);
   \   000000E8   ............       ADRL     R0,MAIN_SCREEN_INFO
   \              ....        
   \   000000F0   ........           BL       GetSystemStatsHelpText
   \   000000F4   BC0085E5           STR      R0,[R5, #+188]
   2432          		pHelpScreens = 0;			// NULL pHelpScreens means no specific help tutorial is known - show list of topics
   \   000000F8   008084E5           STR      R8,[R4, #+0]
   2433          		if (hasHelp)
   \   000000FC   000057E3           CMP      R7,#+0
   \   00000100   F701000A           BEQ      ??CheckForInfoKey_9
   2434          			return true;
   \                     ??CheckForInfoKey_33:
   \   00000104   0100A0E3           MOV      R0,#+1
   \   00000108   040200EA           B        ??CheckForInfoKey_34
   2435          		break;
   2436          
   2437          	case CONFIG_SCREEN_TYPE:
   2438          		switch (currentScreen)
   \                     ??CheckForInfoKey_11:
   \   0000010C   030050E3           CMP      R0,#+3
   \   00000110   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_1:
   \   00000114   F201008A           BHI      ??CheckForInfoKey_9
   \   00000118   020000EA           B        ??CheckForInfoKey_35
   \   0000011C   0C0000EA           B        ??CheckForInfoKey_36
   \   00000120   120000EA           B        ??CheckForInfoKey_37
   \   00000124   1A0000EA           B        ??CheckForInfoKey_38
   2439          		{
   2440          		case GO_RACING:
   2441          			pHelpTitle = "Go Racing Info";
   \                     ??CheckForInfoKey_35:
   \   00000128   ............       ADRL     R0,`?<Constant "Go Racing Info">`
   \              ....        
   \   00000130   C00085E5           STR      R0,[R5, #+192]
   2442          			pHelpText = GO_RACING_INFO;
   \   00000134   ............       ADRL     R0,GO_RACING_INFO
   \              ....        
   \   0000013C   BC0085E5           STR      R0,[R5, #+188]
   2443          			pHelpScreens = GoRacingHelpScreens;
   \   00000140   ........           LDR      R0,??DataTable175_2
   \                     ??CheckForInfoKey_39:
   \   00000144   000084E5           STR      R0,[R4, #+0]
   2444          			if (hasHelp)
   \                     ??CheckForInfoKey_40:
   \   00000148   000057E3           CMP      R7,#+0
   \                     ??CheckForInfoKey_41:
   \   0000014C   ECFFFF1A           BNE      ??CheckForInfoKey_33
   \   00000150   E30100EA           B        ??CheckForInfoKey_9
   2445          				return true;
   2446          			break;
   2447          		case RACE_SETUP:
   2448          			pHelpTitle = "Race Setup Info";
   \                     ??CheckForInfoKey_36:
   \   00000154   ............       ADRL     R0,`?<Constant "Race Setup Info">`
   \              ....        
   \   0000015C   C00085E5           STR      R0,[R5, #+192]
   2449          			pHelpText = RACE_SETUP_INFO;
   \   00000160   ............       ADRL     R0,RACE_SETUP_INFO
   \              ....        
   \                     ??CheckForInfoKey_42:
   \   00000168   BC0085E5           STR      R0,[R5, #+188]
   2450          			if (hasHelp)
   \   0000016C   F5FFFFEA           B        ??CheckForInfoKey_40
   2451          				return true;
   2452          			break;
   2453          		case REVIEW_SESSIONS:
   2454          			pHelpTitle = "Review Sessions Info";
   \                     ??CheckForInfoKey_37:
   \   00000170   ............       ADRL     R0,`?<Constant "Review Sessions Info">`
   \              ....        
   \   00000178   C00085E5           STR      R0,[R5, #+192]
   2455          			pHelpText = REVIEW_SESSIONS_INFO;
   \   0000017C   ............       ADRL     R0,REVIEW_SESSIONS_INFO
   \              ....        
   \   00000184   BC0085E5           STR      R0,[R5, #+188]
   2456          // sample	pHelpScreens = (HELP_SCREENS *)-1;			// -1 means there is no tutorial topic AT ALL for this level
   2457          			pHelpScreens = ReviewSessionsHelpScreens;
   \   00000188   ........           LDR      R0,??DataTable175_3
   \                     ??CheckForInfoKey_43:
   \   0000018C   000084E5           STR      R0,[R4, #+0]
   2458          			if (hasHelp)
   \   00000190   ECFFFFEA           B        ??CheckForInfoKey_40
   2459          				return true;
   2460          			break;
   2461          		case SYSTEM_SETUP:
   2462          			pHelpTitle = "System Setup Info";
   \                     ??CheckForInfoKey_38:
   \   00000194   ............       ADRL     R0,`?<Constant "System Setup Info">`
   \              ....        
   \   0000019C   C00085E5           STR      R0,[R5, #+192]
   2463          			pHelpText = SYSTEMS_SETUP_INFO;
   \   000001A0   ............       ADRL     R0,SYSTEMS_SETUP_INFO
   \              ....        
   \   000001A8   EEFFFFEA           B        ??CheckForInfoKey_42
   2464          			if (hasHelp)
   2465          				return true;
   2466          			break;
   2467          
   2468          		}
   2469          		break;
   2470          
   2471          	case RACE_SETUP_SCREENS_TYPE:
   2472          		switch (currentScreen)
   \                     ??CheckForInfoKey_12:
   \   000001AC   030050E3           CMP      R0,#+3
   \   000001B0   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_2:
   \   000001B4   CA01008A           BHI      ??CheckForInfoKey_9
   \   000001B8   020000EA           B        ??CheckForInfoKey_44
   \   000001BC   090000EA           B        ??CheckForInfoKey_45
   \   000001C0   110000EA           B        ??CheckForInfoKey_46
   \   000001C4   190000EA           B        ??CheckForInfoKey_47
   2473          		{
   2474          		case DRIVER_SELECTION:
   2475          			handleSprites = true;		// This screen uses sprites for shadow effect on the list - hide them during the popup
   2476          			pHelpTitle = "Driver Selection Info";
   \                     ??CheckForInfoKey_44:
   \   000001C8   ............       ADRL     R0,`?<Constant "Driver Selection Info">`
   \              ....        
   \   000001D0   0160A0E3           MOV      R6,#+1
   \   000001D4   C00085E5           STR      R0,[R5, #+192]
   2477          			pHelpText = SELECT_DRIVER_INFO;
   \   000001D8   ............       ADRL     R0,SELECT_DRIVER_INFO
   \              ....        
   \                     ??CheckForInfoKey_48:
   \   000001E0   BC0085E5           STR      R0,[R5, #+188]
   2478          			pHelpScreens = (HELP_SCREENS *)-1;			// -1 means there is no tutorial topic AT ALL for this level
   2479          			if (hasHelp)
   \   000001E4   D7FFFFEA           B        ??CheckForInfoKey_40
   2480          				return true;
   2481          			break;
   2482          
   2483          		case VEHICLE_SELECTION:
   2484          			handleSprites = true;		// This screen uses sprites for shadow effect on the list - hide them during the popup
   2485          			pHelpTitle = "Vehicle Selection Info";
   \                     ??CheckForInfoKey_45:
   \   000001E8   ............       ADRL     R0,`?<Constant "Vehicle Selection Info">`
   \              ....        
   \   000001F0   0160A0E3           MOV      R6,#+1
   \   000001F4   C00085E5           STR      R0,[R5, #+192]
   2486          			pHelpText = SELECT_VEHICLE_INFO;
   \   000001F8   ............       ADRL     R0,SELECT_VEHICLE_INFO
   \              ....        
   \   00000200   BC0085E5           STR      R0,[R5, #+188]
   2487          			pHelpScreens = VehicleSelectionHelpScreens;
   \   00000204   ........           LDR      R0,??DataTable175_4
   \   00000208   DFFFFFEA           B        ??CheckForInfoKey_43
   2488          			if (hasHelp)
   2489          				return true;
   2490          			break;
   2491          
   2492          		case TRACK_SELECTION:
   2493          			handleSprites = true;		// This screen uses sprites for shadow effect on the list - hide them during the popup
   2494          			pHelpTitle = "Track Selection Info";
   \                     ??CheckForInfoKey_46:
   \   0000020C   ............       ADRL     R0,`?<Constant "Track Selection Info">`
   \              ....        
   \   00000214   0160A0E3           MOV      R6,#+1
   \   00000218   C00085E5           STR      R0,[R5, #+192]
   2495          			pHelpText = SELECT_TRACK_INFO;
   \   0000021C   ............       ADRL     R0,SELECT_TRACK_INFO
   \              ....        
   \   00000224   BC0085E5           STR      R0,[R5, #+188]
   2496          			pHelpScreens = TrackSettingsSpecificHelpScreens;
   \   00000228   ........           LDR      R0,??DataTable175_5
   \   0000022C   C4FFFFEA           B        ??CheckForInfoKey_39
   2497          			if (hasHelp)
   2498          				return true;
   2499          			break;
   2500          
   2501          		case LAPSQUALIFYING_SELECTION:
   2502          			pHelpTitle = "Laps/Qualifying Info";
   \                     ??CheckForInfoKey_47:
   \   00000230   ............       ADRL     R0,`?<Constant "Laps/Qualifying Info">`
   \              ....        
   \   00000238   C00085E5           STR      R0,[R5, #+192]
   2503          			pHelpText = LAP_QUAL_INFO;
   \   0000023C   ............       ADRL     R0,LAP_QUAL_INFO
   \              ....        
   \                     ??CheckForInfoKey_49:
   \   00000244   BC0085E5           STR      R0,[R5, #+188]
   2504          			if (hasHelp)
   \   00000248   BEFFFFEA           B        ??CheckForInfoKey_40
   2505          				return true;
   2506          			break;
   2507          
   2508          		}
   2509          		break;
   2510          
   2511          	case SYSTEM_SETTINGS_SCREENS_TYPE:
   2512          		switch (currentScreen)
   \                     ??CheckForInfoKey_13:
   \   0000024C   050050E3           CMP      R0,#+5
   \   00000250   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_3:
   \   00000254   A201008A           BHI      ??CheckForInfoKey_9
   \   00000258   040000EA           B        ??CheckForInfoKey_50
   \   0000025C   090000EA           B        ??CheckForInfoKey_51
   \   00000260   0F0000EA           B        ??CheckForInfoKey_52
   \   00000264   170000EA           B        ??CheckForInfoKey_53
   \   00000268   1E0000EA           B        ??CheckForInfoKey_54
   \   0000026C   5B0000EA           B        ??CheckForInfoKey_55
   2513          		{
   2514          		case DISPLAY_SELECTION:
   2515          			pHelpTitle = "Display Settings Info";
   \                     ??CheckForInfoKey_50:
   \   00000270   ............       ADRL     R0,`?<Constant "Display Settings Info">`
   \              ....        
   \   00000278   C00085E5           STR      R0,[R5, #+192]
   2516          			pHelpText = DISPLAY_SETTINGS_INFO;
   \   0000027C   ............       ADRL     R0,DISPLAY_SETTINGS_INFO
   \              ....        
   \   00000284   B7FFFFEA           B        ??CheckForInfoKey_42
   2517          			if (hasHelp)
   2518          				return true;
   2519          			break;
   2520          
   2521          		case UNITS_SELECTION:
   2522          			pHelpTitle = "Units Selection Info";
   \                     ??CheckForInfoKey_51:
   \   00000288   ............       ADRL     R0,`?<Constant "Units Selection Info">`
   \              ....        
   \   00000290   C00085E5           STR      R0,[R5, #+192]
   2523          			pHelpText = UNITS_SETTINGS_INFO;
   \   00000294   ............       ADRL     R0,UNITS_SETTINGS_INFO
   \              ....        
   \                     ??CheckForInfoKey_56:
   \   0000029C   BC0085E5           STR      R0,[R5, #+188]
   2524          			if (hasHelp)
   \   000002A0   A8FFFFEA           B        ??CheckForInfoKey_40
   2525          				return true;
   2526          			break;
   2527          
   2528          		case TIME_SELECTION:
   2529          			pHelpTitle = "Time Zone Info";
   \                     ??CheckForInfoKey_52:
   \   000002A4   ............       ADRL     R0,`?<Constant "Time Zone Info">`
   \              ....        
   \   000002AC   C00085E5           STR      R0,[R5, #+192]
   2530          			pHelpText = TIME_SETTINGS_INFO;
   \   000002B0   ............       ADRL     R0,TIME_SETTINGS_INFO
   \              ....        
   \   000002B8   BC0085E5           STR      R0,[R5, #+188]
   2531          			pHelpScreens = TimeZoneGPSScreens;
   \   000002BC   ........           LDR      R0,??DataTable176
   \   000002C0   9FFFFFEA           B        ??CheckForInfoKey_39
   \                     ??CheckForInfoKey_8:
   \   000002C4   ........           DC32     ConfigScreenList
   2532          			if (hasHelp)
   2533          				return true;
   2534          			break;
   2535          
   2536          		case AUTOSTART_SELECTION:
   2537          			pHelpScreens = AutoOnSpecificHelpScreens;
   \                     ??CheckForInfoKey_53:
   \   000002C8   ........           LDR      R0,??DataTable176_1
   \   000002CC   000084E5           STR      R0,[R4, #+0]
   2538          			pHelpTitle = "Auto Start Info";
   \   000002D0   ............       ADRL     R0,`?<Constant "Auto Start Info">`
   \              ....        
   \   000002D8   C00085E5           STR      R0,[R5, #+192]
   2539          			pHelpText = AUTOSTART_SETTINGS_INFO;
   \   000002DC   ............       ADRL     R0,AUTOSTART_SETTINGS_INFO
   \              ....        
   \   000002E4   D6FFFFEA           B        ??CheckForInfoKey_49
   2540          			if (hasHelp)
   2541          				return true;
   2542          			break;
   2543          
   2544          		case STORAGE_SELECTION:
   2545          			pHelpTitle = "System Storage Info";
   \                     ??CheckForInfoKey_54:
   \   000002E8   ............       ADRL     R0,`?<Constant "System Storage Info">`
   \              ....        
   2546          			pHelpText = GetStorageStatsHelpText(STORAGE_SETTINGS_INFO);
   \   000002F0   20A0A0E3           MOV      R10,#+32
   \   000002F4   C00085E5           STR      R0,[R5, #+192]
   \   000002F8   ............       ADRL     R1,STORAGE_SETTINGS_INFO
   \              ....        
   \   00000300   CC0085E2           ADD      R0,R5,#+204
   \   00000304   ........           BL       strcpy
   \   00000308   ........           BL       OkToUseSDCard
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   2C00000A           BEQ      ??CheckForInfoKey_57
   \   00000314   C60F8FE2           ADR      R0,??CheckForInfoKey_58  ;; ""
   \   00000318   ........           BL       FS_GetVolumeFreeSpace
   \   0000031C   ........           BL       __aeabi_ui2f
   \   00000320   5013A0E3           MOV      R1,#+1073741825
   \   00000324   E81681E3           ORR      R1,R1,#0xE800000
   \   00000328   ........           BL       __aeabi_cfrcmple
   \   0000032C   00B0A0E1           MOV      R11,R0
   \   00000330   1100009A           BLS      ??CheckForInfoKey_59
   \   00000334   501641E2           SUB      R1,R1,#+83886080
   \   00000338   ........           BL       __aeabi_cfrcmple
   \   0000033C   0800009A           BLS      ??CheckForInfoKey_60
   \   00000340   501641E2           SUB      R1,R1,#+83886080
   \   00000344   ........           BL       __aeabi_cfrcmple
   \   00000348   1000008A           BHI      ??CheckForInfoKey_61
   \   0000034C   EA05A0E3           MOV      R0,#+981467136
   \   00000350   0B10A0E1           MOV      R1,R11
   \   00000354   ........           BL       __aeabi_fmul
   \   00000358   00B0A0E1           MOV      R11,R0
   \   0000035C   4BA0A0E3           MOV      R10,#+75
   \   00000360   0A0000EA           B        ??CheckForInfoKey_61
   \                     ??CheckForInfoKey_60:
   \   00000364   D605A0E3           MOV      R0,#+897581056
   \   00000368   0B10A0E1           MOV      R1,R11
   \   0000036C   ........           BL       __aeabi_fmul
   \   00000370   00B0A0E1           MOV      R11,R0
   \   00000374   4DA0A0E3           MOV      R10,#+77
   \   00000378   040000EA           B        ??CheckForInfoKey_61
   \                     ??CheckForInfoKey_59:
   \   0000037C   C205A0E3           MOV      R0,#+813694976
   \   00000380   0B10A0E1           MOV      R1,R11
   \   00000384   ........           BL       __aeabi_fmul
   \   00000388   00B0A0E1           MOV      R11,R0
   \   0000038C   47A0A0E3           MOV      R10,#+71
   \                     ??CheckForInfoKey_61:
   \   00000390   CC0085E2           ADD      R0,R5,#+204
   \   00000394   ........           BL       strlen
   \   00000398   0080A0E1           MOV      R8,R0
   \   0000039C   00A08DE5           STR      R10,[SP, #+0]
   \   000003A0   0B00A0E1           MOV      R0,R11
   \   000003A4   ........           BL       __aeabi_f2d
   \   000003A8   0020A0E1           MOV      R2,R0
   \   000003AC   0130A0E1           MOV      R3,R1
   \   000003B0   050088E0           ADD      R0,R8,R5
   \   000003B4   ............       ADRL     R1,`?<Constant "\\n\\nSD Card Free Space ...">`
   \              ....        
   \   000003BC   CC0080E2           ADD      R0,R0,#+204
   \   000003C0   ........           BL       sprintf
   \   000003C4   030000EA           B        ??CheckForInfoKey_62
   \                     ??CheckForInfoKey_57:
   \   000003C8   ............       ADRL     R1,`?<Constant "\\n\\nNo SD card present">`
   \              ....        
   \   000003D0   CC0085E2           ADD      R0,R5,#+204
   \   000003D4   ........           BL       strcat
   \                     ??CheckForInfoKey_62:
   \   000003D8   CC0085E2           ADD      R0,R5,#+204
   \   000003DC   61FFFFEA           B        ??CheckForInfoKey_42
   2547          			if (hasHelp)
   2548          				return true;
   2549          			break;
   2550          
   2551          		case LAP_METER:
   2552          			//pHelpScreens = PredictiveLapHelpScreens;
   2553          			pHelpTitle = "Predictive Scale Info";
   \                     ??CheckForInfoKey_55:
   \   000003E0   ............       ADRL     R0,`?<Constant "Predictive Scale Info">`
   \              ....        
   \   000003E8   C00085E5           STR      R0,[R5, #+192]
   2554          			pHelpText = PREDICTIVE_SCALE_INFO;
   \   000003EC   ............       ADRL     R0,PREDICTIVE_SCALE_INFO
   \              ....        
   \   000003F4   A8FFFFEA           B        ??CheckForInfoKey_56
   2555          			if (hasHelp)
   2556          				return true;
   2557          			break;
   2558          
   2559          		}
   2560          		break;
   2561          		
   2562          	case VEHICLE_SETTING_SCREEN_TYPE:
   2563          		pHelpTitle = "Vehicle Settings Info";
   \                     ??CheckForInfoKey_15:
   \   000003F8   ............       ADRL     R0,`?<Constant "Vehicle Settings Info">`
   \              ....        
   \   00000400   C00085E5           STR      R0,[R5, #+192]
   2564          		pHelpText = VEHICLE_SETTINGS_INFO;
   \   00000404   ............       ADRL     R0,VEHICLE_SETTINGS_INFO
   \              ....        
   \   0000040C   BC0085E5           STR      R0,[R5, #+188]
   2565          		pHelpScreens = VehicleSetupSpecificHelpScreens;
   \   00000410   ........           LDR      R0,??DataTable177
   \   00000414   4AFFFFEA           B        ??CheckForInfoKey_39
   2566          		if (hasHelp)
   2567          			return true;
   2568          		break;
   2569          
   2570          	case AERO_GRIP_SCREEN_TYPE:
   2571          		pHelpTitle = "Aero/Grip Info";
   \                     ??CheckForInfoKey_28:
   \   00000418   ............       ADRL     R0,`?<Constant "Aero/Grip Info">`
   \              ....        
   2572          		pHelpText = AERO_GRIP_INFO;
   2573          		if (hasHelp)
   \   00000420   000057E3           CMP      R7,#+0
   \   00000424   C00085E5           STR      R0,[R5, #+192]
   \   00000428   ............       ADRL     R0,AERO_GRIP_INFO
   \              ....        
   \   00000430   BC0085E5           STR      R0,[R5, #+188]
   \   00000434   44FFFFEA           B        ??CheckForInfoKey_41
   2574          			return true;
   2575          		break;
   2576          
   2577          	case VEHICLE_SETTINGS_SCREENS_TYPE:
   2578          		switch (currentScreen)
   \                     ??CheckForInfoKey_14:
   \   00000438   050050E3           CMP      R0,#+5
   \   0000043C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_4:
   \   00000440   2701008A           BHI      ??CheckForInfoKey_9
   \   00000444   040000EA           B        ??CheckForInfoKey_63
   \   00000448   0B0000EA           B        ??CheckForInfoKey_64
   \   0000044C   110000EA           B        ??CheckForInfoKey_65
   \   00000450   160000EA           B        ??CheckForInfoKey_66
   \   00000454   1E0000EA           B        ??CheckForInfoKey_67
   \   00000458   230000EA           B        ??CheckForInfoKey_68
   2579          		{
   2580          		case TACH_SELECTION:
   2581          			pHelpTitle = "Tach Settings Info";
   \                     ??CheckForInfoKey_63:
   \   0000045C   ............       ADRL     R0,`?<Constant "Tach Settings Info">`
   \              ....        
   \   00000464   C00085E5           STR      R0,[R5, #+192]
   2582          			pHelpText = TACH_SETTINGS_INFO;
   \   00000468   ............       ADRL     R0,TACH_SETTINGS_INFO
   \              ....        
   \   00000470   BC0085E5           STR      R0,[R5, #+188]
   2583          			pHelpScreens = TachSpecificHelpScreens;
   \   00000474   ........           LDR      R0,??DataTable178
   \   00000478   31FFFFEA           B        ??CheckForInfoKey_39
   2584          			if (hasHelp)
   2585          				return true;
   2586          			break;
   2587          
   2588          		case CARMETRICS_SELECTION:
   2589          			pHelpTitle = "Car Metrics Info";
   \                     ??CheckForInfoKey_64:
   \   0000047C   ............       ADRL     R0,`?<Constant "Car Metrics Info">`
   \              ....        
   \   00000484   C00085E5           STR      R0,[R5, #+192]
   2590          			pHelpText = CAR_METRICS_INFO;
   \   00000488   ............       ADRL     R0,CAR_METRICS_INFO
   \              ....        
   \                     ??CheckForInfoKey_69:
   \   00000490   BC0085E5           STR      R0,[R5, #+188]
   2591          			if (hasHelp)
   \   00000494   2BFFFFEA           B        ??CheckForInfoKey_40
   2592          				return true;
   2593          			break;
   2594          
   2595          		case GEARRATIO_SELECTION:
   2596          			pHelpTitle = "Gear Ratio Info";
   \                     ??CheckForInfoKey_65:
   \   00000498   ............       ADRL     R0,`?<Constant "Gear Ratio Info">`
   \              ....        
   \   000004A0   C00085E5           STR      R0,[R5, #+192]
   2597          			pHelpText = GEAR_RATIO_INFO;
   \   000004A4   ............       ADRL     R0,GEAR_RATIO_INFO
   \              ....        
   \   000004AC   2DFFFFEA           B        ??CheckForInfoKey_42
   2598          			if (hasHelp)
   2599          				return true;
   2600          			break;
   2601          
   2602          		case INPUTS_SELECTION:
   2603          			pHelpTitle = "Inputs Info";
   \                     ??CheckForInfoKey_66:
   \   000004B0   ............       ADRL     R0,`?<Constant "Inputs Info">`
   \              ....        
   \   000004B8   C00085E5           STR      R0,[R5, #+192]
   2604          			pHelpText = INPUTS_INFO;
   \   000004BC   ............       ADRL     R0,INPUTS_INFO
   \              ....        
   \   000004C4   BC0085E5           STR      R0,[R5, #+188]
   2605          			pHelpScreens = AnalogInputsHelpScreens;
   \   000004C8   ........           LDR      R0,??DataTable178_1
   \                     ??CheckForInfoKey_70:
   \   000004CC   000084E5           STR      R0,[R4, #+0]
   2606          			if (hasHelp)
   \   000004D0   1CFFFFEA           B        ??CheckForInfoKey_40
   2607          				return true;
   2608          			break;
   2609          
   2610          		case WEIGHT_SELECTION:
   2611          			pHelpTitle = "Vehicle Weight Info";
   \                     ??CheckForInfoKey_67:
   \   000004D4   ............       ADRL     R0,`?<Constant "Vehicle Weight Info">`
   \              ....        
   \   000004DC   C00085E5           STR      R0,[R5, #+192]
   2612          			pHelpText = WEIGHT_INFO;
   \   000004E0   ............       ADRL     R0,WEIGHT_INFO
   \              ....        
   \   000004E8   3CFFFFEA           B        ??CheckForInfoKey_48
   2613          			if (hasHelp)
   2614          				return true;
   2615          			break;
   2616          
   2617          		case CAMERA_SETUP_SELECTION:
   2618          			pHelpTitle = "Camera Setup Info";
   \                     ??CheckForInfoKey_68:
   \   000004EC   ............       ADRL     R0,`?<Constant "Camera Setup Info">`
   \              ....        
   \   000004F4   C00085E5           STR      R0,[R5, #+192]
   2619          			pHelpText = CAMERA_SETUP_INFO;
   \   000004F8   ............       ADRL     R0,CAMERA_SETUP_INFO
   \              ....        
   \   00000500   BC0085E5           STR      R0,[R5, #+188]
   2620          			pHelpScreens = GenericCameraHelpScreens;
   \   00000504   ........           LDR      R0,??DataTable178_2
   \   00000508   1FFFFFEA           B        ??CheckForInfoKey_43
   2621          			if (hasHelp)
   2622          				return true;
   2623          			break;
   2624          
   2625          		}
   2626          		break;
   2627          
   2628          	case TACH_SETUP_SCREENS_TYPE:
   2629          		switch (currentScreen)
   \                     ??CheckForInfoKey_16:
   \   0000050C   040050E3           CMP      R0,#+4
   \   00000510   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_5:
   \   00000514   F200008A           BHI      ??CheckForInfoKey_9
   \   00000518   030000EA           B        ??CheckForInfoKey_71
   \   0000051C   080000EA           B        ??CheckForInfoKey_72
   \   00000520   0D0000EA           B        ??CheckForInfoKey_73
   \   00000524   130000EA           B        ??CheckForInfoKey_74
   \   00000528   180000EA           B        ??CheckForInfoKey_75
   2630          		{
   2631          		case WARNING_RPM_SETUP:
   2632          			pHelpTitle = "Warning RPM Info";
   \                     ??CheckForInfoKey_71:
   \   0000052C   ............       ADRL     R0,`?<Constant "Warning RPM Info">`
   \              ....        
   \   00000534   C00085E5           STR      R0,[R5, #+192]
   2633          			pHelpText = TACH_WARNING_INFO;
   \   00000538   ............       ADRL     R0,TACH_WARNING_INFO
   \              ....        
   \   00000540   08FFFFEA           B        ??CheckForInfoKey_42
   2634          			if (hasHelp)
   2635          				return true;
   2636          			break;
   2637          
   2638          		case REDLINE_RPM_SETUP:
   2639          			pHelpTitle = "Redline RPM Info";
   \                     ??CheckForInfoKey_72:
   \   00000544   ............       ADRL     R0,`?<Constant "Redline RPM Info">`
   \              ....        
   \   0000054C   C00085E5           STR      R0,[R5, #+192]
   2640          			pHelpText = TACH_REDLINE_INFO;
   \   00000550   ............       ADRL     R0,TACH_REDLINE_INFO
   \              ....        
   \   00000558   4FFFFFEA           B        ??CheckForInfoKey_56
   2641          			if (hasHelp)
   2642          				return true;
   2643          			break;
   2644          
   2645          		case ENGINE_CYLINDERS_SETUP:
   2646          			pHelpTitle = "Engine Cyl RPM Info";
   \                     ??CheckForInfoKey_73:
   \   0000055C   ............       ADRL     R0,`?<Constant "Engine Cyl RPM Info">`
   \              ....        
   \   00000564   C00085E5           STR      R0,[R5, #+192]
   2647          			pHelpText = NUM_CYL_INFO;
   \   00000568   ............       ADRL     R0,NUM_CYL_INFO
   \              ....        
   \                     ??CheckForInfoKey_76:
   \   00000570   BC0085E5           STR      R0,[R5, #+188]
   2648          			if (hasHelp)
   \   00000574   F3FEFFEA           B        ??CheckForInfoKey_40
   2649          				return true;
   2650          			break;
   2651          
   2652          		case POWERBANDEND_RPM_SETUP:
   2653          			pHelpTitle = "Powerband RPM Info";
   \                     ??CheckForInfoKey_74:
   \   00000578   ............       ADRL     R0,`?<Constant "Powerband RPM Info">`
   \              ....        
   \   00000580   C00085E5           STR      R0,[R5, #+192]
   2654          			pHelpText = TACH_PWREND_INFO;
   \   00000584   ............       ADRL     R0,TACH_PWREND_INFO
   \              ....        
   \   0000058C   2CFFFFEA           B        ??CheckForInfoKey_49
   2655          			if (hasHelp)
   2656          				return true;
   2657          			break;
   2658          
   2659          		case MAX_RPM_SETUP:
   2660          			pHelpTitle = "Max RPM Info";
   \                     ??CheckForInfoKey_75:
   \   00000590   ............       ADRL     R0,`?<Constant "Max RPM Info">`
   \              ....        
   \   00000598   C00085E5           STR      R0,[R5, #+192]
   2661          			pHelpText = TACH_MAXRPM_INFO;
   \   0000059C   ............       ADRL     R0,TACH_MAXRPM_INFO
   \              ....        
   \   000005A4   EFFEFFEA           B        ??CheckForInfoKey_42
   2662          			if (hasHelp)
   2663          				return true;
   2664          			break;
   2665          
   2666          		}
   2667          		break;
   2668          
   2669          	case INPUTS_SCREENS_TYPE:
   2670          		switch (currentScreen)
   \                     ??CheckForInfoKey_17:
   \   000005A8   050050E3           CMP      R0,#+5
   \   000005AC   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_6:
   \   000005B0   CB00008A           BHI      ??CheckForInfoKey_9
   \   000005B4   040000EA           B        ??CheckForInfoKey_77
   \   000005B8   030000EA           B        ??CheckForInfoKey_77
   \   000005BC   020000EA           B        ??CheckForInfoKey_77
   \   000005C0   010000EA           B        ??CheckForInfoKey_77
   \   000005C4   080000EA           B        ??CheckForInfoKey_78
   \   000005C8   070000EA           B        ??CheckForInfoKey_78
   2671          		{
   2672          		case ANALOG0:
   2673          		case ANALOG1:
   2674          		case ANALOG2:
   2675          		case ANALOG3:
   2676          			pHelpTitle = "Analog Input Info";
   \                     ??CheckForInfoKey_77:
   \   000005CC   ............       ADRL     R0,`?<Constant "Analog Input Info">`
   \              ....        
   \   000005D4   C00085E5           STR      R0,[R5, #+192]
   2677          			pHelpText = ANALOG_SETTINGS_INFO;
   \   000005D8   ............       ADRL     R0,ANALOG_SETTINGS_INFO
   \              ....        
   \   000005E0   BC0085E5           STR      R0,[R5, #+188]
   2678          			pHelpScreens = AnalogInputsHelpScreens;
   \   000005E4   ........           LDR      R0,??DataTable178_1
   \   000005E8   D5FEFFEA           B        ??CheckForInfoKey_39
   2679          			if (hasHelp)
   2680          				return true;
   2681          			break;
   2682          
   2683          		case DIGITAL4:
   2684          		case DIGITAL5:
   2685          			pHelpTitle = "Digital Input Info";
   \                     ??CheckForInfoKey_78:
   \   000005EC   ............       ADRL     R0,`?<Constant "Digital Input Info">`
   \              ....        
   \   000005F4   C00085E5           STR      R0,[R5, #+192]
   2686          			pHelpText = DIGITAL_SETTINGS_INFO;
   \   000005F8   ............       ADRL     R0,DIGITAL_SETTINGS_INFO
   \              ....        
   \   00000600   BC0085E5           STR      R0,[R5, #+188]
   2687          			pHelpScreens = AnalogInputsHelpScreens;
   \   00000604   ........           LDR      R0,??DataTable178_1
   \   00000608   DFFEFFEA           B        ??CheckForInfoKey_43
   2688          			if (hasHelp)
   2689          				return true;
   2690          			break;
   2691          
   2692          		}
   2693          		break;
   2694          
   2695          	case REVIEW_SESSIONS_SCREENS_TYPE:
   2696          		pHelpScreens = ReviewSessionsHelpScreens;
   \                     ??CheckForInfoKey_18:
   \   0000060C   ........           LDR      R1,??DataTable175_3
   2697          		if (currentScreen == CHECK_TIMES_SCREEN)
   \   00000610   000050E3           CMP      R0,#+0
   \   00000614   001084E5           STR      R1,[R4, #+0]
   \   00000618   BF00001A           BNE      ??CheckForInfoKey_79
   2698          		{
   2699          			pHelpTitle = "Check Times Info";
   \   0000061C   ............       ADRL     R0,`?<Constant "Check Times Info">`
   \              ....        
   \   00000624   C00085E5           STR      R0,[R5, #+192]
   2700          			pHelpText = SESSION_DETAILS_INFO;
   \   00000628   ............       ADRL     R0,SESSION_DETAILS_INFO
   \              ....        
   \   00000630   CCFEFFEA           B        ??CheckForInfoKey_42
   \                     ??CheckForInfoKey_58:
   \   00000634   00000000           DC8      "",0x0,0x0,0x0
   2701          			if (hasHelp)
   2702          				return true;
   2703          		}
   2704          		break;
   2705          
   2706          	case TRACK_SETTING_SCREEN_TYPE:
   2707          		pHelpTitle = "Track Settings Info";
   \                     ??CheckForInfoKey_19:
   \   00000638   ............       ADRL     R0,`?<Constant "Track Settings Info">`
   \              ....        
   \   00000640   C00085E5           STR      R0,[R5, #+192]
   2708          		pHelpText = TRACK_SETTINGS_INFO;
   \   00000644   ............       ADRL     R0,TRACK_SETTINGS_INFO
   \              ....        
   \   0000064C   FCFEFFEA           B        ??CheckForInfoKey_49
   2709          		if (hasHelp)
   2710          			return true;
   2711          		break;
   2712          
   2713          	case TRACK_SETTINGS_SCREENS_TYPE:
   2714          		switch (currentScreen)
   \                     ??CheckForInfoKey_20:
   \   00000650   030050E3           CMP      R0,#+3
   \   00000654   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??CheckForInfoKey_7:
   \   00000658   A100008A           BHI      ??CheckForInfoKey_9
   \   0000065C   020000EA           B        ??CheckForInfoKey_80
   \   00000660   090000EA           B        ??CheckForInfoKey_81
   \   00000664   100000EA           B        ??CheckForInfoKey_82
   \   00000668   170000EA           B        ??CheckForInfoKey_83
   2715          		{
   2716          		case TRACKTYPE_SELECTION:
   2717          			pHelpTitle = "Track Type Info";
   \                     ??CheckForInfoKey_80:
   \   0000066C   ............       ADRL     R0,`?<Constant "Track Type Info">`
   \              ....        
   \   00000674   C00085E5           STR      R0,[R5, #+192]
   2718          			pHelpText = TRACK_TYPE_INFO;
   \   00000678   ............       ADRL     R0,TRACK_TYPE_INFO
   \              ....        
   \   00000680   BC0085E5           STR      R0,[R5, #+188]
   2719          			pHelpScreens = MainHelpScreens;
   \   00000684   ........           LDR      R0,??DataTable179
   \   00000688   ADFEFFEA           B        ??CheckForInfoKey_39
   2720          			if (hasHelp)
   2721          				return true;
   2722          			break;
   2723          
   2724          		case HOLDTIME_SELECTION:
   2725          			pHelpTitle = "Hold Time Info";
   \                     ??CheckForInfoKey_81:
   \   0000068C   ............       ADRL     R0,`?<Constant "Hold Time Info">`
   \              ....        
   \   00000694   C00085E5           STR      R0,[R5, #+192]
   2726          			pHelpText = LAP_HOLD_INFO;
   \   00000698   ............       ADRL     R0,LAP_HOLD_INFO
   \              ....        
   \   000006A0   BC0085E5           STR      R0,[R5, #+188]
   2727          			pHelpScreens = MainHelpScreens;
   \   000006A4   ........           LDR      R0,??DataTable179
   \   000006A8   B7FEFFEA           B        ??CheckForInfoKey_43
   2728          			if (hasHelp)
   2729          				return true;
   2730          			break;
   2731          
   2732          		case STARTFINISH_SELECTION:
   2733          			pHelpTitle = "Start/Finish Line Info";
   \                     ??CheckForInfoKey_82:
   \   000006AC   ............       ADRL     R0,`?<Constant "Start/Finish Line Info">`
   \              ....        
   \   000006B4   C00085E5           STR      R0,[R5, #+192]
   2734          			pHelpText = START_FINISH_INFO;
   \   000006B8   ............       ADRL     R0,START_FINISH_INFO
   \              ....        
   \   000006C0   BC0085E5           STR      R0,[R5, #+188]
   2735          			pHelpScreens = MainHelpScreens;
   \   000006C4   ........           LDR      R0,??DataTable179
   \   000006C8   9DFEFFEA           B        ??CheckForInfoKey_39
   2736          			if (hasHelp)
   2737          				return true;
   2738          			break;
   2739          
   2740          		case RESETPL_SELECTION:
   2741          			pHelpTitle = "Predictive Lap Info";
   \                     ??CheckForInfoKey_83:
   \   000006CC   ............       ADRL     R0,`?<Constant "Predictive Lap Info">`
   \              ....        
   \   000006D4   C00085E5           STR      R0,[R5, #+192]
   2742          			pHelpText = PREDICTIVE_LAP_INFO;
   \   000006D8   ............       ADRL     R0,PREDICTIVE_LAP_INFO
   \              ....        
   \   000006E0   BC0085E5           STR      R0,[R5, #+188]
   2743          			pHelpScreens = MainHelpScreens;
   \   000006E4   ........           LDR      R0,??DataTable179
   \   000006E8   77FFFFEA           B        ??CheckForInfoKey_70
   2744          			if (hasHelp)
   2745          				return true;
   2746          			break;
   2747          
   2748          		}
   2749          		break;
   2750          
   2751          	case DRIVE_MODE_SCREEN_TYPE:
   2752          	case INSTRUMENTS_MODE_SCREEN_TYPE:
   2753          	case GAUGES_SCREEN_TYPE:
   2754          		break;
   2755          
   2756          	case GEARING_SCREENS_TYPE:
   2757          		switch (currentScreen)
   \                     ??CheckForInfoKey_21:
   \   000006EC   000050E3           CMP      R0,#+0
   \   000006F0   0300000A           BEQ      ??CheckForInfoKey_84
   \   000006F4   020050E3           CMP      R0,#+2
   \   000006F8   1100000A           BEQ      ??CheckForInfoKey_85
   \   000006FC   0800003A           BCC      ??CheckForInfoKey_86
   \   00000700   770000EA           B        ??CheckForInfoKey_9
   2758          		{
   2759          		case TIRESIZE_SELECTION_SCREEN:
   2760          			pHelpTitle = "Tire Size Selection Info";
   \                     ??CheckForInfoKey_84:
   \   00000704   ............       ADRL     R0,`?<Constant "Tire Size Selection Info">`
   \              ....        
   \   0000070C   C00085E5           STR      R0,[R5, #+192]
   2761          			pHelpText = TIRE_SIZE_INFO;
   \   00000710   ............       ADRL     R0,TIRE_SIZE_INFO
   \              ....        
   \   00000718   BC0085E5           STR      R0,[R5, #+188]
   2762          			pHelpScreens = MainHelpScreens;
   \   0000071C   ........           LDR      R0,??DataTable179
   \   00000720   87FEFFEA           B        ??CheckForInfoKey_39
   2763          			if (hasHelp)
   2764          				return true;
   2765          			break;
   2766          
   2767          		case DIFFRATIO_SCREEN:
   2768          			pHelpTitle = "Diff Ratio Info";
   \                     ??CheckForInfoKey_86:
   \   00000724   ............       ADRL     R0,`?<Constant "Diff Ratio Info">`
   \              ....        
   \   0000072C   C00085E5           STR      R0,[R5, #+192]
   2769          			pHelpText = DIFF_RATIO_INFO;
   \   00000730   ............       ADRL     R0,DIFF_RATIO_INFO
   \              ....        
   \   00000738   BC0085E5           STR      R0,[R5, #+188]
   2770          			pHelpScreens = MainHelpScreens;
   \   0000073C   ........           LDR      R0,??DataTable179
   \   00000740   91FEFFEA           B        ??CheckForInfoKey_43
   2771          			if (hasHelp)
   2772          				return true;
   2773          			break;
   2774          
   2775          		case TRANSRATIO_SCREEN:
   2776          			pHelpTitle = "Transmission Ratios Info";
   \                     ??CheckForInfoKey_85:
   \   00000744   ............       ADRL     R0,`?<Constant "Transmission Ratios Info">`
   \              ....        
   \   0000074C   C00085E5           STR      R0,[R5, #+192]
   2777          			pHelpText = TRANS_RATIO_INFO;
   \   00000750   ............       ADRL     R0,TRANS_RATIO_INFO
   \              ....        
   \   00000758   BC0085E5           STR      R0,[R5, #+188]
   2778          			pHelpScreens = MainHelpScreens;
   \   0000075C   ........           LDR      R0,??DataTable179
   \   00000760   77FEFFEA           B        ??CheckForInfoKey_39
   2779          			if (hasHelp)
   2780          				return true;
   2781          			break;
   2782          
   2783          		}
   2784          		break;
   2785          
   2786          	case GEAR_RATIOS:
   2787          		break;
   2788          	case SFSCREENS_TYPE:
   2789          		break;
   2790          
   2791          	case ANALOG_SETTINGS_SCREEN_TYPE:
   2792          		switch (currentScreen)
   \                     ??CheckForInfoKey_22:
   \   00000764   000050E3           CMP      R0,#+0
   \   00000768   0200000A           BEQ      ??CheckForInfoKey_87
   \   0000076C   010050E3           CMP      R0,#+1
   \   00000770   0800000A           BEQ      ??CheckForInfoKey_88
   \   00000774   5A0000EA           B        ??CheckForInfoKey_9
   2793          		{
   2794          		case SCALE:
   2795          			pHelpTitle = "Analog Scale Info";
   \                     ??CheckForInfoKey_87:
   \   00000778   ............       ADRL     R0,`?<Constant "Analog Scale Info">`
   \              ....        
   \   00000780   C00085E5           STR      R0,[R5, #+192]
   2796          			pHelpText = ANALOG_SCALE_INFO;
   \   00000784   ............       ADRL     R0,ANALOG_SCALE_INFO
   \              ....        
   \   0000078C   BC0085E5           STR      R0,[R5, #+188]
   2797          			pHelpScreens = EditScaleHelpScreens;
   \   00000790   ........           LDR      R0,??DataTable179_1
   \   00000794   6AFEFFEA           B        ??CheckForInfoKey_39
   2798          			if (hasHelp)
   2799          				return true;
   2800          			break;
   2801          
   2802          		case ALARM:
   2803          			pHelpTitle = "Analog Alarm Info";
   \                     ??CheckForInfoKey_88:
   \   00000798   ............       ADRL     R0,`?<Constant "Analog Alarm Info">`
   \              ....        
   \   000007A0   C00085E5           STR      R0,[R5, #+192]
   2804          			pHelpText = ANALOG_ALARM_INFO;
   \   000007A4   ............       ADRL     R0,ANALOG_ALARM_INFO
   \              ....        
   \   000007AC   BC0085E5           STR      R0,[R5, #+188]
   2805          			pHelpScreens = AnalogInputsHelpScreens;
   \   000007B0   ........           LDR      R0,??DataTable178_1
   \   000007B4   74FEFFEA           B        ??CheckForInfoKey_43
   2806          			if (hasHelp)
   2807          				return true;
   2808          			break;
   2809          
   2810          		}
   2811          		break;
   2812          
   2813          	case ANALOG_INPUTS_SCALE:
   2814          		break;
   2815          
   2816          	case DIGITAL_SETTINGS_SCREEN_TYPE:
   2817          		if (currentScreen == DIG_ALARM_STATE)
   \                     ??CheckForInfoKey_23:
   \   000007B8   000050E3           CMP      R0,#+0
   \   000007BC   5600001A           BNE      ??CheckForInfoKey_79
   2818          		{
   2819          			pHelpTitle = "Digital Alarm Info";
   \   000007C0   ............       ADRL     R0,`?<Constant "Digital Alarm Info">`
   \              ....        
   \   000007C8   C00085E5           STR      R0,[R5, #+192]
   2820          			pHelpText = DIGITAL_ALARM_INFO;
   \   000007CC   ............       ADRL     R0,DIGITAL_ALARM_INFO
   \              ....        
   \   000007D4   63FEFFEA           B        ??CheckForInfoKey_42
   2821          			if (hasHelp)
   2822          				return true;
   2823          		}
   2824          		break;
   2825          
   2826          	case TIRE_DIMENSIONS_SCREEN_TYPE:
   2827          		pHelpTitle = "Tire Size Info";
   \                     ??CheckForInfoKey_24:
   \   000007D8   ............       ADRL     R0,`?<Constant "Tire Size Info">`
   \              ....        
   \   000007E0   C00085E5           STR      R0,[R5, #+192]
   2828          		pHelpText = TIRE_DIMENSIONS_INFO;
   \   000007E4   ............       ADRL     R0,TIRE_DIMENSIONS_INFO
   \              ....        
   \   000007EC   94FEFFEA           B        ??CheckForInfoKey_49
   2829          		if (hasHelp)
   2830          			return true;
   2831          		break;
   2832          
   2833          	case DISPLAY_CLOSEST_TRACKS_SCREEN_TYPE:
   2834          		handleSprites = true;		// This screen uses sprites for shadow effect on the list - hide them during the popup
   2835          		pHelpTitle = "Choose Track Info";
   \                     ??CheckForInfoKey_25:
   \   000007F0   ............       ADRL     R0,`?<Constant "Choose Track Info">`
   \              ....        
   \   000007F8   0160A0E3           MOV      R6,#+1
   \   000007FC   C00085E5           STR      R0,[R5, #+192]
   2836          		pHelpText = CHOOSE_TRACK_INFO;
   \   00000800   ............       ADRL     R0,CHOOSE_TRACK_INFO
   \              ....        
   \   00000808   74FEFFEA           B        ??CheckForInfoKey_48
   2837          		if (hasHelp)
   2838          			return true;
   2839          		break;
   2840          
   2841          	case PERSONALIZE_REVIEW_SCREEN_TYPE:
   2842          		pHelpTitle = "Personalize Unit Info";
   \                     ??CheckForInfoKey_26:
   \   0000080C   ............       ADRL     R0,`?<Constant "Personalize Unit Info">`
   \              ....        
   \   00000814   C00085E5           STR      R0,[R5, #+192]
   2843          		pHelpText = PERSONALIZE_INFO;
   \   00000818   ............       ADRL     R0,PERSONALIZE_INFO
   \              ....        
   \   00000820   9DFEFFEA           B        ??CheckForInfoKey_56
   2844          		if (hasHelp)
   2845          			return true;
   2846          		break;
   2847          
   2848          	case WAITING_FOR_STAGE_SCREEN_TYPE:
   2849          		// No need for hasHelp test because the normal screen banner is not displayed and so that test will not be performed
   2850          		if (sysData.selectedSessionType == AUTOCROSS_TYPE)
   \                     ??CheckForInfoKey_27:
   \   00000824   D000DAE5           LDRB     R0,[R10, #+208]
   \   00000828   410050E3           CMP      R0,#+65
   \   0000082C   0600001A           BNE      ??CheckForInfoKey_89
   2851          		{
   2852          			pHelpTitle = "Autocross Stage Info";
   \   00000830   ............       ADRL     R0,`?<Constant "Autocross Stage Info">`
   \              ....        
   \   00000838   C00085E5           STR      R0,[R5, #+192]
   2853          			pHelpText = AUTOX_STAGE_SCREEN_INFO;
   \   0000083C   ............       ADRL     R0,AUTOX_STAGE_SCREEN_INFO
   \              ....        
   \                     ??CheckForInfoKey_90:
   \   00000844   BC0085E5           STR      R0,[R5, #+188]
   \   00000848   250000EA           B        ??CheckForInfoKey_9
   2854          		}
   2855          		else
   2856          		{
   2857          			pHelpTitle = "Drag Stage Info";
   \                     ??CheckForInfoKey_89:
   \   0000084C   ............       ADRL     R0,`?<Constant "Drag Stage Info">`
   \              ....        
   \   00000854   C00085E5           STR      R0,[R5, #+192]
   2858          			pHelpText = DRAG_STAGE_SCREEN_INFO;
   \   00000858   ............       ADRL     R0,DRAG_STAGE_SCREEN_INFO
   \              ....        
   \   00000860   F7FFFFEA           B        ??CheckForInfoKey_90
   2859          		}
   2860          		break;
   2861          
   2862          	case CAMERA_DELAY_SCREEN_TYPE:
   2863          		pHelpScreens = SUSpecificCameraHelpScreens;
   \                     ??CheckForInfoKey_30:
   \   00000864   ........           LDR      R0,??DataTable181
   \   00000868   000084E5           STR      R0,[R4, #+0]
   2864          		pHelpTitle = "Camera Delay Info";
   \   0000086C   ............       ADRL     R0,`?<Constant "Camera Delay Info">`
   \              ....        
   \   00000874   C00085E5           STR      R0,[R5, #+192]
   2865          		pHelpText = CAMERA_DELAY_INFO;
   \   00000878   ............       ADRL     R0,CAMERA_DELAY_INFO
   \              ....        
   \   00000880   38FEFFEA           B        ??CheckForInfoKey_42
   2866          		if (hasHelp)
   2867          			return true;
   2868          		break;
   2869          
   2870          	case TRAQDASH_CAMERA_SCREEN:
   2871          		pHelpScreens = DUSpecificCameraHelpScreens;
   \                     ??CheckForInfoKey_31:
   \   00000884   ........           LDR      R0,??DataTable179_2
   \   00000888   000084E5           STR      R0,[R4, #+0]
   2872          		pHelpTitle = "Camera Delay Info";
   \   0000088C   ............       ADRL     R0,`?<Constant "Camera Delay Info">`
   \              ....        
   \   00000894   C00085E5           STR      R0,[R5, #+192]
   2873          		pHelpText = CAMERA_DELAY_INFO;
   \   00000898   ............       ADRL     R0,CAMERA_DELAY_INFO
   \              ....        
   \   000008A0   FAFEFFEA           B        ??CheckForInfoKey_69
   2874          		if (hasHelp)
   2875          			return true;
   2876          		break;
   2877          
   2878          	case CAMERA_SELECTION_SCREEN_TYPE:
   2879          		pHelpScreens = SUSpecificCameraHelpScreens;
   \                     ??CheckForInfoKey_29:
   \   000008A4   ........           LDR      R0,??DataTable181
   \   000008A8   000084E5           STR      R0,[R4, #+0]
   2880          		pHelpTitle = "Camera Selection Info";
   \   000008AC   ............       ADRL     R0,`?<Constant "Camera Selection Info">`
   \              ....        
   \   000008B4   C00085E5           STR      R0,[R5, #+192]
   2881          		pHelpText = CAMERA_INFO;
   \   000008B8   ............       ADRL     R0,CAMERA_INFO
   \              ....        
   \   000008C0   2AFFFFEA           B        ??CheckForInfoKey_76
   2882          		if (hasHelp)
   2883          			return true;
   2884          		break;
   2885          
   2886          	case RECORD_SPEED_SCREEN_TYPE:
   2887          		pHelpTitle = "Record Speed Info";
   \                     ??CheckForInfoKey_32:
   \   000008C4   ............       ADRL     R0,`?<Constant "Record Speed Info">`
   \              ....        
   2888          		pHelpText = RECORD_SPEED_INFO;
   2889          		if (hasHelp)
   \   000008CC   000057E3           CMP      R7,#+0
   \   000008D0   C00085E5           STR      R0,[R5, #+192]
   \   000008D4   ............       ADRL     R0,RECORD_SPEED_INFO
   \              ....        
   \   000008DC   BC0085E5           STR      R0,[R5, #+188]
   \   000008E0   07FEFF1A           BNE      ??CheckForInfoKey_33
   2890          			return true;
   2891          		break;
   2892          	}
   2893          
   2894          	if (pHelpText)
   \                     ??CheckForInfoKey_9:
   \   000008E4   BC0095E5           LDR      R0,[R5, #+188]
   \   000008E8   000050E3           CMP      R0,#+0
   \   000008EC   0B00000A           BEQ      ??CheckForInfoKey_34
   2895          	{
   2896          		if (handleSprites)
   \   000008F0   000056E3           CMP      R6,#+0
   \   000008F4   0000000A           BEQ      ??CheckForInfoKey_91
   2897          			HideSprites();					// Take sprites away before showing help popup
   \   000008F8   ........           BL       HideSprites
   2898          		ShowHelpPopup( pHelpScreens == (HELP_SCREENS *)-1 ? false : true);
   \                     ??CheckForInfoKey_91:
   \   000008FC   000094E5           LDR      R0,[R4, #+0]
   \   00000900   090050E1           CMP      R0,R9
   \   00000904   0000A003           MOVEQ    R0,#+0
   \   00000908   0100A013           MOVNE    R0,#+1
   \   0000090C   ........           BL       ShowHelpPopup
   2899          		if (handleSprites)
   \   00000910   000056E3           CMP      R6,#+0
   \   00000914   0000000A           BEQ      ??CheckForInfoKey_79
   2900          			UnhideSprites();				// Put sprites back when popup goes away
   \   00000918   ........           BL       UnhideSprites
   2901          	}
   2902          	
   2903          	return false;
   \                     ??CheckForInfoKey_79:
   \   0000091C   0000A0E3           MOV      R0,#+0
   \                     ??CheckForInfoKey_34:
   \   00000920   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000924   F08FBDE8           POP      {R4-R11,PC}      ;; return
   2904          }
   2905          
   2906          #define	POPUP_WIDTH		440
   2907          #define	POPUP_HEIGHT	262
   2908          #define	POPUP_OFFSET	10
   2909          
   2910          #define	TITLE	GUI_ID_TEXT0
   2911          
   2912          //#define	POPUP_WIDTH		XSIZE_PHYS
   2913          //#define	POPUP_HEIGHT	YSIZE_PHYS
   2914          

   \                                 In section .text, align 4, keep-with-next
   2915          static const GUI_WIDGET_CREATE_INFO HelpPopup[] = {
   \                     HelpPopup:
   \   00000000                      ; Initializer data, 48 bytes
   \   00000000   ........0000       DC32 FRAMEWIN_CreateIndirect, 0
   \              0000        
   \   00000008   00000A000000       DC16 0, 10, 0, 440, 262, 0
   \              B80106010000
   \   00000014   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ............
   \   00000020   0100AA00B400       DC16 1, 170, 180, 100, 45
   \              64002D00    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2916          	{ FRAMEWIN_CreateIndirect, 0, 0, ((XSIZE_PHYS - POPUP_WIDTH) / 2) - POPUP_OFFSET, ((YSIZE_PHYS - POPUP_HEIGHT) / 2) - 5, POPUP_WIDTH, POPUP_HEIGHT, 0, 0 },
   2917          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, (POPUP_WIDTH / 2) - 50, POPUP_HEIGHT - 82, 100, 45 },
   2918          };
   2919          

   \                                 In section .text, align 4, keep-with-next
   2920          static const GUI_WIDGET_CREATE_INFO HelpWithDetailsPopup[] = {
   \                     HelpWithDetailsPopup:
   \   00000000                      ; Initializer data, 72 bytes
   \   00000000   ........0000       DC32 FRAMEWIN_CreateIndirect, 0
   \              0000        
   \   00000008   00000A000000       DC16 0, 10, 0, 440, 262, 0
   \              B80106010000
   \   00000014   00000000....       DC32 0, BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ............
   \   00000020   01005000B400       DC16 1, 80, 180, 100, 45
   \              64002D00    
   \   0000002A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000030   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Tutorial">`
   \              ....        
   \   00000038   0600E600B400       DC16 6, 230, 180, 100, 45
   \              64002D00    
   \   00000042   000000000000       DC8 0, 0, 0, 0, 0, 0
   2921          	{ FRAMEWIN_CreateIndirect, 0, 0, ((XSIZE_PHYS - POPUP_WIDTH) / 2) - POPUP_OFFSET, ((YSIZE_PHYS - POPUP_HEIGHT) / 2) - 5, POPUP_WIDTH, POPUP_HEIGHT, 0, 0 },
   2922          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 80, POPUP_HEIGHT - 82, 100, 45 },
   2923          	{ BUTTON_CreateIndirect, "Tutorial", GUI_ID_HELP, 230, POPUP_HEIGHT - 82, 100, 45 }
   2924          };
   2925          

   \                                 In section .text, align 4, keep-with-next
   2926          void ShowHelpPopup(int detailsAvail)
   2927          {
   \                     ShowHelpPopup:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   2928          	SetPopupDefaults(INFORMATIONAL_POPUP);
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       SetPopupDefaults
   \   00000014   ........           LDR      R0,??DataTable175
   \   00000018   000054E3           CMP      R4,#+0
   \   0000001C   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000020   4300000A           BEQ      ??ShowHelpPopup_2
   2929          	if (detailsAvail)
   2930          		GUI_ExecDialogBox(HelpWithDetailsPopup, GUI_COUNTOF(HelpWithDetailsPopup), &HelpCallback, GetCurrentWindowHandle(), POPUP_OFFSET, POPUP_OFFSET);
   \   00000024   130050E3           CMP      R0,#+19
   \   00000028   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ShowHelpPopup_0:
   \   0000002C   3600008A           BHI      ??ShowHelpPopup_3
   \   00000030   120000EA           B        ??ShowHelpPopup_4
   \   00000034   310000EA           B        ??ShowHelpPopup_5
   \   00000038   260000EA           B        ??ShowHelpPopup_6
   \   0000003C   250000EA           B        ??ShowHelpPopup_6
   \   00000040   240000EA           B        ??ShowHelpPopup_6
   \   00000044   2B0000EA           B        ??ShowHelpPopup_7
   \   00000048   280000EA           B        ??ShowHelpPopup_8
   \   0000004C   230000EA           B        ??ShowHelpPopup_9
   \   00000050   240000EA           B        ??ShowHelpPopup_10
   \   00000054   1D0000EA           B        ??ShowHelpPopup_11
   \   00000058   1A0000EA           B        ??ShowHelpPopup_12
   \   0000005C   170000EA           B        ??ShowHelpPopup_13
   \   00000060   140000EA           B        ??ShowHelpPopup_14
   \   00000064   110000EA           B        ??ShowHelpPopup_15
   \   00000068   0E0000EA           B        ??ShowHelpPopup_16
   \   0000006C   090000EA           B        ??ShowHelpPopup_17
   \   00000070   040000EA           B        ??ShowHelpPopup_18
   \   00000074   240000EA           B        ??ShowHelpPopup_3
   \   00000078   040000EA           B        ??ShowHelpPopup_19
   \   0000007C   070000EA           B        ??ShowHelpPopup_20
   \                     ??ShowHelpPopup_4:
   \   00000080   ........           BL       GetGeneralConfinScreenWindowHandle
   \   00000084   210000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_18:
   \   00000088   ........           BL       GetDigitalInputSettingsWindowHandle
   \   0000008C   1F0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_19:
   \   00000090   ........           BL       GetAnalogInputsScaleWindowHandle
   \   00000094   1D0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_17:
   \   00000098   ........           BL       GetAnalogInputSettingsWindowHandle
   \   0000009C   1B0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_20:
   \   000000A0   ........           BL       GetGearRatiosWindowHandle
   \   000000A4   190000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_16:
   \   000000A8   ........           BL       GetGearingWindowHandle
   \   000000AC   170000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_15:
   \   000000B0   ........           BL       GetTrackSettingsWindowHandle
   \   000000B4   150000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_14:
   \   000000B8   ........           BL       GetTrackSettingMainWindowHandle
   \   000000BC   130000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_13:
   \   000000C0   ........           BL       GetReviewSessionsWindowHandle
   \   000000C4   110000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_12:
   \   000000C8   ........           BL       GetInputsWindowHandle
   \   000000CC   0F0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_11:
   \   000000D0   ........           BL       GetTachSetupWindowHandle
   \   000000D4   0D0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_6:
   \   000000D8   ........           BL       GetRunningGaugesWindowHandle
   \   000000DC   0B0000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_9:
   \   000000E0   ........           BL       GetVehicleSettingsWindowHandle
   \   000000E4   090000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_10:
   \   000000E8   ........           BL       GetVehicleSettingMainWindowHandle
   \   000000EC   070000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_8:
   \   000000F0   ........           BL       GetSystemSettingsWindowHandle
   \   000000F4   050000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_7:
   \   000000F8   ........           BL       GetRaceSetupScreensWindowHandle
   \   000000FC   030000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_5:
   \   00000100   ........           LDR      R0,??DataTable181_1
   \   00000104   800090E5           LDR      R0,[R0, #+128]
   \   00000108   000000EA           B        ??ShowHelpPopup_21
   \                     ??ShowHelpPopup_3:
   \   0000010C   0000A0E3           MOV      R0,#+0
   \                     ??ShowHelpPopup_21:
   \   00000110   0A10A0E3           MOV      R1,#+10
   \   00000114   04108DE5           STR      R1,[SP, #+4]
   \   00000118   00108DE5           STR      R1,[SP, #+0]
   \   0000011C   0030A0E1           MOV      R3,R0
   \   00000120   ........           LDR      R2,??DataTable182
   \   00000124   0310A0E3           MOV      R1,#+3
   \   00000128   ............       ADRL     R0,HelpWithDetailsPopup
   \              ....        
   \   00000130   420000EA           B        ??ShowHelpPopup_22
   2931          	else GUI_ExecDialogBox(HelpPopup, GUI_COUNTOF(HelpPopup), &HelpCallback, GetCurrentWindowHandle(), POPUP_OFFSET, POPUP_OFFSET);
   \                     ??ShowHelpPopup_2:
   \   00000134   130050E3           CMP      R0,#+19
   \   00000138   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??ShowHelpPopup_1:
   \   0000013C   3600008A           BHI      ??ShowHelpPopup_23
   \   00000140   120000EA           B        ??ShowHelpPopup_24
   \   00000144   310000EA           B        ??ShowHelpPopup_25
   \   00000148   260000EA           B        ??ShowHelpPopup_26
   \   0000014C   250000EA           B        ??ShowHelpPopup_26
   \   00000150   240000EA           B        ??ShowHelpPopup_26
   \   00000154   2B0000EA           B        ??ShowHelpPopup_27
   \   00000158   280000EA           B        ??ShowHelpPopup_28
   \   0000015C   230000EA           B        ??ShowHelpPopup_29
   \   00000160   240000EA           B        ??ShowHelpPopup_30
   \   00000164   1D0000EA           B        ??ShowHelpPopup_31
   \   00000168   1A0000EA           B        ??ShowHelpPopup_32
   \   0000016C   170000EA           B        ??ShowHelpPopup_33
   \   00000170   140000EA           B        ??ShowHelpPopup_34
   \   00000174   110000EA           B        ??ShowHelpPopup_35
   \   00000178   0E0000EA           B        ??ShowHelpPopup_36
   \   0000017C   090000EA           B        ??ShowHelpPopup_37
   \   00000180   040000EA           B        ??ShowHelpPopup_38
   \   00000184   240000EA           B        ??ShowHelpPopup_23
   \   00000188   040000EA           B        ??ShowHelpPopup_39
   \   0000018C   070000EA           B        ??ShowHelpPopup_40
   \                     ??ShowHelpPopup_24:
   \   00000190   ........           BL       GetGeneralConfinScreenWindowHandle
   \   00000194   210000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_38:
   \   00000198   ........           BL       GetDigitalInputSettingsWindowHandle
   \   0000019C   1F0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_39:
   \   000001A0   ........           BL       GetAnalogInputsScaleWindowHandle
   \   000001A4   1D0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_37:
   \   000001A8   ........           BL       GetAnalogInputSettingsWindowHandle
   \   000001AC   1B0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_40:
   \   000001B0   ........           BL       GetGearRatiosWindowHandle
   \   000001B4   190000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_36:
   \   000001B8   ........           BL       GetGearingWindowHandle
   \   000001BC   170000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_35:
   \   000001C0   ........           BL       GetTrackSettingsWindowHandle
   \   000001C4   150000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_34:
   \   000001C8   ........           BL       GetTrackSettingMainWindowHandle
   \   000001CC   130000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_33:
   \   000001D0   ........           BL       GetReviewSessionsWindowHandle
   \   000001D4   110000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_32:
   \   000001D8   ........           BL       GetInputsWindowHandle
   \   000001DC   0F0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_31:
   \   000001E0   ........           BL       GetTachSetupWindowHandle
   \   000001E4   0D0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_26:
   \   000001E8   ........           BL       GetRunningGaugesWindowHandle
   \   000001EC   0B0000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_29:
   \   000001F0   ........           BL       GetVehicleSettingsWindowHandle
   \   000001F4   090000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_30:
   \   000001F8   ........           BL       GetVehicleSettingMainWindowHandle
   \   000001FC   070000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_28:
   \   00000200   ........           BL       GetSystemSettingsWindowHandle
   \   00000204   050000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_27:
   \   00000208   ........           BL       GetRaceSetupScreensWindowHandle
   \   0000020C   030000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_25:
   \   00000210   ........           LDR      R0,??DataTable181_1
   \   00000214   800090E5           LDR      R0,[R0, #+128]
   \   00000218   000000EA           B        ??ShowHelpPopup_41
   \                     ??ShowHelpPopup_23:
   \   0000021C   0000A0E3           MOV      R0,#+0
   \                     ??ShowHelpPopup_41:
   \   00000220   0A10A0E3           MOV      R1,#+10
   \   00000224   04108DE5           STR      R1,[SP, #+4]
   \   00000228   00108DE5           STR      R1,[SP, #+0]
   \   0000022C   0030A0E1           MOV      R3,R0
   \   00000230   ........           LDR      R2,??DataTable182
   \   00000234   0210A0E3           MOV      R1,#+2
   \   00000238   ............       ADRL     R0,HelpPopup
   \              ....        
   \                     ??ShowHelpPopup_22:
   \   00000240   ........           BL       GUI_ExecDialogBox
   2932          }
   \   00000244   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000248   1080BDE8           POP      {R4,PC}          ;; return
   2933          

   \                                 In section .text, align 4, keep-with-next
   2934          void HelpCallback(WM_MESSAGE * pMsg)
   2935          {
   \                     HelpCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   2936          	WM_HWIN hDlg;
   2937          	int Id;
   2938          	MULTIEDIT_HANDLE hText;
   2939          
   2940          	hDlg = pMsg->hWin;
   2941          
   2942          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   1CD04DE2           SUB      SP,SP,#+28
   \   00000010   044095E5           LDR      R4,[R5, #+4]
   \   00000014   1D0050E2           SUBS     R0,R0,#+29
   \   00000018   0200000A           BEQ      ??HelpCallback_0
   \   0000001C   090050E2           SUBS     R0,R0,#+9
   \   00000020   2800000A           BEQ      ??HelpCallback_1
   \   00000024   3F0000EA           B        ??HelpCallback_2
   2943          	{
   2944          		case WM_INIT_DIALOG:
   2945          			FRAMEWIN_SetTextColor(hDlg, popupTitleTextColor);
   \                     ??HelpCallback_0:
   \   00000028   ........           LDR      R0,??DataTable182_1
   \   0000002C   001090E5           LDR      R1,[R0, #+0]
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       FRAMEWIN_SetTextColor
   2946          			FRAMEWIN_SetTextAlign(hDlg, GUI_TA_HCENTER);
   \   00000038   0210A0E3           MOV      R1,#+2
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       FRAMEWIN_SetTextAlign
   2947          			FRAMEWIN_SetText(hDlg, pHelpTitle);
   \   00000044   ........           LDR      R5,??DataTable181_1
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   C01095E5           LDR      R1,[R5, #+192]
   \   00000050   ........           BL       FRAMEWIN_SetText
   2948          
   2949          			SCROLLBAR_SetDefaultWidth(40);
   \   00000054   2800A0E3           MOV      R0,#+40
   \   00000058   ........           BL       SCROLLBAR_SetDefaultWidth
   2950          
   2951          			hText = MULTIEDIT_CreateEx(10, 30, POPUP_WIDTH - 16, POPUP_HEIGHT - 95, hDlg, WM_CF_SHOW,
   2952          				MULTIEDIT_CF_AUTOSCROLLBAR_V | MULTIEDIT_CF_READONLY, 0, strlen(pHelpText), pHelpText);
   \   0000005C   BC0095E5           LDR      R0,[R5, #+188]
   \   00000060   ........           BL       strlen
   \   00000064   10008DE5           STR      R0,[SP, #+16]
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   0C008DE5           STR      R0,[SP, #+12]
   \   00000070   0900A0E3           MOV      R0,#+9
   \   00000074   BC1095E5           LDR      R1,[R5, #+188]
   \   00000078   08008DE5           STR      R0,[SP, #+8]
   \   0000007C   0200A0E3           MOV      R0,#+2
   \   00000080   14108DE5           STR      R1,[SP, #+20]
   \   00000084   04008DE5           STR      R0,[SP, #+4]
   \   00000088   00408DE5           STR      R4,[SP, #+0]
   \   0000008C   A730A0E3           MOV      R3,#+167
   \   00000090   6A2FA0E3           MOV      R2,#+424
   \   00000094   1E10A0E3           MOV      R1,#+30
   \   00000098   0A00A0E3           MOV      R0,#+10
   \   0000009C   ........           BL       MULTIEDIT_CreateEx
   \   000000A0   0040A0E1           MOV      R4,R0
   2953          			MULTIEDIT_SetBkColor(hText, MULTIEDIT_CI_READONLY, GUI_OFFWHITE);
   \   000000A4   ........           LDR      R2,??DataTable182_2  ;; 0xf0f0f0
   \   000000A8   0110A0E3           MOV      R1,#+1
   \   000000AC   ........           BL       MULTIEDIT_SetBkColor
   2954          			MULTIEDIT_SetFont(hText, &GUI_Font24_ASCII);
   \   000000B0   ........           LDR      R1,??DataTable182_3
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       MULTIEDIT_SetFont
   2955          			MULTIEDIT_SetWrapWord(hText);
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           BL       MULTIEDIT_SetWrapWord
   2956          			break;
   \   000000C4   190000EA           B        ??HelpCallback_3
   2957          
   2958          		case WM_NOTIFY_PARENT:
   2959          			if ((pMsg->Data.v == WM_NOTIFICATION_RELEASED) && ((Id = WM_GetId(pMsg->hWinSrc)) == GUI_ID_OK))
   \                     ??HelpCallback_1:
   \   000000C8   0C0095E5           LDR      R0,[R5, #+12]
   \   000000CC   020050E3           CMP      R0,#+2
   \   000000D0   0A00001A           BNE      ??HelpCallback_4
   \   000000D4   080095E5           LDR      R0,[R5, #+8]
   \   000000D8   ........           BL       WM_GetId
   \   000000DC   010050E3           CMP      R0,#+1
   \   000000E0   0600001A           BNE      ??HelpCallback_4
   2960          			{
   2961          				GUI_EndDialog(hDlg, Id);
   \   000000E4   0110A0E3           MOV      R1,#+1
   \   000000E8   0400A0E1           MOV      R0,R4
   \   000000EC   ........           BL       GUI_EndDialog
   2962          				glbBlackoutFlag = TRANSITION;	// Set flag to allow a screen clear to remove the dialog box
   \   000000F0   ........           LDR      R0,??DataTable181_1
   \   000000F4   0210A0E3           MOV      R1,#+2
   \   000000F8   781080E5           STR      R1,[R0, #+120]
   \   000000FC   0B0000EA           B        ??HelpCallback_3
   2963          			}
   2964          			else if ((pMsg->Data.v == WM_NOTIFICATION_RELEASED) && ((Id = WM_GetId(pMsg->hWinSrc)) == GUI_ID_HELP))
   \                     ??HelpCallback_4:
   \   00000100   0C0095E5           LDR      R0,[R5, #+12]
   \   00000104   020050E3           CMP      R0,#+2
   \   00000108   0600001A           BNE      ??HelpCallback_2
   \   0000010C   080095E5           LDR      R0,[R5, #+8]
   \   00000110   ........           BL       WM_GetId
   \   00000114   060050E3           CMP      R0,#+6
   \   00000118   0200001A           BNE      ??HelpCallback_2
   2965          				CreateHelpSelection(hDlg);
   \   0000011C   0400A0E1           MOV      R0,R4
   \   00000120   ........           BL       CreateHelpSelection
   \   00000124   010000EA           B        ??HelpCallback_3
   2966          			else WM_DefaultProc(pMsg);
   \                     ??HelpCallback_2:
   \   00000128   0500A0E1           MOV      R0,R5
   \   0000012C   ........           BL       WM_DefaultProc
   2967          			break;
   2968          
   2969          		default:
   2970          			WM_DefaultProc(pMsg);
   2971          	}
   2972          }
   \                     ??HelpCallback_3:
   \   00000130   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   00000134   3080BDE8           POP      {R4,R5,PC}       ;; return
   2973          
   2974          
   2975          /*********************************************************************
   2976          *
   2977          *       MainTask
   2978          */

   \                                 In section .text, align 4, keep-with-next
   2979          void DisplayNewScreenList(enum SCREEN_TYPE screentype, int screen, WM_HWIN hPrev)
   2980          {
   \                     DisplayNewScreenList:
   \   00000000   F0432DE9           PUSH     {R4-R9,LR}
   \   00000004   0140A0E1           MOV      R4,R1
   \   00000008   0250A0E1           MOV      R5,R2
   2981          	WM_HWIN hChild;
   2982          	GUI_HWIN hNewWin;
   2983          	SCREENLIST *pScreenList;
   2984          	WM_CALLBACK *pCallBack;
   2985          	void (*pSetNewWin)(WM_HWIN);
   2986          	int timerRate;
   2987          
   2988          	SetLastScreen(screentype, screen);
   \   0000000C   ........           LDR      R1,??DataTable182_4
   \   00000010   012040E2           SUB      R2,R0,#+1
   \   00000014   0CD04DE2           SUB      SP,SP,#+12
   \   00000018   1400C1E5           STRB     R0,[R1, #+20]
   \   0000001C   150052E3           CMP      R2,#+21
   \   00000020   02F18F90           ADDLS    PC,PC,R2, LSL #+2
   \                     ??DisplayNewScreenList_0:
   \   00000024   3800008A           BHI      ??DisplayNewScreenList_2
   \   00000028   360000EA           B        ??DisplayNewScreenList_3
   \   0000002C   250000EA           B        ??DisplayNewScreenList_4
   \   00000030   220000EA           B        ??DisplayNewScreenList_5
   \   00000034   1F0000EA           B        ??DisplayNewScreenList_6
   \   00000038   300000EA           B        ??DisplayNewScreenList_7
   \   0000003C   2D0000EA           B        ??DisplayNewScreenList_8
   \   00000040   2A0000EA           B        ??DisplayNewScreenList_9
   \   00000044   300000EA           B        ??DisplayNewScreenList_2
   \   00000048   260000EA           B        ??DisplayNewScreenList_10
   \   0000004C   230000EA           B        ??DisplayNewScreenList_11
   \   00000050   200000EA           B        ??DisplayNewScreenList_12
   \   00000054   2C0000EA           B        ??DisplayNewScreenList_2
   \   00000058   1C0000EA           B        ??DisplayNewScreenList_13
   \   0000005C   130000EA           B        ??DisplayNewScreenList_14
   \   00000060   0C0000EA           B        ??DisplayNewScreenList_15
   \   00000064   070000EA           B        ??DisplayNewScreenList_16
   \   00000068   270000EA           B        ??DisplayNewScreenList_2
   \   0000006C   070000EA           B        ??DisplayNewScreenList_17
   \   00000070   0C0000EA           B        ??DisplayNewScreenList_18
   \   00000074   240000EA           B        ??DisplayNewScreenList_2
   \   00000078   080000EA           B        ??DisplayNewScreenList_19
   \   0000007C   FFFFFFEA           B        ??DisplayNewScreenList_20
   \                     ??DisplayNewScreenList_20:
   \   00000080   5C4081E5           STR      R4,[R1, #+92]
   \   00000084   200000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_16:
   \   00000088   584081E5           STR      R4,[R1, #+88]
   \   0000008C   1E0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_17:
   \   00000090   544081E5           STR      R4,[R1, #+84]
   \   00000094   1C0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_15:
   \   00000098   504081E5           STR      R4,[R1, #+80]
   \   0000009C   1A0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_19:
   \   000000A0   4C4081E5           STR      R4,[R1, #+76]
   \   000000A4   180000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_18:
   \   000000A8   484081E5           STR      R4,[R1, #+72]
   \   000000AC   160000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_14:
   \   000000B0   444081E5           STR      R4,[R1, #+68]
   \   000000B4   140000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_6:
   \   000000B8   244081E5           STR      R4,[R1, #+36]
   \   000000BC   120000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_5:
   \   000000C0   204081E5           STR      R4,[R1, #+32]
   \   000000C4   100000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_4:
   \   000000C8   1C4081E5           STR      R4,[R1, #+28]
   \   000000CC   0E0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_13:
   \   000000D0   404081E5           STR      R4,[R1, #+64]
   \   000000D4   0C0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_12:
   \   000000D8   3C4081E5           STR      R4,[R1, #+60]
   \   000000DC   0A0000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_11:
   \   000000E0   384081E5           STR      R4,[R1, #+56]
   \   000000E4   080000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_10:
   \   000000E8   344081E5           STR      R4,[R1, #+52]
   \   000000EC   060000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_9:
   \   000000F0   304081E5           STR      R4,[R1, #+48]
   \   000000F4   040000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_8:
   \   000000F8   2C4081E5           STR      R4,[R1, #+44]
   \   000000FC   020000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_7:
   \   00000100   284081E5           STR      R4,[R1, #+40]
   \   00000104   000000EA           B        ??DisplayNewScreenList_2
   \                     ??DisplayNewScreenList_3:
   \   00000108   184081E5           STR      R4,[R1, #+24]
   2989          	timerRate = SETUP_SCREEN_REFRESH_TIME;
   2990          
   2991          	switch (screentype)
   \                     ??DisplayNewScreenList_2:
   \   0000010C   010040E2           SUB      R0,R0,#+1
   \   00000110   7D60A0E3           MOV      R6,#+125
   \   00000114   120050E3           CMP      R0,#+18
   \   00000118   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??DisplayNewScreenList_1:
   \   0000011C   1200008A           BHI      ??DisplayNewScreenList_21
   \   00000120   120000EA           B        ??DisplayNewScreenList_22
   \   00000124   1B0000EA           B        ??DisplayNewScreenList_23
   \   00000128   140000EA           B        ??DisplayNewScreenList_24
   \   0000012C   170000EA           B        ??DisplayNewScreenList_25
   \   00000130   1A0000EA           B        ??DisplayNewScreenList_26
   \   00000134   1D0000EA           B        ??DisplayNewScreenList_27
   \   00000138   200000EA           B        ??DisplayNewScreenList_28
   \   0000013C   0A0000EA           B        ??DisplayNewScreenList_21
   \   00000140   230000EA           B        ??DisplayNewScreenList_29
   \   00000144   260000EA           B        ??DisplayNewScreenList_30
   \   00000148   070000EA           B        ??DisplayNewScreenList_21
   \   0000014C   060000EA           B        ??DisplayNewScreenList_21
   \   00000150   270000EA           B        ??DisplayNewScreenList_31
   \   00000154   2A0000EA           B        ??DisplayNewScreenList_32
   \   00000158   310000EA           B        ??DisplayNewScreenList_33
   \   0000015C   340000EA           B        ??DisplayNewScreenList_34
   \   00000160   010000EA           B        ??DisplayNewScreenList_21
   \   00000164   360000EA           B        ??DisplayNewScreenList_35
   \   00000168   290000EA           B        ??DisplayNewScreenList_36
   2992          	{
   2993          		default:
   2994          			SystemError();
   \                     ??DisplayNewScreenList_21:
   \   0000016C   ........           BL       SystemError
   2995          			// fall through
   2996          		case CONFIG_SCREEN_TYPE:
   2997          			pScreenList = ConfigScreenList;
   \                     ??DisplayNewScreenList_22:
   \   00000170   ........           LDR      R8,??DataTable181_1
   2998          			pCallBack = _cbMainCallback;
   \   00000174   ........           LDR      R0,??DataTable183
   2999          			pSetNewWin = SetConfigWindowHandle;
   \   00000178   ........           LDR      R9,??DataTable183_1
   3000          			break;
   \   0000017C   330000EA           B        ??DisplayNewScreenList_37
   3001          		case DRIVE_MODE_SCREEN_TYPE:
   3002          			pScreenList = (SCREENLIST *)DriveScreenList;
   \                     ??DisplayNewScreenList_24:
   \   00000180   ........           LDR      R8,??DataTable183_2
   3003          			pCallBack = GaugesScreensCallback;
   \                     ??DisplayNewScreenList_38:
   \   00000184   ........           LDR      R0,??DataTable183_3
   3004          			pSetNewWin = SetRunningGaugesWindowHandle;
   \   00000188   ........           LDR      R9,??DataTable183_4
   3005          			break;
   \   0000018C   2F0000EA           B        ??DisplayNewScreenList_37
   3006          		case INSTRUMENTS_MODE_SCREEN_TYPE:
   3007          			pScreenList = (SCREENLIST *)InstrumentsScreenList;
   \                     ??DisplayNewScreenList_25:
   \   00000190   ........           LDR      R8,??DataTable183_5
   3008          			pCallBack = GaugesScreensCallback;
   \   00000194   FAFFFFEA           B        ??DisplayNewScreenList_38
   3009          			pSetNewWin = SetRunningGaugesWindowHandle;
   3010          			break;
   3011          		case GAUGES_SCREEN_TYPE:
   3012          			pScreenList = (SCREENLIST *)GaugesScreenList;
   \                     ??DisplayNewScreenList_23:
   \   00000198   ........           LDR      R8,??DataTable183_6
   3013          			pCallBack = GaugesScreensCallback;
   \   0000019C   F8FFFFEA           B        ??DisplayNewScreenList_38
   3014          			pSetNewWin = SetRunningGaugesWindowHandle;
   3015          			break;
   3016          		case RACE_SETUP_SCREENS_TYPE:
   3017          			pScreenList = RaceSetupScreenList;
   \                     ??DisplayNewScreenList_26:
   \   000001A0   ........           LDR      R8,??DataTable183_7
   3018          			pCallBack = RaceSetupScreensCallback;
   \   000001A4   ........           LDR      R0,??DataTable183_8
   3019          			pSetNewWin = SetRaceSetupScreensWindowHandle;
   \   000001A8   ........           LDR      R9,??DataTable183_9
   3020          			break;
   \   000001AC   270000EA           B        ??DisplayNewScreenList_37
   3021          		case SYSTEM_SETTINGS_SCREENS_TYPE:
   3022          			pScreenList = SystemSettingsScreenList;
   \                     ??DisplayNewScreenList_27:
   \   000001B0   ........           LDR      R8,??DataTable184
   3023          			pCallBack = SystemSettingsScreensCallback;
   \   000001B4   ........           LDR      R0,??DataTable184_1
   3024          			pSetNewWin = SetSystemSettingsWindowHandle;
   \   000001B8   ........           LDR      R9,??DataTable184_2
   3025          			break;
   \   000001BC   230000EA           B        ??DisplayNewScreenList_37
   3026          		case VEHICLE_SETTINGS_SCREENS_TYPE:
   3027          			timerRate = TACH_SCREEN_REFRESH_TIME;
   \                     ??DisplayNewScreenList_28:
   \   000001C0   6460A0E3           MOV      R6,#+100
   3028          			pScreenList = VehicleSettingsScreenList;
   \   000001C4   ........           LDR      R8,??DataTable184_3
   3029          			pCallBack = VehicleSettingsScreensCallback;
   \   000001C8   ........           LDR      R0,??DataTable184_4
   3030          			pSetNewWin = SetVehicleSettingsWindowHandle;
   \   000001CC   ........           LDR      R9,??DataTable184_5
   3031          			break;
   \   000001D0   1E0000EA           B        ??DisplayNewScreenList_37
   3032          		case TACH_SETUP_SCREENS_TYPE:
   3033          			pScreenList = TachSetupScreenList;
   \                     ??DisplayNewScreenList_29:
   \   000001D4   ........           LDR      R8,??DataTable184_6
   3034          			pCallBack = TachSetupScreensCallback;
   \   000001D8   ........           LDR      R0,??DataTable184_7
   3035          			pSetNewWin = SetTachSetupWindowHandle;
   \   000001DC   ........           LDR      R9,??DataTable184_8
   3036          			break;
   \   000001E0   1A0000EA           B        ??DisplayNewScreenList_37
   3037          		case INPUTS_SCREENS_TYPE:
   3038          			pScreenList = InputsScreenList;
   \                     ??DisplayNewScreenList_30:
   \   000001E4   ........           LDR      R8,??DataTable184_9
   3039          			pCallBack = InputsScreensCallback;
   \   000001E8   ........           LDR      R0,??DataTable185
   3040          			pSetNewWin = SetInputsWindowHandle;
   \   000001EC   ........           LDR      R9,??DataTable185_1
   3041          			break;
   \   000001F0   160000EA           B        ??DisplayNewScreenList_37
   3042          		case TRACK_SETTINGS_SCREENS_TYPE:
   3043          			pScreenList = TrackSettingsScreenList;
   \                     ??DisplayNewScreenList_31:
   \   000001F4   ........           LDR      R8,??DataTable185_2
   3044          			pCallBack = TrackSettingsScreensCallback;
   \   000001F8   ........           LDR      R0,??DataTable185_3
   3045          			pSetNewWin = SetTrackSettingsWindowHandle;
   \   000001FC   ........           LDR      R9,??DataTable185_4
   3046          			break;
   \   00000200   120000EA           B        ??DisplayNewScreenList_37
   3047          		case GEARING_SCREENS_TYPE:
   3048          			pScreenList = GearingScreenList;
   \                     ??DisplayNewScreenList_32:
   \   00000204   ........           LDR      R8,??DataTable185_5
   3049          			pCallBack = GearingScreensCallback;
   \   00000208   ........           LDR      R0,??DataTable185_6
   3050          			pSetNewWin = SetGearingWindowHandle;
   \   0000020C   ........           LDR      R9,??DataTable185_7
   3051          			break;
   \   00000210   0E0000EA           B        ??DisplayNewScreenList_37
   3052          		case GEAR_RATIOS:
   3053          			pScreenList = GearRatiosScreenList;
   \                     ??DisplayNewScreenList_36:
   \   00000214   ........           LDR      R8,??DataTable185_8
   3054          			pCallBack = GearRatiosCallback;
   \   00000218   ........           LDR      R0,??DataTable185_9
   3055          			pSetNewWin = SetGearRatiosWindowHandle;
   \   0000021C   ........           LDR      R9,??DataTable185_10
   3056          			break;
   \   00000220   0A0000EA           B        ??DisplayNewScreenList_37
   3057          		case ANALOG_SETTINGS_SCREEN_TYPE:
   3058          			pScreenList = AnalogInputSettingsScreenList;
   \                     ??DisplayNewScreenList_33:
   \   00000224   ........           LDR      R8,??DataTable185_11
   3059          			pCallBack = AnalogInputSettingsCallback;
   \   00000228   ........           LDR      R0,??DataTable185_12
   3060          			pSetNewWin = SetAnalogInputSettingsWindowHandle;
   \   0000022C   ........           LDR      R9,??DataTable185_13
   3061          			break;
   \   00000230   060000EA           B        ??DisplayNewScreenList_37
   3062          		case DIGITAL_SETTINGS_SCREEN_TYPE:
   3063          			pScreenList = DigitalInputSettingsScreenList;
   \                     ??DisplayNewScreenList_34:
   \   00000234   ........           LDR      R8,??DataTable185_14
   3064          			pCallBack = DigitalInputSettingsCallback;
   \   00000238   ........           LDR      R0,??DataTable186
   3065          			pSetNewWin = SetDigitalInputSettingsWindowHandle;
   \   0000023C   ........           LDR      R9,??DataTable186_1
   3066          			break;
   \   00000240   020000EA           B        ??DisplayNewScreenList_37
   3067          		case ANALOG_INPUTS_SCALE:
   3068          			pScreenList = AnalogInputsScaleScreenList;
   \                     ??DisplayNewScreenList_35:
   \   00000244   ........           LDR      R8,??DataTable186_2
   3069          			pCallBack = AnalogInputsScaleCallback;
   \   00000248   ........           LDR      R0,??DataTable186_3
   3070          			pSetNewWin = SetAnalogInputsScaleWindowHandle;
   \   0000024C   ........           LDR      R9,??DataTable186_4
   3071          			break;
   3072          	}
   3073          
   3074          	hNewWin = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, pCallBack, 0);
   \                     ??DisplayNewScreenList_37:
   \   00000250   04008DE5           STR      R0,[SP, #+4]
   \   00000254   0200A0E3           MOV      R0,#+2
   \   00000258   800D80E3           ORR      R0,R0,#0x2000
   \   0000025C   0010A0E3           MOV      R1,#+0
   \   00000260   00008DE5           STR      R0,[SP, #+0]
   \   00000264   08108DE5           STR      R1,[SP, #+8]
   \   00000268   443FA0E3           MOV      R3,#+272
   \   0000026C   782FA0E3           MOV      R2,#+480
   \   00000270   0000A0E3           MOV      R0,#+0
   \   00000274   ........           BL       WM_CreateWindow
   \   00000278   0070A0E1           MOV      R7,R0
   3075          	if (hNewWin <= 0)
   \   0000027C   010057E3           CMP      R7,#+1
   \   00000280   010000AA           BGE      ??DisplayNewScreenList_39
   3076          		SystemError();
   \   00000284   ........           BL       SystemError
   \   00000288   000000EA           B        ??DisplayNewScreenList_40
   3077          	else pSetNewWin(hNewWin);
   \                     ??DisplayNewScreenList_39:
   \   0000028C   39FF2FE1           BLX      R9
   3078          
   3079          	BUTTON_SetDefaultFont(&GUI_Font24_ASCII);
   \                     ??DisplayNewScreenList_40:
   \   00000290   ........           LDR      R0,??DataTable182_3
   \   00000294   ........           BL       BUTTON_SetDefaultFont
   3080          
   3081          //	WM_EnableMemdev(hConfigScreen);
   3082          	WM_EnableMemdev(hNewWin);
   \   00000298   0700A0E1           MOV      R0,R7
   \   0000029C   ........           BL       WM_EnableMemdev
   3083          
   3084          
   3085          	// Display requested screen at 0, 0
   3086          //	ConfigScreenList[screen].constructor(0, hConfigScreen);
   3087          	pScreenList[screen].constructor(hNewWin);
   \   000002A0   0C10A0E3           MOV      R1,#+12
   \   000002A4   918422E0           MLA      R2,R1,R4,R8
   \   000002A8   0700A0E1           MOV      R0,R7
   \   000002AC   041092E5           LDR      R1,[R2, #+4]
   \   000002B0   31FF2FE1           BLX      R1
   3088          
   3089          
   3090          	if (hPrev)
   \   000002B4   000055E3           CMP      R5,#+0
   \   000002B8   1500000A           BEQ      ??DisplayNewScreenList_41
   3091          	{
   3092          		GUI_RECT Rect = {0, 0, XSIZE_PHYS, YSIZE_PHYS};
   \   000002BC   ............       ADRL     R1,`?<Constant {0, 0, 480, 272}>`
   \              ....        
   \   000002C4   002091E5           LDR      R2,[R1, #+0]
   \   000002C8   043091E5           LDR      R3,[R1, #+4]
   \   000002CC   0D00A0E1           MOV      R0,SP
   \   000002D0   0C0080E8           STM      R0,{R2,R3}
   3093          		WM_ValidateRect(hNewWin, &Rect);
   \   000002D4   0D10A0E1           MOV      R1,SP
   \   000002D8   0700A0E1           MOV      R0,R7
   \   000002DC   ........           BL       WM_ValidateRect
   3094          		hChild = WM_GetFirstChild(hNewWin);
   \   000002E0   0700A0E1           MOV      R0,R7
   \   000002E4   ........           BL       WM_GetFirstChild
   \   000002E8   0040B0E1           MOVS     R4,R0
   3095          		while (hChild)
   \   000002EC   0800000A           BEQ      ??DisplayNewScreenList_41
   3096          		{
   3097          			WM_GetWindowRectEx(hChild, &Rect);
   \                     ??DisplayNewScreenList_42:
   \   000002F0   0D10A0E1           MOV      R1,SP
   \   000002F4   0400A0E1           MOV      R0,R4
   \   000002F8   ........           BL       WM_GetWindowRectEx
   3098          			WM_ValidateWindow(hChild);
   \   000002FC   0400A0E1           MOV      R0,R4
   \   00000300   ........           BL       WM_ValidateWindow
   3099          
   3100          			hChild = WM_GetNextSibling(hChild);
   \   00000304   0400A0E1           MOV      R0,R4
   \   00000308   ........           BL       WM_GetNextSibling
   \   0000030C   0040B0E1           MOVS     R4,R0
   \   00000310   F6FFFF1A           BNE      ??DisplayNewScreenList_42
   3101          		}
   3102             }
   3103          
   3104          	WM_Exec();
   \                     ??DisplayNewScreenList_41:
   \   00000314   ........           BL       WM_Exec
   3105          	screen_scrolling = ACTIVE;
   \   00000318   ........           LDR      R4,??DataTable181_1
   \   0000031C   0100A0E3           MOV      R0,#+1
   \   00000320   680084E5           STR      R0,[R4, #+104]
   3106          
   3107          //	WM_InvalidateWindow(hConfigScreen);
   3108          //	hChild = WM_GetFirstChild(hConfigScreen);
   3109          	WM_InvalidateWindow(hNewWin);
   \   00000324   0700A0E1           MOV      R0,R7
   \   00000328   ........           BL       WM_InvalidateWindow
   3110          	hChild = WM_GetFirstChild(hNewWin);
   \   0000032C   0700A0E1           MOV      R0,R7
   \   00000330   ........           BL       WM_GetFirstChild
   \   00000334   0080B0E1           MOVS     R8,R0
   3111          	while (hChild)
   \   00000338   0800000A           BEQ      ??DisplayNewScreenList_43
   3112          	{
   3113          		GUI_RECT Rect;
   3114          
   3115          		WM_GetWindowRectEx(hChild, &Rect);
   \                     ??DisplayNewScreenList_44:
   \   0000033C   0D10A0E1           MOV      R1,SP
   \   00000340   0800A0E1           MOV      R0,R8
   \   00000344   ........           BL       WM_GetWindowRectEx
   3116          		WM_InvalidateWindow(hChild);
   \   00000348   0800A0E1           MOV      R0,R8
   \   0000034C   ........           BL       WM_InvalidateWindow
   3117          
   3118          		hChild = WM_GetNextSibling(hChild);
   \   00000350   0800A0E1           MOV      R0,R8
   \   00000354   ........           BL       WM_GetNextSibling
   \   00000358   0080B0E1           MOVS     R8,R0
   \   0000035C   F6FFFF1A           BNE      ??DisplayNewScreenList_44
   3119          	}
   3120          
   3121          	WM_Exec();
   \                     ??DisplayNewScreenList_43:
   \   00000360   ........           BL       WM_Exec
   3122          	WM_DeleteWindow(hPrev);
   \   00000364   0500A0E1           MOV      R0,R5
   \   00000368   ........           BL       WM_DeleteWindow
   3123          
   3124          	hScreenTimer = WM_CreateTimer(hNewWin, 0, timerRate, 0);
   \   0000036C   0030A0E3           MOV      R3,#+0
   \   00000370   0620A0E1           MOV      R2,R6
   \   00000374   0010A0E3           MOV      R1,#+0
   \   00000378   0700A0E1           MOV      R0,R7
   \   0000037C   ........           BL       WM_CreateTimer
   \   00000380   700084E5           STR      R0,[R4, #+112]
   3125          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   00000384   ........           BL       ResetNewScreen
   3126          }
   \   00000388   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   0000038C   F083BDE8           POP      {R4-R9,PC}       ;; return
   3127          
   3128          

   \                                 In section .text, align 4, keep-with-next
   3129          void DisplayGoRacing(WM_HWIN hParent)
   3130          {
   \                     DisplayGoRacing:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3131          	BUTTON_Handle hButton;
   3132          
   3133          	hButton = BUTTON_CreateEx(41, 38, 178, 115, hParent, WM_CF_SHOW, 0, ROADRACE_BUTTON);
   \   00000008   0700A0E3           MOV      R0,#+7
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00408DE5           STR      R4,[SP, #+0]
   \   0000002C   7330A0E3           MOV      R3,#+115
   \   00000030   B220A0E3           MOV      R2,#+178
   \   00000034   2610A0E3           MOV      R1,#+38
   \   00000038   2900A0E3           MOV      R0,#+41
   \   0000003C   ........           BL       BUTTON_CreateEx
   3134          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmRace);
   \   00000040   ........           LDR      R2,??DataTable190
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           BL       BUTTON_SetBitmap
   3135          
   3136          	hButton = BUTTON_CreateEx(261, 38, 178, 115, hParent, WM_CF_SHOW, 0, AUTOXRALLY_BUTTON);
   \   0000004C   0800A0E3           MOV      R0,#+8
   \   00000050   800E80E3           ORR      R0,R0,#0x800
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0550A0E3           MOV      R5,#+5
   \   00000064   0200A0E3           MOV      R0,#+2
   \   00000068   405F85E3           ORR      R5,R5,#0x100
   \   0000006C   04008DE5           STR      R0,[SP, #+4]
   \   00000070   00408DE5           STR      R4,[SP, #+0]
   \   00000074   7330A0E3           MOV      R3,#+115
   \   00000078   B220A0E3           MOV      R2,#+178
   \   0000007C   2610A0E3           MOV      R1,#+38
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   ........           BL       BUTTON_CreateEx
   3137          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmAutoxRally);
   \   00000088   ........           LDR      R2,??DataTable190_1
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   ........           BL       BUTTON_SetBitmap
   3138          
   3139          	hButton = BUTTON_CreateEx(41, 156, 100, 115, hParent, WM_CF_SHOW, 0, DRIVE_BUTTON);
   \   00000094   0900A0E3           MOV      R0,#+9
   \   00000098   800E80E3           ORR      R0,R0,#0x800
   \   0000009C   0C008DE5           STR      R0,[SP, #+12]
   \   000000A0   0000A0E3           MOV      R0,#+0
   \   000000A4   08008DE5           STR      R0,[SP, #+8]
   \   000000A8   0200A0E3           MOV      R0,#+2
   \   000000AC   04008DE5           STR      R0,[SP, #+4]
   \   000000B0   00408DE5           STR      R4,[SP, #+0]
   \   000000B4   7330A0E3           MOV      R3,#+115
   \   000000B8   6420A0E3           MOV      R2,#+100
   \   000000BC   9C10A0E3           MOV      R1,#+156
   \   000000C0   2900A0E3           MOV      R0,#+41
   \   000000C4   ........           BL       BUTTON_CreateEx
   3140          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmDrive);
   \   000000C8   ........           LDR      R2,??DataTable190_2
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   ........           BL       BUTTON_SetBitmap
   3141          
   3142          	hButton = BUTTON_CreateEx(261, 156, 178, 115, hParent, WM_CF_SHOW, 0, DRAG_BUTTON);
   \   000000D4   1400A0E3           MOV      R0,#+20
   \   000000D8   800E80E3           ORR      R0,R0,#0x800
   \   000000DC   0C008DE5           STR      R0,[SP, #+12]
   \   000000E0   0000A0E3           MOV      R0,#+0
   \   000000E4   08008DE5           STR      R0,[SP, #+8]
   \   000000E8   0200A0E3           MOV      R0,#+2
   \   000000EC   04008DE5           STR      R0,[SP, #+4]
   \   000000F0   00408DE5           STR      R4,[SP, #+0]
   \   000000F4   7330A0E3           MOV      R3,#+115
   \   000000F8   B220A0E3           MOV      R2,#+178
   \   000000FC   9C10A0E3           MOV      R1,#+156
   \   00000100   0500A0E1           MOV      R0,R5
   \   00000104   ........           BL       BUTTON_CreateEx
   3143          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmDragButton);
   \   00000108   ........           LDR      R2,??DataTable190_3
   \   0000010C   0010A0E3           MOV      R1,#+0
   \   00000110   ........           BL       BUTTON_SetBitmap
   3144          
   3145          	hRecordModeButton = BUTTON_CreateEx(141, 156, 78, 115, hParent, WM_CF_SHOW, 0, RECORDMODE_BUTTON);
   \   00000114   0A00A0E3           MOV      R0,#+10
   \   00000118   800E80E3           ORR      R0,R0,#0x800
   \   0000011C   0C008DE5           STR      R0,[SP, #+12]
   \   00000120   0000A0E3           MOV      R0,#+0
   \   00000124   08008DE5           STR      R0,[SP, #+8]
   \   00000128   0200A0E3           MOV      R0,#+2
   \   0000012C   04008DE5           STR      R0,[SP, #+4]
   \   00000130   00408DE5           STR      R4,[SP, #+0]
   \   00000134   7330A0E3           MOV      R3,#+115
   \   00000138   4E20A0E3           MOV      R2,#+78
   \   0000013C   9C10A0E3           MOV      R1,#+156
   \   00000140   8D00A0E3           MOV      R0,#+141
   \   00000144   ........           BL       BUTTON_CreateEx
   \   00000148   ........           LDR      R1,??DataTable181_1
   \   0000014C   A00081E5           STR      R0,[R1, #+160]
   3146          	SetRecordModeGraphic();
   \   00000150   ........           LDR      R1,??DataTable182_4
   \   00000154   D710D1E5           LDRB     R1,[R1, #+215]
   \   00000158   000051E3           CMP      R1,#+0
   \   0000015C   ........           LDRNE    R2,??DataTable190_4
   \   00000160   0010A013           MOVNE    R1,#+0
   \   00000164   ........           LDREQ    R2,??DataTable191
   \   00000168   ........           BL       BUTTON_SetBitmap
   3147          }
   \   0000016C   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000170   3080BDE8           POP      {R4,R5,PC}       ;; return
   3148          

   \                                 In section .text, align 4, keep-with-next
   3149          void SetRecordModeGraphic(void)
   3150          {
   \                     SetRecordModeGraphic:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   ........           LDR      R1,??DataTable182_4
   \   00000008   ........           LDR      R0,??DataTable181_1
   \   0000000C   D710D1E5           LDRB     R1,[R1, #+215]
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   A00090E5           LDR      R0,[R0, #+160]
   \   00000018   000051E3           CMP      R1,#+0
   3151          	if (sysData.disableDriveRecordMode)
   3152          		BUTTON_SetBitmap(hRecordModeButton, BUTTON_BI_UNPRESSED, &bmRecordingOff);
   \   0000001C   ........           LDRNE    R2,??DataTable190_4
   \   00000020   0010A013           MOVNE    R1,#+0
   3153          	else BUTTON_SetBitmap(hRecordModeButton, BUTTON_BI_UNPRESSED, &bmRecordingOn);
   \   00000024   ........           LDREQ    R2,??DataTable191
   \   00000028   ........           BL       BUTTON_SetBitmap
   3154          }
   \   0000002C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return
   3155          
   3156          

   \                                 In section .text, align 4, keep-with-next
   3157          void DisplayRaceSetup(WM_HWIN hParent)
   3158          {
   \                     DisplayRaceSetup:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3159          	BUTTON_Handle hButton;
   3160          
   3161          	hButton = BUTTON_CreateEx(41, 38, 178, 115, hParent, WM_CF_SHOW, 0, DRIVER_BUTTON);
   \   00000008   0400A0E3           MOV      R0,#+4
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00408DE5           STR      R4,[SP, #+0]
   \   0000002C   7330A0E3           MOV      R3,#+115
   \   00000030   B220A0E3           MOV      R2,#+178
   \   00000034   2610A0E3           MOV      R1,#+38
   \   00000038   2900A0E3           MOV      R0,#+41
   \   0000003C   ........           BL       BUTTON_CreateEx
   3162          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmDriver);
   \   00000040   ........           LDR      R2,??DataTable191_1
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           BL       BUTTON_SetBitmap
   3163          
   3164          	hButton = BUTTON_CreateEx(261, 38, 178, 115, hParent, WM_CF_SHOW, 0, TRACK_BUTTON);
   \   0000004C   0600A0E3           MOV      R0,#+6
   \   00000050   800E80E3           ORR      R0,R0,#0x800
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0550A0E3           MOV      R5,#+5
   \   00000064   0200A0E3           MOV      R0,#+2
   \   00000068   405F85E3           ORR      R5,R5,#0x100
   \   0000006C   04008DE5           STR      R0,[SP, #+4]
   \   00000070   00408DE5           STR      R4,[SP, #+0]
   \   00000074   7330A0E3           MOV      R3,#+115
   \   00000078   B220A0E3           MOV      R2,#+178
   \   0000007C   2610A0E3           MOV      R1,#+38
   \   00000080   0500A0E1           MOV      R0,R5
   \   00000084   ........           BL       BUTTON_CreateEx
   3165          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmTrack);
   \   00000088   ........           LDR      R2,??DataTable191_2
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   ........           BL       BUTTON_SetBitmap
   3166          
   3167          	hButton = BUTTON_CreateEx(41, 156, 178, 115, hParent, WM_CF_SHOW, 0, VEHICLE_BUTTON);
   \   00000094   700E85E2           ADD      R0,R5,#+1792
   \   00000098   0C008DE5           STR      R0,[SP, #+12]
   \   0000009C   0000A0E3           MOV      R0,#+0
   \   000000A0   08008DE5           STR      R0,[SP, #+8]
   \   000000A4   0200A0E3           MOV      R0,#+2
   \   000000A8   04008DE5           STR      R0,[SP, #+4]
   \   000000AC   00408DE5           STR      R4,[SP, #+0]
   \   000000B0   7330A0E3           MOV      R3,#+115
   \   000000B4   B220A0E3           MOV      R2,#+178
   \   000000B8   9C10A0E3           MOV      R1,#+156
   \   000000BC   2900A0E3           MOV      R0,#+41
   \   000000C0   ........           BL       BUTTON_CreateEx
   3168          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmVehicle);
   \   000000C4   ........           LDR      R2,??DataTable191_3
   \   000000C8   0010A0E3           MOV      R1,#+0
   \   000000CC   ........           BL       BUTTON_SetBitmap
   3169          
   3170          	hButton = BUTTON_CreateEx(261, 156, 178, 115, hParent, WM_CF_SHOW, 0, LAPSQUALIFYING_BUTTON);
   \   000000D0   0B00A0E3           MOV      R0,#+11
   \   000000D4   800E80E3           ORR      R0,R0,#0x800
   \   000000D8   0C008DE5           STR      R0,[SP, #+12]
   \   000000DC   0000A0E3           MOV      R0,#+0
   \   000000E0   08008DE5           STR      R0,[SP, #+8]
   \   000000E4   0200A0E3           MOV      R0,#+2
   \   000000E8   04008DE5           STR      R0,[SP, #+4]
   \   000000EC   00408DE5           STR      R4,[SP, #+0]
   \   000000F0   7330A0E3           MOV      R3,#+115
   \   000000F4   B220A0E3           MOV      R2,#+178
   \   000000F8   9C10A0E3           MOV      R1,#+156
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   ........           BL       BUTTON_CreateEx
   3171          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmLapsQualifyButton);
   \   00000104   14D08DE2           ADD      SP,SP,#+20
   \   00000108   3040BDE8           POP      {R4,R5,LR}
   \   0000010C   ........           LDR      R2,??DataTable196
   \   00000110   0010A0E3           MOV      R1,#+0
   \   00000114   ........           B        BUTTON_SetBitmap  ;; tailcall
   3172          }
   3173          
   3174          #define	NEW_BUTON_HEIGHT	40
   3175          

   \                                 In section .text, align 4, keep-with-next
   3176          void DisplayReviewSessions(WM_HWIN hParent)
   3177          {
   \                     DisplayReviewSessions:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   3178          	HEADER_Handle hHeader;
   3179          	char scratch[50];
   3180          
   3181          	int i;
   3182          
   3183          	GetSessionNameData(hParent, 1, (enum SESSION_TYPE)sysData.selectedSessionType);
   \   00000004   ........           LDR      R6,??DataTable182_4
   \   00000008   48D04DE2           SUB      SP,SP,#+72
   \   0000000C   0050A0E1           MOV      R5,R0
   \   00000010   D020D6E5           LDRB     R2,[R6, #+208]
   \   00000014   0110A0E3           MOV      R1,#+1
   \   00000018   ........           BL       GetSessionNameData
   3184          
   3185          	hListView = LISTVIEW_CreateEx(10, 38, 460, 185, hParent, WM_CF_SHOW, 0, REVIEW_SESSIONS_LIST);
   \   0000001C   800FA0E3           MOV      R0,#+512
   \   00000020   0C008DE5           STR      R0,[SP, #+12]
   \   00000024   0000A0E3           MOV      R0,#+0
   \   00000028   08008DE5           STR      R0,[SP, #+8]
   \   0000002C   0200A0E3           MOV      R0,#+2
   \   00000030   04008DE5           STR      R0,[SP, #+4]
   \   00000034   00508DE5           STR      R5,[SP, #+0]
   \   00000038   B930A0E3           MOV      R3,#+185
   \   0000003C   732FA0E3           MOV      R2,#+460
   \   00000040   2610A0E3           MOV      R1,#+38
   \   00000044   0A00A0E3           MOV      R0,#+10
   \   00000048   ........           BL       LISTVIEW_CreateEx
   \   0000004C   ........           LDR      R4,??DataTable181_1
   \   00000050   A40084E5           STR      R0,[R4, #+164]
   3186          	WM_SetFocus(hListView);
   \   00000054   ........           BL       WM_SetFocus
   3187          	LISTVIEW_AddColumn(hListView, 185, "Date & Time", GUI_TA_LEFT | GUI_TA_VCENTER);
   \   00000058   0C30A0E3           MOV      R3,#+12
   \   0000005C   ............       ADRL     R2,`?<Constant "Date & Time">`
   \              ....        
   \   00000064   B910A0E3           MOV      R1,#+185
   \   00000068   A40094E5           LDR      R0,[R4, #+164]
   \   0000006C   ........           BL       LISTVIEW_AddColumn
   3188          	LISTVIEW_AddColumn(hListView, 80, "Session", GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   00000070   0E30A0E3           MOV      R3,#+14
   \   00000074   ............       ADRL     R2,`?<Constant "Session">`
   \              ....        
   \   0000007C   5010A0E3           MOV      R1,#+80
   \   00000080   A40094E5           LDR      R0,[R4, #+164]
   \   00000084   ........           BL       LISTVIEW_AddColumn
   3189          	strcpy(scratch, "Track / ");
   \   00000088   0920A0E3           MOV      R2,#+9
   \   0000008C   ............       ADRL     R1,`?<Constant "Track / ">`
   \              ....        
   \   00000094   10008DE2           ADD      R0,SP,#+16
   \   00000098   ........           BL       __aeabi_memcpy4
   3190          	strcat(scratch, GetSelectedReviewModeText());
   \   0000009C   ........           BL       GetSelectedReviewModeText
   \   000000A0   0010A0E1           MOV      R1,R0
   \   000000A4   10008DE2           ADD      R0,SP,#+16
   \   000000A8   ........           BL       strcat
   3191          //	LISTVIEW_AddColumn(hListView, 195 - FINGER_WIDTH, "Track", GUI_TA_LEFT | GUI_TA_VCENTER);
   3192          	LISTVIEW_AddColumn(hListView, 195 - FINGER_WIDTH, scratch, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   000000AC   0E30A0E3           MOV      R3,#+14
   \   000000B0   10208DE2           ADD      R2,SP,#+16
   \   000000B4   A010A0E3           MOV      R1,#+160
   \   000000B8   A40094E5           LDR      R0,[R4, #+164]
   \   000000BC   ........           BL       LISTVIEW_AddColumn
   3193          	LISTVIEW_SetAutoScrollV(hListView, 1);
   \   000000C0   0110A0E3           MOV      R1,#+1
   \   000000C4   A40094E5           LDR      R0,[R4, #+164]
   \   000000C8   ........           BL       LISTVIEW_SetAutoScrollV
   3194          	LISTVIEW_SetFont(hListView, &GUI_Font20_ASCII);
   \   000000CC   ........           LDR      R7,??DataTable195
   \   000000D0   A40094E5           LDR      R0,[R4, #+164]
   \   000000D4   0710A0E1           MOV      R1,R7
   \   000000D8   ........           BL       LISTVIEW_SetFont
   3195          	HEADER_SetFont(hHeader = LISTVIEW_GetHeader(hListView), &GUI_Font20_ASCII);
   \   000000DC   A40094E5           LDR      R0,[R4, #+164]
   \   000000E0   ........           BL       LISTVIEW_GetHeader
   \   000000E4   0080A0E1           MOV      R8,R0
   \   000000E8   0710A0E1           MOV      R1,R7
   \   000000EC   ........           BL       HEADER_SetFont
   3196          	HEADER_SetTextAlign(hHeader, 0, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   000000F0   0E20A0E3           MOV      R2,#+14
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   0800A0E1           MOV      R0,R8
   \   000000FC   ........           BL       HEADER_SetTextAlign
   3197          	HEADER_SetTextAlign(hHeader, 2, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   00000100   0E20A0E3           MOV      R2,#+14
   \   00000104   0210A0E3           MOV      R1,#+2
   \   00000108   0800A0E1           MOV      R0,R8
   \   0000010C   ........           BL       HEADER_SetTextAlign
   3198          	LISTVIEW_SetRowHeight(hListView, FINGER_WIDTH - 5);
   \   00000110   1E10A0E3           MOV      R1,#+30
   \   00000114   A40094E5           LDR      R0,[R4, #+164]
   \   00000118   ........           BL       LISTVIEW_SetRowHeight
   3199          
   3200          // KMC START
   3201          	// If we were reviewing the details of a session (ie got here via the BACK button) then go back to that session
   3202          	// otherwise find the newest session
   3203          	if (reviewingSession == false)
   \   0000011C   CA00D4E5           LDRB     R0,[R4, #+202]
   \   00000120   000050E3           CMP      R0,#+0
   \   00000124   0300001A           BNE      ??DisplayReviewSessions_0
   3204          		selectedSessionUnsorted = FindNewestFile((enum SESSION_TYPE)sysData.selectedSessionType);
   \   00000128   D000D6E5           LDRB     R0,[R6, #+208]
   \   0000012C   ........           BL       FindNewestFile
   \   00000130   740084E5           STR      R0,[R4, #+116]
   \   00000134   010000EA           B        ??DisplayReviewSessions_1
   3205          	else reviewingSession = false;
   \                     ??DisplayReviewSessions_0:
   \   00000138   0000A0E3           MOV      R0,#+0
   \   0000013C   CA00C4E5           STRB     R0,[R4, #+202]
   3206          
   3207          	i = PopulateSessionLISTVIEW(selectedSessionUnsorted);
   \                     ??DisplayReviewSessions_1:
   \   00000140   740094E5           LDR      R0,[R4, #+116]
   \   00000144   ........           BL       PopulateSessionLISTVIEW
   \   00000148   0060A0E1           MOV      R6,R0
   3208          	GetSessionData();
   \   0000014C   ........           BL       GetSessionData
   3209          // KMC END
   3210          
   3211          	HEADER_SetHeight(hHeader, FINGER_WIDTH);
   \   00000150   2310A0E3           MOV      R1,#+35
   \   00000154   0800A0E1           MOV      R0,R8
   \   00000158   ........           BL       HEADER_SetHeight
   3212          	LISTVIEW_SetCompareFunc(hListView, 0, &DateTimeSort);
   \   0000015C   ........           LDR      R2,??DataTable197
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   A40094E5           LDR      R0,[R4, #+164]
   \   00000168   ........           BL       LISTVIEW_SetCompareFunc
   3213          	LISTVIEW_SetCompareFunc(hListView, 1, &LapTimeSort);
   \   0000016C   ........           LDR      R2,??DataTable197_1
   \   00000170   0110A0E3           MOV      R1,#+1
   \   00000174   A40094E5           LDR      R0,[R4, #+164]
   \   00000178   ........           BL       LISTVIEW_SetCompareFunc
   3214          	LISTVIEW_SetCompareFunc(hListView, 2, &LISTVIEW_CompareText);
   \   0000017C   ........           LDR      R2,??DataTable197_2
   \   00000180   0210A0E3           MOV      R1,#+2
   \   00000184   A40094E5           LDR      R0,[R4, #+164]
   \   00000188   ........           BL       LISTVIEW_SetCompareFunc
   3215          	LISTVIEW_EnableSort(hListView);
   \   0000018C   A40094E5           LDR      R0,[R4, #+164]
   \   00000190   ........           BL       LISTVIEW_EnableSort
   3216          	LISTVIEW_SetSort(hListView, 0, 0);			// Set sort to sort by decending date
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   A40094E5           LDR      R0,[R4, #+164]
   \   000001A0   ........           BL       LISTVIEW_SetSort
   3217          
   3218          
   3219          	hBestTime = BUTTON_CreateEx( COL1,  BOTTOM_BUTTON_ROW, 167, NEW_BUTON_HEIGHT, hParent, WM_CF_SHOW, 0, BEST_LAP_BTN);
   \   000001A4   1300A0E3           MOV      R0,#+19
   \   000001A8   800E80E3           ORR      R0,R0,#0x800
   \   000001AC   0C008DE5           STR      R0,[SP, #+12]
   \   000001B0   0000A0E3           MOV      R0,#+0
   \   000001B4   08008DE5           STR      R0,[SP, #+8]
   \   000001B8   0200A0E3           MOV      R0,#+2
   \   000001BC   04008DE5           STR      R0,[SP, #+4]
   \   000001C0   00508DE5           STR      R5,[SP, #+0]
   \   000001C4   2830A0E3           MOV      R3,#+40
   \   000001C8   A720A0E3           MOV      R2,#+167
   \   000001CC   E410A0E3           MOV      R1,#+228
   \   000001D0   2400A0E3           MOV      R0,#+36
   \   000001D4   ........           BL       BUTTON_CreateEx
   \   000001D8   900084E5           STR      R0,[R4, #+144]
   3220          	BUTTON_SetBitmap(hBestTime, BUTTON_BI_UNPRESSED, &bmStdGreenButton);
   \   000001DC   ........           LDR      R2,??DataTable197_3
   \   000001E0   0010A0E3           MOV      R1,#+0
   \   000001E4   ........           BL       BUTTON_SetBitmap
   3221          	BUTTON_SetTextColor(hBestTime, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000001E8   0020A0E3           MOV      R2,#+0
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   900094E5           LDR      R0,[R4, #+144]
   \   000001F4   ........           BL       BUTTON_SetTextColor
   3222          	//BUTTON_SetTextColor(hBestTime, BUTTON_BI_PRESSED, GUI_BLACK);
   3223          	BUTTON_SetTextColor(hBestTime, BUTTON_BI_DISABLED, GUI_BLACK);
   \   000001F8   0020A0E3           MOV      R2,#+0
   \   000001FC   0210A0E3           MOV      R1,#+2
   \   00000200   900094E5           LDR      R0,[R4, #+144]
   \   00000204   ........           BL       BUTTON_SetTextColor
   3224          	SetBestTimeButtonText();
   \   00000208   ........           BL       SetBestTimeButtonText
   3225          
   3226          	hSelectedReviewMode = BUTTON_CreateEx( COL2,  BOTTOM_BUTTON_ROW, NARROW_BUTTON_WIDTH, NEW_BUTON_HEIGHT, hParent, WM_CF_SHOW, 0, SESSION_TYPE_BTN);
   \   0000020C   0300A0E3           MOV      R0,#+3
   \   00000210   800E80E3           ORR      R0,R0,#0x800
   \   00000214   0C008DE5           STR      R0,[SP, #+12]
   \   00000218   0000A0E3           MOV      R0,#+0
   \   0000021C   08008DE5           STR      R0,[SP, #+8]
   \   00000220   0200A0E3           MOV      R0,#+2
   \   00000224   04008DE5           STR      R0,[SP, #+4]
   \   00000228   00508DE5           STR      R5,[SP, #+0]
   \   0000022C   2830A0E3           MOV      R3,#+40
   \   00000230   5020A0E3           MOV      R2,#+80
   \   00000234   E410A0E3           MOV      R1,#+228
   \   00000238   D600A0E3           MOV      R0,#+214
   \   0000023C   ........           BL       BUTTON_CreateEx
   \   00000240   9C0084E5           STR      R0,[R4, #+156]
   3227          	BUTTON_SetBitmap(hSelectedReviewMode, BUTTON_BI_UNPRESSED, &bmSmallYellowButton);
   \   00000244   ........           LDR      R2,??DataTable197_4
   \   00000248   0010A0E3           MOV      R1,#+0
   \   0000024C   ........           BL       BUTTON_SetBitmap
   3228          	BUTTON_SetTextColor(hSelectedReviewMode, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000250   0020A0E3           MOV      R2,#+0
   \   00000254   0010A0E3           MOV      R1,#+0
   \   00000258   9C0094E5           LDR      R0,[R4, #+156]
   \   0000025C   ........           BL       BUTTON_SetTextColor
   3229          	//BUTTON_SetTextColor(hSelectedReviewMode, BUTTON_BI_PRESSED, GUI_BLACK);
   3230          	//BUTTON_SetTextColor(hSelectedReviewMode, BUTTON_BI_DISABLED, GUI_BLACK);
   3231          	//BUTTON_SetText(hSelectedReviewMode, GetSelectedReviewModeText());
   3232          	BUTTON_SetText(hSelectedReviewMode, "Mode");
   \   00000260   ............       ADRL     R1,`?<Constant "Mode">`
   \              ....        
   \   00000268   9C0094E5           LDR      R0,[R4, #+156]
   \   0000026C   ........           BL       BUTTON_SetText
   3233          
   3234          	hDeleteButton = BUTTON_CreateEx( COL3,  BOTTOM_BUTTON_ROW, NARROW_BUTTON_WIDTH, NEW_BUTON_HEIGHT, hParent, WM_CF_SHOW, 0, DELETE_SESSION_BTN);
   \   00000270   0100A0E3           MOV      R0,#+1
   \   00000274   800E80E3           ORR      R0,R0,#0x800
   \   00000278   0C008DE5           STR      R0,[SP, #+12]
   \   0000027C   0000A0E3           MOV      R0,#+0
   \   00000280   08008DE5           STR      R0,[SP, #+8]
   \   00000284   0200A0E3           MOV      R0,#+2
   \   00000288   04008DE5           STR      R0,[SP, #+4]
   \   0000028C   00508DE5           STR      R5,[SP, #+0]
   \   00000290   2830A0E3           MOV      R3,#+40
   \   00000294   5020A0E3           MOV      R2,#+80
   \   00000298   E410A0E3           MOV      R1,#+228
   \   0000029C   4B0F80E3           ORR      R0,R0,#0x12C
   \   000002A0   ........           BL       BUTTON_CreateEx
   \   000002A4   980084E5           STR      R0,[R4, #+152]
   3235          	BUTTON_SetBitmap(hDeleteButton, BUTTON_BI_UNPRESSED, &bmSmallRedButton);
   \   000002A8   ........           LDR      R2,??DataTable197_5
   \   000002AC   0010A0E3           MOV      R1,#+0
   \   000002B0   ........           BL       BUTTON_SetBitmap
   3236          	BUTTON_SetText(hDeleteButton, "Delete");
   \   000002B4   ............       ADRL     R1,`?<Constant "Delete">`
   \              ....        
   \   000002BC   980094E5           LDR      R0,[R4, #+152]
   \   000002C0   ........           BL       BUTTON_SetText
   3237          
   3238          	hDetailsButton = BUTTON_CreateEx( COL4,  BOTTOM_BUTTON_ROW, NARROW_BUTTON_WIDTH, NEW_BUTON_HEIGHT, hParent, WM_CF_SHOW, 0, CHECK_TIMES_BTN);
   \   000002C4   0200A0E3           MOV      R0,#+2
   \   000002C8   800E80E3           ORR      R0,R0,#0x800
   \   000002CC   0C008DE5           STR      R0,[SP, #+12]
   \   000002D0   0000A0E3           MOV      R0,#+0
   \   000002D4   08008DE5           STR      R0,[SP, #+8]
   \   000002D8   0200A0E3           MOV      R0,#+2
   \   000002DC   04008DE5           STR      R0,[SP, #+4]
   \   000002E0   00508DE5           STR      R5,[SP, #+0]
   \   000002E4   2830A0E3           MOV      R3,#+40
   \   000002E8   5020A0E3           MOV      R2,#+80
   \   000002EC   E410A0E3           MOV      R1,#+228
   \   000002F0   610F80E3           ORR      R0,R0,#0x184
   \   000002F4   ........           BL       BUTTON_CreateEx
   \   000002F8   940084E5           STR      R0,[R4, #+148]
   3239          	BUTTON_SetBitmap(hDetailsButton, BUTTON_BI_UNPRESSED, &bmSmallBlueButton);
   \   000002FC   ........           LDR      R2,??DataTable197_6
   \   00000300   0010A0E3           MOV      R1,#+0
   \   00000304   ........           BL       BUTTON_SetBitmap
   3240          	BUTTON_SetText(hDetailsButton, "Details");
   \   00000308   ............       ADRL     R1,`?<Constant "Details">`
   \              ....        
   \   00000310   940094E5           LDR      R0,[R4, #+148]
   \   00000314   ........           BL       BUTTON_SetText
   3241          	SetButtonColors(i);
   \   00000318   0600A0E1           MOV      R0,R6
   \   0000031C   ........           BL       SetButtonColors
   3242          }
   \   00000320   48D08DE2           ADD      SP,SP,#+72       ;; stack cleaning
   \   00000324   F081BDE8           POP      {R4-R8,PC}       ;; return
   3243          

   \                                 In section .text, align 4, keep-with-next
   3244          void SetButtonColors(int i)
   3245          {
   \                     SetButtonColors:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3246          	if (i != 0)
   \   00000004   ........           LDR      R4,??DataTable181_1
   \   00000008   0010B0E1           MOVS     R1,R0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   980094E5           LDR      R0,[R4, #+152]
   \   00000014   1100000A           BEQ      ??SetButtonColors_0
   3247          	{
   3248          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   ........           BL       BUTTON_SetTextColor
   3249          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   00000024   FF54E0E3           MVN      R5,#-16777216
   \   00000028   0520A0E1           MOV      R2,R5
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   940094E5           LDR      R0,[R4, #+148]
   \   00000034   ........           BL       BUTTON_SetTextColor
   3250          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_PRESSED, GUI_BLACK);
   \   00000038   0020A0E3           MOV      R2,#+0
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   980094E5           LDR      R0,[R4, #+152]
   \   00000044   ........           BL       BUTTON_SetTextColor
   3251          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_PRESSED, GUI_WHITE);
   \   00000048   0520A0E1           MOV      R2,R5
   \   0000004C   0110A0E3           MOV      R1,#+1
   \   00000050   940094E5           LDR      R0,[R4, #+148]
   \   00000054   ........           BL       BUTTON_SetTextColor
   3252          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_DISABLED, GUI_BLACK);
   \   00000058   0020A0E3           MOV      R2,#+0
   \   0000005C   100000EA           B        ??SetButtonColors_1
   3253          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_DISABLED, GUI_WHITE);
   3254          	}
   3255          	else
   3256          	{
   3257          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_UNPRESSED, GUI_GRAY);
   \                     ??SetButtonColors_0:
   \   00000060   ........           LDR      R5,??DataTable198  ;; 0x808080
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   0520A0E1           MOV      R2,R5
   \   0000006C   ........           BL       BUTTON_SetTextColor
   3258          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_UNPRESSED, GUI_GRAY);
   \   00000070   0520A0E1           MOV      R2,R5
   \   00000074   0010A0E3           MOV      R1,#+0
   \   00000078   940094E5           LDR      R0,[R4, #+148]
   \   0000007C   ........           BL       BUTTON_SetTextColor
   3259          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_PRESSED, GUI_GRAY);
   \   00000080   0520A0E1           MOV      R2,R5
   \   00000084   0110A0E3           MOV      R1,#+1
   \   00000088   980094E5           LDR      R0,[R4, #+152]
   \   0000008C   ........           BL       BUTTON_SetTextColor
   3260          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_PRESSED, GUI_GRAY);
   \   00000090   0520A0E1           MOV      R2,R5
   \   00000094   0110A0E3           MOV      R1,#+1
   \   00000098   940094E5           LDR      R0,[R4, #+148]
   \   0000009C   ........           BL       BUTTON_SetTextColor
   3261          		BUTTON_SetTextColor(hDeleteButton, BUTTON_BI_DISABLED, GUI_GRAY);
   \   000000A0   0520A0E1           MOV      R2,R5
   \                     ??SetButtonColors_1:
   \   000000A4   0210A0E3           MOV      R1,#+2
   \   000000A8   980094E5           LDR      R0,[R4, #+152]
   \   000000AC   ........           BL       BUTTON_SetTextColor
   3262          		BUTTON_SetTextColor(hDetailsButton, BUTTON_BI_DISABLED, GUI_GRAY);
   \   000000B0   0520A0E1           MOV      R2,R5
   \   000000B4   940094E5           LDR      R0,[R4, #+148]
   \   000000B8   04D08DE2           ADD      SP,SP,#+4
   \   000000BC   3040BDE8           POP      {R4,R5,LR}
   \   000000C0   0210A0E3           MOV      R1,#+2
   \   000000C4   ........           B        BUTTON_SetTextColor  ;; tailcall
   3263          	}
   3264          }
   3265          

   \                                 In section .text, align 4, keep-with-next
   3266          int PopulateSessionLISTVIEW(int selection)
   3267          {
   \                     PopulateSessionLISTVIEW:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   3268          	int i;
   3269          	char *pDest[3];
   3270          	char scratch[50];
   3271          
   3272          	// First delete any existing rows in case this is a redisplay
   3273          	i = LISTVIEW_GetNumRows(hListView);
   \   00000004   ........           LDR      R5,??DataTable197_7
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   80D04DE2           SUB      SP,SP,#+128
   \   00000010   A40095E5           LDR      R0,[R5, #+164]
   \   00000014   ........           BL       LISTVIEW_GetNumRows
   \   00000018   0060B0E1           MOVS     R6,R0
   \   0000001C   1200000A           BEQ      ??PopulateSessionLISTVIEW_0
   \   00000020   0670A0E1           MOV      R7,R6
   \   00000024   010017E3           TST      R7,#0x1
   \   00000028   0300000A           BEQ      ??PopulateSessionLISTVIEW_1
   3274          	while (i)
   3275          		LISTVIEW_DeleteRow(hListView, --i);
   \   0000002C   016046E2           SUB      R6,R6,#+1
   \   00000030   0610A0E1           MOV      R1,R6
   \   00000034   A40095E5           LDR      R0,[R5, #+164]
   \   00000038   ........           BL       LISTVIEW_DeleteRow
   \                     ??PopulateSessionLISTVIEW_1:
   \   0000003C   A770B0E1           LSRS     R7,R7,#+1
   \   00000040   0900000A           BEQ      ??PopulateSessionLISTVIEW_0
   \                     ??PopulateSessionLISTVIEW_2:
   \   00000044   016046E2           SUB      R6,R6,#+1
   \   00000048   0610A0E1           MOV      R1,R6
   \   0000004C   A40095E5           LDR      R0,[R5, #+164]
   \   00000050   ........           BL       LISTVIEW_DeleteRow
   \   00000054   016046E2           SUB      R6,R6,#+1
   \   00000058   0610A0E1           MOV      R1,R6
   \   0000005C   A40095E5           LDR      R0,[R5, #+164]
   \   00000060   ........           BL       LISTVIEW_DeleteRow
   \   00000064   017057E2           SUBS     R7,R7,#+1
   \   00000068   F5FFFF1A           BNE      ??PopulateSessionLISTVIEW_2
   3276          
   3277          	i = 0;
   3278          
   3279          	LISTVIEW_DeleteColumn(hListView, 2);			// Delete old Track/Session type column so I can create a new
   \                     ??PopulateSessionLISTVIEW_0:
   \   0000006C   0210A0E3           MOV      R1,#+2
   \   00000070   A40095E5           LDR      R0,[R5, #+164]
   \   00000074   ........           BL       LISTVIEW_DeleteColumn
   3280          	strcpy(scratch, "Track / ");					// one with the correct column heading (you can't just change
   \   00000078   0920A0E3           MOV      R2,#+9
   \   0000007C   ............       ADRL     R1,`?<Constant "Track / ">`
   \              ....        
   \   00000084   48008DE2           ADD      R0,SP,#+72
   \   00000088   ........           BL       __aeabi_memcpy4
   3281          	strcat(scratch, GetSelectedReviewModeText());	// the column heading text!).
   \   0000008C   ........           BL       GetSelectedReviewModeText
   \   00000090   0010A0E1           MOV      R1,R0
   \   00000094   48008DE2           ADD      R0,SP,#+72
   \   00000098   ........           BL       strcat
   3282          	LISTVIEW_AddColumn(hListView, 195 - FINGER_WIDTH, scratch, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   0000009C   0E30A0E3           MOV      R3,#+14
   \   000000A0   48208DE2           ADD      R2,SP,#+72
   \   000000A4   A010A0E3           MOV      R1,#+160
   \   000000A8   A40095E5           LDR      R0,[R5, #+164]
   \   000000AC   ........           BL       LISTVIEW_AddColumn
   \   000000B0   4B00A0E3           MOV      R0,#+75
   \   000000B4   ........           LDR      R1,??DataTable198_1
   \   000000B8   901627E0           MLA      R7,R0,R6,R1
   \   000000BC   ........           ADR      R8,??DataTable182_5  ;; 0x25, 0x64, 0x00, 0x00
   3283          
   3284          	while (SessionNameData[i].date[0])
   \   000000C0   0A00D7E5           LDRB     R0,[R7, #+10]
   \   000000C4   ........           ADR      R9,??DataTable182_6  ;; " "
   \   000000C8   08A08DE2           ADD      R10,SP,#+8
   \   000000CC   000050E3           CMP      R0,#+0
   \   000000D0   1900000A           BEQ      ??PopulateSessionLISTVIEW_3
   3285          	{
   3286          		char dateAndTime[50], sessionNumber[5];
   3287          
   3288          		strcpy(dateAndTime, SessionNameData[i].date);
   \                     ??PopulateSessionLISTVIEW_4:
   \   000000D4   0A1087E2           ADD      R1,R7,#+10
   \   000000D8   14008DE2           ADD      R0,SP,#+20
   \   000000DC   ........           BL       strcpy
   3289          		strcat(dateAndTime, " ");
   \   000000E0   0910A0E1           MOV      R1,R9
   \   000000E4   14008DE2           ADD      R0,SP,#+20
   \   000000E8   ........           BL       strcat
   3290          		strcat(dateAndTime, SessionNameData[i].time);
   \   000000EC   0710A0E1           MOV      R1,R7
   \   000000F0   14008DE2           ADD      R0,SP,#+20
   \   000000F4   ........           BL       strcat
   3291          		pDest[0] = dateAndTime;
   \   000000F8   14108DE2           ADD      R1,SP,#+20
   \   000000FC   08108DE5           STR      R1,[SP, #+8]
   3292          		
   3293          		sprintf(sessionNumber, "%d", SessionNameData[i].sessionNumber);
   \   00000100   4A20D7E5           LDRB     R2,[R7, #+74]
   \   00000104   0810A0E1           MOV      R1,R8
   \   00000108   0D00A0E1           MOV      R0,SP
   \   0000010C   ........           BL       sprintf
   3294          		pDest[1] = sessionNumber;
   3295          
   3296          		pDest[2] = SessionNameData[i].track;
   \   00000110   150087E2           ADD      R0,R7,#+21
   \   00000114   08008AE5           STR      R0,[R10, #+8]
   \   00000118   04D08AE5           STR      SP,[R10, #+4]
   3297          
   3298          		LISTVIEW_AddRow(hListView, pDest);
   \   0000011C   08108DE2           ADD      R1,SP,#+8
   \   00000120   A40095E5           LDR      R0,[R5, #+164]
   \   00000124   ........           BL       LISTVIEW_AddRow
   3299          		i++;
   \   00000128   4B7087E2           ADD      R7,R7,#+75
   \   0000012C   0A00D7E5           LDRB     R0,[R7, #+10]
   \   00000130   016086E2           ADD      R6,R6,#+1
   \   00000134   000050E3           CMP      R0,#+0
   \   00000138   E5FFFF1A           BNE      ??PopulateSessionLISTVIEW_4
   3300          	}
   3301          
   3302          	// Scrollbar width must be set after the data is in the control
   3303          	SCROLLBAR_SetWidth(WM_GetScrollbarV(hListView), FINGER_WIDTH);
   \                     ??PopulateSessionLISTVIEW_3:
   \   0000013C   A40095E5           LDR      R0,[R5, #+164]
   \   00000140   ........           BL       WM_GetScrollbarV
   \   00000144   2310A0E3           MOV      R1,#+35
   \   00000148   ........           BL       SCROLLBAR_SetWidth
   3304          	if ((i != 0) && (selection >= 0)) {	// Only select an entry if there are items to select (otherwise call fails!) and it has been requested
   \   0000014C   000056E3           CMP      R6,#+0
   \   00000150   0800000A           BEQ      ??PopulateSessionLISTVIEW_5
   \   00000154   000054E3           CMP      R4,#+0
   \   00000158   0600004A           BMI      ??PopulateSessionLISTVIEW_5
   3305          		LISTVIEW_SetSelUnsorted(hListView, selectedSessionUnsorted);
   \   0000015C   741095E5           LDR      R1,[R5, #+116]
   \   00000160   A40095E5           LDR      R0,[R5, #+164]
   \   00000164   ........           BL       LISTVIEW_SetSelUnsorted
   3306          		LISTVIEW_SetBkColor(hListView, LISTVIEW_CI_SELFOCUS, GUI_LISTBLUE);
   \   00000168   ........           LDR      R2,??DataTable200  ;; 0xff5480
   \   0000016C   0210A0E3           MOV      R1,#+2
   \   00000170   A40095E5           LDR      R0,[R5, #+164]
   \   00000174   ........           BL       LISTVIEW_SetBkColor
   3307          	}
   3308          	return numSessions = i;
   \                     ??PopulateSessionLISTVIEW_5:
   \   00000178   7C6085E5           STR      R6,[R5, #+124]
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   80D08DE2           ADD      SP,SP,#+128
   \   00000184   F087BDE8           POP      {R4-R10,PC}      ;; return
   3309          }
   3310          

   \                                 In section .text, align 4, keep-with-next
   3311          int DateTimeSort(void const *p1, void const *p2)
   3312          {
   \                     DateTimeSort:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
   3313          	int retval;
   3314          	char date1[12], date2[12];
   3315          
   3316          	strncpy(date1, p1, 11);		// Get the dates only
   \   00000010   0B20A0E3           MOV      R2,#+11
   \   00000014   0410A0E1           MOV      R1,R4
   \   00000018   0C008DE2           ADD      R0,SP,#+12
   \   0000001C   ........           BL       strncpy
   3317          	date1[10] = 0;				// null terminate
   \   00000020   0060A0E3           MOV      R6,#+0
   \   00000024   1660CDE5           STRB     R6,[SP, #+22]
   3318          	strncpy(date2, p2, 11);
   \   00000028   0B20A0E3           MOV      R2,#+11
   \   0000002C   0510A0E1           MOV      R1,R5
   \   00000030   0D00A0E1           MOV      R0,SP
   \   00000034   ........           BL       strncpy
   3319          	date2[10] = 0;				// null terminate
   \   00000038   0A60CDE5           STRB     R6,[SP, #+10]
   3320          
   3321          	if ((retval = strcmp(date2, date1)) == 0)
   \   0000003C   0C108DE2           ADD      R1,SP,#+12
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           BL       strcmp
   \   00000048   000050E3           CMP      R0,#+0
   \   0000004C   0A00001A           BNE      ??DateTimeSort_0
   3322          	{
   3323          		// Days equal, check the time of day
   3324          		int mins1, mins2;
   3325          
   3326          		mins1 = GetMins(p1);
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       GetMins
   \   00000058   0040A0E1           MOV      R4,R0
   3327          		mins2 = GetMins(p2);
   \   0000005C   0500A0E1           MOV      R0,R5
   \   00000060   ........           BL       GetMins
   3328          
   3329          		if (mins1 > mins2)
   \   00000064   040050E1           CMP      R0,R4
   3330          			return -1;
   \   00000068   0600E0B1           MVNLT    R0,R6
   \   0000006C   020000BA           BLT      ??DateTimeSort_0
   3331          		else if (mins2 > mins1)
   \   00000070   000054E1           CMP      R4,R0
   3332          			return 1;
   \   00000074   0100A0B3           MOVLT    R0,#+1
   3333          		else return 0;
   \   00000078   0000A0A3           MOVGE    R0,#+0
   3334          	}
   3335          	else return retval;
   \                     ??DateTimeSort_0:
   \   0000007C   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000080   7080BDE8           POP      {R4-R6,PC}       ;; return
   3336          }
   3337          

   \                                 In section .text, align 4, keep-with-next
   3338          int GetMins(const char *pData)
   3339          {
   \                     GetMins:
   \   00000000   00402DE9           PUSH     {LR}
   3340          	char ch;
   3341          	char foundHours = 0;
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   0020A0E3           MOV      R2,#+0
   3342          	char hours = 0;
   \   0000000C   0030A0E3           MOV      R3,#+0
   3343          	char mins = 0;
   3344          
   3345          	pData += 11;				// Index past date field
   \   00000010   0B0080E2           ADD      R0,R0,#+11
   \   00000014   000000EA           B        ??GetMins_0
   3346          	while ((ch = *pData++) != 0)
   3347          	{
   3348          		if ((ch >= '0') && (ch <= '9'))
   3349          		{
   3350          			if (!foundHours)
   3351          			{
   3352          				if (hours)
   3353          					hours = (hours * 10) + (ch - '0');
   3354          				else hours = ch - '0';
   \                     ??GetMins_1:
   \   00000018   FF3003E2           AND      R3,R3,#0xFF
   \                     ??GetMins_0:
   \   0000001C   01E0D0E4           LDRB     LR,[R0], #+1
   \   00000020   0EC0B0E1           MOVS     R12,LR
   \   00000024   2300000A           BEQ      ??GetMins_2
   \   00000028   30E04CE2           SUB      LR,R12,#+48
   \   0000002C   0A005EE3           CMP      LR,#+10
   \   00000030   0F00002A           BCS      ??GetMins_3
   \   00000034   000052E3           CMP      R2,#+0
   \   00000038   0500001A           BNE      ??GetMins_4
   \   0000003C   000053E3           CMP      R3,#+0
   \   00000040   0AE0A013           MOVNE    LR,#+10
   \   00000044   83CE0311           SMLABBNE R3,R3,LR,R12
   \   00000048   30304C02           SUBEQ    R3,R12,#+48
   \   0000004C   30304312           SUBNE    R3,R3,#+48
   \   00000050   F0FFFFEA           B        ??GetMins_1
   3355          			}
   3356          			else {
   3357          				if (mins)
   \                     ??GetMins_4:
   \   00000054   FF1011E2           ANDS     R1,R1,#0xFF
   \   00000058   0300000A           BEQ      ??GetMins_5
   3358          					mins = (mins * 10) + (ch - '0');
   \   0000005C   0AE0A0E3           MOV      LR,#+10
   \   00000060   81CE01E1           SMLABB   R1,R1,LR,R12
   \   00000064   301041E2           SUB      R1,R1,#+48
   \   00000068   EBFFFFEA           B        ??GetMins_0
   3359          				else mins = ch - '0';
   \                     ??GetMins_5:
   \   0000006C   30104CE2           SUB      R1,R12,#+48
   \   00000070   E9FFFFEA           B        ??GetMins_0
   3360          			}
   3361          		}
   3362          		else if (ch == ':')
   3363          			foundHours = true;
   \                     ??GetMins_3:
   \   00000074   0120A003           MOVEQ    R2,#+1
   \   00000078   E7FFFF0A           BEQ      ??GetMins_0
   3364          		else if (tolower(ch) == 'a')
   \   0000007C   41E04CE2           SUB      LR,R12,#+65
   \   00000080   1A005EE3           CMP      LR,#+26
   \   00000084   20C08C32           ADDCC    R12,R12,#+32
   \   00000088   61005CE3           CMP      R12,#+97
   \   0000008C   0300001A           BNE      ??GetMins_6
   3365          		{
   3366          			if (hours == 12)
   \   00000090   0C0053E3           CMP      R3,#+12
   \   00000094   E0FFFF1A           BNE      ??GetMins_0
   3367          				hours = 0;
   \   00000098   0030A0E3           MOV      R3,#+0
   \   0000009C   DEFFFFEA           B        ??GetMins_0
   3368          		}
   3369          		else if (tolower(ch) == 'p')
   \                     ??GetMins_6:
   \   000000A0   70005CE3           CMP      R12,#+112
   \   000000A4   DCFFFF1A           BNE      ??GetMins_0
   3370          		{
   3371          			if (hours != 12)
   \   000000A8   0C0053E3           CMP      R3,#+12
   \   000000AC   DAFFFF0A           BEQ      ??GetMins_0
   3372          				hours += 12;
   \   000000B0   0C3083E2           ADD      R3,R3,#+12
   \   000000B4   D7FFFFEA           B        ??GetMins_1
   3373          		}
   3374          	}
   3375          	return (hours * 60) + mins;
   \                     ??GetMins_2:
   \   000000B8   3C20A0E3           MOV      R2,#+60
   \   000000BC   FF1001E2           AND      R1,R1,#0xFF
   \   000000C0   821300E1           SMLABB   R0,R2,R3,R1
   \   000000C4   0080BDE8           POP      {PC}             ;; return
   3376          }
   3377          

   \                                 In section .text, align 4, keep-with-next
   3378          int LapTimeSort(void const *p1, void const *p2)
   3379          {
   \                     LapTimeSort:
   \   00000000   0120A0E1           MOV      R2,R1
   3380          	return strcmp(p2, p1);
   \   00000004   0010A0E1           MOV      R1,R0
   \   00000008   0200A0E1           MOV      R0,R2
   \   0000000C   ........           B        strcmp           ;; tailcall
   3381          }
   3382          

   \                                 In section .text, align 4, keep-with-next
   3383          void DisplaySystemSettings(WM_HWIN hParent)
   3384          {
   \                     DisplaySystemSettings:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   3385          	BUTTON_Handle hButton;
   3386          
   3387          	hButton = BUTTON_CreateEx(30, 38, 127, 115, hParent, WM_CF_SHOW, 0, DISPLAY_BUTTON);
   \   00000008   0C00A0E3           MOV      R0,#+12
   \   0000000C   10D04DE2           SUB      SP,SP,#+16
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0200A0E3           MOV      R0,#+2
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00408DE5           STR      R4,[SP, #+0]
   \   0000002C   7330A0E3           MOV      R3,#+115
   \   00000030   7F20A0E3           MOV      R2,#+127
   \   00000034   2610A0E3           MOV      R1,#+38
   \   00000038   1E00A0E3           MOV      R0,#+30
   \   0000003C   ........           BL       BUTTON_CreateEx
   3388          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmDisplay);
   \   00000040   ........           LDR      R2,??DataTable201
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   ........           BL       BUTTON_SetBitmap
   3389          
   3390          	hButton = BUTTON_CreateEx(177, 38, 127, 115, hParent, WM_CF_SHOW, 0, UNITS_BUTTON);
   \   0000004C   0D00A0E3           MOV      R0,#+13
   \   00000050   800E80E3           ORR      R0,R0,#0x800
   \   00000054   0C008DE5           STR      R0,[SP, #+12]
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   08008DE5           STR      R0,[SP, #+8]
   \   00000060   0200A0E3           MOV      R0,#+2
   \   00000064   04008DE5           STR      R0,[SP, #+4]
   \   00000068   00408DE5           STR      R4,[SP, #+0]
   \   0000006C   7330A0E3           MOV      R3,#+115
   \   00000070   7F20A0E3           MOV      R2,#+127
   \   00000074   2610A0E3           MOV      R1,#+38
   \   00000078   B100A0E3           MOV      R0,#+177
   \   0000007C   ........           BL       BUTTON_CreateEx
   3391          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmUnits);
   \   00000080   ........           LDR      R2,??DataTable201_1
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   ........           BL       BUTTON_SetBitmap
   3392          
   3393          	hButton = BUTTON_CreateEx(324, 38, 127, 115, hParent, WM_CF_SHOW, 0, TIME_BUTTON);
   \   0000008C   0E00A0E3           MOV      R0,#+14
   \   00000090   800E80E3           ORR      R0,R0,#0x800
   \   00000094   0C008DE5           STR      R0,[SP, #+12]
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   08008DE5           STR      R0,[SP, #+8]
   \   000000A0   0200A0E3           MOV      R0,#+2
   \   000000A4   04008DE5           STR      R0,[SP, #+4]
   \   000000A8   00408DE5           STR      R4,[SP, #+0]
   \   000000AC   7330A0E3           MOV      R3,#+115
   \   000000B0   7F20A0E3           MOV      R2,#+127
   \   000000B4   2610A0E3           MOV      R1,#+38
   \   000000B8   510FA0E3           MOV      R0,#+324
   \   000000BC   ........           BL       BUTTON_CreateEx
   3394          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmTimeGPS);
   \   000000C0   ........           LDR      R2,??DataTable201_2
   \   000000C4   0010A0E3           MOV      R1,#+0
   \   000000C8   ........           BL       BUTTON_SetBitmap
   3395          
   3396          	hButton = BUTTON_CreateEx(30, 156, 127, 115, hParent, WM_CF_SHOW, 0, AUTOSTART_BUTTON);
   \   000000CC   0F00A0E3           MOV      R0,#+15
   \   000000D0   800E80E3           ORR      R0,R0,#0x800
   \   000000D4   0C008DE5           STR      R0,[SP, #+12]
   \   000000D8   0000A0E3           MOV      R0,#+0
   \   000000DC   08008DE5           STR      R0,[SP, #+8]
   \   000000E0   0200A0E3           MOV      R0,#+2
   \   000000E4   04008DE5           STR      R0,[SP, #+4]
   \   000000E8   00408DE5           STR      R4,[SP, #+0]
   \   000000EC   7330A0E3           MOV      R3,#+115
   \   000000F0   7F20A0E3           MOV      R2,#+127
   \   000000F4   9C10A0E3           MOV      R1,#+156
   \   000000F8   1E00A0E3           MOV      R0,#+30
   \   000000FC   ........           BL       BUTTON_CreateEx
   3397          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmAutoStartButton);
   \   00000100   ........           LDR      R2,??DataTable201_3
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   ........           BL       BUTTON_SetBitmap
   3398          
   3399          	hButton = BUTTON_CreateEx(177, 156, 127, 115, hParent, WM_CF_SHOW, 0, STORAGE_BUTTON);
   \   0000010C   810EA0E3           MOV      R0,#+2064
   \   00000110   0C008DE5           STR      R0,[SP, #+12]
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   08008DE5           STR      R0,[SP, #+8]
   \   0000011C   0200A0E3           MOV      R0,#+2
   \   00000120   04008DE5           STR      R0,[SP, #+4]
   \   00000124   00408DE5           STR      R4,[SP, #+0]
   \   00000128   7330A0E3           MOV      R3,#+115
   \   0000012C   7F20A0E3           MOV      R2,#+127
   \   00000130   9C10A0E3           MOV      R1,#+156
   \   00000134   B100A0E3           MOV      R0,#+177
   \   00000138   ........           BL       BUTTON_CreateEx
   3400          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmStorage);
   \   0000013C   ........           LDR      R2,??DataTable201_4
   \   00000140   0010A0E3           MOV      R1,#+0
   \   00000144   ........           BL       BUTTON_SetBitmap
   3401          
   3402          	hButton = BUTTON_CreateEx(324, 156, 127, 115, hParent, WM_CF_SHOW, 0, PREDICTIVE_BUTTON);
   \   00000148   1100A0E3           MOV      R0,#+17
   \   0000014C   800E80E3           ORR      R0,R0,#0x800
   \   00000150   0C008DE5           STR      R0,[SP, #+12]
   \   00000154   0000A0E3           MOV      R0,#+0
   \   00000158   08008DE5           STR      R0,[SP, #+8]
   \   0000015C   0200A0E3           MOV      R0,#+2
   \   00000160   04008DE5           STR      R0,[SP, #+4]
   \   00000164   00408DE5           STR      R4,[SP, #+0]
   \   00000168   7330A0E3           MOV      R3,#+115
   \   0000016C   7F20A0E3           MOV      R2,#+127
   \   00000170   9C10A0E3           MOV      R1,#+156
   \   00000174   510FA0E3           MOV      R0,#+324
   \   00000178   ........           BL       BUTTON_CreateEx
   3403          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmPredictive);
   \   0000017C   10D08DE2           ADD      SP,SP,#+16
   \   00000180   1040BDE8           POP      {R4,LR}
   \   00000184   ........           LDR      R2,??DataTable201_5
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   ........           B        BUTTON_SetBitmap  ;; tailcall
   3404          }
   3405          

   \                                 In section .text, align 4, keep-with-next
   3406          void GoRacingPaint(WM_HWIN hParent)
   3407          {
   \                     GoRacingPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   3408          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable201_6
   \   00000014   ........           BL       GUI_DrawBitmap
   3409          	GUI_DrawBitmap(&bmGoRacingText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable201_7
   \   00000024   ........           BL       GUI_DrawBitmap
   3410          	GUI_DrawBitmap(GetNavigationArrow(GO_RACING), 0, 229);
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   0040BDE8           POP      {LR}
   \   00000030   E520A0E3           MOV      R2,#+229
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   ........           LDR      R0,??DataTable201_8
   \   0000003C   ........           B        GUI_DrawBitmap   ;; tailcall
   3411          }
   3412          
   3413          

   \                                 In section .text, align 4, keep-with-next
   3414          void RaceSetupPaint(WM_HWIN hParent)
   3415          {
   \                     RaceSetupPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   3416          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable201_6
   \   00000014   ........           BL       GUI_DrawBitmap
   3417          	GUI_DrawBitmap(&bmRaceSetupText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable201_9
   \   00000024   ........           BL       GUI_DrawBitmap
   3418          	GUI_DrawBitmap(GetNavigationArrow(RACE_SETUP), 0, 229);
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   0040BDE8           POP      {LR}
   \   00000030   E520A0E3           MOV      R2,#+229
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   ........           LDR      R0,??DataTable201_8
   \   0000003C   ........           B        GUI_DrawBitmap   ;; tailcall
   3419          }
   3420          
   3421          

   \                                 In section .text, align 4, keep-with-next
   3422          void ReviewSessionsPaint(WM_HWIN hParent)
   3423          {
   \                     ReviewSessionsPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   3424          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable201_6
   \   00000014   ........           BL       GUI_DrawBitmap
   3425          //	GUI_DrawBitmap(&bmSingleSpinner, 16, 42);
   3426          	GUI_DrawBitmap(&bmRaceReviewText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable201_10
   \   00000024   ........           BL       GUI_DrawBitmap
   3427          	GUI_DrawBitmap(GetNavigationArrow(REVIEW_SESSIONS), 0, 229);
   \   00000028   E520A0E3           MOV      R2,#+229
   \   0000002C   0010A0E3           MOV      R1,#+0
   \   00000030   ........           LDR      R0,??DataTable201_8
   \   00000034   ........           BL       GUI_DrawBitmap
   3428          
   3429          	// draw remaining session notes
   3430          	GUI_SetFont(&GUI_Font24_ASCII);
   \   00000038   ........           LDR      R0,??DataTable202
   \   0000003C   ........           BL       GUI_SetFont
   3431          	GUI_SetColor(GUI_WHITE);
   \   00000040   FF04E0E3           MVN      R0,#-16777216
   \   00000044   ........           BL       GUI_SetColor
   3432          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   00000048   04D08DE2           ADD      SP,SP,#+4
   \   0000004C   0040BDE8           POP      {LR}
   \   00000050   0200A0E3           MOV      R0,#+2
   \   00000054   ........           B        GUI_SetTextMode  ;; tailcall
   3433          
   3434          	////// Highlight details button
   3435          	////GUI_SetColor(GUI_MEDGREEN);
   3436          	////GUI_DrawRect(COL4 - 3, BOTTOM_BUTTON_ROW - 2, COL4 + NARROW_BUTTON_WIDTH + 2, BOTTOM_BUTTON_ROW + BUTTON_HEIGHT + 2);
   3437          }
   3438          

   \                                 In section .text, align 4, keep-with-next
   3439          void SystemSettingsPaint(WM_HWIN hParent)
   3440          {
   \                     SystemSettingsPaint:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   3441          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable201_6
   \   00000014   ........           BL       GUI_DrawBitmap
   3442          	GUI_DrawBitmap(&bmSystemSettingsText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable201_11
   \   00000024   ........           BL       GUI_DrawBitmap
   3443          	GUI_DrawBitmap(GetNavigationArrow(SYSTEM_SETUP), 0, 229);
   \   00000028   04D08DE2           ADD      SP,SP,#+4
   \   0000002C   0040BDE8           POP      {LR}
   \   00000030   E520A0E3           MOV      R2,#+229
   \   00000034   0010A0E3           MOV      R1,#+0
   \   00000038   ........           LDR      R0,??DataTable201_8
   \   0000003C   ........           B        GUI_DrawBitmap   ;; tailcall
   3444          }
   3445          
   3446          //int OwnerDraw(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   3447          //	switch (pDrawItemInfo->Cmd) {
   3448          //		case WIDGET_DRAW_OVERLAY:
   3449          //			GUI_SetColor(GUI_RED);
   3450          //			GUI_DrawHLine(67, 0, 180);
   3451          //			GUI_DrawHLine(103, 0, 180);
   3452          //			break;
   3453          //		default:
   3454          //	return LISTWHEEL_OwnerDraw(pDrawItemInfo);
   3455          //	}
   3456          //return 0;
   3457          //}
   3458          
   3459          //
   3460          // Tell the caller if this screen ID is currently visible on the display
   3461          //
   3462          // If a modal dialog box is being displayed then updates going on behind it
   3463          // are suspended to prevent the updating data from being displayed on top of
   3464          // the modal dialog box.
   3465          // Also, when the dialog box is removed we force a single screen clear to
   3466          // take place on the gauge screen to clear out the remnants of the dialog
   3467          // box between active features on the screen.
   3468          //

   \                                 In section .text, align 4, keep-with-next
   3469          int CS_IsVisible(int screen)
   3470          {
   \                     CS_IsVisible:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   3471          	if (glbBlackoutFlag == true)
   \   00000004   ........           LDR      R5,??DataTable197_7
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   780095E5           LDR      R0,[R5, #+120]
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   010050E3           CMP      R0,#+1
   \   00000018   0200001A           BNE      ??CS_IsVisible_0
   3472          		return false;
   \                     ??CS_IsVisible_1:
   \   0000001C   0000A0E3           MOV      R0,#+0
   \                     ??CS_IsVisible_2:
   \   00000020   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000024   3080BDE8           POP      {R4,R5,PC}       ;; return
   3473          	else if (glbBlackoutFlag == TRANSITION)
   \                     ??CS_IsVisible_0:
   \   00000028   020050E3           CMP      R0,#+2
   \   0000002C   0200001A           BNE      ??CS_IsVisible_3
   3474          	{
   3475          		GUI_Clear();
   \   00000030   ........           BL       GUI_Clear
   3476          		glbBlackoutFlag = false;
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   780085E5           STR      R0,[R5, #+120]
   3477          		// continue with normal processing...
   3478          	}
   3479          
   3480          	if ((selectedRaceMode == DRAG_MODE) || (selectedRaceMode == AUTOXRALLY_MODE))
   \                     ??CS_IsVisible_3:
   \   0000003C   C600D5E5           LDRB     R0,[R5, #+198]
   \   00000040   040050E3           CMP      R0,#+4
   \   00000044   01005013           CMPNE    R0,#+1
   \   00000048   0100001A           BNE      ??CS_IsVisible_4
   3481          		return true;
   \                     ??CS_IsVisible_5:
   \   0000004C   0100A0E3           MOV      R0,#+1
   \   00000050   F2FFFFEA           B        ??CS_IsVisible_2
   3482          
   3483          	if ((screen == GetCurrentScreenID()) || (screen == DRIVE_MODE_SCREEN))
   \                     ??CS_IsVisible_4:
   \   00000054   ........           LDR      R0,??DataTable202_1
   \   00000058   1400D0E5           LDRB     R0,[R0, #+20]
   \   0000005C   030050E3           CMP      R0,#+3
   \   00000060   0500000A           BEQ      ??CS_IsVisible_6
   \   00000064   0700003A           BCC      ??CS_IsVisible_7
   \   00000068   040050E3           CMP      R0,#+4
   \   0000006C   0500001A           BNE      ??CS_IsVisible_7
   \   00000070   ........           BL       GetLastScreen
   \   00000074   ........           LDR      R1,??DataTable202_3
   \   00000078   050000EA           B        ??CS_IsVisible_8
   \                     ??CS_IsVisible_6:
   \   0000007C   ........           BL       GetLastScreen
   \   00000080   ........           LDR      R1,??DataTable202_4
   \   00000084   020000EA           B        ??CS_IsVisible_8
   \                     ??CS_IsVisible_7:
   \   00000088   0200A0E3           MOV      R0,#+2
   \   0000008C   ........           BL       GetLastScreen
   \   00000090   ........           LDR      R1,??DataTable204
   \                     ??CS_IsVisible_8:
   \   00000094   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   \   00000098   000054E1           CMP      R4,R0
   \   0000009C   EAFFFF0A           BEQ      ??CS_IsVisible_5
   \   000000A0   050054E3           CMP      R4,#+5
   \   000000A4   DCFFFF1A           BNE      ??CS_IsVisible_1
   \   000000A8   E7FFFFEA           B        ??CS_IsVisible_5
   3484          		return true;
   3485          	else return false;
   3486          }
   3487          

   \                                 In section .text, align 4, keep-with-next
   3488          int GetCurrentScreenID(void)
   3489          {
   \                     GetCurrentScreenID:
   \   00000000   00402DE9           PUSH     {LR}
   3490          	switch (GetScreenType())
   \   00000004   ........           LDR      R0,??DataTable202_1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   1400D0E5           LDRB     R0,[R0, #+20]
   \   00000010   030050E3           CMP      R0,#+3
   \   00000014   0300000A           BEQ      ??GetCurrentScreenID_0
   \   00000018   0800003A           BCC      ??GetCurrentScreenID_1
   \   0000001C   040050E3           CMP      R0,#+4
   \   00000020   0300000A           BEQ      ??GetCurrentScreenID_2
   \   00000024   050000EA           B        ??GetCurrentScreenID_1
   3491          	{
   3492          	case DRIVE_MODE_SCREEN_TYPE:		return DriveScreenList[GetLastScreen(DRIVE_MODE_SCREEN_TYPE)].screenID;
   \                     ??GetCurrentScreenID_0:
   \   00000028   ........           BL       GetLastScreen
   \   0000002C   ........           LDR      R1,??DataTable202_4
   \   00000030   050000EA           B        ??GetCurrentScreenID_3
   3493          	case INSTRUMENTS_MODE_SCREEN_TYPE:	return InstrumentsScreenList[GetLastScreen(INSTRUMENTS_MODE_SCREEN_TYPE)].screenID;
   \                     ??GetCurrentScreenID_2:
   \   00000034   ........           BL       GetLastScreen
   \   00000038   ........           LDR      R1,??DataTable202_3
   \   0000003C   020000EA           B        ??GetCurrentScreenID_3
   3494          	default:
   3495          	case GAUGES_SCREEN_TYPE:			return GaugesScreenList[GetLastScreen(GAUGES_SCREEN_TYPE)].screenID;
   \                     ??GetCurrentScreenID_1:
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   ........           BL       GetLastScreen
   \   00000048   ........           LDR      R1,??DataTable204
   \                     ??GetCurrentScreenID_3:
   \   0000004C   800191E7           LDR      R0,[R1, +R0, LSL #+3]
   \   00000050   04D08DE2           ADD      SP,SP,#+4
   \   00000054   0080BDE8           POP      {PC}             ;; return
   3496          	}
   3497          }
   3498          
   3499          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen)
   3500          {
   3501          	switch (screen)
   3502          	{
   3503          		default:
   3504          		case GO_RACING:
   3505          		case REVIEW_SESSIONS:
   3506          		case RACE_SETUP:
   3507          		case SYSTEM_SETUP:		return &bmleftarrow;
   3508          	}
   3509          }
   3510          

   \                                 In section .text, align 4, keep-with-next
   3511          void ConfigScreensIgnoreNextKeyRelease(void)
   3512          {
   3513          	clickedOnThisScreen = false;
   \                     ConfigScreensIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable197_7
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   8C1080E5           STR      R1,[R0, #+140]
   3514          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   3515          
   3516          //static const GUI_WIDGET_CREATE_INFO _aDialogCreate[] = {
   3517          //	{ FRAMEWIN_CreateIndirect, "WARNING", 0, 50, 20, 360, 220, 0, 0 },
   3518          //	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK, 60, 115, 100, 60 },
   3519          //	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_CANCEL, 200, 115, 100, 60 },
   3520          //	{ TEXT_CreateIndirect, "This will end your recording session", 0, 0, 30, 360, 30, TEXT_CF_HCENTER },
   3521          //	{ TEXT_CreateIndirect, "Are you sure?", 0, 0, 70, 360, 30, TEXT_CF_HCENTER }
   3522          //};
   3523          
   3524          //
   3525          // Display a modal dialog box to see if the user wants to stop recording to exit this screen
   3526          //
   3527          // Returns	YES - proceed to exit record mode
   3528          //				NO - abort and stay
   3529          //
   3530          //int okToStopRecording(WM_HWIN hParent, int ypos)
   3531          //{
   3532          //	if (unsavedSysData.systemMode == DU2_IDLE)
   3533          //		return YES;
   3534          //
   3535          //	// KMC TODO - if DriveMode screen uses WM_CF_MEMDEV_ON_REDRAW then the popup screen makes the
   3536          //	// window background go brown.  But by allowing the paint to continue the brown does not show.
   3537          //	// This might be "fixed" for all screens if they all use WM_CF_MEMDEV_ON_REDRAW.
   3538          //	if (GetCurrentScreen() != DRIVE_MODE_SCREEN)
   3539          //		glbBlackoutFlag = true;			// Suspend gauge screen updates while the modal popup dialog box is diaplyed
   3540          //
   3541          //	FRAMEWIN_SetDefaultFont(&GUI_Font24_ASCII);
   3542          //	TEXT_SetDefaultFont(&GUI_Font24_ASCII);
   3543          //	BUTTON_SetDefaultFont(&GUI_Font24_ASCII);
   3544          //	BUTTON_SetDefaultBkColor(GUI_BLUE, BUTTON_BI_UNPRESSED);
   3545          //	BUTTON_SetDefaultTextColor(GUI_WHITE, BUTTON_BI_UNPRESSED);
   3546          //
   3547          //	if (GUI_ExecDialogBox(_aDialogCreate, GUI_COUNTOF(_aDialogCreate), &popupCallback, hParent, 10, ypos + 10) == GUI_ID_OK)
   3548          //		return YES;
   3549          //	else return NO;
   3550          //}

   \                                 In section .text, align 4, keep-with-next
   3551          void popupCallback(WM_MESSAGE * pMsg)
   3552          {
   \                     popupCallback:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   3553          	WM_HWIN hDlg;
   3554          	int NCode, Id;
   3555          
   3556          	hDlg = pMsg->hWin;
   3557          
   3558          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   18D04DE2           SUB      SP,SP,#+24
   \   00000010   044095E5           LDR      R4,[R5, #+4]
   \   00000014   1D0050E2           SUBS     R0,R0,#+29
   \   00000018   0200000A           BEQ      ??popupCallback_0
   \   0000001C   090050E2           SUBS     R0,R0,#+9
   \   00000020   3E00000A           BEQ      ??popupCallback_1
   \   00000024   520000EA           B        ??popupCallback_2
   3559          	{
   3560          		case WM_INIT_DIALOG:
   3561          			FRAMEWIN_SetTextAlign(hDlg, GUI_TA_HCENTER);
   \                     ??popupCallback_0:
   \   00000028   0210A0E3           MOV      R1,#+2
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       FRAMEWIN_SetTextAlign
   3562          			FRAMEWIN_SetTextColor(hDlg, popupTitleTextColor);
   \   00000034   ........           LDR      R0,??DataTable204_1
   \   00000038   001090E5           LDR      R1,[R0, #+0]
   \   0000003C   0400A0E1           MOV      R0,R4
   \   00000040   ........           BL       FRAMEWIN_SetTextColor
   3563          			if (systemSettingsPopupScreen == DELETE_SESSION)
   \   00000044   ........           LDR      R5,??DataTable204_2
   \   00000048   000095E5           LDR      R0,[R5, #+0]
   \   0000004C   070050E3           CMP      R0,#+7
   \   00000050   1F00001A           BNE      ??popupCallback_3
   3564          			{
   3565          				TEXT_Handle hText;
   3566          				size_t len;
   3567          
   3568          				hText = TEXT_CreateEx(0, 76, 360, 20, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0, fullSessionName);
   \   00000054   0000A0E3           MOV      R0,#+0
   \   00000058   0C008DE5           STR      R0,[SP, #+12]
   \   0000005C   0E00A0E3           MOV      R0,#+14
   \   00000060   08008DE5           STR      R0,[SP, #+8]
   \   00000064   ........           LDR      R6,??DataTable204_3
   \   00000068   0200A0E3           MOV      R0,#+2
   \   0000006C   04008DE5           STR      R0,[SP, #+4]
   \   00000070   10608DE5           STR      R6,[SP, #+16]
   \   00000074   00408DE5           STR      R4,[SP, #+0]
   \   00000078   1430A0E3           MOV      R3,#+20
   \   0000007C   5A2FA0E3           MOV      R2,#+360
   \   00000080   4C10A0E3           MOV      R1,#+76
   \   00000084   0000A0E3           MOV      R0,#+0
   \   00000088   ........           BL       TEXT_CreateEx
   \   0000008C   0040A0E1           MOV      R4,R0
   3569          				if ((len = strlen(fullSessionName)) > 50)
   \   00000090   0600A0E1           MOV      R0,R6
   \   00000094   ........           BL       strlen
   \   00000098   330050E3           CMP      R0,#+51
   \   0000009C   0300003A           BCC      ??popupCallback_4
   3570          					TEXT_SetFont(hText, &GUI_Font13B_ASCII);
   \   000000A0   ........           LDR      R1,??DataTable205
   \                     ??popupCallback_5:
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   ........           BL       TEXT_SetFont
   \   000000AC   180000EA           B        ??popupCallback_6
   3571          				else if (len > 40)
   \                     ??popupCallback_4:
   \   000000B0   290050E3           CMP      R0,#+41
   3572          					TEXT_SetFont(hText, &GUI_Font16B_ASCII);
   \   000000B4   ........           LDRCS    R1,??DataTable205_1
   \   000000B8   F9FFFF2A           BCS      ??popupCallback_5
   3573          				else if (len > 30)
   \   000000BC   1F0050E3           CMP      R0,#+31
   \   000000C0   0100003A           BCC      ??popupCallback_7
   3574          					TEXT_SetFont(hText, &GUI_Font20_ASCII);
   \   000000C4   ........           LDR      R1,??DataTable195
   \   000000C8   F5FFFFEA           B        ??popupCallback_5
   3575          				else TEXT_SetFont(hText, &GUI_Font24_ASCII);
   \                     ??popupCallback_7:
   \   000000CC   ........           LDR      R1,??DataTable202
   \   000000D0   F3FFFFEA           B        ??popupCallback_5
   3576          			}
   3577          			else if (systemSettingsPopupScreen == INVALID_FILES)
   \                     ??popupCallback_3:
   \   000000D4   080050E3           CMP      R0,#+8
   \   000000D8   0D00001A           BNE      ??popupCallback_6
   3578          				TEXT_CreateEx(0, 100, 400, 30, hDlg, WM_CF_SHOW, GUI_TA_CENTER | GUI_TA_VCENTER, 0, fileList);
   \   000000DC   ........           LDR      R0,??DataTable206
   \   000000E0   00408DE5           STR      R4,[SP, #+0]
   \   000000E4   10008DE5           STR      R0,[SP, #+16]
   \   000000E8   0000A0E3           MOV      R0,#+0
   \   000000EC   0C008DE5           STR      R0,[SP, #+12]
   \   000000F0   0E00A0E3           MOV      R0,#+14
   \   000000F4   08008DE5           STR      R0,[SP, #+8]
   \   000000F8   0200A0E3           MOV      R0,#+2
   \   000000FC   04008DE5           STR      R0,[SP, #+4]
   \   00000100   1E30A0E3           MOV      R3,#+30
   \   00000104   642FA0E3           MOV      R2,#+400
   \   00000108   6410A0E3           MOV      R1,#+100
   \   0000010C   0000A0E3           MOV      R0,#+0
   \   00000110   ........           BL       TEXT_CreateEx
   3579          
   3580          			systemSettingsPopupScreen = 0;		// Clear out flag
   \                     ??popupCallback_6:
   \   00000114   0000A0E3           MOV      R0,#+0
   \   00000118   000085E5           STR      R0,[R5, #+0]
   3581          			break;
   \   0000011C   160000EA           B        ??popupCallback_8
   3582          
   3583          		case WM_NOTIFY_PARENT:
   3584          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??popupCallback_1:
   \   00000120   080095E5           LDR      R0,[R5, #+8]
   \   00000124   ........           BL       WM_GetId
   \   00000128   0010A0E1           MOV      R1,R0
   3585          			NCode = pMsg->Data.v;				// Notification code
   3586          			switch (NCode)
   \   0000012C   0C0095E5           LDR      R0,[R5, #+12]
   \   00000130   020050E3           CMP      R0,#+2
   \   00000134   1000001A           BNE      ??popupCallback_8
   3587          			{
   3588          				case WM_NOTIFICATION_RELEASED:
   3589          					switch (Id)
   \   00000138   010041E2           SUB      R0,R1,#+1
   \   0000013C   070050E3           CMP      R0,#+7
   \   00000140   0500009A           BLS      ??popupCallback_9
   \   00000144   110040E2           SUB      R0,R0,#+17
   \   00000148   800E50E2           SUBS     R0,R0,#+2048
   \   0000014C   ........           LDREQ    R0,??DataTable207
   \   00000150   0110A003           MOVEQ    R1,#+1
   \   00000154   C910C005           STRBEQ   R1,[R0, #+201]
   \   00000158   010000EA           B        ??popupCallback_10
   3590          					{
   3591          						case GUI_ID_OK:
   3592          						case GUI_ID_CANCEL:
   3593          						case GUI_ID_YES:
   3594          						case GUI_ID_NO:
   3595          						case GUI_ID_CLOSE:
   3596          						case GUI_ID_HELP:
   3597          						case GUI_ID_MAXIMIZE:
   3598          						case GUI_ID_MINIMIZE:
   3599          							GUI_EndDialog(hDlg, Id);
   \                     ??popupCallback_9:
   \   0000015C   0400A0E1           MOV      R0,R4
   \   00000160   ........           BL       GUI_EndDialog
   3600          							break;
   3601          
   3602          						case GUI_ID_ABORT:
   3603          							userAbort = true;
   3604          							break;
   3605          					}
   3606          //					if (Id == GUI_ID_OK)				// OK Button
   3607          //						GUI_EndDialog(hDlg, 1);
   3608          //					else if (Id == GUI_ID_CANCEL)	// Cancel Button
   3609          //						GUI_EndDialog(hDlg, 0);
   3610          
   3611          					glbBlackoutFlag = TRANSITION;	// Set flag to allow a screen clear to remove the dialog box
   \                     ??popupCallback_10:
   \   00000164   ........           LDR      R0,??DataTable207
   \   00000168   0210A0E3           MOV      R1,#+2
   \   0000016C   781080E5           STR      R1,[R0, #+120]
   3612          					break;
   \   00000170   010000EA           B        ??popupCallback_8
   3613          			}
   3614          			break;
   3615          
   3616          		default:
   3617          			WM_DefaultProc(pMsg);
   \                     ??popupCallback_2:
   \   00000174   0500A0E1           MOV      R0,R5
   \   00000178   ........           BL       WM_DefaultProc
   3618          	}
   3619          }
   \                     ??popupCallback_8:
   \   0000017C   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000180   7080BDE8           POP      {R4-R6,PC}       ;; return
   3620          
   3621          //
   3622          // Exit recording mode.  Perform state transition, communicate with the SU, tell the user, update tables
   3623          //

   \                                 In section .text, align 4, keep-with-next
   3624          void ExitRecord(char saveData)
   3625          {
   \                     ExitRecord:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0080A0E1           MOV      R8,R0
   3626          	SetUserMode(DU2_IDLE);
   \   00000008   ........           LDR      R0,??DataTable207_1
   \   0000000C   ........           LDR      R5,??DataTable202_1
   \   00000010   0140A0E3           MOV      R4,#+1
   \   00000014   08D04DE2           SUB      SP,SP,#+8
   \   00000018   8840C0E5           STRB     R4,[R0, #+136]
   \   0000001C   B140C5E5           STRB     R4,[R5, #+177]
   \   00000020   ........           BL       notifyModeChange
   3627          	raceModeState = RM_INITIAL;
   \   00000024   ........           LDR      R7,??DataTable197_7
   \   00000028   0060A0E3           MOV      R6,#+0
   3628          	if ((selectedRaceMode == INSTRUMENTS_MODE) || (saveData == false))
   \   0000002C   C600D7E5           LDRB     R0,[R7, #+198]
   \   00000030   C560C7E5           STRB     R6,[R7, #+197]
   \   00000034   020050E3           CMP      R0,#+2
   \   00000038   00005813           CMPNE    R8,#+0
   \   0000003C   3000000A           BEQ      ??ExitRecord_0
   3629          		return;
   3630          	
   3631          	hSavingDataDialog = DisplaySavingData();
   \   00000040   C960C7E5           STRB     R6,[R7, #+201]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       SetPopupDefaults
   \   0000004C   784087E5           STR      R4,[R7, #+120]
   \   00000050   ........           BL       WM_GetDesktopWindow
   \   00000054   0A10A0E3           MOV      R1,#+10
   \   00000058   04108DE5           STR      R1,[SP, #+4]
   \   0000005C   00108DE5           STR      R1,[SP, #+0]
   \   00000060   0030A0E1           MOV      R3,R0
   \   00000064   ........           LDR      R2,??DataTable207_2
   \   00000068   0410A0E3           MOV      R1,#+4
   \   0000006C   ............       ADRL     R0,SavingDataResources
   \              ....        
   \   00000074   ........           BL       GUI_CreateDialogBox
   \   00000078   0080A0E1           MOV      R8,R0
   \   0000007C   ........           BL       GUI_Exec
   3632          	trackTable[trackTableIndex].sdCardEntry = 0;	// We now want to save data to disk!  Set flag to force WriteUserDataEvent to write data to SD card
   \   00000080   ........           LDR      R9,??DataTable207_4
   \   00000084   AC8087E5           STR      R8,[R7, #+172]
   \   00000088   000099E5           LDR      R0,[R9, #+0]
   \   0000008C   4880A0E3           MOV      R8,#+72
   \   00000090   ........           LDR      R10,??DataTable207_5
   \   00000094   98A020E0           MLA      R0,R8,R0,R10
   \   00000098   146080E5           STR      R6,[R0, #+20]
   3633          	WriteUserDataEvent(TRACK_DATA);					// Save new breadcrumb data
   \   0000009C   0100A0E3           MOV      R0,#+1
   \   000000A0   ........           BL       WriteUserDataEvent
   3634          	trackTable[trackTableIndex].sdCardEntry = 1;	// We now KNOW that this entry is on the SD card, manually set the flag to reflect that
   \   000000A4   000099E5           LDR      R0,[R9, #+0]
   \   000000A8   98A020E0           MLA      R0,R8,R0,R10
   \   000000AC   144080E5           STR      R4,[R0, #+20]
   \   000000B0   ........           LDR      R4,??DataTable207_6
   \   000000B4   020000EA           B        ??ExitRecord_1
   3635          
   3636          #ifndef _WINDOWS
   3637          	// Must now wait for session data write to disk to be complete as we are about to read those files
   3638          	// to generate the fastest lap information for displaying in Review Sessions.  Sit here and
   3639          	// poll sessionFile until it is cleared by TQMWriteTask or until the user aborts waiting.
   3640          	while (sessionFile && !userAbort)
   3641          	{
   3642          		GUI_Delay(100);
   \                     ??ExitRecord_2:
   \   000000B8   6400A0E3           MOV      R0,#+100
   \   000000BC   ........           BL       GUI_Delay
   3643          		GUI_Exec();
   \   000000C0   ........           BL       GUI_Exec
   3644          	}
   \                     ??ExitRecord_1:
   \   000000C4   000094E5           LDR      R0,[R4, #+0]
   \   000000C8   000050E3           CMP      R0,#+0
   \   000000CC   0200000A           BEQ      ??ExitRecord_3
   \   000000D0   C900D7E5           LDRB     R0,[R7, #+201]
   \   000000D4   000050E3           CMP      R0,#+0
   \   000000D8   F6FFFF0A           BEQ      ??ExitRecord_2
   3645          #endif
   3646          	
   3647          	// Run data now saved to SD card, parse data to get lap information
   3648          	CreateFileList(SESSION_DATA);					// Get best lap information out of session files
   \                     ??ExitRecord_3:
   \   000000DC   0400A0E3           MOV      R0,#+4
   \   000000E0   ........           BL       CreateFileList
   3649          	
   3650          	// Always select the last completed session of the current race type
   3651          	selectedSessionUnsorted = FindNewestFile((enum SESSION_TYPE)sysData.selectedSessionType);
   \   000000E4   D000D5E5           LDRB     R0,[R5, #+208]
   \   000000E8   ........           BL       FindNewestFile
   \   000000EC   740087E5           STR      R0,[R7, #+116]
   3652          													// Note: this routine is ready for all race session types
   3653          	GUI_EndDialog(hSavingDataDialog, 0);
   \   000000F0   0010A0E3           MOV      R1,#+0
   \   000000F4   AC0097E5           LDR      R0,[R7, #+172]
   \   000000F8   ........           BL       GUI_EndDialog
   3654          	glbBlackoutFlag = TRANSITION;					// Resume painting
   \   000000FC   0200A0E3           MOV      R0,#+2
   \   00000100   780087E5           STR      R0,[R7, #+120]
   3655          }
   \                     ??ExitRecord_0:
   \   00000104   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000108   F087BDE8           POP      {R4-R10,PC}      ;; return
   3656          
   3657          

   \                                 In section .text, align 4, keep-with-next
   3658          static const GUI_WIDGET_CREATE_INFO SavingDataResources[] = {
   \                     SavingDataResources:
   \   00000000                      ; Initializer data, 96 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "System Status">`
   \              ....        
   \   00000008   000028001400       DC16 0, 40, 20, 380, 220, 0
   \              7C01DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Saving your session data">`
   \              ............
   \   00000020   000000001E00       DC16 0, 0, 30, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Please Wait">`
   \              ....        
   \   00000038   000000004600       DC16 0, 0, 70, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "CANCEL">`
   \              ....        
   \   00000050   120882007300       DC16 2066, 130, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   3659          	{ FRAMEWIN_CreateIndirect, "System Status", 0, 40, 20, 380, 220, 0, 0 },
   3660          	//{ TEXT_CreateIndirect, "Saving your session data", 0, 0, 50, 360, 30, TEXT_CF_HCENTER },
   3661          	//{ TEXT_CreateIndirect, "Please Wait", 0, 0, 100, 360, 30, TEXT_CF_HCENTER },
   3662          	{ TEXT_CreateIndirect, "Saving your session data", 0, 0, 30, 360, 30, TEXT_CF_HCENTER },
   3663          	{ TEXT_CreateIndirect, "Please Wait", 0, 0, 70, 360, 30, TEXT_CF_HCENTER },
   3664          	{ BUTTON_CreateIndirect, "CANCEL", GUI_ID_ABORT, 130, 115, 100, 60 }
   3665          };
   3666          
   3667          //
   3668          // Tell user we're saving his data, he has to wait until the process is complete
   3669          //

   \                                 In section .text, align 4, keep-with-next
   3670          WM_HWIN DisplaySavingData(void)
   3671          {
   \                     DisplaySavingData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   3672          	WM_HWIN retval;
   3673          	
   3674          	userAbort = false;
   \   00000004   ........           LDR      R4,??DataTable197_7
   \   00000008   0000A0E3           MOV      R0,#+0
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
   \   00000010   C900C4E5           STRB     R0,[R4, #+201]
   3675          	SetPopupDefaults(INFORMATIONAL_POPUP);
   \   00000014   ........           BL       SetPopupDefaults
   3676          	glbBlackoutFlag = true;			// Suspend gauge screen updates while the popup dialog box is diaplyed
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   780084E5           STR      R0,[R4, #+120]
   3677          	retval = GUI_CreateDialogBox(SavingDataResources, GUI_COUNTOF(SavingDataResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \   00000020   ........           BL       WM_GetDesktopWindow
   \   00000024   0A10A0E3           MOV      R1,#+10
   \   00000028   04108DE5           STR      R1,[SP, #+4]
   \   0000002C   00108DE5           STR      R1,[SP, #+0]
   \   00000030   0030A0E1           MOV      R3,R0
   \   00000034   ........           LDR      R2,??DataTable207_2
   \   00000038   0410A0E3           MOV      R1,#+4
   \   0000003C   ............       ADRL     R0,SavingDataResources
   \              ....        
   \   00000044   ........           BL       GUI_CreateDialogBox
   \   00000048   0040A0E1           MOV      R4,R0
   3678          	GUI_Exec();						// Pause to allow popup to be drawn
   \   0000004C   ........           BL       GUI_Exec
   3679          	return retval;
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   08D08DE2           ADD      SP,SP,#+8
   \   00000058   1080BDE8           POP      {R4,PC}          ;; return
   3680          }
   3681          
   3682          

   \                                 In section .text, align 4, keep-with-next
   3683          void SetUserMode(DU2_STATE_TYPE mode)
   3684          {
   3685          	sysData.lastSystemMode = unsavedSysData.systemMode = mode;
   \                     SetUserMode:
   \   00000000   ........           LDR      R1,??DataTable207_1
   \   00000004   8800C1E5           STRB     R0,[R1, #+136]
   \   00000008   8810D1E5           LDRB     R1,[R1, #+136]
   \   0000000C   ........           LDR      R0,??DataTable202_1
   \   00000010   B110C0E5           STRB     R1,[R0, #+177]
   3686          	notifyModeChange();
   \   00000014   ........           B        notifyModeChange  ;; tailcall
   3687          }
   3688          
   3689          //
   3690          // Checks the SU status to see if it self-timed out due to the stop
   3691          // recording timer.  Returns TRUE if the recording timed out.
   3692          //

   \                                 In section .text, align 4, keep-with-next
   3693          unsigned char CheckForStopRecord(void)
   3694          {
   3695          	if (unsavedSysData.recordingTimedout == TRUE)
   \                     CheckForStopRecord:
   \   00000000   ........           LDR      R0,??DataTable207_1
   \   00000004   D410D0E5           LDRB     R1,[R0, #+212]
   \   00000008   010051E3           CMP      R1,#+1
   \   0000000C   0300001A           BNE      ??CheckForStopRecord_0
   3696          	{
   3697          		unsavedSysData.recordingTimedout = FALSE;
   \   00000010   0010A0E3           MOV      R1,#+0
   \   00000014   D410C0E5           STRB     R1,[R0, #+212]
   3698          		return TRUE;
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   1EFF2FE1           BX       LR
   3699          	}
   3700          	else return FALSE;
   \                     ??CheckForStopRecord_0:
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   1EFF2FE1           BX       LR               ;; return
   3701          }
   3702          
   3703          //
   3704          // Save the user selected race mode before staring the RaceMode state machine.
   3705          // If all checks pass then we will set the race mode to this selection.
   3706          //

   \                                 In section .text, align 4, keep-with-next
   3707          void SaveRaceMode(enum GUI_RACE_MODES mode)
   3708          {
   3709          	selectedRaceMode = mode;
   \                     SaveRaceMode:
   \   00000000   ........           LDR      R1,??DataTable197_7
   \   00000004   C600C1E5           STRB     R0,[R1, #+198]
   3710          	sysData.selectedSessionType = ConvertRaceModeToSessionType(mode);
   \   00000008   010050E2           SUBS     R0,R0,#+1
   \   0000000C   0700000A           BEQ      ??SaveRaceMode_0
   \   00000010   020050E2           SUBS     R0,R0,#+2
   \   00000014   0300000A           BEQ      ??SaveRaceMode_1
   \   00000018   010050E2           SUBS     R0,R0,#+1
   \   0000001C   5100A003           MOVEQ    R0,#+81
   \   00000020   5200A013           MOVNE    R0,#+82
   \   00000024   020000EA           B        ??SaveRaceMode_2
   \                     ??SaveRaceMode_1:
   \   00000028   4400A0E3           MOV      R0,#+68
   \   0000002C   000000EA           B        ??SaveRaceMode_2
   \                     ??SaveRaceMode_0:
   \   00000030   4100A0E3           MOV      R0,#+65
   \                     ??SaveRaceMode_2:
   \   00000034   ........           LDR      R1,??DataTable202_1
   \   00000038   D000C1E5           STRB     R0,[R1, #+208]
   3711          }
   \   0000003C   1EFF2FE1           BX       LR               ;; return
   3712          

   \                                 In section .text, align 4, keep-with-next
   3713          enum SESSION_TYPE ConvertRaceModeToSessionType(enum GUI_RACE_MODES mode)
   3714          {
   3715          	switch (mode)
   \                     ConvertRaceModeToSessionType:
   \   00000000   010050E2           SUBS     R0,R0,#+1
   \   00000004   0400000A           BEQ      ??ConvertRaceModeToSessionType_0
   \   00000008   020050E2           SUBS     R0,R0,#+2
   \   0000000C   0400000A           BEQ      ??ConvertRaceModeToSessionType_1
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   0400000A           BEQ      ??ConvertRaceModeToSessionType_2
   \   00000018   050000EA           B        ??ConvertRaceModeToSessionType_3
   3716          	{
   3717          	case AUTOXRALLY_MODE:	return AUTOCROSS_TYPE;
   \                     ??ConvertRaceModeToSessionType_0:
   \   0000001C   4100A0E3           MOV      R0,#+65
   \   00000020   1EFF2FE1           BX       LR
   3718          	case DRIVE_MODE:		return DRIVE_TYPE;
   \                     ??ConvertRaceModeToSessionType_1:
   \   00000024   4400A0E3           MOV      R0,#+68
   \   00000028   1EFF2FE1           BX       LR
   3719          	case DRAG_MODE:			return QUARTERMILE_TYPE;
   \                     ??ConvertRaceModeToSessionType_2:
   \   0000002C   5100A0E3           MOV      R0,#+81
   \   00000030   1EFF2FE1           BX       LR
   3720          
   3721          	default:
   3722          	case INSTRUMENTS_MODE:
   3723          	case ROADRACE_MODE:		return ROADRACE_TYPE;
   \                     ??ConvertRaceModeToSessionType_3:
   \   00000034   5200A0E3           MOV      R0,#+82
   \   00000038   1EFF2FE1           BX       LR               ;; return
   3724          	}
   3725          }
   3726          
   3727          //
   3728          // Entering the gauges screen with the touch screen currently pressed, ignore the next release of the touch screen
   3729          //

   \                                 In section .text, align 4, keep-with-next
   3730          void GaugeScreensIgnoreNextKeyRelease(void)
   3731          {
   3732          	GSignoreRelease = true;
   \                     GaugeScreensIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable207
   \   00000004   0110A0E3           MOV      R1,#+1
   \   00000008   C810C0E5           STRB     R1,[R0, #+200]
   3733          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   3734          

   \                                 In section .text, align 4, keep-with-next
   3735          void GoRacingStateMachine(WM_HWIN hParent)
   3736          {
   \                     GoRacingStateMachine:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   3737          	switch (raceModeState)
   \   00000004   ........           LDR      R4,??DataTable207
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   C500D4E5           LDRB     R0,[R4, #+197]
   \   00000010   10D04DE2           SUB      SP,SP,#+16
   \   00000014   0A0050E3           CMP      R0,#+10
   \   00000018   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??GoRacingStateMachine_0:
   \   0000001C   B500008A           BHI      ??GoRacingStateMachine_1
   \   00000020   090000EA           B        ??GoRacingStateMachine_2
   \   00000024   160000EA           B        ??GoRacingStateMachine_3
   \   00000028   AB0000EA           B        ??GoRacingStateMachine_4
   \   0000002C   4C0000EA           B        ??GoRacingStateMachine_5
   \   00000030   A90000EA           B        ??GoRacingStateMachine_4
   \   00000034   A80000EA           B        ??GoRacingStateMachine_4
   \   00000038   490000EA           B        ??GoRacingStateMachine_5
   \   0000003C   8B0000EA           B        ??GoRacingStateMachine_6
   \   00000040   640000EA           B        ??GoRacingStateMachine_7
   \   00000044   630000EA           B        ??GoRacingStateMachine_7
   \   00000048   A00000EA           B        ??GoRacingStateMachine_8
   3738          	{
   3739          	// Check for satellite reception
   3740          	case RM_INITIAL:
   3741          		if (selectedRaceMode == INSTRUMENTS_MODE)
   \                     ??GoRacingStateMachine_2:
   \   0000004C   C600D4E5           LDRB     R0,[R4, #+198]
   \   00000050   020050E3           CMP      R0,#+2
   \   00000054   0200001A           BNE      ??GoRacingStateMachine_9
   3742          		{
   3743          			ProceedToRaceMode(selectedRaceMode, hParent);
   \   00000058   0510A0E1           MOV      R1,R5
   \                     ??GoRacingStateMachine_10:
   \   0000005C   ........           BL       ProceedToRaceMode
   3744          			break;
   \   00000060   A40000EA           B        ??GoRacingStateMachine_1
   3745          		}
   3746          		else if (!HaveSatelliteReception())
   \                     ??GoRacingStateMachine_9:
   \   00000064   ........           BL       HaveSatelliteReception
   \   00000068   000050E3           CMP      R0,#+0
   \   0000006C   0400001A           BNE      ??GoRacingStateMachine_3
   3747          		{
   3748          			GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   \   00000070   C800C4E5           STRB     R0,[R4, #+200]
   3749          										// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3750          			DisplayWaitingForSatellites(GO_RACING_TYPE, selectedRaceMode, hParent);
   \   00000074   0520A0E1           MOV      R2,R5
   \   00000078   C610D4E5           LDRB     R1,[R4, #+198]
   \   0000007C   ........           BL       DisplayWaitingForSatellites
   3751          			break;
   \   00000080   9C0000EA           B        ??GoRacingStateMachine_1
   3752          		}
   3753          		// else fall through...
   3754          
   3755          	// Check for tracks
   3756          	case RM_FOUND_SATELLITES:
   3757          // KMC - Modified 8/28/12 to fix issue where dummy tracks were being created - be sure track has valid name, otherwise force track selection
   3758          		if (!CurrentTrackInRange() || (trackData.courseType != SessionTypeToTrackType((enum SESSION_TYPE)sysData.selectedSessionType)) || (strcmp(sysData.track, "") == 0))
   \                     ??GoRacingStateMachine_3:
   \   00000084   ........           BL       CurrentTrackInRange
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0C00000A           BEQ      ??GoRacingStateMachine_11
   \   00000090   ........           LDR      R6,??DataTable202_1
   \   00000094   D000D6E5           LDRB     R0,[R6, #+208]
   \   00000098   ........           BL       SessionTypeToTrackType
   \   0000009C   ........           LDR      R1,??DataTable207_8
   \   000000A0   4010D1E5           LDRB     R1,[R1, #+64]
   \   000000A4   000051E1           CMP      R1,R0
   \   000000A8   0400001A           BNE      ??GoRacingStateMachine_12
   \   000000AC   ........           ADR      R1,??DataTable199  ;; ""
   \   000000B0   A00086E2           ADD      R0,R6,#+160
   \   000000B4   ........           BL       strcmp
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   2800001A           BNE      ??GoRacingStateMachine_5
   3759          			{
   3760          				GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   \                     ??GoRacingStateMachine_12:
   \   000000C0   0000A0E3           MOV      R0,#+0
   \                     ??GoRacingStateMachine_11:
   \   000000C4   C800C4E5           STRB     R0,[R4, #+200]
   3761          										// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3762          				DisplayClosestTracks(hParent);
   \   000000C8   000055E3           CMP      R5,#+0
   \   000000CC   0100000A           BEQ      ??GoRacingStateMachine_13
   \   000000D0   0500A0E1           MOV      R0,R5
   \   000000D4   ........           BL       WM_DeleteWindow
   \                     ??GoRacingStateMachine_13:
   \   000000D8   ........           LDR      R0,??DataTable202_1
   \   000000DC   1810A0E3           MOV      R1,#+24
   \   000000E0   1410C0E5           STRB     R1,[R0, #+20]
   \   000000E4   ........           LDR      R0,??DataTable207_9
   \   000000E8   0110A0E3           MOV      R1,#+1
   \   000000EC   0010C0E5           STRB     R1,[R0, #+0]
   \   000000F0   0200A0E3           MOV      R0,#+2
   \   000000F4   680084E5           STR      R0,[R4, #+104]
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   08008DE5           STR      R0,[SP, #+8]
   \   00000100   ........           LDR      R0,??DataTable207_10
   \   00000104   443FA0E3           MOV      R3,#+272
   \   00000108   04008DE5           STR      R0,[SP, #+4]
   \   0000010C   0200A0E3           MOV      R0,#+2
   \   00000110   800D80E3           ORR      R0,R0,#0x2000
   \   00000114   00008DE5           STR      R0,[SP, #+0]
   \   00000118   782FA0E3           MOV      R2,#+480
   \   0000011C   0010A0E3           MOV      R1,#+0
   \   00000120   0000A0E3           MOV      R0,#+0
   \   00000124   ........           BL       WM_CreateWindow
   \   00000128   A80084E5           STR      R0,[R4, #+168]
   \   0000012C   010050E3           CMP      R0,#+1
   \   00000130   000000AA           BGE      ??GoRacingStateMachine_14
   \   00000134   ........           BL       SystemError
   \                     ??GoRacingStateMachine_14:
   \   00000138   ........           BL       ClearWorkingTrackName
   \   0000013C   A80094E5           LDR      R0,[R4, #+168]
   \   00000140   ........           BL       DisplayTrackSelection
   \   00000144   0030A0E3           MOV      R3,#+0
   \   00000148   7D20A0E3           MOV      R2,#+125
   \   0000014C   0010A0E3           MOV      R1,#+0
   \   00000150   A80094E5           LDR      R0,[R4, #+168]
   \   00000154   ........           BL       WM_CreateTimer
   \   00000158   700084E5           STR      R0,[R4, #+112]
   \   0000015C   ........           BL       ResetNewScreen
   3763          				break;
   \   00000160   640000EA           B        ??GoRacingStateMachine_1
   3764          			}
   3765          		// else fall through...
   3766          
   3767          	// Check for camera
   3768          	case RM_SELECTED_TRACK:
   3769          		////////if ((vehicleData.camera != CAMERA_NONE) && (GetValue(CAMERA_STATUS).iVal != CAMERA_STATUS_RECORDING))
   3770          		////////{
   3771          		////////	GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   3772          		////////								// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3773          		////////	DisplayWaitingForCameraScreen(hParent);
   3774          		////////	break;
   3775          		////////}
   3776          		////////// else fall through...
   3777          
   3778          	// Check for start/finish
   3779          	case RM_CAMERA_READY:			// Note: whether camera becomes ready of user presses RUN WITHOUT we come here
   3780          		switch (selectedRaceMode)
   \                     ??GoRacingStateMachine_5:
   \   00000164   C600D4E5           LDRB     R0,[R4, #+198]
   \   00000168   000050E3           CMP      R0,#+0
   \   0000016C   0400000A           BEQ      ??GoRacingStateMachine_15
   \   00000170   010050E2           SUBS     R0,R0,#+1
   \   00000174   2900000A           BEQ      ??GoRacingStateMachine_16
   \   00000178   030050E2           SUBS     R0,R0,#+3
   \   0000017C   3200000A           BEQ      ??GoRacingStateMachine_17
   \   00000180   120000EA           B        ??GoRacingStateMachine_18
   3781          		{
   3782          		case ROADRACE_MODE:
   3783          			if (trackData.startLineLat == 0.0)
   \                     ??GoRacingStateMachine_15:
   \   00000184   ........           LDR      R0,??DataTable207_8
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   D021C0E1           LDRD     R2,R3,[R0, #+16]
   \   00000190   0000A0E3           MOV      R0,#+0
   \   00000194   ........           BL       __aeabi_cdcmpeq
   \   00000198   0C00001A           BNE      ??GoRacingStateMachine_18
   3784          			{
   3785          				waitedForSF = true;
   \   0000019C   0100A0E3           MOV      R0,#+1
   \   000001A0   C700C4E5           STRB     R0,[R4, #+199]
   3786          				SetUserMode(DU2_LAPS_WAITNOSF);
   \   000001A4   ........           LDR      R1,??DataTable207_1
   \   000001A8   0500A0E3           MOV      R0,#+5
   \   000001AC   8800C1E5           STRB     R0,[R1, #+136]
   \   000001B0   ........           LDR      R1,??DataTable202_1
   \   000001B4   B100C1E5           STRB     R0,[R1, #+177]
   \   000001B8   ........           BL       notifyModeChange
   3787          				GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   \   000001BC   0000A0E3           MOV      R0,#+0
   \   000001C0   C800C4E5           STRB     R0,[R4, #+200]
   3788          											// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3789          				DisplayTapAtSFScreen(hParent);
   \   000001C4   0500A0E1           MOV      R0,R5
   \   000001C8   ........           BL       DisplayTapAtSFScreen
   3790          				return;
   \   000001CC   490000EA           B        ??GoRacingStateMachine_1
   3791          			}
   3792          			else waitedForSF = false;
   \                     ??GoRacingStateMachine_18:
   \   000001D0   0000A0E3           MOV      R0,#+0
   \   000001D4   C700C4E5           STRB     R0,[R4, #+199]
   3793          			break;							// allow to fall through
   3794          		case AUTOXRALLY_MODE:
   3795          			SetUserMode(DU2_AUTOX_WAITSTAGE);
   3796          			DisplayAutoXStageScreen(hParent);
   3797          			waitedForSF = true;
   3798          			return;
   3799          		case DRAG_MODE:
   3800          			SetUserMode(DU2_DRAG_WAITSTAGE);	// KMC TODO - we need to combine these to a single WAITSTAGE state as the user does not get the run length choice until we are on this state
   3801          			DisplayDragStageScreen(hParent);
   3802          			waitedForSF = true;
   3803          			return;
   3804          		default:
   3805          			waitedForSF = false;
   3806          			break;
   3807          		}
   3808          		// else fall through...
   3809          
   3810          	// Go racing
   3811          	case RM_STAGED:
   3812          	case RM_HAVE_SF:
   3813          		if ((selectedRaceMode == AUTOXRALLY_MODE) || (selectedRaceMode == DRAG_MODE))
   \                     ??GoRacingStateMachine_7:
   \   000001D8   C600D4E5           LDRB     R0,[R4, #+198]
   \   000001DC   010050E3           CMP      R0,#+1
   \   000001E0   04005013           CMPNE    R0,#+4
   \   000001E4   2100001A           BNE      ??GoRacingStateMachine_6
   3814          			if ((GetSUCam() != CAMERA_NONE) && (GetValue(CAMERA_STATUS).iVal != CAMERA_STATUS_RECORDING))
   \   000001E8   ........           BL       GetSUCam
   \   000001EC   000050E3           CMP      R0,#+0
   \   000001F0   1E00000A           BEQ      ??GoRacingStateMachine_6
   \   000001F4   4B10A0E3           MOV      R1,#+75
   \   000001F8   0D00A0E1           MOV      R0,SP
   \   000001FC   ........           BL       GetValue
   \   00000200   00009DE5           LDR      R0,[SP, #+0]
   \   00000204   030050E3           CMP      R0,#+3
   \   00000208   1800000A           BEQ      ??GoRacingStateMachine_6
   3815          			{
   3816          				GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   \   0000020C   0000A0E3           MOV      R0,#+0
   \   00000210   C800C4E5           STRB     R0,[R4, #+200]
   3817          											// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3818          				DisplayWaitingForCameraScreen(hParent);
   \   00000214   0500A0E1           MOV      R0,R5
   \   00000218   ........           BL       DisplayWaitingForCameraScreen
   3819          				break;
   \   0000021C   350000EA           B        ??GoRacingStateMachine_1
   3820          			}
   \                     ??GoRacingStateMachine_16:
   \   00000220   ........           LDR      R1,??DataTable207_1
   \   00000224   0300A0E3           MOV      R0,#+3
   \   00000228   8800C1E5           STRB     R0,[R1, #+136]
   \   0000022C   ........           LDR      R1,??DataTable202_1
   \   00000230   B100C1E5           STRB     R0,[R1, #+177]
   \   00000234   ........           BL       notifyModeChange
   \   00000238   0500A0E1           MOV      R0,R5
   \   0000023C   ........           BL       DisplayAutoXStageScreen
   \                     ??GoRacingStateMachine_19:
   \   00000240   0100A0E3           MOV      R0,#+1
   \   00000244   C700C4E5           STRB     R0,[R4, #+199]
   \   00000248   2A0000EA           B        ??GoRacingStateMachine_1
   \                     ??GoRacingStateMachine_17:
   \   0000024C   ........           LDR      R1,??DataTable207_1
   \   00000250   0400A0E3           MOV      R0,#+4
   \   00000254   8800C1E5           STRB     R0,[R1, #+136]
   \   00000258   ........           LDR      R1,??DataTable202_1
   \   0000025C   B100C1E5           STRB     R0,[R1, #+177]
   \   00000260   ........           BL       notifyModeChange
   \   00000264   0500A0E1           MOV      R0,R5
   \   00000268   ........           BL       DisplayDragStageScreen
   \   0000026C   F3FFFFEA           B        ??GoRacingStateMachine_19
   3821          		// else fall through...
   3822          
   3823          	case RM_CAMERA_RECORDING:
   3824          		raceModeState = RM_CAMERA_RECORDING;		// Be sure the race mode state is updated
   3825          		switch (selectedRaceMode)
   \                     ??GoRacingStateMachine_6:
   \   00000270   C610D4E5           LDRB     R1,[R4, #+198]
   \   00000274   0700A0E3           MOV      R0,#+7
   \   00000278   C500C4E5           STRB     R0,[R4, #+197]
   \   0000027C   000051E3           CMP      R1,#+0
   \   00000280   0400000A           BEQ      ??GoRacingStateMachine_20
   \   00000284   011051E2           SUBS     R1,R1,#+1
   \   00000288   0700000A           BEQ      ??GoRacingStateMachine_21
   \   0000028C   031051E2           SUBS     R1,R1,#+3
   \   00000290   0600000A           BEQ      ??GoRacingStateMachine_22
   \   00000294   0D0000EA           B        ??GoRacingStateMachine_8
   3826          		{
   3827          		case ROADRACE_MODE:
   3828          			if (waitedForSF)
   \                     ??GoRacingStateMachine_20:
   \   00000298   C700D4E5           LDRB     R0,[R4, #+199]
   \   0000029C   0510A0E1           MOV      R1,R5
   \   000002A0   000050E3           CMP      R0,#+0
   3829          				ProceedToRaceMode(NO_CHANGE_MODE, hParent);
   \   000002A4   0500A013           MOVNE    R0,#+5
   3830          			else ProceedToRaceMode(selectedRaceMode, hParent);
   \   000002A8   6BFFFFEA           B        ??GoRacingStateMachine_10
   3831          			break;
   3832          		case AUTOXRALLY_MODE:
   3833          //			if ((vehicleData.camera != CAMERA_NONE) && (GetValue(CAMERA_STATUS).iVal != CAMERA_STATUS_RECORDING))
   3834          //			{
   3835          //				GSignoreRelease = false;	// Any ignore that might have been set by a previous screen is not longer valid since
   3836          //											// we're displaying a new screen that will ignore the release anyway and then, possibly, reset it
   3837          //				DisplayWaitingForCameraScreen(hParent);
   3838          //				break;
   3839          //			}
   3840          			SetUserMode(DU2_AUTOX_WAITLAUNCH);
   \                     ??GoRacingStateMachine_21:
   \   000002AC   0600A0E3           MOV      R0,#+6
   \                     ??GoRacingStateMachine_22:
   \   000002B0   ........           LDR      R1,??DataTable207_1
   \   000002B4   8800C1E5           STRB     R0,[R1, #+136]
   \   000002B8   ........           LDR      R1,??DataTable202_1
   \   000002BC   B100C1E5           STRB     R0,[R1, #+177]
   \   000002C0   ........           BL       notifyModeChange
   3841          			DisplayLaunchScreen(hParent);
   \   000002C4   0500A0E1           MOV      R0,R5
   \   000002C8   ........           BL       DisplayLaunchScreen
   3842          			break;
   \   000002CC   090000EA           B        ??GoRacingStateMachine_1
   3843          		case DRAG_MODE:
   3844          			SetUserMode(DU2_DRAG_WAITLAUNCH);
   3845          			DisplayLaunchScreen(hParent);
   3846          			break;
   3847          		default:
   3848          			ProceedToRaceMode(selectedRaceMode, hParent);
   \                     ??GoRacingStateMachine_8:
   \   000002D0   0510A0E1           MOV      R1,R5
   \   000002D4   C600D4E5           LDRB     R0,[R4, #+198]
   \   000002D8   5FFFFFEA           B        ??GoRacingStateMachine_10
   3849          			break;
   3850          		}
   3851          		break;
   3852          
   3853          	case RM_LAUNCH_DETECTED:
   3854          		ProceedToRaceMode(selectedRaceMode, hParent);
   3855          		break;
   3856          
   3857          	case RM_RACING:
   3858          		break;
   3859          
   3860          	case RM_CANCELLED_WAITING_FOR_CAMERA:
   3861          	case RM_CANCELLED_WFS:
   3862          	case RM_CANCELLED_SELECT_TRACK:
   3863          		raceModeState = RM_INITIAL;
   \                     ??GoRacingStateMachine_4:
   \   000002DC   0000A0E3           MOV      R0,#+0
   \   000002E0   C500C4E5           STRB     R0,[R4, #+197]
   3864          		ResumeScreenScrolling();
   \   000002E4   0100A0E3           MOV      R0,#+1
   \   000002E8   680084E5           STR      R0,[R4, #+104]
   3865          		DisplayNewScreenList(CONFIG_SCREEN_TYPE, GO_RACING, hParent);
   \   000002EC   0520A0E1           MOV      R2,R5
   \   000002F0   0010A0E3           MOV      R1,#+0
   \   000002F4   ........           BL       DisplayNewScreenList
   3866          		break;
   \                     ??GoRacingStateMachine_1:
   \   000002F8   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   000002FC   7080BDE8           POP      {R4-R6,PC}       ;; return
   3867          	}
   3868          }
   3869          
   3870          

   \                                 In section .text, align 4, keep-with-next
   3871          void DisplayClosestTracks(WM_HWIN hPrev)
   3872          {
   \                     DisplayClosestTracks:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   3873          	if (hPrev)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??DisplayClosestTracks_0
   3874          		WM_DeleteWindow(hPrev);
   \   00000010   ........           BL       WM_DeleteWindow
   3875          
   3876          	SetScreenType(DISPLAY_CLOSEST_TRACKS_SCREEN_TYPE);
   \                     ??DisplayClosestTracks_0:
   \   00000014   ........           LDR      R0,??DataTable202_1
   \   00000018   1810A0E3           MOV      R1,#+24
   \   0000001C   1410C0E5           STRB     R1,[R0, #+20]
   3877          	ctType = CT_RACE_ENTRY;
   \   00000020   ........           LDR      R0,??DataTable207_9
   \   00000024   0110A0E3           MOV      R1,#+1
   \   00000028   0010C0E5           STRB     R1,[R0, #+0]
   3878          
   3879          	SetScreenScrollingHOnly();
   \   0000002C   ........           LDR      R4,??DataTable207
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   680084E5           STR      R0,[R4, #+104]
   3880          
   3881          // Removed as this is redundent - GetClosestTracks will be called when the list wheel is displayed
   3882          //	GetClosestTracks(161);
   3883          //	CreateTrackList();
   3884          
   3885          	if ((hDisplayClosestTracks = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, RaceSetupScreensCallback, 0)) <= 0)
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   08008DE5           STR      R0,[SP, #+8]
   \   00000040   ........           LDR      R0,??DataTable207_10
   \   00000044   443FA0E3           MOV      R3,#+272
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0200A0E3           MOV      R0,#+2
   \   00000050   800D80E3           ORR      R0,R0,#0x2000
   \   00000054   00008DE5           STR      R0,[SP, #+0]
   \   00000058   782FA0E3           MOV      R2,#+480
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   ........           BL       WM_CreateWindow
   \   00000068   A80084E5           STR      R0,[R4, #+168]
   \   0000006C   010050E3           CMP      R0,#+1
   \   00000070   000000AA           BGE      ??DisplayClosestTracks_1
   3886          		SystemError();
   \   00000074   ........           BL       SystemError
   3887          
   3888          // KMC 6/6/12 - if displaying closest tracks on GoRacing want to display CLOSEST first, not currently selected
   3889          //	SetWorkingTrackName();
   3890          	ClearWorkingTrackName();
   \                     ??DisplayClosestTracks_1:
   \   00000078   ........           BL       ClearWorkingTrackName
   3891          
   3892          	DisplayTrackSelection(hDisplayClosestTracks);
   \   0000007C   A80094E5           LDR      R0,[R4, #+168]
   \   00000080   ........           BL       DisplayTrackSelection
   3893          
   3894          	hScreenTimer = WM_CreateTimer(hDisplayClosestTracks, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   00000084   0030A0E3           MOV      R3,#+0
   \   00000088   7D20A0E3           MOV      R2,#+125
   \   0000008C   0010A0E3           MOV      R1,#+0
   \   00000090   A80094E5           LDR      R0,[R4, #+168]
   \   00000094   ........           BL       WM_CreateTimer
   \   00000098   700084E5           STR      R0,[R4, #+112]
   3895          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   0000009C   10D08DE2           ADD      SP,SP,#+16
   \   000000A0   1040BDE8           POP      {R4,LR}
   \   000000A4   ........           B        ResetNewScreen   ;; tailcall
   3896          }
   3897          
   3898          
   3899          //
   3900          // Configure the unit for the selected race mode
   3901          //

   \                                 In section .text, align 4, keep-with-next
   3902          void ProceedToRaceMode(enum GUI_RACE_MODES mode, WM_HWIN hParent)
   3903          {
   \                     ProceedToRaceMode:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   3904          	int screen;
   3905          
   3906          	unsavedSysData.recordingTimedout = FALSE;	// Be sure recording mode is off (it should be already but be sure)
   \   00000008   ........           LDR      R6,??DataTable207_1
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   D400C6E5           STRB     R0,[R6, #+212]
   3907          
   3908          #ifdef	INCLUDE_RACE_HELP
   3909          	StartRaceHelpScreenTimer();
   3910          #endif
   3911          
   3912          #ifdef _WINDOWS
   3913          	SimStartSession();
   3914          #else
   3915          	if (demoMode)
   \   00000014   ........           LDR      R0,??DataTable207_11
   \   00000018   0140A0E1           MOV      R4,R1
   \   0000001C   000090E5           LDR      R0,[R0, #+0]
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   0000000A           BEQ      ??ProceedToRaceMode_0
   3916          		SimStartSession();
   \   00000028   ........           BL       SimStartSession
   3917          #endif
   3918          
   3919          	switch (mode)
   \                     ??ProceedToRaceMode_0:
   \   0000002C   0500B0E1           MOVS     R0,R5
   \   00000030   0400000A           BEQ      ??ProceedToRaceMode_1
   \   00000034   020055E2           SUBS     R0,R5,#+2
   \   00000038   0400000A           BEQ      ??ProceedToRaceMode_2
   \   0000003C   010050E2           SUBS     R0,R0,#+1
   \   00000040   0400000A           BEQ      ??ProceedToRaceMode_3
   \   00000044   080000EA           B        ??ProceedToRaceMode_4
   3920          	{
   3921          	case ROADRACE_MODE:		
   3922          		SetUserMode(DU2_LAPS_WAITSTART);	
   \                     ??ProceedToRaceMode_1:
   \   00000048   0900A0E3           MOV      R0,#+9
   \   0000004C   020000EA           B        ??ProceedToRaceMode_5
   3923          		break;
   3924          	case INSTRUMENTS_MODE:	
   3925          		SetUserMode(DU2_INSTRUMENT);		
   \                     ??ProceedToRaceMode_2:
   \   00000050   1600A0E3           MOV      R0,#+22
   \   00000054   000000EA           B        ??ProceedToRaceMode_5
   3926          		break;
   3927          	case DRIVE_MODE:		
   3928          		SetUserMode(DU2_DRIVE);				
   \                     ??ProceedToRaceMode_3:
   \   00000058   0F00A0E3           MOV      R0,#+15
   \                     ??ProceedToRaceMode_5:
   \   0000005C   ........           LDR      R1,??DataTable202_1
   \   00000060   8800C6E5           STRB     R0,[R6, #+136]
   \   00000064   B100C1E5           STRB     R0,[R1, #+177]
   \   00000068   ........           BL       notifyModeChange
   3929          		break;
   3930          
   3931          	case DRAG_MODE:
   3932          	case AUTOXRALLY_MODE:
   3933          	case NO_CHANGE_MODE:
   3934          		break;
   3935          	}
   3936          	raceModeState = RM_RACING;
   \                     ??ProceedToRaceMode_4:
   \   0000006C   ........           LDR      R0,??DataTable207
   \   00000070   0B10A0E3           MOV      R1,#+11
   \   00000074   C510C0E5           STRB     R1,[R0, #+197]
   3937          
   3938          	ResumeScreenScrolling();
   \   00000078   0110A0E3           MOV      R1,#+1
   \   0000007C   681080E5           STR      R1,[R0, #+104]
   3939          	if (mode == DRIVE_MODE)
   \   00000080   030055E3           CMP      R5,#+3
   \   00000084   0F00001A           BNE      ??ProceedToRaceMode_6
   3940          	{
   3941          		screen = GetLastScreen(DRIVE_MODE_SCREEN_TYPE);
   \   00000088   0300A0E3           MOV      R0,#+3
   \   0000008C   ........           BL       GetLastScreen
   \   00000090   0050A0E1           MOV      R5,R0
   3942          		sysData.screentype = DRIVE_MODE_SCREEN_TYPE;
   \   00000094   ........           LDR      R0,??DataTable202_1
   \   00000098   0310A0E3           MOV      R1,#+3
   3943          		if (screen == -1)
   \   0000009C   010075E3           CMN      R5,#+1
   \   000000A0   1410C0E5           STRB     R1,[R0, #+20]
   3944          			screen = DEFAULT_DRIVE_MODE_SCREEN_INDEX;	// Default screen INDEX (not ID) for this mode - Drive Screen
   \   000000A4   0250A003           MOVEQ    R5,#+2
   \   000000A8   2E00000A           BEQ      ??ProceedToRaceMode_7
   3945          		else while (InactiveGaugeScreen(screen))		// Be sure we don't start out on an inactive screen
   \                     ??ProceedToRaceMode_8:
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   ........           BL       InactiveGaugeScreen
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   2A00000A           BEQ      ??ProceedToRaceMode_7
   3946          			screen = GetNextGaugeScreen();
   \   000000BC   ........           BL       GetNextGaugeScreen
   \   000000C0   0050A0E1           MOV      R5,R0
   \   000000C4   F8FFFFEA           B        ??ProceedToRaceMode_8
   3947          	}
   3948          	else if (mode == INSTRUMENTS_MODE)
   \                     ??ProceedToRaceMode_6:
   \   000000C8   020055E3           CMP      R5,#+2
   \   000000CC   1000001A           BNE      ??ProceedToRaceMode_9
   3949          	{
   3950          		screen = GetLastScreen(INSTRUMENTS_MODE_SCREEN_TYPE);
   \   000000D0   0400A0E3           MOV      R0,#+4
   \   000000D4   ........           BL       GetLastScreen
   \   000000D8   0050A0E1           MOV      R5,R0
   3951          		sysData.screentype = INSTRUMENTS_MODE_SCREEN_TYPE;
   \   000000DC   ........           LDR      R0,??DataTable202_1
   \   000000E0   0410A0E3           MOV      R1,#+4
   \   000000E4   1410C0E5           STRB     R1,[R0, #+20]
   3952          		if (screen == -1)
   \   000000E8   010075E3           CMN      R5,#+1
   \   000000EC   0100001A           BNE      ??ProceedToRaceMode_10
   3953          			screen = DEFAULT_INSTRUMENTS_MODE_SCREEN_INDEX;	// Default screen INDEX (not ID) for this mode
   \                     ??ProceedToRaceMode_11:
   \   000000F0   0150A0E3           MOV      R5,#+1
   \   000000F4   1B0000EA           B        ??ProceedToRaceMode_7
   3954          		else while (InactiveGaugeScreen(screen))			// Be sure we don't start out on an inactive screen
   \                     ??ProceedToRaceMode_10:
   \   000000F8   0500A0E1           MOV      R0,R5
   \   000000FC   ........           BL       InactiveGaugeScreen
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   1700000A           BEQ      ??ProceedToRaceMode_7
   3955          			screen = GetNextGaugeScreen();
   \   00000108   ........           BL       GetNextGaugeScreen
   \   0000010C   0050A0E1           MOV      R5,R0
   \   00000110   F8FFFFEA           B        ??ProceedToRaceMode_10
   3956          	}
   3957          	else if ((mode == AUTOXRALLY_MODE) || (mode == DRAG_MODE))
   \                     ??ProceedToRaceMode_9:
   \   00000114   010055E3           CMP      R5,#+1
   \   00000118   04005513           CMPNE    R5,#+4
   \   0000011C   0200001A           BNE      ??ProceedToRaceMode_12
   3958          	{
   3959          		DragAutoXGauges(hParent);
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       DragAutoXGauges
   3960          		WriteDataStructures(SYSTEM_DATA);				// Save sysData once when entering race mode
   \   00000128   110000EA           B        ??ProceedToRaceMode_13
   3961          		return;
   3962          	}
   3963          	else
   3964          	{
   3965          		screen = GetLastScreen(GAUGES_SCREEN_TYPE);
   \                     ??ProceedToRaceMode_12:
   \   0000012C   0200A0E3           MOV      R0,#+2
   \   00000130   ........           BL       GetLastScreen
   \   00000134   0050A0E1           MOV      R5,R0
   3966          		sysData.screentype = GAUGES_SCREEN_TYPE;
   \   00000138   ........           LDR      R0,??DataTable202_1
   \   0000013C   0210A0E3           MOV      R1,#+2
   \   00000140   1410C0E5           STRB     R1,[R0, #+20]
   3967          		if (screen == -1)
   \   00000144   010075E3           CMN      R5,#+1
   \   00000148   0200001A           BNE      ??ProceedToRaceMode_14
   \   0000014C   E7FFFFEA           B        ??ProceedToRaceMode_11
   3968          			screen = DEFAULT_RACE_MODE_SCREEN_INDEX;	// Default screen INDEX (not ID) for this mode
   3969          		else while (InactiveGaugeScreen(screen))		// Be sure we don't start out on an inactive screen
   3970          			screen = GetNextGaugeScreen();
   \                     ??ProceedToRaceMode_15:
   \   00000150   ........           BL       GetNextGaugeScreen
   \   00000154   0050A0E1           MOV      R5,R0
   \                     ??ProceedToRaceMode_14:
   \   00000158   0500A0E1           MOV      R0,R5
   \   0000015C   ........           BL       InactiveGaugeScreen
   \   00000160   000050E3           CMP      R0,#+0
   \   00000164   F9FFFF1A           BNE      ??ProceedToRaceMode_15
   3971          	}
   3972          
   3973          	RunningGauges(screen, hParent);
   \                     ??ProceedToRaceMode_7:
   \   00000168   0410A0E1           MOV      R1,R4
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   ........           BL       RunningGauges
   3974          	WriteDataStructures(SYSTEM_DATA);					// Save sysData once when entering race mode
   \                     ??ProceedToRaceMode_13:
   \   00000174   7040BDE8           POP      {R4-R6,LR}
   \   00000178   0000A0E3           MOV      R0,#+0
   \   0000017C   ........           B        WriteDataStructures  ;; tailcall
   3975          }
   3976          
   3977          

   \                                 In section .text, align 4, keep-with-next
   3978          int StartupGoToRaceMode(void)
   3979          {
   \                     StartupGoToRaceMode:
   \   00000000   00402DE9           PUSH     {LR}
   3980          	if (sysData.autoRecord)
   \   00000004   ........           LDR      R0,??DataTable202_1
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   7D10D0E5           LDRB     R1,[R0, #+125]
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   1000000A           BEQ      ??StartupGoToRaceMode_0
   3981          	{
   3982          		if (GetScreenType() == GAUGES_SCREEN_TYPE)
   \   00000018   1410D0E5           LDRB     R1,[R0, #+20]
   \   0000001C   020051E3           CMP      R1,#+2
   \   00000020   0700001A           BNE      ??StartupGoToRaceMode_1
   3983          			selectedRaceMode = ROADRACE_MODE;
   \   00000024   0000A0E3           MOV      R0,#+0
   \                     ??StartupGoToRaceMode_2:
   \   00000028   ........           LDR      R1,??DataTable207
   \   0000002C   C600C1E5           STRB     R0,[R1, #+198]
   3984          		else if (GetScreenType() == INSTRUMENTS_MODE_SCREEN_TYPE)
   3985          			selectedRaceMode = INSTRUMENTS_MODE;
   3986          		else if (GetScreenType() == DRIVE_MODE_SCREEN_TYPE)
   3987          			selectedRaceMode = DRIVE_MODE;
   3988          		else
   3989          		{
   3990          			SetUserMode(DU2_IDLE);
   3991          			return false;
   3992          		}
   3993          		GoRacingStateMachine((WM_HWIN)NULL);
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   ........           BL       GoRacingStateMachine
   3994          		return true;
   \   00000038   0100A0E3           MOV      R0,#+1
   \                     ??StartupGoToRaceMode_3:
   \   0000003C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000040   0080BDE8           POP      {PC}             ;; return
   \                     ??StartupGoToRaceMode_1:
   \   00000044   040051E3           CMP      R1,#+4
   \   00000048   0200A003           MOVEQ    R0,#+2
   \   0000004C   F5FFFF0A           BEQ      ??StartupGoToRaceMode_2
   \   00000050   030051E3           CMP      R1,#+3
   \   00000054   0300A003           MOVEQ    R0,#+3
   \   00000058   F2FFFF0A           BEQ      ??StartupGoToRaceMode_2
   \                     ??StartupGoToRaceMode_0:
   \   0000005C   ........           LDR      R2,??DataTable207_1
   \   00000060   0110A0E3           MOV      R1,#+1
   \   00000064   8810C2E5           STRB     R1,[R2, #+136]
   \   00000068   B110C0E5           STRB     R1,[R0, #+177]
   \   0000006C   ........           BL       notifyModeChange
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   F0FFFFEA           B        ??StartupGoToRaceMode_3
   3995          	}
   3996          	else
   3997          	{
   3998          		SetUserMode(DU2_IDLE);					// Don't allow back to gauge screen
   3999          		return false;
   4000          	}
   4001          }
   4002          
   4003          #ifdef	INCLUDE_RACE_HELP
   4004          //
   4005          // StartRaceHelpScreenTimer
   4006          //		First check to see if we have already shown the race mode help overlay
   4007          //		the maximum number of times, RACE_HELP_COUNT
   4008          //		If not, then start timer and set flags for first 5 seconds of race to 
   4009          //		display help screen with Alpha blending
   4010          //
   4011          void StartRaceHelpScreenTimer(void)
   4012          {
   4013          	int temp;
   4014          
   4015          	// Check to see if we've displayed the race screens help overlay enough times
   4016          	temp = (sysData.multiSettings_2 & 0x000000F0) >> 4;
   4017          	if (temp < RACE_HELP_COUNT)
   4018          	{
   4019          		temp++;
   4020          		sysData.multiSettings_2 = (sysData.multiSettings_2 & 0xFFFFFF0F) | (temp << 4);
   4021          
   4022          		raceStartTime = GUI_GetTime();
   4023          		raceTimerActive = true;
   4024          	}
   4025          	else raceTimerActive = false;
   4026          }
   4027          
   4028          
   4029          //
   4030          // Check the help screen timer - if still active display the help screen for this race screen
   4031          // otherwise restore alpha mode to normal, clear flag and return.
   4032          //
   4033          void CheckRaceHelpScreen(int screenID)
   4034          {
   4035          	if (GUI_GetTime() < raceStartTime + FIVE_SECONDS)
   4036          	{
   4037          		GUI_EnableAlpha(1);
   4038          		GUI_SetColor(0x38000000 | GUI_BLACK);
   4039          		GUI_DrawBitmap(&bmGenericGaugeHelp, 0, 0);
   4040          
   4041          		//GUI_FillRect(0, 0, XSIZE_PHYS, YSIZE_PHYS);
   4042          		//GUI_SetColor(GUI_BLACK);
   4043          
   4044          		//switch (screenID)
   4045          		//{
   4046          		//case RPM_SWEEP_GAUGE:
   4047          		////	GUI_DrawBitmap(&bmSystemStatusScreenHelpBlackBack, 0, 0);
   4048          		//	break;
   4049          		//case ANALOG_GAUGE:
   4050          		//default:
   4051          		//	GUI_DrawBitmap(&bmGenericGaugeHelp, 0, 0);
   4052          		//}
   4053          	}
   4054          	else
   4055          	{
   4056          		GUI_EnableAlpha(0);
   4057          		raceTimerActive = false;
   4058          
   4059          		//if (screenID == DRIVE_MODE_SCREEN)	// If ending the help period and this is the Drive Mode screen (compass screen)
   4060          		//	GUI_Clear();					// Must remove help text as not all of the screen is redrawn
   4061          	}
   4062          }
   4063          #endif
   4064          

   \                                 In section .text, align 4, keep-with-next
   4065          char *GetSystemStatsHelpText(const char *pText)
   4066          {
   \                     GetSystemStatsHelpText:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   4067          	static char mainHelp[sizeof(MAIN_SCREEN_INFO) + 550];		// yes you really need that much extra space!
   4068          	char buffer[100];
   4069          	int i;
   4070          
   4071          //	SYSTEM STATUS
   4072          //  Owner: nnnn
   4073          //  Contact: Info ####
   4074          // blank line
   4075          //  Inputs Configuration:
   4076          // details...
   4077          // blank line
   4078          //	TraqDash Firmware x.xx
   4079          //	Sensor Unit Firmware y.yy
   4080          // blank line
   4081          //	DU Ser# ssssss, HW n.nn, Built mm/yy
   4082          //	SU Ser# ssssss, HW n.nn, Built mm/yy
   4083          		
   4084          	strcpy(mainHelp, pText);
   \   00000004   ........           LDR      R4,??DataTable207_12
   \   00000008   0050A0E1           MOV      R5,R0
   \   0000000C   74D04DE2           SUB      SP,SP,#+116
   \   00000010   0510A0E1           MOV      R1,R5
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       strcpy
   4085          	sprintf(mainHelp + strlen(pText), "\n\nSYSTEM STATUS\nOwner: %s\nContact Info: %s\n\n",
   4086          		unsavedSysData.unitInfo.owner, unsavedSysData.unitInfo.phone);
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       strlen
   \   00000024   ........           LDR      R5,??DataTable207_1
   \   00000028   ............       ADRL     R1,`?<Constant "\\n\\nSYSTEM STATUS\\nOwner...">`
   \              ....        
   \   00000030   1C3085E2           ADD      R3,R5,#+28
   \   00000034   082085E2           ADD      R2,R5,#+8
   \   00000038   040080E0           ADD      R0,R0,R4
   \   0000003C   ........           BL       sprintf
   4087          
   4088          	strcat(mainHelp, "Inputs Configuration:\n");
   \   00000040   ............       ADRL     R1,`?<Constant "Inputs Configuration:\\n">`
   \              ....        
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       strcat
   4089          	strcat(mainHelp, GetFullCameraText(buffer));
   \   00000050   10008DE2           ADD      R0,SP,#+16
   \   00000054   ........           BL       GetFullCameraText
   \   00000058   0010A0E1           MOV      R1,R0
   \   0000005C   0400A0E1           MOV      R0,R4
   \   00000060   ........           BL       strcat
   4090          
   4091          	for (i = 0; i < 4; i++)
   \   00000064   ........           LDR      R6,??DataTable207_13
   \   00000068   0080A0E3           MOV      R8,#+0
   \   0000006C   0690A0E1           MOV      R9,R6
   \   00000070   ........           ADR      R7,??DataTable202_2  ;; "\n"
   \   00000074   ............       ADRL     R10,`?<Constant "Disabled">`
   \              ....        
   \   0000007C   ............       ADRL     R11,`?<Constant "Analog Input %d: ">`
   \              ....        
   4092          	{
   4093          		strcat(mainHelp, GetAnalogInputText(i, buffer));
   \                     ??GetSystemStatsHelpText_0:
   \   00000084   0820A0E1           MOV      R2,R8
   \   00000088   0B10A0E1           MOV      R1,R11
   \   0000008C   10008DE2           ADD      R0,SP,#+16
   \   00000090   ........           BL       sprintf
   \   00000094   9300D9E5           LDRB     R0,[R9, #+147]
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   78108912           ADDNE    R1,R9,#+120
   \   000000A0   0A10A001           MOVEQ    R1,R10
   \   000000A4   10008DE2           ADD      R0,SP,#+16
   \   000000A8   ........           BL       strcat
   \   000000AC   0710A0E1           MOV      R1,R7
   \   000000B0   10008DE2           ADD      R0,SP,#+16
   \   000000B4   ........           BL       strcat
   4094          	}
   \   000000B8   10108DE2           ADD      R1,SP,#+16
   \   000000BC   0400A0E1           MOV      R0,R4
   \   000000C0   ........           BL       strcat
   \   000000C4   018088E2           ADD      R8,R8,#+1
   \   000000C8   409089E2           ADD      R9,R9,#+64
   \   000000CC   040058E3           CMP      R8,#+4
   \   000000D0   EBFFFFBA           BLT      ??GetSystemStatsHelpText_0
   4095          
   4096          	strcat(mainHelp, GetDigitalInputText(0, buffer));
   \   000000D4   ............       ADRL     R8,`?<Constant "Digital Input %d: ">`
   \              ....        
   \   000000DC   0420A0E3           MOV      R2,#+4
   \   000000E0   0810A0E1           MOV      R1,R8
   \   000000E4   10008DE2           ADD      R0,SP,#+16
   \   000000E8   ........           BL       sprintf
   \   000000EC   A301D6E5           LDRB     R0,[R6, #+419]
   \   000000F0   000050E3           CMP      R0,#+0
   \   000000F4   5E1F8612           ADDNE    R1,R6,#+376
   \   000000F8   0A10A001           MOVEQ    R1,R10
   \   000000FC   10008DE2           ADD      R0,SP,#+16
   \   00000100   ........           BL       strcat
   \   00000104   0710A0E1           MOV      R1,R7
   \   00000108   10008DE2           ADD      R0,SP,#+16
   \   0000010C   ........           BL       strcat
   \   00000110   10108DE2           ADD      R1,SP,#+16
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   ........           BL       strcat
   4097          	strcat(mainHelp, GetDigitalInputText(1, buffer));
   \   0000011C   0520A0E3           MOV      R2,#+5
   \   00000120   0810A0E1           MOV      R1,R8
   \   00000124   10008DE2           ADD      R0,SP,#+16
   \   00000128   ........           BL       sprintf
   \   0000012C   D201D6E5           LDRB     R0,[R6, #+466]
   \   00000130   000050E3           CMP      R0,#+0
   \   00000134   0300000A           BEQ      ??GetSystemStatsHelpText_1
   \   00000138   A700A0E3           MOV      R0,#+167
   \   0000013C   400F80E3           ORR      R0,R0,#0x100
   \   00000140   061080E0           ADD      R1,R0,R6
   \   00000144   000000EA           B        ??GetSystemStatsHelpText_2
   \                     ??GetSystemStatsHelpText_1:
   \   00000148   0A10A0E1           MOV      R1,R10
   \                     ??GetSystemStatsHelpText_2:
   \   0000014C   10008DE2           ADD      R0,SP,#+16
   \   00000150   ........           BL       strcat
   \   00000154   0710A0E1           MOV      R1,R7
   \   00000158   10008DE2           ADD      R0,SP,#+16
   \   0000015C   ........           BL       strcat
   \   00000160   10108DE2           ADD      R1,SP,#+16
   \   00000164   0400A0E1           MOV      R0,R4
   \   00000168   ........           BL       strcat
   4098          
   4099          #ifndef _WINDOWS
   4100          	if (MAX_PAGE_64EMBIT == unsavedSysData.dataflash[0].bytesPerPage)
   \   0000016C   B208D5E1           LDRH     R0,[R5, #+130]
   \   00000170   420F50E3           CMP      R0,#+264
   \   00000174   0400A0E1           MOV      R0,R4
   \   00000178   0300001A           BNE      ??GetSystemStatsHelpText_3
   4101          		sprintf(mainHelp + strlen(mainHelp),"\nAdesto Dataflash");
   \   0000017C   ........           BL       strlen
   \   00000180   ............       ADRL     R1,`?<Constant "\\nAdesto Dataflash">`
   \              ....        
   \   00000188   020000EA           B        ??GetSystemStatsHelpText_4
   4102          	else
   4103          		sprintf(mainHelp + strlen(mainHelp),"\nAtmel Dataflash");
   \                     ??GetSystemStatsHelpText_3:
   \   0000018C   ........           BL       strlen
   \   00000190   ............       ADRL     R1,`?<Constant "\\nAtmel Dataflash">`
   \              ....        
   \                     ??GetSystemStatsHelpText_4:
   \   00000198   040080E0           ADD      R0,R0,R4
   \   0000019C   ........           BL       sprintf
   4104          #endif
   4105          
   4106          	sprintf(mainHelp + strlen(mainHelp),"\nTraqDash Bootloader %2.2f",
   4107          		((float) unsavedSysData.unitInfo.bootloaderSwRev / 100.0));
   \   000001A0   0400A0E1           MOV      R0,R4
   \   000001A4   ........           BL       strlen
   \   000001A8   0060A0E1           MOV      R6,R0
   \   000001AC   6C0095E5           LDR      R0,[R5, #+108]
   \   000001B0   ........           BL       __aeabi_ui2f
   \   000001B4   ........           BL       __aeabi_f2d
   \   000001B8   4034A0E3           MOV      R3,#+1073741824
   \   000001BC   0020A0E3           MOV      R2,#+0
   \   000001C0   593883E3           ORR      R3,R3,#0x590000
   \   000001C4   ........           BL       __aeabi_ddiv
   \   000001C8   0020A0E1           MOV      R2,R0
   \   000001CC   0130A0E1           MOV      R3,R1
   \   000001D0   ............       ADRL     R1,`?<Constant "\\nTraqDash Bootloader ...">`
   \              ....        
   \   000001D8   040086E0           ADD      R0,R6,R4
   \   000001DC   ........           BL       sprintf
   4108          		
   4109          	sprintf(mainHelp + strlen(mainHelp),"\nTraqDash Firmware %2.2f\nSensor Unit Firmware %2.2f",
   4110          		((float) unsavedSysData.duSwRev / 100.0), ((float) suData.suSwRev / 100.0));
   \   000001E0   0400A0E1           MOV      R0,R4
   \   000001E4   ........           BL       strlen
   \   000001E8   ........           LDR      R6,??DataTable207_14
   \   000001EC   0070A0E1           MOV      R7,R0
   \   000001F0   B001D6E1           LDRH     R0,[R6, #+16]
   \   000001F4   ........           BL       __aeabi_ui2f
   \   000001F8   ........           BL       __aeabi_f2d
   \   000001FC   4034A0E3           MOV      R3,#+1073741824
   \   00000200   0020A0E3           MOV      R2,#+0
   \   00000204   593883E3           ORR      R3,R3,#0x590000
   \   00000208   ........           BL       __aeabi_ddiv
   \   0000020C   03008DE8           STM      SP,{R0,R1}
   \   00000210   B000D5E1           LDRH     R0,[R5, #+0]
   \   00000214   ........           BL       __aeabi_ui2f
   \   00000218   ........           BL       __aeabi_f2d
   \   0000021C   4034A0E3           MOV      R3,#+1073741824
   \   00000220   0020A0E3           MOV      R2,#+0
   \   00000224   593883E3           ORR      R3,R3,#0x590000
   \   00000228   ........           BL       __aeabi_ddiv
   \   0000022C   0020A0E1           MOV      R2,R0
   \   00000230   0130A0E1           MOV      R3,R1
   \   00000234   ............       ADRL     R1,`?<Constant "\\nTraqDash Firmware %2...">`
   \              ....        
   \   0000023C   040087E0           ADD      R0,R7,R4
   \   00000240   ........           BL       sprintf
   4111          	
   4112          	sprintf(mainHelp + strlen(mainHelp),"\n\nDU Ser# %u, HW %2.2f, Built %02d/%02d\n",
   4113          		unsavedSysData.unitInfo.serno, ((float) unsavedSysData.duHwRev / 100.0),
   4114          		(int) (1.0+(((float)(unsavedSysData.unitInfo.week-1)/4.3))), unsavedSysData.unitInfo.year);
   \   00000244   0400A0E1           MOV      R0,R4
   \   00000248   ........           BL       strlen
   \   0000024C   0070A0E1           MOV      R7,R0
   \   00000250   680095E5           LDR      R0,[R5, #+104]
   \   00000254   0C008DE5           STR      R0,[SP, #+12]
   \   00000258   640095E5           LDR      R0,[R5, #+100]
   \   0000025C   010040E2           SUB      R0,R0,#+1
   \   00000260   ........           BL       __aeabi_ui2f
   \   00000264   ........           BL       __aeabi_f2d
   \   00000268   ........           ADR      R2,??DataTable206_1
   \   0000026C   0C0092E8           LDM      R2,{R2,R3}
   \   00000270   ........           BL       __aeabi_ddiv
   \   00000274   C035A0E3           MOV      R3,#+805306368
   \   00000278   0020A0E3           MOV      R2,#+0
   \   0000027C   FF3683E3           ORR      R3,R3,#0xFF00000
   \   00000280   ........           BL       __aeabi_dadd
   \   00000284   ........           BL       __aeabi_d2iz
   \   00000288   08008DE5           STR      R0,[SP, #+8]
   \   0000028C   0400D5E5           LDRB     R0,[R5, #+4]
   \   00000290   ........           BL       __aeabi_ui2f
   \   00000294   ........           BL       __aeabi_f2d
   \   00000298   4034A0E3           MOV      R3,#+1073741824
   \   0000029C   0020A0E3           MOV      R2,#+0
   \   000002A0   593883E3           ORR      R3,R3,#0x590000
   \   000002A4   ........           BL       __aeabi_ddiv
   \   000002A8   03008DE8           STM      SP,{R0,R1}
   \   000002AC   602095E5           LDR      R2,[R5, #+96]
   \   000002B0   ............       ADRL     R1,`?<Constant "\\n\\nDU Ser# %u, HW %2.2...">`
   \              ....        
   \   000002B8   040087E0           ADD      R0,R7,R4
   \   000002BC   ........           BL       sprintf
   4115          				
   4116          	sprintf(mainHelp + strlen(mainHelp),"SU Ser# %u, HW %2.2f, Built %02d/%02d",
   4117          		suData.serialNumber, ((float) suData.suHwRev / 100.0),
   4118          		(int) (1.0+(((float)(suData.buildDateWeek-1)/4.3))), (int) suData.buildDateYear);
   \   000002C0   0400A0E1           MOV      R0,R4
   \   000002C4   ........           BL       strlen
   \   000002C8   0050A0E1           MOV      R5,R0
   \   000002CC   1600D6E5           LDRB     R0,[R6, #+22]
   \   000002D0   0C008DE5           STR      R0,[SP, #+12]
   \   000002D4   1500D6E5           LDRB     R0,[R6, #+21]
   \   000002D8   010040E2           SUB      R0,R0,#+1
   \   000002DC   ........           BL       __aeabi_i2f
   \   000002E0   ........           BL       __aeabi_f2d
   \   000002E4   ........           ADR      R2,??DataTable206_1
   \   000002E8   0C0092E8           LDM      R2,{R2,R3}
   \   000002EC   ........           BL       __aeabi_ddiv
   \   000002F0   0130A0E1           MOV      R3,R1
   \   000002F4   0020A0E1           MOV      R2,R0
   \   000002F8   C015A0E3           MOV      R1,#+805306368
   \   000002FC   0000A0E3           MOV      R0,#+0
   \   00000300   FF1681E3           ORR      R1,R1,#0xFF00000
   \   00000304   ........           BL       __aeabi_dadd
   \   00000308   ........           BL       __aeabi_d2iz
   \   0000030C   08008DE5           STR      R0,[SP, #+8]
   \   00000310   1400D6E5           LDRB     R0,[R6, #+20]
   \   00000314   ........           BL       __aeabi_ui2f
   \   00000318   ........           BL       __aeabi_f2d
   \   0000031C   4034A0E3           MOV      R3,#+1073741824
   \   00000320   0020A0E3           MOV      R2,#+0
   \   00000324   593883E3           ORR      R3,R3,#0x590000
   \   00000328   ........           BL       __aeabi_ddiv
   \   0000032C   03008DE8           STM      SP,{R0,R1}
   \   00000330   182096E5           LDR      R2,[R6, #+24]
   \   00000334   ............       ADRL     R1,`?<Constant "SU Ser# %u, HW %2.2f,...">`
   \              ....        
   \   0000033C   040085E0           ADD      R0,R5,R4
   \   00000340   ........           BL       sprintf
   4119          	
   4120          	return mainHelp;
   \   00000344   0400A0E1           MOV      R0,R4
   \   00000348   74D08DE2           ADD      SP,SP,#+116
   \   0000034C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   4121          }

   \                                 In section .bss, align 4
   \                     ??mainHelp:
   \   00000000                      DS8 836
   4122          

   \                                 In section .text, align 4, keep-with-next
   4123          char *GetStorageStatsHelpText(const char *pText)
   4124          {
   \                     GetStorageStatsHelpText:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   4125          	static char storageHelp[sizeof(STORAGE_SETTINGS_INFO) + 200];
   4126          
   4127          #ifndef _WINDOWS
   4128          	char sizeunit = ' ';
   4129          #endif
   4130          
   4131          	strcpy(storageHelp, pText);
   \   00000004   ........           LDR      R4,??DataTable207
   \   00000008   0010A0E1           MOV      R1,R0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   2060A0E3           MOV      R6,#+32
   \   00000014   CC0084E2           ADD      R0,R4,#+204
   \   00000018   ........           BL       strcpy
   4132          
   4133          #ifndef _WINDOWS
   4134          	if (OkToUseSDCard()) {
   \   0000001C   ........           BL       OkToUseSDCard
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   2C00000A           BEQ      ??GetStorageStatsHelpText_0
   4135          		float freespace = (float)FS_GetVolumeFreeSpace("");
   \   00000028   ........           ADR      R0,??DataTable207_3  ;; ""
   \   0000002C   ........           BL       FS_GetVolumeFreeSpace
   \   00000030   ........           BL       __aeabi_ui2f
   4136          	
   4137          		if (freespace > ONE_GIG) {
   \   00000034   5013A0E3           MOV      R1,#+1073741825
   \   00000038   E81681E3           ORR      R1,R1,#0xE800000
   \   0000003C   ........           BL       __aeabi_cfrcmple
   \   00000040   0070A0E1           MOV      R7,R0
   \   00000044   0500008A           BHI      ??GetStorageStatsHelpText_1
   4138          			freespace /= ONE_GIG;
   \   00000048   C205A0E3           MOV      R0,#+813694976
   \   0000004C   0710A0E1           MOV      R1,R7
   \   00000050   ........           BL       __aeabi_fmul
   \   00000054   0070A0E1           MOV      R7,R0
   4139          			sizeunit = 'G';
   \   00000058   4760A0E3           MOV      R6,#+71
   \   0000005C   100000EA           B        ??GetStorageStatsHelpText_2
   4140          		}
   4141          		else if (freespace > ONE_MEG) {
   \                     ??GetStorageStatsHelpText_1:
   \   00000060   501641E2           SUB      R1,R1,#+83886080
   \   00000064   ........           BL       __aeabi_cfrcmple
   \   00000068   0500008A           BHI      ??GetStorageStatsHelpText_3
   4142          			freespace /= ONE_MEG;
   \   0000006C   D605A0E3           MOV      R0,#+897581056
   \   00000070   0710A0E1           MOV      R1,R7
   \   00000074   ........           BL       __aeabi_fmul
   \   00000078   0070A0E1           MOV      R7,R0
   4143          			sizeunit = 'M';
   \   0000007C   4D60A0E3           MOV      R6,#+77
   \   00000080   070000EA           B        ??GetStorageStatsHelpText_2
   4144          		}
   4145          		else if (freespace > ONE_K) {
   \                     ??GetStorageStatsHelpText_3:
   \   00000084   501641E2           SUB      R1,R1,#+83886080
   \   00000088   ........           BL       __aeabi_cfrcmple
   \   0000008C   0400008A           BHI      ??GetStorageStatsHelpText_2
   4146          			freespace /= ONE_K;
   \   00000090   EA05A0E3           MOV      R0,#+981467136
   \   00000094   0710A0E1           MOV      R1,R7
   \   00000098   ........           BL       __aeabi_fmul
   \   0000009C   0070A0E1           MOV      R7,R0
   4147          			sizeunit = 'K';
   \   000000A0   4B60A0E3           MOV      R6,#+75
   4148          		}
   4149          		
   4150          		sprintf(storageHelp + strlen(storageHelp), "\n\nSD Card Free Space %.3f %cBytes", freespace, sizeunit);
   \                     ??GetStorageStatsHelpText_2:
   \   000000A4   CC0084E2           ADD      R0,R4,#+204
   \   000000A8   ........           BL       strlen
   \   000000AC   0050A0E1           MOV      R5,R0
   \   000000B0   00608DE5           STR      R6,[SP, #+0]
   \   000000B4   0700A0E1           MOV      R0,R7
   \   000000B8   ........           BL       __aeabi_f2d
   \   000000BC   0020A0E1           MOV      R2,R0
   \   000000C0   0130A0E1           MOV      R3,R1
   \   000000C4   040085E0           ADD      R0,R5,R4
   \   000000C8   ............       ADRL     R1,`?<Constant "\\n\\nSD Card Free Space ...">`
   \              ....        
   \   000000D0   CC0080E2           ADD      R0,R0,#+204
   \   000000D4   ........           BL       sprintf
   \   000000D8   030000EA           B        ??GetStorageStatsHelpText_4
   4151          	} // if
   4152          	else strcat(storageHelp, "\n\nNo SD card present");
   \                     ??GetStorageStatsHelpText_0:
   \   000000DC   ............       ADRL     R1,`?<Constant "\\n\\nNo SD card present">`
   \              ....        
   \   000000E4   CC0084E2           ADD      R0,R4,#+204
   \   000000E8   ........           BL       strcat
   4153          #endif
   4154          	
   4155          	return storageHelp;
   \                     ??GetStorageStatsHelpText_4:
   \   000000EC   CC0084E2           ADD      R0,R4,#+204
   \   000000F0   04D08DE2           ADD      SP,SP,#+4
   \   000000F4   F080BDE8           POP      {R4-R7,PC}       ;; return
   4156          }

   \                                 In section .data, align 4
   \                     ConfigScreenList:
   \   00000000   00000000....       DC32 0, DisplayGoRacing, GoRacingPaint, 1, DisplayRaceSetup
   \              ............
   \              01000000....
   \              ....        
   \   00000014   ........0200       DC32 RaceSetupPaint, 2, DisplayReviewSessions, ReviewSessionsPaint, 3
   \              0000........
   \              ........0300
   \              0000        
   \   00000028   ............       DC32 DisplaySystemSettings, SystemSettingsPaint, -1, 0H, 0H
   \              ....FFFFFFFF
   \              000000000000
   \              0000        
   \                     slideoutXPos:
   \   0000003C   00000000           DC32 0
   \                     slideoutYPos:
   \   00000040   00000000           DC32 0
   \                     hSlideoutTimer:
   \   00000044   00000000           DC32 0
   \                     backKeyPressedTime:
   \   00000048   00000000           DC32 0
   \                     configKeyPressedTime:
   \   0000004C   00000000           DC32 0
   \                     slideoutStepSize:
   \   00000050   00000000           DC8 0, 0, 0, 0
   \                     slideoutStepTime:
   \   00000054   00000000           DC8 0, 0, 0, 0
   \                     hSlideout:
   \   00000058   00000000           DC32 0
   \                     hSUStatusSprite:
   \   0000005C   00000000           DC32 0
   \                     hCameraSprite:
   \   00000060   00000000           DC32 0
   \                     hSignalStrengthSprite:
   \   00000064   00000000           DC32 0
   \                     screen_scrolling:
   \   00000068   00000000           DC8 0, 0, 0, 0
   \                     pressingbutton_semaphore:
   \   0000006C   00000000           DC32 0
   \                     hScreenTimer:
   \   00000070   00000000           DC8 0, 0, 0, 0
   \                     selectedSessionUnsorted:
   \   00000074   00000000           DC8 0, 0, 0, 0
   \                     glbBlackoutFlag:
   \   00000078   00000000           DC32 0
   \                     numSessions:
   \   0000007C   00000000           DC8 0, 0, 0, 0
   \   00000080   00000000           DC32 0
   \   00000084   00000000           DC8 0, 0, 0, 0
   \   00000088   00000000           DC8 0, 0, 0, 0
   \   0000008C   00000000           DC8 0, 0, 0, 0
   \                     hBestTime:
   \   00000090   00000000           DC8 0, 0, 0, 0
   \                     hDetailsButton:
   \   00000094   00000000           DC8 0, 0, 0, 0
   \                     hDeleteButton:
   \   00000098   00000000           DC8 0, 0, 0, 0
   \                     hSelectedReviewMode:
   \   0000009C   00000000           DC8 0, 0, 0, 0
   \                     hRecordModeButton:
   \   000000A0   00000000           DC8 0, 0, 0, 0
   \                     hListView:
   \   000000A4   00000000           DC8 0, 0, 0, 0
   \                     hDisplayClosestTracks:
   \   000000A8   00000000           DC8 0, 0, 0, 0
   \                     hSavingDataDialog:
   \   000000AC   00000000           DC8 0, 0, 0, 0
   \                     selectedSessionSorted:
   \   000000B0   00000000           DC8 0, 0, 0, 0
   \   000000B4   00000000           DC8 0, 0, 0, 0
   \   000000B8   00000000           DC8 0, 0, 0, 0
   \                     pHelpText:
   \   000000BC   00000000           DC8 0, 0, 0, 0
   \                     pHelpTitle:
   \   000000C0   00000000           DC8 0, 0, 0, 0
   \                     slideoutState:
   \   000000C4   00                 DC8 0
   \                     raceModeState:
   \   000000C5   00                 DC8 0
   \                     selectedRaceMode:
   \   000000C6   00                 DC8 0
   \   000000C7   00                 DC8 0
   \   000000C8   00                 DC8 0
   \                     userAbort:
   \   000000C9   00                 DC8 0
   \                     reviewingSession:
   \   000000CA   00                 DC8 0
   \   000000CB   00                 DC8 0
   \   000000CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000000FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000010C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000011C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000012C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000013C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000014C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000015C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000016C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000017C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000018C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000019C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000001FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000020C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000021C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000022C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000023C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000024C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000025C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000026C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000027C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000028C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000029C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002EC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000002FC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000030C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000031C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000032C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000033C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000034C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000035C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000036C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000037C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000038C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   0000039C   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003AC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003BC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003CC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              00000000    
   \   000003DC   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              000000000000
   \              000000000000
   \              0000        
   4157          

   \                                 In section .text, align 4, keep-with-next
   4158          char *GetAnalogInputText(int index, char *pBuffer)
   4159          {
   \                     GetAnalogInputText:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   4160          	sprintf(pBuffer, "Analog Input %d: ", index);
   \   00000010   0420A0E1           MOV      R2,R4
   \   00000014   ............       ADRL     R1,`?<Constant "Analog Input %d: ">`
   \              ....        
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       sprintf
   4161          	if (vehicleData.analogInput[index].enabled)
   \   00000024   ........           LDR      R0,??DataTable207_13
   \   00000028   040380E0           ADD      R0,R0,R4, LSL #+6
   \   0000002C   9310D0E5           LDRB     R1,[R0, #+147]
   \   00000030   000051E3           CMP      R1,#+0
   4162          		strcat(pBuffer, vehicleData.analogInput[index].Name);
   \   00000034   78108012           ADDNE    R1,R0,#+120
   4163          	else strcat(pBuffer, "Disabled");
   \   00000038   ............       ADRLEQ   R1,`?<Constant "Disabled">`
   \              ....        
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       strcat
   4164          	strcat(pBuffer, "\n");
   \   00000048   ........           ADR      R1,??DataTable207_7  ;; "\n"
   \   0000004C   0500A0E1           MOV      R0,R5
   \   00000050   ........           BL       strcat
   4165          
   4166          	return pBuffer;
   \   00000054   0500A0E1           MOV      R0,R5
   \   00000058   04D08DE2           ADD      SP,SP,#+4
   \   0000005C   3080BDE8           POP      {R4,R5,PC}       ;; return
   4167          }
   4168          

   \                                 In section .text, align 4, keep-with-next
   4169          char *GetDigitalInputText(int index, char *pBuffer)
   4170          {
   \                     GetDigitalInputText:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   4171          	sprintf(pBuffer, "Digital Input %d: ", index + 4);
   \   00000010   042084E2           ADD      R2,R4,#+4
   \   00000014   ............       ADRL     R1,`?<Constant "Digital Input %d: ">`
   \              ....        
   \   0000001C   0500A0E1           MOV      R0,R5
   \   00000020   ........           BL       sprintf
   4172          	if (vehicleData.digitalInput[index].enabled)
   \   00000024   2F10A0E3           MOV      R1,#+47
   \   00000028   ........           LDR      R0,??DataTable207_13
   \   0000002C   910420E0           MLA      R0,R1,R4,R0
   \   00000030   A311D0E5           LDRB     R1,[R0, #+419]
   \   00000034   000051E3           CMP      R1,#+0
   4173          		strcat(pBuffer, vehicleData.digitalInput[index].Name);
   \   00000038   5E1F8012           ADDNE    R1,R0,#+376
   4174          	else strcat(pBuffer, "Disabled");
   \   0000003C   ............       ADRLEQ   R1,`?<Constant "Disabled">`
   \              ....        
   \   00000044   0500A0E1           MOV      R0,R5
   \   00000048   ........           BL       strcat
   4175          	strcat(pBuffer, "\n");
   \   0000004C   ........           ADR      R1,??DataTable207_7  ;; "\n"
   \   00000050   0500A0E1           MOV      R0,R5
   \   00000054   ........           BL       strcat
   4176          
   4177          	return pBuffer;
   \   00000058   0500A0E1           MOV      R0,R5
   \   0000005C   04D08DE2           ADD      SP,SP,#+4
   \   00000060   3080BDE8           POP      {R4,R5,PC}       ;; return
   4178          }
   4179          

   \                                 In section .text, align 4, keep-with-next
   4180          static const GUI_WIDGET_CREATE_INFO NotSupportedResources[] = {
   \                     NotSupportedResources:
   \   00000000                      ; Initializer data, 96 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "ERROR">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "This function is not ...">`
   \              ............
   \   00000020   000000001900       DC16 0, 0, 25, 360, 30, 2
   \              68011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "without an SD card in...">`
   \              ....        
   \   00000038   000000004100       DC16 0, 0, 65, 360, 30, 2
   \              68011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000050   010082007300       DC16 1, 130, 115, 100, 60
   \              64003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   4181          	{ FRAMEWIN_CreateIndirect, "ERROR", 0, 50, 20, 360, 220, 0, 0 },
   4182          	{ TEXT_CreateIndirect, "This function is not supported", 0, 0, 25, 360, 30, TEXT_CF_HCENTER },
   4183          	{ TEXT_CreateIndirect, "without an SD card inserted!", 0, 0, 65, 360, 30, TEXT_CF_HCENTER },
   4184          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK, 130, 115, 100, 60 }
   4185          };
   4186          

   \                                 In section .text, align 4, keep-with-next
   4187          int NotSupportedPopup(WM_HWIN owner)
   4188          {
   \                     NotSupportedPopup:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   4189          	int retval;
   4190          
   4191          	SetPopupDefaults(ERROR_POPUP);
   \   0000000C   0200A0E3           MOV      R0,#+2
   \   00000010   ........           BL       SetPopupDefaults
   4192          
   4193          	retval = false;
   4194          	modalWindowUp = true;
   \   00000014   ........           LDR      R5,??DataTable207_15
   \   00000018   0100A0E3           MOV      R0,#+1
   \   0000001C   000085E5           STR      R0,[R5, #+0]
   4195          
   4196          	retval = GUI_ExecDialogBox(NotSupportedResources, GUI_COUNTOF(NotSupportedResources), &nonModalPopupCallback, owner, 10, 10);
   \   00000020   0A00A0E3           MOV      R0,#+10
   \   00000024   04008DE5           STR      R0,[SP, #+4]
   \   00000028   00008DE5           STR      R0,[SP, #+0]
   \   0000002C   0430A0E1           MOV      R3,R4
   \   00000030   ........           LDR      R2,??DataTable207_16
   \   00000034   0410A0E3           MOV      R1,#+4
   \   00000038   ............       ADRL     R0,NotSupportedResources
   \              ....        
   \   00000040   ........           BL       GUI_ExecDialogBox
   4197          	
   4198          	modalWindowUp = false;
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   001085E5           STR      R1,[R5, #+0]
   4199          
   4200          	return retval;
   \   0000004C   0CD08DE2           ADD      SP,SP,#+12
   \   00000050   3080BDE8           POP      {R4,R5,PC}       ;; return
   4201          }
   4202          
   4203          //
   4204          // Returns true if this is any race screen of any type
   4205          //

   \                                 In section .text, align 4, keep-with-next
   4206          char AnyGaugeScreen(enum SCREEN_TYPE type)
   4207          {
   4208          	if ((type == GAUGES_SCREEN_TYPE) || (type == DRIVE_MODE_SCREEN_TYPE) || (type == INSTRUMENTS_MODE_SCREEN_TYPE) || (type == DRAG_AUTOX_GAUGE_SCREEN_TYPE))
   \                     AnyGaugeScreen:
   \   00000000   020050E3           CMP      R0,#+2
   \   00000004   03005013           CMPNE    R0,#+3
   \   00000008   04005013           CMPNE    R0,#+4
   \   0000000C   1F005013           CMPNE    R0,#+31
   \   00000010   0100001A           BNE      ??AnyGaugeScreen_0
   4209          		return true;
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1EFF2FE1           BX       LR
   4210          	else return false;
   \                     ??AnyGaugeScreen_0:
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   1EFF2FE1           BX       LR               ;; return
   4211          }
   4212          
   4213          //
   4214          // Returns true if this is any gauge screen other than in drag or autocross modes (these screens do not "scroll")
   4215          //

   \                                 In section .text, align 4, keep-with-next
   4216          char AnyNonDragGaugeScreen(enum SCREEN_TYPE type)
   4217          {
   4218          	if ((type == GAUGES_SCREEN_TYPE) || (type == DRIVE_MODE_SCREEN_TYPE) || (type == INSTRUMENTS_MODE_SCREEN_TYPE) || (type == DRAG_AUTOX_GAUGE_SCREEN_TYPE))
   \                     AnyNonDragGaugeScreen:
   \   00000000   020050E3           CMP      R0,#+2
   \   00000004   03005013           CMPNE    R0,#+3
   \   00000008   04005013           CMPNE    R0,#+4
   \   0000000C   1F005013           CMPNE    R0,#+31
   \   00000010   0100001A           BNE      ??AnyNonDragGaugeScreen_0
   4219          		return true;
   \   00000014   0100A0E3           MOV      R0,#+1
   \   00000018   1EFF2FE1           BX       LR
   4220          	else return false;
   \                     ??AnyNonDragGaugeScreen_0:
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   1EFF2FE1           BX       LR               ;; return
   4221          }
   4222          
   4223          //
   4224          // Set the number of analog inputs currently enabled to determine which analog
   4225          // screen to show.
   4226          //

   \                                 In section .text, align 4, keep-with-next
   4227          int DetermineAnalogScreenSelection(void)
   4228          {
   4229          	int numAnalogsDisplayed, i;
   4230          
   4231          	for (numAnalogsDisplayed = i = 0; i < 4; i++)
   \                     DetermineAnalogScreenSelection:
   \   00000000   0000A0E3           MOV      R0,#+0
   \   00000004   ........           LDR      R1,??DataTable207_13
   \   00000008   0420A0E3           MOV      R2,#+4
   4232          	{
   4233          		if (vehicleData.analogInput[i].enabled)
   \                     ??DetermineAnalogScreenSelection_0:
   \   0000000C   9330D1E5           LDRB     R3,[R1, #+147]
   4234          			numAnalogsDisplayed++;
   4235          	}
   \   00000010   401081E2           ADD      R1,R1,#+64
   \   00000014   000053E3           CMP      R3,#+0
   \   00000018   01008012           ADDNE    R0,R0,#+1
   \   0000001C   012052E2           SUBS     R2,R2,#+1
   \   00000020   F9FFFF1A           BNE      ??DetermineAnalogScreenSelection_0
   4236          	return numAnalogsDisplayed;
   \   00000024   1EFF2FE1           BX       LR               ;; return
   4237          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable150:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     ConfigScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   ........           DC32     testMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_1:
   \   00000000   ........           DC32     DriveScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_2:
   \   00000000   ........           DC32     InstrumentsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_3:
   \   00000000   ........           DC32     GaugesScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_4:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_1:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_2:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_3:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_4:
   \   00000000   ........           DC32     SessionNameData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_5:
   \   00000000   ........           DC32     modalWindowUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_6:
   \   00000000   ........           DC32     nonModalPopupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_7:
   \   00000000   ........           DC32     bmRecordingOff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_8:
   \   00000000   ........           DC32     bmRecordingOn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_9:
   \   00000000   ........           DC32     ctType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_10:
   \   00000000   8054FF00           DC32     0xff5480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_11:
   \   00000000   ........           DC32     ConfigScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable160:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     alteredTrackData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164_1:
   \   00000000   ........           DC32     trackTableIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164_2:
   \   00000000   ........           DC32     trackTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable165:
   \   00000000   ........           DC32     vehicleSelectionChanged

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172:
   \   00000000   ........           DC32     hWaitingForCamera

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_1:
   \   00000000   ........           DC32     hPersonalizationScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_2:
   \   00000000   ........           DC32     configureGaugeMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_3:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_4:
   \   00000000   ........           DC32     InstrumentsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_5:
   \   00000000   ........           DC32     DriveScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_6:
   \   00000000   ........           DC32     GaugesScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable173:
   \   00000000   ........           DC32     bmNoAudioSlideout

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175_1:
   \   00000000   ........           DC32     pHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175_2:
   \   00000000   ........           DC32     GoRacingHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175_3:
   \   00000000   ........           DC32     ReviewSessionsHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175_4:
   \   00000000   ........           DC32     VehicleSelectionHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175_5:
   \   00000000   ........           DC32     TrackSettingsSpecificHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable176:
   \   00000000   ........           DC32     TimeZoneGPSScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable176_1:
   \   00000000   ........           DC32     AutoOnSpecificHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable177:
   \   00000000   ........           DC32     VehicleSetupSpecificHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178:
   \   00000000   ........           DC32     TachSpecificHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178_1:
   \   00000000   ........           DC32     AnalogInputsHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178_2:
   \   00000000   ........           DC32     GenericCameraHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable179:
   \   00000000   ........           DC32     MainHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable179_1:
   \   00000000   ........           DC32     EditScaleHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable179_2:
   \   00000000   ........           DC32     DUSpecificCameraHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181:
   \   00000000   ........           DC32     SUSpecificCameraHelpScreens

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181_1:
   \   00000000   ........           DC32     ConfigScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182:
   \   00000000   ........           DC32     HelpCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_1:
   \   00000000   ........           DC32     popupTitleTextColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_2:
   \   00000000   F0F0F000           DC32     0xf0f0f0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_3:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_4:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_5:
   \   00000000   25640000           DC8      0x25, 0x64, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_6:
   \   00000000   20000000           DC8      " ",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183:
   \   00000000   ........           DC32     _cbMainCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_1:
   \   00000000   ........           DC32     SetConfigWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_2:
   \   00000000   ........           DC32     DriveScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_3:
   \   00000000   ........           DC32     GaugesScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_4:
   \   00000000   ........           DC32     SetRunningGaugesWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_5:
   \   00000000   ........           DC32     InstrumentsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_6:
   \   00000000   ........           DC32     GaugesScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_7:
   \   00000000   ........           DC32     RaceSetupScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_8:
   \   00000000   ........           DC32     RaceSetupScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable183_9:
   \   00000000   ........           DC32     SetRaceSetupScreensWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184:
   \   00000000   ........           DC32     SystemSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_1:
   \   00000000   ........           DC32     SystemSettingsScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_2:
   \   00000000   ........           DC32     SetSystemSettingsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_3:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_4:
   \   00000000   ........           DC32     VehicleSettingsScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_5:
   \   00000000   ........           DC32     SetVehicleSettingsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_6:
   \   00000000   ........           DC32     TachSetupScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_7:
   \   00000000   ........           DC32     TachSetupScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_8:
   \   00000000   ........           DC32     SetTachSetupWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_9:
   \   00000000   ........           DC32     InputsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185:
   \   00000000   ........           DC32     InputsScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_1:
   \   00000000   ........           DC32     SetInputsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_2:
   \   00000000   ........           DC32     TrackSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_3:
   \   00000000   ........           DC32     TrackSettingsScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_4:
   \   00000000   ........           DC32     SetTrackSettingsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_5:
   \   00000000   ........           DC32     GearingScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_6:
   \   00000000   ........           DC32     GearingScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_7:
   \   00000000   ........           DC32     SetGearingWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_8:
   \   00000000   ........           DC32     GearRatiosScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_9:
   \   00000000   ........           DC32     GearRatiosCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_10:
   \   00000000   ........           DC32     SetGearRatiosWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_11:
   \   00000000   ........           DC32     AnalogInputSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_12:
   \   00000000   ........           DC32     AnalogInputSettingsCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_13:
   \   00000000   ........           DC32     SetAnalogInputSettingsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_14:
   \   00000000   ........           DC32     DigitalInputSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186:
   \   00000000   ........           DC32     DigitalInputSettingsCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186_1:
   \   00000000   ........           DC32     SetDigitalInputSettingsWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186_2:
   \   00000000   ........           DC32     AnalogInputsScaleScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186_3:
   \   00000000   ........           DC32     AnalogInputsScaleCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186_4:
   \   00000000   ........           DC32     SetAnalogInputsScaleWindowHandle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190:
   \   00000000   ........           DC32     bmRace

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190_1:
   \   00000000   ........           DC32     bmAutoxRally

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190_2:
   \   00000000   ........           DC32     bmDrive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190_3:
   \   00000000   ........           DC32     bmDragButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190_4:
   \   00000000   ........           DC32     bmRecordingOff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191:
   \   00000000   ........           DC32     bmRecordingOn

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191_1:
   \   00000000   ........           DC32     bmDriver

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191_2:
   \   00000000   ........           DC32     bmTrack

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191_3:
   \   00000000   ........           DC32     bmVehicle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable195:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable196:
   \   00000000   ........           DC32     bmLapsQualifyButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197:
   \   00000000   ........           DC32     DateTimeSort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_1:
   \   00000000   ........           DC32     LapTimeSort

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_2:
   \   00000000   ........           DC32     LISTVIEW_CompareText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_3:
   \   00000000   ........           DC32     bmStdGreenButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_4:
   \   00000000   ........           DC32     bmSmallYellowButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_5:
   \   00000000   ........           DC32     bmSmallRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_6:
   \   00000000   ........           DC32     bmSmallBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_7:
   \   00000000   ........           DC32     ConfigScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable198_1:
   \   00000000   ........           DC32     SessionNameData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable199:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable200:
   \   00000000   8054FF00           DC32     0xff5480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201:
   \   00000000   ........           DC32     bmDisplay

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_1:
   \   00000000   ........           DC32     bmUnits

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_2:
   \   00000000   ........           DC32     bmTimeGPS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_3:
   \   00000000   ........           DC32     bmAutoStartButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_4:
   \   00000000   ........           DC32     bmStorage

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_5:
   \   00000000   ........           DC32     bmPredictive

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_6:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_7:
   \   00000000   ........           DC32     bmGoRacingText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_8:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_9:
   \   00000000   ........           DC32     bmRaceSetupText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_10:
   \   00000000   ........           DC32     bmRaceReviewText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable201_11:
   \   00000000   ........           DC32     bmSystemSettingsText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202_1:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202_2:
   \   00000000   0A000000           DC8      "\n",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202_3:
   \   00000000   ........           DC32     InstrumentsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable202_4:
   \   00000000   ........           DC32     DriveScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable204:
   \   00000000   ........           DC32     GaugesScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable204_1:
   \   00000000   ........           DC32     popupTitleTextColor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable204_2:
   \   00000000   ........           DC32     systemSettingsPopupScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable204_3:
   \   00000000   ........           DC32     fullSessionName

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable205:
   \   00000000   ........           DC32     GUI_Font13B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable205_1:
   \   00000000   ........           DC32     GUI_Font16B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable206:
   \   00000000   ........           DC32     fileList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable206_1:
   \   00000000   333333333333       DC32     0x33333333,0x40113333
   \              1140        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207:
   \   00000000   ........           DC32     ConfigScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_1:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_2:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_3:
   \   00000000   00000000           DC8      "",0x0,0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_4:
   \   00000000   ........           DC32     trackTableIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_5:
   \   00000000   ........           DC32     trackTable

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_6:
   \   00000000   ........           DC32     sessionFile

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_7:
   \   00000000   0A000000           DC8      "\n",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_8:
   \   00000000   ........           DC32     trackData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_9:
   \   00000000   ........           DC32     ctType

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_10:
   \   00000000   ........           DC32     RaceSetupScreensCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_11:
   \   00000000   ........           DC32     demoMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_12:
   \   00000000   ........           DC32     ??mainHelp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_13:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_14:
   \   00000000   ........           DC32     suData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_15:
   \   00000000   ........           DC32     modalWindowUp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable207_16:
   \   00000000   ........           DC32     nonModalPopupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Main Menu">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D61696E204D       DC8 77, 97, 105, 110, 32, 77, 101, 110, 117, 0
   \              656E7500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Go Racing Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   476F20526163       DC8 71, 111, 32, 82, 97, 99, 105, 110, 103, 32
   \              696E6720    
   \   0000000A   496E666F0000       DC8 73, 110, 102, 111, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OK">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4B0000           DC8 79, 75, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Race Setup Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   526163652053       DC8 82, 97, 99, 101, 32, 83, 101, 116, 117, 112
   \              65747570    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Review Sessions Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   526576696577       DC8 82, 101, 118, 105, 101, 119, 32, 83, 101, 115
   \              20536573    
   \   0000000A   73696F6E7320       DC8 115, 105, 111, 110, 115, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "System Setup Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53797374656D       DC8 83, 121, 115, 116, 101, 109, 32, 83, 101, 116
   \              20536574    
   \   0000000A   757020496E66       DC8 117, 112, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Driver Selection Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   447269766572       DC8 68, 114, 105, 118, 101, 114, 32, 83, 101, 108
   \              2053656C    
   \   0000000A   656374696F6E       DC8 101, 99, 116, 105, 111, 110, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Tutorial">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   5475746F7269       DC8 84, 117, 116, 111, 114, 105, 97, 108, 0, 0
   \              616C0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "System Status">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53797374656D       DC8 83, 121, 115, 116, 101, 109, 32, 83, 116, 97
   \              20537461    
   \   0000000A   747573000000       DC8 116, 117, 115, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Saving your session data">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   536176696E67       DC8 83, 97, 118, 105, 110, 103, 32, 121, 111, 117
   \              20796F75    
   \   0000000A   722073657373       DC8 114, 32, 115, 101, 115, 115, 105, 111, 110, 32
   \              696F6E20    
   \   00000014   646174610000       DC8 100, 97, 116, 97, 0, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Please Wait">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   506C65617365       DC8 80, 108, 101, 97, 115, 101, 32, 87, 97, 105
   \              20576169    
   \   0000000A   7400               DC8 116, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "CANCEL">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   43414E43454C       DC8 67, 65, 78, 67, 69, 76, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ERROR">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4552524F5200       DC8 69, 82, 82, 79, 82, 0, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "This function is not ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   546869732066       DC8 84, 104, 105, 115, 32, 102, 117, 110, 99, 116
   \              756E6374    
   \   0000000A   696F6E206973       DC8 105, 111, 110, 32, 105, 115, 32, 110, 111, 116
   \              206E6F74    
   \   00000014   20737570706F       DC8 32, 115, 117, 112, 112, 111, 114, 116, 101, 100
   \              72746564    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Vehicle Selection Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 32, 83, 101
   \              65205365    
   \   0000000A   6C656374696F       DC8 108, 101, 99, 116, 105, 111, 110, 32, 73, 110
   \              6E20496E    
   \   00000014   666F0000           DC8 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Track Selection Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   547261636B20       DC8 84, 114, 97, 99, 107, 32, 83, 101, 108, 101
   \              53656C65    
   \   0000000A   6374696F6E20       DC8 99, 116, 105, 111, 110, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Laps/Qualifying Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4C6170732F51       DC8 76, 97, 112, 115, 47, 81, 117, 97, 108, 105
   \              75616C69    
   \   0000000A   6679696E6720       DC8 102, 121, 105, 110, 103, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Display Settings Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   446973706C61       DC8 68, 105, 115, 112, 108, 97, 121, 32, 83, 101
   \              79205365    
   \   0000000A   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Units Selection Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   556E69747320       DC8 85, 110, 105, 116, 115, 32, 83, 101, 108, 101
   \              53656C65    
   \   0000000A   6374696F6E20       DC8 99, 116, 105, 111, 110, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Time Zone Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   54696D65205A       DC8 84, 105, 109, 101, 32, 90, 111, 110, 101, 32
   \              6F6E6520    
   \   0000000A   496E666F0000       DC8 73, 110, 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Auto Start Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4175746F2053       DC8 65, 117, 116, 111, 32, 83, 116, 97, 114, 116
   \              74617274    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "System Storage Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53797374656D       DC8 83, 121, 115, 116, 101, 109, 32, 83, 116, 111
   \              2053746F    
   \   0000000A   726167652049       DC8 114, 97, 103, 101, 32, 73, 110, 102, 111, 0
   \              6E666F00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Predictive Scale Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   507265646963       DC8 80, 114, 101, 100, 105, 99, 116, 105, 118, 101
   \              74697665    
   \   0000000A   205363616C65       DC8 32, 83, 99, 97, 108, 101, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Vehicle Settings Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 32, 83, 101
   \              65205365    
   \   0000000A   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Aero/Grip Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4165726F2F47       DC8 65, 101, 114, 111, 47, 71, 114, 105, 112, 32
   \              72697020    
   \   0000000A   496E666F0000       DC8 73, 110, 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tach Settings Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   546163682053       DC8 84, 97, 99, 104, 32, 83, 101, 116, 116, 105
   \              65747469    
   \   0000000A   6E677320496E       DC8 110, 103, 115, 32, 73, 110, 102, 111, 0, 0
   \              666F0000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Car Metrics Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436172204D65       DC8 67, 97, 114, 32, 77, 101, 116, 114, 105, 99
   \              74726963    
   \   0000000A   7320496E666F       DC8 115, 32, 73, 110, 102, 111, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Gear Ratio Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   476561722052       DC8 71, 101, 97, 114, 32, 82, 97, 116, 105, 111
   \              6174696F    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Inputs Info">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   496E70757473       DC8 73, 110, 112, 117, 116, 115, 32, 73, 110, 102
   \              20496E66    
   \   0000000A   6F00               DC8 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Vehicle Weight Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 32, 87, 101
   \              65205765    
   \   0000000A   696768742049       DC8 105, 103, 104, 116, 32, 73, 110, 102, 111, 0
   \              6E666F00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera Setup Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 101, 116
   \              20536574    
   \   0000000A   757020496E66       DC8 117, 112, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Warning RPM Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5761726E696E       DC8 87, 97, 114, 110, 105, 110, 103, 32, 82, 80
   \              67205250    
   \   0000000A   4D20496E666F       DC8 77, 32, 73, 110, 102, 111, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Redline RPM Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5265646C696E       DC8 82, 101, 100, 108, 105, 110, 101, 32, 82, 80
   \              65205250    
   \   0000000A   4D20496E666F       DC8 77, 32, 73, 110, 102, 111, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Engine Cyl RPM Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E67696E65       DC8 69, 110, 103, 105, 110, 101, 32, 67, 121, 108
   \              2043796C    
   \   0000000A   2052504D2049       DC8 32, 82, 80, 77, 32, 73, 110, 102, 111, 0
   \              6E666F00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Powerband RPM Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   506F77657262       DC8 80, 111, 119, 101, 114, 98, 97, 110, 100, 32
   \              616E6420    
   \   0000000A   52504D20496E       DC8 82, 80, 77, 32, 73, 110, 102, 111, 0, 0
   \              666F0000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max RPM Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4D6178205250       DC8 77, 97, 120, 32, 82, 80, 77, 32, 73, 110
   \              4D20496E    
   \   0000000A   666F00000000       DC8 102, 111, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Analog Input Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   416E616C6F67       DC8 65, 110, 97, 108, 111, 103, 32, 73, 110, 112
   \              20496E70    
   \   0000000A   757420496E66       DC8 117, 116, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Digital Input Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   446967697461       DC8 68, 105, 103, 105, 116, 97, 108, 32, 73, 110
   \              6C20496E    
   \   0000000A   70757420496E       DC8 112, 117, 116, 32, 73, 110, 102, 111, 0, 0
   \              666F0000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Check Times Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436865636B20       DC8 67, 104, 101, 99, 107, 32, 84, 105, 109, 101
   \              54696D65    
   \   0000000A   7320496E666F       DC8 115, 32, 73, 110, 102, 111, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Track Settings Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   547261636B20       DC8 84, 114, 97, 99, 107, 32, 83, 101, 116, 116
   \              53657474    
   \   0000000A   696E67732049       DC8 105, 110, 103, 115, 32, 73, 110, 102, 111, 0
   \              6E666F00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Track Type Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   547261636B20       DC8 84, 114, 97, 99, 107, 32, 84, 121, 112, 101
   \              54797065    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Hold Time Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   486F6C642054       DC8 72, 111, 108, 100, 32, 84, 105, 109, 101, 32
   \              696D6520    
   \   0000000A   496E666F0000       DC8 73, 110, 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Start/Finish Line Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   53746172742F       DC8 83, 116, 97, 114, 116, 47, 70, 105, 110, 105
   \              46696E69    
   \   0000000A   7368204C696E       DC8 115, 104, 32, 76, 105, 110, 101, 32, 73, 110
   \              6520496E    
   \   00000014   666F0000           DC8 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Predictive Lap Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   507265646963       DC8 80, 114, 101, 100, 105, 99, 116, 105, 118, 101
   \              74697665    
   \   0000000A   204C61702049       DC8 32, 76, 97, 112, 32, 73, 110, 102, 111, 0
   \              6E666F00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tire Size Selection Info">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   546972652053       DC8 84, 105, 114, 101, 32, 83, 105, 122, 101, 32
   \              697A6520    
   \   0000000A   53656C656374       DC8 83, 101, 108, 101, 99, 116, 105, 111, 110, 32
   \              696F6E20    
   \   00000014   496E666F0000       DC8 73, 110, 102, 111, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Diff Ratio Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   446966662052       DC8 68, 105, 102, 102, 32, 82, 97, 116, 105, 111
   \              6174696F    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Transmission Ratios Info">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   5472616E736D       DC8 84, 114, 97, 110, 115, 109, 105, 115, 115, 105
   \              69737369    
   \   0000000A   6F6E20526174       DC8 111, 110, 32, 82, 97, 116, 105, 111, 115, 32
   \              696F7320    
   \   00000014   496E666F0000       DC8 73, 110, 102, 111, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Analog Scale Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   416E616C6F67       DC8 65, 110, 97, 108, 111, 103, 32, 83, 99, 97
   \              20536361    
   \   0000000A   6C6520496E66       DC8 108, 101, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Analog Alarm Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   416E616C6F67       DC8 65, 110, 97, 108, 111, 103, 32, 65, 108, 97
   \              20416C61    
   \   0000000A   726D20496E66       DC8 114, 109, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Digital Alarm Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   446967697461       DC8 68, 105, 103, 105, 116, 97, 108, 32, 65, 108
   \              6C20416C    
   \   0000000A   61726D20496E       DC8 97, 114, 109, 32, 73, 110, 102, 111, 0, 0
   \              666F0000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tire Size Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   546972652053       DC8 84, 105, 114, 101, 32, 83, 105, 122, 101, 32
   \              697A6520    
   \   0000000A   496E666F0000       DC8 73, 110, 102, 111, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Choose Track Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43686F6F7365       DC8 67, 104, 111, 111, 115, 101, 32, 84, 114, 97
   \              20547261    
   \   0000000A   636B20496E66       DC8 99, 107, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Personalize Unit Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   506572736F6E       DC8 80, 101, 114, 115, 111, 110, 97, 108, 105, 122
   \              616C697A    
   \   0000000A   6520556E6974       DC8 101, 32, 85, 110, 105, 116, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Autocross Stage Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4175746F6372       DC8 65, 117, 116, 111, 99, 114, 111, 115, 115, 32
   \              6F737320    
   \   0000000A   537461676520       DC8 83, 116, 97, 103, 101, 32, 73, 110, 102, 111
   \              496E666F    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Drag Stage Info">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   447261672053       DC8 68, 114, 97, 103, 32, 83, 116, 97, 103, 101
   \              74616765    
   \   0000000A   20496E666F00       DC8 32, 73, 110, 102, 111, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera Delay Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 68, 101, 108
   \              2044656C    
   \   0000000A   617920496E66       DC8 97, 121, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera Selection Info">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 101, 108
   \              2053656C    
   \   0000000A   656374696F6E       DC8 101, 99, 116, 105, 111, 110, 32, 73, 110, 102
   \              20496E66    
   \   00000014   6F000000           DC8 111, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Record Speed Info">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5265636F7264       DC8 82, 101, 99, 111, 114, 100, 32, 83, 112, 101
   \              20537065    
   \   0000000A   656420496E66       DC8 101, 100, 32, 73, 110, 102, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "without an SD card in...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   776974686F75       DC8 119, 105, 116, 104, 111, 117, 116, 32, 97, 110
   \              7420616E    
   \   0000000A   205344206361       DC8 32, 83, 68, 32, 99, 97, 114, 100, 32, 105
   \              72642069    
   \   00000014   6E7365727465       DC8 110, 115, 101, 114, 116, 101, 100, 33, 0, 0
   \              64210000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 1, keep-with-next
   \                     `?<Constant "">`:
   \   00000000                      ; Initializer data, 1 bytes
   \   00000000   00                 DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant " ">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   2000               DC8 32, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%d">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25640000           DC8 37, 100, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "\\n">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   0A00               DC8 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant {0, 0, 480, 272}>`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   00000000E001       DC16 0, 0, 480, 272
   \              1001        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Date & Time">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   446174652026       DC8 68, 97, 116, 101, 32, 38, 32, 84, 105, 109
   \              2054696D    
   \   0000000A   6500               DC8 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Session">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   53657373696F       DC8 83, 101, 115, 115, 105, 111, 110, 0
   \              6E00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Track / ">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   547261636B20       DC8 84, 114, 97, 99, 107, 32, 47, 32, 0, 0
   \              2F200000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Mode">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4D6F64650000       DC8 77, 111, 100, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Delete">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   44656C657465       DC8 68, 101, 108, 101, 116, 101, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Details">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   44657461696C       DC8 68, 101, 116, 97, 105, 108, 115, 0
   \              7300        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\nSYSTEM STATUS\\nOwner...">`:
   \   00000000                      ; Initializer data, 48 bytes
   \   00000000   0A0A53595354       DC8 10, 10, 83, 89, 83, 84, 69, 77, 32, 83
   \              454D2053    
   \   0000000A   54415455530A       DC8 84, 65, 84, 85, 83, 10, 79, 119, 110, 101
   \              4F776E65    
   \   00000014   723A2025730A       DC8 114, 58, 32, 37, 115, 10, 67, 111, 110, 116
   \              436F6E74    
   \   0000001E   61637420496E       DC8 97, 99, 116, 32, 73, 110, 102, 111, 58, 32
   \              666F3A20    
   \   00000028   25730A0A0000       DC8 37, 115, 10, 10, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Inputs Configuration:\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   496E70757473       DC8 73, 110, 112, 117, 116, 115, 32, 67, 111, 110
   \              20436F6E    
   \   0000000A   666967757261       DC8 102, 105, 103, 117, 114, 97, 116, 105, 111, 110
   \              74696F6E    
   \   00000014   3A0A0000           DC8 58, 10, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nAdesto Dataflash">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   0A4164657374       DC8 10, 65, 100, 101, 115, 116, 111, 32, 68, 97
   \              6F204461    
   \   0000000A   7461666C6173       DC8 116, 97, 102, 108, 97, 115, 104, 0, 0, 0
   \              68000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nAtmel Dataflash">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   0A41746D656C       DC8 10, 65, 116, 109, 101, 108, 32, 68, 97, 116
   \              20446174    
   \   0000000A   61666C617368       DC8 97, 102, 108, 97, 115, 104, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nTraqDash Bootloader ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   0A5472617144       DC8 10, 84, 114, 97, 113, 68, 97, 115, 104, 32
   \              61736820    
   \   0000000A   426F6F746C6F       DC8 66, 111, 111, 116, 108, 111, 97, 100, 101, 114
   \              61646572    
   \   00000014   2025322E3266       DC8 32, 37, 50, 46, 50, 102, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nTraqDash Firmware %2...">`:
   \   00000000                      ; Initializer data, 52 bytes
   \   00000000   0A5472617144       DC8 10, 84, 114, 97, 113, 68, 97, 115, 104, 32
   \              61736820    
   \   0000000A   4669726D7761       DC8 70, 105, 114, 109, 119, 97, 114, 101, 32, 37
   \              72652025    
   \   00000014   322E32660A53       DC8 50, 46, 50, 102, 10, 83, 101, 110, 115, 111
   \              656E736F    
   \   0000001E   7220556E6974       DC8 114, 32, 85, 110, 105, 116, 32, 70, 105, 114
   \              20466972    
   \   00000028   6D7761726520       DC8 109, 119, 97, 114, 101, 32, 37, 50, 46, 50
   \              25322E32    
   \   00000032   6600               DC8 102, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\nDU Ser# %u, HW %2.2...">`:
   \   00000000                      ; Initializer data, 44 bytes
   \   00000000   0A0A44552053       DC8 10, 10, 68, 85, 32, 83, 101, 114, 35, 32
   \              65722320    
   \   0000000A   25752C204857       DC8 37, 117, 44, 32, 72, 87, 32, 37, 50, 46
   \              2025322E    
   \   00000014   32662C204275       DC8 50, 102, 44, 32, 66, 117, 105, 108, 116, 32
   \              696C7420    
   \   0000001E   253032642F25       DC8 37, 48, 50, 100, 47, 37, 48, 50, 100, 10
   \              3032640A    
   \   00000028   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "SU Ser# %u, HW %2.2f,...">`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   535520536572       DC8 83, 85, 32, 83, 101, 114, 35, 32, 37, 117
   \              23202575    
   \   0000000A   2C2048572025       DC8 44, 32, 72, 87, 32, 37, 50, 46, 50, 102
   \              322E3266    
   \   00000014   2C204275696C       DC8 44, 32, 66, 117, 105, 108, 116, 32, 37, 48
   \              74202530    
   \   0000001E   32642F253032       DC8 50, 100, 47, 37, 48, 50, 100, 0, 0, 0
   \              64000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\nSD Card Free Space ...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   0A0A53442043       DC8 10, 10, 83, 68, 32, 67, 97, 114, 100, 32
   \              61726420    
   \   0000000A   467265652053       DC8 70, 114, 101, 101, 32, 83, 112, 97, 99, 101
   \              70616365    
   \   00000014   20252E336620       DC8 32, 37, 46, 51, 102, 32, 37, 99, 66, 121
   \              25634279    
   \   0000001E   746573000000       DC8 116, 101, 115, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\nNo SD card present">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   0A0A4E6F2053       DC8 10, 10, 78, 111, 32, 83, 68, 32, 99, 97
   \              44206361    
   \   0000000A   726420707265       DC8 114, 100, 32, 112, 114, 101, 115, 101, 110, 116
   \              73656E74    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Analog Input %d: ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   416E616C6F67       DC8 65, 110, 97, 108, 111, 103, 32, 73, 110, 112
   \              20496E70    
   \   0000000A   75742025643A       DC8 117, 116, 32, 37, 100, 58, 32, 0, 0, 0
   \              20000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Disabled">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   44697361626C       DC8 68, 105, 115, 97, 98, 108, 101, 100, 0, 0
   \              65640000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Digital Input %d: ">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   446967697461       DC8 68, 105, 103, 105, 116, 97, 108, 32, 73, 110
   \              6C20496E    
   \   0000000A   707574202564       DC8 112, 117, 116, 32, 37, 100, 58, 32, 0, 0
   \              3A200000    
   4238          
   4239          /*************************** End of file ****************************/
   4240          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AnyGaugeScreen                      0
     AnyNonDragGaugeScreen               0
     BackTimerExpired                    8
     CS_IsVisible                       16
     CheckForInfoKey                    40
     CheckForStopRecord                  0
     CheckSlideoutTimer                 16
     CloseSlider                         8
     ConfigScreensIgnoreNextKeyRelease
                                         0
     ConfigTimerExpired                  8
     ConvertRaceModeToSessionType        0
     DateTimeSort                       40
     DeleteSlideout                     16
     DetermineAnalogScreenSelection      0
     DisplayClosestTracks               24
     DisplayGoRacing                    32
     DisplayNewScreenList               40
     DisplayRaceSetup                   32
     DisplayReviewSessions              96
     DisplaySavingData                  16
     DisplaySystemSettings              24
     ExitRecord                         40
     FinishPressed                       8
     GaugeScreenIndexToID                0
     GaugeScreensIgnoreNextKeyRelease
                                         0
     GetAnalogInputText                 16
     GetConfigWindowHandle               0
     GetCurrentScreen                    8
     GetCurrentScreenID                  8
     GetCurrentWindowHandle              8
     GetDigitalInputText                16
     GetLastScreen                       0
     GetMins                             4
     GetNextGaugeScreen                 16
     GetNextIndex                        8
     GetNumScreens                       0
     GetPrevGaugeScreen                 16
     GetPrevIndex                        8
     GetScreenType                       0
     GetStorageStatsHelpText            24
     GetSystemStatsHelpText            152
     GoRacingPaint                       8
     GoRacingStateMachine               32
     HelpCallback                       40
     InactiveGaugeScreen                 0
     IncrementSessionType                0
     LapTimeSort                         8
     MoveRight                          16
     NotSupportedPopup                  24
     PopulateSessionLISTVIEW           160
     ProceedToRaceMode                  16
     ProcessScreenExit                  24
     ProcessScreenMovement              32
     ProcessSlideoutKeyPress             8
     RaceSetupPaint                      8
     ReviewSessionsPaint                 8
     SaveRaceMode                        0
     SetButtonColors                    16
     SetConfigWindowHandle               0
     SetLastScreen                       0
     SetRecordModeGraphic                8
     SetScreenType                       0
     SetSessionSelection                 8
     SetSpritePositions                  8
     SetUserMode                         8
     ShowHelpPopup                      16
     SlideOutDeployed                    0
     SlideOutVisible                     0
     StartBackKeyTimer                   8
     StartConfigKeyTimer                 8
     StartPressed                       16
     StartSlideout                       8
     StartupGoToRaceMode                 8
     SystemSettingsPaint                 8
     TouchPosIsBackKey                  16
     TouchPosIsBackKey2                  0
     TouchPosIsReset                     0
     UpdateSessionListView              16
     ValidateRaceScreens                 0
     _cbMainCallback                    32
     popupCallback                      40


   Section sizes:

     Function/Label                            Bytes
     --------------                            -----
     processingScreenTransition                   1
     searchingSemaphore                           1
     MAIN_SCREEN_INFO                           288
     GO_RACING_INFO                             452
     RACE_SETUP_INFO                            504
     SYSTEMS_SETUP_INFO                         484
     REVIEW_SESSIONS_INFO                       600
     SESSION_DETAILS_INFO                       832
     SELECT_DRIVER_INFO                         300
     SELECT_VEHICLE_INFO                        368
     SELECT_TRACK_INFO                          544
     CHOOSE_TRACK_INFO                          472
     LAP_QUAL_INFO                              340
     VEHICLE_SETTINGS_INFO                      408
     TRACK_SETTINGS_INFO                        364
     TRACK_TYPE_INFO                            544
     LAP_HOLD_INFO                              300
     START_FINISH_INFO                          348
     PREDICTIVE_LAP_INFO                        196
     DISPLAY_SETTINGS_INFO                      276
     UNITS_SETTINGS_INFO                        152
     TIME_SETTINGS_INFO                         596
     AUTOSTART_SETTINGS_INFO                    672
     STORAGE_SETTINGS_INFO                      604
     PREDICTIVE_SCALE_INFO                      236
     TACH_SETTINGS_INFO                         596
     TACH_PWREND_INFO                           260
     TACH_WARNING_INFO                          356
     TACH_REDLINE_INFO                          336
     TACH_MAXRPM_INFO                           256
     NUM_CYL_INFO                               276
     AERO_GRIP_INFO                             324
     CAR_METRICS_INFO                           640
     GEAR_RATIO_INFO                            860
     TIRE_SIZE_INFO                             852
     TIRE_DIMENSIONS_INFO                       380
     DIFF_RATIO_INFO                            392
     TRANS_RATIO_INFO                           312
     INPUTS_INFO                                348
     WEIGHT_INFO                                224
     CAMERA_INFO                                748
     CAMERA_SETUP_INFO                          904
     CAMERA_DELAY_INFO                          508
     ANALOG_SETTINGS_INFO                      1772
     DIGITAL_SETTINGS_INFO                      580
     ANALOG_SCALE_INFO                         1736
     ANALOG_ALARM_INFO                          376
     DIGITAL_ALARM_INFO                         356
     PERSONALIZE_INFO                           452
     DRAG_STAGE_SCREEN_INFO                     320
     AUTOX_STAGE_SCREEN_INFO                    248
     RECORD_SPEED_INFO                          496
     SetLastScreen                              256
     GetCurrentWindowHandle                     260
     GetLastScreen                              580
     GetCurrentScreen                            12
     GetNumScreens                              216
     SetScreenType                               12
     GetScreenType                               12
     GetPrevIndex                               252
     GetNextIndex                               256
     ValidateRaceScreens                         84
     GetNextGaugeScreen                         288
     GetPrevGaugeScreen                         284
     InactiveGaugeScreen                        176
     GaugeScreenIndexToID                        88
     _cbMainCallback                           1412
     UpdateSessionListView                      128
     IncrementSessionType                        60
     SetSessionSelection                         44
     StartPressed                                52
     FinishPressed                                4
     GetConfigWindowHandle                       12
     SetConfigWindowHandle                       12
     ProcessScreenExit                          512
     MoveRight                                 1172
     ProcessScreenMovement                     1788
     ProcessSlideoutKeyPress                    152
     StartSlideout                              172
     CloseSlider                                 36
     DeleteSlideout                              96
     CheckSlideoutTimer                         344
     SetSpritePositions                          88
     SlideOutDeployed                            20
     SlideOutVisible                             32
     TouchPosIsBackKey                           68
     TouchPosIsBackKey2                          44
     TouchPosIsReset                             36
     StartBackKeyTimer                           28
     BackTimerExpired                            76
     StartConfigKeyTimer                        160
     ConfigTimerExpired                          72
     CheckForInfoKey                           2344
     HelpPopup                                   48
     HelpWithDetailsPopup                        72
     ShowHelpPopup                              588
     HelpCallback                               312
     DisplayNewScreenList                       912
     DisplayGoRacing                            372
     SetRecordModeGraphic                        52
     DisplayRaceSetup                           280
     DisplayReviewSessions                      808
     SetButtonColors                            200
     PopulateSessionLISTVIEW                    392
     DateTimeSort                               132
     GetMins                                    200
     LapTimeSort                                 16
     DisplaySystemSettings                      400
     GoRacingPaint                               64
     RaceSetupPaint                              64
     ReviewSessionsPaint                         88
     SystemSettingsPaint                         64
     CS_IsVisible                               172
     GetCurrentScreenID                          88
     ConfigScreensIgnoreNextKeyRelease
                                                 16
     popupCallback                              388
     ExitRecord                                 268
     SavingDataResources                         96
     DisplaySavingData                           92
     SetUserMode                                 24
     CheckForStopRecord                          40
     SaveRaceMode                                64
     ConvertRaceModeToSessionType                60
     GaugeScreensIgnoreNextKeyRelease
                                                 16
     GoRacingStateMachine                       768
     DisplayClosestTracks                       168
     ProceedToRaceMode                          384
     StartupGoToRaceMode                        120
     GetSystemStatsHelpText                     848
     mainHelp                                   836
     GetStorageStatsHelpText                    248
     ConfigScreenList                          1008
     slideoutXPos
     slideoutYPos
     hSlideoutTimer
     backKeyPressedTime
     configKeyPressedTime
     slideoutStepSize
     slideoutStepTime
     hSlideout
     hSUStatusSprite
     hCameraSprite
     hSignalStrengthSprite
     screen_scrolling
     pressingbutton_semaphore
     hScreenTimer
     selectedSessionUnsorted
     glbBlackoutFlag
     numSessions
     hConfigScreen
     previous_touch_state
     nextScreen
     clickedOnThisScreen
     hBestTime
     hDetailsButton
     hDeleteButton
     hSelectedReviewMode
     hRecordModeButton
     hListView
     hDisplayClosestTracks
     hSavingDataDialog
     selectedSessionSorted
     lastx
     lasty
     pHelpText
     pHelpTitle
     slideoutState
     raceModeState
     selectedRaceMode
     waitedForSF
     GSignoreRelease
     userAbort
     reviewingSession
     storageHelp
     GetAnalogInputText                          96
     GetDigitalInputText                        100
     NotSupportedResources                       96
     NotSupportedPopup                           84
     AnyGaugeScreen                              36
     AnyNonDragGaugeScreen                       36
     DetermineAnalogScreenSelection              40
     ??DataTable150                               4
     ??DataTable151                               4
     ??DataTable157                               4
     ??DataTable157_1                             4
     ??DataTable157_2                             4
     ??DataTable157_3                             4
     ??DataTable157_4                             4
     ??DataTable159                               4
     ??DataTable159_1                             4
     ??DataTable159_2                             4
     ??DataTable159_3                             4
     ??DataTable159_4                             4
     ??DataTable159_5                             4
     ??DataTable159_6                             4
     ??DataTable159_7                             4
     ??DataTable159_8                             4
     ??DataTable159_9                             4
     ??DataTable159_10                            4
     ??DataTable159_11                            4
     ??DataTable160                               4
     ??DataTable164                               4
     ??DataTable164_1                             4
     ??DataTable164_2                             4
     ??DataTable165                               4
     ??DataTable172                               4
     ??DataTable172_1                             4
     ??DataTable172_2                             4
     ??DataTable172_3                             4
     ??DataTable172_4                             4
     ??DataTable172_5                             4
     ??DataTable172_6                             4
     ??DataTable173                               4
     ??DataTable175                               4
     ??DataTable175_1                             4
     ??DataTable175_2                             4
     ??DataTable175_3                             4
     ??DataTable175_4                             4
     ??DataTable175_5                             4
     ??DataTable176                               4
     ??DataTable176_1                             4
     ??DataTable177                               4
     ??DataTable178                               4
     ??DataTable178_1                             4
     ??DataTable178_2                             4
     ??DataTable179                               4
     ??DataTable179_1                             4
     ??DataTable179_2                             4
     ??DataTable181                               4
     ??DataTable181_1                             4
     ??DataTable182                               4
     ??DataTable182_1                             4
     ??DataTable182_2                             4
     ??DataTable182_3                             4
     ??DataTable182_4                             4
     ??DataTable182_5                             4
     ??DataTable182_6                             4
     ??DataTable183                               4
     ??DataTable183_1                             4
     ??DataTable183_2                             4
     ??DataTable183_3                             4
     ??DataTable183_4                             4
     ??DataTable183_5                             4
     ??DataTable183_6                             4
     ??DataTable183_7                             4
     ??DataTable183_8                             4
     ??DataTable183_9                             4
     ??DataTable184                               4
     ??DataTable184_1                             4
     ??DataTable184_2                             4
     ??DataTable184_3                             4
     ??DataTable184_4                             4
     ??DataTable184_5                             4
     ??DataTable184_6                             4
     ??DataTable184_7                             4
     ??DataTable184_8                             4
     ??DataTable184_9                             4
     ??DataTable185                               4
     ??DataTable185_1                             4
     ??DataTable185_2                             4
     ??DataTable185_3                             4
     ??DataTable185_4                             4
     ??DataTable185_5                             4
     ??DataTable185_6                             4
     ??DataTable185_7                             4
     ??DataTable185_8                             4
     ??DataTable185_9                             4
     ??DataTable185_10                            4
     ??DataTable185_11                            4
     ??DataTable185_12                            4
     ??DataTable185_13                            4
     ??DataTable185_14                            4
     ??DataTable186                               4
     ??DataTable186_1                             4
     ??DataTable186_2                             4
     ??DataTable186_3                             4
     ??DataTable186_4                             4
     ??DataTable190                               4
     ??DataTable190_1                             4
     ??DataTable190_2                             4
     ??DataTable190_3                             4
     ??DataTable190_4                             4
     ??DataTable191                               4
     ??DataTable191_1                             4
     ??DataTable191_2                             4
     ??DataTable191_3                             4
     ??DataTable195                               4
     ??DataTable196                               4
     ??DataTable197                               4
     ??DataTable197_1                             4
     ??DataTable197_2                             4
     ??DataTable197_3                             4
     ??DataTable197_4                             4
     ??DataTable197_5                             4
     ??DataTable197_6                             4
     ??DataTable197_7                             4
     ??DataTable198                               4
     ??DataTable198_1                             4
     ??DataTable199                               4
     ??DataTable200                               4
     ??DataTable201                               4
     ??DataTable201_1                             4
     ??DataTable201_2                             4
     ??DataTable201_3                             4
     ??DataTable201_4                             4
     ??DataTable201_5                             4
     ??DataTable201_6                             4
     ??DataTable201_7                             4
     ??DataTable201_8                             4
     ??DataTable201_9                             4
     ??DataTable201_10                            4
     ??DataTable201_11                            4
     ??DataTable202                               4
     ??DataTable202_1                             4
     ??DataTable202_2                             4
     ??DataTable202_3                             4
     ??DataTable202_4                             4
     ??DataTable204                               4
     ??DataTable204_1                             4
     ??DataTable204_2                             4
     ??DataTable204_3                             4
     ??DataTable205                               4
     ??DataTable205_1                             4
     ??DataTable206                               4
     ??DataTable206_1                             8
     ??DataTable207                               4
     ??DataTable207_1                             4
     ??DataTable207_2                             4
     ??DataTable207_3                             4
     ??DataTable207_4                             4
     ??DataTable207_5                             4
     ??DataTable207_6                             4
     ??DataTable207_7                             4
     ??DataTable207_8                             4
     ??DataTable207_9                             4
     ??DataTable207_10                            4
     ??DataTable207_11                            4
     ??DataTable207_12                            4
     ??DataTable207_13                            4
     ??DataTable207_14                            4
     ??DataTable207_15                            4
     ??DataTable207_16                            4
     ?<Constant "Main Menu">                     12
     ?<Constant "Go Racing Info">                16
     ?<Constant "OK">                             4
     ?<Constant "Race Setup Info">               16
     ?<Constant "Review Sessions Info">          24
     ?<Constant "System Setup Info">             20
     ?<Constant "Driver Selection Info">         24
     ?<Constant "Tutorial">                      12
     ?<Constant "System Status">                 16
     ?<Constant "Saving your session data">      28
     ?<Constant "Please Wait">                   12
     ?<Constant "CANCEL">                         8
     ?<Constant "ERROR">                          8
     ?<Constant "This function is not ...">      32
     ?<Constant "Vehicle Selection Info">        24
     ?<Constant "Track Selection Info">          24
     ?<Constant "Laps/Qualifying Info">          24
     ?<Constant "Display Settings Info">         24
     ?<Constant "Units Selection Info">          24
     ?<Constant "Time Zone Info">                16
     ?<Constant "Auto Start Info">               16
     ?<Constant "System Storage Info">           20
     ?<Constant "Predictive Scale Info">         24
     ?<Constant "Vehicle Settings Info">         24
     ?<Constant "Aero/Grip Info">                16
     ?<Constant "Tach Settings Info">            20
     ?<Constant "Car Metrics Info">              20
     ?<Constant "Gear Ratio Info">               16
     ?<Constant "Inputs Info">                   12
     ?<Constant "Vehicle Weight Info">           20
     ?<Constant "Camera Setup Info">             20
     ?<Constant "Warning RPM Info">              20
     ?<Constant "Redline RPM Info">              20
     ?<Constant "Engine Cyl RPM Info">           20
     ?<Constant "Powerband RPM Info">            20
     ?<Constant "Max RPM Info">                  16
     ?<Constant "Analog Input Info">             20
     ?<Constant "Digital Input Info">            20
     ?<Constant "Check Times Info">              20
     ?<Constant "Track Settings Info">           20
     ?<Constant "Track Type Info">               16
     ?<Constant "Hold Time Info">                16
     ?<Constant "Start/Finish Line Info">        24
     ?<Constant "Predictive Lap Info">           20
     ?<Constant "Tire Size Selection Info">      28
     ?<Constant "Diff Ratio Info">               16
     ?<Constant "Transmission Ratios Info">      28
     ?<Constant "Analog Scale Info">             20
     ?<Constant "Analog Alarm Info">             20
     ?<Constant "Digital Alarm Info">            20
     ?<Constant "Tire Size Info">                16
     ?<Constant "Choose Track Info">             20
     ?<Constant "Personalize Unit Info">         24
     ?<Constant "Autocross Stage Info">          24
     ?<Constant "Drag Stage Info">               16
     ?<Constant "Camera Delay Info">             20
     ?<Constant "Camera Selection Info">         24
     ?<Constant "Record Speed Info">             20
     ?<Constant "without an SD card in...">      32
     ?<Constant "">                               1
     ?<Constant " ">                              2
     ?<Constant "%d">                             4
     ?<Constant "\n">                             2
     ?<Constant {0, 0, 480, 272}>                 8
     ?<Constant "Date & Time">                   12
     ?<Constant "Session">                        8
     ?<Constant "Track / ">                      12
     ?<Constant "Mode">                           8
     ?<Constant "Delete">                         8
     ?<Constant "Details">                        8
     ?<Constant "\n\nSYSTEM STATUS\nOwner...">   48
     ?<Constant "Inputs Configuration:\n">       24
     ?<Constant "\nAdesto Dataflash">            20
     ?<Constant "\nAtmel Dataflash">             20
     ?<Constant "\nTraqDash Bootloader ...">     28
     ?<Constant "\nTraqDash Firmware %2...">     52
     ?<Constant "\n\nDU Ser# %u, HW %2.2...">    44
     ?<Constant "SU Ser# %u, HW %2.2f,...">      40
     ?<Constant "\n\nSD Card Free Space ...">    36
     ?<Constant "\n\nNo SD card present">        24
     ?<Constant "Analog Input %d: ">             20
     ?<Constant "Disabled">                      12
     ?<Constant "Digital Input %d: ">            20

 
    838 bytes in section .bss
  1 008 bytes in section .data
    161 bytes in section .rodata
 48 044 bytes in section .text
 
 48 044 bytes of CODE  memory
    161 bytes of CONST memory
  1 846 bytes of DATA  memory

Errors: none
Warnings: none
