###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:13 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\VehicleSettingsScreens.c                    #
#    Command line =  C:\DUII\DUII\VehicleSettingsScreens.c -D DEBUG=1 -D      #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\VehicleSettingsScreens.lst #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\VehicleSettingsScreens.o    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\VehicleSettingsScreens.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2009  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.00 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : MainTask.C
     19          Purpose     : Main program, called from after main after initialisation
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          #include <stdio.h>
     23          #include <stdlib.h>
     24          #include <string.h>
     25          #include "DUII.h"
     26          #include "GUI.h"
     27          #include "commondefs.h"
     28          #include "DIALOG.h"
     29          #include "ConfigScreens.h"
     30          #include "GeneralConfig.h"
     31          #include "GaugeScreen.h"
     32          #include "FlashReadWrite.h"
     33          #include "GMeterScreen.h"
     34          #include "RunningGauges.h"
     35          #include "VehicleSettingsScreens.h"
     36          #include "DataHandler.h"
     37          #include "StandardList.h"
     38          #include "TachSetupScreens.h"
     39          #include "InputScreens.h"
     40          #include "SystemSettingsScreens.h"
     41          #include "GearingScreens.h"
     42          #include "Utilities.h"
     43          #include "LEDHandler.h"
     44          #ifdef _WINDOWS
     45          #include "SIMConf.h"
     46          #endif
     47          
     48          /*********************************************************************
     49          *
     50          *       Local Variables
     51          *
     52          **********************************************************************
     53          */
     54          BUTTON_Handle hCurrentRPMBtn;
     55          BUTTON_Handle hBtnMobius, hBtnPrimeX, hBtnMini, hBtnNone;
     56          GUI_HWIN hAeroGripScreen, hCameraSelection, hCameraDelay, hTraqdashCam;
     57          int ones, tenths;
     58          int testCamera = false;
     59          WM_HTIMER hCameraDelayTimer;
     60          
     61          
     62          /*********************************************************************
     63          *
     64          *       External data and code
     65          *
     66          **********************************************************************
     67          */
     68          // Note that the button bitmaps must be encoded for the appropriate color
     69          // conversion selected in LCDConf.c
     70          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
     71          extern GUI_CONST_STORAGE GUI_BITMAP bmleftarrow;
     72          extern GUI_CONST_STORAGE GUI_BITMAP bmBackground;
     73          extern GUI_CONST_STORAGE GUI_BITMAP bmBackgroundWithPanel;
     74          extern GUI_CONST_STORAGE GUI_BITMAP bmSingleSpinner;
     75          extern GUI_CONST_STORAGE GUI_BITMAP bmNarrowSpinner;
     76          extern GUI_CONST_STORAGE GUI_BITMAP bmYellowButton;
     77          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenButton;
     78          extern GUI_CONST_STORAGE GUI_BITMAP bmOrangeButton;
     79          extern GUI_CONST_STORAGE GUI_BITMAP bmRedButton;
     80          extern GUI_CONST_STORAGE GUI_BITMAP bmBlueButton;
     81          extern GUI_CONST_STORAGE GUI_BITMAP bmMediumBlueButton;
     82          extern GUI_CONST_STORAGE GUI_BITMAP bmMediumBlueButtonDark;
     83          extern GUI_CONST_STORAGE GUI_BITMAP bmGrayButton;
     84          extern GUI_CONST_STORAGE GUI_BITMAP bmTachSetup;
     85          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenCheck;
     86          extern GUI_CONST_STORAGE GUI_BITMAP bmCameraText;
     87          extern GUI_CONST_STORAGE GUI_BITMAP bmInputsBackground;
     88          extern GUI_CONST_STORAGE GUI_BITMAP bmInputText;
     89          extern GUI_CONST_STORAGE GUI_BITMAP bmBrownInputButton;
     90          extern GUI_CONST_STORAGE GUI_BITMAP bmGreenInputButton;
     91          extern GUI_CONST_STORAGE GUI_BITMAP bmRedInputButton;
     92          extern GUI_CONST_STORAGE GUI_BITMAP bmSmallBlackButton;
     93          extern GUI_CONST_STORAGE GUI_BITMAP bmInputs;
     94          extern GUI_CONST_STORAGE GUI_BITMAP bmCamera;
     95          extern GUI_CONST_STORAGE GUI_BITMAP bmCameraSetupBanner;
     96          extern GUI_CONST_STORAGE GUI_BITMAP bmTach;
     97          extern GUI_CONST_STORAGE GUI_BITMAP bmCarMetricsButton;
     98          extern GUI_CONST_STORAGE GUI_BITMAP bmCarMetricsBanner;
     99          extern GUI_CONST_STORAGE GUI_BITMAP bmAeroandTire;
    100          extern GUI_CONST_STORAGE GUI_BITMAP bmWeight;
    101          extern GUI_CONST_STORAGE GUI_BITMAP bmVehicleWeight;
    102          extern GUI_CONST_STORAGE GUI_BITMAP bmGearRatio;
    103          extern GUI_CONST_STORAGE GUI_BITMAP bmGearing;
    104          extern GUI_CONST_STORAGE GUI_BITMAP bmVehicleSettingsText;
    105          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderBlue;
    106          extern GUI_CONST_STORAGE GUI_BITMAP bmSliderGreen;
    107          extern GUI_CONST_STORAGE GUI_BITMAP bmTachSliderGreen;
    108          extern GUI_CONST_STORAGE GUI_BITMAP bmTachSliderYellow;
    109          extern GUI_CONST_STORAGE GUI_BITMAP bmTachSliderRed;
    110          extern GUI_CONST_STORAGE GUI_BITMAP bmTraqdashCamBanner;
    111          
    112          extern char *ZeroThroughNine[];
    113          extern char *ZeroThroughNinty[];
    114          
    115          extern void InputsSelectionPaint(WM_HWIN);
    116          extern void PowerOffUnit(WM_HWIN owner, char reset, int delay);
    117          extern void DisplaySplashScreen1(void);
    118          extern char gpsSimulate;
    119          
    120          /*********************************************************************
    121          *
    122          *       Local Prototypes
    123          *
    124          **********************************************************************
    125          */
    126          void DisplayTachSelection(WM_HWIN);
    127          void TachSelectionPaint(WM_HWIN);
    128          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen);
    129          static int GetScreenID(int Id);
    130          void RSDisplayInputsSelection(WM_HWIN hParent);
    131          void DisplayInputsSelection(WM_HWIN hParent, int idA0, int idA1, int idD4, int idA2, int idA3, int idD5);
    132          void InputsSelectionPaint(WM_HWIN);
    133          void DisplayGearRatio(WM_HWIN);
    134          void GearRatioPaint(WM_HWIN);
    135          void AeroGripScreenCallback(WM_MESSAGE * pMsg);
    136          void AeroGripScreenPaint(void);
    137          void CameraSelectionCallback(WM_MESSAGE * pMsg);
    138          void CameraDelayCallback(WM_MESSAGE * pMsg);
    139          void CarMetricsSelectionPaint(WM_HWIN hParent);
    140          void CameraSetupPaint(WM_HWIN hParent);
    141          void DisplayCarMetricsSelection(WM_HWIN hParent);
    142          void DisplayCameraSetupSelection(WM_HWIN hParent);
    143          void WeightSelectionPaint(WM_HWIN hParent);
    144          void DisplayWeightSelection(WM_HWIN hParent);
    145          int VehicleSettingsPopUp(int screen);
    146          void AutoFixTach(void);
    147          void AutoFixGears(void);
    148          void AutoFixWeight(void);
    149          
    150          static void VehicleSettingMainScreenCallback(WM_MESSAGE * pMsg);
    151          void SetAnalogColorAndText(BUTTON_Handle hBtn, int index);
    152          void SetDigitalColorAndText(BUTTON_Handle hBtn, int index);
    153          void SetRedlineButtonText(void);
    154          void SetYellowButtonText(void);
    155          void SetNumCylsButtonText(void);
    156          void ResetSliderParams(void);
    157          void UpdateAll(void);
    158          void UpdateTime(void);
    159          void UpdateDistance(void);
    160          void UpdateRPM(void);
    161          void TestCameras(int);
    162          void TraqdashCamPaint(void);
    163          static void TraqdashCamCallback(WM_MESSAGE * pMsg);
    164          enum LENGTH { SHORT, LONG };
    165          const char *GetTraqdashCameraName(enum LENGTH length);
    166          void SetCameraButtonColors(void);
    167          void UpdateCameraVariables(void);
    168          int CustomDelay( void );
    169          
    170          
    171          /*********************************************************************
    172          *
    173          *       Tables and Constants
    174          *
    175          **********************************************************************
    176          */
    177          struct SCREEN_LIST VehicleSettingsScreenList[NUM_VEHICLE_SETTINGS_SCREENS+1] = {
    178          	{ TACH_SELECTION, DisplayTachSelection, TachSelectionPaint },
    179          	{ CARMETRICS_SELECTION, DisplayCarMetricsSelection, CarMetricsSelectionPaint },
    180          	{ GEARRATIO_SELECTION, DisplayGearRatio, GearRatioPaint },
    181          	{ INPUTS_SELECTION, RSDisplayInputsSelection, InputsSelectionPaint },
    182          	{ WEIGHT_SELECTION, DisplayWeightSelection, WeightSelectionPaint },
    183          	{ CAMERA_SETUP_SELECTION, DisplayCameraSetupSelection, CameraSetupPaint },
    184          	{ -1, NULL, NULL }
    185          };
    186          
    187          //
    188          // Widget IDs
    189          //
    190          #define	CAMERA_LIST				GUI_ID_LISTWHEEL0
    191          #define	WEIGHT_WHEEL_1			GUI_ID_LISTWHEEL1
    192          #define	WEIGHT_WHEEL_2			GUI_ID_LISTWHEEL2
    193          #define	WEIGHT_WHEEL_3			GUI_ID_LISTWHEEL3
    194          
    195          #define	GEAR_RATIO_BUTTON		GUI_ID_USER + 1
    196          #define	TIRE_SIZE_BUTTON		GUI_ID_USER + 2
    197          #define	DIFF_RATIO_BUTTON		GUI_ID_USER + 3
    198          #define	TRANS_RATIO_BUTTON		GUI_ID_USER + 4
    199          #define	HELP_BUTTON				GUI_ID_USER + 5
    200          #define	WARNING_BUTTON			GUI_ID_USER + 6
    201          #define	REDLINE_BUTTON			GUI_ID_USER + 7
    202          #define	CYLINDERS_BUTTON		GUI_ID_USER + 8
    203          
    204          #define	END_BUTTON				GUI_ID_USER + 10
    205          #define	PEAK_BUTTON				GUI_ID_USER + 11
    206          #define	ANALOG0_BUTTON			GUI_ID_USER + 12
    207          #define	ANALOG1_BUTTON			GUI_ID_USER + 13
    208          #define	ANALOG2_BUTTON			GUI_ID_USER + 14
    209          #define	ANALOG3_BUTTON			GUI_ID_USER + 15
    210          #define	DIGITAL4_BUTTON			GUI_ID_USER + 16
    211          #define	DIGITAL5_BUTTON			GUI_ID_USER + 17
    212          #define	SHOW_RPM				GUI_ID_USER + 18
    213          #define	SHOW_SPEED				GUI_ID_USER + 19
    214          #define	WIND_BUTTON				GUI_ID_USER + 20
    215          #define	ROLL_BUTTON				GUI_ID_USER + 21
    216          
    217          #define RESET_TIME_BUTTON		GUI_ID_USER + 22
    218          #define RESET_DIST_BUTTON		GUI_ID_USER + 23
    219          #define RESET_RPM_BUTTON		GUI_ID_USER + 24
    220          #define AERO_GRIP_BUTTON		GUI_ID_USER + 25
    221          #define RESET_ALL_BUTTON		GUI_ID_USER + 26
    222          
    223          #define USB_CAM_BUTTON			GUI_ID_USER + 27
    224          #define SENSOR_UNIT_BUTTON		GUI_ID_USER + 29
    225          #define TEST_CAM_BUTTON			GUI_ID_USER + 30
    226          
    227          #define MOBIUS_BUTTON			GUI_ID_USER + 31
    228          #define REPLAY_PRIMEX_BUTTON	GUI_ID_USER + 32
    229          #define REPLAY_MINI_BUTTON		GUI_ID_USER + 33
    230          #define	NONE_BUTTON				GUI_ID_USER + 34
    231          #define CUSTOM_DELAY_BUTTON		GUI_ID_USER + 35
    232          
    233          #define	REDLINE_SLIDER			GUI_ID_SLIDER0
    234          #define	YELLOW_SLIDER			GUI_ID_SLIDER1
    235          #define	GREEN_SLIDER			GUI_ID_SLIDER2
    236          #define	WIND_SLIDER				GUI_ID_SLIDER3
    237          #define	ROLL_SLIDER				GUI_ID_SLIDER4
    238          
    239          // Stand-alone screen - not used at the same time as the above enumeration!
    240          #define	TACH_BUTTON				GUI_ID_USER + 1
    241          #define	CARMETRICS_BUTTON		GUI_ID_USER + 2
    242          #define	GEARRATIO_BUTTON		GUI_ID_USER + 3
    243          #define	INPUTS_BUTTON			GUI_ID_USER + 4
    244          #define	WEIGHT_BUTTON			GUI_ID_USER + 5
    245          #define	CAMERA_BUTTON			GUI_ID_USER + 6
    246          
    247          #define	SLIDER_RANGE			1000
    248          #define	SLIDER_BALL_RADIUS		16
    249          #define	SLIDER_START			70
    250          #define	RPM_SLIDER_X_SIZE		284
    251          #define	MEDIUM_BUTTON_WIDTH		97
    252          
    253          
    254          struct CAMERAS {
    255          	const char *pName;
    256          	const char *pInterface;
    257          	unsigned char enumeration;
    258          };
    259          
    260          struct CAMERAS NewCameras[] = {
    261          	{ "None",				"None",			CAMERA_NONE },
    262          	{ "Mobius",				"TraqData USB", CAMERA_MOBIUS },
    263          	{ "Replay Mini",		"TraqData USB", CAMERA_REPLAY_MINI },
    264          	{ "Replay Prime X",		"TraqData USB", CAMERA_REPLAY_PRIMEX },
    265          	{ "Replay XD1080",		"TraqData USB", CAMERA_REPLAY_XD_USB },
    266          	{ "Replay XD1080",		"TraqData HD2", CAMERA_REPLAY_HD },
    267          	{ "GoPro HERO1 & 2",	"TraqData/Sync Pro", CAMERA_GOPRO_HD_PRO },
    268          	{ "GoPro HERO1 & 2",	"TraqData HD2", CAMERA_GOPRO_HD },
    269          	{ "Sony HD",			"TraqData HD",	CAMERA_SONY_HD },
    270          	{ "RaceCam HD",			"TraqData HD",	CAMERA_RACECAM_HD },
    271          	{ "ChaseCam SD LANC",	"TraqData HD",	CAMERA_CHASECAM_LANC },
    272          	{ NULL,					NULL,			CAMERA_NONE }
    273          };
    274          
    275          #define	INVALID_TACH_SETTINGS	1
    276          #define	INVALID_GEAR_RATIOS		2
    277          #define	INVALID_WEIGHT			3
    278          #define	NO_GEAR_RATIOS			4
    279          #define	GOPROHD_REV_WARNING		5
    280          #define	CHANGED_CAMERA_WARNING	6
    281          #define	RESET_CAMERA_WARNING	7
    282          #define	SU_REV370_WARNING		8
    283          
    284          #define	CAMERA_TEST_DELAY	1000
    285          
    286          /*********************************************************************
    287          *
    288          *       Local Variables
    289          *
    290          **********************************************************************
    291          */
    292          static WM_HWIN hVehicleSettingsScreens;
    293          static int clickedOnVSScreen;

   \                                 In section .bss, align 4
    294          static int clickedOnVSMScreen;
   \                     clickedOnVSMScreen:
   \   00000000                      DS8 4
    295          static LISTWHEEL_Handle hWeightWheel1, hWeightWheel2, hWeightWheel3;
    296          SLIDER_Handle hWindSlider, hRollSlider;
    297          SLIDER_Handle hRedlineSlider, hYellowSlider, hCylindersSlider;
    298          static BUTTON_Handle hAnalog0, hAnalog1, hAnalog2, hAnalog3, hDigital4, hDigital5;
    299          BUTTON_Handle hRedlineBtn, hYellowBtn, hNumCylsBtn;
    300          
    301          BUTTON_Handle hShowSpeedCheck, hShowRPMCheck;
    302          WM_HWIN hVehicleSettingMainScreen;
   \                     hVehicleSettingMainScreen:
   \   00000004                      DS8 4

   \                                 In section .bss, align 4
   \                     hAnalog0:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 4
   \   0000000C                      DS8 4
   \   00000010                      DS8 4
   \   00000014                      DS8 4

   \                                 In section .data, align 4
   \                     VehicleSettingsScreenList:
   \   00000000   00000000....       DC32 0, DisplayTachSelection, TachSelectionPaint, 1
   \              ............
   \              01000000    
   \   00000010   ............       DC32 DisplayCarMetricsSelection, CarMetricsSelectionPaint, 2
   \              ....02000000
   \   0000001C   ............       DC32 DisplayGearRatio, GearRatioPaint, 3, RSDisplayInputsSelection
   \              ....03000000
   \              ........    
   \   0000002C   ........0400       DC32 InputsSelectionPaint, 4, DisplayWeightSelection
   \              0000........
   \   00000038   ........0500       DC32 WeightSelectionPaint, 5, DisplayCameraSetupSelection
   \              0000........
   \   00000044   ........FFFF       DC32 CameraSetupPaint, -1, 0H, 0H
   \              FFFF00000000
   \              00000000    
   \                     NewCameras:
   \   00000054   ............       DC32 `?<Constant "None">`, `?<Constant "None">`
   \              ....        
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 `?<Constant "Mobius">`, `?<Constant "TraqData USB">`
   \              ....        
   \   00000068   0E000000           DC8 14, 0, 0, 0
   \   0000006C   ............       DC32 `?<Constant "Replay Mini">`, `?<Constant "TraqData USB">`
   \              ....        
   \   00000074   0C000000           DC8 12, 0, 0, 0
   \   00000078   ............       DC32 `?<Constant "Replay Prime X">`, `?<Constant "TraqData USB">`
   \              ....        
   \   00000080   0D000000           DC8 13, 0, 0, 0
   \   00000084   ............       DC32 `?<Constant "Replay XD1080">`, `?<Constant "TraqData USB">`
   \              ....        
   \   0000008C   0A000000           DC8 10, 0, 0, 0
   \   00000090   ............       DC32 `?<Constant "Replay XD1080">`, `?<Constant "TraqData HD2">`
   \              ....        
   \   00000098   09000000           DC8 9, 0, 0, 0
   \   0000009C   ............       DC32 `?<Constant "GoPro HERO1 & 2">`, `?<Constant "TraqData/Sync Pro">`
   \              ....        
   \   000000A4   0B000000           DC8 11, 0, 0, 0
   \   000000A8   ............       DC32 `?<Constant "GoPro HERO1 & 2">`, `?<Constant "TraqData HD2">`
   \              ....        
   \   000000B0   08000000           DC8 8, 0, 0, 0
   \   000000B4   ............       DC32 `?<Constant "Sony HD">`, `?<Constant "TraqData HD">`
   \              ....        
   \   000000BC   01000000           DC8 1, 0, 0, 0
   \   000000C0   ............       DC32 `?<Constant "RaceCam HD">`, `?<Constant "TraqData HD">`
   \              ....        
   \   000000C8   02000000           DC8 2, 0, 0, 0
   \   000000CC   ............       DC32 `?<Constant "ChaseCam SD LANC">`, `?<Constant "TraqData HD">`
   \              ....        
   \   000000D4   04000000           DC8 4, 0, 0, 0
   \   000000D8   000000000000       DC32 0H, 0H
   \              0000        
   \   000000E0   00000000           DC8 0, 0, 0, 0
   \                     hCurrentRPMBtn:
   \   000000E4   00000000           DC8 0, 0, 0, 0
   \                     hBtnMobius:
   \   000000E8   00000000           DC8 0, 0, 0, 0
   \                     hBtnPrimeX:
   \   000000EC   00000000           DC8 0, 0, 0, 0
   \                     hBtnMini:
   \   000000F0   00000000           DC8 0, 0, 0, 0
   \                     hBtnNone:
   \   000000F4   00000000           DC8 0, 0, 0, 0
   \                     hAeroGripScreen:
   \   000000F8   00000000           DC8 0, 0, 0, 0
   \                     hCameraSelection:
   \   000000FC   00000000           DC8 0, 0, 0, 0
   \                     hTraqdashCam:
   \   00000100   00000000           DC8 0, 0, 0, 0
   \                     testCamera:
   \   00000104   00000000           DC32 0
   \                     hCameraDelayTimer:
   \   00000108   00000000           DC8 0, 0, 0, 0
   \   0000010C   00000000           DC8 0, 0, 0, 0
   \   00000110   00000000           DC8 0, 0, 0, 0
   \   00000114   00000000           DC8 0, 0, 0, 0
   \   00000118   00000000           DC8 0, 0, 0, 0
   \   0000011C   00000000           DC8 0, 0, 0, 0
   \                     hWindSlider:
   \   00000120   00000000           DC8 0, 0, 0, 0
   \                     hRollSlider:
   \   00000124   00000000           DC8 0, 0, 0, 0
   \                     hRedlineSlider:
   \   00000128   00000000           DC8 0, 0, 0, 0
   \                     hYellowSlider:
   \   0000012C   00000000           DC8 0, 0, 0, 0
   \                     hCylindersSlider:
   \   00000130   00000000           DC8 0, 0, 0, 0
   \                     hRedlineBtn:
   \   00000134   00000000           DC8 0, 0, 0, 0
   \                     hYellowBtn:
   \   00000138   00000000           DC8 0, 0, 0, 0
   \                     hNumCylsBtn:
   \   0000013C   00000000           DC8 0, 0, 0, 0
   \                     hShowSpeedCheck:
   \   00000140   00000000           DC8 0, 0, 0, 0
   \                     hShowRPMCheck:
   \   00000144   00000000           DC8 0, 0, 0, 0
   \   00000148   FFFFFFFF           DC32 -1
    303          static char redFirstTime, yellowFirstTime;
    304          static char originalSUCameraSelection, originalTDCameraSelection, newSUCameraSelection, newTDCameraSelection;
    305          static int tempCameraIndex = -1;			// Set to -1 to indicate never set.  Once set it will remain valid for this power cycle
    306          LISTVIEW_Handle hCameraList;
   \                     hCameraList:
   \   0000014C   00000000           DC8 0, 0, 0, 0
   \   00000150   00                 DC8 0
   \   00000151   00                 DC8 0
   \   00000152   00                 DC8 0
   \   00000153   00                 DC8 0
   \   00000154   00                 DC8 0
   \   00000155   00                 DC8 0
    307          
    308          
    309          /*********************************************************************
    310          *
    311          *       Public code
    312          *
    313          **********************************************************************
    314          */
    315          
    316          
    317          ///////////////////////////////////////////////////////////////////////////
    318          //
    319          // Special intermediate screen(s)
    320          //

   \                                 In section .text, align 4, keep-with-next
    321          void Display_VehicleSettingMainScreen(WM_HWIN hPrev)
    322          {
   \                     Display_VehicleSettingMainScreen:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
    323          BUTTON_Handle hButton;
    324          
    325          	if (hPrev)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??Display_VehicleSettingMainScreen_0
    326          		WM_DeleteWindow(hPrev);
   \   00000010   ........           BL       WM_DeleteWindow
    327          
    328          	SetScreenScrollingHOnly();
   \                     ??Display_VehicleSettingMainScreen_0:
   \   00000014   ........           LDR      R0,??DataTable149
   \   00000018   0210A0E3           MOV      R1,#+2
   \   0000001C   001080E5           STR      R1,[R0, #+0]
    329          
    330          	//GeneralConfigIgnoreNextKeyRelease();
    331          //	firstTimeThrough = true;
    332          
    333          	SetScreenType(VEHICLE_SETTING_SCREEN_TYPE);
   \   00000020   0800A0E3           MOV      R0,#+8
   \   00000024   ........           BL       SetScreenType
    334          
    335          	if ((hVehicleSettingMainScreen = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, VehicleSettingMainScreenCallback, 0)) <= 0)
   \   00000028   0000A0E3           MOV      R0,#+0
   \   0000002C   08008DE5           STR      R0,[SP, #+8]
   \   00000030   ........           LDR      R0,??DataTable149_1
   \   00000034   443FA0E3           MOV      R3,#+272
   \   00000038   04008DE5           STR      R0,[SP, #+4]
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   800D80E3           ORR      R0,R0,#0x2000
   \   00000044   00008DE5           STR      R0,[SP, #+0]
   \   00000048   782FA0E3           MOV      R2,#+480
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   0000A0E3           MOV      R0,#+0
   \   00000054   ........           BL       WM_CreateWindow
   \   00000058   ........           LDR      R4,??DataTable149_3
   \   0000005C   010050E3           CMP      R0,#+1
   \   00000060   040084E5           STR      R0,[R4, #+4]
   \   00000064   000000AA           BGE      ??Display_VehicleSettingMainScreen_1
    336          		SystemError();
   \   00000068   ........           BL       SystemError
    337          
    338          	hButton = BUTTON_CreateEx(30, 38, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, TACH_BUTTON);
   \                     ??Display_VehicleSettingMainScreen_1:
   \   0000006C   0100A0E3           MOV      R0,#+1
   \   00000070   800E80E3           ORR      R0,R0,#0x800
   \   00000074   0C008DE5           STR      R0,[SP, #+12]
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   08008DE5           STR      R0,[SP, #+8]
   \   00000080   0200A0E3           MOV      R0,#+2
   \   00000084   04008DE5           STR      R0,[SP, #+4]
   \   00000088   040094E5           LDR      R0,[R4, #+4]
   \   0000008C   7330A0E3           MOV      R3,#+115
   \   00000090   00008DE5           STR      R0,[SP, #+0]
   \   00000094   7F20A0E3           MOV      R2,#+127
   \   00000098   2610A0E3           MOV      R1,#+38
   \   0000009C   1E00A0E3           MOV      R0,#+30
   \   000000A0   ........           BL       BUTTON_CreateEx
    339          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmTach);
   \   000000A4   ........           LDR      R2,??DataTable149_4
   \   000000A8   0010A0E3           MOV      R1,#+0
   \   000000AC   ........           BL       BUTTON_SetBitmap
    340          
    341          	hButton = BUTTON_CreateEx(177, 38, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, CARMETRICS_BUTTON);
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   800E80E3           ORR      R0,R0,#0x800
   \   000000B8   0C008DE5           STR      R0,[SP, #+12]
   \   000000BC   0000A0E3           MOV      R0,#+0
   \   000000C0   08008DE5           STR      R0,[SP, #+8]
   \   000000C4   0200A0E3           MOV      R0,#+2
   \   000000C8   04008DE5           STR      R0,[SP, #+4]
   \   000000CC   040094E5           LDR      R0,[R4, #+4]
   \   000000D0   7330A0E3           MOV      R3,#+115
   \   000000D4   00008DE5           STR      R0,[SP, #+0]
   \   000000D8   7F20A0E3           MOV      R2,#+127
   \   000000DC   2610A0E3           MOV      R1,#+38
   \   000000E0   B100A0E3           MOV      R0,#+177
   \   000000E4   ........           BL       BUTTON_CreateEx
    342          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmCarMetricsButton);
   \   000000E8   ........           LDR      R2,??DataTable151
   \   000000EC   0010A0E3           MOV      R1,#+0
   \   000000F0   ........           BL       BUTTON_SetBitmap
    343          
    344          	hButton = BUTTON_CreateEx(324, 38, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, GEARRATIO_BUTTON);
   \   000000F4   0300A0E3           MOV      R0,#+3
   \   000000F8   800E80E3           ORR      R0,R0,#0x800
   \   000000FC   0C008DE5           STR      R0,[SP, #+12]
   \   00000100   0000A0E3           MOV      R0,#+0
   \   00000104   08008DE5           STR      R0,[SP, #+8]
   \   00000108   0200A0E3           MOV      R0,#+2
   \   0000010C   04008DE5           STR      R0,[SP, #+4]
   \   00000110   040094E5           LDR      R0,[R4, #+4]
   \   00000114   7330A0E3           MOV      R3,#+115
   \   00000118   00008DE5           STR      R0,[SP, #+0]
   \   0000011C   7F20A0E3           MOV      R2,#+127
   \   00000120   2610A0E3           MOV      R1,#+38
   \   00000124   510FA0E3           MOV      R0,#+324
   \   00000128   ........           BL       BUTTON_CreateEx
    345          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmGearRatio);
   \   0000012C   ........           LDR      R2,??DataTable152
   \   00000130   0010A0E3           MOV      R1,#+0
   \   00000134   ........           BL       BUTTON_SetBitmap
    346          
    347          	hButton = BUTTON_CreateEx(30, 156, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, INPUTS_BUTTON);
   \   00000138   0400A0E3           MOV      R0,#+4
   \   0000013C   800E80E3           ORR      R0,R0,#0x800
   \   00000140   0C008DE5           STR      R0,[SP, #+12]
   \   00000144   0000A0E3           MOV      R0,#+0
   \   00000148   08008DE5           STR      R0,[SP, #+8]
   \   0000014C   0200A0E3           MOV      R0,#+2
   \   00000150   04008DE5           STR      R0,[SP, #+4]
   \   00000154   040094E5           LDR      R0,[R4, #+4]
   \   00000158   7330A0E3           MOV      R3,#+115
   \   0000015C   00008DE5           STR      R0,[SP, #+0]
   \   00000160   7F20A0E3           MOV      R2,#+127
   \   00000164   9C10A0E3           MOV      R1,#+156
   \   00000168   1E00A0E3           MOV      R0,#+30
   \   0000016C   ........           BL       BUTTON_CreateEx
    348          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmInputs);
   \   00000170   ........           LDR      R2,??DataTable153
   \   00000174   0010A0E3           MOV      R1,#+0
   \   00000178   ........           BL       BUTTON_SetBitmap
    349          
    350          	hButton = BUTTON_CreateEx(177, 156, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, WEIGHT_BUTTON);
   \   0000017C   0500A0E3           MOV      R0,#+5
   \   00000180   800E80E3           ORR      R0,R0,#0x800
   \   00000184   0C008DE5           STR      R0,[SP, #+12]
   \   00000188   0000A0E3           MOV      R0,#+0
   \   0000018C   08008DE5           STR      R0,[SP, #+8]
   \   00000190   0200A0E3           MOV      R0,#+2
   \   00000194   04008DE5           STR      R0,[SP, #+4]
   \   00000198   040094E5           LDR      R0,[R4, #+4]
   \   0000019C   7330A0E3           MOV      R3,#+115
   \   000001A0   00008DE5           STR      R0,[SP, #+0]
   \   000001A4   7F20A0E3           MOV      R2,#+127
   \   000001A8   9C10A0E3           MOV      R1,#+156
   \   000001AC   B100A0E3           MOV      R0,#+177
   \   000001B0   ........           BL       BUTTON_CreateEx
    351          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmWeight);
   \   000001B4   ........           LDR      R2,??DataTable153_1
   \   000001B8   0010A0E3           MOV      R1,#+0
   \   000001BC   ........           BL       BUTTON_SetBitmap
    352          
    353          	hButton = BUTTON_CreateEx(324, 156, 127, 115, hVehicleSettingMainScreen, WM_CF_SHOW, 0, CAMERA_BUTTON);
   \   000001C0   0600A0E3           MOV      R0,#+6
   \   000001C4   800E80E3           ORR      R0,R0,#0x800
   \   000001C8   0C008DE5           STR      R0,[SP, #+12]
   \   000001CC   0000A0E3           MOV      R0,#+0
   \   000001D0   08008DE5           STR      R0,[SP, #+8]
   \   000001D4   0200A0E3           MOV      R0,#+2
   \   000001D8   04008DE5           STR      R0,[SP, #+4]
   \   000001DC   040094E5           LDR      R0,[R4, #+4]
   \   000001E0   7330A0E3           MOV      R3,#+115
   \   000001E4   00008DE5           STR      R0,[SP, #+0]
   \   000001E8   7F20A0E3           MOV      R2,#+127
   \   000001EC   9C10A0E3           MOV      R1,#+156
   \   000001F0   510FA0E3           MOV      R0,#+324
   \   000001F4   ........           BL       BUTTON_CreateEx
    354          	BUTTON_SetBitmap(hButton, BUTTON_BI_UNPRESSED, &bmCamera);
   \   000001F8   ........           LDR      R2,??DataTable153_2
   \   000001FC   0010A0E3           MOV      R1,#+0
   \   00000200   ........           BL       BUTTON_SetBitmap
    355          
    356          	hScreenTimer = WM_CreateTimer(hVehicleSettingMainScreen, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   00000204   0030A0E3           MOV      R3,#+0
   \   00000208   7D20A0E3           MOV      R2,#+125
   \   0000020C   0010A0E3           MOV      R1,#+0
   \   00000210   040094E5           LDR      R0,[R4, #+4]
   \   00000214   ........           BL       WM_CreateTimer
   \   00000218   ........           LDR      R1,??DataTable154
    357          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   0000021C   10D08DE2           ADD      SP,SP,#+16
   \   00000220   000081E5           STR      R0,[R1, #+0]
   \   00000224   1040BDE8           POP      {R4,LR}
   \   00000228   ........           B        ResetNewScreen   ;; tailcall
    358          }
    359          

   \                                 In section .text, align 4, keep-with-next
    360          static void VehicleSettingMainScreenCallback(WM_MESSAGE * pMsg) {
   \                     VehicleSettingMainScreenCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    361          	int NCode, Id;
    362          
    363          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0F0050E2           SUBS     R0,R0,#+15
   \   00000010   0F00000A           BEQ      ??VehicleSettingMainScreenCallback_0
   \   00000014   170050E2           SUBS     R0,R0,#+23
   \   00000018   1B00000A           BEQ      ??VehicleSettingMainScreenCallback_1
   \   0000001C   ED0050E2           SUBS     R0,R0,#+237
   \   00000020   3300001A           BNE      ??VehicleSettingMainScreenCallback_2
    364          	{
    365          		case WM_TIMER:
    366          			if (pMsg->Data.v == hScreenTimer)
   \   00000024   ........           LDR      R0,??DataTable154
   \   00000028   0C1094E5           LDR      R1,[R4, #+12]
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000051E1           CMP      R1,R0
   \   00000034   3000001A           BNE      ??VehicleSettingMainScreenCallback_3
    367          			{
    368          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000038   7D10A0E3           MOV      R1,#+125
   \   0000003C   ........           BL       WM_RestartTimer
    369          				WM_InvalidateRect(hVehicleSettingMainScreen, &BannerRect);
   \   00000040   ........           LDR      R0,??DataTable149_3
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   ........           LDR      R1,??DataTable154_1
   \   0000004C   040090E5           LDR      R0,[R0, #+4]
   \   00000050   ........           B        WM_InvalidateRect  ;; tailcall
    370          			}
    371          			break;
    372          
    373          	case WM_PAINT:
    374          		GUI_DrawBitmap(&bmBackground, 0, 0);
   \                     ??VehicleSettingMainScreenCallback_0:
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   0010A0E3           MOV      R1,#+0
   \   0000005C   ........           LDR      R0,??DataTable154_2
   \   00000060   ........           BL       GUI_DrawBitmap
    375          		GUI_DrawBitmap(&bmVehicleSettingsText, 60, 1);
   \   00000064   0120A0E3           MOV      R2,#+1
   \   00000068   3C10A0E3           MOV      R1,#+60
   \   0000006C   ........           LDR      R0,??DataTable154_3
   \   00000070   ........           BL       GUI_DrawBitmap
    376          		GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   00000074   E520A0E3           MOV      R2,#+229
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   ........           LDR      R0,??DataTable154_4
   \   00000080   ........           BL       GUI_DrawBitmap
    377          		DrawSignalStrength();
   \   00000084   1040BDE8           POP      {R4,LR}
   \   00000088   ........           B        DrawSignalStrength  ;; tailcall
    378          		break;
    379          
    380          	case WM_NOTIFY_PARENT:
    381          		Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??VehicleSettingMainScreenCallback_1:
   \   0000008C   080094E5           LDR      R0,[R4, #+8]
   \   00000090   ........           BL       WM_GetId
    382          		NCode = pMsg->Data.v;                 // Notification code
    383          		switch(NCode)
   \   00000094   0C1094E5           LDR      R1,[R4, #+12]
   \   00000098   010051E3           CMP      R1,#+1
   \   0000009C   0300000A           BEQ      ??VehicleSettingMainScreenCallback_4
   \   000000A0   1500003A           BCC      ??VehicleSettingMainScreenCallback_3
   \   000000A4   020051E3           CMP      R1,#+2
   \   000000A8   0300000A           BEQ      ??VehicleSettingMainScreenCallback_5
   \   000000AC   1080BDE8           POP      {R4,PC}
    384          		{
    385          			case WM_NOTIFICATION_CLICKED:
    386          				clickedOnVSMScreen = true;
   \                     ??VehicleSettingMainScreenCallback_4:
   \   000000B0   ........           LDR      R0,??DataTable149_3
   \   000000B4   001080E5           STR      R1,[R0, #+0]
    387          				break;
   \   000000B8   1080BDE8           POP      {R4,PC}
    388          
    389          			case WM_NOTIFICATION_RELEASED:
    390          				if (clickedOnVSMScreen)
   \                     ??VehicleSettingMainScreenCallback_5:
   \   000000BC   ........           LDR      R1,??DataTable149_3
   \   000000C0   002091E5           LDR      R2,[R1, #+0]
   \   000000C4   000052E3           CMP      R2,#+0
   \   000000C8   0B00000A           BEQ      ??VehicleSettingMainScreenCallback_3
    391          					switch (Id)
   \   000000CC   012040E2           SUB      R2,R0,#+1
   \   000000D0   802E42E2           SUB      R2,R2,#+2048
   \   000000D4   050052E3           CMP      R2,#+5
   \   000000D8   0700008A           BHI      ??VehicleSettingMainScreenCallback_3
    392          					{
    393          						case CARMETRICS_BUTTON:
    394          						case WEIGHT_BUTTON:
    395          						case TACH_BUTTON:
    396          						case CAMERA_BUTTON:
    397          						case INPUTS_BUTTON:
    398          						case GEARRATIO_BUTTON:
    399          							DisplayNewScreenList(VEHICLE_SETTINGS_SCREENS_TYPE, Id - (TACH_BUTTON) + (TACH_SELECTION), hVehicleSettingMainScreen);
   \   000000DC   042091E5           LDR      R2,[R1, #+4]
   \   000000E0   801EE0E3           MVN      R1,#+2048
   \   000000E4   1040BDE8           POP      {R4,LR}
   \   000000E8   001081E0           ADD      R1,R1,R0
   \   000000EC   0700A0E3           MOV      R0,#+7
   \   000000F0   ........           B        DisplayNewScreenList  ;; tailcall
    400          
    401          						default:
    402          							break;
    403          					}
    404          				break;
    405          	  };
    406          	  break;
    407          
    408          	default:
    409          		  WM_DefaultProc(pMsg);
   \                     ??VehicleSettingMainScreenCallback_2:
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           BL       WM_DefaultProc
    410          	};
    411          }
   \                     ??VehicleSettingMainScreenCallback_3:
   \   000000FC   1080BDE8           POP      {R4,PC}          ;; return
    412          

   \                                 In section .text, align 4, keep-with-next
    413          WM_HWIN GetVehicleSettingMainWindowHandle(void)
    414          {
    415          	return hVehicleSettingMainScreen;
   \                     GetVehicleSettingMainWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable149_3
   \   00000004   040090E5           LDR      R0,[R0, #+4]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    416          }
    417          

   \                                 In section .text, align 4, keep-with-next
    418          void SetVehicleSettingMainWindowHandle(WM_HWIN hWin)
    419          {
    420          	hVehicleSettingMainScreen = hWin;
   \                     SetVehicleSettingMainWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable149_3
   \   00000004   040081E5           STR      R0,[R1, #+4]
    421          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    422          
    423          
    424          //
    425          ///////////////////////////////////////////////////////////////////////////
    426          
    427          
    428          

   \                                 In section .text, align 4, keep-with-next
    429          WM_HWIN GetVehicleSettingsWindowHandle(void)
    430          {
    431          	return hVehicleSettingsScreens;
   \                     GetVehicleSettingsWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable154_6
   \   00000004   0C0190E5           LDR      R0,[R0, #+268]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    432          }
    433          

   \                                 In section .text, align 4, keep-with-next
    434          void SetVehicleSettingsWindowHandle(WM_HWIN hWin)
    435          {
    436          	hVehicleSettingsScreens = hWin;
   \                     SetVehicleSettingsWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable154_6
   \   00000004   0C0181E5           STR      R0,[R1, #+268]
    437          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    438          
    439          

   \                                 In section .text, align 4, keep-with-next
    440          void VehicleSettingsScreensCallback(WM_MESSAGE * pMsg)
    441          {
   \                     VehicleSettingsScreensCallback:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    442          	int NCode, Id;
    443          	int Sel;
    444          	int temp;
    445          	signed int newPos, oldPos;
    446          
    447          	switch(pMsg->MsgId)
   \   00000008   000095E5           LDR      R0,[R5, #+0]
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   010050E2           SUBS     R0,R0,#+1
   \   00000014   1800000A           BEQ      ??VehicleSettingsScreensCallback_4
   \   00000018   0E0050E2           SUBS     R0,R0,#+14
   \   0000001C   1A00000A           BEQ      ??VehicleSettingsScreensCallback_5
   \   00000020   170050E2           SUBS     R0,R0,#+23
   \   00000024   2B00000A           BEQ      ??VehicleSettingsScreensCallback_6
   \   00000028   ED0050E2           SUBS     R0,R0,#+237
   \   0000002C   2901001A           BNE      ??VehicleSettingsScreensCallback_7
    448          	{
    449          		case WM_TIMER:
    450          			if (pMsg->Data.v == hScreenTimer)
   \   00000030   ........           LDR      R0,??DataTable154
   \   00000034   0C1095E5           LDR      R1,[R5, #+12]
   \   00000038   000090E5           LDR      R0,[R0, #+0]
   \   0000003C   000051E1           CMP      R1,R0
   \   00000040   0300001A           BNE      ??VehicleSettingsScreensCallback_8
    451          			{
    452          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000044   7D10A0E3           MOV      R1,#+125
   \   00000048   ........           BL       WM_RestartTimer
    453          				WM_InvalidateWindow(pMsg->hWin);		// Allow timer to invalidate the whole window so we can show live data on the input buttons
   \   0000004C   040095E5           LDR      R0,[R5, #+4]
   \   00000050   1E0200EA           B        ??VehicleSettingsScreensCallback_9
    454          			}
    455          			else if (pMsg->Data.v == hCameraDelayTimer)
   \                     ??VehicleSettingsScreensCallback_8:
   \   00000054   ........           LDR      R4,??DataTable154_6
   \   00000058   080194E5           LDR      R0,[R4, #+264]
   \   0000005C   000051E1           CMP      R1,R0
   \   00000060   1B02001A           BNE      ??VehicleSettingsScreensCallback_10
    456          			{
    457          				if (testCamera)
   \   00000064   040194E5           LDR      R0,[R4, #+260]
   \   00000068   000050E3           CMP      R0,#+0
    458          					SetUserMode(DU2_CAMERA_TEST);
   \   0000006C   1000A013           MOVNE    R0,#+16
   \   00000070   0100A003           MOVEQ    R0,#+1
   \   00000074   ........           BL       SetUserMode
   \   00000078   150200EA           B        ??VehicleSettingsScreensCallback_10
    459          				else
    460          					SetUserMode(DU2_IDLE);
    461          			}
    462          			break;
    463          
    464          
    465          		case WM_CREATE:
    466          			VehicleSettingsIgnoreNextKeyRelease();
   \                     ??VehicleSettingsScreensCallback_4:
   \   0000007C   ........           LDR      R0,??DataTable154_6
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   101180E5           STR      R1,[R0, #+272]
    467          			break;
   \   00000088   110200EA           B        ??VehicleSettingsScreensCallback_10
    468          
    469          		case WM_PAINT:
    470          			if (GetScreenType() == VEHICLE_SETTINGS_SCREENS_TYPE)
   \                     ??VehicleSettingsScreensCallback_5:
   \   0000008C   ........           BL       GetScreenType
   \   00000090   070050E3           CMP      R0,#+7
   \   00000094   0E02001A           BNE      ??VehicleSettingsScreensCallback_10
    471          			{
    472          				GUI_Clear();		// Clear the background here (and not in the 'constructor') to reduce flicker
   \   00000098   ........           BL       GUI_Clear
    473          				GUI_SetColor(GUI_WHITE);
   \   0000009C   FF04E0E3           MVN      R0,#-16777216
   \   000000A0   ........           BL       GUI_SetColor
    474          				GUI_SetFont(&GUI_Font32_ASCII);
   \   000000A4   ........           LDR      R0,??DataTable154_7
   \   000000A8   ........           BL       GUI_SetFont
    475          
    476          				// Call paint method of center screen
    477          				VehicleSettingsScreenList[GetLastScreen(VEHICLE_SETTINGS_SCREENS_TYPE)].paint(hVehicleSettingsScreens);
   \   000000AC   0700A0E3           MOV      R0,#+7
   \   000000B0   ........           BL       GetLastScreen
   \   000000B4   0010A0E1           MOV      R1,R0
   \   000000B8   ........           LDR      R4,??DataTable154_6
   \   000000BC   0C20A0E3           MOV      R2,#+12
   \   000000C0   924121E0           MLA      R1,R2,R1,R4
   \   000000C4   0C0194E5           LDR      R0,[R4, #+268]
   \   000000C8   081091E5           LDR      R1,[R1, #+8]
   \   000000CC   31FF2FE1           BLX      R1
    478          				DrawSignalStrength();
   \   000000D0   ........           BL       DrawSignalStrength
   \   000000D4   FE0100EA           B        ??VehicleSettingsScreensCallback_10
    479          			}
    480          			break;
    481          
    482          		case WM_NOTIFY_PARENT:
    483          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??VehicleSettingsScreensCallback_6:
   \   000000D8   080095E5           LDR      R0,[R5, #+8]
   \   000000DC   ........           BL       WM_GetId
   \   000000E0   0060A0E1           MOV      R6,R0
    484          			NCode = pMsg->Data.v;				// Notification code
    485          			switch (NCode)
   \   000000E4   0C0095E5           LDR      R0,[R5, #+12]
   \   000000E8   010040E2           SUB      R0,R0,#+1
   \   000000EC   040050E3           CMP      R0,#+4
   \   000000F0   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??VehicleSettingsScreensCallback_0:
   \   000000F4   F601008A           BHI      ??VehicleSettingsScreensCallback_10
   \   000000F8   E60000EA           B        ??VehicleSettingsScreensCallback_11
   \   000000FC   F80000EA           B        ??VehicleSettingsScreensCallback_12
   \   00000100   F30100EA           B        ??VehicleSettingsScreensCallback_10
   \   00000104   000000EA           B        ??VehicleSettingsScreensCallback_13
   \   00000108   5C0000EA           B        ??VehicleSettingsScreensCallback_14
    486          			{
    487          				case WM_NOTIFICATION_SEL_CHANGED:
    488          					if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \                     ??VehicleSettingsScreensCallback_13:
   \   0000010C   080095E5           LDR      R0,[R5, #+8]
   \   00000110   ........           BL       LISTWHEEL_GetVelocity
   \   00000114   000050E3           CMP      R0,#+0
   \   00000118   00006042           RSBMI    R0,R0,#+0
   \   0000011C   020050E3           CMP      R0,#+2
   \   00000120   EB0100AA           BGE      ??VehicleSettingsScreensCallback_10
    489          					{
    490          						switch(Id)
   \   00000124   616046E2           SUB      R6,R6,#+97
   \   00000128   806F56E2           SUBS     R6,R6,#+512
   \   0000012C   0400000A           BEQ      ??VehicleSettingsScreensCallback_15
   \   00000130   016056E2           SUBS     R6,R6,#+1
   \   00000134   2100000A           BEQ      ??VehicleSettingsScreensCallback_16
   \   00000138   016056E2           SUBS     R6,R6,#+1
   \   0000013C   3700000A           BEQ      ??VehicleSettingsScreensCallback_17
   \   00000140   E30100EA           B        ??VehicleSettingsScreensCallback_10
    491          						{
    492          						case WEIGHT_WHEEL_1:
    493          							{
    494          								int temp;
    495          
    496          								temp = ((Sel = LISTWHEEL_GetPos(hWeightWheel1)) * 1000) + (LISTWHEEL_GetPos(hWeightWheel2) * 100) + (LISTWHEEL_GetPos(hWeightWheel3) * 10);
   \                     ??VehicleSettingsScreensCallback_15:
   \   00000144   ........           LDR      R4,??DataTable154_6
   \   00000148   140194E5           LDR      R0,[R4, #+276]
   \   0000014C   ........           BL       LISTWHEEL_GetPos
   \   00000150   0060A0E1           MOV      R6,R0
   \   00000154   180194E5           LDR      R0,[R4, #+280]
   \   00000158   ........           BL       LISTWHEEL_GetPos
   \   0000015C   6420A0E3           MOV      R2,#+100
   \   00000160   920000E0           MUL      R0,R2,R0
   \   00000164   FA1FA0E3           MOV      R1,#+1000
   \   00000168   910627E0           MLA      R7,R1,R6,R0
   \   0000016C   1C0194E5           LDR      R0,[R4, #+284]
   \   00000170   ........           BL       LISTWHEEL_GetPos
   \   00000174   0A10A0E3           MOV      R1,#+10
   \   00000178   917024E0           MLA      R4,R1,R0,R7
    497          								LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   0000017C   0610A0E1           MOV      R1,R6
   \   00000180   080095E5           LDR      R0,[R5, #+8]
   \   00000184   ........           BL       LISTWHEEL_SetSel
    498          								if (sysData.units == METRIC)
   \   00000188   ........           LDR      R0,??DataTable155
   \   0000018C   ........           LDR      R5,??DataTable155_1
   \   00000190   640090E5           LDR      R0,[R0, #+100]
   \   00000194   010050E3           CMP      R0,#+1
   \   00000198   0600001A           BNE      ??VehicleSettingsScreensCallback_18
    499          									vehicleData.weight = (int)(temp * KILOS_TO_POUNDS);
   \                     ??VehicleSettingsScreensCallback_19:
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   ........           BL       __aeabi_i2f
   \   000001A4   ........           LDR      R1,??DataTable155_2  ;; 0x400d1889
   \   000001A8   ........           BL       __aeabi_fmul
   \   000001AC   ........           BL       __aeabi_f2iz
   \   000001B0   680085E5           STR      R0,[R5, #+104]
   \   000001B4   C60100EA           B        ??VehicleSettingsScreensCallback_10
    500          								else vehicleData.weight = temp;
   \                     ??VehicleSettingsScreensCallback_18:
   \   000001B8   684085E5           STR      R4,[R5, #+104]
   \   000001BC   C40100EA           B        ??VehicleSettingsScreensCallback_10
    501          							}
    502          							break;
    503          
    504          						case WEIGHT_WHEEL_2:
    505          							{
    506          								int temp;
    507          
    508          								temp = (LISTWHEEL_GetPos(hWeightWheel1) * 1000) + ((Sel = LISTWHEEL_GetPos(hWeightWheel2)) * 100) + (LISTWHEEL_GetPos(hWeightWheel3) * 10);
   \                     ??VehicleSettingsScreensCallback_16:
   \   000001C0   ........           LDR      R4,??DataTable154_6
   \   000001C4   140194E5           LDR      R0,[R4, #+276]
   \   000001C8   ........           BL       LISTWHEEL_GetPos
   \   000001CC   0070A0E1           MOV      R7,R0
   \   000001D0   180194E5           LDR      R0,[R4, #+280]
   \   000001D4   ........           BL       LISTWHEEL_GetPos
   \   000001D8   0060A0E1           MOV      R6,R0
   \   000001DC   6410A0E3           MOV      R1,#+100
   \   000001E0   910602E0           MUL      R2,R1,R6
   \   000001E4   FA0FA0E3           MOV      R0,#+1000
   \   000001E8   902727E0           MLA      R7,R0,R7,R2
   \   000001EC   1C0194E5           LDR      R0,[R4, #+284]
   \   000001F0   ........           BL       LISTWHEEL_GetPos
   \   000001F4   0A10A0E3           MOV      R1,#+10
   \   000001F8   917024E0           MLA      R4,R1,R0,R7
    509          								LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   000001FC   0610A0E1           MOV      R1,R6
   \   00000200   080095E5           LDR      R0,[R5, #+8]
   \   00000204   ........           BL       LISTWHEEL_SetSel
    510          								if (sysData.units == METRIC)
   \   00000208   ........           LDR      R0,??DataTable155
   \   0000020C   ........           LDR      R5,??DataTable155_1
   \   00000210   640090E5           LDR      R0,[R0, #+100]
   \   00000214   010050E3           CMP      R0,#+1
   \   00000218   E6FFFF1A           BNE      ??VehicleSettingsScreensCallback_18
    511          									vehicleData.weight = (int)(temp * KILOS_TO_POUNDS);
   \   0000021C   DEFFFFEA           B        ??VehicleSettingsScreensCallback_19
    512          								else vehicleData.weight = temp;
    513          							}
    514          							break;
    515          
    516          						case WEIGHT_WHEEL_3:
    517          							{
    518          								int temp;
    519          
    520          								temp = (LISTWHEEL_GetPos(hWeightWheel1) * 1000) + (LISTWHEEL_GetPos(hWeightWheel2) * 100) + ((Sel = LISTWHEEL_GetPos(hWeightWheel3)) * 10);
   \                     ??VehicleSettingsScreensCallback_17:
   \   00000220   ........           LDR      R4,??DataTable154_6
   \   00000224   140194E5           LDR      R0,[R4, #+276]
   \   00000228   ........           BL       LISTWHEEL_GetPos
   \   0000022C   0060A0E1           MOV      R6,R0
   \   00000230   180194E5           LDR      R0,[R4, #+280]
   \   00000234   ........           BL       LISTWHEEL_GetPos
   \   00000238   0070A0E1           MOV      R7,R0
   \   0000023C   1C0194E5           LDR      R0,[R4, #+284]
   \   00000240   ........           BL       LISTWHEEL_GetPos
   \   00000244   6420A0E3           MOV      R2,#+100
   \   00000248   920703E0           MUL      R3,R2,R7
   \   0000024C   FA1FA0E3           MOV      R1,#+1000
   \   00000250   913622E0           MLA      R2,R1,R6,R3
   \   00000254   0A10A0E3           MOV      R1,#+10
   \   00000258   912024E0           MLA      R4,R1,R0,R2
    521          								LISTWHEEL_SetSel(pMsg->hWinSrc, Sel);
   \   0000025C   0010A0E1           MOV      R1,R0
   \   00000260   080095E5           LDR      R0,[R5, #+8]
   \   00000264   ........           BL       LISTWHEEL_SetSel
    522          								if (sysData.units == METRIC)
   \   00000268   ........           LDR      R0,??DataTable155
   \   0000026C   ........           LDR      R5,??DataTable155_1
   \   00000270   640090E5           LDR      R0,[R0, #+100]
   \   00000274   010050E3           CMP      R0,#+1
   \   00000278   C7FFFF0A           BEQ      ??VehicleSettingsScreensCallback_19
    523          									vehicleData.weight = (int)(temp * KILOS_TO_POUNDS);
    524          								else vehicleData.weight = temp;
   \   0000027C   CDFFFFEA           B        ??VehicleSettingsScreensCallback_18
    525          							}
    526          							break;
    527          						}
    528          					}
    529          					break;
    530          
    531          				case WM_NOTIFICATION_VALUE_CHANGED:
    532          					switch (Id)
   \                     ??VehicleSettingsScreensCallback_14:
   \   00000280   4C6F56E2           SUBS     R6,R6,#+304
   \   00000284   0400000A           BEQ      ??VehicleSettingsScreensCallback_20
   \   00000288   016056E2           SUBS     R6,R6,#+1
   \   0000028C   3400000A           BEQ      ??VehicleSettingsScreensCallback_21
   \   00000290   016056E2           SUBS     R6,R6,#+1
   \   00000294   6700000A           BEQ      ??VehicleSettingsScreensCallback_22
   \   00000298   8D0100EA           B        ??VehicleSettingsScreensCallback_10
    533          					{
    534          					case REDLINE_SLIDER:
    535          						oldPos = (vehicleData.tach.upperRedStart / TACH_SLIDER_STEP_SIZE) + 1;
   \                     ??VehicleSettingsScreensCallback_20:
   \   0000029C   ........           LDR      R5,??DataTable155_1
   \   000002A0   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   000002A4   240095E5           LDR      R0,[R5, #+36]
    536          						newPos = -1;
    537          						if ((temp = SLIDER_GetValue(hRedlineSlider) - 1) < 0)	// Subtract 1 for left end extra position
   \   000002A8   ........           LDR      R4,??DataTable154_6
   \   000002AC   9021C1E0           SMULL    R2,R1,R0,R1
   \   000002B0   0060E0E3           MVN      R6,#+0
   \   000002B4   C102B0E1           ASRS     R0,R1,#+5
   \   000002B8   01008042           ADDMI    R0,R0,#+1
   \   000002BC   017080E2           ADD      R7,R0,#+1
   \   000002C0   280194E5           LDR      R0,[R4, #+296]
   \   000002C4   ........           BL       SLIDER_GetValue
   \   000002C8   010050E2           SUBS     R0,R0,#+1
    538          						{
    539          							temp = 0;
    540          							newPos = oldPos;
   \   000002CC   0760A041           MOVMI    R6,R7
   \   000002D0   1D00004A           BMI      ??VehicleSettingsScreensCallback_23
    541          						}
    542          						else
    543          						{
    544          							temp *= TACH_SLIDER_STEP_SIZE;	// Subtract 1 for left end extra position
   \   000002D4   7D1FA0E3           MOV      R1,#+500
   \   000002D8   910000E0           MUL      R0,R1,R0
    545          							if (temp < vehicleData.tach.upperYellowStart)
   \   000002DC   201095E5           LDR      R1,[R5, #+32]
   \   000002E0   010050E1           CMP      R0,R1
   \   000002E4   060000AA           BGE      ??VehicleSettingsScreensCallback_24
    546          							{
    547          								temp = vehicleData.tach.upperYellowStart;
   \   000002E8   0100A0E1           MOV      R0,R1
    548          								newPos = (temp / TACH_SLIDER_STEP_SIZE) + 1;
   \   000002EC   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   000002F0   9021C1E0           SMULL    R2,R1,R0,R1
   \   000002F4   C112B0E1           ASRS     R1,R1,#+5
   \   000002F8   01108142           ADDMI    R1,R1,#+1
   \   000002FC   016081E2           ADD      R6,R1,#+1
   \   00000300   030000EA           B        ??VehicleSettingsScreensCallback_25
    549          							}
    550          							else if (temp > vehicleData.tach.scaleEnd)
   \                     ??VehicleSettingsScreensCallback_24:
   \   00000304   141095E5           LDR      R1,[R5, #+20]
   \   00000308   000051E1           CMP      R1,R0
    551          							{
    552          								temp = vehicleData.tach.upperRedStart;
   \   0000030C   240095B5           LDRLT    R0,[R5, #+36]
    553          								newPos = oldPos;
   \   00000310   0760A0B1           MOVLT    R6,R7
    554          							}
    555          							if (!redFirstTime)
   \                     ??VehicleSettingsScreensCallback_25:
   \   00000314   5011D4E5           LDRB     R1,[R4, #+336]
   \   00000318   000051E3           CMP      R1,#+0
   \   0000031C   0800001A           BNE      ??VehicleSettingsScreensCallback_26
    556          							{
    557          								vehicleData.tach.upperRedStart = temp;
   \   00000320   240085E5           STR      R0,[R5, #+36]
    558          								SetRedlineButtonText();
   \   00000324   0020A0E1           MOV      R2,R0
   \   00000328   981F8FE2           ADR      R1,??VehicleSettingsScreensCallback_27  ;; 0x25, 0x75, 0x00, 0x00
   \   0000032C   0D00A0E1           MOV      R0,SP
   \   00000330   ........           BL       sprintf
   \   00000334   0D10A0E1           MOV      R1,SP
   \   00000338   340194E5           LDR      R0,[R4, #+308]
   \   0000033C   ........           BL       BUTTON_SetText
    559          							}
   \   00000340   010000EA           B        ??VehicleSettingsScreensCallback_23
    560          							else redFirstTime = false;
   \                     ??VehicleSettingsScreensCallback_26:
   \   00000344   0000A0E3           MOV      R0,#+0
   \   00000348   5001C4E5           STRB     R0,[R4, #+336]
    561          						}
    562          
    563          						if (newPos != -1)
   \                     ??VehicleSettingsScreensCallback_23:
   \   0000034C   010076E3           CMN      R6,#+1
   \   00000350   5F01000A           BEQ      ??VehicleSettingsScreensCallback_10
    564          							SLIDER_SetValue(hRedlineSlider, newPos);
   \   00000354   0610A0E1           MOV      R1,R6
   \   00000358   280194E5           LDR      R0,[R4, #+296]
   \                     ??VehicleSettingsScreensCallback_28:
   \   0000035C   ........           BL       SLIDER_SetValue
   \   00000360   5B0100EA           B        ??VehicleSettingsScreensCallback_10
    565          						break;
    566          					case YELLOW_SLIDER:
    567          						oldPos = (vehicleData.tach.upperYellowStart / TACH_SLIDER_STEP_SIZE) + 1;
   \                     ??VehicleSettingsScreensCallback_21:
   \   00000364   ........           LDR      R5,??DataTable155_1
   \   00000368   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   0000036C   200095E5           LDR      R0,[R5, #+32]
    568          						newPos = -1;
    569          						if ((temp = SLIDER_GetValue(hYellowSlider) - 1) < 0)
   \   00000370   ........           LDR      R4,??DataTable154_6
   \   00000374   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000378   0060E0E3           MVN      R6,#+0
   \   0000037C   C102B0E1           ASRS     R0,R1,#+5
   \   00000380   01008042           ADDMI    R0,R0,#+1
   \   00000384   017080E2           ADD      R7,R0,#+1
   \   00000388   2C0194E5           LDR      R0,[R4, #+300]
   \   0000038C   ........           BL       SLIDER_GetValue
   \   00000390   010050E2           SUBS     R0,R0,#+1
    570          						{
    571          							temp = 0;
    572          							newPos = oldPos;
   \   00000394   0760A041           MOVMI    R6,R7
   \   00000398   2100004A           BMI      ??VehicleSettingsScreensCallback_29
    573          						}
    574          						else
    575          						{
    576          							temp *= TACH_SLIDER_STEP_SIZE;
   \   0000039C   7D1FA0E3           MOV      R1,#+500
   \   000003A0   910000E0           MUL      R0,R1,R0
    577          							if ((temp > vehicleData.tach.upperRedStart) && (temp > vehicleData.tach.scaleEnd))
   \   000003A4   241095E5           LDR      R1,[R5, #+36]
   \   000003A8   000051E1           CMP      R1,R0
   \   000003AC   050000AA           BGE      ??VehicleSettingsScreensCallback_30
   \   000003B0   142095E5           LDR      R2,[R5, #+20]
   \   000003B4   000052E1           CMP      R2,R0
   \   000003B8   050000AA           BGE      ??VehicleSettingsScreensCallback_31
    578          							{
    579          								temp = vehicleData.tach.upperYellowStart;
   \   000003BC   200095E5           LDR      R0,[R5, #+32]
    580          								newPos = oldPos;
   \   000003C0   0760A0E1           MOV      R6,R7
   \   000003C4   080000EA           B        ??VehicleSettingsScreensCallback_32
    581          							}
    582          							else if (temp > vehicleData.tach.upperRedStart)
    583          							{
    584          								temp = vehicleData.tach.upperRedStart;
    585          								newPos = (temp / TACH_SLIDER_STEP_SIZE) + 1;
    586          							}
    587          							else if (temp < vehicleData.tach.greenStart)
   \                     ??VehicleSettingsScreensCallback_30:
   \   000003C8   181095E5           LDR      R1,[R5, #+24]
   \   000003CC   010050E1           CMP      R0,R1
   \   000003D0   050000AA           BGE      ??VehicleSettingsScreensCallback_32
    588          							{
    589          								temp = vehicleData.tach.greenStart;
   \                     ??VehicleSettingsScreensCallback_31:
   \   000003D4   0100A0E1           MOV      R0,R1
    590          								newPos = (temp / TACH_SLIDER_STEP_SIZE) + 1;
   \   000003D8   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   000003DC   9021C1E0           SMULL    R2,R1,R0,R1
   \   000003E0   C112B0E1           ASRS     R1,R1,#+5
   \   000003E4   01108142           ADDMI    R1,R1,#+1
   \   000003E8   016081E2           ADD      R6,R1,#+1
    591          							}
    592          							if (!yellowFirstTime)
   \                     ??VehicleSettingsScreensCallback_32:
   \   000003EC   5111D4E5           LDRB     R1,[R4, #+337]
   \   000003F0   000051E3           CMP      R1,#+0
   \   000003F4   0800001A           BNE      ??VehicleSettingsScreensCallback_33
    593          							{
    594          								vehicleData.tach.upperYellowStart = temp;
   \   000003F8   200085E5           STR      R0,[R5, #+32]
    595          								SetYellowButtonText();
   \   000003FC   0020A0E1           MOV      R2,R0
   \   00000400   621F8FE2           ADR      R1,??VehicleSettingsScreensCallback_27  ;; 0x25, 0x75, 0x00, 0x00
   \   00000404   0D00A0E1           MOV      R0,SP
   \   00000408   ........           BL       sprintf
   \   0000040C   0D10A0E1           MOV      R1,SP
   \   00000410   380194E5           LDR      R0,[R4, #+312]
   \   00000414   ........           BL       BUTTON_SetText
    596          							}
   \   00000418   010000EA           B        ??VehicleSettingsScreensCallback_29
    597          							else yellowFirstTime = false;
   \                     ??VehicleSettingsScreensCallback_33:
   \   0000041C   0000A0E3           MOV      R0,#+0
   \   00000420   5101C4E5           STRB     R0,[R4, #+337]
    598          						}
    599          						if (newPos != -1)
   \                     ??VehicleSettingsScreensCallback_29:
   \   00000424   010076E3           CMN      R6,#+1
   \   00000428   2901000A           BEQ      ??VehicleSettingsScreensCallback_10
    600          							SLIDER_SetValue(hYellowSlider, newPos);
   \   0000042C   0610A0E1           MOV      R1,R6
   \   00000430   2C0194E5           LDR      R0,[R4, #+300]
   \   00000434   C8FFFFEA           B        ??VehicleSettingsScreensCallback_28
    601          						break;
    602          					case GREEN_SLIDER:
    603          						oldPos = CylindersToIndex(vehicleData.engineCylinders) + 1;
   \                     ??VehicleSettingsScreensCallback_22:
   \   00000438   ........           LDR      R5,??DataTable155_1
   \   0000043C   0D00D5E5           LDRB     R0,[R5, #+13]
   \   00000440   ........           BL       CylindersToIndex
    604          						newPos = -1;
    605          						if ((temp = SLIDER_GetValue(hCylindersSlider) - 1) < 0)
   \   00000444   ........           LDR      R4,??DataTable154_6
   \   00000448   017080E2           ADD      R7,R0,#+1
   \   0000044C   300194E5           LDR      R0,[R4, #+304]
   \   00000450   ........           BL       SLIDER_GetValue
   \   00000454   010050E2           SUBS     R0,R0,#+1
   \   00000458   0400005A           BPL      ??VehicleSettingsScreensCallback_34
    606          						{
    607          							temp = 0;
    608          							newPos = oldPos;
    609          						}
    610          						else
    611          						{
    612          							if (temp > 10)
    613          								newPos = oldPos;
    614          							else
    615          							{
    616          								vehicleData.engineCylinders = IndexToCylinders(temp);
    617          								SetNumCylsButtonText();
    618          							}
    619          						}
    620          						if (newPos > 0)
   \                     ??VehicleSettingsScreensCallback_35:
   \   0000045C   010057E3           CMP      R7,#+1
   \   00000460   1B0100BA           BLT      ??VehicleSettingsScreensCallback_10
    621          							SLIDER_SetValue(hCylindersSlider, newPos);
   \   00000464   0710A0E1           MOV      R1,R7
   \   00000468   300194E5           LDR      R0,[R4, #+304]
   \   0000046C   BAFFFFEA           B        ??VehicleSettingsScreensCallback_28
   \                     ??VehicleSettingsScreensCallback_34:
   \   00000470   0B0050E3           CMP      R0,#+11
   \   00000474   F8FFFFAA           BGE      ??VehicleSettingsScreensCallback_35
   \   00000478   FF0000E2           AND      R0,R0,#0xFF
   \   0000047C   ........           BL       IndexToCylinders
   \   00000480   0D00C5E5           STRB     R0,[R5, #+13]
   \   00000484   ........           BL       GetCylindersText
   \   00000488   0010A0E1           MOV      R1,R0
   \   0000048C   3C0194E5           LDR      R0,[R4, #+316]
   \   00000490   ........           BL       BUTTON_SetText
    622          						break;
    623          					}
   \   00000494   0E0100EA           B        ??VehicleSettingsScreensCallback_10
    624          					break;
    625          
    626          				case WM_NOTIFICATION_CLICKED:
    627          					clickedOnVSScreen = true;
   \                     ??VehicleSettingsScreensCallback_11:
   \   00000498   ........           LDR      R1,??DataTable154_6
   \   0000049C   0100A0E3           MOV      R0,#+1
    628          					switch(Id)
   \   000004A0   4C6F46E2           SUB      R6,R6,#+304
   \   000004A4   100181E5           STR      R0,[R1, #+272]
   \   000004A8   020056E3           CMP      R6,#+2
   \   000004AC   0500009A           BLS      ??VehicleSettingsScreensCallback_36
   \   000004B0   4C6F46E2           SUB      R6,R6,#+304
   \   000004B4   030056E3           CMP      R6,#+3
   \   000004B8   0600008A           BHI      ??VehicleSettingsScreensCallback_7
    629          					{
    630          						case CAMERA_LIST:
    631          						case WEIGHT_WHEEL_1:
    632          						case WEIGHT_WHEEL_2:
    633          						case WEIGHT_WHEEL_3:
    634          							pressingbutton_semaphore = 1;
   \   000004BC   ........           LDR      R1,??DataTable156_2
   \   000004C0   000081E5           STR      R0,[R1, #+0]
    635          							break;
   \   000004C4   020100EA           B        ??VehicleSettingsScreensCallback_10
    636          
    637          						case REDLINE_SLIDER:
    638          						case YELLOW_SLIDER:
    639          						case GREEN_SLIDER:
    640          							PauseScreenScrolling();
   \                     ??VehicleSettingsScreensCallback_36:
   \   000004C8   ........           LDR      R0,??DataTable149
   \   000004CC   0010A0E3           MOV      R1,#+0
   \                     ??VehicleSettingsScreensCallback_37:
   \   000004D0   001080E5           STR      R1,[R0, #+0]
    641          							break;
   \   000004D4   FE0000EA           B        ??VehicleSettingsScreensCallback_10
    642          
    643          						default:
    644          							WM_DefaultProc(pMsg);
   \                     ??VehicleSettingsScreensCallback_7:
   \   000004D8   0500A0E1           MOV      R0,R5
   \   000004DC   ........           BL       WM_DefaultProc
    645          							break;
   \   000004E0   FB0000EA           B        ??VehicleSettingsScreensCallback_10
    646          					}
    647          					break;
    648          
    649          				case WM_NOTIFICATION_RELEASED:
    650          					pressingbutton_semaphore = 0;
   \                     ??VehicleSettingsScreensCallback_12:
   \   000004E4   ........           LDR      R0,??DataTable156_2
   \   000004E8   0050A0E3           MOV      R5,#+0
    651          					if (!clickedOnVSScreen)
   \   000004EC   ........           LDR      R4,??DataTable154_6
   \   000004F0   005080E5           STR      R5,[R0, #+0]
   \   000004F4   100194E5           LDR      R0,[R4, #+272]
   \   000004F8   000050E3           CMP      R0,#+0
   \   000004FC   F400000A           BEQ      ??VehicleSettingsScreensCallback_10
    652          						break;
    653          
    654          					switch (Id)
   \   00000500   4C0F46E2           SUB      R0,R6,#+304
   \   00000504   020050E3           CMP      R0,#+2
   \   00000508   A000009A           BLS      ??VehicleSettingsScreensCallback_38
   \   0000050C   D20040E2           SUB      R0,R0,#+210
   \   00000510   600E40E2           SUB      R0,R0,#+1536
   \   00000514   030050E3           CMP      R0,#+3
   \   00000518   1D00009A           BLS      ??VehicleSettingsScreensCallback_39
   \   0000051C   040040E2           SUB      R0,R0,#+4
   \   00000520   020050E3           CMP      R0,#+2
   \   00000524   04004082           SUBHI    R0,R0,#+4
   \   00000528   01005083           CMPHI    R0,#+1
   \   0000052C   3B00009A           BLS      ??VehicleSettingsScreensCallback_40
   \   00000530   020040E2           SUB      R0,R0,#+2
   \   00000534   050050E3           CMP      R0,#+5
   \   00000538   5A00009A           BLS      ??VehicleSettingsScreensCallback_41
   \   0000053C   060050E2           SUBS     R0,R0,#+6
   \   00000540   8600000A           BEQ      ??VehicleSettingsScreensCallback_42
   \   00000544   010050E2           SUBS     R0,R0,#+1
   \   00000548   7800000A           BEQ      ??VehicleSettingsScreensCallback_43
   \   0000054C   030050E2           SUBS     R0,R0,#+3
   \   00000550   9100000A           BEQ      ??VehicleSettingsScreensCallback_44
   \   00000554   010050E2           SUBS     R0,R0,#+1
   \   00000558   9300000A           BEQ      ??VehicleSettingsScreensCallback_45
   \   0000055C   010050E2           SUBS     R0,R0,#+1
   \   00000560   9500000A           BEQ      ??VehicleSettingsScreensCallback_46
   \   00000564   010050E2           SUBS     R0,R0,#+1
   \   00000568   A500000A           BEQ      ??VehicleSettingsScreensCallback_47
   \   0000056C   010050E2           SUBS     R0,R0,#+1
   \   00000570   A600000A           BEQ      ??VehicleSettingsScreensCallback_48
   \   00000574   010050E2           SUBS     R0,R0,#+1
   \   00000578   B800000A           BEQ      ??VehicleSettingsScreensCallback_49
   \   0000057C   020050E2           SUBS     R0,R0,#+2
   \   00000580   B900000A           BEQ      ??VehicleSettingsScreensCallback_50
   \   00000584   010050E2           SUBS     R0,R0,#+1
   \   00000588   BA00000A           BEQ      ??VehicleSettingsScreensCallback_51
   \   0000058C   D00000EA           B        ??VehicleSettingsScreensCallback_10
   \                     ??VehicleSettingsScreensCallback_27:
   \   00000590   25750000           DC8      0x25, 0x75, 0x00, 0x00
    655          					{
    656          						case GEAR_RATIO_BUTTON:
    657          							break;
    658          
    659          						case TIRE_SIZE_BUTTON:
    660          						case DIFF_RATIO_BUTTON:
    661          						case TRANS_RATIO_BUTTON:
    662          						case HELP_BUTTON:
    663          							DisplayNewScreenList(GEARING_SCREENS_TYPE, GetScreenID(Id), hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_39:
   \   00000594   036046E2           SUB      R6,R6,#+3
   \   00000598   806E46E2           SUB      R6,R6,#+2048
   \   0000059C   0E0056E3           CMP      R6,#+14
   \   000005A0   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??VehicleSettingsScreensCallback_1:
   \   000005A4   1800008A           BHI      ??VehicleSettingsScreensCallback_52
   \   000005A8   150000EA           B        ??VehicleSettingsScreensCallback_53
   \   000005AC   120000EA           B        ??VehicleSettingsScreensCallback_54
   \   000005B0   0F0000EA           B        ??VehicleSettingsScreensCallback_55
   \   000005B4   140000EA           B        ??VehicleSettingsScreensCallback_52
   \   000005B8   110000EA           B        ??VehicleSettingsScreensCallback_53
   \   000005BC   0E0000EA           B        ??VehicleSettingsScreensCallback_54
   \   000005C0   110000EA           B        ??VehicleSettingsScreensCallback_52
   \   000005C4   0A0000EA           B        ??VehicleSettingsScreensCallback_55
   \   000005C8   070000EA           B        ??VehicleSettingsScreensCallback_56
   \   000005CC   0E0000EA           B        ??VehicleSettingsScreensCallback_52
   \   000005D0   0B0000EA           B        ??VehicleSettingsScreensCallback_53
   \   000005D4   080000EA           B        ??VehicleSettingsScreensCallback_54
   \   000005D8   050000EA           B        ??VehicleSettingsScreensCallback_55
   \   000005DC   020000EA           B        ??VehicleSettingsScreensCallback_56
   \   000005E0   FFFFFFEA           B        ??VehicleSettingsScreensCallback_57
   \                     ??VehicleSettingsScreensCallback_57:
   \   000005E4   0510A0E3           MOV      R1,#+5
   \   000005E8   080000EA           B        ??VehicleSettingsScreensCallback_58
   \                     ??VehicleSettingsScreensCallback_56:
   \   000005EC   0410A0E3           MOV      R1,#+4
   \   000005F0   060000EA           B        ??VehicleSettingsScreensCallback_58
   \                     ??VehicleSettingsScreensCallback_55:
   \   000005F4   0310A0E3           MOV      R1,#+3
   \   000005F8   040000EA           B        ??VehicleSettingsScreensCallback_58
   \                     ??VehicleSettingsScreensCallback_54:
   \   000005FC   0210A0E3           MOV      R1,#+2
   \   00000600   020000EA           B        ??VehicleSettingsScreensCallback_58
   \                     ??VehicleSettingsScreensCallback_53:
   \   00000604   0110A0E3           MOV      R1,#+1
   \   00000608   000000EA           B        ??VehicleSettingsScreensCallback_58
   \                     ??VehicleSettingsScreensCallback_52:
   \   0000060C   0010A0E3           MOV      R1,#+0
   \                     ??VehicleSettingsScreensCallback_58:
   \   00000610   0C2194E5           LDR      R2,[R4, #+268]
   \   00000614   0E00A0E3           MOV      R0,#+14
   \                     ??VehicleSettingsScreensCallback_59:
   \   00000618   ........           BL       DisplayNewScreenList
    664          							break;
   \   0000061C   AC0000EA           B        ??VehicleSettingsScreensCallback_10
    665          
    666          						case WARNING_BUTTON:
    667          						case REDLINE_BUTTON:
    668          						case CYLINDERS_BUTTON:
    669          						case END_BUTTON:
    670          						case PEAK_BUTTON:
    671          							DisplayNewScreenList(TACH_SETUP_SCREENS_TYPE, GetScreenID(Id), hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_40:
   \   00000620   036046E2           SUB      R6,R6,#+3
   \   00000624   806E46E2           SUB      R6,R6,#+2048
   \   00000628   0E0056E3           CMP      R6,#+14
   \   0000062C   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??VehicleSettingsScreensCallback_2:
   \   00000630   1800008A           BHI      ??VehicleSettingsScreensCallback_60
   \   00000634   150000EA           B        ??VehicleSettingsScreensCallback_61
   \   00000638   120000EA           B        ??VehicleSettingsScreensCallback_62
   \   0000063C   0F0000EA           B        ??VehicleSettingsScreensCallback_63
   \   00000640   140000EA           B        ??VehicleSettingsScreensCallback_60
   \   00000644   110000EA           B        ??VehicleSettingsScreensCallback_61
   \   00000648   0E0000EA           B        ??VehicleSettingsScreensCallback_62
   \   0000064C   110000EA           B        ??VehicleSettingsScreensCallback_60
   \   00000650   0A0000EA           B        ??VehicleSettingsScreensCallback_63
   \   00000654   070000EA           B        ??VehicleSettingsScreensCallback_64
   \   00000658   0E0000EA           B        ??VehicleSettingsScreensCallback_60
   \   0000065C   0B0000EA           B        ??VehicleSettingsScreensCallback_61
   \   00000660   080000EA           B        ??VehicleSettingsScreensCallback_62
   \   00000664   050000EA           B        ??VehicleSettingsScreensCallback_63
   \   00000668   020000EA           B        ??VehicleSettingsScreensCallback_64
   \   0000066C   FFFFFFEA           B        ??VehicleSettingsScreensCallback_65
   \                     ??VehicleSettingsScreensCallback_65:
   \   00000670   0510A0E3           MOV      R1,#+5
   \   00000674   080000EA           B        ??VehicleSettingsScreensCallback_66
   \                     ??VehicleSettingsScreensCallback_64:
   \   00000678   0410A0E3           MOV      R1,#+4
   \   0000067C   060000EA           B        ??VehicleSettingsScreensCallback_66
   \                     ??VehicleSettingsScreensCallback_63:
   \   00000680   0310A0E3           MOV      R1,#+3
   \   00000684   040000EA           B        ??VehicleSettingsScreensCallback_66
   \                     ??VehicleSettingsScreensCallback_62:
   \   00000688   0210A0E3           MOV      R1,#+2
   \   0000068C   020000EA           B        ??VehicleSettingsScreensCallback_66
   \                     ??VehicleSettingsScreensCallback_61:
   \   00000690   0110A0E3           MOV      R1,#+1
   \   00000694   000000EA           B        ??VehicleSettingsScreensCallback_66
   \                     ??VehicleSettingsScreensCallback_60:
   \   00000698   0010A0E3           MOV      R1,#+0
   \                     ??VehicleSettingsScreensCallback_66:
   \   0000069C   0C2194E5           LDR      R2,[R4, #+268]
   \   000006A0   0900A0E3           MOV      R0,#+9
   \   000006A4   DBFFFFEA           B        ??VehicleSettingsScreensCallback_59
    672          							break;
    673          
    674          						case ANALOG0_BUTTON:
    675          						case ANALOG1_BUTTON:
    676          						case ANALOG2_BUTTON:
    677          						case ANALOG3_BUTTON:
    678          						case DIGITAL4_BUTTON:
    679          						case DIGITAL5_BUTTON:
    680          							DisplayNewScreenList(INPUTS_SCREENS_TYPE, GetScreenID(Id), hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_41:
   \   000006A8   036046E2           SUB      R6,R6,#+3
   \   000006AC   806E46E2           SUB      R6,R6,#+2048
   \   000006B0   0E0056E3           CMP      R6,#+14
   \   000006B4   06F18F90           ADDLS    PC,PC,R6, LSL #+2
   \                     ??VehicleSettingsScreensCallback_3:
   \   000006B8   1800008A           BHI      ??VehicleSettingsScreensCallback_67
   \   000006BC   150000EA           B        ??VehicleSettingsScreensCallback_68
   \   000006C0   120000EA           B        ??VehicleSettingsScreensCallback_69
   \   000006C4   0F0000EA           B        ??VehicleSettingsScreensCallback_70
   \   000006C8   140000EA           B        ??VehicleSettingsScreensCallback_67
   \   000006CC   110000EA           B        ??VehicleSettingsScreensCallback_68
   \   000006D0   0E0000EA           B        ??VehicleSettingsScreensCallback_69
   \   000006D4   110000EA           B        ??VehicleSettingsScreensCallback_67
   \   000006D8   0A0000EA           B        ??VehicleSettingsScreensCallback_70
   \   000006DC   070000EA           B        ??VehicleSettingsScreensCallback_71
   \   000006E0   0E0000EA           B        ??VehicleSettingsScreensCallback_67
   \   000006E4   0B0000EA           B        ??VehicleSettingsScreensCallback_68
   \   000006E8   080000EA           B        ??VehicleSettingsScreensCallback_69
   \   000006EC   050000EA           B        ??VehicleSettingsScreensCallback_70
   \   000006F0   020000EA           B        ??VehicleSettingsScreensCallback_71
   \   000006F4   FFFFFFEA           B        ??VehicleSettingsScreensCallback_72
   \                     ??VehicleSettingsScreensCallback_72:
   \   000006F8   0510A0E3           MOV      R1,#+5
   \   000006FC   080000EA           B        ??VehicleSettingsScreensCallback_73
   \                     ??VehicleSettingsScreensCallback_71:
   \   00000700   0410A0E3           MOV      R1,#+4
   \   00000704   060000EA           B        ??VehicleSettingsScreensCallback_73
   \                     ??VehicleSettingsScreensCallback_70:
   \   00000708   0310A0E3           MOV      R1,#+3
   \   0000070C   040000EA           B        ??VehicleSettingsScreensCallback_73
   \                     ??VehicleSettingsScreensCallback_69:
   \   00000710   0210A0E3           MOV      R1,#+2
   \   00000714   020000EA           B        ??VehicleSettingsScreensCallback_73
   \                     ??VehicleSettingsScreensCallback_68:
   \   00000718   0110A0E3           MOV      R1,#+1
   \   0000071C   000000EA           B        ??VehicleSettingsScreensCallback_73
   \                     ??VehicleSettingsScreensCallback_67:
   \   00000720   0010A0E3           MOV      R1,#+0
   \                     ??VehicleSettingsScreensCallback_73:
   \   00000724   0C2194E5           LDR      R2,[R4, #+268]
   \   00000728   0A00A0E3           MOV      R0,#+10
   \   0000072C   B9FFFFEA           B        ??VehicleSettingsScreensCallback_59
    681          							break;
    682          
    683          						case SHOW_SPEED:
    684          							BUTTON_SetBitmapEx(hShowSpeedCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \                     ??VehicleSettingsScreensCallback_43:
   \   00000730   0F00A0E3           MOV      R0,#+15
   \   00000734   00008DE5           STR      R0,[SP, #+0]
   \   00000738   0F30A0E3           MOV      R3,#+15
   \   0000073C   ........           LDR      R2,??DataTable156_3
   \   00000740   0010A0E3           MOV      R1,#+0
   \   00000744   400194E5           LDR      R0,[R4, #+320]
   \   00000748   ........           BL       BUTTON_SetBitmapEx
    685          							BUTTON_SetBitmap(hShowRPMCheck, BUTTON_CI_UNPRESSED, NULL);
   \   0000074C   0020A0E3           MOV      R2,#+0
   \   00000750   0010A0E3           MOV      R1,#+0
   \   00000754   440194E5           LDR      R0,[R4, #+324]
   \   00000758   ........           BL       BUTTON_SetBitmap
    686          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   0000075C   5A0000EA           B        ??VehicleSettingsScreensCallback_74
    687          							break;
    688          
    689          						case SHOW_RPM:
    690          							BUTTON_SetBitmapEx(hShowRPMCheck, BUTTON_CI_UNPRESSED, &bmGreenCheck, 15, 15);
   \                     ??VehicleSettingsScreensCallback_42:
   \   00000760   0F00A0E3           MOV      R0,#+15
   \   00000764   00008DE5           STR      R0,[SP, #+0]
   \   00000768   0F30A0E3           MOV      R3,#+15
   \   0000076C   ........           LDR      R2,??DataTable156_3
   \   00000770   0010A0E3           MOV      R1,#+0
   \   00000774   440194E5           LDR      R0,[R4, #+324]
   \   00000778   ........           BL       BUTTON_SetBitmapEx
    691          							BUTTON_SetBitmap(hShowSpeedCheck, BUTTON_CI_UNPRESSED, NULL);
   \   0000077C   0020A0E3           MOV      R2,#+0
   \   00000780   0010A0E3           MOV      R1,#+0
   \   00000784   400194E5           LDR      R0,[R4, #+320]
   \   00000788   ........           BL       BUTTON_SetBitmap
    692          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   0000078C   4E0000EA           B        ??VehicleSettingsScreensCallback_74
    693          							break;
    694          
    695          						case REDLINE_SLIDER:
    696          						case YELLOW_SLIDER:
    697          						case GREEN_SLIDER:
    698          							ResumeScreenScrolling();				// Allow screen scrolling when slider bars released
   \                     ??VehicleSettingsScreensCallback_38:
   \   00000790   ........           LDR      R0,??DataTable149
   \   00000794   0110A0E3           MOV      R1,#+1
   \   00000798   4CFFFFEA           B        ??VehicleSettingsScreensCallback_37
    699          							break;
    700          
    701          						case RESET_TIME_BUTTON:
    702          							sysData.totalTimeEver = 0;
   \                     ??VehicleSettingsScreensCallback_44:
   \   0000079C   ........           LDR      R0,??DataTable155
   \   000007A0   C45080E5           STR      R5,[R0, #+196]
    703          							UpdateTime();
   \   000007A4   ........           BL       UpdateTime
    704          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   000007A8   470000EA           B        ??VehicleSettingsScreensCallback_74
    705          							break;
    706          
    707          						case RESET_DIST_BUTTON:
    708          							sysData.totalDistanceEver = 0;
   \                     ??VehicleSettingsScreensCallback_45:
   \   000007AC   ........           LDR      R0,??DataTable155
   \   000007B0   C05080E5           STR      R5,[R0, #+192]
    709          							UpdateTime();
   \   000007B4   ........           BL       UpdateTime
    710          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   000007B8   430000EA           B        ??VehicleSettingsScreensCallback_74
    711          							break;
    712          
    713          						case RESET_RPM_BUTTON:
    714          							sysData.maxRpmEver = 0;
    715          							DataValues[MAX_RPM].uVal = 0;
   \                     ??VehicleSettingsScreensCallback_46:
   \   000007BC   ........           LDR      R0,??DataTable156_4
   \   000007C0   ........           LDR      R6,??DataTable155
   \   000007C4   205280E5           STR      R5,[R0, #+544]
   \   000007C8   BC5086E5           STR      R5,[R6, #+188]
    716          							UpdateRPM();
   \   000007CC   ........           LDR      R0,??DataTable156_5
   \   000007D0   ........           BL       GUI_SetFont
   \   000007D4   BC2096E5           LDR      R2,[R6, #+188]
   \   000007D8   ........           ADR      R1,??DataTable149_2  ;; 0x25, 0x75, 0x00, 0x00
   \   000007DC   0D00A0E1           MOV      R0,SP
   \   000007E0   ........           BL       sprintf
   \   000007E4   FF00A0E3           MOV      R0,#+255
   \   000007E8   ........           BL       GUI_SetColor
   \   000007EC   0120A0E3           MOV      R2,#+1
   \   000007F0   ............       ADRL     R1,RPMRect
   \              ....        
   \   000007F8   0D00A0E1           MOV      R0,SP
   \   000007FC   ........           BL       GUI_DispStringInRect
    717          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   00000800   310000EA           B        ??VehicleSettingsScreensCallback_74
    718          							break;
    719          
    720          						case AERO_GRIP_BUTTON:
    721          							CreateAeroGripScreen(hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_47:
   \   00000804   0C0194E5           LDR      R0,[R4, #+268]
   \   00000808   ........           BL       CreateAeroGripScreen
    722          							break;
   \   0000080C   300000EA           B        ??VehicleSettingsScreensCallback_10
    723          
    724          						case RESET_ALL_BUTTON:
    725          							sysData.totalTimeEver = 0;
   \                     ??VehicleSettingsScreensCallback_48:
   \   00000810   ........           LDR      R6,??DataTable155
   \   00000814   C45086E5           STR      R5,[R6, #+196]
    726          							sysData.totalDistanceEver = 0;
   \   00000818   C05086E5           STR      R5,[R6, #+192]
    727          							sysData.maxRpmEver = 0;
   \   0000081C   BC5086E5           STR      R5,[R6, #+188]
    728          							UpdateAll();
   \   00000820   ........           BL       UpdateTime
   \   00000824   ........           BL       UpdateDistance
   \   00000828   ........           LDR      R0,??DataTable156_5
   \   0000082C   ........           BL       GUI_SetFont
   \   00000830   BC2096E5           LDR      R2,[R6, #+188]
   \   00000834   ........           ADR      R1,??DataTable149_2  ;; 0x25, 0x75, 0x00, 0x00
   \   00000838   0D00A0E1           MOV      R0,SP
   \   0000083C   ........           BL       sprintf
   \   00000840   FF00A0E3           MOV      R0,#+255
   \   00000844   ........           BL       GUI_SetColor
   \   00000848   0120A0E3           MOV      R2,#+1
   \   0000084C   ............       ADRL     R1,RPMRect
   \              ....        
   \   00000854   0D00A0E1           MOV      R0,SP
   \   00000858   ........           BL       GUI_DispStringInRect
    729          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \   0000085C   1A0000EA           B        ??VehicleSettingsScreensCallback_74
    730          							break;
    731          
    732          						case USB_CAM_BUTTON:
    733          							CreateTraqdashCamScreen(hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_49:
   \   00000860   0C0194E5           LDR      R0,[R4, #+268]
   \   00000864   ........           BL       CreateTraqdashCamScreen
    734          							break;
   \   00000868   190000EA           B        ??VehicleSettingsScreensCallback_10
    735          
    736          						case SENSOR_UNIT_BUTTON:
    737          							CreateCameraSelection(hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_50:
   \   0000086C   0C0194E5           LDR      R0,[R4, #+268]
   \   00000870   ........           BL       CreateCameraSelection
    738          							break;
   \   00000874   160000EA           B        ??VehicleSettingsScreensCallback_10
    739          
    740          						case TEST_CAM_BUTTON:
    741          							TestCameras (testCamera = !testCamera);			// change the state
   \                     ??VehicleSettingsScreensCallback_51:
   \   00000878   040194E5           LDR      R0,[R4, #+260]
   \   0000087C   000050E3           CMP      R0,#+0
   \   00000880   ........           LDR      R0,??DataTable157
   \   00000884   0150A003           MOVEQ    R5,#+1
   \   00000888   0010D0E5           LDRB     R1,[R0, #+0]
   \   0000088C   045184E5           STR      R5,[R4, #+260]
   \   00000890   010055E1           CMP      R5,R1
   \   00000894   5411D415           LDRBNE   R1,[R4, #+340]
   \   00000898   00005113           CMPNE    R1,#+0
   \   0000089C   ........           LDRNE    R1,??DataTable157_1
   \   000008A0   00005113           CMPNE    R1,#+0
   \   000008A4   0400000A           BEQ      ??VehicleSettingsScreensCallback_75
   \   000008A8   0050C0E5           STRB     R5,[R0, #+0]
   \   000008AC   0000D0E5           LDRB     R0,[R0, #+0]
   \   000008B0   ........           BL       notifyGPSSimChange
   \   000008B4   FA0FA0E3           MOV      R0,#+1000
   \   000008B8   ........           BL       OS_Delay
   \                     ??VehicleSettingsScreensCallback_75:
   \   000008BC   000055E3           CMP      R5,#+0
   \   000008C0   1000A013           MOVNE    R0,#+16
   \   000008C4   0100A003           MOVEQ    R0,#+1
   \   000008C8   ........           BL       SetUserMode
    742          							WM_InvalidateWindow(hVehicleSettingsScreens);
   \                     ??VehicleSettingsScreensCallback_74:
   \   000008CC   0C0194E5           LDR      R0,[R4, #+268]
   \                     ??VehicleSettingsScreensCallback_9:
   \   000008D0   ........           BL       WM_InvalidateWindow
    743          							break;
    744          					}
    745          					break;
    746          			}
    747          			break;
    748          
    749          		default:
    750          			WM_DefaultProc(pMsg);
    751          	}
    752          }
   \                     ??VehicleSettingsScreensCallback_10:
   \   000008D4   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000008D8   F080BDE8           POP      {R4-R7,PC}       ;; return
    753          

   \                                 In section .text, align 4, keep-with-next
    754          void TestCameras(int turnOn)
    755          {
   \                     TestCameras:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    756          	if ((turnOn != gpsSimulate) && (GetSUCam() != CAMERA_NONE) && (GetTDCam != TD_CAM_NONE)) {
   \   00000008   ........           LDR      R0,??DataTable157
   \   0000000C   0010D0E5           LDRB     R1,[R0, #+0]
   \   00000010   010054E1           CMP      R4,R1
   \   00000014   0A00000A           BEQ      ??TestCameras_0
   \   00000018   ........           LDR      R1,??DataTable154_6
   \   0000001C   5411D1E5           LDRB     R1,[R1, #+340]
   \   00000020   000051E3           CMP      R1,#+0
   \   00000024   ........           LDRNE    R1,??DataTable157_1
   \   00000028   00005113           CMPNE    R1,#+0
   \   0000002C   0400000A           BEQ      ??TestCameras_0
    757          		notifyGPSSimChange( gpsSimulate = turnOn );
   \   00000030   0040C0E5           STRB     R4,[R0, #+0]
   \   00000034   0000D0E5           LDRB     R0,[R0, #+0]
   \   00000038   ........           BL       notifyGPSSimChange
    758          #ifndef _WINDOWS
    759          		OS_Delay(1000);
   \   0000003C   FA0FA0E3           MOV      R0,#+1000
   \   00000040   ........           BL       OS_Delay
    760          #endif
    761          	}
    762          	if (turnOn)
   \                     ??TestCameras_0:
   \   00000044   000054E3           CMP      R4,#+0
    763          		SetUserMode(DU2_CAMERA_TEST);
    764          	else
    765          		SetUserMode(DU2_IDLE);
   \   00000048   1040BDE8           POP      {R4,LR}
   \   0000004C   1000A013           MOVNE    R0,#+16
   \   00000050   0100A003           MOVEQ    R0,#+1
   \   00000054   ........           B        SetUserMode      ;; tailcall
    766          }
    767          
    768          int GetScreenID(int Id)
    769          {
    770          	switch (Id)
    771          	{
    772          		case TIRE_SIZE_BUTTON:		return TIRESIZE_SELECTION_SCREEN;
    773          		case DIFF_RATIO_BUTTON:		return DIFFRATIO_SCREEN;
    774          		case TRANS_RATIO_BUTTON:	return TRANSRATIO_SCREEN;
    775          		case HELP_BUTTON:			return HELP_SCREEN;
    776          		case WARNING_BUTTON:		return WARNING_RPM_SETUP;
    777          		case REDLINE_BUTTON:		return REDLINE_RPM_SETUP;
    778          		case CYLINDERS_BUTTON:		return ENGINE_CYLINDERS_SETUP;
    779          		case END_BUTTON:			return POWERBANDEND_RPM_SETUP;
    780          		case PEAK_BUTTON:			return MAX_RPM_SETUP;
    781          		case ANALOG0_BUTTON:		return ANALOG0;
    782          		case ANALOG1_BUTTON:		return ANALOG1;
    783          		case ANALOG2_BUTTON:		return ANALOG2;
    784          		case ANALOG3_BUTTON:		return ANALOG3;
    785          		case DIGITAL4_BUTTON:		return DIGITAL4;
    786          		case DIGITAL5_BUTTON:		return DIGITAL5;
    787          		default:					return 0;
    788          	}
    789          }
    790          
    791          

   \                                 In section .text, align 4, keep-with-next
    792          void DisplayTachSelection(WM_HWIN hParent)
    793          {
   \                     DisplayTachSelection:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0050A0E1           MOV      R5,R0
   \   00000008   28D04DE2           SUB      SP,SP,#+40
    794          	char scratch[20];
    795          	BUTTON_Handle hBtn;
    796          
    797          	BUTTON_SetDefaultFont(&GUI_Font24B_ASCII);
   \   0000000C   ........           LDR      R0,??DataTable157_2
   \   00000010   ........           BL       BUTTON_SetDefaultFont
    798          	BUTTON_SetDefaultTextColor(GUI_GREEN, BUTTON_BI_UNPRESSED);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   FF0CA0E3           MOV      R0,#+65280
   \   0000001C   ........           BL       BUTTON_SetDefaultTextColor
    799          	BUTTON_SetDefaultTextColor(GUI_GREEN, BUTTON_BI_PRESSED);
   \   00000020   0110A0E3           MOV      R1,#+1
   \   00000024   FF0CA0E3           MOV      R0,#+65280
   \   00000028   ........           BL       BUTTON_SetDefaultTextColor
    800          
    801          	hYellowBtn = BUTTON_CreateEx(375, 162, 87, 34, hParent, WM_CF_SHOW, 0, WARNING_BUTTON);
   \   0000002C   0600A0E3           MOV      R0,#+6
   \   00000030   800E80E3           ORR      R0,R0,#0x800
   \   00000034   0C008DE5           STR      R0,[SP, #+12]
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   08008DE5           STR      R0,[SP, #+8]
   \   00000040   7760A0E3           MOV      R6,#+119
   \   00000044   0200A0E3           MOV      R0,#+2
   \   00000048   406F86E3           ORR      R6,R6,#0x100
   \   0000004C   04008DE5           STR      R0,[SP, #+4]
   \   00000050   00508DE5           STR      R5,[SP, #+0]
   \   00000054   2230A0E3           MOV      R3,#+34
   \   00000058   5720A0E3           MOV      R2,#+87
   \   0000005C   A210A0E3           MOV      R1,#+162
   \   00000060   0600A0E1           MOV      R0,R6
   \   00000064   ........           BL       BUTTON_CreateEx
   \   00000068   ........           LDR      R4,??DataTable154_6
    802          	BUTTON_SetBitmap(hYellowBtn, BUTTON_BI_UNPRESSED, &bmSmallBlackButton);
   \   0000006C   ........           LDR      R7,??DataTable157_3
   \   00000070   380184E5           STR      R0,[R4, #+312]
   \   00000074   0720A0E1           MOV      R2,R7
   \   00000078   0010A0E3           MOV      R1,#+0
   \   0000007C   ........           BL       BUTTON_SetBitmap
    803          
    804          	hRedlineBtn = BUTTON_CreateEx(375, 107, 87, 34, hParent, WM_CF_SHOW, 0, REDLINE_BUTTON);
   \   00000080   690E86E2           ADD      R0,R6,#+1680
   \   00000084   0C008DE5           STR      R0,[SP, #+12]
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   08008DE5           STR      R0,[SP, #+8]
   \   00000090   0200A0E3           MOV      R0,#+2
   \   00000094   04008DE5           STR      R0,[SP, #+4]
   \   00000098   00508DE5           STR      R5,[SP, #+0]
   \   0000009C   2230A0E3           MOV      R3,#+34
   \   000000A0   5720A0E3           MOV      R2,#+87
   \   000000A4   6B10A0E3           MOV      R1,#+107
   \   000000A8   0600A0E1           MOV      R0,R6
   \   000000AC   ........           BL       BUTTON_CreateEx
   \   000000B0   340184E5           STR      R0,[R4, #+308]
    805          	BUTTON_SetBitmap(hRedlineBtn, BUTTON_BI_UNPRESSED, &bmSmallBlackButton);
   \   000000B4   0720A0E1           MOV      R2,R7
   \   000000B8   0010A0E3           MOV      R1,#+0
   \   000000BC   ........           BL       BUTTON_SetBitmap
    806          
    807          	hCurrentRPMBtn = BUTTON_CreateEx(175, 52, 87, 34, hParent, WM_CF_SHOW, 0, 0);
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   0C008DE5           STR      R0,[SP, #+12]
   \   000000C8   08008DE5           STR      R0,[SP, #+8]
   \   000000CC   0200A0E3           MOV      R0,#+2
   \   000000D0   04008DE5           STR      R0,[SP, #+4]
   \   000000D4   00508DE5           STR      R5,[SP, #+0]
   \   000000D8   2230A0E3           MOV      R3,#+34
   \   000000DC   5720A0E3           MOV      R2,#+87
   \   000000E0   3410A0E3           MOV      R1,#+52
   \   000000E4   AF00A0E3           MOV      R0,#+175
   \   000000E8   ........           BL       BUTTON_CreateEx
   \   000000EC   E40084E5           STR      R0,[R4, #+228]
    808          	BUTTON_SetBitmap(hCurrentRPMBtn, BUTTON_BI_UNPRESSED, &bmSmallBlackButton);
   \   000000F0   0720A0E1           MOV      R2,R7
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   ........           BL       BUTTON_SetBitmap
    809          	BUTTON_SetTextColor(hCurrentRPMBtn, BUTTON_BI_DISABLED, GUI_GREEN);
   \   000000FC   FF2CA0E3           MOV      R2,#+65280
   \   00000100   0210A0E3           MOV      R1,#+2
   \   00000104   E40094E5           LDR      R0,[R4, #+228]
   \   00000108   ........           BL       BUTTON_SetTextColor
    810          
    811          	hNumCylsBtn = BUTTON_CreateEx(375, 217, 87, 34, hParent, WM_CF_SHOW, 0, CYLINDERS_BUTTON);
   \   0000010C   0800A0E3           MOV      R0,#+8
   \   00000110   800E80E3           ORR      R0,R0,#0x800
   \   00000114   0C008DE5           STR      R0,[SP, #+12]
   \   00000118   0000A0E3           MOV      R0,#+0
   \   0000011C   08008DE5           STR      R0,[SP, #+8]
   \   00000120   0200A0E3           MOV      R0,#+2
   \   00000124   04008DE5           STR      R0,[SP, #+4]
   \   00000128   00508DE5           STR      R5,[SP, #+0]
   \   0000012C   2230A0E3           MOV      R3,#+34
   \   00000130   5720A0E3           MOV      R2,#+87
   \   00000134   D910A0E3           MOV      R1,#+217
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   ........           BL       BUTTON_CreateEx
   \   00000140   3C0184E5           STR      R0,[R4, #+316]
    812          	BUTTON_SetBitmap(hNumCylsBtn, BUTTON_BI_UNPRESSED, &bmSmallBlackButton);
   \   00000144   0720A0E1           MOV      R2,R7
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   ........           BL       BUTTON_SetBitmap
    813          
    814          	// Max RPM
    815          	hBtn = BUTTON_CreateEx(375, 52, 87, 34, hParent, WM_CF_SHOW, 0, PEAK_BUTTON);
   \   00000150   0B00A0E3           MOV      R0,#+11
   \   00000154   800E80E3           ORR      R0,R0,#0x800
   \   00000158   0C008DE5           STR      R0,[SP, #+12]
   \   0000015C   0000A0E3           MOV      R0,#+0
   \   00000160   08008DE5           STR      R0,[SP, #+8]
   \   00000164   0200A0E3           MOV      R0,#+2
   \   00000168   04008DE5           STR      R0,[SP, #+4]
   \   0000016C   00508DE5           STR      R5,[SP, #+0]
   \   00000170   2230A0E3           MOV      R3,#+34
   \   00000174   5720A0E3           MOV      R2,#+87
   \   00000178   3410A0E3           MOV      R1,#+52
   \   0000017C   0600A0E1           MOV      R0,R6
   \   00000180   ........           BL       BUTTON_CreateEx
   \   00000184   0080A0E1           MOV      R8,R0
    816          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmSmallBlackButton);
   \   00000188   0720A0E1           MOV      R2,R7
   \   0000018C   0010A0E3           MOV      R1,#+0
   \   00000190   ........           BL       BUTTON_SetBitmap
    817          
    818          	sprintf(scratch, "%u", vehicleData.tach.scaleEnd);
   \   00000194   ........           LDR      R6,??DataTable155_1
   \   00000198   ........           ADR      R1,??DataTable154_5  ;; 0x25, 0x75, 0x00, 0x00
   \   0000019C   142096E5           LDR      R2,[R6, #+20]
   \   000001A0   10008DE2           ADD      R0,SP,#+16
   \   000001A4   ........           BL       sprintf
    819          	BUTTON_SetText(hBtn, scratch);
   \   000001A8   10108DE2           ADD      R1,SP,#+16
   \   000001AC   0800A0E1           MOV      R0,R8
   \   000001B0   ........           BL       BUTTON_SetText
    820          
    821          	redFirstTime = yellowFirstTime = true;
   \   000001B4   0100A0E3           MOV      R0,#+1
   \   000001B8   5101C4E5           STRB     R0,[R4, #+337]
   \   000001BC   5001C4E5           STRB     R0,[R4, #+336]
    822          	hRedlineSlider = SLIDER_CreateEx(SLIDER_START - SLIDER_BALL_RADIUS, 133 - SLIDER_BALL_RADIUS, RPM_SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hParent, WM_CF_SHOW, 0, REDLINE_SLIDER);
   \   000001C0   4C0FA0E3           MOV      R0,#+304
   \   000001C4   0C008DE5           STR      R0,[SP, #+12]
   \   000001C8   0000A0E3           MOV      R0,#+0
   \   000001CC   08008DE5           STR      R0,[SP, #+8]
   \   000001D0   0200A0E3           MOV      R0,#+2
   \   000001D4   04008DE5           STR      R0,[SP, #+4]
   \   000001D8   00508DE5           STR      R5,[SP, #+0]
   \   000001DC   2030A0E3           MOV      R3,#+32
   \   000001E0   4F2FA0E3           MOV      R2,#+316
   \   000001E4   7510A0E3           MOV      R1,#+117
   \   000001E8   3600A0E3           MOV      R0,#+54
   \   000001EC   ........           BL       SLIDER_CreateEx
   \   000001F0   280184E5           STR      R0,[R4, #+296]
    823          	SLIDER_SetNumTicks(hRedlineSlider, 0);
   \   000001F4   0010A0E3           MOV      R1,#+0
   \   000001F8   ........           BL       SLIDER_SetNumTicks
    824          	hYellowSlider = SLIDER_CreateEx(SLIDER_START - SLIDER_BALL_RADIUS, 188 - SLIDER_BALL_RADIUS, RPM_SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hParent, WM_CF_SHOW, 0, YELLOW_SLIDER);
   \   000001FC   3100A0E3           MOV      R0,#+49
   \   00000200   400F80E3           ORR      R0,R0,#0x100
   \   00000204   0C008DE5           STR      R0,[SP, #+12]
   \   00000208   0000A0E3           MOV      R0,#+0
   \   0000020C   08008DE5           STR      R0,[SP, #+8]
   \   00000210   0200A0E3           MOV      R0,#+2
   \   00000214   04008DE5           STR      R0,[SP, #+4]
   \   00000218   00508DE5           STR      R5,[SP, #+0]
   \   0000021C   2030A0E3           MOV      R3,#+32
   \   00000220   4F2FA0E3           MOV      R2,#+316
   \   00000224   AC10A0E3           MOV      R1,#+172
   \   00000228   3600A0E3           MOV      R0,#+54
   \   0000022C   ........           BL       SLIDER_CreateEx
   \   00000230   2C0184E5           STR      R0,[R4, #+300]
    825          	SLIDER_SetNumTicks(hYellowSlider, 0);
   \   00000234   0010A0E3           MOV      R1,#+0
   \   00000238   ........           BL       SLIDER_SetNumTicks
    826          	hCylindersSlider = SLIDER_CreateEx(SLIDER_START - SLIDER_BALL_RADIUS, 243 - SLIDER_BALL_RADIUS, RPM_SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hParent, WM_CF_SHOW, 0, GREEN_SLIDER);
   \   0000023C   3200A0E3           MOV      R0,#+50
   \   00000240   400F80E3           ORR      R0,R0,#0x100
   \   00000244   0C008DE5           STR      R0,[SP, #+12]
   \   00000248   0000A0E3           MOV      R0,#+0
   \   0000024C   08008DE5           STR      R0,[SP, #+8]
   \   00000250   0200A0E3           MOV      R0,#+2
   \   00000254   04008DE5           STR      R0,[SP, #+4]
   \   00000258   00508DE5           STR      R5,[SP, #+0]
   \   0000025C   2030A0E3           MOV      R3,#+32
   \   00000260   4F2FA0E3           MOV      R2,#+316
   \   00000264   E310A0E3           MOV      R1,#+227
   \   00000268   3600A0E3           MOV      R0,#+54
   \   0000026C   ........           BL       SLIDER_CreateEx
   \   00000270   300184E5           STR      R0,[R4, #+304]
    827          	SLIDER_SetNumTicks(hCylindersSlider, 0);
   \   00000274   0010A0E3           MOV      R1,#+0
   \   00000278   ........           BL       SLIDER_SetNumTicks
    828          	SLIDER_SetRange(hCylindersSlider, 0, 12);		// 11 steps for the number of cylinders slider plus two more steps to prevent ball going all the way to the end
   \   0000027C   0C20A0E3           MOV      R2,#+12
   \   00000280   0010A0E3           MOV      R1,#+0
   \   00000284   300194E5           LDR      R0,[R4, #+304]
   \   00000288   ........           BL       SLIDER_SetRange
    829          	SLIDER_SetValue(hCylindersSlider, CylindersToIndex(vehicleData.engineCylinders) + 1);
   \   0000028C   0D00D6E5           LDRB     R0,[R6, #+13]
   \   00000290   ........           BL       CylindersToIndex
   \   00000294   011080E2           ADD      R1,R0,#+1
   \   00000298   300194E5           LDR      R0,[R4, #+304]
   \   0000029C   ........           BL       SLIDER_SetValue
    830          
    831          	ResetSliderParams();
   \   000002A0   ........           BL       ResetSliderParams
    832          }
   \   000002A4   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   000002A8   F081BDE8           POP      {R4-R8,PC}       ;; return
    833          

   \                                 In section .text, align 4, keep-with-next
    834          void SetRedlineButtonText(void)
    835          {
   \                     SetRedlineButtonText:
   \   00000000   00402DE9           PUSH     {LR}
    836          	char scratch[20];
    837          
    838          	sprintf(scratch, "%u", vehicleData.tach.upperRedStart);
   \   00000004   ........           LDR      R0,??DataTable155_1
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   242090E5           LDR      R2,[R0, #+36]
   \   00000010   ........           ADR      R1,??DataTable154_5  ;; 0x25, 0x75, 0x00, 0x00
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       sprintf
    839          	BUTTON_SetText(hRedlineBtn, scratch);
   \   0000001C   ........           LDR      R0,??DataTable154_6
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   340190E5           LDR      R0,[R0, #+308]
   \   00000028   ........           BL       BUTTON_SetText
    840          }
   \   0000002C   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return
    841          

   \                                 In section .text, align 4, keep-with-next
    842          void SetYellowButtonText(void)
    843          {
   \                     SetYellowButtonText:
   \   00000000   00402DE9           PUSH     {LR}
    844          	char scratch[20];
    845          
    846          	sprintf(scratch, "%u", vehicleData.tach.upperYellowStart);
   \   00000004   ........           LDR      R0,??DataTable155_1
   \   00000008   14D04DE2           SUB      SP,SP,#+20
   \   0000000C   202090E5           LDR      R2,[R0, #+32]
   \   00000010   ........           ADR      R1,??DataTable154_5  ;; 0x25, 0x75, 0x00, 0x00
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   ........           BL       sprintf
    847          	BUTTON_SetText(hYellowBtn, scratch);
   \   0000001C   ........           LDR      R0,??DataTable154_6
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   380190E5           LDR      R0,[R0, #+312]
   \   00000028   ........           BL       BUTTON_SetText
    848          }
   \   0000002C   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000030   0080BDE8           POP      {PC}             ;; return
    849          

   \                                 In section .text, align 4, keep-with-next
    850          void SetNumCylsButtonText(void)
    851          {
   \                     SetNumCylsButtonText:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
    852          	BUTTON_SetText(hNumCylsBtn, GetCylindersText());
   \   00000008   ........           BL       GetCylindersText
   \   0000000C   0010A0E1           MOV      R1,R0
   \   00000010   ........           LDR      R0,??DataTable154_6
   \   00000014   04D08DE2           ADD      SP,SP,#+4
   \   00000018   0040BDE8           POP      {LR}
   \   0000001C   3C0190E5           LDR      R0,[R0, #+316]
   \   00000020   ........           B        BUTTON_SetText   ;; tailcall
    853          }
    854          
    855          

   \                                 In section .text, align 4, keep-with-next
    856          void ResetSliderParams(void)
    857          {
   \                     ResetSliderParams:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
    858          	int range, end;
    859          
    860          	// Double-check limits
    861          	end = vehicleData.tach.scaleEnd;
   \   00000004   ........           LDR      R4,??DataTable155_1
   \   00000008   140094E5           LDR      R0,[R4, #+20]
    862          	if (vehicleData.tach.upperRedStart > end)
   \   0000000C   241094E5           LDR      R1,[R4, #+36]
    863          		vehicleData.tach.upperRedStart = end;
    864          	if (vehicleData.tach.upperYellowStart > end)
    865          		vehicleData.tach.upperYellowStart = end;
    866          	if (vehicleData.tach.greenStart > end)
    867          		vehicleData.tach.greenStart = end;
    868          
    869          	range = (vehicleData.tach.scaleEnd / TACH_SLIDER_STEP_SIZE) + 2;		// Give two more steps to prevent ball going all the way to the end
    870          	SLIDER_SetRange(hRedlineSlider, 0, range);
   \   00000010   ........           LDR      R5,??DataTable154_6
   \   00000014   010050E1           CMP      R0,R1
   \   00000018   0010A0D1           MOVLE    R1,R0
   \   0000001C   241084E5           STR      R1,[R4, #+36]
   \   00000020   201094E5           LDR      R1,[R4, #+32]
   \   00000024   28D04DE2           SUB      SP,SP,#+40
   \   00000028   010050E1           CMP      R0,R1
   \   0000002C   0010A0D1           MOVLE    R1,R0
   \   00000030   201084E5           STR      R1,[R4, #+32]
   \   00000034   181094E5           LDR      R1,[R4, #+24]
   \   00000038   010050E1           CMP      R0,R1
   \   0000003C   0010A0D1           MOVLE    R1,R0
   \   00000040   181084E5           STR      R1,[R4, #+24]
   \   00000044   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   00000048   9021C1E0           SMULL    R2,R1,R0,R1
   \   0000004C   C102B0E1           ASRS     R0,R1,#+5
   \   00000050   01008042           ADDMI    R0,R0,#+1
   \   00000054   026080E2           ADD      R6,R0,#+2
   \   00000058   0620A0E1           MOV      R2,R6
   \   0000005C   0010A0E3           MOV      R1,#+0
   \   00000060   280195E5           LDR      R0,[R5, #+296]
   \   00000064   ........           BL       SLIDER_SetRange
    871          	SLIDER_SetRange(hYellowSlider, 0, range);
   \   00000068   0620A0E1           MOV      R2,R6
   \   0000006C   0010A0E3           MOV      R1,#+0
   \   00000070   2C0195E5           LDR      R0,[R5, #+300]
   \   00000074   ........           BL       SLIDER_SetRange
    872          
    873          	SLIDER_SetValue(hRedlineSlider, (vehicleData.tach.upperRedStart / TACH_SLIDER_STEP_SIZE) + 1);		// Add 1 for end of slider
   \   00000078   240094E5           LDR      R0,[R4, #+36]
   \   0000007C   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   00000080   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000084   C102B0E1           ASRS     R0,R1,#+5
   \   00000088   01008042           ADDMI    R0,R0,#+1
   \   0000008C   011080E2           ADD      R1,R0,#+1
   \   00000090   280195E5           LDR      R0,[R5, #+296]
   \   00000094   ........           BL       SLIDER_SetValue
    874          	SLIDER_SetValue(hYellowSlider, (vehicleData.tach.upperYellowStart / TACH_SLIDER_STEP_SIZE) + 1);
   \   00000098   200094E5           LDR      R0,[R4, #+32]
   \   0000009C   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   000000A0   9021C1E0           SMULL    R2,R1,R0,R1
   \   000000A4   C102B0E1           ASRS     R0,R1,#+5
   \   000000A8   01008042           ADDMI    R0,R0,#+1
   \   000000AC   011080E2           ADD      R1,R0,#+1
   \   000000B0   2C0195E5           LDR      R0,[R5, #+300]
   \   000000B4   ........           BL       SLIDER_SetValue
    875          
    876          	SetRedlineButtonText();
   \   000000B8   ........           ADR      R6,??DataTable154_5  ;; 0x25, 0x75, 0x00, 0x00
   \   000000BC   242094E5           LDR      R2,[R4, #+36]
   \   000000C0   0610A0E1           MOV      R1,R6
   \   000000C4   14008DE2           ADD      R0,SP,#+20
   \   000000C8   ........           BL       sprintf
   \   000000CC   14108DE2           ADD      R1,SP,#+20
   \   000000D0   340195E5           LDR      R0,[R5, #+308]
   \   000000D4   ........           BL       BUTTON_SetText
    877          	SetYellowButtonText();
   \   000000D8   202094E5           LDR      R2,[R4, #+32]
   \   000000DC   0610A0E1           MOV      R1,R6
   \   000000E0   0D00A0E1           MOV      R0,SP
   \   000000E4   ........           BL       sprintf
   \   000000E8   0D10A0E1           MOV      R1,SP
   \   000000EC   380195E5           LDR      R0,[R5, #+312]
   \   000000F0   ........           BL       BUTTON_SetText
    878          	SetNumCylsButtonText();
   \   000000F4   ........           BL       GetCylindersText
   \   000000F8   0010A0E1           MOV      R1,R0
   \   000000FC   3C0195E5           LDR      R0,[R5, #+316]
   \   00000100   ........           BL       BUTTON_SetText
    879          }
   \   00000104   28D08DE2           ADD      SP,SP,#+40       ;; stack cleaning
   \   00000108   7080BDE8           POP      {R4-R6,PC}       ;; return
    880          

   \                                 In section .text, align 4, keep-with-next
    881          void TachSelectionPaint(WM_HWIN hParent)
    882          {
   \                     TachSelectionPaint:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
    883          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable158
   \   00000014   ........           BL       GUI_DrawBitmap
    884          	GUI_DrawBitmap(&bmTachSetup, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable158_1
   \   00000024   ........           BL       GUI_DrawBitmap
    885          
    886          	GUI_SetColor(GUI_WHITE);
   \   00000028   FF54E0E3           MVN      R5,#-16777216
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           BL       GUI_SetColor
    887          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   00000034   ........           LDR      R4,??DataTable157_2
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       GUI_SetFont
    888          	GUI_SetTextMode(GUI_TM_TRANS);
   \   00000040   0200A0E3           MOV      R0,#+2
   \   00000044   ........           BL       GUI_SetTextMode
    889          
    890          	// Draw current RPM in box
    891          	{
    892          		char scratch[20];
    893          		int rpm;
    894          		rpm = GetValue(VEHICLE_RPM).iVal;
   \   00000048   3510A0E3           MOV      R1,#+53
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   ........           BL       GetValue
    895          		sprintf(scratch, "%u", rpm);
   \   00000054   00209DE5           LDR      R2,[SP, #+0]
   \   00000058   ........           ADR      R1,??DataTable156_1  ;; 0x25, 0x75, 0x00, 0x00
   \   0000005C   08008DE2           ADD      R0,SP,#+8
   \   00000060   ........           BL       sprintf
    896          		BUTTON_SetText(hCurrentRPMBtn, scratch);
   \   00000064   ........           LDR      R0,??DataTable158_2
   \   00000068   08108DE2           ADD      R1,SP,#+8
   \   0000006C   E40090E5           LDR      R0,[R0, #+228]
   \   00000070   ........           BL       BUTTON_SetText
    897          	}
    898          
    899          
    900          
    901          	GUI_SetColor(GUI_GRAY);
   \   00000074   ........           LDR      R6,??DataTable158_3  ;; 0x808080
   \   00000078   0600A0E1           MOV      R0,R6
   \   0000007C   ........           BL       GUI_SetColor
    902          	GUI_DrawRoundedFrame(10, 40, XSIZE_PHYS - 10, YSIZE_PHYS - 10, 5, 2);
   \   00000080   0200A0E3           MOV      R0,#+2
   \   00000084   04008DE5           STR      R0,[SP, #+4]
   \   00000088   D670A0E3           MOV      R7,#+214
   \   0000008C   0500A0E3           MOV      R0,#+5
   \   00000090   407F87E3           ORR      R7,R7,#0x100
   \   00000094   00008DE5           STR      R0,[SP, #+0]
   \   00000098   D030C7E3           BIC      R3,R7,#0xD0
   \   0000009C   0720A0E1           MOV      R2,R7
   \   000000A0   2810A0E3           MOV      R1,#+40
   \   000000A4   0A00A0E3           MOV      R0,#+10
   \   000000A8   ........           BL       GUI_DrawRoundedFrame
    903          	GUI_SetColor(GUI_WHITE);
   \   000000AC   0500A0E1           MOV      R0,R5
   \   000000B0   ........           BL       GUI_SetColor
    904          	GUI_FillRoundedRect(12, 42, XSIZE_PHYS - 12, YSIZE_PHYS - 12, 5);
   \   000000B4   0500A0E3           MOV      R0,#+5
   \   000000B8   00008DE5           STR      R0,[SP, #+0]
   \   000000BC   413FA0E3           MOV      R3,#+260
   \   000000C0   752FA0E3           MOV      R2,#+468
   \   000000C4   2A10A0E3           MOV      R1,#+42
   \   000000C8   0C00A0E3           MOV      R0,#+12
   \   000000CC   ........           BL       GUI_FillRoundedRect
    905          	//GUI_DrawGradientRoundedV(22, 42, XSIZE_PHYS - 22, YSIZE_PHYS - 12, 5, GUI_WHITE, 0x00D0D0D0);
    906          	GUI_SetPenSize(2);
   \   000000D0   0200A0E3           MOV      R0,#+2
   \   000000D4   ........           BL       GUI_SetPenSize
    907          	GUI_SetColor(GUI_GRAY);
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   ........           BL       GUI_SetColor
    908          	GUI_DrawLine(10, 41 + 55, XSIZE_PHYS - 10, 41 + 55);
   \   000000E0   6030A0E3           MOV      R3,#+96
   \   000000E4   0720A0E1           MOV      R2,R7
   \   000000E8   6010A0E3           MOV      R1,#+96
   \   000000EC   0A00A0E3           MOV      R0,#+10
   \   000000F0   ........           BL       GUI_DrawLine
    909          	GUI_DrawLine(10, 41 + 110, XSIZE_PHYS - 10, 41 + 110);
   \   000000F4   9730A0E3           MOV      R3,#+151
   \   000000F8   0720A0E1           MOV      R2,R7
   \   000000FC   9710A0E3           MOV      R1,#+151
   \   00000100   0A00A0E3           MOV      R0,#+10
   \   00000104   ........           BL       GUI_DrawLine
    910          	GUI_DrawLine(10, 41 + 165, XSIZE_PHYS - 10, 41 + 165);
   \   00000108   CE30A0E3           MOV      R3,#+206
   \   0000010C   0720A0E1           MOV      R2,R7
   \   00000110   CE10A0E3           MOV      R1,#+206
   \   00000114   0A00A0E3           MOV      R0,#+10
   \   00000118   ........           BL       GUI_DrawLine
    911          
    912          	GUI_SetColor(GUI_BLACK);
   \   0000011C   0000A0E3           MOV      R0,#+0
   \   00000120   ........           BL       GUI_SetColor
    913          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           BL       GUI_SetFont
    914          	GUI_DispStringAt("Current RPM", 40, 58);
   \   0000012C   3A20A0E3           MOV      R2,#+58
   \   00000130   2810A0E3           MOV      R1,#+40
   \   00000134   ............       ADRL     R0,`?<Constant "Current RPM">`
   \              ....        
   \   0000013C   ........           BL       GUI_DispStringAt
    915          	GUI_DispStringAt("Max RPM", 273, 58);
   \   00000140   3A20A0E3           MOV      R2,#+58
   \   00000144   D71082E2           ADD      R1,R2,#+215
   \   00000148   ............       ADRL     R0,`?<Constant "Max RPM">`
   \              ....        
   \   00000150   ........           BL       GUI_DispStringAt
    916          	GUI_SetFont(&GUI_Font20B_ASCII);
   \   00000154   ........           LDR      R0,??DataTable159
   \   00000158   ........           BL       GUI_SetFont
    917          	GUI_DispStringAt("Redline Start", 40, 100);
   \   0000015C   6420A0E3           MOV      R2,#+100
   \   00000160   2810A0E3           MOV      R1,#+40
   \   00000164   ............       ADRL     R0,`?<Constant "Redline Start">`
   \              ....        
   \   0000016C   ........           BL       GUI_DispStringAt
    918          	GUI_DispStringAt("Warning Start", 40, 155);
   \   00000170   9B20A0E3           MOV      R2,#+155
   \   00000174   2810A0E3           MOV      R1,#+40
   \   00000178   ............       ADRL     R0,`?<Constant "Warning Start">`
   \              ....        
   \   00000180   ........           BL       GUI_DispStringAt
    919          	GUI_DispStringAt("Engine Cylinders", 40, 210);
   \   00000184   D220A0E3           MOV      R2,#+210
   \   00000188   2810A0E3           MOV      R1,#+40
   \   0000018C   ............       ADRL     R0,`?<Constant "Engine Cylinders">`
   \              ....        
   \   00000194   ........           BL       GUI_DispStringAt
    920          
    921          	GUI_DrawBitmap(&bmTachSliderRed, SLIDER_START, 126);
   \   00000198   7E20A0E3           MOV      R2,#+126
   \   0000019C   4610A0E3           MOV      R1,#+70
   \   000001A0   ........           LDR      R0,??DataTable159_1
   \   000001A4   ........           BL       GUI_DrawBitmap
    922          	GUI_DrawBitmap(&bmTachSliderYellow, SLIDER_START, 181);
   \   000001A8   B520A0E3           MOV      R2,#+181
   \   000001AC   4610A0E3           MOV      R1,#+70
   \   000001B0   ........           LDR      R0,??DataTable159_2
   \   000001B4   ........           BL       GUI_DrawBitmap
    923          	GUI_DrawBitmap(&bmTachSliderGreen, SLIDER_START, 236);
   \   000001B8   EC20A0E3           MOV      R2,#+236
   \   000001BC   4610A0E3           MOV      R1,#+70
   \   000001C0   ........           LDR      R0,??DataTable159_3
   \   000001C4   ........           BL       GUI_DrawBitmap
    924          
    925          	GUI_DrawBitmap(GetNavigationArrow(TACH_SELECTION), 0, 229);
   \   000001C8   E520A0E3           MOV      R2,#+229
   \   000001CC   0010A0E3           MOV      R1,#+0
   \   000001D0   ........           LDR      R0,??DataTable159_4
   \   000001D4   ........           BL       GUI_DrawBitmap
    926          }
   \   000001D8   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   000001DC   F080BDE8           POP      {R4-R7,PC}       ;; return
    927          
    928          
    929          

   \                                 In section .text, align 4, keep-with-next
    930          void DisplayWeightSelection(WM_HWIN hParent)
    931          {
   \                     DisplayWeightSelection:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   ........           LDR      R1,??DataTable159_5
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   ........           LDR      R0,??DataTable159_6
   \   00000010   641091E5           LDR      R1,[R1, #+100]
   \   00000014   34D04DE2           SUB      SP,SP,#+52
   \   00000018   680090E5           LDR      R0,[R0, #+104]
   \   0000001C   010051E3           CMP      R1,#+1
   \   00000020   0600001A           BNE      ??DisplayWeightSelection_0
    932          	int thousands;
    933          	int hundreds;
    934          	int units;
    935          	int weight;
    936          	char *pText;
    937          
    938          	if (sysData.units == METRIC)
    939          	{
    940          		weight = (int)(vehicleData.weight * POUNDS_TO_KILOS);
   \   00000024   ........           BL       __aeabi_i2f
   \   00000028   ........           LDR      R1,??DataTable159_7  ;; 0x3ee83d43
   \   0000002C   ........           BL       __aeabi_fmul
   \   00000030   ........           BL       __aeabi_f2iz
    941          		pText = "Weight in kilos";
   \   00000034   ............       ADRL     R12,`?<Constant "Weight in kilos">`
   \              ....        
   \   0000003C   010000EA           B        ??DisplayWeightSelection_1
    942          	}
    943          	else
    944          	{
    945          		weight = vehicleData.weight;
    946          		pText = "Weight in pounds";
   \                     ??DisplayWeightSelection_0:
   \   00000040   ............       ADRL     R12,`?<Constant "Weight in pounds">`
   \              ....        
    947          	}
    948          
    949          	thousands = weight / 1000;
    950          	hundreds = (weight % 1000) / 100;
    951          	units = (weight % 100) / 10;
    952          
    953          	DisplayTripleListScreen(hParent,
    954          		ZeroThroughNine, WEIGHT_WHEEL_1, &hWeightWheel1, thousands,
    955          		ZeroThroughNine, WEIGHT_WHEEL_2, &hWeightWheel2, hundreds,
    956          		ZeroThroughNinty, WEIGHT_WHEEL_3, &hWeightWheel3, units,
    957          		pText,
    958          		0, 0);
   \                     ??DisplayWeightSelection_1:
   \   00000048   ........           LDR      R1,??DataTable156  ;; 0x10624dd3
   \   0000004C   24C08DE5           STR      R12,[SP, #+36]
   \   00000050   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000054   00E0A0E3           MOV      LR,#+0
   \   00000058   ........           LDR      R12,??DataTable159_8  ;; 0x51eb851f
   \   0000005C   2CE08DE5           STR      LR,[SP, #+44]
   \   00000060   28E08DE5           STR      LR,[SP, #+40]
   \   00000064   90ECCCE0           SMULL    LR,R12,R0,R12
   \   00000068   4123B0E1           ASRS     R2,R1,#+6
   \   0000006C   01208242           ADDMI    R2,R2,#+1
   \   00000070   CCC2B0E1           ASRS     R12,R12,#+5
   \   00000074   01C08C42           ADDMI    R12,R12,#+1
   \   00000078   64E0A0E3           MOV      LR,#+100
   \   0000007C   9E0C0CE0           MUL      R12,LR,R12
   \   00000080   ........           LDR      LR,??DataTable159_9  ;; 0x66666667
   \   00000084   0CC040E0           SUB      R12,R0,R12
   \   00000088   9C5ECEE0           SMULL    R5,LR,R12,LR
   \   0000008C   ........           LDR      R3,??DataTable158_2
   \   00000090   4EC1B0E1           ASRS     R12,LR,#+2
   \   00000094   01C08C42           ADDMI    R12,R12,#+1
   \   00000098   20C08DE5           STR      R12,[SP, #+32]
   \   0000009C   47CF83E2           ADD      R12,R3,#+284
   \   000000A0   1CC08DE5           STR      R12,[SP, #+28]
   \   000000A4   63C0A0E3           MOV      R12,#+99
   \   000000A8   80CF8CE3           ORR      R12,R12,#0x200
   \   000000AC   18C08DE5           STR      R12,[SP, #+24]
   \   000000B0   ........           LDR      R12,??DataTable159_10
   \   000000B4   ........           LDR      R1,??DataTable159_11
   \   000000B8   14C08DE5           STR      R12,[SP, #+20]
   \   000000BC   FACFA0E3           MOV      R12,#+1000
   \   000000C0   9C020EE0           MUL      LR,R12,R2
   \   000000C4   ........           LDR      R12,??DataTable159_8  ;; 0x51eb851f
   \   000000C8   0E0040E0           SUB      R0,R0,LR
   \   000000CC   90ECCCE0           SMULL    LR,R12,R0,R12
   \   000000D0   00208DE5           STR      R2,[SP, #+0]
   \   000000D4   CC02B0E1           ASRS     R0,R12,#+5
   \   000000D8   01008042           ADDMI    R0,R0,#+1
   \   000000DC   10008DE5           STR      R0,[SP, #+16]
   \   000000E0   460F83E2           ADD      R0,R3,#+280
   \   000000E4   0C008DE5           STR      R0,[SP, #+12]
   \   000000E8   6200A0E3           MOV      R0,#+98
   \   000000EC   800F80E3           ORR      R0,R0,#0x200
   \   000000F0   08008DE5           STR      R0,[SP, #+8]
   \   000000F4   012040E2           SUB      R2,R0,#+1
   \   000000F8   04108DE5           STR      R1,[SP, #+4]
   \   000000FC   453F83E2           ADD      R3,R3,#+276
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       DisplayTripleListScreen
    959          }
   \   00000108   34D08DE2           ADD      SP,SP,#+52       ;; stack cleaning
   \   0000010C   3080BDE8           POP      {R4,R5,PC}       ;; return
    960          

   \                                 In section .text, align 4, keep-with-next
    961          void RSDisplayInputsSelection(WM_HWIN hParent)
    962          {
   \                     RSDisplayInputsSelection:
   \   00000000   00402DE9           PUSH     {LR}
    963          	DisplayInputsSelection(hParent, ANALOG0_BUTTON, ANALOG1_BUTTON, DIGITAL4_BUTTON, ANALOG2_BUTTON, ANALOG3_BUTTON, DIGITAL5_BUTTON);
   \   00000004   1110A0E3           MOV      R1,#+17
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   801E81E3           ORR      R1,R1,#0x800
   \   00000010   08108DE5           STR      R1,[SP, #+8]
   \   00000014   021041E2           SUB      R1,R1,#+2
   \   00000018   04108DE5           STR      R1,[SP, #+4]
   \   0000001C   0110C1E3           BIC      R1,R1,#0x1
   \   00000020   00108DE5           STR      R1,[SP, #+0]
   \   00000024   012041E2           SUB      R2,R1,#+1
   \   00000028   813EA0E3           MOV      R3,#+2064
   \   0000002C   0210C1E3           BIC      R1,R1,#0x2
   \   00000030   ........           BL       DisplayInputsSelection
    964          }
   \   00000034   0CD08DE2           ADD      SP,SP,#+12       ;; stack cleaning
   \   00000038   0080BDE8           POP      {PC}             ;; return
    965          

   \                                 In section .text, align 4, keep-with-next
    966          void DisplayInputsSelection(WM_HWIN hParent, int idA0, int idA1, int idD4, int idA2, int idA3, int idD5)
    967          {
   \                     DisplayInputsSelection:
   \   00000000   FC4F2DE9           PUSH     {R2-R11,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   \   00000008   0080A0E1           MOV      R8,R0
   \   0000000C   0140A0E1           MOV      R4,R1
   \   00000010   48909DE5           LDR      R9,[SP, #+72]
   \   00000014   4CA09DE5           LDR      R10,[SP, #+76]
   \   00000018   50B09DE5           LDR      R11,[SP, #+80]
    968          	InputCleanUpKeyboards();
   \   0000001C   ........           BL       InputCleanUpKeyboards
    969          
    970          	hAnalog0 = BUTTON_CreateEx(36, 45, 121, 78, hParent, WM_CF_SHOW, 0, idA0);
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   08008DE5           STR      R0,[SP, #+8]
   \   00000028   0200A0E3           MOV      R0,#+2
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   0C408DE5           STR      R4,[SP, #+12]
   \   00000034   00808DE5           STR      R8,[SP, #+0]
   \   00000038   4E30A0E3           MOV      R3,#+78
   \   0000003C   7920A0E3           MOV      R2,#+121
   \   00000040   2D10A0E3           MOV      R1,#+45
   \   00000044   2400A0E3           MOV      R0,#+36
   \   00000048   ........           BL       BUTTON_CreateEx
   \   0000004C   ........           LDR      R4,??DataTable159_12
    971          	BUTTON_SetFont(hAnalog0, &GUI_Font24B_ASCII);
   \   00000050   ........           LDR      R5,??DataTable157_2
   \   00000054   000084E5           STR      R0,[R4, #+0]
   \   00000058   0510A0E1           MOV      R1,R5
   \   0000005C   ........           BL       BUTTON_SetFont
    972          	BUTTON_SetTextColor(hAnalog0, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000060   0020A0E3           MOV      R2,#+0
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   000094E5           LDR      R0,[R4, #+0]
   \   0000006C   ........           BL       BUTTON_SetTextColor
    973          	SetAnalogColorAndText(hAnalog0, 0);
   \   00000070   ........           LDR      R6,??DataTable159_6
   \   00000074   007094E5           LDR      R7,[R4, #+0]
   \   00000078   9300D6E5           LDRB     R0,[R6, #+147]
   \   0000007C   000050E3           CMP      R0,#+0
   \   00000080   0C00000A           BEQ      ??DisplayInputsSelection_0
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   0100A0E3           MOV      R0,#+1
   \   0000008C   ........           BL       GetAnalogInput
   \   00000090   891086E2           ADD      R1,R6,#+137
   \   00000094   00108DE5           STR      R1,[SP, #+0]
   \   00000098   ........           BL       __aeabi_f2d
   \   0000009C   0020A0E1           MOV      R2,R0
   \   000000A0   0130A0E1           MOV      R3,R1
   \   000000A4   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   000000AC   04008DE2           ADD      R0,SP,#+4
   \   000000B0   ........           BL       sprintf
   \   000000B4   040000EA           B        ??DisplayInputsSelection_1
   \                     ??DisplayInputsSelection_0:
   \   000000B8   0920A0E3           MOV      R2,#+9
   \   000000BC   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   000000C4   04008DE2           ADD      R0,SP,#+4
   \   000000C8   ........           BL       __aeabi_memcpy4
   \                     ??DisplayInputsSelection_1:
   \   000000CC   04108DE2           ADD      R1,SP,#+4
   \   000000D0   0700A0E1           MOV      R0,R7
   \   000000D4   ........           BL       BUTTON_SetText
   \   000000D8   9300D6E5           LDRB     R0,[R6, #+147]
   \   000000DC   000050E3           CMP      R0,#+0
   \   000000E0   0A00000A           BEQ      ??DisplayInputsSelection_2
   \   000000E4   9400D6E5           LDRB     R0,[R6, #+148]
   \   000000E8   020050E3           CMP      R0,#+2
   \   000000EC   9500D615           LDRBNE   R0,[R6, #+149]
   \   000000F0   01005013           CMPNE    R0,#+1
   \   000000F4   0500001A           BNE      ??DisplayInputsSelection_2
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   ........           BL       InAlarm
   \   00000100   000050E3           CMP      R0,#+0
   \   00000104   ........           LDRNE    R2,??DataTable159_13
   \   00000108   ........           LDREQ    R2,??DataTable159_14
   \   0000010C   000000EA           B        ??DisplayInputsSelection_3
   \                     ??DisplayInputsSelection_2:
   \   00000110   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_3:
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   0700A0E1           MOV      R0,R7
   \   0000011C   ........           BL       BUTTON_SetBitmap
    974          
    975          	hAnalog1 = BUTTON_CreateEx(180, 45, 121, 78, hParent, WM_CF_SHOW, 0, idA1);
   \   00000120   1C009DE5           LDR      R0,[SP, #+28]
   \   00000124   00808DE5           STR      R8,[SP, #+0]
   \   00000128   0C008DE5           STR      R0,[SP, #+12]
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   08008DE5           STR      R0,[SP, #+8]
   \   00000134   0200A0E3           MOV      R0,#+2
   \   00000138   04008DE5           STR      R0,[SP, #+4]
   \   0000013C   4E30A0E3           MOV      R3,#+78
   \   00000140   7920A0E3           MOV      R2,#+121
   \   00000144   2D10A0E3           MOV      R1,#+45
   \   00000148   B400A0E3           MOV      R0,#+180
   \   0000014C   ........           BL       BUTTON_CreateEx
   \   00000150   040084E5           STR      R0,[R4, #+4]
    976          	BUTTON_SetFont(hAnalog1, &GUI_Font24B_ASCII);
   \   00000154   0510A0E1           MOV      R1,R5
   \   00000158   ........           BL       BUTTON_SetFont
    977          	BUTTON_SetTextColor(hAnalog1, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   0000015C   0020A0E3           MOV      R2,#+0
   \   00000160   0010A0E3           MOV      R1,#+0
   \   00000164   040094E5           LDR      R0,[R4, #+4]
   \   00000168   ........           BL       BUTTON_SetTextColor
    978          	SetAnalogColorAndText(hAnalog1, 1);
   \   0000016C   D300D6E5           LDRB     R0,[R6, #+211]
   \   00000170   047094E5           LDR      R7,[R4, #+4]
   \   00000174   000050E3           CMP      R0,#+0
   \   00000178   0C00000A           BEQ      ??DisplayInputsSelection_4
   \   0000017C   0110A0E3           MOV      R1,#+1
   \   00000180   0100A0E3           MOV      R0,#+1
   \   00000184   ........           BL       GetAnalogInput
   \   00000188   C91086E2           ADD      R1,R6,#+201
   \   0000018C   00108DE5           STR      R1,[SP, #+0]
   \   00000190   ........           BL       __aeabi_f2d
   \   00000194   0020A0E1           MOV      R2,R0
   \   00000198   0130A0E1           MOV      R3,R1
   \   0000019C   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   000001A4   04008DE2           ADD      R0,SP,#+4
   \   000001A8   ........           BL       sprintf
   \   000001AC   040000EA           B        ??DisplayInputsSelection_5
   \                     ??DisplayInputsSelection_4:
   \   000001B0   0920A0E3           MOV      R2,#+9
   \   000001B4   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   000001BC   04008DE2           ADD      R0,SP,#+4
   \   000001C0   ........           BL       __aeabi_memcpy4
   \                     ??DisplayInputsSelection_5:
   \   000001C4   04108DE2           ADD      R1,SP,#+4
   \   000001C8   0700A0E1           MOV      R0,R7
   \   000001CC   ........           BL       BUTTON_SetText
   \   000001D0   D300D6E5           LDRB     R0,[R6, #+211]
   \   000001D4   000050E3           CMP      R0,#+0
   \   000001D8   0A00000A           BEQ      ??DisplayInputsSelection_6
   \   000001DC   D400D6E5           LDRB     R0,[R6, #+212]
   \   000001E0   020050E3           CMP      R0,#+2
   \   000001E4   D500D615           LDRBNE   R0,[R6, #+213]
   \   000001E8   01005013           CMPNE    R0,#+1
   \   000001EC   0500001A           BNE      ??DisplayInputsSelection_6
   \   000001F0   0100A0E3           MOV      R0,#+1
   \   000001F4   ........           BL       InAlarm
   \   000001F8   000050E3           CMP      R0,#+0
   \   000001FC   ........           LDRNE    R2,??DataTable159_13
   \   00000200   ........           LDREQ    R2,??DataTable159_14
   \   00000204   000000EA           B        ??DisplayInputsSelection_7
   \                     ??DisplayInputsSelection_6:
   \   00000208   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_7:
   \   0000020C   0010A0E3           MOV      R1,#+0
   \   00000210   0700A0E1           MOV      R0,R7
   \   00000214   ........           BL       BUTTON_SetBitmap
    979          
    980          	hDigital4 = BUTTON_CreateEx(324, 45, 121, 78, hParent, WM_CF_SHOW, 0, idD4);
   \   00000218   20009DE5           LDR      R0,[SP, #+32]
   \   0000021C   00808DE5           STR      R8,[SP, #+0]
   \   00000220   0C008DE5           STR      R0,[SP, #+12]
   \   00000224   0000A0E3           MOV      R0,#+0
   \   00000228   08008DE5           STR      R0,[SP, #+8]
   \   0000022C   0200A0E3           MOV      R0,#+2
   \   00000230   04008DE5           STR      R0,[SP, #+4]
   \   00000234   4E30A0E3           MOV      R3,#+78
   \   00000238   7920A0E3           MOV      R2,#+121
   \   0000023C   2D10A0E3           MOV      R1,#+45
   \   00000240   510FA0E3           MOV      R0,#+324
   \   00000244   ........           BL       BUTTON_CreateEx
   \   00000248   100084E5           STR      R0,[R4, #+16]
    981          	BUTTON_SetFont(hDigital4, &GUI_Font24B_ASCII);
   \   0000024C   0510A0E1           MOV      R1,R5
   \   00000250   ........           BL       BUTTON_SetFont
    982          	BUTTON_SetTextColor(hDigital4, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000254   0020A0E3           MOV      R2,#+0
   \   00000258   0010A0E3           MOV      R1,#+0
   \   0000025C   100094E5           LDR      R0,[R4, #+16]
   \   00000260   ........           BL       BUTTON_SetTextColor
    983          	SetDigitalColorAndText(hDigital4, 0);
   \   00000264   A301D6E5           LDRB     R0,[R6, #+419]
   \   00000268   107094E5           LDR      R7,[R4, #+16]
   \   0000026C   000050E3           CMP      R0,#+0
   \   00000270   0500000A           BEQ      ??DisplayInputsSelection_8
   \   00000274   0400A0E3           MOV      R0,#+4
   \   00000278   ........           BL       InAlarm
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   ........           LDRNE    R2,??DataTable159_13
   \   00000284   ........           LDREQ    R2,??DataTable159_14
   \   00000288   000000EA           B        ??DisplayInputsSelection_9
   \                     ??DisplayInputsSelection_8:
   \   0000028C   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_9:
   \   00000290   0010A0E3           MOV      R1,#+0
   \   00000294   0700A0E1           MOV      R0,R7
   \   00000298   ........           BL       BUTTON_SetBitmap
   \   0000029C   A301D6E5           LDRB     R0,[R6, #+419]
   \   000002A0   000050E3           CMP      R0,#+0
   \   000002A4   0400000A           BEQ      ??DisplayInputsSelection_10
   \   000002A8   0010A0E3           MOV      R1,#+0
   \   000002AC   0100A0E3           MOV      R0,#+1
   \   000002B0   ........           BL       GetDigitalText
   \   000002B4   0010A0E1           MOV      R1,R0
   \   000002B8   010000EA           B        ??DisplayInputsSelection_11
   \                     ??DisplayInputsSelection_10:
   \   000002BC   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \                     ??DisplayInputsSelection_11:
   \   000002C4   0700A0E1           MOV      R0,R7
   \   000002C8   ........           BL       BUTTON_SetText
    984          
    985          	hAnalog2 = BUTTON_CreateEx(36, 155, 121, 78, hParent, WM_CF_SHOW, 0, idA2);
   \   000002CC   0000A0E3           MOV      R0,#+0
   \   000002D0   08008DE5           STR      R0,[SP, #+8]
   \   000002D4   0200A0E3           MOV      R0,#+2
   \   000002D8   04008DE5           STR      R0,[SP, #+4]
   \   000002DC   0C908DE5           STR      R9,[SP, #+12]
   \   000002E0   00808DE5           STR      R8,[SP, #+0]
   \   000002E4   4E30A0E3           MOV      R3,#+78
   \   000002E8   7920A0E3           MOV      R2,#+121
   \   000002EC   9B10A0E3           MOV      R1,#+155
   \   000002F0   2400A0E3           MOV      R0,#+36
   \   000002F4   ........           BL       BUTTON_CreateEx
   \   000002F8   080084E5           STR      R0,[R4, #+8]
    986          	BUTTON_SetFont(hAnalog2, &GUI_Font24B_ASCII);
   \   000002FC   0510A0E1           MOV      R1,R5
   \   00000300   ........           BL       BUTTON_SetFont
    987          	BUTTON_SetTextColor(hAnalog2, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000304   0020A0E3           MOV      R2,#+0
   \   00000308   0010A0E3           MOV      R1,#+0
   \   0000030C   080094E5           LDR      R0,[R4, #+8]
   \   00000310   ........           BL       BUTTON_SetTextColor
    988          	SetAnalogColorAndText(hAnalog2, 2);
   \   00000314   1301D6E5           LDRB     R0,[R6, #+275]
   \   00000318   087094E5           LDR      R7,[R4, #+8]
   \   0000031C   000050E3           CMP      R0,#+0
   \   00000320   0E00000A           BEQ      ??DisplayInputsSelection_12
   \   00000324   0210A0E3           MOV      R1,#+2
   \   00000328   0100A0E3           MOV      R0,#+1
   \   0000032C   ........           BL       GetAnalogInput
   \   00000330   0910A0E3           MOV      R1,#+9
   \   00000334   401F81E3           ORR      R1,R1,#0x100
   \   00000338   061081E0           ADD      R1,R1,R6
   \   0000033C   00108DE5           STR      R1,[SP, #+0]
   \   00000340   ........           BL       __aeabi_f2d
   \   00000344   0020A0E1           MOV      R2,R0
   \   00000348   0130A0E1           MOV      R3,R1
   \   0000034C   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   00000354   04008DE2           ADD      R0,SP,#+4
   \   00000358   ........           BL       sprintf
   \   0000035C   040000EA           B        ??DisplayInputsSelection_13
   \                     ??DisplayInputsSelection_12:
   \   00000360   0920A0E3           MOV      R2,#+9
   \   00000364   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   0000036C   04008DE2           ADD      R0,SP,#+4
   \   00000370   ........           BL       __aeabi_memcpy4
   \                     ??DisplayInputsSelection_13:
   \   00000374   04108DE2           ADD      R1,SP,#+4
   \   00000378   0700A0E1           MOV      R0,R7
   \   0000037C   ........           BL       BUTTON_SetText
   \   00000380   1301D6E5           LDRB     R0,[R6, #+275]
   \   00000384   000050E3           CMP      R0,#+0
   \   00000388   0B00000A           BEQ      ??DisplayInputsSelection_14
   \   0000038C   1401D6E5           LDRB     R0,[R6, #+276]
   \   00000390   020050E3           CMP      R0,#+2
   \   00000394   0300000A           BEQ      ??DisplayInputsSelection_15
   \   00000398   1501D6E5           LDRB     R0,[R6, #+277]
   \   0000039C   010050E3           CMP      R0,#+1
   \   000003A0   0500001A           BNE      ??DisplayInputsSelection_14
   \   000003A4   0200A0E3           MOV      R0,#+2
   \                     ??DisplayInputsSelection_15:
   \   000003A8   ........           BL       InAlarm
   \   000003AC   000050E3           CMP      R0,#+0
   \   000003B0   ........           LDRNE    R2,??DataTable159_13
   \   000003B4   ........           LDREQ    R2,??DataTable159_14
   \   000003B8   000000EA           B        ??DisplayInputsSelection_16
   \                     ??DisplayInputsSelection_14:
   \   000003BC   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_16:
   \   000003C0   0010A0E3           MOV      R1,#+0
   \   000003C4   0700A0E1           MOV      R0,R7
   \   000003C8   ........           BL       BUTTON_SetBitmap
    989          
    990          	hAnalog3 = BUTTON_CreateEx(180, 155, 121, 78, hParent, WM_CF_SHOW, 0, idA3);
   \   000003CC   0000A0E3           MOV      R0,#+0
   \   000003D0   08008DE5           STR      R0,[SP, #+8]
   \   000003D4   0200A0E3           MOV      R0,#+2
   \   000003D8   04008DE5           STR      R0,[SP, #+4]
   \   000003DC   0CA08DE5           STR      R10,[SP, #+12]
   \   000003E0   00808DE5           STR      R8,[SP, #+0]
   \   000003E4   4E30A0E3           MOV      R3,#+78
   \   000003E8   7920A0E3           MOV      R2,#+121
   \   000003EC   9B10A0E3           MOV      R1,#+155
   \   000003F0   B400A0E3           MOV      R0,#+180
   \   000003F4   ........           BL       BUTTON_CreateEx
   \   000003F8   0C0084E5           STR      R0,[R4, #+12]
    991          	BUTTON_SetFont(hAnalog3, &GUI_Font24B_ASCII);
   \   000003FC   0510A0E1           MOV      R1,R5
   \   00000400   ........           BL       BUTTON_SetFont
    992          	BUTTON_SetTextColor(hAnalog3, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000404   0020A0E3           MOV      R2,#+0
   \   00000408   0010A0E3           MOV      R1,#+0
   \   0000040C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000410   ........           BL       BUTTON_SetTextColor
    993          	SetAnalogColorAndText(hAnalog3, 3);
   \   00000414   5301D6E5           LDRB     R0,[R6, #+339]
   \   00000418   0C7094E5           LDR      R7,[R4, #+12]
   \   0000041C   000050E3           CMP      R0,#+0
   \   00000420   0E00000A           BEQ      ??DisplayInputsSelection_17
   \   00000424   0310A0E3           MOV      R1,#+3
   \   00000428   0100A0E3           MOV      R0,#+1
   \   0000042C   ........           BL       GetAnalogInput
   \   00000430   4910A0E3           MOV      R1,#+73
   \   00000434   401F81E3           ORR      R1,R1,#0x100
   \   00000438   061081E0           ADD      R1,R1,R6
   \   0000043C   00108DE5           STR      R1,[SP, #+0]
   \   00000440   ........           BL       __aeabi_f2d
   \   00000444   0020A0E1           MOV      R2,R0
   \   00000448   0130A0E1           MOV      R3,R1
   \   0000044C   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   00000454   04008DE2           ADD      R0,SP,#+4
   \   00000458   ........           BL       sprintf
   \   0000045C   040000EA           B        ??DisplayInputsSelection_18
   \                     ??DisplayInputsSelection_17:
   \   00000460   0920A0E3           MOV      R2,#+9
   \   00000464   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   0000046C   04008DE2           ADD      R0,SP,#+4
   \   00000470   ........           BL       __aeabi_memcpy4
   \                     ??DisplayInputsSelection_18:
   \   00000474   04108DE2           ADD      R1,SP,#+4
   \   00000478   0700A0E1           MOV      R0,R7
   \   0000047C   ........           BL       BUTTON_SetText
   \   00000480   5301D6E5           LDRB     R0,[R6, #+339]
   \   00000484   000050E3           CMP      R0,#+0
   \   00000488   0A00000A           BEQ      ??DisplayInputsSelection_19
   \   0000048C   5401D6E5           LDRB     R0,[R6, #+340]
   \   00000490   020050E3           CMP      R0,#+2
   \   00000494   5501D615           LDRBNE   R0,[R6, #+341]
   \   00000498   01005013           CMPNE    R0,#+1
   \   0000049C   0500001A           BNE      ??DisplayInputsSelection_19
   \   000004A0   0300A0E3           MOV      R0,#+3
   \   000004A4   ........           BL       InAlarm
   \   000004A8   000050E3           CMP      R0,#+0
   \   000004AC   ........           LDRNE    R2,??DataTable159_13
   \   000004B0   ........           LDREQ    R2,??DataTable159_14
   \   000004B4   000000EA           B        ??DisplayInputsSelection_20
   \                     ??DisplayInputsSelection_19:
   \   000004B8   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_20:
   \   000004BC   0010A0E3           MOV      R1,#+0
   \   000004C0   0700A0E1           MOV      R0,R7
   \   000004C4   ........           BL       BUTTON_SetBitmap
    994          
    995          	hDigital5 = BUTTON_CreateEx(324, 155, 121, 78, hParent, WM_CF_SHOW, 0, idD5);
   \   000004C8   0000A0E3           MOV      R0,#+0
   \   000004CC   08008DE5           STR      R0,[SP, #+8]
   \   000004D0   0200A0E3           MOV      R0,#+2
   \   000004D4   04008DE5           STR      R0,[SP, #+4]
   \   000004D8   0CB08DE5           STR      R11,[SP, #+12]
   \   000004DC   00808DE5           STR      R8,[SP, #+0]
   \   000004E0   4E30A0E3           MOV      R3,#+78
   \   000004E4   7920A0E3           MOV      R2,#+121
   \   000004E8   9B10A0E3           MOV      R1,#+155
   \   000004EC   510FA0E3           MOV      R0,#+324
   \   000004F0   ........           BL       BUTTON_CreateEx
   \   000004F4   140084E5           STR      R0,[R4, #+20]
    996          	BUTTON_SetFont(hDigital5, &GUI_Font24B_ASCII);
   \   000004F8   0510A0E1           MOV      R1,R5
   \   000004FC   ........           BL       BUTTON_SetFont
    997          	BUTTON_SetTextColor(hDigital5, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000500   0020A0E3           MOV      R2,#+0
   \   00000504   0010A0E3           MOV      R1,#+0
   \   00000508   140094E5           LDR      R0,[R4, #+20]
   \   0000050C   ........           BL       BUTTON_SetTextColor
    998          	SetDigitalColorAndText(hDigital5, 1);
   \   00000510   D201D6E5           LDRB     R0,[R6, #+466]
   \   00000514   144094E5           LDR      R4,[R4, #+20]
   \   00000518   000050E3           CMP      R0,#+0
   \   0000051C   0500000A           BEQ      ??DisplayInputsSelection_21
   \   00000520   0500A0E3           MOV      R0,#+5
   \   00000524   ........           BL       InAlarm
   \   00000528   000050E3           CMP      R0,#+0
   \   0000052C   ........           LDRNE    R2,??DataTable159_13
   \   00000530   ........           LDREQ    R2,??DataTable159_14
   \   00000534   000000EA           B        ??DisplayInputsSelection_22
   \                     ??DisplayInputsSelection_21:
   \   00000538   ........           LDR      R2,??DataTable159_15
   \                     ??DisplayInputsSelection_22:
   \   0000053C   0010A0E3           MOV      R1,#+0
   \   00000540   0400A0E1           MOV      R0,R4
   \   00000544   ........           BL       BUTTON_SetBitmap
   \   00000548   D201D6E5           LDRB     R0,[R6, #+466]
   \   0000054C   000050E3           CMP      R0,#+0
   \   00000550   0400000A           BEQ      ??DisplayInputsSelection_23
   \   00000554   0110A0E3           MOV      R1,#+1
   \   00000558   0100A0E3           MOV      R0,#+1
   \   0000055C   ........           BL       GetDigitalText
   \   00000560   0010A0E1           MOV      R1,R0
   \   00000564   010000EA           B        ??DisplayInputsSelection_24
   \                     ??DisplayInputsSelection_23:
   \   00000568   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \                     ??DisplayInputsSelection_24:
   \   00000570   0400A0E1           MOV      R0,R4
   \   00000574   ........           BL       BUTTON_SetText
    999          }
   \   00000578   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   0000057C   F08FBDE8           POP      {R4-R11,PC}      ;; return
   1000          

   \                                 In section .text, align 4, keep-with-next
   1001          void InputsSelectionPaint(WM_HWIN hParent)
   1002          {
   \                     InputsSelectionPaint:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   20D04DE2           SUB      SP,SP,#+32
   1003          	GUI_RECT Rect;
   1004          
   1005          	GUI_DrawBitmap(&bmInputsBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable164
   \   00000014   ........           BL       GUI_DrawBitmap
   1006          	GUI_DrawBitmap(&bmInputText, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable164_1
   \   00000024   ........           BL       GUI_DrawBitmap
   1007          
   1008          	Rect.x0 = 3;
   \   00000028   0310A0E3           MOV      R1,#+3
   \   0000002C   B410CDE1           STRH     R1,[SP, #+4]
   1009          	Rect.y0 = 0;
   \   00000030   0040A0E3           MOV      R4,#+0
   1010          	Rect.x1 = 23;
   \   00000034   1710A0E3           MOV      R1,#+23
   1011          	Rect.y1 = YSIZE_PHYS;
   \   00000038   445FA0E3           MOV      R5,#+272
   \   0000003C   B640CDE1           STRH     R4,[SP, #+6]
   \   00000040   B810CDE1           STRH     R1,[SP, #+8]
   \   00000044   BA50CDE1           STRH     R5,[SP, #+10]
   1012          	GUI_SetFont(&GUI_Font20B_ASCII);
   \   00000048   ........           LDR      R0,??DataTable159
   \   0000004C   ........           BL       GUI_SetFont
   1013          	GUI_SetColor(GUI_YELLOW);
   \   00000050   FF00A0E3           MOV      R0,#+255
   \   00000054   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000058   ........           BL       GUI_SetColor
   1014          	GUI_SetTextMode(GUI_TEXTMODE_TRANS);
   \   0000005C   0200A0E3           MOV      R0,#+2
   \   00000060   ........           BL       GUI_SetTextMode
   1015          	GUI_DispStringInRectEx("ANALOG",
   1016          		&Rect,
   1017          		GUI_TA_HCENTER,
   1018          		6,
   1019          		GUI_ROTATE_CCW);
   \   00000064   ........           LDR      R6,??DataTable164_2
   \   00000068   0630A0E3           MOV      R3,#+6
   \   0000006C   00608DE5           STR      R6,[SP, #+0]
   \   00000070   0220A0E3           MOV      R2,#+2
   \   00000074   04108DE2           ADD      R1,SP,#+4
   \   00000078   ............       ADRL     R0,`?<Constant "ANALOG">`
   \              ....        
   \   00000080   ........           BL       GUI_DispStringInRectEx
   1020          
   1021          	Rect.x0 = XSIZE_PHYS - 23;
   \   00000084   B91085E2           ADD      R1,R5,#+185
   \   00000088   B410CDE1           STRH     R1,[SP, #+4]
   1022          	Rect.y0 = 0;
   1023          	Rect.x1 = XSIZE_PHYS - 3;
   \   0000008C   141081E3           ORR      R1,R1,#0x14
   1024          	Rect.y1 = YSIZE_PHYS;
   1025          	GUI_SetColor(GUI_CYAN);
   \   00000090   FF08A0E3           MOV      R0,#+16711680
   \   00000094   B640CDE1           STRH     R4,[SP, #+6]
   \   00000098   B810CDE1           STRH     R1,[SP, #+8]
   \   0000009C   BA50CDE1           STRH     R5,[SP, #+10]
   \   000000A0   FF0C80E3           ORR      R0,R0,#0xFF00
   \   000000A4   ........           BL       GUI_SetColor
   1026          	GUI_DispStringInRectEx("DIGITAL",
   1027          		&Rect,
   1028          		GUI_TA_HCENTER,
   1029          		20,
   1030          		GUI_ROTATE_CCW);
   \   000000A8   00608DE5           STR      R6,[SP, #+0]
   \   000000AC   1430A0E3           MOV      R3,#+20
   \   000000B0   0220A0E3           MOV      R2,#+2
   \   000000B4   04108DE2           ADD      R1,SP,#+4
   \   000000B8   ............       ADRL     R0,`?<Constant "DIGITAL">`
   \              ....        
   \   000000C0   ........           BL       GUI_DispStringInRectEx
   1031          
   1032          
   1033          	GUI_SetColor(GUI_BLACK);					// Draw shadow text due to light background
   \   000000C4   0000A0E3           MOV      R0,#+0
   \   000000C8   ........           BL       GUI_SetColor
   1034          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   000000CC   ........           LDR      R0,??DataTable164_3
   \   000000D0   ........           BL       GUI_SetFont
   1035          	GUI_DispStringHCenterAt(vehicleData.analogInput[0].Name, 98, 127);
   \   000000D4   ........           LDR      R4,??DataTable159_6
   \   000000D8   7F20A0E3           MOV      R2,#+127
   \   000000DC   6210A0E3           MOV      R1,#+98
   \   000000E0   780084E2           ADD      R0,R4,#+120
   \   000000E4   ........           BL       GUI_DispStringHCenterAt
   1036          	GUI_DispStringHCenterAt(vehicleData.analogInput[1].Name, 242, 127);
   \   000000E8   7F20A0E3           MOV      R2,#+127
   \   000000EC   F210A0E3           MOV      R1,#+242
   \   000000F0   B80084E2           ADD      R0,R4,#+184
   \   000000F4   ........           BL       GUI_DispStringHCenterAt
   1037          	GUI_DispStringHCenterAt(vehicleData.digitalInput[0].Name, 386, 127);
   \   000000F8   7F20A0E3           MOV      R2,#+127
   \   000000FC   721085E2           ADD      R1,R5,#+114
   \   00000100   5E0F84E2           ADD      R0,R4,#+376
   \   00000104   ........           BL       GUI_DispStringHCenterAt
   1038          
   1039          	GUI_SetColor(GUI_WHITE);
   \   00000108   FF04E0E3           MVN      R0,#-16777216
   \   0000010C   ........           BL       GUI_SetColor
   1040          	GUI_DispStringHCenterAt(vehicleData.analogInput[0].Name, 96, 125);
   \   00000110   7D20A0E3           MOV      R2,#+125
   \   00000114   6010A0E3           MOV      R1,#+96
   \   00000118   780084E2           ADD      R0,R4,#+120
   \   0000011C   ........           BL       GUI_DispStringHCenterAt
   1041          	GUI_DispStringHCenterAt(vehicleData.analogInput[1].Name, 240, 125);
   \   00000120   7D20A0E3           MOV      R2,#+125
   \   00000124   F010A0E3           MOV      R1,#+240
   \   00000128   B80084E2           ADD      R0,R4,#+184
   \   0000012C   ........           BL       GUI_DispStringHCenterAt
   1042          	GUI_DispStringHCenterAt(vehicleData.digitalInput[0].Name, 384, 125);
   \   00000130   7D20A0E3           MOV      R2,#+125
   \   00000134   601FA0E3           MOV      R1,#+384
   \   00000138   5E0F84E2           ADD      R0,R4,#+376
   \   0000013C   ........           BL       GUI_DispStringHCenterAt
   1043          	GUI_DispStringHCenterAt(vehicleData.analogInput[2].Name, 96, 235);
   \   00000140   EB20A0E3           MOV      R2,#+235
   \   00000144   6010A0E3           MOV      R1,#+96
   \   00000148   F80084E2           ADD      R0,R4,#+248
   \   0000014C   ........           BL       GUI_DispStringHCenterAt
   1044          	GUI_DispStringHCenterAt(vehicleData.analogInput[3].Name, 240, 235);
   \   00000150   EB20A0E3           MOV      R2,#+235
   \   00000154   F010A0E3           MOV      R1,#+240
   \   00000158   4E0F84E2           ADD      R0,R4,#+312
   \   0000015C   ........           BL       GUI_DispStringHCenterAt
   1045          	GUI_DispStringHCenterAt(vehicleData.digitalInput[1].Name, 384, 235);
   \   00000160   601FA0E3           MOV      R1,#+384
   \   00000164   270081E3           ORR      R0,R1,#0x27
   \   00000168   EB20A0E3           MOV      R2,#+235
   \   0000016C   040080E0           ADD      R0,R0,R4
   \   00000170   ........           BL       GUI_DispStringHCenterAt
   1046          
   1047          	// Draw the data values in USER UNITS
   1048          	SetAnalogColorAndText(hAnalog0, 0);
   \   00000174   9300D4E5           LDRB     R0,[R4, #+147]
   \   00000178   ........           LDR      R5,??DataTable159_12
   \   0000017C   006095E5           LDR      R6,[R5, #+0]
   \   00000180   000050E3           CMP      R0,#+0
   \   00000184   0C00000A           BEQ      ??InputsSelectionPaint_0
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   0100A0E3           MOV      R0,#+1
   \   00000190   ........           BL       GetAnalogInput
   \   00000194   891084E2           ADD      R1,R4,#+137
   \   00000198   00108DE5           STR      R1,[SP, #+0]
   \   0000019C   ........           BL       __aeabi_f2d
   \   000001A0   0020A0E1           MOV      R2,R0
   \   000001A4   0130A0E1           MOV      R3,R1
   \   000001A8   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   000001B0   0C008DE2           ADD      R0,SP,#+12
   \   000001B4   ........           BL       sprintf
   \   000001B8   040000EA           B        ??InputsSelectionPaint_1
   \                     ??InputsSelectionPaint_0:
   \   000001BC   0920A0E3           MOV      R2,#+9
   \   000001C0   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   000001C8   0C008DE2           ADD      R0,SP,#+12
   \   000001CC   ........           BL       __aeabi_memcpy4
   \                     ??InputsSelectionPaint_1:
   \   000001D0   0C108DE2           ADD      R1,SP,#+12
   \   000001D4   0600A0E1           MOV      R0,R6
   \   000001D8   ........           BL       BUTTON_SetText
   \   000001DC   9300D4E5           LDRB     R0,[R4, #+147]
   \   000001E0   000050E3           CMP      R0,#+0
   \   000001E4   0A00000A           BEQ      ??InputsSelectionPaint_2
   \   000001E8   9400D4E5           LDRB     R0,[R4, #+148]
   \   000001EC   020050E3           CMP      R0,#+2
   \   000001F0   9500D415           LDRBNE   R0,[R4, #+149]
   \   000001F4   01005013           CMPNE    R0,#+1
   \   000001F8   0500001A           BNE      ??InputsSelectionPaint_2
   \   000001FC   0000A0E3           MOV      R0,#+0
   \   00000200   ........           BL       InAlarm
   \   00000204   000050E3           CMP      R0,#+0
   \   00000208   ........           LDRNE    R2,??DataTable159_13
   \   0000020C   ........           LDREQ    R2,??DataTable159_14
   \   00000210   000000EA           B        ??InputsSelectionPaint_3
   \                     ??InputsSelectionPaint_2:
   \   00000214   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_3:
   \   00000218   0010A0E3           MOV      R1,#+0
   \   0000021C   0600A0E1           MOV      R0,R6
   \   00000220   ........           BL       BUTTON_SetBitmap
   1049          	SetAnalogColorAndText(hAnalog1, 1);
   \   00000224   D300D4E5           LDRB     R0,[R4, #+211]
   \   00000228   046095E5           LDR      R6,[R5, #+4]
   \   0000022C   000050E3           CMP      R0,#+0
   \   00000230   0C00000A           BEQ      ??InputsSelectionPaint_4
   \   00000234   0110A0E3           MOV      R1,#+1
   \   00000238   0100A0E3           MOV      R0,#+1
   \   0000023C   ........           BL       GetAnalogInput
   \   00000240   C91084E2           ADD      R1,R4,#+201
   \   00000244   00108DE5           STR      R1,[SP, #+0]
   \   00000248   ........           BL       __aeabi_f2d
   \   0000024C   0020A0E1           MOV      R2,R0
   \   00000250   0130A0E1           MOV      R3,R1
   \   00000254   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   0000025C   0C008DE2           ADD      R0,SP,#+12
   \   00000260   ........           BL       sprintf
   \   00000264   040000EA           B        ??InputsSelectionPaint_5
   \                     ??InputsSelectionPaint_4:
   \   00000268   0920A0E3           MOV      R2,#+9
   \   0000026C   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   00000274   0C008DE2           ADD      R0,SP,#+12
   \   00000278   ........           BL       __aeabi_memcpy4
   \                     ??InputsSelectionPaint_5:
   \   0000027C   0C108DE2           ADD      R1,SP,#+12
   \   00000280   0600A0E1           MOV      R0,R6
   \   00000284   ........           BL       BUTTON_SetText
   \   00000288   D300D4E5           LDRB     R0,[R4, #+211]
   \   0000028C   000050E3           CMP      R0,#+0
   \   00000290   0A00000A           BEQ      ??InputsSelectionPaint_6
   \   00000294   D400D4E5           LDRB     R0,[R4, #+212]
   \   00000298   020050E3           CMP      R0,#+2
   \   0000029C   D500D415           LDRBNE   R0,[R4, #+213]
   \   000002A0   01005013           CMPNE    R0,#+1
   \   000002A4   0500001A           BNE      ??InputsSelectionPaint_6
   \   000002A8   0100A0E3           MOV      R0,#+1
   \   000002AC   ........           BL       InAlarm
   \   000002B0   000050E3           CMP      R0,#+0
   \   000002B4   ........           LDRNE    R2,??DataTable159_13
   \   000002B8   ........           LDREQ    R2,??DataTable159_14
   \   000002BC   000000EA           B        ??InputsSelectionPaint_7
   \                     ??InputsSelectionPaint_6:
   \   000002C0   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_7:
   \   000002C4   0010A0E3           MOV      R1,#+0
   \   000002C8   0600A0E1           MOV      R0,R6
   \   000002CC   ........           BL       BUTTON_SetBitmap
   1050          	SetAnalogColorAndText(hAnalog2, 2);
   \   000002D0   1301D4E5           LDRB     R0,[R4, #+275]
   \   000002D4   086095E5           LDR      R6,[R5, #+8]
   \   000002D8   000050E3           CMP      R0,#+0
   \   000002DC   0E00000A           BEQ      ??InputsSelectionPaint_8
   \   000002E0   0210A0E3           MOV      R1,#+2
   \   000002E4   0100A0E3           MOV      R0,#+1
   \   000002E8   ........           BL       GetAnalogInput
   \   000002EC   0910A0E3           MOV      R1,#+9
   \   000002F0   401F81E3           ORR      R1,R1,#0x100
   \   000002F4   041081E0           ADD      R1,R1,R4
   \   000002F8   00108DE5           STR      R1,[SP, #+0]
   \   000002FC   ........           BL       __aeabi_f2d
   \   00000300   0020A0E1           MOV      R2,R0
   \   00000304   0130A0E1           MOV      R3,R1
   \   00000308   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   00000310   0C008DE2           ADD      R0,SP,#+12
   \   00000314   ........           BL       sprintf
   \   00000318   040000EA           B        ??InputsSelectionPaint_9
   \                     ??InputsSelectionPaint_8:
   \   0000031C   0920A0E3           MOV      R2,#+9
   \   00000320   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   00000328   0C008DE2           ADD      R0,SP,#+12
   \   0000032C   ........           BL       __aeabi_memcpy4
   \                     ??InputsSelectionPaint_9:
   \   00000330   0C108DE2           ADD      R1,SP,#+12
   \   00000334   0600A0E1           MOV      R0,R6
   \   00000338   ........           BL       BUTTON_SetText
   \   0000033C   1301D4E5           LDRB     R0,[R4, #+275]
   \   00000340   000050E3           CMP      R0,#+0
   \   00000344   0B00000A           BEQ      ??InputsSelectionPaint_10
   \   00000348   1401D4E5           LDRB     R0,[R4, #+276]
   \   0000034C   020050E3           CMP      R0,#+2
   \   00000350   0300000A           BEQ      ??InputsSelectionPaint_11
   \   00000354   1501D4E5           LDRB     R0,[R4, #+277]
   \   00000358   010050E3           CMP      R0,#+1
   \   0000035C   0500001A           BNE      ??InputsSelectionPaint_10
   \   00000360   0200A0E3           MOV      R0,#+2
   \                     ??InputsSelectionPaint_11:
   \   00000364   ........           BL       InAlarm
   \   00000368   000050E3           CMP      R0,#+0
   \   0000036C   ........           LDRNE    R2,??DataTable159_13
   \   00000370   ........           LDREQ    R2,??DataTable159_14
   \   00000374   000000EA           B        ??InputsSelectionPaint_12
   \                     ??InputsSelectionPaint_10:
   \   00000378   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_12:
   \   0000037C   0010A0E3           MOV      R1,#+0
   \   00000380   0600A0E1           MOV      R0,R6
   \   00000384   ........           BL       BUTTON_SetBitmap
   1051          	SetAnalogColorAndText(hAnalog3, 3);
   \   00000388   5301D4E5           LDRB     R0,[R4, #+339]
   \   0000038C   0C6095E5           LDR      R6,[R5, #+12]
   \   00000390   000050E3           CMP      R0,#+0
   \   00000394   0E00000A           BEQ      ??InputsSelectionPaint_13
   \   00000398   0310A0E3           MOV      R1,#+3
   \   0000039C   0100A0E3           MOV      R0,#+1
   \   000003A0   ........           BL       GetAnalogInput
   \   000003A4   4910A0E3           MOV      R1,#+73
   \   000003A8   401F81E3           ORR      R1,R1,#0x100
   \   000003AC   041081E0           ADD      R1,R1,R4
   \   000003B0   00108DE5           STR      R1,[SP, #+0]
   \   000003B4   ........           BL       __aeabi_f2d
   \   000003B8   0020A0E1           MOV      R2,R0
   \   000003BC   0130A0E1           MOV      R3,R1
   \   000003C0   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   000003C8   0C008DE2           ADD      R0,SP,#+12
   \   000003CC   ........           BL       sprintf
   \   000003D0   040000EA           B        ??InputsSelectionPaint_14
   \                     ??InputsSelectionPaint_13:
   \   000003D4   0920A0E3           MOV      R2,#+9
   \   000003D8   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   000003E0   0C008DE2           ADD      R0,SP,#+12
   \   000003E4   ........           BL       __aeabi_memcpy4
   \                     ??InputsSelectionPaint_14:
   \   000003E8   0C108DE2           ADD      R1,SP,#+12
   \   000003EC   0600A0E1           MOV      R0,R6
   \   000003F0   ........           BL       BUTTON_SetText
   \   000003F4   5301D4E5           LDRB     R0,[R4, #+339]
   \   000003F8   000050E3           CMP      R0,#+0
   \   000003FC   0A00000A           BEQ      ??InputsSelectionPaint_15
   \   00000400   5401D4E5           LDRB     R0,[R4, #+340]
   \   00000404   020050E3           CMP      R0,#+2
   \   00000408   5501D415           LDRBNE   R0,[R4, #+341]
   \   0000040C   01005013           CMPNE    R0,#+1
   \   00000410   0500001A           BNE      ??InputsSelectionPaint_15
   \   00000414   0300A0E3           MOV      R0,#+3
   \   00000418   ........           BL       InAlarm
   \   0000041C   000050E3           CMP      R0,#+0
   \   00000420   ........           LDRNE    R2,??DataTable159_13
   \   00000424   ........           LDREQ    R2,??DataTable159_14
   \   00000428   000000EA           B        ??InputsSelectionPaint_16
   \                     ??InputsSelectionPaint_15:
   \   0000042C   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_16:
   \   00000430   0010A0E3           MOV      R1,#+0
   \   00000434   0600A0E1           MOV      R0,R6
   \   00000438   ........           BL       BUTTON_SetBitmap
   1052          	SetDigitalColorAndText(hDigital4, 0);
   \   0000043C   A301D4E5           LDRB     R0,[R4, #+419]
   \   00000440   106095E5           LDR      R6,[R5, #+16]
   \   00000444   000050E3           CMP      R0,#+0
   \   00000448   0500000A           BEQ      ??InputsSelectionPaint_17
   \   0000044C   0400A0E3           MOV      R0,#+4
   \   00000450   ........           BL       InAlarm
   \   00000454   000050E3           CMP      R0,#+0
   \   00000458   ........           LDRNE    R2,??DataTable159_13
   \   0000045C   ........           LDREQ    R2,??DataTable159_14
   \   00000460   000000EA           B        ??InputsSelectionPaint_18
   \                     ??InputsSelectionPaint_17:
   \   00000464   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_18:
   \   00000468   0010A0E3           MOV      R1,#+0
   \   0000046C   0600A0E1           MOV      R0,R6
   \   00000470   ........           BL       BUTTON_SetBitmap
   \   00000474   A301D4E5           LDRB     R0,[R4, #+419]
   \   00000478   000050E3           CMP      R0,#+0
   \   0000047C   0400000A           BEQ      ??InputsSelectionPaint_19
   \   00000480   0010A0E3           MOV      R1,#+0
   \   00000484   0100A0E3           MOV      R0,#+1
   \   00000488   ........           BL       GetDigitalText
   \   0000048C   0010A0E1           MOV      R1,R0
   \   00000490   010000EA           B        ??InputsSelectionPaint_20
   \                     ??InputsSelectionPaint_19:
   \   00000494   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \                     ??InputsSelectionPaint_20:
   \   0000049C   0600A0E1           MOV      R0,R6
   \   000004A0   ........           BL       BUTTON_SetText
   1053          	SetDigitalColorAndText(hDigital5, 1);
   \   000004A4   D201D4E5           LDRB     R0,[R4, #+466]
   \   000004A8   145095E5           LDR      R5,[R5, #+20]
   \   000004AC   000050E3           CMP      R0,#+0
   \   000004B0   0500000A           BEQ      ??InputsSelectionPaint_21
   \   000004B4   0500A0E3           MOV      R0,#+5
   \   000004B8   ........           BL       InAlarm
   \   000004BC   000050E3           CMP      R0,#+0
   \   000004C0   ........           LDRNE    R2,??DataTable159_13
   \   000004C4   ........           LDREQ    R2,??DataTable159_14
   \   000004C8   000000EA           B        ??InputsSelectionPaint_22
   \                     ??InputsSelectionPaint_21:
   \   000004CC   ........           LDR      R2,??DataTable159_15
   \                     ??InputsSelectionPaint_22:
   \   000004D0   0010A0E3           MOV      R1,#+0
   \   000004D4   0500A0E1           MOV      R0,R5
   \   000004D8   ........           BL       BUTTON_SetBitmap
   \   000004DC   D201D4E5           LDRB     R0,[R4, #+466]
   \   000004E0   000050E3           CMP      R0,#+0
   \   000004E4   0400000A           BEQ      ??InputsSelectionPaint_23
   \   000004E8   0110A0E3           MOV      R1,#+1
   \   000004EC   0100A0E3           MOV      R0,#+1
   \   000004F0   ........           BL       GetDigitalText
   \   000004F4   0010A0E1           MOV      R1,R0
   \   000004F8   010000EA           B        ??InputsSelectionPaint_24
   \                     ??InputsSelectionPaint_23:
   \   000004FC   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \                     ??InputsSelectionPaint_24:
   \   00000504   0500A0E1           MOV      R0,R5
   \   00000508   ........           BL       BUTTON_SetText
   1054          
   1055          	GUI_DrawBitmap(GetNavigationArrow(INPUTS_SELECTION), 0, 229);
   \   0000050C   E520A0E3           MOV      R2,#+229
   \   00000510   0010A0E3           MOV      R1,#+0
   \   00000514   ........           LDR      R0,??DataTable159_4
   \   00000518   ........           BL       GUI_DrawBitmap
   1056          }
   \   0000051C   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   00000520   7080BDE8           POP      {R4-R6,PC}       ;; return
   1057          
   1058          

   \                                 In section .text, align 4, keep-with-next
   1059          void DisplayGearRatio(WM_HWIN hParent)
   1060          {
   \                     DisplayGearRatio:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   1061          	BUTTON_Handle hBtn;
   1062          
   1063          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 83, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, TIRE_SIZE_BUTTON);
   \   00000004   0250A0E3           MOV      R5,#+2
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   405F85E3           ORR      R5,R5,#0x100
   \   00000010   14D04DE2           SUB      SP,SP,#+20
   \   00000014   700E85E2           ADD      R0,R5,#+1792
   \   00000018   0C008DE5           STR      R0,[SP, #+12]
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   08008DE5           STR      R0,[SP, #+8]
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   04008DE5           STR      R0,[SP, #+4]
   \   0000002C   00408DE5           STR      R4,[SP, #+0]
   \   00000030   2730A0E3           MOV      R3,#+39
   \   00000034   CA20A0E3           MOV      R2,#+202
   \   00000038   5310A0E3           MOV      R1,#+83
   \   0000003C   0500A0E1           MOV      R0,R5
   \   00000040   ........           BL       BUTTON_CreateEx
   \   00000044   0060A0E1           MOV      R6,R0
   1064          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   00000048   ........           LDR      R2,??DataTable166
   \   0000004C   0010A0E3           MOV      R1,#+0
   \   00000050   ........           BL       BUTTON_SetBitmap
   1065          	BUTTON_SetText(hBtn, "Enter Tire Size");
   \   00000054   ............       ADRL     R1,`?<Constant "Enter Tire Size">`
   \              ....        
   \   0000005C   0600A0E1           MOV      R0,R6
   \   00000060   ........           BL       BUTTON_SetText
   1066          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   00000064   0020A0E3           MOV      R2,#+0
   \   00000068   0010A0E3           MOV      R1,#+0
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   ........           BL       BUTTON_SetTextColor
   1067          
   1068          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 129, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, DIFF_RATIO_BUTTON);
   \   00000074   0300A0E3           MOV      R0,#+3
   \   00000078   800E80E3           ORR      R0,R0,#0x800
   \   0000007C   0C008DE5           STR      R0,[SP, #+12]
   \   00000080   0000A0E3           MOV      R0,#+0
   \   00000084   08008DE5           STR      R0,[SP, #+8]
   \   00000088   0200A0E3           MOV      R0,#+2
   \   0000008C   04008DE5           STR      R0,[SP, #+4]
   \   00000090   00408DE5           STR      R4,[SP, #+0]
   \   00000094   2730A0E3           MOV      R3,#+39
   \   00000098   CA20A0E3           MOV      R2,#+202
   \   0000009C   8110A0E3           MOV      R1,#+129
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   ........           BL       BUTTON_CreateEx
   \   000000A8   0060A0E1           MOV      R6,R0
   1069          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmYellowButton);
   \   000000AC   ........           LDR      R2,??DataTable166_1
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   ........           BL       BUTTON_SetBitmap
   1070          	BUTTON_SetText(hBtn, "Enter Diff Ratio");
   \   000000B8   ............       ADRL     R1,`?<Constant "Enter Diff Ratio">`
   \              ....        
   \   000000C0   0600A0E1           MOV      R0,R6
   \   000000C4   ........           BL       BUTTON_SetText
   1071          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_BLACK);
   \   000000C8   0020A0E3           MOV      R2,#+0
   \   000000CC   0010A0E3           MOV      R1,#+0
   \   000000D0   0600A0E1           MOV      R0,R6
   \   000000D4   ........           BL       BUTTON_SetTextColor
   1072          
   1073          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 174, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, TRANS_RATIO_BUTTON);
   \   000000D8   0400A0E3           MOV      R0,#+4
   \   000000DC   800E80E3           ORR      R0,R0,#0x800
   \   000000E0   0C008DE5           STR      R0,[SP, #+12]
   \   000000E4   0000A0E3           MOV      R0,#+0
   \   000000E8   08008DE5           STR      R0,[SP, #+8]
   \   000000EC   0200A0E3           MOV      R0,#+2
   \   000000F0   04008DE5           STR      R0,[SP, #+4]
   \   000000F4   00408DE5           STR      R4,[SP, #+0]
   \   000000F8   2730A0E3           MOV      R3,#+39
   \   000000FC   CA20A0E3           MOV      R2,#+202
   \   00000100   AE10A0E3           MOV      R1,#+174
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           BL       BUTTON_CreateEx
   \   0000010C   0060A0E1           MOV      R6,R0
   1074          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   00000110   ........           LDR      R2,??DataTable167
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   ........           BL       BUTTON_SetBitmap
   1075          	BUTTON_SetText(hBtn, "Enter Trans Ratios");
   \   0000011C   ............       ADRL     R1,`?<Constant "Enter Trans Ratios">`
   \              ....        
   \   00000124   0600A0E1           MOV      R0,R6
   \   00000128   ........           BL       BUTTON_SetText
   1076          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   0000012C   FF74E0E3           MVN      R7,#-16777216
   \   00000130   0720A0E1           MOV      R2,R7
   \   00000134   0010A0E3           MOV      R1,#+0
   \   00000138   0600A0E1           MOV      R0,R6
   \   0000013C   ........           BL       BUTTON_SetTextColor
   1077          
   1078          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, 218, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, HELP_BUTTON);
   \   00000140   0500A0E3           MOV      R0,#+5
   \   00000144   800E80E3           ORR      R0,R0,#0x800
   \   00000148   0C008DE5           STR      R0,[SP, #+12]
   \   0000014C   0000A0E3           MOV      R0,#+0
   \   00000150   08008DE5           STR      R0,[SP, #+8]
   \   00000154   0200A0E3           MOV      R0,#+2
   \   00000158   04008DE5           STR      R0,[SP, #+4]
   \   0000015C   00408DE5           STR      R4,[SP, #+0]
   \   00000160   2730A0E3           MOV      R3,#+39
   \   00000164   CA20A0E3           MOV      R2,#+202
   \   00000168   DA10A0E3           MOV      R1,#+218
   \   0000016C   0500A0E1           MOV      R0,R5
   \   00000170   ........           BL       BUTTON_CreateEx
   \   00000174   0040A0E1           MOV      R4,R0
   1079          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   00000178   ........           LDR      R2,??DataTable169
   \   0000017C   0010A0E3           MOV      R1,#+0
   \   00000180   ........           BL       BUTTON_SetBitmap
   1080          	BUTTON_SetText(hBtn, "Gearing Help");
   \   00000184   ............       ADRL     R1,`?<Constant "Gearing Help">`
   \              ....        
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   ........           BL       BUTTON_SetText
   1081          	BUTTON_SetTextColor(hBtn, BUTTON_BI_UNPRESSED, GUI_WHITE);
   \   00000194   0720A0E1           MOV      R2,R7
   \   00000198   0400A0E1           MOV      R0,R4
   \   0000019C   14D08DE2           ADD      SP,SP,#+20
   \   000001A0   F040BDE8           POP      {R4-R7,LR}
   \   000001A4   0010A0E3           MOV      R1,#+0
   \   000001A8   ........           B        BUTTON_SetTextColor  ;; tailcall
   1082          }
   1083          
   1084          #define	LINE_SPACING	30
   1085          #define	LINE_GAP				15
   1086          #define	GEAR_TABLE_TOP		((LINE_SPACING*3) + 10)
   1087          #define	GEAR_TABLE_VGAP	25
   1088          #define	SECOND_COL_GAP		((((BOX_RIGHT - LINE_GAP) - (BOX_LEFT + LINE_GAP)) / 4) + LINE_GAP)
   1089          #define	THIRD_COL_GAP		((BOX_RIGHT - BOX_LEFT)/2 + (LINE_GAP/2))
   1090          #define	FORTH_COL_GAP		(((((BOX_RIGHT - LINE_GAP) - (BOX_LEFT + LINE_GAP)) / 4) * 3) + LINE_GAP)
   1091          

   \                                 In section .text, align 4, keep-with-next
   1092          void GearRatioPaint(WM_HWIN hParent)
   1093          {
   \                     GearRatioPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   1CD04DE2           SUB      SP,SP,#+28
   1094          	char scratch[20];
   1095          
   1096          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable168
   \   00000014   ........           BL       GUI_DrawBitmap
   1097          	GUI_DrawBitmap(&bmGearing, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable168_1
   \   00000024   ........           BL       GUI_DrawBitmap
   1098          
   1099          	// Draw left side square for data
   1100          	GUI_DrawRoundedRect(BOX_LEFT, BOX_TOP, BOX_RIGHT, BOX_BOTTOM, 5);
   \   00000028   0500A0E3           MOV      R0,#+5
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   FF30A0E3           MOV      R3,#+255
   \   00000034   F520A0E3           MOV      R2,#+245
   \   00000038   3310A0E3           MOV      R1,#+51
   \   0000003C   1B00A0E3           MOV      R0,#+27
   \   00000040   ........           BL       GUI_DrawRoundedRect
   1101          	GUI_SetColor(GUI_GRAY);
   \   00000044   ........           LDR      R4,??DataTable169_1  ;; 0x808080
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       GUI_SetColor
   1102          	GUI_FillRoundedRect(BOX_LEFT, BOX_TOP, BOX_RIGHT, BOX_BOTTOM, 5);
   \   00000050   0500A0E3           MOV      R0,#+5
   \   00000054   00008DE5           STR      R0,[SP, #+0]
   \   00000058   FF30A0E3           MOV      R3,#+255
   \   0000005C   F520A0E3           MOV      R2,#+245
   \   00000060   3310A0E3           MOV      R1,#+51
   \   00000064   1B00A0E3           MOV      R0,#+27
   \   00000068   ........           BL       GUI_FillRoundedRect
   1103          
   1104          	GUI_DrawRoundedRect(BOX_LEFT+2, BOX_TOP+2, BOX_RIGHT-2, BOX_BOTTOM - 2, 5);
   \   0000006C   0500A0E3           MOV      R0,#+5
   \   00000070   00008DE5           STR      R0,[SP, #+0]
   \   00000074   FD30A0E3           MOV      R3,#+253
   \   00000078   F320A0E3           MOV      R2,#+243
   \   0000007C   3510A0E3           MOV      R1,#+53
   \   00000080   1D00A0E3           MOV      R0,#+29
   \   00000084   ........           BL       GUI_DrawRoundedRect
   1105          	GUI_SetColor(GUI_BLACK);
   \   00000088   0000A0E3           MOV      R0,#+0
   \   0000008C   ........           BL       GUI_SetColor
   1106          	GUI_FillRoundedRect(BOX_LEFT+2, BOX_TOP+2, BOX_RIGHT-2, BOX_BOTTOM - 2, 5);
   \   00000090   0500A0E3           MOV      R0,#+5
   \   00000094   00008DE5           STR      R0,[SP, #+0]
   \   00000098   FD30A0E3           MOV      R3,#+253
   \   0000009C   F320A0E3           MOV      R2,#+243
   \   000000A0   3510A0E3           MOV      R1,#+53
   \   000000A4   1D00A0E3           MOV      R0,#+29
   \   000000A8   ........           BL       GUI_FillRoundedRect
   1107          
   1108          	// draw 3 gray lines for field seperators
   1109          	GUI_SetPenSize(3);
   \   000000AC   0300A0E3           MOV      R0,#+3
   \   000000B0   ........           BL       GUI_SetPenSize
   1110          	GUI_SetColor(GUI_GRAY);
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       GUI_SetColor
   1111          	GUI_DrawLine(BOX_LEFT + LINE_GAP, BOX_TOP + LINE_SPACING, BOX_RIGHT - LINE_GAP, BOX_TOP + LINE_SPACING);
   \   000000BC   5130A0E3           MOV      R3,#+81
   \   000000C0   E620A0E3           MOV      R2,#+230
   \   000000C4   5110A0E3           MOV      R1,#+81
   \   000000C8   2A00A0E3           MOV      R0,#+42
   \   000000CC   ........           BL       GUI_DrawLine
   1112          
   1113          	GUI_SetPenSize(2);
   \   000000D0   0200A0E3           MOV      R0,#+2
   \   000000D4   ........           BL       GUI_SetPenSize
   1114          	GUI_DrawLine(BOX_LEFT + LINE_GAP, BOX_TOP + LINE_SPACING*2, BOX_RIGHT - LINE_GAP, BOX_TOP + LINE_SPACING*2);
   \   000000D8   6F30A0E3           MOV      R3,#+111
   \   000000DC   E620A0E3           MOV      R2,#+230
   \   000000E0   6F10A0E3           MOV      R1,#+111
   \   000000E4   2A00A0E3           MOV      R0,#+42
   \   000000E8   ........           BL       GUI_DrawLine
   1115          	GUI_DrawLine(BOX_LEFT + LINE_GAP, BOX_TOP + LINE_SPACING*3, BOX_RIGHT - LINE_GAP, BOX_TOP + LINE_SPACING*3);
   \   000000EC   8D30A0E3           MOV      R3,#+141
   \   000000F0   E620A0E3           MOV      R2,#+230
   \   000000F4   8D10A0E3           MOV      R1,#+141
   \   000000F8   2A00A0E3           MOV      R0,#+42
   \   000000FC   ........           BL       GUI_DrawLine
   1116          
   1117          	// Draw text:
   1118          	// Draw tire size
   1119          	GUI_SetFont(&GUI_Font24_ASCII);
   \   00000100   ........           LDR      R0,??DataTable169_2
   \   00000104   ........           BL       GUI_SetFont
   1120          	GUI_SetColor(GUI_GREEN);
   \   00000108   FF0CA0E3           MOV      R0,#+65280
   \   0000010C   ........           BL       GUI_SetColor
   1121          	if (vehicleData.userEnteredTireDimensions)
   \   00000110   ........           LDR      R4,??DataTable169_3
   \   00000114   6400D4E5           LDRB     R0,[R4, #+100]
   \   00000118   000050E3           CMP      R0,#+0
   \   0000011C   0800000A           BEQ      ??GearRatioPaint_0
   1122          		sprintf(scratch, "%u/%u*%u", vehicleData.treadWidth, vehicleData.aspectRatio, vehicleData.wheelDiameter);
   \   00000120   5C0094E5           LDR      R0,[R4, #+92]
   \   00000124   603094E5           LDR      R3,[R4, #+96]
   \   00000128   00008DE5           STR      R0,[SP, #+0]
   \   0000012C   582094E5           LDR      R2,[R4, #+88]
   \   00000130   ............       ADRL     R1,`?<Constant "%u/%u*%u">`
   \              ....        
   \   00000138   04008DE2           ADD      R0,SP,#+4
   \   0000013C   ........           BL       sprintf
   \   00000140   020000EA           B        ??GearRatioPaint_1
   1123          	else GetTireCircumferenceString(true, scratch);		// Get text of circumference and include the units text
   \                     ??GearRatioPaint_0:
   \   00000144   04108DE2           ADD      R1,SP,#+4
   \   00000148   0100A0E3           MOV      R0,#+1
   \   0000014C   ........           BL       GetTireCircumferenceString
   1124          	GUI_DispStringHCenterAt(scratch, BOX_LEFT + ((BOX_RIGHT - BOX_LEFT)/2), BOX_TOP + 4);
   \                     ??GearRatioPaint_1:
   \   00000150   3720A0E3           MOV      R2,#+55
   \   00000154   8810A0E3           MOV      R1,#+136
   \   00000158   04008DE2           ADD      R0,SP,#+4
   \   0000015C   ........           BL       GUI_DispStringHCenterAt
   1125          
   1126          	// Draw trans ratio
   1127          	GUI_SetColor(GUI_YELLOW);
   \   00000160   FF00A0E3           MOV      R0,#+255
   \   00000164   FF0C80E3           ORR      R0,R0,#0xFF00
   \   00000168   ........           BL       GUI_SetColor
   1128          	if (vehicleData.diffRatio == 0.0)
   \   0000016C   500094E5           LDR      R0,[R4, #+80]
   \   00000170   0010A0E3           MOV      R1,#+0
   \   00000174   ........           BL       __aeabi_cfcmpeq
   \   00000178   ............       ADRL     R5,`?<Constant "%.2f">`
   \              ....        
   \   00000180   0500001A           BNE      ??GearRatioPaint_2
   1129          		strcpy(scratch, "Gearing Disabled");
   \   00000184   1120A0E3           MOV      R2,#+17
   \   00000188   ............       ADRL     R1,`?<Constant "Gearing Disabled">`
   \              ....        
   \   00000190   04008DE2           ADD      R0,SP,#+4
   \   00000194   ........           BL       __aeabi_memcpy4
   \   00000198   050000EA           B        ??GearRatioPaint_3
   1130          	else sprintf(scratch, "%.2f", vehicleData.diffRatio);
   \                     ??GearRatioPaint_2:
   \   0000019C   ........           BL       __aeabi_f2d
   \   000001A0   0020A0E1           MOV      R2,R0
   \   000001A4   0130A0E1           MOV      R3,R1
   \   000001A8   0510A0E1           MOV      R1,R5
   \   000001AC   04008DE2           ADD      R0,SP,#+4
   \   000001B0   ........           BL       sprintf
   1131          	GUI_DispStringHCenterAt(scratch, BOX_LEFT + ((BOX_RIGHT - BOX_LEFT)/2), BOX_TOP + LINE_SPACING + 4);
   \                     ??GearRatioPaint_3:
   \   000001B4   5520A0E3           MOV      R2,#+85
   \   000001B8   8810A0E3           MOV      R1,#+136
   \   000001BC   04008DE2           ADD      R0,SP,#+4
   \   000001C0   ........           BL       GUI_DispStringHCenterAt
   1132          
   1133          	// Draw fixed text Transmission Ratios
   1134          //	GUI_SetFont(&GUI_Font24_ASCII);
   1135          	GUI_SetColor(GUI_RED);
   \   000001C4   FF00A0E3           MOV      R0,#+255
   \   000001C8   ........           BL       GUI_SetColor
   1136          	GUI_DispStringHCenterAt("Transmission Ratios", BOX_LEFT + ((BOX_RIGHT - BOX_LEFT)/2), BOX_TOP + LINE_SPACING*2 + 4);
   \   000001CC   7320A0E3           MOV      R2,#+115
   \   000001D0   8810A0E3           MOV      R1,#+136
   \   000001D4   ............       ADRL     R0,`?<Constant "Transmission Ratios">`
   \              ....        
   \   000001DC   ........           BL       GUI_DispStringHCenterAt
   1137          
   1138          	// Draw gear numbers
   1139          	GUI_SetColor(GUI_WHITE);
   \   000001E0   FF04E0E3           MVN      R0,#-16777216
   \   000001E4   ........           BL       GUI_SetColor
   1140          	GUI_DispStringAt("1st:", BOX_LEFT + LINE_GAP, BOX_TOP + GEAR_TABLE_TOP);
   \   000001E8   9720A0E3           MOV      R2,#+151
   \   000001EC   2A10A0E3           MOV      R1,#+42
   \   000001F0   ............       ADRL     R0,`?<Constant "1st:">`
   \              ....        
   \   000001F8   ........           BL       GUI_DispStringAt
   1141          	GUI_DispStringAt("2nd:", BOX_LEFT + LINE_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP);
   \   000001FC   B020A0E3           MOV      R2,#+176
   \   00000200   2A10A0E3           MOV      R1,#+42
   \   00000204   ............       ADRL     R0,`?<Constant "2nd:">`
   \              ....        
   \   0000020C   ........           BL       GUI_DispStringAt
   1142          	GUI_DispStringAt("3rd:", BOX_LEFT + LINE_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*2);
   \   00000210   C920A0E3           MOV      R2,#+201
   \   00000214   2A10A0E3           MOV      R1,#+42
   \   00000218   ............       ADRL     R0,`?<Constant "3rd:">`
   \              ....        
   \   00000220   ........           BL       GUI_DispStringAt
   1143          	GUI_DispStringAt("4th:", BOX_LEFT + LINE_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*3);
   \   00000224   E220A0E3           MOV      R2,#+226
   \   00000228   2A10A0E3           MOV      R1,#+42
   \   0000022C   ............       ADRL     R0,`?<Constant "4th:">`
   \              ....        
   \   00000234   ........           BL       GUI_DispStringAt
   1144          	GUI_DispStringAt("5th:", BOX_LEFT + THIRD_COL_GAP, BOX_TOP + GEAR_TABLE_TOP);
   \   00000238   9720A0E3           MOV      R2,#+151
   \   0000023C   8F10A0E3           MOV      R1,#+143
   \   00000240   ............       ADRL     R0,`?<Constant "5th:">`
   \              ....        
   \   00000248   ........           BL       GUI_DispStringAt
   1145          	GUI_DispStringAt("6th:", BOX_LEFT + THIRD_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP);
   \   0000024C   B020A0E3           MOV      R2,#+176
   \   00000250   8F10A0E3           MOV      R1,#+143
   \   00000254   ............       ADRL     R0,`?<Constant "6th:">`
   \              ....        
   \   0000025C   ........           BL       GUI_DispStringAt
   1146          	GUI_DispStringAt("7th:", BOX_LEFT + THIRD_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*2);
   \   00000260   C920A0E3           MOV      R2,#+201
   \   00000264   8F10A0E3           MOV      R1,#+143
   \   00000268   ............       ADRL     R0,`?<Constant "7th:">`
   \              ....        
   \   00000270   ........           BL       GUI_DispStringAt
   1147          	GUI_DispStringAt("8th:", BOX_LEFT + THIRD_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*3);
   \   00000274   E220A0E3           MOV      R2,#+226
   \   00000278   8F10A0E3           MOV      R1,#+143
   \   0000027C   ............       ADRL     R0,`?<Constant "8th:">`
   \              ....        
   \   00000284   ........           BL       GUI_DispStringAt
   1148          
   1149          	// Draw gear ratios
   1150          	GUI_SetColor(GUI_RED);
   \   00000288   FF00A0E3           MOV      R0,#+255
   \   0000028C   ........           BL       GUI_SetColor
   1151          	sprintf(scratch, "%.2f", vehicleData.gearRatios[0]);
   \   00000290   300094E5           LDR      R0,[R4, #+48]
   \   00000294   ........           BL       __aeabi_f2d
   \   00000298   0020A0E1           MOV      R2,R0
   \   0000029C   0130A0E1           MOV      R3,R1
   \   000002A0   0510A0E1           MOV      R1,R5
   \   000002A4   04008DE2           ADD      R0,SP,#+4
   \   000002A8   ........           BL       sprintf
   1152          	GUI_DispStringAt(scratch, BOX_LEFT + SECOND_COL_GAP, BOX_TOP + GEAR_TABLE_TOP);
   \   000002AC   9720A0E3           MOV      R2,#+151
   \   000002B0   5910A0E3           MOV      R1,#+89
   \   000002B4   04008DE2           ADD      R0,SP,#+4
   \   000002B8   ........           BL       GUI_DispStringAt
   1153          	sprintf(scratch, "%.2f", vehicleData.gearRatios[1]);
   \   000002BC   340094E5           LDR      R0,[R4, #+52]
   \   000002C0   ........           BL       __aeabi_f2d
   \   000002C4   0020A0E1           MOV      R2,R0
   \   000002C8   0130A0E1           MOV      R3,R1
   \   000002CC   0510A0E1           MOV      R1,R5
   \   000002D0   04008DE2           ADD      R0,SP,#+4
   \   000002D4   ........           BL       sprintf
   1154          	GUI_DispStringAt(scratch, BOX_LEFT + SECOND_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP);
   \   000002D8   B020A0E3           MOV      R2,#+176
   \   000002DC   5910A0E3           MOV      R1,#+89
   \   000002E0   04008DE2           ADD      R0,SP,#+4
   \   000002E4   ........           BL       GUI_DispStringAt
   1155          	sprintf(scratch, "%.2f", vehicleData.gearRatios[2]);
   \   000002E8   380094E5           LDR      R0,[R4, #+56]
   \   000002EC   ........           BL       __aeabi_f2d
   \   000002F0   0020A0E1           MOV      R2,R0
   \   000002F4   0130A0E1           MOV      R3,R1
   \   000002F8   0510A0E1           MOV      R1,R5
   \   000002FC   04008DE2           ADD      R0,SP,#+4
   \   00000300   ........           BL       sprintf
   1156          	GUI_DispStringAt(scratch, BOX_LEFT + SECOND_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*2);
   \   00000304   C920A0E3           MOV      R2,#+201
   \   00000308   5910A0E3           MOV      R1,#+89
   \   0000030C   04008DE2           ADD      R0,SP,#+4
   \   00000310   ........           BL       GUI_DispStringAt
   1157          	sprintf(scratch, "%.2f", vehicleData.gearRatios[3]);
   \   00000314   3C0094E5           LDR      R0,[R4, #+60]
   \   00000318   ........           BL       __aeabi_f2d
   \   0000031C   0020A0E1           MOV      R2,R0
   \   00000320   0130A0E1           MOV      R3,R1
   \   00000324   0510A0E1           MOV      R1,R5
   \   00000328   04008DE2           ADD      R0,SP,#+4
   \   0000032C   ........           BL       sprintf
   1158          	GUI_DispStringAt(scratch, BOX_LEFT + SECOND_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*3);
   \   00000330   E220A0E3           MOV      R2,#+226
   \   00000334   5910A0E3           MOV      R1,#+89
   \   00000338   04008DE2           ADD      R0,SP,#+4
   \   0000033C   ........           BL       GUI_DispStringAt
   1159          	sprintf(scratch, "%.2f", vehicleData.gearRatios[4]);
   \   00000340   400094E5           LDR      R0,[R4, #+64]
   \   00000344   ........           BL       __aeabi_f2d
   \   00000348   0020A0E1           MOV      R2,R0
   \   0000034C   0130A0E1           MOV      R3,R1
   \   00000350   0510A0E1           MOV      R1,R5
   \   00000354   04008DE2           ADD      R0,SP,#+4
   \   00000358   ........           BL       sprintf
   1160          	GUI_DispStringAt(scratch, BOX_LEFT + FORTH_COL_GAP, BOX_TOP + GEAR_TABLE_TOP);
   \   0000035C   9720A0E3           MOV      R2,#+151
   \   00000360   B710A0E3           MOV      R1,#+183
   \   00000364   04008DE2           ADD      R0,SP,#+4
   \   00000368   ........           BL       GUI_DispStringAt
   1161          	sprintf(scratch, "%.2f", vehicleData.gearRatios[5]);
   \   0000036C   440094E5           LDR      R0,[R4, #+68]
   \   00000370   ........           BL       __aeabi_f2d
   \   00000374   0020A0E1           MOV      R2,R0
   \   00000378   0130A0E1           MOV      R3,R1
   \   0000037C   0510A0E1           MOV      R1,R5
   \   00000380   04008DE2           ADD      R0,SP,#+4
   \   00000384   ........           BL       sprintf
   1162          	GUI_DispStringAt(scratch, BOX_LEFT + FORTH_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP);
   \   00000388   B020A0E3           MOV      R2,#+176
   \   0000038C   B710A0E3           MOV      R1,#+183
   \   00000390   04008DE2           ADD      R0,SP,#+4
   \   00000394   ........           BL       GUI_DispStringAt
   1163          	sprintf(scratch, "%.2f", vehicleData.gearRatios[6]);
   \   00000398   480094E5           LDR      R0,[R4, #+72]
   \   0000039C   ........           BL       __aeabi_f2d
   \   000003A0   0020A0E1           MOV      R2,R0
   \   000003A4   0130A0E1           MOV      R3,R1
   \   000003A8   0510A0E1           MOV      R1,R5
   \   000003AC   04008DE2           ADD      R0,SP,#+4
   \   000003B0   ........           BL       sprintf
   1164          	GUI_DispStringAt(scratch, BOX_LEFT + FORTH_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*2);
   \   000003B4   C920A0E3           MOV      R2,#+201
   \   000003B8   B710A0E3           MOV      R1,#+183
   \   000003BC   04008DE2           ADD      R0,SP,#+4
   \   000003C0   ........           BL       GUI_DispStringAt
   1165          	sprintf(scratch, "%.2f", vehicleData.gearRatios[7]);
   \   000003C4   4C0094E5           LDR      R0,[R4, #+76]
   \   000003C8   ........           BL       __aeabi_f2d
   \   000003CC   0020A0E1           MOV      R2,R0
   \   000003D0   0130A0E1           MOV      R3,R1
   \   000003D4   0510A0E1           MOV      R1,R5
   \   000003D8   04008DE2           ADD      R0,SP,#+4
   \   000003DC   ........           BL       sprintf
   1166          	GUI_DispStringAt(scratch, BOX_LEFT + FORTH_COL_GAP, BOX_TOP + GEAR_TABLE_TOP + GEAR_TABLE_VGAP*3);
   \   000003E0   E220A0E3           MOV      R2,#+226
   \   000003E4   B710A0E3           MOV      R1,#+183
   \   000003E8   04008DE2           ADD      R0,SP,#+4
   \   000003EC   ........           BL       GUI_DispStringAt
   1167          
   1168          	GUI_DrawBitmap(GetNavigationArrow(GEARRATIO_SELECTION), 0, 229);
   \   000003F0   E520A0E3           MOV      R2,#+229
   \   000003F4   0010A0E3           MOV      R1,#+0
   \   000003F8   ........           LDR      R0,??DataTable172_6
   \   000003FC   ........           BL       GUI_DrawBitmap
   1169          }
   \   00000400   1CD08DE2           ADD      SP,SP,#+28       ;; stack cleaning
   \   00000404   3080BDE8           POP      {R4,R5,PC}       ;; return
   1170          

   \                                 In section .text, align 4, keep-with-next
   1171          void WeightSelectionPaint(WM_HWIN hParent)
   1172          {
   \                     WeightSelectionPaint:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1173          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000004   0020A0E3           MOV      R2,#+0
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   ........           LDR      R0,??DataTable168
   \   00000010   ........           BL       GUI_DrawBitmap
   1174          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_1, 49);
   \   00000014   ........           LDR      R4,??DataTable172
   \   00000018   3120A0E3           MOV      R2,#+49
   \   0000001C   E110A0E3           MOV      R1,#+225
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_DrawBitmap
   1175          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_2, 49);
   \   00000028   3120A0E3           MOV      R2,#+49
   \   0000002C   4C1FA0E3           MOV      R1,#+304
   \   00000030   0400A0E1           MOV      R0,R4
   \   00000034   ........           BL       GUI_DrawBitmap
   1176          	GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_3, 49);
   \   00000038   7F10A0E3           MOV      R1,#+127
   \   0000003C   3120A0E3           MOV      R2,#+49
   \   00000040   401F81E3           ORR      R1,R1,#0x100
   \   00000044   0400A0E1           MOV      R0,R4
   \   00000048   ........           BL       GUI_DrawBitmap
   1177          
   1178          	GUI_DrawBitmap(&bmVehicleWeight, 60, 0);
   \   0000004C   0020A0E3           MOV      R2,#+0
   \   00000050   3C10A0E3           MOV      R1,#+60
   \   00000054   ........           LDR      R0,??DataTable172_1
   \   00000058   ........           BL       GUI_DrawBitmap
   1179          	GUI_DrawBitmap(GetNavigationArrow(WEIGHT_SELECTION), 0, 229);
   \   0000005C   1040BDE8           POP      {R4,LR}
   \   00000060   E520A0E3           MOV      R2,#+229
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   ........           LDR      R0,??DataTable172_6
   \   0000006C   ........           B        GUI_DrawBitmap   ;; tailcall
   1180          }
   1181          
   1182          #define	WIND_Y				85
   1183          #define	ROLL_Y				160
   1184          #define	SLIDER_LEFT			30
   1185          #define	AG_SLIDER_X_SIZE	343
   1186          

   \                                 In section .text, align 4, keep-with-next
   1187          GUI_HWIN GetAeroGripWindowHandle(void)
   1188          {
   1189          	return hAeroGripScreen;
   \                     GetAeroGripWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable172_3
   \   00000004   F80090E5           LDR      R0,[R0, #+248]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1190          }
   1191          

   \                                 In section .text, align 4, keep-with-next
   1192          void CreateAeroGripScreen(WM_HWIN hParent)
   1193          {
   \                     CreateAeroGripScreen:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   1194          	if (hParent)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??CreateAeroGripScreen_0
   1195          		WM_DeleteWindow(hParent);
   \   00000010   ........           BL       WM_DeleteWindow
   1196          
   1197          	SetScreenType(AERO_GRIP_SCREEN_TYPE);
   \                     ??CreateAeroGripScreen_0:
   \   00000014   2000A0E3           MOV      R0,#+32
   \   00000018   ........           BL       SetScreenType
   1198          
   1199          	if ((hAeroGripScreen = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, AeroGripScreenCallback, 0)) <= 0)
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   08008DE5           STR      R0,[SP, #+8]
   \   00000024   ........           LDR      R0,??DataTable172_2
   \   00000028   443FA0E3           MOV      R3,#+272
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   800D80E3           ORR      R0,R0,#0x2000
   \   00000038   00008DE5           STR      R0,[SP, #+0]
   \   0000003C   782FA0E3           MOV      R2,#+480
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       WM_CreateWindow
   \   0000004C   ........           LDR      R4,??DataTable172_3
   \   00000050   010050E3           CMP      R0,#+1
   \   00000054   F80084E5           STR      R0,[R4, #+248]
   \   00000058   000000AA           BGE      ??CreateAeroGripScreen_1
   1200          		SystemError();
   \   0000005C   ........           BL       SystemError
   1201          
   1202          	hWindSlider = SLIDER_CreateEx(SLIDER_LEFT - SLIDER_BALL_RADIUS, WIND_Y - SLIDER_BALL_RADIUS, AG_SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hAeroGripScreen, WM_CF_SHOW, 0, WIND_SLIDER);
   \                     ??CreateAeroGripScreen_1:
   \   00000060   7750A0E3           MOV      R5,#+119
   \   00000064   405F85E3           ORR      R5,R5,#0x100
   \   00000068   4400C5E3           BIC      R0,R5,#0x44
   \   0000006C   0C008DE5           STR      R0,[SP, #+12]
   \   00000070   0000A0E3           MOV      R0,#+0
   \   00000074   08008DE5           STR      R0,[SP, #+8]
   \   00000078   0200A0E3           MOV      R0,#+2
   \   0000007C   04008DE5           STR      R0,[SP, #+4]
   \   00000080   F80094E5           LDR      R0,[R4, #+248]
   \   00000084   2030A0E3           MOV      R3,#+32
   \   00000088   00008DE5           STR      R0,[SP, #+0]
   \   0000008C   0520A0E1           MOV      R2,R5
   \   00000090   4510A0E3           MOV      R1,#+69
   \   00000094   0E00A0E3           MOV      R0,#+14
   \   00000098   ........           BL       SLIDER_CreateEx
   \   0000009C   200184E5           STR      R0,[R4, #+288]
   1203          	SLIDER_SetRange(hWindSlider, 0, 1000);
   \   000000A0   FA2FA0E3           MOV      R2,#+1000
   \   000000A4   0010A0E3           MOV      R1,#+0
   \   000000A8   ........           BL       SLIDER_SetRange
   1204          	SLIDER_SetNumTicks(hWindSlider, 0);
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   200194E5           LDR      R0,[R4, #+288]
   \   000000B4   ........           BL       SLIDER_SetNumTicks
   1205          
   1206          	hRollSlider = SLIDER_CreateEx(SLIDER_LEFT - SLIDER_BALL_RADIUS, ROLL_Y - SLIDER_BALL_RADIUS, AG_SLIDER_X_SIZE + (SLIDER_BALL_RADIUS * 2), SLIDER_BALL_RADIUS * 2, hAeroGripScreen, WM_CF_SHOW, 0, ROLL_SLIDER);
   \   000000B8   4D0FA0E3           MOV      R0,#+308
   \   000000BC   0C008DE5           STR      R0,[SP, #+12]
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   08008DE5           STR      R0,[SP, #+8]
   \   000000C8   0200A0E3           MOV      R0,#+2
   \   000000CC   04008DE5           STR      R0,[SP, #+4]
   \   000000D0   F80094E5           LDR      R0,[R4, #+248]
   \   000000D4   2030A0E3           MOV      R3,#+32
   \   000000D8   00008DE5           STR      R0,[SP, #+0]
   \   000000DC   0520A0E1           MOV      R2,R5
   \   000000E0   9010A0E3           MOV      R1,#+144
   \   000000E4   0E00A0E3           MOV      R0,#+14
   \   000000E8   ........           BL       SLIDER_CreateEx
   \   000000EC   240184E5           STR      R0,[R4, #+292]
   1207          	SLIDER_SetRange(hRollSlider, 0, 1000);
   \   000000F0   FA2FA0E3           MOV      R2,#+1000
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   ........           BL       SLIDER_SetRange
   1208          	SLIDER_SetNumTicks(hRollSlider, 0);
   \   000000FC   0010A0E3           MOV      R1,#+0
   \   00000100   240194E5           LDR      R0,[R4, #+292]
   \   00000104   ........           BL       SLIDER_SetNumTicks
   1209          
   1210          	// Set the sliders to the initial value.  Note: DO NOT set the slider until AFTER the
   1211          	// button windows are created as they will be updated when the value is set on the
   1212          	// slider.
   1213          	SLIDER_SetValue(hWindSlider, (int)(vehicleData.windDrag * SLIDER_RANGE));
   \   00000108   4454A0E3           MOV      R5,#+1140850688
   \   0000010C   ........           LDR      R6,??DataTable169_3
   \   00000110   7A5885E3           ORR      R5,R5,#0x7A0000
   \   00000114   6C0096E5           LDR      R0,[R6, #+108]
   \   00000118   0510A0E1           MOV      R1,R5
   \   0000011C   ........           BL       __aeabi_fmul
   \   00000120   ........           BL       __aeabi_f2iz
   \   00000124   0010A0E1           MOV      R1,R0
   \   00000128   200194E5           LDR      R0,[R4, #+288]
   \   0000012C   ........           BL       SLIDER_SetValue
   1214          	SLIDER_SetValue(hRollSlider, (int)(vehicleData.rollingResistance * SLIDER_RANGE));
   \   00000130   700096E5           LDR      R0,[R6, #+112]
   \   00000134   0510A0E1           MOV      R1,R5
   \   00000138   ........           BL       __aeabi_fmul
   \   0000013C   ........           BL       __aeabi_f2iz
   \   00000140   0010A0E1           MOV      R1,R0
   \   00000144   240194E5           LDR      R0,[R4, #+292]
   \   00000148   ........           BL       SLIDER_SetValue
   1215          
   1216          	hScreenTimer = WM_CreateTimer(hAeroGripScreen, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   0000014C   0030A0E3           MOV      R3,#+0
   \   00000150   7D20A0E3           MOV      R2,#+125
   \   00000154   0010A0E3           MOV      R1,#+0
   \   00000158   F80094E5           LDR      R0,[R4, #+248]
   \   0000015C   ........           BL       WM_CreateTimer
   \   00000160   ........           LDR      R1,??DataTable172_4
   1217          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   00000164   10D08DE2           ADD      SP,SP,#+16
   \   00000168   000081E5           STR      R0,[R1, #+0]
   \   0000016C   7040BDE8           POP      {R4-R6,LR}
   \   00000170   ........           B        ResetNewScreen   ;; tailcall
   1218          }
   1219          
   1220          

   \                                 In section .text, align 4, keep-with-next
   1221          void AeroGripScreenCallback(WM_MESSAGE * pMsg)
   1222          {
   \                     AeroGripScreenCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1223          	int NCode, Id;
   1224          
   1225          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   010050E2           SUBS     R0,R0,#+1
   \   00000010   0E00000A           BEQ      ??AeroGripScreenCallback_0
   \   00000014   0E0050E2           SUBS     R0,R0,#+14
   \   00000018   1000000A           BEQ      ??AeroGripScreenCallback_1
   \   0000001C   170050E2           SUBS     R0,R0,#+23
   \   00000020   1100000A           BEQ      ??AeroGripScreenCallback_2
   \   00000024   ED0050E2           SUBS     R0,R0,#+237
   \   00000028   3100001A           BNE      ??AeroGripScreenCallback_3
   1226          	{
   1227          		case WM_TIMER:
   1228          			if (pMsg->Data.v == hScreenTimer)
   \   0000002C   ........           LDR      R0,??DataTable172_4
   \   00000030   0C1094E5           LDR      R1,[R4, #+12]
   \   00000034   000090E5           LDR      R0,[R0, #+0]
   \   00000038   000051E1           CMP      R1,R0
   \   0000003C   2E00001A           BNE      ??AeroGripScreenCallback_4
   1229          			{
   1230          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000040   7D10A0E3           MOV      R1,#+125
   \   00000044   ........           BL       WM_RestartTimer
   1231          				WM_InvalidateWindow(pMsg->hWin);		// Allow timer to invalidate the whole window so we can show live data on the input buttons
   \   00000048   040094E5           LDR      R0,[R4, #+4]
   \   0000004C   260000EA           B        ??AeroGripScreenCallback_5
   1232          			}
   1233          			break;
   1234          
   1235          
   1236          		case WM_CREATE:
   1237          			VehicleSettingsIgnoreNextKeyRelease();
   \                     ??AeroGripScreenCallback_0:
   \   00000050   ........           LDR      R0,??DataTable172_3
   \   00000054   0010A0E3           MOV      R1,#+0
   \   00000058   101180E5           STR      R1,[R0, #+272]
   1238          			break;
   \   0000005C   1080BDE8           POP      {R4,PC}
   1239          
   1240          		case WM_PAINT:
   1241          			AeroGripScreenPaint();
   \                     ??AeroGripScreenCallback_1:
   \   00000060   ........           BL       AeroGripScreenPaint
   1242          			DrawSignalStrength();
   \   00000064   1040BDE8           POP      {R4,LR}
   \   00000068   ........           B        DrawSignalStrength  ;; tailcall
   1243          			break;
   1244          
   1245          		case WM_NOTIFY_PARENT:
   1246          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??AeroGripScreenCallback_2:
   \   0000006C   080094E5           LDR      R0,[R4, #+8]
   \   00000070   ........           BL       WM_GetId
   1247          			NCode = pMsg->Data.v;				// Notification code
   1248          			switch (NCode)
   \   00000074   0C1094E5           LDR      R1,[R4, #+12]
   \   00000078   050051E3           CMP      R1,#+5
   \   0000007C   1E00001A           BNE      ??AeroGripScreenCallback_4
   1249          			{
   1250          				case WM_NOTIFICATION_VALUE_CHANGED:
   1251          					switch (Id)
   \   00000080   330040E2           SUB      R0,R0,#+51
   \   00000084   400F50E2           SUBS     R0,R0,#+256
   \   00000088   0200000A           BEQ      ??AeroGripScreenCallback_6
   \   0000008C   010050E2           SUBS     R0,R0,#+1
   \   00000090   0B00000A           BEQ      ??AeroGripScreenCallback_7
   \   00000094   1080BDE8           POP      {R4,PC}
   1252          					{
   1253          					case WIND_SLIDER:
   1254          						vehicleData.windDrag = SLIDER_GetValue(hWindSlider) / (float)SLIDER_RANGE;
   \                     ??AeroGripScreenCallback_6:
   \   00000098   ........           LDR      R4,??DataTable172_3
   \   0000009C   200194E5           LDR      R0,[R4, #+288]
   \   000000A0   ........           BL       SLIDER_GetValue
   \   000000A4   ........           BL       __aeabi_i2f
   \   000000A8   4414A0E3           MOV      R1,#+1140850688
   \   000000AC   7A1881E3           ORR      R1,R1,#0x7A0000
   \   000000B0   ........           BL       __aeabi_fdiv
   \   000000B4   ........           LDR      R1,??DataTable169_3
   \   000000B8   6C0081E5           STR      R0,[R1, #+108]
   1255          						WM_InvalidateWindow(hAeroGripScreen);
   \   000000BC   F80094E5           LDR      R0,[R4, #+248]
   \   000000C0   090000EA           B        ??AeroGripScreenCallback_5
   1256          						break;
   1257          					case ROLL_SLIDER:
   1258          						vehicleData.rollingResistance = SLIDER_GetValue(hRollSlider) / (float)SLIDER_RANGE;
   \                     ??AeroGripScreenCallback_7:
   \   000000C4   ........           LDR      R4,??DataTable172_3
   \   000000C8   240194E5           LDR      R0,[R4, #+292]
   \   000000CC   ........           BL       SLIDER_GetValue
   \   000000D0   ........           BL       __aeabi_i2f
   \   000000D4   4414A0E3           MOV      R1,#+1140850688
   \   000000D8   7A1881E3           ORR      R1,R1,#0x7A0000
   \   000000DC   ........           BL       __aeabi_fdiv
   \   000000E0   ........           LDR      R1,??DataTable169_3
   \   000000E4   700081E5           STR      R0,[R1, #+112]
   1259          						WM_InvalidateWindow(hAeroGripScreen);
   \   000000E8   F80094E5           LDR      R0,[R4, #+248]
   \                     ??AeroGripScreenCallback_5:
   \   000000EC   1040BDE8           POP      {R4,LR}
   \   000000F0   ........           B        WM_InvalidateWindow  ;; tailcall
   1260          						break;
   1261          					}
   1262          					break;
   1263          			}
   1264          			break;
   1265          
   1266          		default:
   1267          		  WM_DefaultProc(pMsg);
   \                     ??AeroGripScreenCallback_3:
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           BL       WM_DefaultProc
   1268          	}
   1269          }
   \                     ??AeroGripScreenCallback_4:
   \   000000FC   1080BDE8           POP      {R4,PC}          ;; return
   1270          

   \                                 In section .text, align 4, keep-with-next
   1271          void AeroGripScreenPaint(void)
   1272          {
   \                     AeroGripScreenPaint:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   30D04DE2           SUB      SP,SP,#+48
   1273          	char scratch[40];
   1274          
   1275          	GUI_DrawBitmap(&bmBackground, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable173
   \   00000014   ........           BL       GUI_DrawBitmap
   1276          	GUI_DrawBitmap(&bmAeroandTire, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable173_1
   \   00000024   ........           BL       GUI_DrawBitmap
   1277          
   1278          
   1279          	GUI_DrawRoundedRect(10, 40, 460, 250, 5);
   \   00000028   0500A0E3           MOV      R0,#+5
   \   0000002C   00008DE5           STR      R0,[SP, #+0]
   \   00000030   FA30A0E3           MOV      R3,#+250
   \   00000034   732FA0E3           MOV      R2,#+460
   \   00000038   2810A0E3           MOV      R1,#+40
   \   0000003C   0A00A0E3           MOV      R0,#+10
   \   00000040   ........           BL       GUI_DrawRoundedRect
   1280          	GUI_FillRoundedRect(10, 40, 460, 250, 5);
   \   00000044   0500A0E3           MOV      R0,#+5
   \   00000048   00008DE5           STR      R0,[SP, #+0]
   \   0000004C   FA30A0E3           MOV      R3,#+250
   \   00000050   732FA0E3           MOV      R2,#+460
   \   00000054   2810A0E3           MOV      R1,#+40
   \   00000058   0A00A0E3           MOV      R0,#+10
   \   0000005C   ........           BL       GUI_FillRoundedRect
   1281          
   1282          	GUI_SetTextMode(GUI_TM_REV);
   \   00000060   0400A0E3           MOV      R0,#+4
   \   00000064   ........           BL       GUI_SetTextMode
   1283          	GUI_SetFont(&GUI_Font24B_ASCII);
   \   00000068   ........           LDR      R4,??DataTable174
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       GUI_SetFont
   1284          	GUI_DispStringHCenterAt("Drag Coefficient (Cd) x Frontal Area (m^2)", 230, WIND_Y - 40);
   \   00000074   2D20A0E3           MOV      R2,#+45
   \   00000078   E610A0E3           MOV      R1,#+230
   \   0000007C   ............       ADRL     R0,`?<Constant "Drag Coefficient (Cd)...">`
   \              ....        
   \   00000084   ........           BL       GUI_DispStringHCenterAt
   1285          	GUI_DispStringHCenterAt("Tire Friction Crr Rolling Resistance", 230, ROLL_Y - 40);
   \   00000088   7820A0E3           MOV      R2,#+120
   \   0000008C   E610A0E3           MOV      R1,#+230
   \   00000090   ............       ADRL     R0,`?<Constant "Tire Friction Crr Rol...">`
   \              ....        
   \   00000098   ........           BL       GUI_DispStringHCenterAt
   1286          
   1287          	// Display coefficients values
   1288          	sprintf(scratch, "%0.03f", vehicleData.windDrag);
   \   0000009C   ........           LDR      R5,??DataTable169_3
   \   000000A0   ............       ADRL     R6,`?<Constant "%0.03f">`
   \              ....        
   \   000000A8   6C0095E5           LDR      R0,[R5, #+108]
   \   000000AC   ........           BL       __aeabi_f2d
   \   000000B0   0020A0E1           MOV      R2,R0
   \   000000B4   0130A0E1           MOV      R3,R1
   \   000000B8   0610A0E1           MOV      R1,R6
   \   000000BC   04008DE2           ADD      R0,SP,#+4
   \   000000C0   ........           BL       sprintf
   1289          	GUI_DispStringHCenterAt(scratch, 420,  WIND_Y - 11);
   \   000000C4   4A20A0E3           MOV      R2,#+74
   \   000000C8   691FA0E3           MOV      R1,#+420
   \   000000CC   04008DE2           ADD      R0,SP,#+4
   \   000000D0   ........           BL       GUI_DispStringHCenterAt
   1290          	sprintf(scratch, "%0.03f", vehicleData.rollingResistance);
   \   000000D4   700095E5           LDR      R0,[R5, #+112]
   \   000000D8   ........           BL       __aeabi_f2d
   \   000000DC   0020A0E1           MOV      R2,R0
   \   000000E0   0130A0E1           MOV      R3,R1
   \   000000E4   0610A0E1           MOV      R1,R6
   \   000000E8   04008DE2           ADD      R0,SP,#+4
   \   000000EC   ........           BL       sprintf
   1291          	GUI_DispStringHCenterAt(scratch, 420,  ROLL_Y - 10);
   \   000000F0   9620A0E3           MOV      R2,#+150
   \   000000F4   691FA0E3           MOV      R1,#+420
   \   000000F8   04008DE2           ADD      R0,SP,#+4
   \   000000FC   ........           BL       GUI_DispStringHCenterAt
   1292          
   1293          	sprintf(scratch, "Vehicle: %s", sysData.vehicle);
   \   00000100   ........           LDR      R2,??DataTable174_1
   \   00000104   ............       ADRL     R1,`?<Constant "Vehicle: %s">`
   \              ....        
   \   0000010C   04008DE2           ADD      R0,SP,#+4
   \   00000110   ........           BL       sprintf
   1294          	GUI_DispStringHCenterAt(scratch, XSIZE_PHYS/2, 210);
   \   00000114   D220A0E3           MOV      R2,#+210
   \   00000118   F010A0E3           MOV      R1,#+240
   \   0000011C   04008DE2           ADD      R0,SP,#+4
   \   00000120   ........           BL       GUI_DispStringHCenterAt
   1295          
   1296          	GUI_DrawBitmap(&bmSliderBlue, SLIDER_LEFT, WIND_Y - 5);
   \   00000124   5020A0E3           MOV      R2,#+80
   \   00000128   1E10A0E3           MOV      R1,#+30
   \   0000012C   ........           LDR      R0,??DataTable175
   \   00000130   ........           BL       GUI_DrawBitmap
   1297          	GUI_SetPenSize(3);
   \   00000134   0300A0E3           MOV      R0,#+3
   \   00000138   ........           BL       GUI_SetPenSize
   1298          	GUI_SetColor(GUI_GRAY);
   \   0000013C   ........           LDR      R0,??DataTable169_1  ;; 0x808080
   \   00000140   ........           BL       GUI_SetColor
   1299          	GUI_DrawLine(10, WIND_Y + 30, 460, WIND_Y + 30);
   \   00000144   7330A0E3           MOV      R3,#+115
   \   00000148   732FA0E3           MOV      R2,#+460
   \   0000014C   7310A0E3           MOV      R1,#+115
   \   00000150   0A00A0E3           MOV      R0,#+10
   \   00000154   ........           BL       GUI_DrawLine
   1300          
   1301          	GUI_DrawBitmap(&bmSliderGreen, SLIDER_LEFT, ROLL_Y - 5);
   \   00000158   9B20A0E3           MOV      R2,#+155
   \   0000015C   1E10A0E3           MOV      R1,#+30
   \   00000160   ........           LDR      R0,??DataTable176
   \   00000164   ........           BL       GUI_DrawBitmap
   1302          	GUI_DrawLine(10, ROLL_Y + 30, 460, ROLL_Y + 30);
   \   00000168   BE30A0E3           MOV      R3,#+190
   \   0000016C   732FA0E3           MOV      R2,#+460
   \   00000170   BE10A0E3           MOV      R1,#+190
   \   00000174   0A00A0E3           MOV      R0,#+10
   \   00000178   ........           BL       GUI_DrawLine
   1303          
   1304          	GUI_DrawBitmap(GetNavigationArrow(CARMETRICS_SELECTION), 0, 229);
   \   0000017C   E520A0E3           MOV      R2,#+229
   \   00000180   0010A0E3           MOV      R1,#+0
   \   00000184   ........           LDR      R0,??DataTable172_6
   \   00000188   ........           BL       GUI_DrawBitmap
   1305          	GUI_SetTextMode(GUI_TEXTMODE_NORMAL);
   \   0000018C   0000A0E3           MOV      R0,#+0
   \   00000190   ........           BL       GUI_SetTextMode
   1306          
   1307          	BUTTON_SetDefaultFont(&GUI_Font24B_ASCII);
   \   00000194   0400A0E1           MOV      R0,R4
   \   00000198   ........           BL       BUTTON_SetDefaultFont
   1308          }
   \   0000019C   30D08DE2           ADD      SP,SP,#+48       ;; stack cleaning
   \   000001A0   7080BDE8           POP      {R4-R6,PC}       ;; return
   1309          
   1310          #define	TOP_BUT			48
   1311          #define	GAP				43

   \                                 In section .text, align 4, keep-with-next
   1312          void DisplayCarMetricsSelection(WM_HWIN hParent)
   1313          {
   \                     DisplayCarMetricsSelection:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1314          	BUTTON_Handle hBtn;
   1315          
   1316          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, RESET_TIME_BUTTON);
   \   00000008   1600A0E3           MOV      R0,#+22
   \   0000000C   14D04DE2           SUB      SP,SP,#+20
   \   00000010   800E80E3           ORR      R0,R0,#0x800
   \   00000014   0C008DE5           STR      R0,[SP, #+12]
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   08008DE5           STR      R0,[SP, #+8]
   \   00000020   0250A0E3           MOV      R5,#+2
   \   00000024   0200A0E3           MOV      R0,#+2
   \   00000028   405F85E3           ORR      R5,R5,#0x100
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   00408DE5           STR      R4,[SP, #+0]
   \   00000034   2730A0E3           MOV      R3,#+39
   \   00000038   CA20A0E3           MOV      R2,#+202
   \   0000003C   3010A0E3           MOV      R1,#+48
   \   00000040   0500A0E1           MOV      R0,R5
   \   00000044   ........           BL       BUTTON_CreateEx
   \   00000048   0070A0E1           MOV      R7,R0
   1317          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   0000004C   ........           LDR      R2,??DataTable169
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   ........           BL       BUTTON_SetBitmap
   1318          	BUTTON_SetText(hBtn, "Reset Total Time");
   \   00000058   ............       ADRL     R1,`?<Constant "Reset Total Time">`
   \              ....        
   \   00000060   0700A0E1           MOV      R0,R7
   \   00000064   ........           BL       BUTTON_SetText
   1319          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_WHITE);
   \   00000068   FF64E0E3           MVN      R6,#-16777216
   \   0000006C   0620A0E1           MOV      R2,R6
   \   00000070   0210A0E3           MOV      R1,#+2
   \   00000074   0700A0E1           MOV      R0,R7
   \   00000078   ........           BL       BUTTON_SetTextColor
   1320          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   0000007C   0620A0E1           MOV      R2,R6
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   ........           BL       BUTTON_SetTextColor
   1321          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_WHITE);
   \   0000008C   0620A0E1           MOV      R2,R6
   \   00000090   0110A0E3           MOV      R1,#+1
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   ........           BL       BUTTON_SetTextColor
   1322          
   1323          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (1 * GAP), BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, RESET_DIST_BUTTON);
   \   0000009C   1700A0E3           MOV      R0,#+23
   \   000000A0   800E80E3           ORR      R0,R0,#0x800
   \   000000A4   0C008DE5           STR      R0,[SP, #+12]
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   08008DE5           STR      R0,[SP, #+8]
   \   000000B0   0200A0E3           MOV      R0,#+2
   \   000000B4   04008DE5           STR      R0,[SP, #+4]
   \   000000B8   00408DE5           STR      R4,[SP, #+0]
   \   000000BC   2730A0E3           MOV      R3,#+39
   \   000000C0   CA20A0E3           MOV      R2,#+202
   \   000000C4   5B10A0E3           MOV      R1,#+91
   \   000000C8   0500A0E1           MOV      R0,R5
   \   000000CC   ........           BL       BUTTON_CreateEx
   \   000000D0   0070A0E1           MOV      R7,R0
   1324          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmYellowButton);
   \   000000D4   ........           LDR      R2,??DataTable166_1
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   ........           BL       BUTTON_SetBitmap
   1325          	BUTTON_SetText(hBtn, "Reset Total Distance");
   \   000000E0   ............       ADRL     R1,`?<Constant "Reset Total Distance">`
   \              ....        
   \   000000E8   0700A0E1           MOV      R0,R7
   \   000000EC   ........           BL       BUTTON_SetText
   1326          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_BLACK);
   \   000000F0   0020A0E3           MOV      R2,#+0
   \   000000F4   0210A0E3           MOV      R1,#+2
   \   000000F8   0700A0E1           MOV      R0,R7
   \   000000FC   ........           BL       BUTTON_SetTextColor
   1327          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   00000100   0020A0E3           MOV      R2,#+0
   \   00000104   0010A0E3           MOV      R1,#+0
   \   00000108   0700A0E1           MOV      R0,R7
   \   0000010C   ........           BL       BUTTON_SetTextColor
   1328          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_BLACK);
   \   00000110   0020A0E3           MOV      R2,#+0
   \   00000114   0110A0E3           MOV      R1,#+1
   \   00000118   0700A0E1           MOV      R0,R7
   \   0000011C   ........           BL       BUTTON_SetTextColor
   1329          
   1330          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (2 * GAP), BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, RESET_RPM_BUTTON);
   \   00000120   1800A0E3           MOV      R0,#+24
   \   00000124   800E80E3           ORR      R0,R0,#0x800
   \   00000128   0C008DE5           STR      R0,[SP, #+12]
   \   0000012C   0000A0E3           MOV      R0,#+0
   \   00000130   08008DE5           STR      R0,[SP, #+8]
   \   00000134   0200A0E3           MOV      R0,#+2
   \   00000138   04008DE5           STR      R0,[SP, #+4]
   \   0000013C   00408DE5           STR      R4,[SP, #+0]
   \   00000140   2730A0E3           MOV      R3,#+39
   \   00000144   CA20A0E3           MOV      R2,#+202
   \   00000148   8610A0E3           MOV      R1,#+134
   \   0000014C   0500A0E1           MOV      R0,R5
   \   00000150   ........           BL       BUTTON_CreateEx
   \   00000154   0070A0E1           MOV      R7,R0
   1331          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   00000158   ........           LDR      R2,??DataTable167
   \   0000015C   0010A0E3           MOV      R1,#+0
   \   00000160   ........           BL       BUTTON_SetBitmap
   1332          	BUTTON_SetText(hBtn, "Reset Max RPM");
   \   00000164   ............       ADRL     R1,`?<Constant "Reset Max RPM">`
   \              ....        
   \   0000016C   0700A0E1           MOV      R0,R7
   \   00000170   ........           BL       BUTTON_SetText
   1333          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_WHITE);
   \   00000174   0620A0E1           MOV      R2,R6
   \   00000178   0210A0E3           MOV      R1,#+2
   \   0000017C   0700A0E1           MOV      R0,R7
   \   00000180   ........           BL       BUTTON_SetTextColor
   1334          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000184   0620A0E1           MOV      R2,R6
   \   00000188   0010A0E3           MOV      R1,#+0
   \   0000018C   0700A0E1           MOV      R0,R7
   \   00000190   ........           BL       BUTTON_SetTextColor
   1335          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_WHITE);
   \   00000194   0620A0E1           MOV      R2,R6
   \   00000198   0110A0E3           MOV      R1,#+1
   \   0000019C   0700A0E1           MOV      R0,R7
   \   000001A0   ........           BL       BUTTON_SetTextColor
   1336          
   1337          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (3 * GAP), BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, AERO_GRIP_BUTTON);
   \   000001A4   1900A0E3           MOV      R0,#+25
   \   000001A8   800E80E3           ORR      R0,R0,#0x800
   \   000001AC   0C008DE5           STR      R0,[SP, #+12]
   \   000001B0   0000A0E3           MOV      R0,#+0
   \   000001B4   08008DE5           STR      R0,[SP, #+8]
   \   000001B8   0200A0E3           MOV      R0,#+2
   \   000001BC   04008DE5           STR      R0,[SP, #+4]
   \   000001C0   00408DE5           STR      R4,[SP, #+0]
   \   000001C4   2730A0E3           MOV      R3,#+39
   \   000001C8   CA20A0E3           MOV      R2,#+202
   \   000001CC   B110A0E3           MOV      R1,#+177
   \   000001D0   0500A0E1           MOV      R0,R5
   \   000001D4   ........           BL       BUTTON_CreateEx
   \   000001D8   0060A0E1           MOV      R6,R0
   1338          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   000001DC   ........           LDR      R2,??DataTable166
   \   000001E0   0010A0E3           MOV      R1,#+0
   \   000001E4   ........           BL       BUTTON_SetBitmap
   1339          	BUTTON_SetText(hBtn, "Aero/Grip");
   \   000001E8   ............       ADRL     R1,`?<Constant "Aero/Grip">`
   \              ....        
   \   000001F0   0600A0E1           MOV      R0,R6
   \   000001F4   ........           BL       BUTTON_SetText
   1340          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_BLACK);
   \   000001F8   0020A0E3           MOV      R2,#+0
   \   000001FC   0210A0E3           MOV      R1,#+2
   \   00000200   0600A0E1           MOV      R0,R6
   \   00000204   ........           BL       BUTTON_SetTextColor
   1341          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   00000208   0020A0E3           MOV      R2,#+0
   \   0000020C   0010A0E3           MOV      R1,#+0
   \   00000210   0600A0E1           MOV      R0,R6
   \   00000214   ........           BL       BUTTON_SetTextColor
   1342          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_BLACK);
   \   00000218   0020A0E3           MOV      R2,#+0
   \   0000021C   0110A0E3           MOV      R1,#+1
   \   00000220   0600A0E1           MOV      R0,R6
   \   00000224   ........           BL       BUTTON_SetTextColor
   1343          
   1344          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (4 * GAP), BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, RESET_ALL_BUTTON);
   \   00000228   1A00A0E3           MOV      R0,#+26
   \   0000022C   800E80E3           ORR      R0,R0,#0x800
   \   00000230   0C008DE5           STR      R0,[SP, #+12]
   \   00000234   0000A0E3           MOV      R0,#+0
   \   00000238   08008DE5           STR      R0,[SP, #+8]
   \   0000023C   0200A0E3           MOV      R0,#+2
   \   00000240   04008DE5           STR      R0,[SP, #+4]
   \   00000244   00408DE5           STR      R4,[SP, #+0]
   \   00000248   2730A0E3           MOV      R3,#+39
   \   0000024C   CA20A0E3           MOV      R2,#+202
   \   00000250   DC10A0E3           MOV      R1,#+220
   \   00000254   0500A0E1           MOV      R0,R5
   \   00000258   ........           BL       BUTTON_CreateEx
   \   0000025C   0040A0E1           MOV      R4,R0
   1345          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmOrangeButton);
   \   00000260   ........           LDR      R2,??DataTable178
   \   00000264   0010A0E3           MOV      R1,#+0
   \   00000268   ........           BL       BUTTON_SetBitmap
   1346          	BUTTON_SetText(hBtn, "Reset All");
   \   0000026C   ............       ADRL     R1,`?<Constant "Reset All">`
   \              ....        
   \   00000274   0400A0E1           MOV      R0,R4
   \   00000278   ........           BL       BUTTON_SetText
   1347          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_BLACK);
   \   0000027C   0020A0E3           MOV      R2,#+0
   \   00000280   0210A0E3           MOV      R1,#+2
   \   00000284   0400A0E1           MOV      R0,R4
   \   00000288   ........           BL       BUTTON_SetTextColor
   1348          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   0000028C   0020A0E3           MOV      R2,#+0
   \   00000290   0010A0E3           MOV      R1,#+0
   \   00000294   0400A0E1           MOV      R0,R4
   \   00000298   ........           BL       BUTTON_SetTextColor
   1349          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_BLACK);
   \   0000029C   0400A0E1           MOV      R0,R4
   \   000002A0   14D08DE2           ADD      SP,SP,#+20
   \   000002A4   F040BDE8           POP      {R4-R7,LR}
   \   000002A8   0020A0E3           MOV      R2,#+0
   \   000002AC   0110A0E3           MOV      R1,#+1
   \   000002B0   ........           B        BUTTON_SetTextColor  ;; tailcall
   1350          }
   1351          
   1352          #define	FIVE_BTN_BOX_LEFT			27
   1353          #define	FIVE_BTN_BOX_RIGHT			245
   1354          #define	CAMERA_TEXT_CENTER			136
   1355          #define	HALF_CAMERA_LINE			89
   1356          #define	FIVE_BTN_BOX_TOP			TOP_BUT
   1357          #define	FIVE_BTN_BOX_BOTTOM			(TOP_BUT + 209)
   1358          #define	CM_LINE_GAP					20
   1359          #define	CM_TEXT_START				(FIVE_BTN_BOX_LEFT + 10)
   1360          #define	CM_TEXT_OFFSET				12

   \                                 In section .text, align 4, keep-with-next
   1361          const GUI_RECT TimeRect = { 100, TOP_BUT +             CM_TEXT_OFFSET, FIVE_BTN_BOX_RIGHT - 10, TOP_BUT +             CM_TEXT_OFFSET + 20 };
   \                     TimeRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   64003C00EB00       DC16 100, 60, 235, 80
   \              5000        

   \                                 In section .text, align 4, keep-with-next
   1362          const GUI_RECT DistRect = { 100, TOP_BUT + (1 * GAP) + CM_TEXT_OFFSET, FIVE_BTN_BOX_RIGHT - 10, TOP_BUT + (1 * GAP) + CM_TEXT_OFFSET + 20 };
   \                     DistRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   64006700EB00       DC16 100, 103, 235, 123
   \              7B00        

   \                                 In section .text, align 4, keep-with-next
   1363          const GUI_RECT RPMRect =  { 100, TOP_BUT + (2 * GAP) + CM_TEXT_OFFSET, FIVE_BTN_BOX_RIGHT - 10, TOP_BUT + (2 * GAP) + CM_TEXT_OFFSET + 20 };
   \                     RPMRect:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   64009200EB00       DC16 100, 146, 235, 166
   \              A600        
   1364          

   \                                 In section .text, align 4, keep-with-next
   1365          void CarMetricsSelectionPaint(WM_HWIN hParent)
   1366          {
   \                     CarMetricsSelectionPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   1367          	char scratch[10];
   1368          
   1369          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable168
   \   00000014   ........           BL       GUI_DrawBitmap
   1370          	GUI_DrawBitmap(&bmCarMetricsBanner, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable178_2
   \   00000024   ........           BL       GUI_DrawBitmap
   1371          
   1372          	GUI_SetFont(&GUI_Font20_ASCII);
   \   00000028   ........           LDR      R4,??DataTable178_3
   \   0000002C   0400A0E1           MOV      R0,R4
   \   00000030   ........           BL       GUI_SetFont
   1373          
   1374          	// Draw left side square for data
   1375          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000034   0150A0E3           MOV      R5,#+1
   \   00000038   0500A0E3           MOV      R0,#+5
   \   0000003C   405F85E3           ORR      R5,R5,#0x100
   \   00000040   00008DE5           STR      R0,[SP, #+0]
   \   00000044   0530A0E1           MOV      R3,R5
   \   00000048   F520A0E3           MOV      R2,#+245
   \   0000004C   3010A0E3           MOV      R1,#+48
   \   00000050   1B00A0E3           MOV      R0,#+27
   \   00000054   ........           BL       GUI_DrawRoundedRect
   1376          	GUI_SetColor(GUI_GRAY);
   \   00000058   ........           LDR      R0,??DataTable169_1  ;; 0x808080
   \   0000005C   ........           BL       GUI_SetColor
   1377          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000060   0500A0E3           MOV      R0,#+5
   \   00000064   00008DE5           STR      R0,[SP, #+0]
   \   00000068   0530A0E1           MOV      R3,R5
   \   0000006C   F520A0E3           MOV      R2,#+245
   \   00000070   3010A0E3           MOV      R1,#+48
   \   00000074   1B00A0E3           MOV      R0,#+27
   \   00000078   ........           BL       GUI_FillRoundedRect
   1378          
   1379          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   0000007C   0500A0E3           MOV      R0,#+5
   \   00000080   00008DE5           STR      R0,[SP, #+0]
   \   00000084   FF30A0E3           MOV      R3,#+255
   \   00000088   F320A0E3           MOV      R2,#+243
   \   0000008C   3210A0E3           MOV      R1,#+50
   \   00000090   1D00A0E3           MOV      R0,#+29
   \   00000094   ........           BL       GUI_DrawRoundedRect
   1380          	GUI_SetColor(GUI_BLACK);
   \   00000098   0000A0E3           MOV      R0,#+0
   \   0000009C   ........           BL       GUI_SetColor
   1381          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   000000A0   0500A0E3           MOV      R0,#+5
   \   000000A4   00008DE5           STR      R0,[SP, #+0]
   \   000000A8   FF30A0E3           MOV      R3,#+255
   \   000000AC   F320A0E3           MOV      R2,#+243
   \   000000B0   3210A0E3           MOV      R1,#+50
   \   000000B4   1D00A0E3           MOV      R0,#+29
   \   000000B8   ........           BL       GUI_FillRoundedRect
   1382          
   1383          	// draw 3 gray lines for field seperators
   1384          	GUI_SetPenSize(2);
   \   000000BC   0200A0E3           MOV      R0,#+2
   \   000000C0   ........           BL       GUI_SetPenSize
   1385          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000000C4   ........           LDR      R0,??DataTable179  ;; 0xd3d3d3
   \   000000C8   ........           BL       GUI_SetColor
   1386          	GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, TOP_BUT + (1 * GAP) - 3, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, TOP_BUT + (1 * GAP) - 3);
   \   000000CC   5830A0E3           MOV      R3,#+88
   \   000000D0   E120A0E3           MOV      R2,#+225
   \   000000D4   5810A0E3           MOV      R1,#+88
   \   000000D8   2F00A0E3           MOV      R0,#+47
   \   000000DC   ........           BL       GUI_DrawLine
   1387          	GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, TOP_BUT + (2 * GAP) - 3, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, TOP_BUT + (2 * GAP) - 3);
   \   000000E0   8330A0E3           MOV      R3,#+131
   \   000000E4   E120A0E3           MOV      R2,#+225
   \   000000E8   8310A0E3           MOV      R1,#+131
   \   000000EC   2F00A0E3           MOV      R0,#+47
   \   000000F0   ........           BL       GUI_DrawLine
   1388          	GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, TOP_BUT + (3 * GAP) - 3, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, TOP_BUT + (3 * GAP) - 3);
   \   000000F4   AE30A0E3           MOV      R3,#+174
   \   000000F8   E120A0E3           MOV      R2,#+225
   \   000000FC   AE10A0E3           MOV      R1,#+174
   \   00000100   2F00A0E3           MOV      R0,#+47
   \   00000104   ........           BL       GUI_DrawLine
   1389          
   1390          	// Draw static text
   1391          	GUI_DispStringAt("Total Time:",		CM_TEXT_START, TOP_BUT +			 CM_TEXT_OFFSET);
   \   00000108   3C20A0E3           MOV      R2,#+60
   \   0000010C   2510A0E3           MOV      R1,#+37
   \   00000110   ............       ADRL     R0,`?<Constant "Total Time:">`
   \              ....        
   \   00000118   ........           BL       GUI_DispStringAt
   1392          	GUI_DispStringAt("Total Distance:", CM_TEXT_START, TOP_BUT + (1 * GAP) + CM_TEXT_OFFSET);
   \   0000011C   6720A0E3           MOV      R2,#+103
   \   00000120   2510A0E3           MOV      R1,#+37
   \   00000124   ............       ADRL     R0,`?<Constant "Total Distance:">`
   \              ....        
   \   0000012C   ........           BL       GUI_DispStringAt
   1393          	GUI_DispStringAt("Max RPM:",		CM_TEXT_START, TOP_BUT + (2 * GAP) + CM_TEXT_OFFSET);
   \   00000130   9220A0E3           MOV      R2,#+146
   \   00000134   2510A0E3           MOV      R1,#+37
   \   00000138   ............       ADRL     R0,`?<Constant "Max RPM:">`
   \              ....        
   \   00000140   ........           BL       GUI_DispStringAt
   1394          	GUI_DispStringAt("Aero (Cd)",		CM_TEXT_START, TOP_BUT + (3 * GAP) + CM_TEXT_OFFSET);
   \   00000144   BD20A0E3           MOV      R2,#+189
   \   00000148   2510A0E3           MOV      R1,#+37
   \   0000014C   ............       ADRL     R0,`?<Constant "Aero (Cd)">`
   \              ....        
   \   00000154   ........           BL       GUI_DispStringAt
   1395          	GUI_DispStringAt("Grip (Crr)",		FIVE_BTN_BOX_RIGHT - 85, TOP_BUT + (3 * GAP) + CM_TEXT_OFFSET);
   \   00000158   BD20A0E3           MOV      R2,#+189
   \   0000015C   A010A0E3           MOV      R1,#+160
   \   00000160   ............       ADRL     R0,`?<Constant "Grip (Crr)">`
   \              ....        
   \   00000168   ........           BL       GUI_DispStringAt
   1396          
   1397          	// Draw Data Values
   1398          	UpdateAll();
   \   0000016C   ........           BL       UpdateTime
   \   00000170   ........           BL       UpdateDistance
   \   00000174   0400A0E1           MOV      R0,R4
   \   00000178   ........           BL       GUI_SetFont
   \   0000017C   ........           LDR      R0,??DataTable181
   \   00000180   ........           ADR      R1,??DataTable171  ;; 0x25, 0x75, 0x00, 0x00
   \   00000184   BC2090E5           LDR      R2,[R0, #+188]
   \   00000188   10008DE2           ADD      R0,SP,#+16
   \   0000018C   ........           BL       sprintf
   \   00000190   FF00A0E3           MOV      R0,#+255
   \   00000194   ........           BL       GUI_SetColor
   \   00000198   0120A0E3           MOV      R2,#+1
   \   0000019C   ............       ADRL     R1,RPMRect
   \              ....        
   \   000001A4   10008DE2           ADD      R0,SP,#+16
   \   000001A8   ........           BL       GUI_DispStringInRect
   1399          
   1400          	// Aero
   1401          	GUI_SetColor(GUI_GREEN);
   \   000001AC   FF0CA0E3           MOV      R0,#+65280
   \   000001B0   ........           BL       GUI_SetColor
   1402          	sprintf(scratch, "%0.03f", vehicleData.windDrag);
   \   000001B4   ........           LDR      R5,??DataTable169_3
   \   000001B8   ............       ADRL     R4,`?<Constant "%0.03f">`
   \              ....        
   \   000001C0   6C0095E5           LDR      R0,[R5, #+108]
   \   000001C4   ........           BL       __aeabi_f2d
   \   000001C8   0020A0E1           MOV      R2,R0
   \   000001CC   0130A0E1           MOV      R3,R1
   \   000001D0   0410A0E1           MOV      R1,R4
   \   000001D4   04008DE2           ADD      R0,SP,#+4
   \   000001D8   ........           BL       sprintf
   1403          	GUI_DispStringHCenterAt(scratch, 75, TOP_BUT + (4 * GAP));
   \   000001DC   DC20A0E3           MOV      R2,#+220
   \   000001E0   4B10A0E3           MOV      R1,#+75
   \   000001E4   04008DE2           ADD      R0,SP,#+4
   \   000001E8   ........           BL       GUI_DispStringHCenterAt
   1404          
   1405          	// Grip
   1406          	sprintf(scratch, "%0.03f", vehicleData.rollingResistance);
   \   000001EC   700095E5           LDR      R0,[R5, #+112]
   \   000001F0   ........           BL       __aeabi_f2d
   \   000001F4   0020A0E1           MOV      R2,R0
   \   000001F8   0130A0E1           MOV      R3,R1
   \   000001FC   0410A0E1           MOV      R1,R4
   \   00000200   04008DE2           ADD      R0,SP,#+4
   \   00000204   ........           BL       sprintf
   1407          	GUI_DispStringHCenterAt(scratch, 200, TOP_BUT + (4 * GAP));
   \   00000208   DC20A0E3           MOV      R2,#+220
   \   0000020C   C810A0E3           MOV      R1,#+200
   \   00000210   04008DE2           ADD      R0,SP,#+4
   \   00000214   ........           BL       GUI_DispStringHCenterAt
   1408          
   1409          	GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   00000218   E520A0E3           MOV      R2,#+229
   \   0000021C   0010A0E3           MOV      R1,#+0
   \   00000220   ........           LDR      R0,??DataTable172_6
   \   00000224   ........           BL       GUI_DrawBitmap
   1410          }
   \   00000228   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   0000022C   3080BDE8           POP      {R4,R5,PC}       ;; return
   1411          
   1412          // Draw All Data Values

   \                                 In section .text, align 4, keep-with-next
   1413          void UpdateAll(void)
   1414          {
   \                     UpdateAll:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   1415          	UpdateTime();
   \   00000008   ........           BL       UpdateTime
   1416          	UpdateDistance();
   \   0000000C   ........           BL       UpdateDistance
   1417          	UpdateRPM();
   \   00000010   ........           LDR      R0,??DataTable178_3
   \   00000014   ........           BL       GUI_SetFont
   \   00000018   ........           LDR      R0,??DataTable181
   \   0000001C   ........           ADR      R1,??DataTable171  ;; 0x25, 0x75, 0x00, 0x00
   \   00000020   BC2090E5           LDR      R2,[R0, #+188]
   \   00000024   0D00A0E1           MOV      R0,SP
   \   00000028   ........           BL       sprintf
   \   0000002C   FF00A0E3           MOV      R0,#+255
   \   00000030   ........           BL       GUI_SetColor
   \   00000034   0120A0E3           MOV      R2,#+1
   \   00000038   ............       ADRL     R1,RPMRect
   \              ....        
   \   00000040   0D00A0E1           MOV      R0,SP
   \   00000044   ........           BL       GUI_DispStringInRect
   1418          }
   \   00000048   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   0000004C   0080BDE8           POP      {PC}             ;; return
   1419          
   1420          // Total Time

   \                                 In section .text, align 4, keep-with-next
   1421          void UpdateTime(void)
   1422          {
   \                     UpdateTime:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   1423          	char scratch[20];
   1424          
   1425          	GUI_SetFont(&GUI_Font20_ASCII);				// Be sure font is selected at this time (might be called from button press)
   \   00000008   ........           LDR      R0,??DataTable178_3
   \   0000000C   ........           BL       GUI_SetFont
   \   00000010   ........           LDR      R0,??DataTable181
   \   00000014   ........           LDR      R1,??DataTable182  ;; 0x48afc800
   \   00000018   C40090E5           LDR      R0,[R0, #+196]
   \   0000001C   ........           BL       __aeabi_cfrcmple
   \   00000020   0A00008A           BHI      ??UpdateTime_0
   1426          
   1427          	if (sysData.totalTimeEver >= 360000)		// if 100 hours or more
   1428          		sprintf(scratch, "%u hr", (int)sysData.totalTimeEver / 3600);
   \   00000024   ........           BL       __aeabi_f2iz
   \   00000028   ........           LDR      R1,??DataTable182_1  ;; 0x91a2b3c5
   \   0000002C   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000030   001081E0           ADD      R1,R1,R0
   \   00000034   C125B0E1           ASRS     R2,R1,#+11
   \   00000038   01208242           ADDMI    R2,R2,#+1
   \   0000003C   ............       ADRL     R1,`?<Constant "%u hr">`
   \              ....        
   \   00000044   0D00A0E1           MOV      R0,SP
   \   00000048   ........           BL       sprintf
   \   0000004C   0F0000EA           B        ??UpdateTime_1
   1429          	else sprintf(scratch, sysData.totalTimeEver >= 36000 ? "%0.1f hr" : "%0.2f hr", (float)sysData.totalTimeEver / 3600.0);
   \                     ??UpdateTime_0:
   \   00000050   4714A0E3           MOV      R1,#+1191182336
   \   00000054   CA1A81E3           ORR      R1,R1,#0xCA000
   \   00000058   ........           BL       __aeabi_cfrcmple
   \   0000005C   ............       ADRLLS   R4,`?<Constant "%0.1f hr">`
   \              ....        
   \   00000064   ............       ADRLHI   R4,`?<Constant "%0.2f hr">`
   \              ....        
   \   0000006C   ........           BL       __aeabi_f2d
   \   00000070   0020A0E3           MOV      R2,#+0
   \   00000074   ........           LDR      R3,??DataTable182_2  ;; 0x40ac2000
   \   00000078   ........           BL       __aeabi_ddiv
   \   0000007C   0020A0E1           MOV      R2,R0
   \   00000080   0130A0E1           MOV      R3,R1
   \   00000084   0410A0E1           MOV      R1,R4
   \   00000088   0D00A0E1           MOV      R0,SP
   \   0000008C   ........           BL       sprintf
   1430          
   1431          	GUI_SetColor(GUI_LIGHTBLUE);
   \                     ??UpdateTime_1:
   \   00000090   ........           LDR      R0,??DataTable182_3  ;; 0xff8080
   \   00000094   ........           BL       GUI_SetColor
   1432          	GUI_DispStringInRect(scratch, (GUI_RECT *)&TimeRect, GUI_TA_RIGHT);
   \   00000098   0120A0E3           MOV      R2,#+1
   \   0000009C   ............       ADRL     R1,TimeRect
   \              ....        
   \   000000A4   0D00A0E1           MOV      R0,SP
   \   000000A8   ........           BL       GUI_DispStringInRect
   1433          }
   \   000000AC   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000B0   1080BDE8           POP      {R4,PC}          ;; return
   1434          
   1435          // Total Distance

   \                                 In section .text, align 4, keep-with-next
   1436          void UpdateDistance(void)
   1437          {
   \                     UpdateDistance:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   18D04DE2           SUB      SP,SP,#+24
   1438          	char scratch[20];
   1439          
   1440          	GUI_SetFont(&GUI_Font20_ASCII);				// Be sure font is selected at this time (might be called from button press)
   \   00000008   ........           LDR      R0,??DataTable178_3
   \   0000000C   ........           BL       GUI_SetFont
   1441          
   1442          	if (sysData.units == STD)
   \   00000010   ........           LDR      R1,??DataTable181
   \   00000014   C00091E5           LDR      R0,[R1, #+192]
   \   00000018   641091E5           LDR      R1,[R1, #+100]
   \   0000001C   000051E3           CMP      R1,#+0
   \   00000020   1700001A           BNE      ??UpdateDistance_0
   1443          	{
   1444          		if (sysData.totalDistanceEver >= 160934)		// if 100 miles or more
   \   00000024   ........           LDR      R1,??DataTable182_4  ;; 0x481d2980
   \   00000028   ........           BL       __aeabi_cfrcmple
   \   0000002C   0A00008A           BHI      ??UpdateDistance_1
   1445          			sprintf(scratch, "%u mi", (int)(sysData.totalDistanceEver / 1609.34));
   \   00000030   ........           BL       __aeabi_f2d
   \   00000034   ........           ADR      R2,??DataTable172_5
   \   00000038   0C0092E8           LDM      R2,{R2,R3}
   \   0000003C   ........           BL       __aeabi_ddiv
   \   00000040   ........           BL       __aeabi_d2iz
   \   00000044   0020A0E1           MOV      R2,R0
   \   00000048   ............       ADRL     R1,`?<Constant "%u mi">`
   \              ....        
   \                     ??UpdateDistance_2:
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       sprintf
   \   00000058   250000EA           B        ??UpdateDistance_3
   1446          		else sprintf(scratch, sysData.totalDistanceEver >= 16093.4 ? "%0.1f mi" : "%0.2f mi", sysData.totalDistanceEver / 1609.34);
   \                     ??UpdateDistance_1:
   \   0000005C   ........           LDR      R1,??DataTable182_5  ;; 0x467b759a
   \   00000060   ........           BL       __aeabi_cfrcmple
   \   00000064   ............       ADRLLS   R4,`?<Constant "%0.1f mi">`
   \              ....        
   \   0000006C   ............       ADRLHI   R4,`?<Constant "%0.2f mi">`
   \              ....        
   \   00000074   ........           BL       __aeabi_f2d
   \   00000078   ........           ADR      R2,??DataTable172_5
   \   0000007C   0C0092E8           LDM      R2,{R2,R3}
   \   00000080   150000EA           B        ??UpdateDistance_4
   1447          	}
   1448          	else
   1449          	{
   1450          		if (sysData.totalDistanceEver >= 100000)		// if 100 km or more
   \                     ??UpdateDistance_0:
   \   00000084   ........           LDR      R1,??DataTable182_6  ;; 0x47c35000
   \   00000088   ........           BL       __aeabi_cfrcmple
   \   0000008C   0800008A           BHI      ??UpdateDistance_5
   1451          			sprintf(scratch, "%u km", (int)(sysData.totalDistanceEver / 1000.0));
   \   00000090   ........           BL       __aeabi_f2d
   \   00000094   0020A0E3           MOV      R2,#+0
   \   00000098   ........           LDR      R3,??DataTable182_7  ;; 0x408f4000
   \   0000009C   ........           BL       __aeabi_ddiv
   \   000000A0   ........           BL       __aeabi_d2iz
   \   000000A4   0020A0E1           MOV      R2,R0
   \   000000A8   ............       ADRL     R1,`?<Constant "%u km">`
   \              ....        
   \   000000B0   E6FFFFEA           B        ??UpdateDistance_2
   1452          		else sprintf(scratch, sysData.totalDistanceEver >= 10000.0 ? "%0.1f km" : "%0.2f km", sysData.totalDistanceEver / 1000.0);
   \                     ??UpdateDistance_5:
   \   000000B4   4614A0E3           MOV      R1,#+1174405120
   \   000000B8   711981E3           ORR      R1,R1,#0x1C4000
   \   000000BC   ........           BL       __aeabi_cfrcmple
   \   000000C0   ............       ADRLLS   R4,`?<Constant "%0.1f km">`
   \              ....        
   \   000000C8   ............       ADRLHI   R4,`?<Constant "%0.2f km">`
   \              ....        
   \   000000D0   ........           BL       __aeabi_f2d
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   ........           LDR      R3,??DataTable182_7  ;; 0x408f4000
   \                     ??UpdateDistance_4:
   \   000000DC   ........           BL       __aeabi_ddiv
   \   000000E0   0020A0E1           MOV      R2,R0
   \   000000E4   0130A0E1           MOV      R3,R1
   \   000000E8   0410A0E1           MOV      R1,R4
   \   000000EC   0D00A0E1           MOV      R0,SP
   \   000000F0   ........           BL       sprintf
   1453          	}
   1454          
   1455          	GUI_SetColor(GUI_YELLOW);
   \                     ??UpdateDistance_3:
   \   000000F4   FF00A0E3           MOV      R0,#+255
   \   000000F8   FF0C80E3           ORR      R0,R0,#0xFF00
   \   000000FC   ........           BL       GUI_SetColor
   1456          	GUI_DispStringInRect(scratch, (GUI_RECT *)&DistRect, GUI_TA_RIGHT);
   \   00000100   0120A0E3           MOV      R2,#+1
   \   00000104   ............       ADRL     R1,DistRect
   \              ....        
   \   0000010C   0D00A0E1           MOV      R0,SP
   \   00000110   ........           BL       GUI_DispStringInRect
   1457          }
   \   00000114   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   00000118   1080BDE8           POP      {R4,PC}          ;; return
   1458          
   1459          // Max RPM

   \                                 In section .text, align 4, keep-with-next
   1460          void UpdateRPM(void)
   1461          {
   \                     UpdateRPM:
   \   00000000   00402DE9           PUSH     {LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   1462          	char scratch[20];
   1463          
   1464          	GUI_SetFont(&GUI_Font20_ASCII);				// Be sure font is selected at this time (might be called from button press)
   \   00000008   ........           LDR      R0,??DataTable178_3
   \   0000000C   ........           BL       GUI_SetFont
   1465          
   1466          	sprintf(scratch, "%u", sysData.maxRpmEver);
   \   00000010   ........           LDR      R0,??DataTable181
   \   00000014   ........           ADR      R1,??DataTable171  ;; 0x25, 0x75, 0x00, 0x00
   \   00000018   BC2090E5           LDR      R2,[R0, #+188]
   \   0000001C   0D00A0E1           MOV      R0,SP
   \   00000020   ........           BL       sprintf
   1467          	GUI_SetColor(GUI_RED);
   \   00000024   FF00A0E3           MOV      R0,#+255
   \   00000028   ........           BL       GUI_SetColor
   1468          	GUI_DispStringInRect(scratch, (GUI_RECT *)&RPMRect, GUI_TA_RIGHT);
   \   0000002C   0120A0E3           MOV      R2,#+1
   \   00000030   ............       ADRL     R1,RPMRect
   \              ....        
   \   00000038   0D00A0E1           MOV      R0,SP
   \   0000003C   ........           BL       GUI_DispStringInRect
   1469          }
   \   00000040   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000044   0080BDE8           POP      {PC}             ;; return
   1470          
   1471          #define	CAMERA_BUTTON_ONE	99
   1472          #define	CAMERA_BUTTON_TWO	152
   1473          #define	CAMERA_BUTTON_THREE	216
   1474          #define	LEFT_LINE_WIDTH		180
   1475          #define	CAMERA_LINE_1_Y		60
   1476          #define	TD_CAMERA_LINE_Y	120
   1477          #define	SU_CAMERA_LINE_Y	190
   1478          #define	CAMERA_STATUS_LINE	230
   1479          #define	CAMERA_UPPER_LINE_OFFSET	25
   1480          #define	CAMERA_LOWER_LINE_OFFSET	5
   1481          #define	CAMERA_BUTTON_LINE	203
   1482          

   \                                 In section .text, align 4, keep-with-next
   1483          void DisplayCameraSetupSelection(WM_HWIN hParent)
   1484          {
   \                     DisplayCameraSetupSelection:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1485          	BUTTON_Handle hBtn;
   1486          
   1487          	if (unsavedSysData.unitInfo.bootloaderSwRev > FIRST_GEN_BOOTLOADER)
   \   00000008   ........           LDR      R0,??DataTable182_8
   \   0000000C   0260A0E3           MOV      R6,#+2
   \   00000010   6C0090E5           LDR      R0,[R0, #+108]
   \   00000014   14D04DE2           SUB      SP,SP,#+20
   \   00000018   FF54E0E3           MVN      R5,#-16777216
   \   0000001C   406F86E3           ORR      R6,R6,#0x100
   \   00000020   880050E3           CMP      R0,#+136
   \   00000024   2000003A           BCC      ??DisplayCameraSetupSelection_0
   1488          	{
   1489          		hBtn = BUTTON_CreateEx(BUTTON_LEFT, CAMERA_BUTTON_ONE, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, USB_CAM_BUTTON);
   \   00000028   1B00A0E3           MOV      R0,#+27
   \   0000002C   800E80E3           ORR      R0,R0,#0x800
   \   00000030   0C008DE5           STR      R0,[SP, #+12]
   \   00000034   0000A0E3           MOV      R0,#+0
   \   00000038   08008DE5           STR      R0,[SP, #+8]
   \   0000003C   0200A0E3           MOV      R0,#+2
   \   00000040   04008DE5           STR      R0,[SP, #+4]
   \   00000044   00408DE5           STR      R4,[SP, #+0]
   \   00000048   2730A0E3           MOV      R3,#+39
   \   0000004C   CA20A0E3           MOV      R2,#+202
   \   00000050   6310A0E3           MOV      R1,#+99
   \   00000054   0600A0E1           MOV      R0,R6
   \   00000058   ........           BL       BUTTON_CreateEx
   \   0000005C   0070A0E1           MOV      R7,R0
   1490          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBlueButton);
   \   00000060   ........           LDR      R2,??DataTable177_1
   \   00000064   0010A0E3           MOV      R1,#+0
   \   00000068   ........           BL       BUTTON_SetBitmap
   1491          		BUTTON_SetText(hBtn, "TraqDash USB Port");
   \   0000006C   ............       ADRL     R1,`?<Constant "TraqDash USB Port">`
   \              ....        
   \   00000074   0700A0E1           MOV      R0,R7
   \   00000078   ........           BL       BUTTON_SetText
   1492          		BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_WHITE);
   \   0000007C   0520A0E1           MOV      R2,R5
   \   00000080   0210A0E3           MOV      R1,#+2
   \   00000084   0700A0E1           MOV      R0,R7
   \   00000088   ........           BL       BUTTON_SetTextColor
   1493          		BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   0000008C   0520A0E1           MOV      R2,R5
   \   00000090   0010A0E3           MOV      R1,#+0
   \   00000094   0700A0E1           MOV      R0,R7
   \   00000098   ........           BL       BUTTON_SetTextColor
   1494          		BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_WHITE);
   \   0000009C   0520A0E1           MOV      R2,R5
   \   000000A0   0110A0E3           MOV      R1,#+1
   \   000000A4   0700A0E1           MOV      R0,R7
   \   000000A8   ........           BL       BUTTON_SetTextColor
   1495          	}
   1496          
   1497          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, CAMERA_BUTTON_TWO, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, SENSOR_UNIT_BUTTON);
   \                     ??DisplayCameraSetupSelection_0:
   \   000000AC   1D00A0E3           MOV      R0,#+29
   \   000000B0   800E80E3           ORR      R0,R0,#0x800
   \   000000B4   0C008DE5           STR      R0,[SP, #+12]
   \   000000B8   0000A0E3           MOV      R0,#+0
   \   000000BC   08008DE5           STR      R0,[SP, #+8]
   \   000000C0   0200A0E3           MOV      R0,#+2
   \   000000C4   04008DE5           STR      R0,[SP, #+4]
   \   000000C8   00408DE5           STR      R4,[SP, #+0]
   \   000000CC   2730A0E3           MOV      R3,#+39
   \   000000D0   CA20A0E3           MOV      R2,#+202
   \   000000D4   9810A0E3           MOV      R1,#+152
   \   000000D8   0600A0E1           MOV      R0,R6
   \   000000DC   ........           BL       BUTTON_CreateEx
   \   000000E0   0070A0E1           MOV      R7,R0
   1498          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedButton);
   \   000000E4   ........           LDR      R2,??DataTable184
   \   000000E8   0010A0E3           MOV      R1,#+0
   \   000000EC   ........           BL       BUTTON_SetBitmap
   1499          	BUTTON_SetText(hBtn, "Sensor Unit Box");
   \   000000F0   ............       ADRL     R1,`?<Constant "Sensor Unit Box">`
   \              ....        
   \   000000F8   0700A0E1           MOV      R0,R7
   \   000000FC   ........           BL       BUTTON_SetText
   1500          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_WHITE);
   \   00000100   0520A0E1           MOV      R2,R5
   \   00000104   0210A0E3           MOV      R1,#+2
   \   00000108   0700A0E1           MOV      R0,R7
   \   0000010C   ........           BL       BUTTON_SetTextColor
   1501          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000110   0520A0E1           MOV      R2,R5
   \   00000114   0010A0E3           MOV      R1,#+0
   \   00000118   0700A0E1           MOV      R0,R7
   \   0000011C   ........           BL       BUTTON_SetTextColor
   1502          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_WHITE);
   \   00000120   0520A0E1           MOV      R2,R5
   \   00000124   0110A0E3           MOV      R1,#+1
   \   00000128   0700A0E1           MOV      R0,R7
   \   0000012C   ........           BL       BUTTON_SetTextColor
   1503          
   1504          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, CAMERA_BUTTON_THREE, BUTTON_WIDTH, BUTTON_HEIGHT, hParent, WM_CF_SHOW, 0, TEST_CAM_BUTTON);
   \   00000130   1E00A0E3           MOV      R0,#+30
   \   00000134   800E80E3           ORR      R0,R0,#0x800
   \   00000138   0C008DE5           STR      R0,[SP, #+12]
   \   0000013C   0000A0E3           MOV      R0,#+0
   \   00000140   08008DE5           STR      R0,[SP, #+8]
   \   00000144   0200A0E3           MOV      R0,#+2
   \   00000148   04008DE5           STR      R0,[SP, #+4]
   \   0000014C   00408DE5           STR      R4,[SP, #+0]
   \   00000150   2730A0E3           MOV      R3,#+39
   \   00000154   CA20A0E3           MOV      R2,#+202
   \   00000158   D810A0E3           MOV      R1,#+216
   \   0000015C   0600A0E1           MOV      R0,R6
   \   00000160   ........           BL       BUTTON_CreateEx
   \   00000164   0040A0E1           MOV      R4,R0
   1505          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenButton);
   \   00000168   ........           LDR      R2,??DataTable184_1
   \   0000016C   0010A0E3           MOV      R1,#+0
   \   00000170   ........           BL       BUTTON_SetBitmap
   1506          	BUTTON_SetText(hBtn, "Test Camera(s)");
   \   00000174   ............       ADRL     R1,`?<Constant "Test Camera(s)">`
   \              ....        
   \   0000017C   0400A0E1           MOV      R0,R4
   \   00000180   ........           BL       BUTTON_SetText
   1507          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_BLACK);
   \   00000184   0020A0E3           MOV      R2,#+0
   \   00000188   0210A0E3           MOV      R1,#+2
   \   0000018C   0400A0E1           MOV      R0,R4
   \   00000190   ........           BL       BUTTON_SetTextColor
   1508          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_BLACK);
   \   00000194   0020A0E3           MOV      R2,#+0
   \   00000198   0010A0E3           MOV      R1,#+0
   \   0000019C   0400A0E1           MOV      R0,R4
   \   000001A0   ........           BL       BUTTON_SetTextColor
   1509          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_BLACK);
   \   000001A4   0400A0E1           MOV      R0,R4
   \   000001A8   14D08DE2           ADD      SP,SP,#+20
   \   000001AC   F040BDE8           POP      {R4-R7,LR}
   \   000001B0   0020A0E3           MOV      R2,#+0
   \   000001B4   0110A0E3           MOV      R1,#+1
   \   000001B8   ........           B        BUTTON_SetTextColor  ;; tailcall
   1510          }
   1511          
   1512          

   \                                 In section .text, align 4, keep-with-next
   1513          void CameraSetupPaint(WM_HWIN hParent)
   1514          {
   \                     CameraSetupPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   1515          	char scratch[30];
   1516          
   1517          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable184_2
   \   00000014   ........           BL       GUI_DrawBitmap
   1518          	GUI_DrawBitmap(&bmCameraSetupBanner, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable184_3
   \   00000024   ........           BL       GUI_DrawBitmap
   1519          
   1520          	GUI_SetFont(&GUI_Font20_ASCII);
   \   00000028   ........           LDR      R0,??DataTable178_3
   \   0000002C   ........           BL       GUI_SetFont
   1521          
   1522          	// Draw left side square for data
   1523          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000030   0140A0E3           MOV      R4,#+1
   \   00000034   0500A0E3           MOV      R0,#+5
   \   00000038   404F84E3           ORR      R4,R4,#0x100
   \   0000003C   00008DE5           STR      R0,[SP, #+0]
   \   00000040   0430A0E1           MOV      R3,R4
   \   00000044   F520A0E3           MOV      R2,#+245
   \   00000048   3010A0E3           MOV      R1,#+48
   \   0000004C   1B00A0E3           MOV      R0,#+27
   \   00000050   ........           BL       GUI_DrawRoundedRect
   1524          	GUI_SetColor(GUI_GRAY);
   \   00000054   ........           LDR      R0,??DataTable184_4  ;; 0x808080
   \   00000058   ........           BL       GUI_SetColor
   1525          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   0000005C   0500A0E3           MOV      R0,#+5
   \   00000060   00008DE5           STR      R0,[SP, #+0]
   \   00000064   0430A0E1           MOV      R3,R4
   \   00000068   F520A0E3           MOV      R2,#+245
   \   0000006C   3010A0E3           MOV      R1,#+48
   \   00000070   1B00A0E3           MOV      R0,#+27
   \   00000074   ........           BL       GUI_FillRoundedRect
   1526          
   1527          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   00000078   0500A0E3           MOV      R0,#+5
   \   0000007C   00008DE5           STR      R0,[SP, #+0]
   \   00000080   FF30A0E3           MOV      R3,#+255
   \   00000084   F320A0E3           MOV      R2,#+243
   \   00000088   3210A0E3           MOV      R1,#+50
   \   0000008C   1D00A0E3           MOV      R0,#+29
   \   00000090   ........           BL       GUI_DrawRoundedRect
   1528          	GUI_SetColor(GUI_BLACK);
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   ........           BL       GUI_SetColor
   1529          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   0000009C   0500A0E3           MOV      R0,#+5
   \   000000A0   00008DE5           STR      R0,[SP, #+0]
   \   000000A4   FF30A0E3           MOV      R3,#+255
   \   000000A8   F320A0E3           MOV      R2,#+243
   \   000000AC   3210A0E3           MOV      R1,#+50
   \   000000B0   1D00A0E3           MOV      R0,#+29
   \   000000B4   ........           BL       GUI_FillRoundedRect
   1530          
   1531          	// Prepare to draw gray lines for field seperators
   1532          	GUI_SetPenSize(2);
   \   000000B8   0200A0E3           MOV      R0,#+2
   \   000000BC   ........           BL       GUI_SetPenSize
   1533          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000000C0   ........           LDR      R5,??DataTable179  ;; 0xd3d3d3
   \   000000C4   0500A0E1           MOV      R0,R5
   \   000000C8   ........           BL       GUI_SetColor
   1534          
   1535          	// Draw static text
   1536          	GUI_SetTextMode(GUI_TM_TRANS);
   \   000000CC   0200A0E3           MOV      R0,#+2
   \   000000D0   ........           BL       GUI_SetTextMode
   1537          	GUI_DispStringHCenterAt("Camera Connection", BUTTON_LEFT + (BUTTON_WIDTH / 2), TOP_BUT + (0 * GAP) + CM_TEXT_OFFSET);
   \   000000D4   3C20A0E3           MOV      R2,#+60
   \   000000D8   661084E3           ORR      R1,R4,#0x66
   \   000000DC   ............       ADRL     R0,`?<Constant "Camera Connection">`
   \              ....        
   \   000000E4   ........           BL       GUI_DispStringHCenterAt
   1538          
   1539          	if (unsavedSysData.unitInfo.bootloaderSwRev > FIRST_GEN_BOOTLOADER)
   \   000000E8   ........           LDR      R0,??DataTable182_8
   \   000000EC   ........           LDR      R4,??DataTable185_1
   \   000000F0   6C0090E5           LDR      R0,[R0, #+108]
   \   000000F4   880050E3           CMP      R0,#+136
   \   000000F8   6E00003A           BCC      ??CameraSetupPaint_0
   1540          	{
   1541          		// draw 3 gray lines for field seperators
   1542          		GUI_SetPenSize(2);
   \   000000FC   0200A0E3           MOV      R0,#+2
   \   00000100   ........           BL       GUI_SetPenSize
   1543          		GUI_SetColor(GUI_LIGHTGRAY);
   \   00000104   0500A0E1           MOV      R0,R5
   \   00000108   ........           BL       GUI_SetColor
   1544          		GUI_DrawLine(CAMERA_TEXT_CENTER - HALF_CAMERA_LINE, TD_CAMERA_LINE_Y, CAMERA_TEXT_CENTER + HALF_CAMERA_LINE, TD_CAMERA_LINE_Y);
   \   0000010C   7830A0E3           MOV      R3,#+120
   \   00000110   E120A0E3           MOV      R2,#+225
   \   00000114   7810A0E3           MOV      R1,#+120
   \   00000118   2F00A0E3           MOV      R0,#+47
   \   0000011C   ........           BL       GUI_DrawLine
   1545          		GUI_DrawLine(CAMERA_TEXT_CENTER - HALF_CAMERA_LINE, SU_CAMERA_LINE_Y, CAMERA_TEXT_CENTER + HALF_CAMERA_LINE, SU_CAMERA_LINE_Y);
   \   00000120   BE30A0E3           MOV      R3,#+190
   \   00000124   E120A0E3           MOV      R2,#+225
   \   00000128   BE10A0E3           MOV      R1,#+190
   \   0000012C   2F00A0E3           MOV      R0,#+47
   \   00000130   ........           BL       GUI_DrawLine
   1546          
   1547          		// Draw line separating Sensor Unit Box button and Text Camera(s) button
   1548          		GUI_DrawLine((BUTTON_LEFT + (BUTTON_WIDTH / 2)) - (LEFT_LINE_WIDTH / 2), CAMERA_BUTTON_LINE, (BUTTON_LEFT + (BUTTON_WIDTH / 2)) + (LEFT_LINE_WIDTH / 2), CAMERA_BUTTON_LINE);
   \   00000134   CB30A0E3           MOV      R3,#+203
   \   00000138   CB10A0E3           MOV      R1,#+203
   \   0000013C   F62083E2           ADD      R2,R3,#+246
   \   00000140   420081E2           ADD      R0,R1,#+66
   \   00000144   ........           BL       GUI_DrawLine
   1549          		// Draw static text
   1550          		// Draw USB Camera Enable State
   1551          		GUI_SetColor(GUI_LIGHTGRAY);
   \   00000148   0500A0E1           MOV      R0,R5
   \   0000014C   ........           BL       GUI_SetColor
   1552          		GUI_DispStringHCenterAt("Camera Settings", CAMERA_TEXT_CENTER, CAMERA_LINE_1_Y);
   \   00000150   3C20A0E3           MOV      R2,#+60
   \   00000154   8810A0E3           MOV      R1,#+136
   \   00000158   ............       ADRL     R0,`?<Constant "Camera Settings">`
   \              ....        
   \   00000160   ........           BL       GUI_DispStringHCenterAt
   1553          		GUI_DispStringHCenterAt("TraqDash USB Port", CAMERA_TEXT_CENTER, TD_CAMERA_LINE_Y - CAMERA_UPPER_LINE_OFFSET);
   \   00000164   5F20A0E3           MOV      R2,#+95
   \   00000168   8810A0E3           MOV      R1,#+136
   \   0000016C   ............       ADRL     R0,`?<Constant "TraqDash USB Port">`
   \              ....        
   \   00000174   ........           BL       GUI_DispStringHCenterAt
   1554          		GUI_DispStringHCenterAt("Sensor Unit Camera Box", CAMERA_TEXT_CENTER, SU_CAMERA_LINE_Y - CAMERA_UPPER_LINE_OFFSET);
   \   00000178   A520A0E3           MOV      R2,#+165
   \   0000017C   8810A0E3           MOV      R1,#+136
   \   00000180   ............       ADRL     R0,`?<Constant "Sensor Unit Camera Box">`
   \              ....        
   \   00000188   ........           BL       GUI_DispStringHCenterAt
   1555          		
   1556          		GUI_SetColor(GUI_LIGHTBLUE);
   \   0000018C   ........           LDR      R0,??DataTable182_3  ;; 0xff8080
   \   00000190   ........           BL       GUI_SetColor
   1557          		if (newTDCameraSelection == TD_CAM_NONE)
   \   00000194   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000198   000050E3           CMP      R0,#+0
   \   0000019C   0500001A           BNE      ??CameraSetupPaint_1
   1558          			sprintf(scratch, "%s", GetTraqdashCameraName(SHORT));
   \   000001A0   ............       ADRL     R2,`?<Constant "None selected">`
   \              ....        
   \   000001A8   ........           ADR      R1,??DataTable177  ;; 0x25, 0x73, 0x00, 0x00
   \   000001AC   04008DE2           ADD      R0,SP,#+4
   \   000001B0   ........           BL       sprintf
   \   000001B4   270000EA           B        ??CameraSetupPaint_2
   1559          		else 
   1560          			sprintf(scratch, "%s (%u.%usec)", GetTraqdashCameraName(SHORT), (vehicleData.usbCameraDelay & 0x7F) / 10, (vehicleData.usbCameraDelay & 0x7F) % 10);
   \                     ??CameraSetupPaint_1:
   \   000001B8   ........           LDR      R1,??DataTable186
   \   000001BC   200050E3           CMP      R0,#+32
   \   000001C0   0C20D1E5           LDRB     R2,[R1, #+12]
   \   000001C4   7F3002E2           AND      R3,R2,#0x7F
   \   000001C8   0E00000A           BEQ      ??CameraSetupPaint_3
   \   000001CC   400050E3           CMP      R0,#+64
   \   000001D0   0900000A           BEQ      ??CameraSetupPaint_4
   \   000001D4   600050E3           CMP      R0,#+96
   \   000001D8   0400000A           BEQ      ??CameraSetupPaint_5
   \   000001DC   0000A0E3           MOV      R0,#+0
   \   000001E0   5501C4E5           STRB     R0,[R4, #+341]
   \   000001E4   ............       ADRL     R2,`?<Constant "None selected">`
   \              ....        
   \   000001EC   070000EA           B        ??CameraSetupPaint_6
   \                     ??CameraSetupPaint_5:
   \   000001F0   ............       ADRL     R2,`?<Constant "Replay Mini">`
   \              ....        
   \   000001F8   040000EA           B        ??CameraSetupPaint_6
   \                     ??CameraSetupPaint_4:
   \   000001FC   ............       ADRL     R2,`?<Constant "Replay Prime-X">`
   \              ....        
   \   00000204   010000EA           B        ??CameraSetupPaint_6
   \                     ??CameraSetupPaint_3:
   \   00000208   ............       ADRL     R2,`?<Constant "Mobius">`
   \              ....        
   \                     ??CameraSetupPaint_6:
   \   00000210   ........           LDR      R0,??DataTable187  ;; 0x66666667
   \   00000214   93C0C0E0           SMULL    R12,R0,R3,R0
   \   00000218   0AC0A0E3           MOV      R12,#+10
   \   0000021C   4001B0E1           ASRS     R0,R0,#+2
   \   00000220   01008042           ADDMI    R0,R0,#+1
   \   00000224   9C0000E0           MUL      R0,R12,R0
   \   00000228   000043E0           SUB      R0,R3,R0
   \   0000022C   00008DE5           STR      R0,[SP, #+0]
   \   00000230   0C00D1E5           LDRB     R0,[R1, #+12]
   \   00000234   ........           LDR      R1,??DataTable187  ;; 0x66666667
   \   00000238   7F0000E2           AND      R0,R0,#0x7F
   \   0000023C   9031C1E0           SMULL    R3,R1,R0,R1
   \   00000240   04008DE2           ADD      R0,SP,#+4
   \   00000244   4131B0E1           ASRS     R3,R1,#+2
   \   00000248   01308342           ADDMI    R3,R3,#+1
   \   0000024C   ............       ADRL     R1,`?<Constant "%s (%u.%usec)">`
   \              ....        
   \   00000254   ........           BL       sprintf
   1561          		GUI_DispStringHCenterAt(scratch, CAMERA_TEXT_CENTER, TD_CAMERA_LINE_Y + CAMERA_LOWER_LINE_OFFSET);
   \                     ??CameraSetupPaint_2:
   \   00000258   7D20A0E3           MOV      R2,#+125
   \   0000025C   8810A0E3           MOV      R1,#+136
   \   00000260   04008DE2           ADD      R0,SP,#+4
   \   00000264   ........           BL       GUI_DispStringHCenterAt
   1562          
   1563          		GUI_SetColor(GUI_RED);
   \   00000268   FF00A0E3           MOV      R0,#+255
   \   0000026C   ........           BL       GUI_SetColor
   1564          		GUI_DispStringHCenterAt(GetCameraName(), CAMERA_TEXT_CENTER, SU_CAMERA_LINE_Y + CAMERA_LOWER_LINE_OFFSET);
   \   00000270   0000A0E3           MOV      R0,#+0
   \   00000274   541084E2           ADD      R1,R4,#+84
   \   00000278   5421D4E5           LDRB     R2,[R4, #+340]
   \   0000027C   000000EA           B        ??CameraSetupPaint_7
   \                     ??CameraSetupPaint_8:
   \   00000280   010080E2           ADD      R0,R0,#+1
   \                     ??CameraSetupPaint_7:
   \   00000284   083091E4           LDR      R3,[R1], #+8
   \   00000288   000053E3           CMP      R3,#+0
   \   0000028C   54009405           LDREQ    R0,[R4, #+84]
   \   00000290   0500000A           BEQ      ??CameraSetupPaint_9
   \   00000294   0430D1E4           LDRB     R3,[R1], #+4
   \   00000298   030052E1           CMP      R2,R3
   \   0000029C   F7FFFF1A           BNE      ??CameraSetupPaint_8
   \   000002A0   0C10A0E3           MOV      R1,#+12
   \   000002A4   914020E0           MLA      R0,R1,R0,R4
   \   000002A8   540090E5           LDR      R0,[R0, #+84]
   1565          	}
   \                     ??CameraSetupPaint_9:
   \   000002AC   C320A0E3           MOV      R2,#+195
   \   000002B0   8810A0E3           MOV      R1,#+136
   \   000002B4   0F0000EA           B        ??CameraSetupPaint_10
   1566          	else
   1567          	{
   1568          		// draw 1 gray line for field seperator
   1569          		GUI_DrawLine(FIVE_BTN_BOX_LEFT + CM_LINE_GAP, TOP_BUT + (3 * GAP) - 3, FIVE_BTN_BOX_RIGHT - CM_LINE_GAP, TOP_BUT + (3 * GAP) - 3);
   \                     ??CameraSetupPaint_0:
   \   000002B8   AE30A0E3           MOV      R3,#+174
   \   000002BC   E120A0E3           MOV      R2,#+225
   \   000002C0   AE10A0E3           MOV      R1,#+174
   \   000002C4   2F00A0E3           MOV      R0,#+47
   \   000002C8   ........           BL       GUI_DrawLine
   1570          
   1571          		// Display not-supported text
   1572          		GUI_SetColor(GUI_WHITE);
   \   000002CC   FF04E0E3           MVN      R0,#-16777216
   \   000002D0   ........           BL       GUI_SetColor
   1573          		GUI_DispStringHCenterAt("TraqDash USB Camera", 135, TOP_BUT + 22);
   \   000002D4   4620A0E3           MOV      R2,#+70
   \   000002D8   8710A0E3           MOV      R1,#+135
   \   000002DC   ............       ADRL     R0,`?<Constant "TraqDash USB Camera">`
   \              ....        
   \   000002E4   ........           BL       GUI_DispStringHCenterAt
   1574          		GUI_DispStringHCenterAt("Not Supported", 135, TOP_BUT + GAP + 5);
   \   000002E8   6020A0E3           MOV      R2,#+96
   \   000002EC   8710A0E3           MOV      R1,#+135
   \   000002F0   ............       ADRL     R0,`?<Constant "Not Supported">`
   \              ....        
   \                     ??CameraSetupPaint_10:
   \   000002F8   ........           BL       GUI_DispStringHCenterAt
   1575          	}
   1576          
   1577          	// Display camera(s) active/not active
   1578          	GUI_SetColor(GUI_GREEN);
   \   000002FC   FF0CA0E3           MOV      R0,#+65280
   \   00000300   ........           BL       GUI_SetColor
   1579          	if (testCamera)
   \   00000304   040194E5           LDR      R0,[R4, #+260]
   \   00000308   E620A0E3           MOV      R2,#+230
   \   0000030C   000050E3           CMP      R0,#+0
   \   00000310   8810A0E3           MOV      R1,#+136
   1580          		GUI_DispStringHCenterAt("Camera(s) Active", CAMERA_TEXT_CENTER, CAMERA_STATUS_LINE);
   \   00000314   ............       ADRLNE   R0,`?<Constant "Camera(s) Active">`
   \              ....        
   1581          	else GUI_DispStringHCenterAt("Camera(s) Not Active", CAMERA_TEXT_CENTER, CAMERA_STATUS_LINE);
   \   0000031C   ............       ADRLEQ   R0,`?<Constant "Camera(s) Not Active">`
   \              ....        
   \   00000324   ........           BL       GUI_DispStringHCenterAt
   1582          
   1583          	GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   00000328   E520A0E3           MOV      R2,#+229
   \   0000032C   0010A0E3           MOV      R1,#+0
   \   00000330   ........           LDR      R0,??DataTable190
   \   00000334   ........           BL       GUI_DrawBitmap
   1584          }
   \   00000338   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   0000033C   3080BDE8           POP      {R4,R5,PC}       ;; return
   1585          

   \                                 In section .text, align 4, keep-with-next
   1586          int CustomDelay( void )
   1587          {
   \                     CustomDelay:
   \   00000000   ........           LDR      R0,??DataTable185_1
   \   00000004   5501D0E5           LDRB     R0,[R0, #+341]
   \   00000008   200050E3           CMP      R0,#+32
   \   0000000C   0500001A           BNE      ??CustomDelay_0
   1588          	if (newTDCameraSelection == TD_CAM_MOBIUS)
   1589          	{
   1590          		if (vehicleData.usbCameraDelay == MOBIUS_DELAY)
   \   00000010   ........           LDR      R0,??DataTable186
   \   00000014   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000018   A80050E3           CMP      R0,#+168
   \   0000001C   0C00001A           BNE      ??CustomDelay_1
   1591          			return false;
   \                     ??CustomDelay_2:
   \   00000020   0000A0E3           MOV      R0,#+0
   \   00000024   1EFF2FE1           BX       LR
   1592          	}
   1593          	else if (newTDCameraSelection == TD_CAM_PRIMEX)
   \                     ??CustomDelay_0:
   \   00000028   400050E3           CMP      R0,#+64
   \   0000002C   0400001A           BNE      ??CustomDelay_3
   1594          	{
   1595          		if (vehicleData.usbCameraDelay == PRIME_X_DELAY)
   \                     ??CustomDelay_4:
   \   00000030   ........           LDR      R0,??DataTable186
   \   00000034   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000038   C60050E3           CMP      R0,#+198
   \   0000003C   0400001A           BNE      ??CustomDelay_1
   \   00000040   F6FFFFEA           B        ??CustomDelay_2
   1596          			return false;
   1597          	}
   1598          	else if (newTDCameraSelection == TD_CAM_MINI)
   \                     ??CustomDelay_3:
   \   00000044   600050E3           CMP      R0,#+96
   \   00000048   F8FFFF0A           BEQ      ??CustomDelay_4
   1599          	{
   1600          		if (vehicleData.usbCameraDelay == MINI_DELAY)
   1601          			return false;
   1602          	}
   1603          	else if (newTDCameraSelection == TD_CAM_NONE)
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   0000000A           BEQ      ??CustomDelay_5
   1604          		return false;
   1605          
   1606          	return true;
   \                     ??CustomDelay_1:
   \   00000054   0100A0E3           MOV      R0,#+1
   \                     ??CustomDelay_5:
   \   00000058   1EFF2FE1           BX       LR               ;; return
   1607          }
   1608          

   \                                 In section .text, align 4, keep-with-next
   1609          char *GetFullCameraText(char *pBuffer)
   1610          {
   \                     GetFullCameraText:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1611          	strcpy(pBuffer, "Selected Camera(s)\nSU: ");
   \   00000008   1820A0E3           MOV      R2,#+24
   \   0000000C   ............       ADRL     R1,`?<Constant "Selected Camera(s)\\nSU: ">`
   \              ....        
   \   00000014   ........           BL       __aeabi_memcpy
   1612          	strcat(pBuffer, GetCameraName());
   \   00000018   ........           LDR      R1,??DataTable185_1
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   542081E2           ADD      R2,R1,#+84
   \   00000024   5431D1E5           LDRB     R3,[R1, #+340]
   \   00000028   000000EA           B        ??GetFullCameraText_0
   \                     ??GetFullCameraText_1:
   \   0000002C   010080E2           ADD      R0,R0,#+1
   \                     ??GetFullCameraText_0:
   \   00000030   08C092E4           LDR      R12,[R2], #+8
   \   00000034   00005CE3           CMP      R12,#+0
   \   00000038   54109105           LDREQ    R1,[R1, #+84]
   \   0000003C   0500000A           BEQ      ??GetFullCameraText_2
   \   00000040   04C0D2E4           LDRB     R12,[R2], #+4
   \   00000044   0C0053E1           CMP      R3,R12
   \   00000048   F7FFFF1A           BNE      ??GetFullCameraText_1
   \   0000004C   0C20A0E3           MOV      R2,#+12
   \   00000050   921020E0           MLA      R0,R2,R0,R1
   \   00000054   541090E5           LDR      R1,[R0, #+84]
   \                     ??GetFullCameraText_2:
   \   00000058   0400A0E1           MOV      R0,R4
   \   0000005C   ........           BL       strcat
   1613          	
   1614          	strcat(pBuffer, "\nUSB: ");
   \   00000060   ............       ADRL     R1,`?<Constant "\\nUSB: ">`
   \              ....        
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       strcat
   1615          	if (0x80 & vehicleData.usbCameraDelay)		// upper bit is enable bit
   \   00000070   ........           LDR      R0,??DataTable186
   \   00000074   0C00D0E5           LDRB     R0,[R0, #+12]
   \   00000078   800010E3           TST      R0,#0x80
   1616          		strcat(pBuffer, "USB Camera");
   \   0000007C   ............       ADRLNE   R1,`?<Constant "USB Camera">`
   \              ....        
   1617          	else
   1618          		strcat(pBuffer, "None");
   \   00000084   ............       ADRLEQ   R1,`?<Constant "None">`
   \              ....        
   \   0000008C   0400A0E1           MOV      R0,R4
   \   00000090   ........           BL       strcat
   1619          						
   1620          	strcat(pBuffer, "\n\n");
   \   00000094   ........           ADR      R1,??DataTable178_1  ;; 0x0A, 0x0A, 0x00, 0x00
   \   00000098   0400A0E1           MOV      R0,R4
   \   0000009C   ........           BL       strcat
   1621          	return pBuffer;
   \   000000A0   0400A0E1           MOV      R0,R4
   \   000000A4   1080BDE8           POP      {R4,PC}          ;; return
   1622          }
   1623          

   \                                 In section .text, align 4, keep-with-next
   1624          const char *GetCameraName(void)
   1625          {
   1626          	int i = 0;
   \                     GetCameraName:
   \   00000000   ........           LDR      R1,??DataTable185_1
   \   00000004   0000A0E3           MOV      R0,#+0
   \   00000008   542081E2           ADD      R2,R1,#+84
   \   0000000C   5431D1E5           LDRB     R3,[R1, #+340]
   \   00000010   000000EA           B        ??GetCameraName_0
   1627          	while (NewCameras[i].pName)
   1628          	{
   1629          		// See if this is the selected camera
   1630          		if (GetSUCam() == NewCameras[i].enumeration)
   1631          			return NewCameras[i].pName;
   1632          
   1633          		i++;
   \                     ??GetCameraName_1:
   \   00000014   010080E2           ADD      R0,R0,#+1
   \                     ??GetCameraName_0:
   \   00000018   08C092E4           LDR      R12,[R2], #+8
   \   0000001C   00005CE3           CMP      R12,#+0
   \   00000020   0600000A           BEQ      ??GetCameraName_2
   \   00000024   04C0D2E4           LDRB     R12,[R2], #+4
   \   00000028   0C0053E1           CMP      R3,R12
   \   0000002C   F8FFFF1A           BNE      ??GetCameraName_1
   \   00000030   0C20A0E3           MOV      R2,#+12
   \   00000034   921020E0           MLA      R0,R2,R0,R1
   \   00000038   540090E5           LDR      R0,[R0, #+84]
   \   0000003C   1EFF2FE1           BX       LR
   1634          	}
   1635          	return NewCameras[0].pName;
   \                     ??GetCameraName_2:
   \   00000040   540091E5           LDR      R0,[R1, #+84]
   \   00000044   1EFF2FE1           BX       LR               ;; return
   1636          }
   1637          

   \                                 In section .text, align 4, keep-with-next
   1638          const char *GetTraqdashCameraName(enum LENGTH length)
   1639          {
   1640          	if (newTDCameraSelection == TD_CAM_MOBIUS)
   \                     GetTraqdashCameraName:
   \   00000000   ........           LDR      R0,??DataTable185_1
   \   00000004   5511D0E5           LDRB     R1,[R0, #+341]
   \   00000008   200051E3           CMP      R1,#+32
   \   0000000C   0200001A           BNE      ??GetTraqdashCameraName_0
   1641          		return "Mobius";
   \   00000010   ............       ADRL     R0,`?<Constant "Mobius">`
   \              ....        
   \   00000018   1EFF2FE1           BX       LR
   1642          	else if (newTDCameraSelection == TD_CAM_PRIMEX)
   \                     ??GetTraqdashCameraName_0:
   \   0000001C   400051E3           CMP      R1,#+64
   \   00000020   0200001A           BNE      ??GetTraqdashCameraName_1
   1643          	{
   1644          		//if (length == LONG)		if we don't display "Delay" we can fit "Replay"
   1645          		//	return "Replay Prime-X";
   1646          		//else return "Prime-X";			// not everywhere can fit the whole name
   1647          		return "Replay Prime-X";
   \   00000024   ............       ADRL     R0,`?<Constant "Replay Prime-X">`
   \              ....        
   \   0000002C   1EFF2FE1           BX       LR
   1648          	}
   1649          	else if (newTDCameraSelection == TD_CAM_MINI)
   \                     ??GetTraqdashCameraName_1:
   \   00000030   600051E3           CMP      R1,#+96
   \   00000034   0200001A           BNE      ??GetTraqdashCameraName_2
   1650          		return "Replay Mini";
   \   00000038   ............       ADRL     R0,`?<Constant "Replay Mini">`
   \              ....        
   \   00000040   1EFF2FE1           BX       LR
   1651          
   1652          	else newTDCameraSelection = TD_CAM_NONE;		// Clear out ANY other SU camera selection
   \                     ??GetTraqdashCameraName_2:
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   5511C0E5           STRB     R1,[R0, #+341]
   1653          	return "None selected";
   \   0000004C   ............       ADRL     R0,`?<Constant "None selected">`
   \              ....        
   \   00000054   1EFF2FE1           BX       LR               ;; return
   1654          }
   1655          

   \                                 In section .text, align 4, keep-with-next
   1656          void ValidateCameraData(void)
   1657          {
   \                     ValidateCameraData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1658          //
   1659          // Initialize working variables used by the camera displays and controls
   1660          // Note that we pay power up directly into a camera setup screen
   1661          //
   1662          	originalTDCameraSelection = newTDCameraSelection = vehicleData.camera & TD_CAMERA_MASK;
   \   00000004   ........           LDR      R4,??DataTable186
   \   00000008   ........           LDR      R5,??DataTable185_1
   \   0000000C   7400D4E5           LDRB     R0,[R4, #+116]
   \   00000010   04D04DE2           SUB      SP,SP,#+4
   \   00000014   E00000E2           AND      R0,R0,#0xE0
   \   00000018   5501C5E5           STRB     R0,[R5, #+341]
   \   0000001C   5301C5E5           STRB     R0,[R5, #+339]
   1663          	originalSUCameraSelection = newSUCameraSelection = vehicleData.camera & SU_CAMERA_MASK;
   \   00000020   7400D4E5           LDRB     R0,[R4, #+116]
   \   00000024   1F0000E2           AND      R0,R0,#0x1F
   1664          
   1665          	// If upgrading old camera selections to new selections - warn user
   1666          	if ((newSUCameraSelection == CAMERA_CHASECAM) ||
   1667          		(newSUCameraSelection == CAMERA_SONY_CAMCORDER) ||
   1668          		(newSUCameraSelection == CAMERA_SONY_VCR_HARD) ||
   1669          		(newSUCameraSelection == CAMERA_SONY_VCR_SOFT))
   \   00000028   030050E3           CMP      R0,#+3
   \   0000002C   05005013           CMPNE    R0,#+5
   \   00000030   06005013           CMPNE    R0,#+6
   \   00000034   5401C5E5           STRB     R0,[R5, #+340]
   \   00000038   5201C5E5           STRB     R0,[R5, #+338]
   \   0000003C   07005013           CMPNE    R0,#+7
   \   00000040   0F00001A           BNE      ??ValidateCameraData_0
   1670          	{
   1671          		//
   1672          		// Glenn - I'm not sure what we're trying to do here!   What defaults do you want to select in these cases?
   1673          		//
   1674          		if (vehicleData.usbCameraDelay & 0x80)	// usb camera selected
   \   00000044   0C00D4E5           LDRB     R0,[R4, #+12]
   \   00000048   800010E3           TST      R0,#0x80
   1675          			vehicleData.camera = CAMERA_USB;
   \   0000004C   1100A013           MOVNE    R0,#+17
   1676          		else	// usb camera cleared
   1677          			vehicleData.camera = CAMERA_NONE;
   \   00000050   0000A003           MOVEQ    R0,#+0
   \   00000054   7400C4E5           STRB     R0,[R4, #+116]
   1678          
   1679          		VehicleSettingsPopUp(RESET_CAMERA_WARNING);
   \   00000058   0700A0E3           MOV      R0,#+7
   \   0000005C   ........           BL       VehicleSettingsPopUp
   1680          		// Popup destroyed the splash screen - redisplay it
   1681          		DisplaySplashScreen1();
   \   00000060   ........           BL       DisplaySplashScreen1
   1682          
   1683          		// Update variables on more time after altering!
   1684          		originalTDCameraSelection = newTDCameraSelection = vehicleData.camera & TD_CAMERA_MASK;
   \   00000064   7400D4E5           LDRB     R0,[R4, #+116]
   \   00000068   E00000E2           AND      R0,R0,#0xE0
   \   0000006C   5501C5E5           STRB     R0,[R5, #+341]
   \   00000070   5301C5E5           STRB     R0,[R5, #+339]
   1685          		originalSUCameraSelection = newSUCameraSelection = vehicleData.camera & SU_CAMERA_MASK;
   \   00000074   7400D4E5           LDRB     R0,[R4, #+116]
   \   00000078   1F0000E2           AND      R0,R0,#0x1F
   \   0000007C   5401C5E5           STRB     R0,[R5, #+340]
   \   00000080   5201C5E5           STRB     R0,[R5, #+338]
   1686          	}
   1687          
   1688          }
   \                     ??ValidateCameraData_0:
   \   00000084   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000088   3080BDE8           POP      {R4,R5,PC}       ;; return
   1689          
   1690          

   \                                 In section .text, align 4, keep-with-next
   1691          void CreateTraqdashCamScreen(WM_HWIN hParent)
   1692          {
   \                     CreateTraqdashCamScreen:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   1693          	BUTTON_Handle hBtn;
   1694          
   1695          	if (hParent)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??CreateTraqdashCamScreen_0
   1696          		WM_DeleteWindow(hParent);
   \   00000010   ........           BL       WM_DeleteWindow
   1697          
   1698          	SetScreenType(TRAQDASH_CAMERA_SCREEN);
   \                     ??CreateTraqdashCamScreen_0:
   \   00000014   2300A0E3           MOV      R0,#+35
   \   00000018   ........           BL       SetScreenType
   1699          
   1700          	if ((hTraqdashCam = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, TraqdashCamCallback, 0)) <= 0)
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   08008DE5           STR      R0,[SP, #+8]
   \   00000024   ........           LDR      R0,??DataTable191
   \   00000028   443FA0E3           MOV      R3,#+272
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   800D80E3           ORR      R0,R0,#0x2000
   \   00000038   00008DE5           STR      R0,[SP, #+0]
   \   0000003C   782FA0E3           MOV      R2,#+480
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       WM_CreateWindow
   \   0000004C   ........           LDR      R4,??DataTable185_1
   \   00000050   010050E3           CMP      R0,#+1
   \   00000054   000184E5           STR      R0,[R4, #+256]
   \   00000058   000000AA           BGE      ??CreateTraqdashCamScreen_1
   1701          		SystemError();
   \   0000005C   ........           BL       SystemError
   1702          
   1703          	BUTTON_SetDefaultFont(&GUI_Font20_ASCII);
   \                     ??CreateTraqdashCamScreen_1:
   \   00000060   ........           LDR      R0,??DataTable192
   \   00000064   ........           BL       BUTTON_SetDefaultFont
   1704          
   1705          	hBtnMobius = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (1 * GAP), MEDIUM_BUTTON_WIDTH, BUTTON_HEIGHT, hTraqdashCam, WM_CF_SHOW, 0, MOBIUS_BUTTON);
   \   00000068   1F00A0E3           MOV      R0,#+31
   \   0000006C   800E80E3           ORR      R0,R0,#0x800
   \   00000070   0C008DE5           STR      R0,[SP, #+12]
   \   00000074   0000A0E3           MOV      R0,#+0
   \   00000078   08008DE5           STR      R0,[SP, #+8]
   \   0000007C   0200A0E3           MOV      R0,#+2
   \   00000080   04008DE5           STR      R0,[SP, #+4]
   \   00000084   000194E5           LDR      R0,[R4, #+256]
   \   00000088   0250A0E3           MOV      R5,#+2
   \   0000008C   405F85E3           ORR      R5,R5,#0x100
   \   00000090   00008DE5           STR      R0,[SP, #+0]
   \   00000094   2730A0E3           MOV      R3,#+39
   \   00000098   6120A0E3           MOV      R2,#+97
   \   0000009C   5B10A0E3           MOV      R1,#+91
   \   000000A0   0500A0E1           MOV      R0,R5
   \   000000A4   ........           BL       BUTTON_CreateEx
   \   000000A8   E80084E5           STR      R0,[R4, #+232]
   1706          	BUTTON_SetText(hBtnMobius, "Mobius");
   \   000000AC   ............       ADRL     R1,`?<Constant "Mobius">`
   \              ....        
   \   000000B4   ........           BL       BUTTON_SetText
   1707          	BUTTON_SetTextColor(hBtnMobius, BUTTON_CI_DISABLED, GUI_WHITE);
   \   000000B8   FF64E0E3           MVN      R6,#-16777216
   \   000000BC   0620A0E1           MOV      R2,R6
   \   000000C0   0210A0E3           MOV      R1,#+2
   \   000000C4   E80094E5           LDR      R0,[R4, #+232]
   \   000000C8   ........           BL       BUTTON_SetTextColor
   1708          	BUTTON_SetTextColor(hBtnMobius, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   000000CC   0620A0E1           MOV      R2,R6
   \   000000D0   0010A0E3           MOV      R1,#+0
   \   000000D4   E80094E5           LDR      R0,[R4, #+232]
   \   000000D8   ........           BL       BUTTON_SetTextColor
   1709          	BUTTON_SetTextColor(hBtnMobius, BUTTON_CI_PRESSED, GUI_WHITE);
   \   000000DC   0620A0E1           MOV      R2,R6
   \   000000E0   0110A0E3           MOV      R1,#+1
   \   000000E4   E80094E5           LDR      R0,[R4, #+232]
   \   000000E8   ........           BL       BUTTON_SetTextColor
   1710          
   1711          	hBtnPrimeX = BUTTON_CreateEx(BUTTON_LEFT + 103, TOP_BUT + (1 * GAP), MEDIUM_BUTTON_WIDTH, BUTTON_HEIGHT, hTraqdashCam, WM_CF_SHOW, 0, REPLAY_PRIMEX_BUTTON);
   \   000000EC   820EA0E3           MOV      R0,#+2080
   \   000000F0   0C008DE5           STR      R0,[SP, #+12]
   \   000000F4   0000A0E3           MOV      R0,#+0
   \   000000F8   08008DE5           STR      R0,[SP, #+8]
   \   000000FC   0200A0E3           MOV      R0,#+2
   \   00000100   04008DE5           STR      R0,[SP, #+4]
   \   00000104   000194E5           LDR      R0,[R4, #+256]
   \   00000108   677085E2           ADD      R7,R5,#+103
   \   0000010C   00008DE5           STR      R0,[SP, #+0]
   \   00000110   2730A0E3           MOV      R3,#+39
   \   00000114   6120A0E3           MOV      R2,#+97
   \   00000118   5B10A0E3           MOV      R1,#+91
   \   0000011C   0700A0E1           MOV      R0,R7
   \   00000120   ........           BL       BUTTON_CreateEx
   \   00000124   EC0084E5           STR      R0,[R4, #+236]
   1712          	BUTTON_SetText(hBtnPrimeX, "Prime-X");
   \   00000128   ............       ADRL     R1,`?<Constant "Prime-X">`
   \              ....        
   \   00000130   ........           BL       BUTTON_SetText
   1713          	BUTTON_SetTextColor(hBtnPrimeX, BUTTON_CI_DISABLED, GUI_WHITE);
   \   00000134   0620A0E1           MOV      R2,R6
   \   00000138   0210A0E3           MOV      R1,#+2
   \   0000013C   EC0094E5           LDR      R0,[R4, #+236]
   \   00000140   ........           BL       BUTTON_SetTextColor
   1714          	BUTTON_SetTextColor(hBtnPrimeX, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000144   0620A0E1           MOV      R2,R6
   \   00000148   0010A0E3           MOV      R1,#+0
   \   0000014C   EC0094E5           LDR      R0,[R4, #+236]
   \   00000150   ........           BL       BUTTON_SetTextColor
   1715          	BUTTON_SetTextColor(hBtnPrimeX, BUTTON_CI_PRESSED, GUI_WHITE);
   \   00000154   0620A0E1           MOV      R2,R6
   \   00000158   0110A0E3           MOV      R1,#+1
   \   0000015C   EC0094E5           LDR      R0,[R4, #+236]
   \   00000160   ........           BL       BUTTON_SetTextColor
   1716          
   1717          	hBtnMini = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (2 * GAP), MEDIUM_BUTTON_WIDTH, BUTTON_HEIGHT, hTraqdashCam, WM_CF_SHOW, 0, REPLAY_MINI_BUTTON);
   \   00000164   2100A0E3           MOV      R0,#+33
   \   00000168   800E80E3           ORR      R0,R0,#0x800
   \   0000016C   0C008DE5           STR      R0,[SP, #+12]
   \   00000170   0000A0E3           MOV      R0,#+0
   \   00000174   08008DE5           STR      R0,[SP, #+8]
   \   00000178   0200A0E3           MOV      R0,#+2
   \   0000017C   04008DE5           STR      R0,[SP, #+4]
   \   00000180   000194E5           LDR      R0,[R4, #+256]
   \   00000184   2730A0E3           MOV      R3,#+39
   \   00000188   00008DE5           STR      R0,[SP, #+0]
   \   0000018C   6120A0E3           MOV      R2,#+97
   \   00000190   8610A0E3           MOV      R1,#+134
   \   00000194   0500A0E1           MOV      R0,R5
   \   00000198   ........           BL       BUTTON_CreateEx
   \   0000019C   F00084E5           STR      R0,[R4, #+240]
   1718          	BUTTON_SetText(hBtnMini, "Mini");
   \   000001A0   ............       ADRL     R1,`?<Constant "Mini">`
   \              ....        
   \   000001A8   ........           BL       BUTTON_SetText
   1719          	BUTTON_SetTextColor(hBtnMini, BUTTON_CI_DISABLED, GUI_WHITE);
   \   000001AC   0620A0E1           MOV      R2,R6
   \   000001B0   0210A0E3           MOV      R1,#+2
   \   000001B4   F00094E5           LDR      R0,[R4, #+240]
   \   000001B8   ........           BL       BUTTON_SetTextColor
   1720          	BUTTON_SetTextColor(hBtnMini, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   000001BC   0620A0E1           MOV      R2,R6
   \   000001C0   0010A0E3           MOV      R1,#+0
   \   000001C4   F00094E5           LDR      R0,[R4, #+240]
   \   000001C8   ........           BL       BUTTON_SetTextColor
   1721          	BUTTON_SetTextColor(hBtnMini, BUTTON_CI_PRESSED, GUI_WHITE);
   \   000001CC   0620A0E1           MOV      R2,R6
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   F00094E5           LDR      R0,[R4, #+240]
   \   000001D8   ........           BL       BUTTON_SetTextColor
   1722          
   1723          	hBtnNone = BUTTON_CreateEx(BUTTON_LEFT + 103, TOP_BUT + (2 * GAP), MEDIUM_BUTTON_WIDTH, BUTTON_HEIGHT, hTraqdashCam, WM_CF_SHOW, 0, NONE_BUTTON);
   \   000001DC   720E85E2           ADD      R0,R5,#+1824
   \   000001E0   0C008DE5           STR      R0,[SP, #+12]
   \   000001E4   0000A0E3           MOV      R0,#+0
   \   000001E8   08008DE5           STR      R0,[SP, #+8]
   \   000001EC   0200A0E3           MOV      R0,#+2
   \   000001F0   04008DE5           STR      R0,[SP, #+4]
   \   000001F4   000194E5           LDR      R0,[R4, #+256]
   \   000001F8   2730A0E3           MOV      R3,#+39
   \   000001FC   00008DE5           STR      R0,[SP, #+0]
   \   00000200   6120A0E3           MOV      R2,#+97
   \   00000204   8610A0E3           MOV      R1,#+134
   \   00000208   0700A0E1           MOV      R0,R7
   \   0000020C   ........           BL       BUTTON_CreateEx
   \   00000210   F40084E5           STR      R0,[R4, #+244]
   1724          	BUTTON_SetText(hBtnNone, "None");
   \   00000214   ............       ADRL     R1,`?<Constant "None">`
   \              ....        
   \   0000021C   ........           BL       BUTTON_SetText
   1725          	BUTTON_SetTextColor(hBtnNone, BUTTON_CI_DISABLED, GUI_WHITE);
   \   00000220   0620A0E1           MOV      R2,R6
   \   00000224   0210A0E3           MOV      R1,#+2
   \   00000228   F40094E5           LDR      R0,[R4, #+244]
   \   0000022C   ........           BL       BUTTON_SetTextColor
   1726          	BUTTON_SetTextColor(hBtnNone, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   00000230   0620A0E1           MOV      R2,R6
   \   00000234   0010A0E3           MOV      R1,#+0
   \   00000238   F40094E5           LDR      R0,[R4, #+244]
   \   0000023C   ........           BL       BUTTON_SetTextColor
   1727          	BUTTON_SetTextColor(hBtnNone, BUTTON_CI_PRESSED, GUI_WHITE);
   \   00000240   0620A0E1           MOV      R2,R6
   \   00000244   0110A0E3           MOV      R1,#+1
   \   00000248   F40094E5           LDR      R0,[R4, #+244]
   \   0000024C   ........           BL       BUTTON_SetTextColor
   1728          
   1729          	SetCameraButtonColors();		// Set the button colors based on the current selection
   \   00000250   ........           BL       SetCameraButtonColors
   1730          
   1731          	hBtn = BUTTON_CreateEx(BUTTON_LEFT, TOP_BUT + (4 * GAP), BUTTON_WIDTH, BUTTON_HEIGHT, hTraqdashCam, WM_CF_SHOW, 0, CUSTOM_DELAY_BUTTON);
   \   00000254   2300A0E3           MOV      R0,#+35
   \   00000258   800E80E3           ORR      R0,R0,#0x800
   \   0000025C   0C008DE5           STR      R0,[SP, #+12]
   \   00000260   0000A0E3           MOV      R0,#+0
   \   00000264   08008DE5           STR      R0,[SP, #+8]
   \   00000268   0200A0E3           MOV      R0,#+2
   \   0000026C   04008DE5           STR      R0,[SP, #+4]
   \   00000270   000194E5           LDR      R0,[R4, #+256]
   \   00000274   2730A0E3           MOV      R3,#+39
   \   00000278   00008DE5           STR      R0,[SP, #+0]
   \   0000027C   CA20A0E3           MOV      R2,#+202
   \   00000280   DC10A0E3           MOV      R1,#+220
   \   00000284   0500A0E1           MOV      R0,R5
   \   00000288   ........           BL       BUTTON_CreateEx
   \   0000028C   0050A0E1           MOV      R5,R0
   1732          	BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGrayButton);
   \   00000290   ........           LDR      R2,??DataTable194
   \   00000294   0010A0E3           MOV      R1,#+0
   \   00000298   ........           BL       BUTTON_SetBitmap
   1733          	BUTTON_SetText(hBtn, "Custom Sync Time");
   \   0000029C   ............       ADRL     R1,`?<Constant "Custom Sync Time">`
   \              ....        
   \   000002A4   0500A0E1           MOV      R0,R5
   \   000002A8   ........           BL       BUTTON_SetText
   1734          	BUTTON_SetTextColor(hBtn, BUTTON_CI_DISABLED, GUI_WHITE);
   \   000002AC   0620A0E1           MOV      R2,R6
   \   000002B0   0210A0E3           MOV      R1,#+2
   \   000002B4   0500A0E1           MOV      R0,R5
   \   000002B8   ........           BL       BUTTON_SetTextColor
   1735          	BUTTON_SetTextColor(hBtn, BUTTON_CI_UNPRESSED, GUI_WHITE);
   \   000002BC   0620A0E1           MOV      R2,R6
   \   000002C0   0010A0E3           MOV      R1,#+0
   \   000002C4   0500A0E1           MOV      R0,R5
   \   000002C8   ........           BL       BUTTON_SetTextColor
   1736          	BUTTON_SetTextColor(hBtn, BUTTON_CI_PRESSED, GUI_WHITE);
   \   000002CC   0620A0E1           MOV      R2,R6
   \   000002D0   0110A0E3           MOV      R1,#+1
   \   000002D4   0500A0E1           MOV      R0,R5
   \   000002D8   ........           BL       BUTTON_SetTextColor
   1737          
   1738          	hScreenTimer = WM_CreateTimer(hTraqdashCam, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   000002DC   0030A0E3           MOV      R3,#+0
   \   000002E0   7D20A0E3           MOV      R2,#+125
   \   000002E4   0010A0E3           MOV      R1,#+0
   \   000002E8   000194E5           LDR      R0,[R4, #+256]
   \   000002EC   ........           BL       WM_CreateTimer
   \   000002F0   ........           LDR      R1,??DataTable195
   1739          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   000002F4   14D08DE2           ADD      SP,SP,#+20
   \   000002F8   000081E5           STR      R0,[R1, #+0]
   \   000002FC   F040BDE8           POP      {R4-R7,LR}
   \   00000300   ........           B        ResetNewScreen   ;; tailcall
   1740          }
   1741          

   \                                 In section .text, align 4, keep-with-next
   1742          void SetCameraButtonColors(void)
   1743          {
   \                     SetCameraButtonColors:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1744          	BUTTON_SetBitmap(hBtnMobius, BUTTON_BI_UNPRESSED, (newTDCameraSelection == TD_CAM_MOBIUS) ? &bmMediumBlueButton : &bmMediumBlueButtonDark);
   \   00000004   ........           LDR      R4,??DataTable185_1
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000010   200050E3           CMP      R0,#+32
   \   00000014   ........           LDREQ    R2,??DataTable195_1
   \   00000018   ........           LDRNE    R2,??DataTable195_2
   \   0000001C   E80094E5           LDR      R0,[R4, #+232]
   \   00000020   ........           BL       BUTTON_SetBitmap
   1745          	BUTTON_SetBitmap(hBtnPrimeX, BUTTON_BI_UNPRESSED, (newTDCameraSelection == TD_CAM_PRIMEX) ? &bmMediumBlueButton : &bmMediumBlueButtonDark);
   \   00000024   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000028   0010A0E3           MOV      R1,#+0
   \   0000002C   400050E3           CMP      R0,#+64
   \   00000030   ........           LDREQ    R2,??DataTable195_1
   \   00000034   ........           LDRNE    R2,??DataTable195_2
   \   00000038   EC0094E5           LDR      R0,[R4, #+236]
   \   0000003C   ........           BL       BUTTON_SetBitmap
   1746          	BUTTON_SetBitmap(hBtnMini,   BUTTON_BI_UNPRESSED, (newTDCameraSelection == TD_CAM_MINI)   ? &bmMediumBlueButton : &bmMediumBlueButtonDark);
   \   00000040   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000044   0010A0E3           MOV      R1,#+0
   \   00000048   600050E3           CMP      R0,#+96
   \   0000004C   ........           LDREQ    R2,??DataTable195_1
   \   00000050   ........           LDRNE    R2,??DataTable195_2
   \   00000054   F00094E5           LDR      R0,[R4, #+240]
   \   00000058   ........           BL       BUTTON_SetBitmap
   1747          	BUTTON_SetBitmap(hBtnNone,   BUTTON_BI_UNPRESSED, (newTDCameraSelection == TD_CAM_NONE)   ? &bmMediumBlueButton : &bmMediumBlueButtonDark);
   \   0000005C   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000060   0010A0E3           MOV      R1,#+0
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   ........           LDREQ    R2,??DataTable195_1
   \   0000006C   ........           LDRNE    R2,??DataTable195_2
   \   00000070   F40094E5           LDR      R0,[R4, #+244]
   \   00000074   ........           BL       BUTTON_SetBitmap
   1748          }
   \   00000078   1080BDE8           POP      {R4,PC}          ;; return
   1749          

   \                                 In section .text, align 4, keep-with-next
   1750          GUI_HWIN GetTraqdashCamWindowHandle(void)
   1751          {
   1752          	return hTraqdashCam;
   \                     GetTraqdashCamWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable185_1
   \   00000004   000190E5           LDR      R0,[R0, #+256]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   1753          }
   1754          
   1755          

   \                                 In section .text, align 4, keep-with-next
   1756          static void TraqdashCamCallback(WM_MESSAGE * pMsg)
   1757          {
   \                     TraqdashCamCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   1758          	int NCode, Id;
   1759          
   1760          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0F0050E2           SUBS     R0,R0,#+15
   \   00000010   0F00000A           BEQ      ??TraqdashCamCallback_1
   \   00000014   170050E2           SUBS     R0,R0,#+23
   \   00000018   0F00000A           BEQ      ??TraqdashCamCallback_2
   \   0000001C   ED0050E2           SUBS     R0,R0,#+237
   \   00000020   3B00001A           BNE      ??TraqdashCamCallback_3
   1761          	{
   1762          		case WM_TIMER:
   1763          			if (pMsg->Data.v == hScreenTimer)
   \   00000024   ........           LDR      R0,??DataTable195
   \   00000028   0C1094E5           LDR      R1,[R4, #+12]
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000051E1           CMP      R1,R0
   \   00000034   3800001A           BNE      ??TraqdashCamCallback_4
   1764          			{
   1765          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000038   7D10A0E3           MOV      R1,#+125
   \   0000003C   ........           BL       WM_RestartTimer
   1766          				WM_InvalidateRect(hTraqdashCam, &BannerRect);
   \   00000040   ........           LDR      R0,??DataTable185_1
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   ........           LDR      R1,??DataTable195_3
   \   0000004C   000190E5           LDR      R0,[R0, #+256]
   \   00000050   ........           B        WM_InvalidateRect  ;; tailcall
   1767          			}
   1768          			break;
   1769          
   1770          	case WM_PAINT:
   1771          		TraqdashCamPaint();
   \                     ??TraqdashCamCallback_1:
   \   00000054   1040BDE8           POP      {R4,LR}
   \   00000058   ........           B        TraqdashCamPaint  ;; tailcall
   1772          		break;
   1773          
   1774          	case WM_NOTIFY_PARENT:
   1775          		Id    = WM_GetId(pMsg->hWinSrc);      // Id of widget
   \                     ??TraqdashCamCallback_2:
   \   0000005C   080094E5           LDR      R0,[R4, #+8]
   \   00000060   ........           BL       WM_GetId
   1776          		NCode = pMsg->Data.v;                 // Notification code
   1777          		switch(NCode)
   \   00000064   0C1094E5           LDR      R1,[R4, #+12]
   \   00000068   010051E3           CMP      R1,#+1
   \   0000006C   2A00001A           BNE      ??TraqdashCamCallback_4
   1778          		{
   1779          		case WM_NOTIFICATION_CLICKED:
   1780          			switch (Id)
   \   00000070   1F0040E2           SUB      R0,R0,#+31
   \   00000074   800E40E2           SUB      R0,R0,#+2048
   \   00000078   040050E3           CMP      R0,#+4
   \   0000007C   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??TraqdashCamCallback_0:
   \   00000080   2500008A           BHI      ??TraqdashCamCallback_4
   \   00000084   030000EA           B        ??TraqdashCamCallback_5
   \   00000088   090000EA           B        ??TraqdashCamCallback_6
   \   0000008C   0E0000EA           B        ??TraqdashCamCallback_7
   \   00000090   170000EA           B        ??TraqdashCamCallback_8
   \   00000094   1A0000EA           B        ??TraqdashCamCallback_9
   1781          			{
   1782          				case MOBIUS_BUTTON:
   1783          					newTDCameraSelection = TD_CAM_MOBIUS;
   \                     ??TraqdashCamCallback_5:
   \   00000098   ........           LDR      R4,??DataTable185_1
   \   0000009C   2000A0E3           MOV      R0,#+32
   \   000000A0   5501C4E5           STRB     R0,[R4, #+341]
   1784          					vehicleData.usbCameraDelay = MOBIUS_DELAY;
   \   000000A4   ........           LDR      R0,??DataTable186
   \   000000A8   A810A0E3           MOV      R1,#+168
   \                     ??TraqdashCamCallback_10:
   \   000000AC   0C10C0E5           STRB     R1,[R0, #+12]
   1785          					SetCameraButtonColors();
   \   000000B0   0B0000EA           B        ??TraqdashCamCallback_11
   1786          					WM_InvalidateWindow(hTraqdashCam);
   1787          					break;
   1788          
   1789          				case REPLAY_PRIMEX_BUTTON:
   1790          					newTDCameraSelection = TD_CAM_PRIMEX;
   \                     ??TraqdashCamCallback_6:
   \   000000B4   ........           LDR      R4,??DataTable185_1
   \   000000B8   4000A0E3           MOV      R0,#+64
   \   000000BC   5501C4E5           STRB     R0,[R4, #+341]
   1791          					vehicleData.usbCameraDelay = PRIME_X_DELAY;
   \   000000C0   ........           LDR      R0,??DataTable186
   \   000000C4   C610A0E3           MOV      R1,#+198
   \   000000C8   F7FFFFEA           B        ??TraqdashCamCallback_10
   1792          					SetCameraButtonColors();
   1793          					WM_InvalidateWindow(hTraqdashCam);
   1794          					break;
   1795          
   1796          				case REPLAY_MINI_BUTTON:
   1797          					newTDCameraSelection = TD_CAM_MINI;
   \                     ??TraqdashCamCallback_7:
   \   000000CC   ........           LDR      R4,??DataTable185_1
   \   000000D0   6000A0E3           MOV      R0,#+96
   \   000000D4   5501C4E5           STRB     R0,[R4, #+341]
   1798          					vehicleData.usbCameraDelay = MINI_DELAY;
   \   000000D8   ........           LDR      R0,??DataTable186
   \   000000DC   C610A0E3           MOV      R1,#+198
   \   000000E0   0C10C0E5           STRB     R1,[R0, #+12]
   1799          					SetCameraButtonColors();
   \                     ??TraqdashCamCallback_11:
   \   000000E4   ........           BL       SetCameraButtonColors
   1800          					WM_InvalidateWindow(hTraqdashCam);
   \   000000E8   000194E5           LDR      R0,[R4, #+256]
   \   000000EC   1040BDE8           POP      {R4,LR}
   \   000000F0   ........           B        WM_InvalidateWindow  ;; tailcall
   1801          					break;
   1802          
   1803          				case NONE_BUTTON:
   1804          					newTDCameraSelection = TD_CAM_NONE;
   \                     ??TraqdashCamCallback_8:
   \   000000F4   ........           LDR      R4,??DataTable185_1
   \   000000F8   0000A0E3           MOV      R0,#+0
   \   000000FC   5501C4E5           STRB     R0,[R4, #+341]
   1805          					SetCameraButtonColors();
   \   00000100   F7FFFFEA           B        ??TraqdashCamCallback_11
   1806          					WM_InvalidateWindow(hTraqdashCam);
   1807          					break;
   1808          
   1809          				case CUSTOM_DELAY_BUTTON:
   1810          					CreateCameraDelay(hTraqdashCam);
   \                     ??TraqdashCamCallback_9:
   \   00000104   ........           LDR      R0,??DataTable185_1
   \   00000108   1040BDE8           POP      {R4,LR}
   \   0000010C   000190E5           LDR      R0,[R0, #+256]
   \   00000110   ........           B        CreateCameraDelay  ;; tailcall
   1811          					break;
   1812          			}
   1813          			break;
   1814          	  };
   1815          	  break;
   1816          
   1817          	default:
   1818          		  WM_DefaultProc(pMsg);
   \                     ??TraqdashCamCallback_3:
   \   00000114   0400A0E1           MOV      R0,R4
   \   00000118   ........           BL       WM_DefaultProc
   1819          	};
   1820          }
   \                     ??TraqdashCamCallback_4:
   \   0000011C   1080BDE8           POP      {R4,PC}          ;; return
   1821          
   1822          

   \                                 In section .text, align 4, keep-with-next
   1823          void TraqdashCamPaint(void)
   1824          {
   \                     TraqdashCamPaint:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   24D04DE2           SUB      SP,SP,#+36
   1825          	char scratch[30];
   1826          
   1827          	GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0010A0E3           MOV      R1,#+0
   \   00000010   ........           LDR      R0,??DataTable184_2
   \   00000014   ........           BL       GUI_DrawBitmap
   1828          	GUI_DrawBitmap(&bmTraqdashCamBanner, 60, 0);
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   3C10A0E3           MOV      R1,#+60
   \   00000020   ........           LDR      R0,??DataTable197
   \   00000024   ........           BL       GUI_DrawBitmap
   1829          
   1830          	GUI_SetFont(&GUI_Font20_ASCII);
   \   00000028   ........           LDR      R0,??DataTable192
   \   0000002C   ........           BL       GUI_SetFont
   1831          
   1832          	// Draw left side square for data
   1833          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   00000030   0140A0E3           MOV      R4,#+1
   \   00000034   0500A0E3           MOV      R0,#+5
   \   00000038   404F84E3           ORR      R4,R4,#0x100
   \   0000003C   00008DE5           STR      R0,[SP, #+0]
   \   00000040   0430A0E1           MOV      R3,R4
   \   00000044   F520A0E3           MOV      R2,#+245
   \   00000048   3010A0E3           MOV      R1,#+48
   \   0000004C   1B00A0E3           MOV      R0,#+27
   \   00000050   ........           BL       GUI_DrawRoundedRect
   1834          	GUI_SetColor(GUI_GRAY);
   \   00000054   ........           LDR      R0,??DataTable184_4  ;; 0x808080
   \   00000058   ........           BL       GUI_SetColor
   1835          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT, FIVE_BTN_BOX_TOP, FIVE_BTN_BOX_RIGHT, FIVE_BTN_BOX_BOTTOM, 5);
   \   0000005C   0500A0E3           MOV      R0,#+5
   \   00000060   00008DE5           STR      R0,[SP, #+0]
   \   00000064   0430A0E1           MOV      R3,R4
   \   00000068   F520A0E3           MOV      R2,#+245
   \   0000006C   3010A0E3           MOV      R1,#+48
   \   00000070   1B00A0E3           MOV      R0,#+27
   \   00000074   ........           BL       GUI_FillRoundedRect
   1836          
   1837          	GUI_DrawRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   00000078   0500A0E3           MOV      R0,#+5
   \   0000007C   00008DE5           STR      R0,[SP, #+0]
   \   00000080   FF30A0E3           MOV      R3,#+255
   \   00000084   F320A0E3           MOV      R2,#+243
   \   00000088   3210A0E3           MOV      R1,#+50
   \   0000008C   1D00A0E3           MOV      R0,#+29
   \   00000090   ........           BL       GUI_DrawRoundedRect
   1838          	GUI_SetColor(GUI_BLACK);
   \   00000094   0000A0E3           MOV      R0,#+0
   \   00000098   ........           BL       GUI_SetColor
   1839          	GUI_FillRoundedRect(FIVE_BTN_BOX_LEFT+2, FIVE_BTN_BOX_TOP+2, FIVE_BTN_BOX_RIGHT-2, FIVE_BTN_BOX_BOTTOM - 2, 5);
   \   0000009C   0500A0E3           MOV      R0,#+5
   \   000000A0   00008DE5           STR      R0,[SP, #+0]
   \   000000A4   FF30A0E3           MOV      R3,#+255
   \   000000A8   F320A0E3           MOV      R2,#+243
   \   000000AC   3210A0E3           MOV      R1,#+50
   \   000000B0   1D00A0E3           MOV      R0,#+29
   \   000000B4   ........           BL       GUI_FillRoundedRect
   1840          
   1841          	// Draw static text
   1842          	GUI_SetTextMode(GUI_TM_TRANS);
   \   000000B8   0200A0E3           MOV      R0,#+2
   \   000000BC   ........           BL       GUI_SetTextMode
   1843          	GUI_SetColor(GUI_LIGHTGRAY);
   \   000000C0   ........           LDR      R4,??DataTable197_1  ;; 0xd3d3d3
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   ........           BL       GUI_SetColor
   1844          	GUI_DispStringHCenterAt("Select Camera", BUTTON_LEFT + (BUTTON_WIDTH / 2), TOP_BUT + (0 * GAP) + CM_TEXT_OFFSET);
   \   000000CC   6710A0E3           MOV      R1,#+103
   \   000000D0   3C20A0E3           MOV      R2,#+60
   \   000000D4   401F81E3           ORR      R1,R1,#0x100
   \   000000D8   ............       ADRL     R0,`?<Constant "Select Camera">`
   \              ....        
   \   000000E0   ........           BL       GUI_DispStringHCenterAt
   1845          	GUI_DispStringHCenterAt("Current Settings", CAMERA_TEXT_CENTER, CAMERA_LINE_1_Y);
   \   000000E4   3C20A0E3           MOV      R2,#+60
   \   000000E8   8810A0E3           MOV      R1,#+136
   \   000000EC   ............       ADRL     R0,`?<Constant "Current Settings">`
   \              ....        
   \   000000F4   ........           BL       GUI_DispStringHCenterAt
   1846          	GUI_SetColor(GUI_WHITE);
   \   000000F8   FF54E0E3           MVN      R5,#-16777216
   \   000000FC   0500A0E1           MOV      R0,R5
   \   00000100   ........           BL       GUI_SetColor
   1847          	GUI_DispStringHCenterAt("TraqDash USB Port", CAMERA_TEXT_CENTER, TD_CAMERA_LINE_Y - CAMERA_UPPER_LINE_OFFSET);
   \   00000104   5F20A0E3           MOV      R2,#+95
   \   00000108   8810A0E3           MOV      R1,#+136
   \   0000010C   ............       ADRL     R0,`?<Constant "TraqDash USB Port">`
   \              ....        
   \   00000114   ........           BL       GUI_DispStringHCenterAt
   1848          
   1849          	// draw gray lines for field seperator
   1850          	GUI_SetPenSize(2);
   \   00000118   0200A0E3           MOV      R0,#+2
   \   0000011C   ........           BL       GUI_SetPenSize
   1851          	GUI_SetColor(GUI_LIGHTGRAY);
   \   00000120   0400A0E1           MOV      R0,R4
   \   00000124   ........           BL       GUI_SetColor
   1852          	GUI_DrawLine(CAMERA_TEXT_CENTER - HALF_CAMERA_LINE, TD_CAMERA_LINE_Y, CAMERA_TEXT_CENTER + HALF_CAMERA_LINE, TD_CAMERA_LINE_Y);
   \   00000128   7830A0E3           MOV      R3,#+120
   \   0000012C   E120A0E3           MOV      R2,#+225
   \   00000130   7810A0E3           MOV      R1,#+120
   \   00000134   2F00A0E3           MOV      R0,#+47
   \   00000138   ........           BL       GUI_DrawLine
   1853          
   1854          	GUI_SetColor(GUI_LIGHTBLUE);
   \   0000013C   ........           LDR      R0,??DataTable185_2  ;; 0xff8080
   \   00000140   ........           BL       GUI_SetColor
   1855          	sprintf(scratch, "%s", GetTraqdashCameraName(LONG));
   \   00000144   ........           LDR      R4,??DataTable185_1
   \   00000148   5501D4E5           LDRB     R0,[R4, #+341]
   \   0000014C   200050E3           CMP      R0,#+32
   \   00000150   0E00000A           BEQ      ??TraqdashCamPaint_0
   \   00000154   400050E3           CMP      R0,#+64
   \   00000158   0900000A           BEQ      ??TraqdashCamPaint_1
   \   0000015C   600050E3           CMP      R0,#+96
   \   00000160   0400000A           BEQ      ??TraqdashCamPaint_2
   \   00000164   0000A0E3           MOV      R0,#+0
   \   00000168   5501C4E5           STRB     R0,[R4, #+341]
   \   0000016C   ............       ADRL     R2,`?<Constant "None selected">`
   \              ....        
   \   00000174   070000EA           B        ??TraqdashCamPaint_3
   \                     ??TraqdashCamPaint_2:
   \   00000178   ............       ADRL     R2,`?<Constant "Replay Mini">`
   \              ....        
   \   00000180   040000EA           B        ??TraqdashCamPaint_3
   \                     ??TraqdashCamPaint_1:
   \   00000184   ............       ADRL     R2,`?<Constant "Replay Prime-X">`
   \              ....        
   \   0000018C   010000EA           B        ??TraqdashCamPaint_3
   \                     ??TraqdashCamPaint_0:
   \   00000190   ............       ADRL     R2,`?<Constant "Mobius">`
   \              ....        
   \                     ??TraqdashCamPaint_3:
   \   00000198   ........           ADR      R1,??DataTable185  ;; 0x25, 0x73, 0x00, 0x00
   \   0000019C   04008DE2           ADD      R0,SP,#+4
   \   000001A0   ........           BL       sprintf
   1856          	GUI_DispStringHCenterAt(scratch, CAMERA_TEXT_CENTER, TD_CAMERA_LINE_Y + CAMERA_LOWER_LINE_OFFSET);
   \   000001A4   7D20A0E3           MOV      R2,#+125
   \   000001A8   8810A0E3           MOV      R1,#+136
   \   000001AC   04008DE2           ADD      R0,SP,#+4
   \   000001B0   ........           BL       GUI_DispStringHCenterAt
   1857          
   1858          	if (newTDCameraSelection == TD_CAM_NONE)
   \   000001B4   5501D4E5           LDRB     R0,[R4, #+341]
   \   000001B8   000050E3           CMP      R0,#+0
   \   000001BC   0600001A           BNE      ??TraqdashCamPaint_4
   1859          	{
   1860          		GUI_SetColor(GUI_WHITE);
   \   000001C0   0500A0E1           MOV      R0,R5
   \   000001C4   ........           BL       GUI_SetColor
   1861          		GUI_DispStringHCenterAt("No Camera Enabled", CAMERA_TEXT_CENTER, 225);
   \   000001C8   E120A0E3           MOV      R2,#+225
   \   000001CC   8810A0E3           MOV      R1,#+136
   \   000001D0   ............       ADRL     R0,`?<Constant "No Camera Enabled">`
   \              ....        
   \   000001D8   2D0000EA           B        ??TraqdashCamPaint_5
   1862          	}
   1863          	else
   1864          	{
   1865          		if (CustomDelay())
   \                     ??TraqdashCamPaint_4:
   \   000001DC   200050E3           CMP      R0,#+32
   \   000001E0   0700000A           BEQ      ??TraqdashCamPaint_6
   \   000001E4   400050E3           CMP      R0,#+64
   \   000001E8   60005013           CMPNE    R0,#+96
   \   000001EC   0800001A           BNE      ??TraqdashCamPaint_7
   \   000001F0   ........           LDR      R0,??DataTable186
   \   000001F4   0C00D0E5           LDRB     R0,[R0, #+12]
   \   000001F8   C60050E3           CMP      R0,#+198
   \   000001FC   0400001A           BNE      ??TraqdashCamPaint_7
   \   00000200   050000EA           B        ??TraqdashCamPaint_8
   \                     ??TraqdashCamPaint_6:
   \   00000204   ........           LDR      R0,??DataTable186
   \   00000208   0C00D0E5           LDRB     R0,[R0, #+12]
   \   0000020C   A80050E3           CMP      R0,#+168
   \   00000210   0100000A           BEQ      ??TraqdashCamPaint_8
   1866          			GUI_SetColor(GUI_WHITE);
   \                     ??TraqdashCamPaint_7:
   \   00000214   0500A0E1           MOV      R0,R5
   \   00000218   ........           BL       GUI_SetColor
   1867          		sprintf(scratch, "%u.%usec", (vehicleData.usbCameraDelay & 0x7F) / 10, (vehicleData.usbCameraDelay & 0x7F) % 10);
   \                     ??TraqdashCamPaint_8:
   \   0000021C   ........           LDR      R5,??DataTable186
   \   00000220   ........           LDR      R1,??DataTable187  ;; 0x66666667
   \   00000224   0C00D5E5           LDRB     R0,[R5, #+12]
   \   00000228   7F0000E2           AND      R0,R0,#0x7F
   \   0000022C   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000230   4121B0E1           ASRS     R2,R1,#+2
   \   00000234   01208242           ADDMI    R2,R2,#+1
   \   00000238   0A10A0E3           MOV      R1,#+10
   \   0000023C   910203E0           MUL      R3,R1,R2
   \   00000240   ............       ADRL     R1,`?<Constant "%u.%usec">`
   \              ....        
   \   00000248   033040E0           SUB      R3,R0,R3
   \   0000024C   04008DE2           ADD      R0,SP,#+4
   \   00000250   ........           BL       sprintf
   1868          		GUI_DispStringHCenterAt(scratch, CAMERA_TEXT_CENTER, 200);
   \   00000254   C820A0E3           MOV      R2,#+200
   \   00000258   8810A0E3           MOV      R1,#+136
   \   0000025C   04008DE2           ADD      R0,SP,#+4
   \   00000260   ........           BL       GUI_DispStringHCenterAt
   1869          
   1870          		GUI_DispStringHCenterAt(CustomDelay() ? "Custom Sync Time" : "Default Sync Time", CAMERA_TEXT_CENTER, 225);
   \   00000264   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000268   200050E3           CMP      R0,#+32
   \   0000026C   1400000A           BEQ      ??TraqdashCamPaint_9
   \   00000270   400050E3           CMP      R0,#+64
   \   00000274   60005013           CMPNE    R0,#+96
   \   00000278   0D00000A           BEQ      ??TraqdashCamPaint_10
   \   0000027C   000050E3           CMP      R0,#+0
   \   00000280   1200001A           BNE      ??TraqdashCamPaint_11
   \                     ??TraqdashCamPaint_12:
   \   00000284   ............       ADRL     R0,`?<Constant "Default Sync Time">`
   \              ....        
   \                     ??TraqdashCamPaint_13:
   \   0000028C   E120A0E3           MOV      R2,#+225
   \   00000290   8810A0E3           MOV      R1,#+136
   \                     ??TraqdashCamPaint_5:
   \   00000294   ........           BL       GUI_DispStringHCenterAt
   1871          	}
   1872          
   1873          	DrawSignalStrength();
   \   00000298   ........           BL       DrawSignalStrength
   1874          	GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   0000029C   E520A0E3           MOV      R2,#+229
   \   000002A0   0010A0E3           MOV      R1,#+0
   \   000002A4   ........           LDR      R0,??DataTable190
   \   000002A8   ........           BL       GUI_DrawBitmap
   1875          }
   \   000002AC   24D08DE2           ADD      SP,SP,#+36       ;; stack cleaning
   \   000002B0   3080BDE8           POP      {R4,R5,PC}       ;; return
   \                     ??TraqdashCamPaint_10:
   \   000002B4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002B8   C60050E3           CMP      R0,#+198
   \   000002BC   0300001A           BNE      ??TraqdashCamPaint_11
   \   000002C0   EFFFFFEA           B        ??TraqdashCamPaint_12
   \                     ??TraqdashCamPaint_9:
   \   000002C4   0C00D5E5           LDRB     R0,[R5, #+12]
   \   000002C8   A80050E3           CMP      R0,#+168
   \   000002CC   ECFFFF0A           BEQ      ??TraqdashCamPaint_12
   \                     ??TraqdashCamPaint_11:
   \   000002D0   ............       ADRL     R0,`?<Constant "Custom Sync Time">`
   \              ....        
   \   000002D8   EBFFFFEA           B        ??TraqdashCamPaint_13
   1876          
   1877          
   1878          static GUI_CONST_STORAGE GUI_BITMAP *GetNavigationArrow(int screen)
   1879          {
   1880          	return &bmleftarrow;
   1881          }
   1882          

   \                                 In section .text, align 4, keep-with-next
   1883          void VehicleSettingsIgnoreNextKeyRelease(void)
   1884          {
   1885          	clickedOnVSScreen = false;
   \                     VehicleSettingsIgnoreNextKeyRelease:
   \   00000000   ........           LDR      R0,??DataTable203
   \   00000004   0010A0E3           MOV      R1,#+0
   \   00000008   101180E5           STR      R1,[R0, #+272]
   1886          }
   \   0000000C   1EFF2FE1           BX       LR               ;; return
   1887          

   \                                 In section .text, align 4, keep-with-next
   1888          int ValidateVehicleData(void)
   1889          {
   \                     ValidateVehicleData:
   \   00000000   10402DE9           PUSH     {R4,LR}
   1890          	if ((vehicleData.tach.greenStart > vehicleData.tach.upperYellowStart) ||
   1891          		(vehicleData.tach.upperYellowStart > vehicleData.tach.upperRedStart) ||
   1892          		(vehicleData.tach.upperRedStart > vehicleData.tach.scaleEnd))
   \   00000004   ........           LDR      R4,??DataTable186
   \   00000008   200094E5           LDR      R0,[R4, #+32]
   \   0000000C   181094E5           LDR      R1,[R4, #+24]
   \   00000010   010050E1           CMP      R0,R1
   \   00000014   241094A5           LDRGE    R1,[R4, #+36]
   \   00000018   000051A1           CMPGE    R1,R0
   \   0000001C   140094A5           LDRGE    R0,[R4, #+20]
   \   00000020   010050A1           CMPGE    R0,R1
   \   00000024   060000AA           BGE      ??ValidateVehicleData_0
   1893          	{
   1894          		if (VehicleSettingsPopUp(INVALID_TACH_SETTINGS) == GUI_ID_OK)
   \   00000028   0100A0E3           MOV      R0,#+1
   \   0000002C   ........           BL       VehicleSettingsPopUp
   \   00000030   010050E3           CMP      R0,#+1
   \   00000034   0100001A           BNE      ??ValidateVehicleData_1
   1895          			return false;
   \                     ??ValidateVehicleData_2:
   \   00000038   0000A0E3           MOV      R0,#+0
   \   0000003C   1080BDE8           POP      {R4,PC}
   1896          		else AutoFixTach();
   \                     ??ValidateVehicleData_1:
   \   00000040   ........           BL       AutoFixTach
   1897          	}
   1898          
   1899          	// If the diffRatio is NOT zero (verified on an earlier screen) then gearing is enabled so
   1900          	// we need to check the ratios.  Otherwise gearing is disabled so we don't need to check.
   1901          	if (vehicleData.diffRatio != 0.0)
   \                     ??ValidateVehicleData_0:
   \   00000044   500094E5           LDR      R0,[R4, #+80]
   \   00000048   0010A0E3           MOV      R1,#+0
   \   0000004C   ........           BL       __aeabi_cfcmpeq
   \   00000050   4600000A           BEQ      ??ValidateVehicleData_3
   1902          		if	((vehicleData.gearRatios[0] == 0.0) ||
   1903          			(vehicleData.gearRatios[1] != 0.0 && (vehicleData.gearRatios[0] < vehicleData.gearRatios[1])) ||
   1904          			(vehicleData.gearRatios[2] != 0.0 && (vehicleData.gearRatios[1] < vehicleData.gearRatios[2])) ||
   1905          			(vehicleData.gearRatios[3] != 0.0 && (vehicleData.gearRatios[2] < vehicleData.gearRatios[3])) ||
   1906          			(vehicleData.gearRatios[4] != 0.0 && (vehicleData.gearRatios[3] < vehicleData.gearRatios[4])) ||
   1907          			(vehicleData.gearRatios[5] != 0.0 && (vehicleData.gearRatios[4] < vehicleData.gearRatios[5])) ||
   1908          			(vehicleData.gearRatios[6] != 0.0 && (vehicleData.gearRatios[5] < vehicleData.gearRatios[6])) ||
   1909          			(vehicleData.gearRatios[7] != 0.0 && (vehicleData.gearRatios[6] < vehicleData.gearRatios[7])))
   \   00000054   302094E5           LDR      R2,[R4, #+48]
   \   00000058   0200A0E1           MOV      R0,R2
   \   0000005C   ........           BL       __aeabi_cfcmpeq
   \   00000060   3D00000A           BEQ      ??ValidateVehicleData_4
   \   00000064   343094E5           LDR      R3,[R4, #+52]
   \   00000068   0300A0E1           MOV      R0,R3
   \   0000006C   ........           BL       __aeabi_cfcmpeq
   \   00000070   0300000A           BEQ      ??ValidateVehicleData_5
   \   00000074   0200A0E1           MOV      R0,R2
   \   00000078   0310A0E1           MOV      R1,R3
   \   0000007C   ........           BL       __aeabi_cfcmple
   \   00000080   3500003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_5:
   \   00000084   382094E5           LDR      R2,[R4, #+56]
   \   00000088   0010A0E3           MOV      R1,#+0
   \   0000008C   0200A0E1           MOV      R0,R2
   \   00000090   ........           BL       __aeabi_cfcmpeq
   \   00000094   0300000A           BEQ      ??ValidateVehicleData_6
   \   00000098   0300A0E1           MOV      R0,R3
   \   0000009C   0210A0E1           MOV      R1,R2
   \   000000A0   ........           BL       __aeabi_cfcmple
   \   000000A4   2C00003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_6:
   \   000000A8   3C3094E5           LDR      R3,[R4, #+60]
   \   000000AC   0010A0E3           MOV      R1,#+0
   \   000000B0   0300A0E1           MOV      R0,R3
   \   000000B4   ........           BL       __aeabi_cfcmpeq
   \   000000B8   0300000A           BEQ      ??ValidateVehicleData_7
   \   000000BC   0200A0E1           MOV      R0,R2
   \   000000C0   0310A0E1           MOV      R1,R3
   \   000000C4   ........           BL       __aeabi_cfcmple
   \   000000C8   2300003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_7:
   \   000000CC   402094E5           LDR      R2,[R4, #+64]
   \   000000D0   0010A0E3           MOV      R1,#+0
   \   000000D4   0200A0E1           MOV      R0,R2
   \   000000D8   ........           BL       __aeabi_cfcmpeq
   \   000000DC   0300000A           BEQ      ??ValidateVehicleData_8
   \   000000E0   0300A0E1           MOV      R0,R3
   \   000000E4   0210A0E1           MOV      R1,R2
   \   000000E8   ........           BL       __aeabi_cfcmple
   \   000000EC   1A00003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_8:
   \   000000F0   443094E5           LDR      R3,[R4, #+68]
   \   000000F4   0010A0E3           MOV      R1,#+0
   \   000000F8   0300A0E1           MOV      R0,R3
   \   000000FC   ........           BL       __aeabi_cfcmpeq
   \   00000100   0300000A           BEQ      ??ValidateVehicleData_9
   \   00000104   0200A0E1           MOV      R0,R2
   \   00000108   0310A0E1           MOV      R1,R3
   \   0000010C   ........           BL       __aeabi_cfcmple
   \   00000110   1100003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_9:
   \   00000114   482094E5           LDR      R2,[R4, #+72]
   \   00000118   0010A0E3           MOV      R1,#+0
   \   0000011C   0200A0E1           MOV      R0,R2
   \   00000120   ........           BL       __aeabi_cfcmpeq
   \   00000124   0300000A           BEQ      ??ValidateVehicleData_10
   \   00000128   0300A0E1           MOV      R0,R3
   \   0000012C   0210A0E1           MOV      R1,R2
   \   00000130   ........           BL       __aeabi_cfcmple
   \   00000134   0800003A           BCC      ??ValidateVehicleData_4
   \                     ??ValidateVehicleData_10:
   \   00000138   4C3094E5           LDR      R3,[R4, #+76]
   \   0000013C   0010A0E3           MOV      R1,#+0
   \   00000140   0300A0E1           MOV      R0,R3
   \   00000144   ........           BL       __aeabi_cfcmpeq
   \   00000148   0800000A           BEQ      ??ValidateVehicleData_3
   \   0000014C   0200A0E1           MOV      R0,R2
   \   00000150   0310A0E1           MOV      R1,R3
   \   00000154   ........           BL       __aeabi_cfcmple
   \   00000158   0400002A           BCS      ??ValidateVehicleData_3
   1910          		{
   1911          			if (VehicleSettingsPopUp(INVALID_GEAR_RATIOS) == GUI_ID_OK)
   \                     ??ValidateVehicleData_4:
   \   0000015C   0200A0E3           MOV      R0,#+2
   \   00000160   ........           BL       VehicleSettingsPopUp
   \   00000164   010050E3           CMP      R0,#+1
   \   00000168   B2FFFF0A           BEQ      ??ValidateVehicleData_2
   1912          				return false;
   1913          			else AutoFixGears();
   \   0000016C   ........           BL       AutoFixGears
   1914          		}
   1915          
   1916          	if (vehicleData.weight == 0.0)
   \                     ??ValidateVehicleData_3:
   \   00000170   680094E5           LDR      R0,[R4, #+104]
   \   00000174   000050E3           CMP      R0,#+0
   \   00000178   0600001A           BNE      ??ValidateVehicleData_11
   1917          	{
   1918          		if (VehicleSettingsPopUp(INVALID_WEIGHT) == GUI_ID_OK)
   \   0000017C   0300A0E3           MOV      R0,#+3
   \   00000180   ........           BL       VehicleSettingsPopUp
   \   00000184   010050E3           CMP      R0,#+1
   \   00000188   AAFFFF0A           BEQ      ??ValidateVehicleData_2
   1919          			return false;
   1920          		else AutoFixWeight();
   \   0000018C   B800A0E3           MOV      R0,#+184
   \   00000190   B00E80E3           ORR      R0,R0,#0xB00
   \   00000194   680084E5           STR      R0,[R4, #+104]
   1921          	}
   1922          
   1923          	return true;
   \                     ??ValidateVehicleData_11:
   \   00000198   0100A0E3           MOV      R0,#+1
   \   0000019C   1080BDE8           POP      {R4,PC}          ;; return
   1924          }
   1925          
   1926          //
   1927          // Exiting camera selection screen.  If new camera selection warn user
   1928          // of any restrictions or power cycle requirements.  Give user the option 
   1929          // to abort the change if he wants.  If not, make changes.
   1930          //
   1931          // Return value: true - okay to exit screen
   1932          //               false - go back to this screen so user can make changes
   1933          //

   \                                 In section .text, align 4, keep-with-next
   1934          int ValidateCamera(void)
   1935          {
   \                     ValidateCamera:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   1936          	if (tempCameraIndex != -1)
   \   00000004   ........           LDR      R4,??DataTable203
   \   00000008   04D04DE2           SUB      SP,SP,#+4
   \   0000000C   480194E5           LDR      R0,[R4, #+328]
   \   00000010   010070E3           CMN      R0,#+1
   \   00000014   0300000A           BEQ      ??ValidateCamera_0
   1937          		newSUCameraSelection = NewCameras[tempCameraIndex].enumeration;
   \   00000018   0C10A0E3           MOV      R1,#+12
   \   0000001C   914020E0           MLA      R0,R1,R0,R4
   \   00000020   5C00D0E5           LDRB     R0,[R0, #+92]
   \   00000024   5401C4E5           STRB     R0,[R4, #+340]
   1938          
   1939          	// If the camera did not change at all - exit with no change
   1940          	if ((newSUCameraSelection == originalSUCameraSelection) && (newTDCameraSelection == originalTDCameraSelection))
   \                     ??ValidateCamera_0:
   \   00000028   5411D4E5           LDRB     R1,[R4, #+340]
   \   0000002C   5221D4E5           LDRB     R2,[R4, #+338]
   \   00000030   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000034   020051E1           CMP      R1,R2
   \   00000038   5321D405           LDRBEQ   R2,[R4, #+339]
   \   0000003C   02005001           CMPEQ    R0,R2
   \   00000040   4000000A           BEQ      ??ValidateCamera_1
   1941          		return true;
   1942          
   1943          	// Otherwise new camera selection - save selection tell SU about camera change
   1944          	vehicleData.camera = newSUCameraSelection | newTDCameraSelection;
   \   00000044   ........           LDR      R5,??DataTable186
   \   00000048   010080E1           ORR      R0,R0,R1
   \   0000004C   7400C5E5           STRB     R0,[R5, #+116]
   1945          
   1946          	// Tell SU about change of camera
   1947          	notifyCameraChange();
   \   00000050   ........           BL       notifyCameraChange
   1948          
   1949          	// If the SU camera selection has changed and is not none
   1950          	if ((newSUCameraSelection != CAMERA_NONE) && (newSUCameraSelection != originalSUCameraSelection))
   \   00000054   5401D4E5           LDRB     R0,[R4, #+340]
   \   00000058   000050E3           CMP      R0,#+0
   \   0000005C   5211D415           LDRBNE   R1,[R4, #+338]
   \   00000060   01005011           CMPNE    R0,R1
   \   00000064   3300000A           BEQ      ??ValidateCamera_2
   1951          	{
   1952          		// If a camera using a TraqData USB interface is connected we required SU version 3.70 or later
   1953          		if (newSUCameraSelection == CAMERA_MOBIUS || 
   1954          			newSUCameraSelection == CAMERA_REPLAY_MINI ||
   1955          			newSUCameraSelection == CAMERA_REPLAY_PRIMEX ||
   1956          			newSUCameraSelection == CAMERA_REPLAY_XD_USB)
   \   00000068   0E0050E3           CMP      R0,#+14
   \   0000006C   0C005013           CMPNE    R0,#+12
   \   00000070   0D005013           CMPNE    R0,#+13
   \   00000074   0A005013           CMPNE    R0,#+10
   \   00000078   1200001A           BNE      ??ValidateCamera_3
   1957          		{
   1958          			if (!suData.suPresent || (suData.suSwRev < 370))
   \   0000007C   ........           LDR      R0,??DataTable203_1
   \   00000080   0C10D0E5           LDRB     R1,[R0, #+12]
   \   00000084   000051E3           CMP      R1,#+0
   \   00000088   0400000A           BEQ      ??ValidateCamera_4
   \   0000008C   B001D0E1           LDRH     R0,[R0, #+16]
   \   00000090   7210A0E3           MOV      R1,#+114
   \   00000094   401F81E3           ORR      R1,R1,#0x100
   \   00000098   010050E1           CMP      R0,R1
   \   0000009C   1800002A           BCS      ??ValidateCamera_5
   1959          				if (VehicleSettingsPopUp(SU_REV370_WARNING) == GUI_ID_CANCEL)
   \                     ??ValidateCamera_4:
   \   000000A0   0800A0E3           MOV      R0,#+8
   \   000000A4   ........           BL       VehicleSettingsPopUp
   \   000000A8   020050E3           CMP      R0,#+2
   \   000000AC   1400001A           BNE      ??ValidateCamera_5
   1960          				{
   1961          					UpdateCameraVariables();
   \                     ??ValidateCamera_6:
   \   000000B0   5401D4E5           LDRB     R0,[R4, #+340]
   \   000000B4   5201C4E5           STRB     R0,[R4, #+338]
   \   000000B8   5501D4E5           LDRB     R0,[R4, #+341]
   \   000000BC   5301C4E5           STRB     R0,[R4, #+339]
   1962          					return false;
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   200000EA           B        ??ValidateCamera_7
   1963          				}
   1964          		}
   1965          		else if (newSUCameraSelection == CAMERA_GOPRO_HD || 
   1966          			newSUCameraSelection == CAMERA_GOPRO_HD_PRO || 
   1967          			newSUCameraSelection == CAMERA_REPLAY_HD)
   \                     ??ValidateCamera_3:
   \   000000C8   080050E3           CMP      R0,#+8
   \   000000CC   0B005013           CMPNE    R0,#+11
   \   000000D0   09005013           CMPNE    R0,#+9
   \   000000D4   0A00001A           BNE      ??ValidateCamera_5
   1968          		{
   1969          			if (!suData.suPresent || (suData.suSwRev < 340))
   \   000000D8   ........           LDR      R0,??DataTable203_1
   \   000000DC   0C10D0E5           LDRB     R1,[R0, #+12]
   \   000000E0   000051E3           CMP      R1,#+0
   \   000000E4   0200000A           BEQ      ??ValidateCamera_8
   \   000000E8   B001D0E1           LDRH     R0,[R0, #+16]
   \   000000EC   550F50E3           CMP      R0,#+340
   \   000000F0   0300002A           BCS      ??ValidateCamera_5
   1970          				if (VehicleSettingsPopUp(GOPROHD_REV_WARNING) == GUI_ID_CANCEL)
   \                     ??ValidateCamera_8:
   \   000000F4   0500A0E3           MOV      R0,#+5
   \   000000F8   ........           BL       VehicleSettingsPopUp
   \   000000FC   020050E3           CMP      R0,#+2
   \   00000100   EAFFFF0A           BEQ      ??ValidateCamera_6
   1971          				{
   1972          					UpdateCameraVariables();
   1973          					return false;
   1974          				}
   1975          		}
   1976          
   1977          		// Camera being selected, be sure digital input 4 is disabled
   1978          		vehicleData.digitalInput[0].enabled = false;
   \                     ??ValidateCamera_5:
   \   00000104   0000A0E3           MOV      R0,#+0
   \   00000108   A301C5E5           STRB     R0,[R5, #+419]
   1979          		if (VehicleSettingsPopUp(CHANGED_CAMERA_WARNING) == GUI_ID_OK)
   \   0000010C   0600A0E3           MOV      R0,#+6
   \   00000110   ........           BL       VehicleSettingsPopUp
   \   00000114   010050E3           CMP      R0,#+1
   \   00000118   0600001A           BNE      ??ValidateCamera_2
   1980          		{
   1981          			WriteUserDataEvent(VEHICLE_DATA);
   \   0000011C   0200A0E3           MOV      R0,#+2
   \   00000120   ........           BL       WriteUserDataEvent
   1982          #ifdef _WINDOWS
   1983          			SIM_Powerkey_CB(POWER_KEY, 0);
   1984          #else
   1985          			PowerOffUnit(hVehicleSettingsScreens, false, 1000);				// Pause for 1 second to allow time for the SU to process the new camera setting
   \   00000124   FA2FA0E3           MOV      R2,#+1000
   \   00000128   0010A0E3           MOV      R1,#+0
   \   0000012C   0C0194E5           LDR      R0,[R4, #+268]
   \   00000130   ........           BL       PowerOffUnit
   1986          #endif
   1987          			UpdateCameraVariables();
   \   00000134   DDFFFFEA           B        ??ValidateCamera_6
   1988          			return false;
   1989          		}
   1990          	}
   1991          
   1992          	UpdateCameraVariables();
   \                     ??ValidateCamera_2:
   \   00000138   5401D4E5           LDRB     R0,[R4, #+340]
   \   0000013C   5201C4E5           STRB     R0,[R4, #+338]
   \   00000140   5501D4E5           LDRB     R0,[R4, #+341]
   \   00000144   5301C4E5           STRB     R0,[R4, #+339]
   1993          	return true;
   \                     ??ValidateCamera_1:
   \   00000148   0100A0E3           MOV      R0,#+1
   \                     ??ValidateCamera_7:
   \   0000014C   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000150   3080BDE8           POP      {R4,R5,PC}       ;; return
   1994          }
   1995          
   1996          

   \                                 In section .text, align 4, keep-with-next
   1997          int ValidateDiffRatio(void)
   1998          {
   \                     ValidateDiffRatio:
   \   00000000   00402DE9           PUSH     {LR}
   1999          	if (vehicleData.diffRatio == 0.0)
   \   00000004   ........           LDR      R0,??DataTable203_2
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   500090E5           LDR      R0,[R0, #+80]
   \   00000010   ........           BL       __aeabi_cfcmpeq
   \   00000014   04D04DE2           SUB      SP,SP,#+4
   \   00000018   0400001A           BNE      ??ValidateDiffRatio_0
   2000          	{
   2001          		if (VehicleSettingsPopUp(NO_GEAR_RATIOS) == GUI_ID_CANCEL)
   \   0000001C   0400A0E3           MOV      R0,#+4
   \   00000020   ........           BL       VehicleSettingsPopUp
   \   00000024   020050E3           CMP      R0,#+2
   2002          			return false;
   \   00000028   0000A003           MOVEQ    R0,#+0
   \   0000002C   0000000A           BEQ      ??ValidateDiffRatio_1
   2003          	}
   2004          	return true;
   \                     ??ValidateDiffRatio_0:
   \   00000030   0100A0E3           MOV      R0,#+1
   \                     ??ValidateDiffRatio_1:
   \   00000034   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000038   0080BDE8           POP      {PC}             ;; return
   2005          }
   2006          

   \                                 In section .text, align 4, keep-with-next
   2007          void AutoFixTach(void)
   2008          {
   \                     AutoFixTach:
   \   00000000   10402DE9           PUSH     {R4,LR}
   2009          	int i[4];
   2010          
   2011          	i[0] = vehicleData.tach.greenStart;
   \   00000004   ........           LDR      R4,??DataTable203_2
   \   00000008   10D04DE2           SUB      SP,SP,#+16
   \   0000000C   180094E5           LDR      R0,[R4, #+24]
   2012          	i[1] = vehicleData.tach.upperYellowStart;
   2013          	i[2] = vehicleData.tach.upperRedStart;
   \   00000010   241094E5           LDR      R1,[R4, #+36]
   \   00000014   00008DE5           STR      R0,[SP, #+0]
   2014          	i[3] = vehicleData.tach.scaleEnd;
   2015          
   2016          	// If any are 0s
   2017          	if ((i[0] == 0.0) || (i[1] == 0.0) || (i[2] == 0.0) || (i[3] == 0.0))
   \   00000018   00309DE5           LDR      R3,[SP, #+0]
   \   0000001C   200094E5           LDR      R0,[R4, #+32]
   \   00000020   000053E3           CMP      R3,#+0
   \   00000024   142094E5           LDR      R2,[R4, #+20]
   \   00000028   00005013           CMPNE    R0,#+0
   \   0000002C   00005113           CMPNE    R1,#+0
   \   00000030   04008DE5           STR      R0,[SP, #+4]
   \   00000034   08108DE5           STR      R1,[SP, #+8]
   \   00000038   0C208DE5           STR      R2,[SP, #+12]
   \   0000003C   00005213           CMPNE    R2,#+0
   \   00000040   0100001A           BNE      ??AutoFixTach_0
   2018          	{
   2019          		SetDefaultTach();
   \   00000044   ........           BL       SetDefaultTach
   2020          		return;
   \   00000048   0A0000EA           B        ??AutoFixTach_1
   2021          	}
   2022          
   2023          	// Otherwise attempt to sort values in numeric order
   2024          	iSort(i, 4);
   \                     ??AutoFixTach_0:
   \   0000004C   0410A0E3           MOV      R1,#+4
   \   00000050   0D00A0E1           MOV      R0,SP
   \   00000054   ........           BL       iSort
   2025          
   2026          	// Save sorted values
   2027          	vehicleData.tach.greenStart = i[0];
   \   00000058   00009DE5           LDR      R0,[SP, #+0]
   \   0000005C   180084E5           STR      R0,[R4, #+24]
   2028          	vehicleData.tach.upperYellowStart = i[1];
   \   00000060   04009DE5           LDR      R0,[SP, #+4]
   \   00000064   200084E5           STR      R0,[R4, #+32]
   2029          	vehicleData.tach.upperRedStart = i[2];
   \   00000068   08009DE5           LDR      R0,[SP, #+8]
   \   0000006C   240084E5           STR      R0,[R4, #+36]
   2030          	vehicleData.tach.scaleEnd = i[3];
   \   00000070   0C009DE5           LDR      R0,[SP, #+12]
   \   00000074   140084E5           STR      R0,[R4, #+20]
   2031          }
   \                     ??AutoFixTach_1:
   \   00000078   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   0000007C   1080BDE8           POP      {R4,PC}          ;; return
   2032          

   \                                 In section .text, align 4, keep-with-next
   2033          void AutoFixGears(void)
   2034          {
   \                     AutoFixGears:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   2035          	int i;
   2036          	float f[8], temp;
   2037          
   2038          	// Check diff ratio
   2039          	if (vehicleData.diffRatio == 0.0)
   \   00000004   ........           LDR      R4,??DataTable203_2
   \   00000008   0010A0E3           MOV      R1,#+0
   \   0000000C   500094E5           LDR      R0,[R4, #+80]
   \   00000010   ........           BL       __aeabi_cfcmpeq
   2040          		vehicleData.diffRatio = DEFAULT_DIFF_RATIO;
   \   00000014   ........           LDREQ    R0,??DataTable203_4  ;; 0x40833333
   \   00000018   20D04DE2           SUB      SP,SP,#+32
   \   0000001C   50008405           STREQ    R0,[R4, #+80]
   2041          
   2042          	// Add up all the gears to see if they're ALL 0.0
   2043          	temp = 0.0;
   \   00000020   0000A0E3           MOV      R0,#+0
   2044          	i = 0;
   \   00000024   0450A0E1           MOV      R5,R4
   \   00000028   0860A0E3           MOV      R6,#+8
   2045          	while (i < 8)
   2046          		temp += vehicleData.gearRatios[i++];
   \                     ??AutoFixGears_0:
   \   0000002C   301095E5           LDR      R1,[R5, #+48]
   \   00000030   ........           BL       __aeabi_fadd
   \   00000034   045085E2           ADD      R5,R5,#+4
   \   00000038   016056E2           SUBS     R6,R6,#+1
   \   0000003C   FAFFFF1A           BNE      ??AutoFixGears_0
   2047          
   2048          	if (temp == 0.0)
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   ........           BL       __aeabi_cfcmpeq
   \   00000048   0100001A           BNE      ??AutoFixGears_1
   2049          	{
   2050          		SetDefaultGears();
   \   0000004C   ........           BL       SetDefaultGears
   2051          		return;
   \   00000050   220000EA           B        ??AutoFixGears_2
   2052          	}
   2053          
   2054          	// Otherwise sort the gear ratios in the correct order
   2055          	// Sort gears in REVERSE ORDER
   2056          	f[0] = vehicleData.gearRatios[7];
   \                     ??AutoFixGears_1:
   \   00000054   4C0094E5           LDR      R0,[R4, #+76]
   2057          	f[1] = vehicleData.gearRatios[6];
   2058          	f[2] = vehicleData.gearRatios[5];
   2059          	f[3] = vehicleData.gearRatios[4];
   2060          	f[4] = vehicleData.gearRatios[3];
   2061          	f[5] = vehicleData.gearRatios[2];
   2062          	f[6] = vehicleData.gearRatios[1];
   2063          	f[7] = vehicleData.gearRatios[0];
   2064          
   2065          	// sort in ascending order
   2066          	fSort(f, 8);
   \   00000058   0810A0E3           MOV      R1,#+8
   \   0000005C   00008DE5           STR      R0,[SP, #+0]
   \   00000060   480094E5           LDR      R0,[R4, #+72]
   \   00000064   04008DE5           STR      R0,[SP, #+4]
   \   00000068   440094E5           LDR      R0,[R4, #+68]
   \   0000006C   08008DE5           STR      R0,[SP, #+8]
   \   00000070   400094E5           LDR      R0,[R4, #+64]
   \   00000074   0C008DE5           STR      R0,[SP, #+12]
   \   00000078   3C0094E5           LDR      R0,[R4, #+60]
   \   0000007C   10008DE5           STR      R0,[SP, #+16]
   \   00000080   380094E5           LDR      R0,[R4, #+56]
   \   00000084   14008DE5           STR      R0,[SP, #+20]
   \   00000088   340094E5           LDR      R0,[R4, #+52]
   \   0000008C   18008DE5           STR      R0,[SP, #+24]
   \   00000090   300094E5           LDR      R0,[R4, #+48]
   \   00000094   1C008DE5           STR      R0,[SP, #+28]
   \   00000098   0D00A0E1           MOV      R0,SP
   \   0000009C   ........           BL       fSort
   2067          
   2068          	// Save sorted values
   2069          	vehicleData.gearRatios[7] = f[0];
   \   000000A0   00009DE5           LDR      R0,[SP, #+0]
   \   000000A4   4C0084E5           STR      R0,[R4, #+76]
   2070          	vehicleData.gearRatios[6] = f[1];
   \   000000A8   04009DE5           LDR      R0,[SP, #+4]
   \   000000AC   480084E5           STR      R0,[R4, #+72]
   2071          	vehicleData.gearRatios[5] = f[2];
   \   000000B0   08009DE5           LDR      R0,[SP, #+8]
   \   000000B4   440084E5           STR      R0,[R4, #+68]
   2072          	vehicleData.gearRatios[4] = f[3];
   \   000000B8   0C009DE5           LDR      R0,[SP, #+12]
   \   000000BC   400084E5           STR      R0,[R4, #+64]
   2073          	vehicleData.gearRatios[3] = f[4];
   \   000000C0   10009DE5           LDR      R0,[SP, #+16]
   \   000000C4   3C0084E5           STR      R0,[R4, #+60]
   2074          	vehicleData.gearRatios[2] = f[5];
   \   000000C8   14009DE5           LDR      R0,[SP, #+20]
   \   000000CC   380084E5           STR      R0,[R4, #+56]
   2075          	vehicleData.gearRatios[1] = f[6];
   \   000000D0   18009DE5           LDR      R0,[SP, #+24]
   \   000000D4   340084E5           STR      R0,[R4, #+52]
   2076          	vehicleData.gearRatios[0] = f[7];
   \   000000D8   1C009DE5           LDR      R0,[SP, #+28]
   \   000000DC   300084E5           STR      R0,[R4, #+48]
   2077          }
   \                     ??AutoFixGears_2:
   \   000000E0   20D08DE2           ADD      SP,SP,#+32       ;; stack cleaning
   \   000000E4   7080BDE8           POP      {R4-R6,PC}       ;; return
   2078          

   \                                 In section .text, align 4, keep-with-next
   2079          void AutoFixWeight(void)
   2080          {
   2081          	vehicleData.weight = DEFAULT_VEHICLE_WEIGHT;
   \                     AutoFixWeight:
   \   00000000   ........           LDR      R0,??DataTable203_2
   \   00000004   B810A0E3           MOV      R1,#+184
   \   00000008   B01E81E3           ORR      R1,R1,#0xB00
   \   0000000C   681080E5           STR      R1,[R0, #+104]
   2082          }
   \   00000010   1EFF2FE1           BX       LR               ;; return
   2083          

   \                                 In section .text, align 4, keep-with-next
   2084          static const GUI_WIDGET_CREATE_INFO InvalidTachResources[] = {
   \                     InvalidTachResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Invalid tachometer co...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Would you like to go ...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "have us auto-fix the ...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000068   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Auto-Fix">`
   \              ....        
   \   00000080   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2085          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2086          	{ TEXT_CreateIndirect, "Invalid tachometer configuration.", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2087          	{ TEXT_CreateIndirect, "Would you like to go back or", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2088          	{ TEXT_CreateIndirect, "have us auto-fix the data?", 0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2089          	{ BUTTON_CreateIndirect, "Go Back",	GUI_ID_OK, 35, 115, 120, 60 },
   2090          	{ BUTTON_CreateIndirect, "Auto-Fix", GUI_ID_CANCEL, 195, 115, 120, 60 },
   2091          };

   \                                 In section .text, align 4, keep-with-next
   2092          static const GUI_WIDGET_CREATE_INFO InvalidGearResources[] = {
   \                     InvalidGearResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Invalid Gear Ratios.">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Would you like to go ...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "have us auto-fix the ...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000068   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Auto-Fix">`
   \              ....        
   \   00000080   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2093          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2094          	{ TEXT_CreateIndirect, "Invalid Gear Ratios.", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2095          	{ TEXT_CreateIndirect, "Would you like to go back or", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2096          	{ TEXT_CreateIndirect, "have us auto-fix the data?", 0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2097          	{ BUTTON_CreateIndirect, "Go Back",	GUI_ID_OK, 35, 115, 120, 60 },
   2098          	{ BUTTON_CreateIndirect, "Auto-Fix", GUI_ID_CANCEL, 195, 115, 120, 60 },
   2099          };

   \                                 In section .text, align 4, keep-with-next
   2100          static const GUI_WIDGET_CREATE_INFO InvalidWeightResources[] = {
   \                     InvalidWeightResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Invalid vehicle weight.">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "Would you like to go ...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "have us auto-fix the ...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000068   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Auto-Fix">`
   \              ....        
   \   00000080   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2101          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2102          	{ TEXT_CreateIndirect, "Invalid vehicle weight.",      0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2103          	{ TEXT_CreateIndirect, "Would you like to go back or", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2104          	{ TEXT_CreateIndirect, "have us auto-fix the data?",   0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2105          	{ BUTTON_CreateIndirect, "Go Back",	GUI_ID_OK, 35, 115, 120, 60 },
   2106          	{ BUTTON_CreateIndirect, "Auto-Fix", GUI_ID_CANCEL, 195, 115, 120, 60 },
   2107          };

   \                                 In section .text, align 4, keep-with-next
   2108          static const GUI_WIDGET_CREATE_INFO NoGearsResources[] = {
   \                     NoGearsResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "You entered a diff ra...">`
   \              ............
   \   00000020   000000001400       DC16 0, 0, 20, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "This will disable gea...">`
   \              ....        
   \   00000038   000000003C00       DC16 0, 0, 60, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000050   020023007300       DC16 2, 35, 115, 120, 60
   \              78003C00    
   \   0000005A   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Confirm">`
   \              ....        
   \   00000068   0100C3007300       DC16 1, 195, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   2109          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2110          	{ TEXT_CreateIndirect, "You entered a diff ratio of 0.00.",    0, 0, 20, 350, 30, TEXT_CF_HCENTER },
   2111          	{ TEXT_CreateIndirect, "This will disable gear calculations.", 0, 0, 60, 350, 30, TEXT_CF_HCENTER },
   2112          	{ BUTTON_CreateIndirect, "Go Back", GUI_ID_CANCEL, 35, 115, 120, 60 },
   2113          	{ BUTTON_CreateIndirect, "Confirm",	GUI_ID_OK,    195, 115, 120, 60 },
   2114          };

   \                                 In section .text, align 4, keep-with-next
   2115          static const GUI_WIDGET_CREATE_INFO GoProWarningResources[] = {
   \                     GoProWarningResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "GoPro HD and Replay X...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "require Sensor Unit f...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "version 3.40 or newer.">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000068   020023007300       DC16 2, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000080   0100C3007300       DC16 1, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2116          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2117          	{ TEXT_CreateIndirect, "GoPro HD and Replay XD cameras", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2118          	{ TEXT_CreateIndirect, "require Sensor Unit firmware",    0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2119          	{ TEXT_CreateIndirect, "version 3.40 or newer.",   0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2120          	{ BUTTON_CreateIndirect, "Go Back", GUI_ID_CANCEL, 35, 115, 120, 60 },
   2121          	{ BUTTON_CreateIndirect, "OK",	GUI_ID_OK, 195, 115, 120, 60 },
   2122          };

   \                                 In section .text, align 4, keep-with-next
   2123          static const GUI_WIDGET_CREATE_INFO SURev370WarningResources[] = {
   \                     SURev370WarningResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "Cameras connected to ...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "USB module require Se...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "firmware version 3.70...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "Go Back">`
   \              ....        
   \   00000068   020023007300       DC16 2, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000080   0100C3007300       DC16 1, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2124          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2125          	{ TEXT_CreateIndirect, "Cameras connected to a TraqData", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2126          	{ TEXT_CreateIndirect, "USB module require Sensor Unit",    0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2127          	{ TEXT_CreateIndirect, "firmware version 3.70 or newer.",   0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2128          	{ BUTTON_CreateIndirect, "Go Back", GUI_ID_CANCEL, 35, 115, 120, 60 },
   2129          	{ BUTTON_CreateIndirect, "OK",	GUI_ID_OK, 195, 115, 120, 60 },
   2130          };
   2131          

   \                                 In section .text, align 4, keep-with-next
   2132          static const GUI_WIDGET_CREATE_INFO ChangedCameraResources[] = {
   \                     ChangedCameraResources:
   \   00000000                      ; Initializer data, 144 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "You have changed came...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "which requires a powe...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "Would you like to pow...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "YES">`
   \              ....        
   \   00000068   010023007300       DC16 1, 35, 115, 120, 60
   \              78003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   \   00000078   ............       DC32 BUTTON_CreateIndirect, `?<Constant "NO">`
   \              ....        
   \   00000080   0200C3007300       DC16 2, 195, 115, 120, 60
   \              78003C00    
   \   0000008A   000000000000       DC8 0, 0, 0, 0, 0, 0
   2133          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2134          	{ TEXT_CreateIndirect, "You have changed camera selection", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2135          	{ TEXT_CreateIndirect, "which requires a power cycle.", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2136          	{ TEXT_CreateIndirect, "Would you like to power down now?",      0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2137          	{ BUTTON_CreateIndirect, "YES", GUI_ID_OK,   35, 115, 120, 60 },
   2138          	{ BUTTON_CreateIndirect, "NO", GUI_ID_CANCEL, 195, 115, 120, 60 }
   2139          };
   2140          

   \                                 In section .text, align 4, keep-with-next
   2141          static const GUI_WIDGET_CREATE_INFO ResetCameraResources[] = {
   \                     ResetCameraResources:
   \   00000000                      ; Initializer data, 120 bytes
   \   00000000   ............       DC32 FRAMEWIN_CreateIndirect, `?<Constant "Settings Warning">`
   \              ....        
   \   00000008   000032001400       DC16 0, 50, 20, 360, 220, 0
   \              6801DC000000
   \   00000014   00000000....       DC32 0, TEXT_CreateIndirect, `?<Constant "The camera you had se...">`
   \              ............
   \   00000020   000000000A00       DC16 0, 0, 10, 350, 30, 2
   \              5E011E000200
   \   0000002C   00000000           DC8 0, 0, 0, 0
   \   00000030   ............       DC32 TEXT_CreateIndirect, `?<Constant "is no longer supporte...">`
   \              ....        
   \   00000038   000000002800       DC16 0, 0, 40, 350, 30, 2
   \              5E011E000200
   \   00000044   00000000           DC8 0, 0, 0, 0
   \   00000048   ............       DC32 TEXT_CreateIndirect, `?<Constant "selection has been di...">`
   \              ....        
   \   00000050   000000004600       DC16 0, 0, 70, 350, 30, 2
   \              5E011E000200
   \   0000005C   00000000           DC8 0, 0, 0, 0
   \   00000060   ............       DC32 BUTTON_CreateIndirect, `?<Constant "OK">`
   \              ....        
   \   00000068   010091007300       DC16 1, 145, 115, 100, 60
   \              64003C00    
   \   00000072   000000000000       DC8 0, 0, 0, 0, 0, 0
   2142          	{ FRAMEWIN_CreateIndirect, "Settings Warning", 0, 50, 20, 360, 220, 0, 0 },
   2143          	{ TEXT_CreateIndirect, "The camera you had selected", 0, 0, 10, 350, 30, TEXT_CF_HCENTER },
   2144          	{ TEXT_CreateIndirect, "is no longer supported. Your", 0, 0, 40, 350, 30, TEXT_CF_HCENTER },
   2145          	{ TEXT_CreateIndirect, "selection has been disabled.",      0, 0, 70, 350, 30, TEXT_CF_HCENTER },
   2146          	{ BUTTON_CreateIndirect, "OK", GUI_ID_OK,   145, 115, 100, 60 },
   2147          };
   2148          
   2149          
   2150          //
   2151          // Display a modal dialog box to see if the user wants to stop recording to exit this screen
   2152          //
   2153          // Returns	YES - proceed to exit record mode
   2154          //				NO - abort and stay
   2155          //

   \                                 In section .text, align 4, keep-with-next
   2156          int VehicleSettingsPopUp(int screen)
   2157          {
   \                     VehicleSettingsPopUp:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   2158          	SetPopupDefaults(WARNING_POPUP);
   \   0000000C   0100A0E3           MOV      R0,#+1
   \   00000010   ........           BL       SetPopupDefaults
   2159          
   2160          	switch (systemSettingsPopupScreen = screen)
   \   00000014   ........           LDR      R0,??DataTable203_5
   \   00000018   004080E5           STR      R4,[R0, #+0]
   \   0000001C   010044E2           SUB      R0,R4,#+1
   \   00000020   070050E3           CMP      R0,#+7
   \   00000024   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??VehicleSettingsPopUp_0:
   \   00000028   5900008A           BHI      ??VehicleSettingsPopUp_1
   \   0000002C   060000EA           B        ??VehicleSettingsPopUp_2
   \   00000030   100000EA           B        ??VehicleSettingsPopUp_3
   \   00000034   190000EA           B        ??VehicleSettingsPopUp_4
   \   00000038   220000EA           B        ??VehicleSettingsPopUp_5
   \   0000003C   2B0000EA           B        ??VehicleSettingsPopUp_6
   \   00000040   340000EA           B        ??VehicleSettingsPopUp_7
   \   00000044   3D0000EA           B        ??VehicleSettingsPopUp_8
   \   00000048   470000EA           B        ??VehicleSettingsPopUp_9
   2161          	{
   2162          		case INVALID_TACH_SETTINGS:
   2163          			return GUI_ExecDialogBox(InvalidTachResources, GUI_COUNTOF(InvalidTachResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_2:
   \   0000004C   ........           BL       WM_GetDesktopWindow
   \   00000050   0A10A0E3           MOV      R1,#+10
   \   00000054   04108DE5           STR      R1,[SP, #+4]
   \   00000058   00108DE5           STR      R1,[SP, #+0]
   \   0000005C   0030A0E1           MOV      R3,R0
   \   00000060   ........           LDR      R2,??DataTable203_6
   \   00000064   0610A0E3           MOV      R1,#+6
   \   00000068   ............       ADRL     R0,InvalidTachResources
   \              ....        
   \                     ??VehicleSettingsPopUp_10:
   \   00000070   ........           BL       GUI_ExecDialogBox
   \   00000074   470000EA           B        ??VehicleSettingsPopUp_11
   2164          		case INVALID_GEAR_RATIOS:
   2165          			return GUI_ExecDialogBox(InvalidGearResources, GUI_COUNTOF(InvalidGearResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_3:
   \   00000078   ........           BL       WM_GetDesktopWindow
   \   0000007C   0A10A0E3           MOV      R1,#+10
   \   00000080   04108DE5           STR      R1,[SP, #+4]
   \   00000084   00108DE5           STR      R1,[SP, #+0]
   \   00000088   0030A0E1           MOV      R3,R0
   \   0000008C   ........           LDR      R2,??DataTable203_6
   \   00000090   0610A0E3           MOV      R1,#+6
   \   00000094   ............       ADRL     R0,InvalidGearResources
   \              ....        
   \   0000009C   F3FFFFEA           B        ??VehicleSettingsPopUp_10
   2166          		case INVALID_WEIGHT:
   2167          			return GUI_ExecDialogBox(InvalidWeightResources, GUI_COUNTOF(InvalidWeightResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_4:
   \   000000A0   ........           BL       WM_GetDesktopWindow
   \   000000A4   0A10A0E3           MOV      R1,#+10
   \   000000A8   04108DE5           STR      R1,[SP, #+4]
   \   000000AC   00108DE5           STR      R1,[SP, #+0]
   \   000000B0   0030A0E1           MOV      R3,R0
   \   000000B4   ........           LDR      R2,??DataTable203_6
   \   000000B8   0610A0E3           MOV      R1,#+6
   \   000000BC   ............       ADRL     R0,InvalidWeightResources
   \              ....        
   \   000000C4   E9FFFFEA           B        ??VehicleSettingsPopUp_10
   2168          		case NO_GEAR_RATIOS:
   2169          			return GUI_ExecDialogBox(NoGearsResources, GUI_COUNTOF(NoGearsResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_5:
   \   000000C8   ........           BL       WM_GetDesktopWindow
   \   000000CC   0A10A0E3           MOV      R1,#+10
   \   000000D0   04108DE5           STR      R1,[SP, #+4]
   \   000000D4   00108DE5           STR      R1,[SP, #+0]
   \   000000D8   0030A0E1           MOV      R3,R0
   \   000000DC   ........           LDR      R2,??DataTable203_6
   \   000000E0   0510A0E3           MOV      R1,#+5
   \   000000E4   ............       ADRL     R0,NoGearsResources
   \              ....        
   \   000000EC   DFFFFFEA           B        ??VehicleSettingsPopUp_10
   2170          		case GOPROHD_REV_WARNING:
   2171          			return GUI_ExecDialogBox(GoProWarningResources, GUI_COUNTOF(GoProWarningResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_6:
   \   000000F0   ........           BL       WM_GetDesktopWindow
   \   000000F4   0A10A0E3           MOV      R1,#+10
   \   000000F8   04108DE5           STR      R1,[SP, #+4]
   \   000000FC   00108DE5           STR      R1,[SP, #+0]
   \   00000100   0030A0E1           MOV      R3,R0
   \   00000104   ........           LDR      R2,??DataTable203_6
   \   00000108   0610A0E3           MOV      R1,#+6
   \   0000010C   ............       ADRL     R0,GoProWarningResources
   \              ....        
   \   00000114   D5FFFFEA           B        ??VehicleSettingsPopUp_10
   2172          		case CHANGED_CAMERA_WARNING:
   2173          			return GUI_ExecDialogBox(ChangedCameraResources, GUI_COUNTOF(ChangedCameraResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_7:
   \   00000118   ........           BL       WM_GetDesktopWindow
   \   0000011C   0A10A0E3           MOV      R1,#+10
   \   00000120   04108DE5           STR      R1,[SP, #+4]
   \   00000124   00108DE5           STR      R1,[SP, #+0]
   \   00000128   0030A0E1           MOV      R3,R0
   \   0000012C   ........           LDR      R2,??DataTable203_6
   \   00000130   0610A0E3           MOV      R1,#+6
   \   00000134   ............       ADRL     R0,ChangedCameraResources
   \              ....        
   \   0000013C   CBFFFFEA           B        ??VehicleSettingsPopUp_10
   2174          		case RESET_CAMERA_WARNING:
   2175          			return GUI_ExecDialogBox(ResetCameraResources, GUI_COUNTOF(ResetCameraResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_8:
   \   00000140   ........           BL       WM_GetDesktopWindow
   \   00000144   0A10A0E3           MOV      R1,#+10
   \   00000148   04108DE5           STR      R1,[SP, #+4]
   \   0000014C   00108DE5           STR      R1,[SP, #+0]
   \   00000150   0030A0E1           MOV      R3,R0
   \   00000154   ........           LDR      R2,??DataTable203_6
   \   00000158   0510A0E3           MOV      R1,#+5
   \   0000015C   ............       ADRL     R0,ResetCameraResources
   \              ....        
   \   00000164   ........           BL       GUI_ExecDialogBox
   \   00000168   0A0000EA           B        ??VehicleSettingsPopUp_11
   2176          		case SU_REV370_WARNING:
   2177          			return GUI_ExecDialogBox(SURev370WarningResources, GUI_COUNTOF(SURev370WarningResources), &popupCallback, WM_GetDesktopWindow(), 10, 10);
   \                     ??VehicleSettingsPopUp_9:
   \   0000016C   ........           BL       WM_GetDesktopWindow
   \   00000170   0A10A0E3           MOV      R1,#+10
   \   00000174   04108DE5           STR      R1,[SP, #+4]
   \   00000178   00108DE5           STR      R1,[SP, #+0]
   \   0000017C   0030A0E1           MOV      R3,R0
   \   00000180   ........           LDR      R2,??DataTable203_6
   \   00000184   0610A0E3           MOV      R1,#+6
   \   00000188   ............       ADRL     R0,SURev370WarningResources
   \              ....        
   \   00000190   B6FFFFEA           B        ??VehicleSettingsPopUp_10
   2178          	}
   2179          	
   2180          	return false;
   \                     ??VehicleSettingsPopUp_1:
   \   00000194   0000A0E3           MOV      R0,#+0
   \                     ??VehicleSettingsPopUp_11:
   \   00000198   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000019C   1080BDE8           POP      {R4,PC}          ;; return
   2181          }
   2182          

   \                                 In section .text, align 4, keep-with-next
   2183          void SetAnalogColorAndText(BUTTON_Handle hBtn, int index)
   2184          {
   \                     SetAnalogColorAndText:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2185          	char scratch[20];
   2186          
   2187          	if (vehicleData.analogInput[index].enabled == false)
   \   00000008   ........           LDR      R0,??DataTable203_2
   \   0000000C   0150A0E1           MOV      R5,R1
   \   00000010   056380E0           ADD      R6,R0,R5, LSL #+6
   \   00000014   9300D6E5           LDRB     R0,[R6, #+147]
   \   00000018   18D04DE2           SUB      SP,SP,#+24
   \   0000001C   000050E3           CMP      R0,#+0
   \   00000020   0500001A           BNE      ??SetAnalogColorAndText_0
   2188          		strcpy(scratch, "Disabled");
   \   00000024   0920A0E3           MOV      R2,#+9
   \   00000028   ............       ADRL     R1,`?<Constant "Disabled">`
   \              ....        
   \   00000030   04008DE2           ADD      R0,SP,#+4
   \   00000034   ........           BL       __aeabi_memcpy4
   \   00000038   0A0000EA           B        ??SetAnalogColorAndText_1
   2189          	else sprintf(scratch, "%0.1f\n%s", GetAnalogInput(USER, index), vehicleData.analogInput[index].Units);
   \                     ??SetAnalogColorAndText_0:
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   ........           BL       GetAnalogInput
   \   00000044   891086E2           ADD      R1,R6,#+137
   \   00000048   00108DE5           STR      R1,[SP, #+0]
   \   0000004C   ........           BL       __aeabi_f2d
   \   00000050   0020A0E1           MOV      R2,R0
   \   00000054   0130A0E1           MOV      R3,R1
   \   00000058   ............       ADRL     R1,`?<Constant "%0.1f\\n%s">`
   \              ....        
   \   00000060   04008DE2           ADD      R0,SP,#+4
   \   00000064   ........           BL       sprintf
   2190          	BUTTON_SetText(hBtn, scratch);
   \                     ??SetAnalogColorAndText_1:
   \   00000068   04108DE2           ADD      R1,SP,#+4
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   ........           BL       BUTTON_SetText
   2191          
   2192          	if (!vehicleData.analogInput[index].enabled ||
   2193          		((BELOW != vehicleData.analogInput[index].lowerAlarmTriggerComparison) && (ABOVE != vehicleData.analogInput[index].upperAlarmTriggerComparison))) {
   \   00000074   9300D6E5           LDRB     R0,[R6, #+147]
   \   00000078   000050E3           CMP      R0,#+0
   \   0000007C   0400000A           BEQ      ??SetAnalogColorAndText_2
   \   00000080   9400D6E5           LDRB     R0,[R6, #+148]
   \   00000084   020050E3           CMP      R0,#+2
   \   00000088   9500D615           LDRBNE   R0,[R6, #+149]
   \   0000008C   01005013           CMPNE    R0,#+1
   \   00000090   0100000A           BEQ      ??SetAnalogColorAndText_3
   2194          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBrownInputButton);
   \                     ??SetAnalogColorAndText_2:
   \   00000094   ........           LDR      R2,??DataTable203_7
   \   00000098   040000EA           B        ??SetAnalogColorAndText_4
   2195          	} // if
   2196          	else if(InAlarm(index))
   \                     ??SetAnalogColorAndText_3:
   \   0000009C   0500A0E1           MOV      R0,R5
   \   000000A0   ........           BL       InAlarm
   \   000000A4   000050E3           CMP      R0,#+0
   2197          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedInputButton);
   \   000000A8   ........           LDRNE    R2,??DataTable203_8
   2198          	else
   2199          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenInputButton);
   \   000000AC   ........           LDREQ    R2,??DataTable203_9
   \                     ??SetAnalogColorAndText_4:
   \   000000B0   0010A0E3           MOV      R1,#+0
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       BUTTON_SetBitmap
   2200          }
   \   000000BC   18D08DE2           ADD      SP,SP,#+24       ;; stack cleaning
   \   000000C0   7080BDE8           POP      {R4-R6,PC}       ;; return
   2201          

   \                                 In section .text, align 4, keep-with-next
   2202          void SetDigitalColorAndText(BUTTON_Handle hBtn, int index)
   2203          {
   \                     SetDigitalColorAndText:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   2204          	if (!vehicleData.digitalInput[index].enabled) {
   \   0000000C   2F00A0E3           MOV      R0,#+47
   \   00000010   ........           LDR      R1,??DataTable203_2
   \   00000014   901526E0           MLA      R6,R0,R5,R1
   \   00000018   A301D6E5           LDRB     R0,[R6, #+419]
   \   0000001C   000050E3           CMP      R0,#+0
   2205          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmBrownInputButton);
   \   00000020   ........           LDREQ    R2,??DataTable203_7
   \   00000024   0400000A           BEQ      ??SetDigitalColorAndText_0
   2206          	} // if
   2207          	else if(InAlarm(index+4))
   \   00000028   040085E2           ADD      R0,R5,#+4
   \   0000002C   ........           BL       InAlarm
   \   00000030   000050E3           CMP      R0,#+0
   2208          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmRedInputButton);
   \   00000034   ........           LDRNE    R2,??DataTable203_8
   2209          	else
   2210          		BUTTON_SetBitmap(hBtn, BUTTON_BI_UNPRESSED, &bmGreenInputButton);
   \   00000038   ........           LDREQ    R2,??DataTable203_9
   \                     ??SetDigitalColorAndText_0:
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   ........           BL       BUTTON_SetBitmap
   2211          
   2212          	if (vehicleData.digitalInput[index].enabled == false)
   \   00000048   A301D6E5           LDRB     R0,[R6, #+419]
   \   0000004C   000050E3           CMP      R0,#+0
   2213          		BUTTON_SetText(hBtn, "Disabled");
   \   00000050   ............       ADRLEQ   R1,`?<Constant "Disabled">`
   \              ....        
   \   00000058   0300000A           BEQ      ??SetDigitalColorAndText_1
   2214          	else BUTTON_SetText(hBtn, GetDigitalText(USER, index));
   \   0000005C   0510A0E1           MOV      R1,R5
   \   00000060   0100A0E3           MOV      R0,#+1
   \   00000064   ........           BL       GetDigitalText
   \   00000068   0010A0E1           MOV      R1,R0
   \                     ??SetDigitalColorAndText_1:
   \   0000006C   0400A0E1           MOV      R0,R4
   \   00000070   7040BDE8           POP      {R4-R6,LR}
   \   00000074   ........           B        BUTTON_SetText   ;; tailcall
   2215          }
   2216          
   2217          //
   2218          // Camera selection screen routines
   2219          //

   \                                 In section .text, align 4, keep-with-next
   2220          GUI_HWIN GetCameraSelectionWindowHandle(void)
   2221          {
   2222          	return hCameraSelection;
   \                     GetCameraSelectionWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable203
   \   00000004   FC0090E5           LDR      R0,[R0, #+252]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   2223          }
   2224          

   \                                 In section .text, align 4, keep-with-next
   2225          void CreateCameraSelection(WM_HWIN hParent)
   2226          {
   \                     CreateCameraSelection:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   10D04DE2           SUB      SP,SP,#+16
   2227          	HEADER_Handle hHeader;
   2228          	int i, selectionIndex;
   2229          
   2230          	if (hParent)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??CreateCameraSelection_0
   2231          		WM_DeleteWindow(hParent);
   \   00000010   ........           BL       WM_DeleteWindow
   2232          
   2233          	SetScreenType(CAMERA_SELECTION_SCREEN_TYPE);
   \                     ??CreateCameraSelection_0:
   \   00000014   2100A0E3           MOV      R0,#+33
   \   00000018   ........           BL       SetScreenType
   2234          
   2235          	if ((hCameraSelection = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, CameraSelectionCallback, 0)) <= 0)
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   08008DE5           STR      R0,[SP, #+8]
   \   00000024   ........           LDR      R0,??DataTable203_10
   \   00000028   443FA0E3           MOV      R3,#+272
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   800D80E3           ORR      R0,R0,#0x2000
   \   00000038   00008DE5           STR      R0,[SP, #+0]
   \   0000003C   782FA0E3           MOV      R2,#+480
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       WM_CreateWindow
   \   0000004C   ........           LDR      R4,??DataTable203
   \   00000050   010050E3           CMP      R0,#+1
   \   00000054   FC0084E5           STR      R0,[R4, #+252]
   \   00000058   000000AA           BGE      ??CreateCameraSelection_1
   2236          		SystemError();
   \   0000005C   ........           BL       SystemError
   2237          
   2238          	hCameraList = LISTVIEW_CreateEx(30, 50, 430, 205, hCameraSelection, WM_CF_SHOW, 0, CAMERA_LIST);
   \                     ??CreateCameraSelection_1:
   \   00000060   980FA0E3           MOV      R0,#+608
   \   00000064   0C008DE5           STR      R0,[SP, #+12]
   \   00000068   0000A0E3           MOV      R0,#+0
   \   0000006C   08008DE5           STR      R0,[SP, #+8]
   \   00000070   0200A0E3           MOV      R0,#+2
   \   00000074   04008DE5           STR      R0,[SP, #+4]
   \   00000078   FC0094E5           LDR      R0,[R4, #+252]
   \   0000007C   CD30A0E3           MOV      R3,#+205
   \   00000080   00008DE5           STR      R0,[SP, #+0]
   \   00000084   E12083E2           ADD      R2,R3,#+225
   \   00000088   3210A0E3           MOV      R1,#+50
   \   0000008C   1E00A0E3           MOV      R0,#+30
   \   00000090   ........           BL       LISTVIEW_CreateEx
   \   00000094   4C0184E5           STR      R0,[R4, #+332]
   2239          	WM_SetFocus(hCameraList);
   \   00000098   ........           BL       WM_SetFocus
   2240          	LISTVIEW_AddColumn(hCameraList, 200, "Camera", GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   0000009C   0E30A0E3           MOV      R3,#+14
   \   000000A0   ............       ADRL     R2,`?<Constant "Camera">`
   \              ....        
   \   000000A8   C810A0E3           MOV      R1,#+200
   \   000000AC   4C0194E5           LDR      R0,[R4, #+332]
   \   000000B0   ........           BL       LISTVIEW_AddColumn
   2241          	LISTVIEW_AddColumn(hCameraList, 200, "Interface", GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   000000B4   0E30A0E3           MOV      R3,#+14
   \   000000B8   ............       ADRL     R2,`?<Constant "Interface">`
   \              ....        
   \   000000C0   C810A0E3           MOV      R1,#+200
   \   000000C4   4C0194E5           LDR      R0,[R4, #+332]
   \   000000C8   ........           BL       LISTVIEW_AddColumn
   2242          	LISTVIEW_SetAutoScrollV(hCameraList, 1);
   \   000000CC   0110A0E3           MOV      R1,#+1
   \   000000D0   4C0194E5           LDR      R0,[R4, #+332]
   \   000000D4   ........           BL       LISTVIEW_SetAutoScrollV
   2243          	LISTVIEW_SetFont(hCameraList, &GUI_Font20_ASCII);
   \   000000D8   ........           LDR      R5,??DataTable203_11
   \   000000DC   4C0194E5           LDR      R0,[R4, #+332]
   \   000000E0   0510A0E1           MOV      R1,R5
   \   000000E4   ........           BL       LISTVIEW_SetFont
   2244          	LISTVIEW_SetRowHeight(hCameraList, FINGER_WIDTH - 5);
   \   000000E8   1E10A0E3           MOV      R1,#+30
   \   000000EC   4C0194E5           LDR      R0,[R4, #+332]
   \   000000F0   ........           BL       LISTVIEW_SetRowHeight
   2245          
   2246          	HEADER_SetFont(hHeader = LISTVIEW_GetHeader(hCameraList), &GUI_Font20_ASCII);
   \   000000F4   4C0194E5           LDR      R0,[R4, #+332]
   \   000000F8   ........           BL       LISTVIEW_GetHeader
   \   000000FC   0060A0E1           MOV      R6,R0
   \   00000100   0510A0E1           MOV      R1,R5
   \   00000104   ........           BL       HEADER_SetFont
   2247          	HEADER_SetTextAlign(hHeader, 0, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   00000108   0E20A0E3           MOV      R2,#+14
   \   0000010C   0010A0E3           MOV      R1,#+0
   \   00000110   0600A0E1           MOV      R0,R6
   \   00000114   ........           BL       HEADER_SetTextAlign
   2248          	HEADER_SetTextAlign(hHeader, 1, GUI_TA_HCENTER | GUI_TA_VCENTER);
   \   00000118   0E20A0E3           MOV      R2,#+14
   \   0000011C   0110A0E3           MOV      R1,#+1
   \   00000120   0600A0E1           MOV      R0,R6
   \   00000124   ........           BL       HEADER_SetTextAlign
   2249          	HEADER_SetHeight(hHeader, 25);
   \   00000128   1910A0E3           MOV      R1,#+25
   \   0000012C   0600A0E1           MOV      R0,R6
   \   00000130   ........           BL       HEADER_SetHeight
   2250          
   2251          	i = 0;
   \   00000134   0060A0E3           MOV      R6,#+0
   2252          	selectionIndex = -1;
   \   00000138   0670E0E1           MVN      R7,R6
   \   0000013C   548084E2           ADD      R8,R4,#+84
   \   00000140   0B0000EA           B        ??CreateCameraSelection_2
   2253          	while (NewCameras[i].pName)
   2254          	{
   2255          		const char *pDest[2];
   2256          
   2257          		pDest[0] = NewCameras[i].pName;
   \                     ??CreateCameraSelection_3:
   \   00000144   00008DE5           STR      R0,[SP, #+0]
   2258          		pDest[1] = NewCameras[i].pInterface;
   \   00000148   040098E5           LDR      R0,[R8, #+4]
   \   0000014C   04008DE5           STR      R0,[SP, #+4]
   2259          
   2260          		// See if this is the selected camera
   2261          		if (originalSUCameraSelection == NewCameras[i].enumeration)
   \   00000150   5201D4E5           LDRB     R0,[R4, #+338]
   \   00000154   0810D8E5           LDRB     R1,[R8, #+8]
   \   00000158   010050E1           CMP      R0,R1
   2262          			selectionIndex = i;
   \   0000015C   0670A001           MOVEQ    R7,R6
   2263          
   2264          		LISTVIEW_AddRow(hCameraList, pDest);
   \   00000160   0D10A0E1           MOV      R1,SP
   \   00000164   4C0194E5           LDR      R0,[R4, #+332]
   \   00000168   ........           BL       LISTVIEW_AddRow
   2265          		i++;
   \   0000016C   016086E2           ADD      R6,R6,#+1
   \   00000170   0C8088E2           ADD      R8,R8,#+12
   2266          	}
   \                     ??CreateCameraSelection_2:
   \   00000174   000098E5           LDR      R0,[R8, #+0]
   \   00000178   000050E3           CMP      R0,#+0
   \   0000017C   F0FFFF1A           BNE      ??CreateCameraSelection_3
   2267          	if (selectionIndex == -1)
   \   00000180   010077E3           CMN      R7,#+1
   2268          	{
   2269          		// Tell user the selection changed!
   2270          		selectionIndex = 0;
   \   00000184   0070A003           MOVEQ    R7,#+0
   2271          	}
   2272          	// Highlight selection
   2273          	tempCameraIndex = selectionIndex;
   \   00000188   487184E5           STR      R7,[R4, #+328]
   2274          	LISTVIEW_SetSelUnsorted(hCameraList, selectionIndex);
   \   0000018C   0710A0E1           MOV      R1,R7
   \   00000190   4C0194E5           LDR      R0,[R4, #+332]
   \   00000194   ........           BL       LISTVIEW_SetSelUnsorted
   2275          
   2276          	// Scrollbar width must be set after the data is in the control
   2277          	SCROLLBAR_SetWidth(WM_GetScrollbarV(hCameraList), FINGER_WIDTH);
   \   00000198   4C0194E5           LDR      R0,[R4, #+332]
   \   0000019C   ........           BL       WM_GetScrollbarV
   \   000001A0   2310A0E3           MOV      R1,#+35
   \   000001A4   ........           BL       SCROLLBAR_SetWidth
   2278          	LISTVIEW_SetBkColor(hCameraList, LISTVIEW_CI_SELFOCUS, GUI_LISTBLUE);
   \   000001A8   ........           LDR      R2,??DataTable203_12  ;; 0xff5480
   \   000001AC   0210A0E3           MOV      R1,#+2
   \   000001B0   4C0194E5           LDR      R0,[R4, #+332]
   \   000001B4   ........           BL       LISTVIEW_SetBkColor
   2279          
   2280          	LISTVIEW_SetCompareFunc(hCameraList, 0, &LISTVIEW_CompareText);
   \   000001B8   ........           LDR      R5,??DataTable203_13
   \   000001BC   0010A0E3           MOV      R1,#+0
   \   000001C0   0520A0E1           MOV      R2,R5
   \   000001C4   4C0194E5           LDR      R0,[R4, #+332]
   \   000001C8   ........           BL       LISTVIEW_SetCompareFunc
   2281          	LISTVIEW_SetCompareFunc(hCameraList, 1, &LISTVIEW_CompareText);
   \   000001CC   0520A0E1           MOV      R2,R5
   \   000001D0   0110A0E3           MOV      R1,#+1
   \   000001D4   4C0194E5           LDR      R0,[R4, #+332]
   \   000001D8   ........           BL       LISTVIEW_SetCompareFunc
   2282          	LISTVIEW_EnableSort(hCameraList);
   \   000001DC   4C0194E5           LDR      R0,[R4, #+332]
   \   000001E0   ........           BL       LISTVIEW_EnableSort
   2283          	LISTVIEW_SetSort(hCameraList, 0, 0);			// Set sort to sort by decending camera name
   \   000001E4   0020A0E3           MOV      R2,#+0
   \   000001E8   0010A0E3           MOV      R1,#+0
   \   000001EC   4C0194E5           LDR      R0,[R4, #+332]
   \   000001F0   ........           BL       LISTVIEW_SetSort
   2284          
   2285          	// Set "ignore region" of list area to prevent interference with BACK button
   2286          	LISTVIEW_SetLFreeBorder(hCameraList, 35);
   \   000001F4   2310A0E3           MOV      R1,#+35
   \   000001F8   4C0194E5           LDR      R0,[R4, #+332]
   \   000001FC   ........           BL       LISTVIEW_SetLFreeBorder
   2287          
   2288          	hScreenTimer = WM_CreateTimer(hCameraSelection, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   00000200   0030A0E3           MOV      R3,#+0
   \   00000204   7D20A0E3           MOV      R2,#+125
   \   00000208   0010A0E3           MOV      R1,#+0
   \   0000020C   FC0094E5           LDR      R0,[R4, #+252]
   \   00000210   ........           BL       WM_CreateTimer
   \   00000214   ........           LDR      R1,??DataTable203_14
   \   00000218   000081E5           STR      R0,[R1, #+0]
   2289          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   0000021C   ........           BL       ResetNewScreen
   2290          }
   \   00000220   10D08DE2           ADD      SP,SP,#+16       ;; stack cleaning
   \   00000224   F081BDE8           POP      {R4-R8,PC}       ;; return
   2291          
   2292          

   \                                 In section .text, align 4, keep-with-next
   2293          void CameraSelectionCallback(WM_MESSAGE * pMsg)
   2294          {
   \                     CameraSelectionCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2295          	int Id, NCode;
   2296          
   2297          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   0F0050E2           SUBS     R0,R0,#+15
   \   00000010   1900000A           BEQ      ??CameraSelectionCallback_0
   \   00000014   170050E2           SUBS     R0,R0,#+23
   \   00000018   0B00000A           BEQ      ??CameraSelectionCallback_1
   \   0000001C   ED0050E2           SUBS     R0,R0,#+237
   \   00000020   2300001A           BNE      ??CameraSelectionCallback_2
   2298          	{
   2299          		case WM_TIMER:
   2300          			if (pMsg->Data.v == hScreenTimer)
   \   00000024   ........           LDR      R0,??DataTable203_14
   \   00000028   0C1094E5           LDR      R1,[R4, #+12]
   \   0000002C   000090E5           LDR      R0,[R0, #+0]
   \   00000030   000051E1           CMP      R1,R0
   \   00000034   2000001A           BNE      ??CameraSelectionCallback_3
   2301          			{
   2302          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   00000038   7D10A0E3           MOV      R1,#+125
   \   0000003C   ........           BL       WM_RestartTimer
   2303          				WM_InvalidateWindow(pMsg->hWin);		// Allow timer to invalidate the whole window so we can show live data on the input buttons
   \   00000040   040094E5           LDR      R0,[R4, #+4]
   \   00000044   1040BDE8           POP      {R4,LR}
   \   00000048   ........           B        WM_InvalidateWindow  ;; tailcall
   2304          			}
   2305          			break;
   2306          
   2307          		case WM_NOTIFY_PARENT:
   2308          			NCode = pMsg->Data.v;                 // Notification code
   2309          			if (NCode == WM_NOTIFICATION_CLICKED)
   \                     ??CameraSelectionCallback_1:
   \   0000004C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000050   010050E3           CMP      R0,#+1
   \   00000054   1800001A           BNE      ??CameraSelectionCallback_3
   2310          			{
   2311          				Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   2312          				if (Id == CAMERA_LIST)
   \   00000058   080094E5           LDR      R0,[R4, #+8]
   \   0000005C   ........           BL       WM_GetId
   \   00000060   980F50E3           CMP      R0,#+608
   \   00000064   1400001A           BNE      ??CameraSelectionCallback_3
   2313          				{
   2314          					tempCameraIndex = LISTVIEW_GetSelUnsorted(hCameraList);			// Get current sorted selection
   \   00000068   ........           LDR      R4,??DataTable203
   \   0000006C   4C0194E5           LDR      R0,[R4, #+332]
   \   00000070   ........           BL       LISTVIEW_GetSelUnsorted
   \   00000074   480184E5           STR      R0,[R4, #+328]
   \   00000078   1080BDE8           POP      {R4,PC}
   2315          					// Only set temp variable rather than actually set the camera here because the notification
   2316          					// comes about 5 times (literally) for every press.  Formerly it would call the hardware
   2317          					// notification routine for each pass through.  This seems better.  Note the restriction is
   2318          					// that you must exit the screen for the change to take affect rather than just press the button
   2319          					// and power cycle.
   2320          				}
   2321          			}
   2322          			break;
   2323          
   2324          		case WM_PAINT:
   2325          			GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \                     ??CameraSelectionCallback_0:
   \   0000007C   0020A0E3           MOV      R2,#+0
   \   00000080   0010A0E3           MOV      R1,#+0
   \   00000084   ........           LDR      R0,??DataTable203_15
   \   00000088   ........           BL       GUI_DrawBitmap
   2326          			GUI_DrawBitmap(&bmCameraText, 60, 0);
   \   0000008C   0020A0E3           MOV      R2,#+0
   \   00000090   3C10A0E3           MOV      R1,#+60
   \   00000094   ........           LDR      R0,??DataTable203_16
   \   00000098   ........           BL       GUI_DrawBitmap
   2327          			GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   0000009C   E520A0E3           MOV      R2,#+229
   \   000000A0   0010A0E3           MOV      R1,#+0
   \   000000A4   ........           LDR      R0,??DataTable203_17
   \   000000A8   ........           BL       GUI_DrawBitmap
   2328          			DrawSignalStrength();
   \   000000AC   1040BDE8           POP      {R4,LR}
   \   000000B0   ........           B        DrawSignalStrength  ;; tailcall
   2329          			break;
   2330          
   2331          		default:
   2332          		  WM_DefaultProc(pMsg);
   \                     ??CameraSelectionCallback_2:
   \   000000B4   0400A0E1           MOV      R0,R4
   \   000000B8   ........           BL       WM_DefaultProc
   2333          	}
   2334          }
   \                     ??CameraSelectionCallback_3:
   \   000000BC   1080BDE8           POP      {R4,PC}          ;; return
   2335          
   2336          //
   2337          // Camera delay screen routines
   2338          //

   \                                 In section .text, align 4, keep-with-next
   2339          GUI_HWIN GetCameraDelayWindowHandle(void)
   2340          {
   2341          	return hCameraDelay;
   \                     GetCameraDelayWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable203_18
   \   00000004   000090E5           LDR      R0,[R0, #+0]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   2342          }

   \                                 In section .data, align 4
   \                     hCameraDelay:
   \   00000000   00000000           DC8 0, 0, 0, 0
   \                     ones:
   \   00000004   00000000           DC8 0, 0, 0, 0
   \                     tenths:
   \   00000008   00000000           DC8 0, 0, 0, 0
   2343          
   2344          LISTWHEEL_Handle hOnesWheel, hTenthsWheel;
   \                     hOnesWheel:
   \   0000000C   00000000           DC8 0, 0, 0, 0
   \                     hTenthsWheel:
   \   00000010   00000000           DC8 0, 0, 0, 0
   2345          char *Digits[] = {
   \                     Digits:
   \   00000014   ............       DC32 `?<Constant "0">`, `?<Constant "1">`, `?<Constant "2">`
   \              ............
   \   00000020   ............       DC32 `?<Constant "3">`, `?<Constant "4">`, `?<Constant "5">`
   \              ............
   \   0000002C   ............       DC32 `?<Constant "6">`, `?<Constant "7">`, `?<Constant "8">`
   \              ............
   \   00000038   ........0000       DC32 `?<Constant "9">`, 0H
   \              0000        
   2346          	"0",
   2347          	"1",
   2348          	"2",
   2349          	"3",
   2350          	"4",
   2351          	"5",
   2352          	"6",
   2353          	"7",
   2354          	"8",
   2355          	"9",
   2356          	NULL
   2357          };
   2358          

   \                                 In section .text, align 4, keep-with-next
   2359          void CreateCameraDelay(WM_HWIN hParent)
   2360          {
   \                     CreateCameraDelay:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   2361          	if (hParent)
   \   00000008   000050E3           CMP      R0,#+0
   \   0000000C   0000000A           BEQ      ??CreateCameraDelay_0
   2362          		WM_DeleteWindow(hParent);
   \   00000010   ........           BL       WM_DeleteWindow
   2363          
   2364          	SetScreenType(CAMERA_DELAY_SCREEN_TYPE);
   \                     ??CreateCameraDelay_0:
   \   00000014   2200A0E3           MOV      R0,#+34
   \   00000018   ........           BL       SetScreenType
   2365          
   2366          	if ((hCameraDelay = WM_CreateWindow(0, 0, XSIZE_PHYS, YSIZE_PHYS, WM_CF_SHOW | WM_CF_MEMDEV_ON_REDRAW, CameraDelayCallback, 0)) <= 0)
   \   0000001C   0000A0E3           MOV      R0,#+0
   \   00000020   08008DE5           STR      R0,[SP, #+8]
   \   00000024   ........           LDR      R0,??DataTable203_19
   \   00000028   443FA0E3           MOV      R3,#+272
   \   0000002C   04008DE5           STR      R0,[SP, #+4]
   \   00000030   0200A0E3           MOV      R0,#+2
   \   00000034   800D80E3           ORR      R0,R0,#0x2000
   \   00000038   00008DE5           STR      R0,[SP, #+0]
   \   0000003C   782FA0E3           MOV      R2,#+480
   \   00000040   0010A0E3           MOV      R1,#+0
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   ........           BL       WM_CreateWindow
   \   0000004C   ........           LDR      R4,??DataTable203_18
   \   00000050   010050E3           CMP      R0,#+1
   \   00000054   000084E5           STR      R0,[R4, #+0]
   \   00000058   000000AA           BGE      ??CreateCameraDelay_1
   2367          		SystemError();
   \   0000005C   ........           BL       SystemError
   \                     ??CreateCameraDelay_1:
   \   00000060   ........           LDR      R0,??DataTable203_2
   \   00000064   ........           LDR      R1,??DataTable203_20  ;; 0x66666667
   \   00000068   0C00D0E5           LDRB     R0,[R0, #+12]
   2368          
   2369          	ones = (vehicleData.usbCameraDelay & 0x7F) / 10;
   2370          	tenths = (vehicleData.usbCameraDelay & 0x7F) % 10;
   2371          
   2372          	// Display first (left) wheel
   2373          	hOnesWheel = LISTWHEEL_CreateEx(TRIPLE_SPINNER_START_1, 50, 69, 208, hCameraDelay, WM_CF_SHOW | WM_CF_HASTRANS, 0, GUI_ID_LISTWHEEL1, Digits);
   \   0000006C   D030A0E3           MOV      R3,#+208
   \   00000070   7F0000E2           AND      R0,R0,#0x7F
   \   00000074   9021C1E0           SMULL    R2,R1,R0,R1
   \   00000078   0A20A0E3           MOV      R2,#+10
   \   0000007C   4111B0E1           ASRS     R1,R1,#+2
   \   00000080   01108142           ADDMI    R1,R1,#+1
   \   00000084   041084E5           STR      R1,[R4, #+4]
   \   00000088   920101E0           MUL      R1,R2,R1
   \   0000008C   4520A0E3           MOV      R2,#+69
   \   00000090   010040E0           SUB      R0,R0,R1
   \   00000094   080084E5           STR      R0,[R4, #+8]
   \   00000098   140084E2           ADD      R0,R4,#+20
   \   0000009C   10008DE5           STR      R0,[SP, #+16]
   \   000000A0   6100A0E3           MOV      R0,#+97
   \   000000A4   800F80E3           ORR      R0,R0,#0x200
   \   000000A8   0C008DE5           STR      R0,[SP, #+12]
   \   000000AC   0000A0E3           MOV      R0,#+0
   \   000000B0   08008DE5           STR      R0,[SP, #+8]
   \   000000B4   0300A0E3           MOV      R0,#+3
   \   000000B8   04008DE5           STR      R0,[SP, #+4]
   \   000000BC   000094E5           LDR      R0,[R4, #+0]
   \   000000C0   3210A0E3           MOV      R1,#+50
   \   000000C4   00008DE5           STR      R0,[SP, #+0]
   \   000000C8   E100A0E3           MOV      R0,#+225
   \   000000CC   ........           BL       LISTWHEEL_CreateEx
   \   000000D0   0C0084E5           STR      R0,[R4, #+12]
   2374          	LISTWHEEL_SetLineHeight(hOnesWheel, 41);
   \   000000D4   2910A0E3           MOV      R1,#+41
   \   000000D8   ........           BL       LISTWHEEL_SetLineHeight
   2375          	LISTWHEEL_SetSnapPosition(hOnesWheel, 87);
   \   000000DC   5710A0E3           MOV      R1,#+87
   \   000000E0   0C0094E5           LDR      R0,[R4, #+12]
   \   000000E4   ........           BL       LISTWHEEL_SetSnapPosition
   2376          	LISTWHEEL_SetFont(hOnesWheel, &GUI_Font24_ASCII);
   \   000000E8   ........           LDR      R5,??DataTable203_21
   \   000000EC   0C0094E5           LDR      R0,[R4, #+12]
   \   000000F0   0510A0E1           MOV      R1,R5
   \   000000F4   ........           BL       LISTWHEEL_SetFont
   2377          	LISTWHEEL_SetTextAlign(hOnesWheel, GUI_TA_CENTER);
   \   000000F8   0210A0E3           MOV      R1,#+2
   \   000000FC   0C0094E5           LDR      R0,[R4, #+12]
   \   00000100   ........           BL       LISTWHEEL_SetTextAlign
   2378          	if (ones < 0)		// Safety check!
   \   00000104   040094E5           LDR      R0,[R4, #+4]
   \   00000108   000050E3           CMP      R0,#+0
   2379          		ones = 0;
   \   0000010C   0000A043           MOVMI    R0,#+0
   \   00000110   0200004A           BMI      ??CreateCameraDelay_2
   2380          	else if (ones > 9)
   \   00000114   0A0050E3           CMP      R0,#+10
   \   00000118   010000BA           BLT      ??CreateCameraDelay_3
   2381          		ones = 9;
   \   0000011C   0900A0E3           MOV      R0,#+9
   \                     ??CreateCameraDelay_2:
   \   00000120   040084E5           STR      R0,[R4, #+4]
   2382          	LISTWHEEL_SetPos(hOnesWheel, ones);
   \                     ??CreateCameraDelay_3:
   \   00000124   041094E5           LDR      R1,[R4, #+4]
   \   00000128   0C0094E5           LDR      R0,[R4, #+12]
   \   0000012C   ........           BL       LISTWHEEL_SetPos
   2383          	LISTWHEEL_SetSel(hOnesWheel, ones);
   \   00000130   041094E5           LDR      R1,[R4, #+4]
   \   00000134   0C0094E5           LDR      R0,[R4, #+12]
   \   00000138   ........           BL       LISTWHEEL_SetSel
   2384          
   2385          	// Display second (middle) wheel
   2386          	hTenthsWheel = LISTWHEEL_CreateEx(TRIPLE_SPINNER_START_2, 50, 69, 208, hCameraDelay, WM_CF_SHOW | WM_CF_HASTRANS, 0, GUI_ID_LISTWHEEL2, Digits);
   \   0000013C   140084E2           ADD      R0,R4,#+20
   \   00000140   10008DE5           STR      R0,[SP, #+16]
   \   00000144   6200A0E3           MOV      R0,#+98
   \   00000148   800F80E3           ORR      R0,R0,#0x200
   \   0000014C   0C008DE5           STR      R0,[SP, #+12]
   \   00000150   0000A0E3           MOV      R0,#+0
   \   00000154   08008DE5           STR      R0,[SP, #+8]
   \   00000158   0300A0E3           MOV      R0,#+3
   \   0000015C   04008DE5           STR      R0,[SP, #+4]
   \   00000160   000094E5           LDR      R0,[R4, #+0]
   \   00000164   D030A0E3           MOV      R3,#+208
   \   00000168   00008DE5           STR      R0,[SP, #+0]
   \   0000016C   4520A0E3           MOV      R2,#+69
   \   00000170   3210A0E3           MOV      R1,#+50
   \   00000174   4C0FA0E3           MOV      R0,#+304
   \   00000178   ........           BL       LISTWHEEL_CreateEx
   \   0000017C   100084E5           STR      R0,[R4, #+16]
   2387          	LISTWHEEL_SetLineHeight(hTenthsWheel, 41);
   \   00000180   2910A0E3           MOV      R1,#+41
   \   00000184   ........           BL       LISTWHEEL_SetLineHeight
   2388          	LISTWHEEL_SetSnapPosition(hTenthsWheel, 87);
   \   00000188   5710A0E3           MOV      R1,#+87
   \   0000018C   100094E5           LDR      R0,[R4, #+16]
   \   00000190   ........           BL       LISTWHEEL_SetSnapPosition
   2389          	LISTWHEEL_SetFont(hTenthsWheel, &GUI_Font24_ASCII);
   \   00000194   0510A0E1           MOV      R1,R5
   \   00000198   100094E5           LDR      R0,[R4, #+16]
   \   0000019C   ........           BL       LISTWHEEL_SetFont
   2390          	LISTWHEEL_SetTextAlign(hTenthsWheel, GUI_TA_CENTER);
   \   000001A0   0210A0E3           MOV      R1,#+2
   \   000001A4   100094E5           LDR      R0,[R4, #+16]
   \   000001A8   ........           BL       LISTWHEEL_SetTextAlign
   2391          	if (tenths < 0)		// Safety check!
   \   000001AC   080094E5           LDR      R0,[R4, #+8]
   \   000001B0   000050E3           CMP      R0,#+0
   2392          		tenths = 0;
   \   000001B4   0000A043           MOVMI    R0,#+0
   \   000001B8   0200004A           BMI      ??CreateCameraDelay_4
   2393          	else if (tenths > 9)
   \   000001BC   0A0050E3           CMP      R0,#+10
   \   000001C0   010000BA           BLT      ??CreateCameraDelay_5
   2394          		tenths = 9;
   \   000001C4   0900A0E3           MOV      R0,#+9
   \                     ??CreateCameraDelay_4:
   \   000001C8   080084E5           STR      R0,[R4, #+8]
   2395          	LISTWHEEL_SetPos(hTenthsWheel, tenths);
   \                     ??CreateCameraDelay_5:
   \   000001CC   081094E5           LDR      R1,[R4, #+8]
   \   000001D0   100094E5           LDR      R0,[R4, #+16]
   \   000001D4   ........           BL       LISTWHEEL_SetPos
   2396          	LISTWHEEL_SetSel(hTenthsWheel, tenths);
   \   000001D8   081094E5           LDR      R1,[R4, #+8]
   \   000001DC   100094E5           LDR      R0,[R4, #+16]
   \   000001E0   ........           BL       LISTWHEEL_SetSel
   2397          
   2398          	hScreenTimer = WM_CreateTimer(hCameraDelay, 0, SETUP_SCREEN_REFRESH_TIME, 0);
   \   000001E4   0030A0E3           MOV      R3,#+0
   \   000001E8   7D20A0E3           MOV      R2,#+125
   \   000001EC   0010A0E3           MOV      R1,#+0
   \   000001F0   000094E5           LDR      R0,[R4, #+0]
   \   000001F4   ........           BL       WM_CreateTimer
   \   000001F8   ........           LDR      R1,??DataTable203_14
   2399          	ResetNewScreen();				// Inform title bar that this is a new screen
   \   000001FC   14D08DE2           ADD      SP,SP,#+20
   \   00000200   000081E5           STR      R0,[R1, #+0]
   \   00000204   3040BDE8           POP      {R4,R5,LR}
   \   00000208   ........           B        ResetNewScreen   ;; tailcall
   2400          }
   2401          

   \                                 In section .text, align 4, keep-with-next
   2402          void SetCameraDelay(void)
   2403          {
   2404          	vehicleData.usbCameraDelay = (vehicleData.usbCameraDelay & 0x80) + ((ones * 10) + tenths);
   \                     SetCameraDelay:
   \   00000000   ........           LDR      R1,??DataTable203_2
   \   00000004   ........           LDR      R0,??DataTable203_18
   \   00000008   0C20D1E5           LDRB     R2,[R1, #+12]
   \   0000000C   043090E5           LDR      R3,[R0, #+4]
   \   00000010   0AC0A0E3           MOV      R12,#+10
   \   00000014   802002E2           AND      R2,R2,#0x80
   \   00000018   832C02E1           SMLABB   R2,R3,R12,R2
   \   0000001C   080090E5           LDR      R0,[R0, #+8]
   \   00000020   020080E0           ADD      R0,R0,R2
   \   00000024   0C00C1E5           STRB     R0,[R1, #+12]
   2405          }
   \   00000028   1EFF2FE1           BX       LR               ;; return
   2406          

   \                                 In section .text, align 4, keep-with-next
   2407          void CameraDelayCallback(WM_MESSAGE * pMsg)
   2408          {
   \                     CameraDelayCallback:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   2409          	int Id;
   2410          
   2411          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   0F0050E2           SUBS     R0,R0,#+15
   \   00000014   2E00000A           BEQ      ??CameraDelayCallback_0
   \   00000018   170050E2           SUBS     R0,R0,#+23
   \   0000001C   0B00000A           BEQ      ??CameraDelayCallback_1
   \   00000020   ED0050E2           SUBS     R0,R0,#+237
   \   00000024   5700001A           BNE      ??CameraDelayCallback_2
   2412          	{
   2413          		case WM_TIMER:
   2414          			if (pMsg->Data.v == hScreenTimer)
   \   00000028   ........           LDR      R0,??DataTable203_14
   \   0000002C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000030   000090E5           LDR      R0,[R0, #+0]
   \   00000034   000051E1           CMP      R1,R0
   \   00000038   5400001A           BNE      ??CameraDelayCallback_3
   2415          			{
   2416          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   0000003C   7D10A0E3           MOV      R1,#+125
   \   00000040   ........           BL       WM_RestartTimer
   2417          				WM_InvalidateWindow(pMsg->hWin);		// Allow timer to invalidate the whole window so we can show live data on the input buttons
   \   00000044   040094E5           LDR      R0,[R4, #+4]
   \   00000048   ........           BL       WM_InvalidateWindow
   \   0000004C   4F0000EA           B        ??CameraDelayCallback_3
   2418          			}
   2419          			break;
   2420          
   2421          		case WM_NOTIFY_PARENT:
   2422          			Id = WM_GetId(pMsg->hWinSrc);		// Id of widget
   \                     ??CameraDelayCallback_1:
   \   00000050   080094E5           LDR      R0,[R4, #+8]
   \   00000054   ........           BL       WM_GetId
   \   00000058   0050A0E1           MOV      R5,R0
   2423          			if (pMsg->Data.v == WM_NOTIFICATION_SEL_CHANGED)
   \   0000005C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000060   040050E3           CMP      R0,#+4
   \   00000064   4900001A           BNE      ??CameraDelayCallback_3
   2424          				if (abs(LISTWHEEL_GetVelocity(pMsg->hWinSrc)) <= 1)
   \   00000068   080094E5           LDR      R0,[R4, #+8]
   \   0000006C   ........           BL       LISTWHEEL_GetVelocity
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   00006042           RSBMI    R0,R0,#+0
   \   00000078   020050E3           CMP      R0,#+2
   \   0000007C   430000AA           BGE      ??CameraDelayCallback_3
   2425          				{
   2426          					if (Id == GUI_ID_LISTWHEEL1)
   \   00000080   6100A0E3           MOV      R0,#+97
   \   00000084   800F80E3           ORR      R0,R0,#0x200
   \   00000088   000055E1           CMP      R5,R0
   \   0000008C   0700001A           BNE      ??CameraDelayCallback_4
   2427          						LISTWHEEL_SetSel(pMsg->hWinSrc, ones = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \   00000090   080094E5           LDR      R0,[R4, #+8]
   \   00000094   ........           BL       LISTWHEEL_GetPos
   \   00000098   0010A0E1           MOV      R1,R0
   \   0000009C   ........           LDR      R0,??DataTable203_18
   \   000000A0   041080E5           STR      R1,[R0, #+4]
   \                     ??CameraDelayCallback_5:
   \   000000A4   080094E5           LDR      R0,[R4, #+8]
   \   000000A8   ........           BL       LISTWHEEL_SetSel
   \   000000AC   370000EA           B        ??CameraDelayCallback_3
   2428          					else if (Id == GUI_ID_LISTWHEEL2)
   \                     ??CameraDelayCallback_4:
   \   000000B0   010080E2           ADD      R0,R0,#+1
   \   000000B4   000055E1           CMP      R5,R0
   \   000000B8   3400001A           BNE      ??CameraDelayCallback_3
   2429          						LISTWHEEL_SetSel(pMsg->hWinSrc, tenths = LISTWHEEL_GetPos(pMsg->hWinSrc));
   \   000000BC   080094E5           LDR      R0,[R4, #+8]
   \   000000C0   ........           BL       LISTWHEEL_GetPos
   \   000000C4   ........           LDR      R1,??DataTable203_18
   \   000000C8   080081E5           STR      R0,[R1, #+8]
   \   000000CC   0010A0E1           MOV      R1,R0
   \   000000D0   F3FFFFEA           B        ??CameraDelayCallback_5
   2430          				}
   2431          			break;
   2432          
   2433          		case WM_PAINT:
   2434          			GUI_DrawBitmap(&bmBackgroundWithPanel, 0, 0);
   \                     ??CameraDelayCallback_0:
   \   000000D4   0020A0E3           MOV      R2,#+0
   \   000000D8   0010A0E3           MOV      R1,#+0
   \   000000DC   ........           LDR      R0,??DataTable203_15
   \   000000E0   ........           BL       GUI_DrawBitmap
   2435          			GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_1, 50);
   \   000000E4   ........           LDR      R4,??DataTable203_22
   \   000000E8   3220A0E3           MOV      R2,#+50
   \   000000EC   E110A0E3           MOV      R1,#+225
   \   000000F0   0400A0E1           MOV      R0,R4
   \   000000F4   ........           BL       GUI_DrawBitmap
   2436          			GUI_DrawBitmap(&bmNarrowSpinner, TRIPLE_SPINNER_START_2, 50);
   \   000000F8   3220A0E3           MOV      R2,#+50
   \   000000FC   4C1FA0E3           MOV      R1,#+304
   \   00000100   0400A0E1           MOV      R0,R4
   \   00000104   ........           BL       GUI_DrawBitmap
   2437          			GUI_DrawBitmap(&bmCameraText, 60, 0);
   \   00000108   0020A0E3           MOV      R2,#+0
   \   0000010C   3C10A0E3           MOV      R1,#+60
   \   00000110   ........           LDR      R0,??DataTable203_16
   \   00000114   ........           BL       GUI_DrawBitmap
   2438          			GUI_DrawBitmap(&bmleftarrow, 0, 229);
   \   00000118   E520A0E3           MOV      R2,#+229
   \   0000011C   0010A0E3           MOV      R1,#+0
   \   00000120   ........           LDR      R0,??DataTable203_17
   \   00000124   ........           BL       GUI_DrawBitmap
   2439          
   2440          			GUI_SetTextMode(GUI_TM_TRANS);
   \   00000128   0200A0E3           MOV      R0,#+2
   \   0000012C   ........           BL       GUI_SetTextMode
   2441          			GUI_SetFont(&GUI_Font24_ASCII);
   \   00000130   ........           LDR      R0,??DataTable203_21
   \   00000134   ........           BL       GUI_SetFont
   2442          			GUI_SetColor(GUI_WHITE);
   \   00000138   FF04E0E3           MVN      R0,#-16777216
   \   0000013C   ........           BL       GUI_SetColor
   2443          			GUI_DispStringHCenterAt("Sync Time", 120, 135);
   \   00000140   8720A0E3           MOV      R2,#+135
   \   00000144   7810A0E3           MOV      R1,#+120
   \   00000148   ............       ADRL     R0,`?<Constant "Sync Time">`
   \              ....        
   \   00000150   ........           BL       GUI_DispStringHCenterAt
   2444          			GUI_DispStringAt("seconds", 380, 135);
   \   00000154   8720A0E3           MOV      R2,#+135
   \   00000158   5F1FA0E3           MOV      R1,#+380
   \   0000015C   ............       ADRL     R0,`?<Constant "seconds">`
   \              ....        
   \   00000164   ........           BL       GUI_DispStringAt
   2445          			GUI_SetFont(&GUI_FontD32);
   \   00000168   ........           LDR      R0,??DataTable203_23
   \   0000016C   ........           BL       GUI_SetFont
   2446          			GUI_DispStringHCenterAt(".", TRIPLE_SPINNER_START_2 - 5, 120);
   \   00000170   7820A0E3           MOV      R2,#+120
   \   00000174   B31082E2           ADD      R1,R2,#+179
   \   00000178   ........           ADR      R0,??DataTable203_3  ;; "."
   \   0000017C   ........           BL       GUI_DispStringHCenterAt
   2447          			DrawSignalStrength();
   \   00000180   ........           BL       DrawSignalStrength
   2448          			break;
   \   00000184   010000EA           B        ??CameraDelayCallback_3
   2449          
   2450          		default:
   2451          		  WM_DefaultProc(pMsg);
   \                     ??CameraDelayCallback_2:
   \   00000188   0400A0E1           MOV      R0,R4
   \   0000018C   ........           BL       WM_DefaultProc
   2452          	}
   2453          }
   \                     ??CameraDelayCallback_3:
   \   00000190   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000194   3080BDE8           POP      {R4,R5,PC}       ;; return
   2454          
   2455          //
   2456          // Change of camera selection - update working variables
   2457          //

   \                                 In section .text, align 4, keep-with-next
   2458          void UpdateCameraVariables(void)
   2459          {
   2460          	originalSUCameraSelection = newSUCameraSelection;
   \                     UpdateCameraVariables:
   \   00000000   ........           LDR      R0,??DataTable203
   \   00000004   5411D0E5           LDRB     R1,[R0, #+340]
   \   00000008   5211C0E5           STRB     R1,[R0, #+338]
   2461          	originalTDCameraSelection = newTDCameraSelection;
   \   0000000C   5511D0E5           LDRB     R1,[R0, #+341]
   \   00000010   5311C0E5           STRB     R1,[R0, #+339]
   2462          }
   \   00000014   1EFF2FE1           BX       LR               ;; return
   2463          
   2464          //
   2465          // Return working values of camera selections.  These routines return the
   2466          // working values of the caemra selection which are always valid - even
   2467          // while on camera settings screens.
   2468          //

   \                                 In section .text, align 4, keep-with-next
   2469          unsigned char GetSUCam(void)
   2470          {
   2471          	return newSUCameraSelection;
   \                     GetSUCam:
   \   00000000   ........           LDR      R0,??DataTable203
   \   00000004   5401D0E5           LDRB     R0,[R0, #+340]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   2472          }
   2473          

   \                                 In section .text, align 4, keep-with-next
   2474          unsigned char GetTDCam(void)
   2475          {
   2476          	return newTDCameraSelection;
   \                     GetTDCam:
   \   00000000   ........           LDR      R0,??DataTable203
   \   00000004   5501D0E5           LDRB     R0,[R0, #+341]
   \   00000008   1EFF2FE1           BX       LR               ;; return
   2477          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable149:
   \   00000000   ........           DC32     screen_scrolling

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable149_1:
   \   00000000   ........           DC32     VehicleSettingMainScreenCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable149_2:
   \   00000000   25750000           DC8      0x25, 0x75, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable149_3:
   \   00000000   ........           DC32     clickedOnVSMScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable149_4:
   \   00000000   ........           DC32     bmTach

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable151:
   \   00000000   ........           DC32     bmCarMetricsButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable152:
   \   00000000   ........           DC32     bmGearRatio

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable153:
   \   00000000   ........           DC32     bmInputs

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable153_1:
   \   00000000   ........           DC32     bmWeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable153_2:
   \   00000000   ........           DC32     bmCamera

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_1:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_2:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_3:
   \   00000000   ........           DC32     bmVehicleSettingsText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_4:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_5:
   \   00000000   25750000           DC8      0x25, 0x75, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_6:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable154_7:
   \   00000000   ........           DC32     GUI_Font32_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable155:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable155_1:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable155_2:
   \   00000000   89180D40           DC32     0x400d1889

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156:
   \   00000000   D34D6210           DC32     0x10624dd3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_1:
   \   00000000   25750000           DC8      0x25, 0x75, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_2:
   \   00000000   ........           DC32     pressingbutton_semaphore

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_3:
   \   00000000   ........           DC32     bmGreenCheck

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_4:
   \   00000000   ........           DC32     DataValues

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable156_5:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157:
   \   00000000   ........           DC32     gpsSimulate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_1:
   \   00000000   ........           DC32     GetTDCam

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_2:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable157_3:
   \   00000000   ........           DC32     bmSmallBlackButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable158:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable158_1:
   \   00000000   ........           DC32     bmTachSetup

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable158_2:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable158_3:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159:
   \   00000000   ........           DC32     GUI_Font20B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_1:
   \   00000000   ........           DC32     bmTachSliderRed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_2:
   \   00000000   ........           DC32     bmTachSliderYellow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_3:
   \   00000000   ........           DC32     bmTachSliderGreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_4:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_5:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_6:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_7:
   \   00000000   433DE83E           DC32     0x3ee83d43

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_8:
   \   00000000   1F85EB51           DC32     0x51eb851f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_9:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_10:
   \   00000000   ........           DC32     ZeroThroughNinty

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_11:
   \   00000000   ........           DC32     ZeroThroughNine

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_12:
   \   00000000   ........           DC32     hAnalog0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_13:
   \   00000000   ........           DC32     bmRedInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_14:
   \   00000000   ........           DC32     bmGreenInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable159_15:
   \   00000000   ........           DC32     bmBrownInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164:
   \   00000000   ........           DC32     bmInputsBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164_1:
   \   00000000   ........           DC32     bmInputText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164_2:
   \   00000000   ........           DC32     LCD_APIListCCW

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable164_3:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable166:
   \   00000000   ........           DC32     bmGreenButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable166_1:
   \   00000000   ........           DC32     bmYellowButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable167:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable168_1:
   \   00000000   ........           DC32     bmGearing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169:
   \   00000000   ........           DC32     bmBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_1:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_2:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable169_3:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable171:
   \   00000000   25750000           DC8      0x25, 0x75, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172:
   \   00000000   ........           DC32     bmNarrowSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_1:
   \   00000000   ........           DC32     bmVehicleWeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_2:
   \   00000000   ........           DC32     AeroGripScreenCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_3:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_4:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_5:
   \   00000000   8FC2F5285C25       DC32     0x28F5C28F,0x4099255C
   \              9940        

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable172_6:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable173:
   \   00000000   ........           DC32     bmBackground

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable173_1:
   \   00000000   ........           DC32     bmAeroandTire

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable174:
   \   00000000   ........           DC32     GUI_Font24B_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable174_1:
   \   00000000   ........           DC32     sysData+0x8F

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable175:
   \   00000000   ........           DC32     bmSliderBlue

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable176:
   \   00000000   ........           DC32     bmSliderGreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable177:
   \   00000000   25730000           DC8      0x25, 0x73, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable177_1:
   \   00000000   ........           DC32     bmBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178:
   \   00000000   ........           DC32     bmOrangeButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178_1:
   \   00000000   0A0A0000           DC8      0x0A, 0x0A, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178_2:
   \   00000000   ........           DC32     bmCarMetricsBanner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable178_3:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable179:
   \   00000000   D3D3D300           DC32     0xd3d3d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable181:
   \   00000000   ........           DC32     sysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182:
   \   00000000   00C8AF48           DC32     0x48afc800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_1:
   \   00000000   C5B3A291           DC32     0x91a2b3c5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_2:
   \   00000000   0020AC40           DC32     0x40ac2000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_3:
   \   00000000   8080FF00           DC32     0xff8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_4:
   \   00000000   80291D48           DC32     0x481d2980

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_5:
   \   00000000   9A757B46           DC32     0x467b759a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_6:
   \   00000000   0050C347           DC32     0x47c35000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_7:
   \   00000000   00408F40           DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable182_8:
   \   00000000   ........           DC32     unsavedSysData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184:
   \   00000000   ........           DC32     bmRedButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_1:
   \   00000000   ........           DC32     bmGreenButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_2:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_3:
   \   00000000   ........           DC32     bmCameraSetupBanner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable184_4:
   \   00000000   80808000           DC32     0x808080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185:
   \   00000000   25730000           DC8      0x25, 0x73, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_1:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable185_2:
   \   00000000   8080FF00           DC32     0xff8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable186:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable187:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable190:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable191:
   \   00000000   ........           DC32     TraqdashCamCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable192:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable194:
   \   00000000   ........           DC32     bmGrayButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable195:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable195_1:
   \   00000000   ........           DC32     bmMediumBlueButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable195_2:
   \   00000000   ........           DC32     bmMediumBlueButtonDark

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable195_3:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197:
   \   00000000   ........           DC32     bmTraqdashCamBanner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable197_1:
   \   00000000   D3D3D300           DC32     0xd3d3d3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203:
   \   00000000   ........           DC32     VehicleSettingsScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_1:
   \   00000000   ........           DC32     suData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_2:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_3:
   \   00000000   2E000000           DC8      ".",0x0,0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_4:
   \   00000000   33338340           DC32     0x40833333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_5:
   \   00000000   ........           DC32     systemSettingsPopupScreen

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_6:
   \   00000000   ........           DC32     popupCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_7:
   \   00000000   ........           DC32     bmBrownInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_8:
   \   00000000   ........           DC32     bmRedInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_9:
   \   00000000   ........           DC32     bmGreenInputButton

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_10:
   \   00000000   ........           DC32     CameraSelectionCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_11:
   \   00000000   ........           DC32     GUI_Font20_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_12:
   \   00000000   8054FF00           DC32     0xff5480

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_13:
   \   00000000   ........           DC32     LISTVIEW_CompareText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_14:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_15:
   \   00000000   ........           DC32     bmBackgroundWithPanel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_16:
   \   00000000   ........           DC32     bmCameraText

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_17:
   \   00000000   ........           DC32     bmleftarrow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_18:
   \   00000000   ........           DC32     hCameraDelay

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_19:
   \   00000000   ........           DC32     CameraDelayCallback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_20:
   \   00000000   67666666           DC32     0x66666667

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_21:
   \   00000000   ........           DC32     GUI_Font24_ASCII

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_22:
   \   00000000   ........           DC32     bmNarrowSpinner

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable203_23:
   \   00000000   ........           DC32     GUI_FontD32

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "None">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4E6F6E650000       DC8 78, 111, 110, 101, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Mobius">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4D6F62697573       DC8 77, 111, 98, 105, 117, 115, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Replay Mini">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   5265706C6179       DC8 82, 101, 112, 108, 97, 121, 32, 77, 105, 110
   \              204D696E    
   \   0000000A   6900               DC8 105, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Current RPM">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   43757272656E       DC8 67, 117, 114, 114, 101, 110, 116, 32, 82, 80
   \              74205250    
   \   0000000A   4D00               DC8 77, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max RPM">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4D6178205250       DC8 77, 97, 120, 32, 82, 80, 77, 0
   \              4D00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Redline Start">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5265646C696E       DC8 82, 101, 100, 108, 105, 110, 101, 32, 83, 116
   \              65205374    
   \   0000000A   617274000000       DC8 97, 114, 116, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "TraqData USB">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 116, 97, 32, 85
   \              74612055    
   \   0000000A   534200000000       DC8 83, 66, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Replay Prime X">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5265706C6179       DC8 82, 101, 112, 108, 97, 121, 32, 80, 114, 105
   \              20507269    
   \   0000000A   6D6520580000       DC8 109, 101, 32, 88, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Replay XD1080">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5265706C6179       DC8 82, 101, 112, 108, 97, 121, 32, 88, 68, 49
   \              20584431    
   \   0000000A   303830000000       DC8 48, 56, 48, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "TraqData HD2">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 116, 97, 32, 72
   \              74612048    
   \   0000000A   443200000000       DC8 68, 50, 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GoPro HERO1 & 2">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   476F50726F20       DC8 71, 111, 80, 114, 111, 32, 72, 69, 82, 79
   \              4845524F    
   \   0000000A   312026203200       DC8 49, 32, 38, 32, 50, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "TraqData/Sync Pro">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 116, 97, 47, 83
   \              74612F53    
   \   0000000A   796E63205072       DC8 121, 110, 99, 32, 80, 114, 111, 0, 0, 0
   \              6F000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Sony HD">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   536F6E792048       DC8 83, 111, 110, 121, 32, 72, 68, 0
   \              4400        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "TraqData HD">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 116, 97, 32, 72
   \              74612048    
   \   0000000A   4400               DC8 68, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "RaceCam HD">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   526163654361       DC8 82, 97, 99, 101, 67, 97, 109, 32, 72, 68
   \              6D204844    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "ChaseCam SD LANC">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   436861736543       DC8 67, 104, 97, 115, 101, 67, 97, 109, 32, 83
   \              616D2053    
   \   0000000A   44204C414E43       DC8 68, 32, 76, 65, 78, 67, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Settings Warning">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   53657474696E       DC8 83, 101, 116, 116, 105, 110, 103, 115, 32, 87
   \              67732057    
   \   0000000A   61726E696E67       DC8 97, 114, 110, 105, 110, 103, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Invalid tachometer co...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   496E76616C69       DC8 73, 110, 118, 97, 108, 105, 100, 32, 116, 97
   \              64207461    
   \   0000000A   63686F6D6574       DC8 99, 104, 111, 109, 101, 116, 101, 114, 32, 99
   \              65722063    
   \   00000014   6F6E66696775       DC8 111, 110, 102, 105, 103, 117, 114, 97, 116, 105
   \              72617469    
   \   0000001E   6F6E2E000000       DC8 111, 110, 46, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Warning Start">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5761726E696E       DC8 87, 97, 114, 110, 105, 110, 103, 32, 83, 116
   \              67205374    
   \   0000000A   617274000000       DC8 97, 114, 116, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Engine Cylinders">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E67696E65       DC8 69, 110, 103, 105, 110, 101, 32, 67, 121, 108
   \              2043796C    
   \   0000000A   696E64657273       DC8 105, 110, 100, 101, 114, 115, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Weight in kilos">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   576569676874       DC8 87, 101, 105, 103, 104, 116, 32, 105, 110, 32
   \              20696E20    
   \   0000000A   6B696C6F7300       DC8 107, 105, 108, 111, 115, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Weight in pounds">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   576569676874       DC8 87, 101, 105, 103, 104, 116, 32, 105, 110, 32
   \              20696E20    
   \   0000000A   706F756E6473       DC8 112, 111, 117, 110, 100, 115, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ANALOG">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   414E414C4F47       DC8 65, 78, 65, 76, 79, 71, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "DIGITAL">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   444947495441       DC8 68, 73, 71, 73, 84, 65, 76, 0
   \              4C00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Tire Size">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 84, 105, 114, 101
   \              54697265    
   \   0000000A   2053697A6500       DC8 32, 83, 105, 122, 101, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Diff Ratio">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 68, 105, 102, 102
   \              44696666    
   \   0000000A   20526174696F       DC8 32, 82, 97, 116, 105, 111, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Enter Trans Ratios">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   456E74657220       DC8 69, 110, 116, 101, 114, 32, 84, 114, 97, 110
   \              5472616E    
   \   0000000A   732052617469       DC8 115, 32, 82, 97, 116, 105, 111, 115, 0, 0
   \              6F730000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Gearing Help">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   47656172696E       DC8 71, 101, 97, 114, 105, 110, 103, 32, 72, 101
   \              67204865    
   \   0000000A   6C7000000000       DC8 108, 112, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%u/%u*%u">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25752F25752A       DC8 37, 117, 47, 37, 117, 42, 37, 117, 0, 0
   \              25750000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Gearing Disabled">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   47656172696E       DC8 71, 101, 97, 114, 105, 110, 103, 32, 68, 105
   \              67204469    
   \   0000000A   7361626C6564       DC8 115, 97, 98, 108, 101, 100, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%.2f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   252E32660000       DC8 37, 46, 50, 102, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Transmission Ratios">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   5472616E736D       DC8 84, 114, 97, 110, 115, 109, 105, 115, 115, 105
   \              69737369    
   \   0000000A   6F6E20526174       DC8 111, 110, 32, 82, 97, 116, 105, 111, 115, 0
   \              696F7300    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "1st:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3173743A0000       DC8 49, 115, 116, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "2nd:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   326E643A0000       DC8 50, 110, 100, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "3rd:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3372643A0000       DC8 51, 114, 100, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "4th:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3474683A0000       DC8 52, 116, 104, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "5th:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3574683A0000       DC8 53, 116, 104, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "6th:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3674683A0000       DC8 54, 116, 104, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "7th:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3774683A0000       DC8 55, 116, 104, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "8th:">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   3874683A0000       DC8 56, 116, 104, 58, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Drag Coefficient (Cd)...">`:
   \   00000000                      ; Initializer data, 44 bytes
   \   00000000   447261672043       DC8 68, 114, 97, 103, 32, 67, 111, 101, 102, 102
   \              6F656666    
   \   0000000A   696369656E74       DC8 105, 99, 105, 101, 110, 116, 32, 40, 67, 100
   \              20284364    
   \   00000014   292078204672       DC8 41, 32, 120, 32, 70, 114, 111, 110, 116, 97
   \              6F6E7461    
   \   0000001E   6C2041726561       DC8 108, 32, 65, 114, 101, 97, 32, 40, 109, 94
   \              20286D5E    
   \   00000028   32290000           DC8 50, 41, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Tire Friction Crr Rol...">`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   546972652046       DC8 84, 105, 114, 101, 32, 70, 114, 105, 99, 116
   \              72696374    
   \   0000000A   696F6E204372       DC8 105, 111, 110, 32, 67, 114, 114, 32, 82, 111
   \              7220526F    
   \   00000014   6C6C696E6720       DC8 108, 108, 105, 110, 103, 32, 82, 101, 115, 105
   \              52657369    
   \   0000001E   7374616E6365       DC8 115, 116, 97, 110, 99, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.03f">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   25302E303366       DC8 37, 48, 46, 48, 51, 102, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Vehicle: %s">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   56656869636C       DC8 86, 101, 104, 105, 99, 108, 101, 58, 32, 37
   \              653A2025    
   \   0000000A   7300               DC8 115, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reset Total Time">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 84, 111, 116, 97
   \              546F7461    
   \   0000000A   6C2054696D65       DC8 108, 32, 84, 105, 109, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reset Total Distance">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 84, 111, 116, 97
   \              546F7461    
   \   0000000A   6C2044697374       DC8 108, 32, 68, 105, 115, 116, 97, 110, 99, 101
   \              616E6365    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reset Max RPM">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 77, 97, 120, 32
   \              4D617820    
   \   0000000A   52504D000000       DC8 82, 80, 77, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Aero/Grip">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4165726F2F47       DC8 65, 101, 114, 111, 47, 71, 114, 105, 112, 0
   \              72697000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Reset All">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   526573657420       DC8 82, 101, 115, 101, 116, 32, 65, 108, 108, 0
   \              416C6C00    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Total Time:">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   546F74616C20       DC8 84, 111, 116, 97, 108, 32, 84, 105, 109, 101
   \              54696D65    
   \   0000000A   3A00               DC8 58, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Total Distance:">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   546F74616C20       DC8 84, 111, 116, 97, 108, 32, 68, 105, 115, 116
   \              44697374    
   \   0000000A   616E63653A00       DC8 97, 110, 99, 101, 58, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Max RPM:">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4D6178205250       DC8 77, 97, 120, 32, 82, 80, 77, 58, 0, 0
   \              4D3A0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Aero (Cd)">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4165726F2028       DC8 65, 101, 114, 111, 32, 40, 67, 100, 41, 0
   \              43642900    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Grip (Crr)">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   477269702028       DC8 71, 114, 105, 112, 32, 40, 67, 114, 114, 41
   \              43727229    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%u hr">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   257520687200       DC8 37, 117, 32, 104, 114, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.1f hr">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E316620       DC8 37, 48, 46, 49, 102, 32, 104, 114, 0, 0
   \              68720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.2f hr">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E326620       DC8 37, 48, 46, 50, 102, 32, 104, 114, 0, 0
   \              68720000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%u mi">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2575206D6900       DC8 37, 117, 32, 109, 105, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.1f mi">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E316620       DC8 37, 48, 46, 49, 102, 32, 109, 105, 0, 0
   \              6D690000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.2f mi">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E326620       DC8 37, 48, 46, 50, 102, 32, 109, 105, 0, 0
   \              6D690000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%u km">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   2575206B6D00       DC8 37, 117, 32, 107, 109, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.1f km">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E316620       DC8 37, 48, 46, 49, 102, 32, 107, 109, 0, 0
   \              6B6D0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.2f km">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E326620       DC8 37, 48, 46, 50, 102, 32, 107, 109, 0, 0
   \              6B6D0000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TraqDash USB Port">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 115, 104, 32, 85
   \              73682055    
   \   0000000A   534220506F72       DC8 83, 66, 32, 80, 111, 114, 116, 0, 0, 0
   \              74000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sensor Unit Box">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53656E736F72       DC8 83, 101, 110, 115, 111, 114, 32, 85, 110, 105
   \              20556E69    
   \   0000000A   7420426F7800       DC8 116, 32, 66, 111, 120, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Test Camera(s)">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   546573742043       DC8 84, 101, 115, 116, 32, 67, 97, 109, 101, 114
   \              616D6572    
   \   0000000A   612873290000       DC8 97, 40, 115, 41, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera Connection">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 67, 111, 110
   \              20436F6E    
   \   0000000A   6E656374696F       DC8 110, 101, 99, 116, 105, 111, 110, 0, 0, 0
   \              6E000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera Settings">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 32, 83, 101, 116
   \              20536574    
   \   0000000A   74696E677300       DC8 116, 105, 110, 103, 115, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sensor Unit Camera Box">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   53656E736F72       DC8 83, 101, 110, 115, 111, 114, 32, 85, 110, 105
   \              20556E69    
   \   0000000A   742043616D65       DC8 116, 32, 67, 97, 109, 101, 114, 97, 32, 66
   \              72612042    
   \   00000014   6F780000           DC8 111, 120, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%s (%u.%usec)">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   257320282575       DC8 37, 115, 32, 40, 37, 117, 46, 37, 117, 115
   \              2E257573    
   \   0000000A   656329000000       DC8 101, 99, 41, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "TraqDash USB Camera">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   547261714461       DC8 84, 114, 97, 113, 68, 97, 115, 104, 32, 85
   \              73682055    
   \   0000000A   53422043616D       DC8 83, 66, 32, 67, 97, 109, 101, 114, 97, 0
   \              65726100    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Not Supported">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4E6F74205375       DC8 78, 111, 116, 32, 83, 117, 112, 112, 111, 114
   \              70706F72    
   \   0000000A   746564000000       DC8 116, 101, 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera(s) Active">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 40, 115, 41, 32
   \              28732920    
   \   0000000A   416374697665       DC8 65, 99, 116, 105, 118, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera(s) Not Active">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 40, 115, 41, 32
   \              28732920    
   \   0000000A   4E6F74204163       DC8 78, 111, 116, 32, 65, 99, 116, 105, 118, 101
   \              74697665    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Selected Camera(s)\\nSU: ">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 101, 100, 32, 67
   \              65642043    
   \   0000000A   616D65726128       DC8 97, 109, 101, 114, 97, 40, 115, 41, 10, 83
   \              73290A53    
   \   00000014   553A2000           DC8 85, 58, 32, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Would you like to go ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   576F756C6420       DC8 87, 111, 117, 108, 100, 32, 121, 111, 117, 32
   \              796F7520    
   \   0000000A   6C696B652074       DC8 108, 105, 107, 101, 32, 116, 111, 32, 103, 111
   \              6F20676F    
   \   00000014   206261636B20       DC8 32, 98, 97, 99, 107, 32, 111, 114, 0, 0
   \              6F720000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nUSB: ">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A5553423A20       DC8 10, 85, 83, 66, 58, 32, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "USB Camera">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   555342204361       DC8 85, 83, 66, 32, 67, 97, 109, 101, 114, 97
   \              6D657261    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Replay Prime-X">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   5265706C6179       DC8 82, 101, 112, 108, 97, 121, 32, 80, 114, 105
   \              20507269    
   \   0000000A   6D652D580000       DC8 109, 101, 45, 88, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "None selected">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   4E6F6E652073       DC8 78, 111, 110, 101, 32, 115, 101, 108, 101, 99
   \              656C6563    
   \   0000000A   746564000000       DC8 116, 101, 100, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Prime-X">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   5072696D652D       DC8 80, 114, 105, 109, 101, 45, 88, 0
   \              5800        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Mini">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   4D696E690000       DC8 77, 105, 110, 105, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Custom Sync Time">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   437573746F6D       DC8 67, 117, 115, 116, 111, 109, 32, 83, 121, 110
   \              2053796E    
   \   0000000A   632054696D65       DC8 99, 32, 84, 105, 109, 101, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Select Camera">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   53656C656374       DC8 83, 101, 108, 101, 99, 116, 32, 67, 97, 109
   \              2043616D    
   \   0000000A   657261000000       DC8 101, 114, 97, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Current Settings">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   43757272656E       DC8 67, 117, 114, 114, 101, 110, 116, 32, 83, 101
   \              74205365    
   \   0000000A   7474696E6773       DC8 116, 116, 105, 110, 103, 115, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "No Camera Enabled">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   4E6F2043616D       DC8 78, 111, 32, 67, 97, 109, 101, 114, 97, 32
   \              65726120    
   \   0000000A   456E61626C65       DC8 69, 110, 97, 98, 108, 101, 100, 0, 0, 0
   \              64000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%u.%usec">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25752E257573       DC8 37, 117, 46, 37, 117, 115, 101, 99, 0, 0
   \              65630000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Default Sync Time">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   44656661756C       DC8 68, 101, 102, 97, 117, 108, 116, 32, 83, 121
   \              74205379    
   \   0000000A   6E632054696D       DC8 110, 99, 32, 84, 105, 109, 101, 0, 0, 0
   \              65000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Disabled">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   44697361626C       DC8 68, 105, 115, 97, 98, 108, 101, 100, 0, 0
   \              65640000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "%0.1f\\n%s">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   25302E31660A       DC8 37, 48, 46, 49, 102, 10, 37, 115, 0, 0
   \              25730000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Camera">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Interface">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   496E74657266       DC8 73, 110, 116, 101, 114, 102, 97, 99, 101, 0
   \              61636500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sync Time">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   53796E632054       DC8 83, 121, 110, 99, 32, 84, 105, 109, 101, 0
   \              696D6500    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "have us auto-fix the ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   686176652075       DC8 104, 97, 118, 101, 32, 117, 115, 32, 97, 117
   \              73206175    
   \   0000000A   746F2D666978       DC8 116, 111, 45, 102, 105, 120, 32, 116, 104, 101
   \              20746865    
   \   00000014   20646174613F       DC8 32, 100, 97, 116, 97, 63, 0, 0
   \              0000        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Go Back">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   476F20426163       DC8 71, 111, 32, 66, 97, 99, 107, 0
   \              6B00        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Auto-Fix">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4175746F2D46       DC8 65, 117, 116, 111, 45, 70, 105, 120, 0, 0
   \              69780000    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Invalid Gear Ratios.">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   496E76616C69       DC8 73, 110, 118, 97, 108, 105, 100, 32, 71, 101
   \              64204765    
   \   0000000A   617220526174       DC8 97, 114, 32, 82, 97, 116, 105, 111, 115, 46
   \              696F732E    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Invalid vehicle weight.">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   496E76616C69       DC8 73, 110, 118, 97, 108, 105, 100, 32, 118, 101
   \              64207665    
   \   0000000A   6869636C6520       DC8 104, 105, 99, 108, 101, 32, 119, 101, 105, 103
   \              77656967    
   \   00000014   68742E00           DC8 104, 116, 46, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "You entered a diff ra...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   596F7520656E       DC8 89, 111, 117, 32, 101, 110, 116, 101, 114, 101
   \              74657265    
   \   0000000A   642061206469       DC8 100, 32, 97, 32, 100, 105, 102, 102, 32, 114
   \              66662072    
   \   00000014   6174696F206F       DC8 97, 116, 105, 111, 32, 111, 102, 32, 48, 46
   \              6620302E    
   \   0000001E   30302E000000       DC8 48, 48, 46, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "This will disable gea...">`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   546869732077       DC8 84, 104, 105, 115, 32, 119, 105, 108, 108, 32
   \              696C6C20    
   \   0000000A   64697361626C       DC8 100, 105, 115, 97, 98, 108, 101, 32, 103, 101
   \              65206765    
   \   00000014   61722063616C       DC8 97, 114, 32, 99, 97, 108, 99, 117, 108, 97
   \              63756C61    
   \   0000001E   74696F6E732E       DC8 116, 105, 111, 110, 115, 46, 0, 0, 0, 0
   \              00000000    

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Confirm">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   436F6E666972       DC8 67, 111, 110, 102, 105, 114, 109, 0
   \              6D00        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "GoPro HD and Replay X...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   476F50726F20       DC8 71, 111, 80, 114, 111, 32, 72, 68, 32, 97
   \              48442061    
   \   0000000A   6E6420526570       DC8 110, 100, 32, 82, 101, 112, 108, 97, 121, 32
   \              6C617920    
   \   00000014   58442063616D       DC8 88, 68, 32, 99, 97, 109, 101, 114, 97, 115
   \              65726173    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "require Sensor Unit f...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   726571756972       DC8 114, 101, 113, 117, 105, 114, 101, 32, 83, 101
   \              65205365    
   \   0000000A   6E736F722055       DC8 110, 115, 111, 114, 32, 85, 110, 105, 116, 32
   \              6E697420    
   \   00000014   6669726D7761       DC8 102, 105, 114, 109, 119, 97, 114, 101, 0, 0
   \              72650000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "seconds">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   7365636F6E64       DC8 115, 101, 99, 111, 110, 100, 115, 0
   \              7300        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "version 3.40 or newer.">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   76657273696F       DC8 118, 101, 114, 115, 105, 111, 110, 32, 51, 46
   \              6E20332E    
   \   0000000A   3430206F7220       DC8 52, 48, 32, 111, 114, 32, 110, 101, 119, 101
   \              6E657765    
   \   00000014   722E0000           DC8 114, 46, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "OK">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4F4B0000           DC8 79, 75, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Cameras connected to ...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   43616D657261       DC8 67, 97, 109, 101, 114, 97, 115, 32, 99, 111
   \              7320636F    
   \   0000000A   6E6E65637465       DC8 110, 110, 101, 99, 116, 101, 100, 32, 116, 111
   \              6420746F    
   \   00000014   206120547261       DC8 32, 97, 32, 84, 114, 97, 113, 68, 97, 116
   \              71446174    
   \   0000001E   6100               DC8 97, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "USB module require Se...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   555342206D6F       DC8 85, 83, 66, 32, 109, 111, 100, 117, 108, 101
   \              64756C65    
   \   0000000A   207265717569       DC8 32, 114, 101, 113, 117, 105, 114, 101, 32, 83
   \              72652053    
   \   00000014   656E736F7220       DC8 101, 110, 115, 111, 114, 32, 85, 110, 105, 116
   \              556E6974    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "firmware version 3.70...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   6669726D7761       DC8 102, 105, 114, 109, 119, 97, 114, 101, 32, 118
   \              72652076    
   \   0000000A   657273696F6E       DC8 101, 114, 115, 105, 111, 110, 32, 51, 46, 55
   \              20332E37    
   \   00000014   30206F72206E       DC8 48, 32, 111, 114, 32, 110, 101, 119, 101, 114
   \              65776572    
   \   0000001E   2E00               DC8 46, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "You have changed came...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   596F75206861       DC8 89, 111, 117, 32, 104, 97, 118, 101, 32, 99
   \              76652063    
   \   0000000A   68616E676564       DC8 104, 97, 110, 103, 101, 100, 32, 99, 97, 109
   \              2063616D    
   \   00000014   657261207365       DC8 101, 114, 97, 32, 115, 101, 108, 101, 99, 116
   \              6C656374    
   \   0000001E   696F6E000000       DC8 105, 111, 110, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "which requires a powe...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   776869636820       DC8 119, 104, 105, 99, 104, 32, 114, 101, 113, 117
   \              72657175    
   \   0000000A   697265732061       DC8 105, 114, 101, 115, 32, 97, 32, 112, 111, 119
   \              20706F77    
   \   00000014   657220637963       DC8 101, 114, 32, 99, 121, 99, 108, 101, 46, 0
   \              6C652E00    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "Would you like to pow...">`:
   \   00000000                      ; Initializer data, 36 bytes
   \   00000000   576F756C6420       DC8 87, 111, 117, 108, 100, 32, 121, 111, 117, 32
   \              796F7520    
   \   0000000A   6C696B652074       DC8 108, 105, 107, 101, 32, 116, 111, 32, 112, 111
   \              6F20706F    
   \   00000014   77657220646F       DC8 119, 101, 114, 32, 100, 111, 119, 110, 32, 110
   \              776E206E    
   \   0000001E   6F773F000000       DC8 111, 119, 63, 0, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "YES">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   59455300           DC8 89, 69, 83, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "NO">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   4E4F0000           DC8 78, 79, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "The camera you had se...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   546865206361       DC8 84, 104, 101, 32, 99, 97, 109, 101, 114, 97
   \              6D657261    
   \   0000000A   20796F752068       DC8 32, 121, 111, 117, 32, 104, 97, 100, 32, 115
   \              61642073    
   \   00000014   656C65637465       DC8 101, 108, 101, 99, 116, 101, 100, 0
   \              6400        

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "is no longer supporte...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   6973206E6F20       DC8 105, 115, 32, 110, 111, 32, 108, 111, 110, 103
   \              6C6F6E67    
   \   0000000A   657220737570       DC8 101, 114, 32, 115, 117, 112, 112, 111, 114, 116
   \              706F7274    
   \   00000014   65642E20596F       DC8 101, 100, 46, 32, 89, 111, 117, 114, 0, 0
   \              75720000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "selection has been di...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   73656C656374       DC8 115, 101, 108, 101, 99, 116, 105, 111, 110, 32
   \              696F6E20    
   \   0000000A   686173206265       DC8 104, 97, 115, 32, 98, 101, 101, 110, 32, 100
   \              656E2064    
   \   00000014   697361626C65       DC8 105, 115, 97, 98, 108, 101, 100, 46, 0, 0
   \              642E0000    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "0">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3000               DC8 48, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "1">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3100               DC8 49, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "2">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3200               DC8 50, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "3">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3300               DC8 51, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "4">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3400               DC8 52, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "5">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3500               DC8 53, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "6">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3600               DC8 54, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "7">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3700               DC8 55, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "8">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3800               DC8 56, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant "9">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   3900               DC8 57, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%u">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25750000           DC8 37, 117, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%s">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25730000           DC8 37, 115, 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "\\n\\n">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   0A0A0000           DC8 10, 10, 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     `?<Constant ".">`:
   \   00000000                      ; Initializer data, 2 bytes
   \   00000000   2E00               DC8 46, 0
   2478          
   2479          
   2480          /*************************** End of file ****************************/
   2481          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     AeroGripScreenCallback              8
     AeroGripScreenPaint                64
     AutoFixGears                       48
     AutoFixTach                        32
     AutoFixWeight                       0
     CameraDelayCallback                16
     CameraSelectionCallback             8
     CameraSetupPaint                   48
     CarMetricsSelectionPaint           48
     CreateAeroGripScreen               32
     CreateCameraDelay                  32
     CreateCameraSelection              48
     CreateTraqdashCamScreen            40
     CustomDelay                         0
     DisplayCameraSetupSelection        40
     DisplayCarMetricsSelection         40
     DisplayGearRatio                   40
     DisplayInputsSelection             72
     DisplayTachSelection               64
     DisplayWeightSelection             64
     Display_VehicleSettingMainScreen
                                        24
     GearRatioPaint                     40
     GetAeroGripWindowHandle             0
     GetCameraDelayWindowHandle          0
     GetCameraName                       0
     GetCameraSelectionWindowHandle      0
     GetFullCameraText                   8
     GetSUCam                            0
     GetTDCam                            0
     GetTraqdashCamWindowHandle          0
     GetTraqdashCameraName               0
     GetVehicleSettingMainWindowHandle
                                         0
     GetVehicleSettingsWindowHandle      0
     InputsSelectionPaint               48
     RSDisplayInputsSelection           16
     ResetSliderParams                  56
     SetAnalogColorAndText              40
     SetCameraButtonColors               8
     SetCameraDelay                      0
     SetDigitalColorAndText             16
     SetNumCylsButtonText                8
     SetRedlineButtonText               24
     SetVehicleSettingMainWindowHandle
                                         0
     SetVehicleSettingsWindowHandle      0
     SetYellowButtonText                24
     TachSelectionPaint                 48
     TestCameras                         8
     TraqdashCamCallback                 8
     TraqdashCamPaint                   48
     UpdateAll                          24
     UpdateCameraVariables               0
     UpdateDistance                     32
     UpdateRPM                          24
     UpdateTime                         32
     ValidateCamera                     16
     ValidateCameraData                 16
     ValidateDiffRatio                   8
     ValidateVehicleData                 8
     VehicleSettingMainScreenCallback
                                         8
     VehicleSettingsIgnoreNextKeyRelease
                                         0
     VehicleSettingsPopUp               16
     VehicleSettingsScreensCallback     40
     WeightSelectionPaint                8


   Section sizes:

     Function/Label                         Bytes
     --------------                         -----
     clickedOnVSMScreen                        8
     hVehicleSettingMainScreen
     hAnalog0                                 24
     hAnalog1
     hAnalog2
     hAnalog3
     hDigital4
     hDigital5
     VehicleSettingsScreenList               342
     NewCameras
     hCurrentRPMBtn
     hBtnMobius
     hBtnPrimeX
     hBtnMini
     hBtnNone
     hAeroGripScreen
     hCameraSelection
     hTraqdashCam
     testCamera
     hCameraDelayTimer
     hVehicleSettingsScreens
     clickedOnVSScreen
     hWeightWheel1
     hWeightWheel2
     hWeightWheel3
     hWindSlider
     hRollSlider
     hRedlineSlider
     hYellowSlider
     hCylindersSlider
     hRedlineBtn
     hYellowBtn
     hNumCylsBtn
     hShowSpeedCheck
     hShowRPMCheck
     tempCameraIndex
     hCameraList
     redFirstTime
     yellowFirstTime
     originalSUCameraSelection
     originalTDCameraSelection
     newSUCameraSelection
     newTDCameraSelection
     Display_VehicleSettingMainScreen
                                             556
     VehicleSettingMainScreenCallback
                                             256
     GetVehicleSettingMainWindowHandle
                                              12
     SetVehicleSettingMainWindowHandle
                                              12
     GetVehicleSettingsWindowHandle           12
     SetVehicleSettingsWindowHandle           12
     VehicleSettingsScreensCallback         2268
     TestCameras                              88
     DisplayTachSelection                    684
     SetRedlineButtonText                     52
     SetYellowButtonText                      52
     SetNumCylsButtonText                     36
     ResetSliderParams                       268
     TachSelectionPaint                      480
     DisplayWeightSelection                  272
     RSDisplayInputsSelection                 60
     DisplayInputsSelection                 1408
     InputsSelectionPaint                   1316
     DisplayGearRatio                        428
     GearRatioPaint                         1032
     WeightSelectionPaint                    112
     GetAeroGripWindowHandle                  12
     CreateAeroGripScreen                    372
     AeroGripScreenCallback                  256
     AeroGripScreenPaint                     420
     DisplayCarMetricsSelection              692
     TimeRect                                  8
     DistRect                                  8
     RPMRect                                   8
     CarMetricsSelectionPaint                560
     UpdateAll                                80
     UpdateTime                              180
     UpdateDistance                          284
     UpdateRPM                                72
     DisplayCameraSetupSelection             444
     CameraSetupPaint                        832
     CustomDelay                              92
     GetFullCameraText                       168
     GetCameraName                            72
     GetTraqdashCameraName                    88
     ValidateCameraData                      140
     CreateTraqdashCamScreen                 772
     SetCameraButtonColors                   124
     GetTraqdashCamWindowHandle               12
     TraqdashCamCallback                     288
     TraqdashCamPaint                        732
     VehicleSettingsIgnoreNextKeyRelease
                                              16
     ValidateVehicleData                     416
     ValidateCamera                          340
     ValidateDiffRatio                        60
     AutoFixTach                             128
     AutoFixGears                            232
     AutoFixWeight                            20
     InvalidTachResources                    144
     InvalidGearResources                    144
     InvalidWeightResources                  144
     NoGearsResources                        120
     GoProWarningResources                   144
     SURev370WarningResources                144
     ChangedCameraResources                  144
     ResetCameraResources                    120
     VehicleSettingsPopUp                    416
     SetAnalogColorAndText                   196
     SetDigitalColorAndText                  120
     GetCameraSelectionWindowHandle           12
     CreateCameraSelection                   552
     CameraSelectionCallback                 192
     GetCameraDelayWindowHandle               12
     hCameraDelay                             64
     ones
     tenths
     hOnesWheel
     hTenthsWheel
     Digits
     CreateCameraDelay                       524
     SetCameraDelay                           44
     CameraDelayCallback                     408
     UpdateCameraVariables                    24
     GetSUCam                                 12
     GetTDCam                                 12
     ??DataTable149                            4
     ??DataTable149_1                          4
     ??DataTable149_2                          4
     ??DataTable149_3                          4
     ??DataTable149_4                          4
     ??DataTable151                            4
     ??DataTable152                            4
     ??DataTable153                            4
     ??DataTable153_1                          4
     ??DataTable153_2                          4
     ??DataTable154                            4
     ??DataTable154_1                          4
     ??DataTable154_2                          4
     ??DataTable154_3                          4
     ??DataTable154_4                          4
     ??DataTable154_5                          4
     ??DataTable154_6                          4
     ??DataTable154_7                          4
     ??DataTable155                            4
     ??DataTable155_1                          4
     ??DataTable155_2                          4
     ??DataTable156                            4
     ??DataTable156_1                          4
     ??DataTable156_2                          4
     ??DataTable156_3                          4
     ??DataTable156_4                          4
     ??DataTable156_5                          4
     ??DataTable157                            4
     ??DataTable157_1                          4
     ??DataTable157_2                          4
     ??DataTable157_3                          4
     ??DataTable158                            4
     ??DataTable158_1                          4
     ??DataTable158_2                          4
     ??DataTable158_3                          4
     ??DataTable159                            4
     ??DataTable159_1                          4
     ??DataTable159_2                          4
     ??DataTable159_3                          4
     ??DataTable159_4                          4
     ??DataTable159_5                          4
     ??DataTable159_6                          4
     ??DataTable159_7                          4
     ??DataTable159_8                          4
     ??DataTable159_9                          4
     ??DataTable159_10                         4
     ??DataTable159_11                         4
     ??DataTable159_12                         4
     ??DataTable159_13                         4
     ??DataTable159_14                         4
     ??DataTable159_15                         4
     ??DataTable164                            4
     ??DataTable164_1                          4
     ??DataTable164_2                          4
     ??DataTable164_3                          4
     ??DataTable166                            4
     ??DataTable166_1                          4
     ??DataTable167                            4
     ??DataTable168                            4
     ??DataTable168_1                          4
     ??DataTable169                            4
     ??DataTable169_1                          4
     ??DataTable169_2                          4
     ??DataTable169_3                          4
     ??DataTable171                            4
     ??DataTable172                            4
     ??DataTable172_1                          4
     ??DataTable172_2                          4
     ??DataTable172_3                          4
     ??DataTable172_4                          4
     ??DataTable172_5                          8
     ??DataTable172_6                          4
     ??DataTable173                            4
     ??DataTable173_1                          4
     ??DataTable174                            4
     ??DataTable174_1                          4
     ??DataTable175                            4
     ??DataTable176                            4
     ??DataTable177                            4
     ??DataTable177_1                          4
     ??DataTable178                            4
     ??DataTable178_1                          4
     ??DataTable178_2                          4
     ??DataTable178_3                          4
     ??DataTable179                            4
     ??DataTable181                            4
     ??DataTable182                            4
     ??DataTable182_1                          4
     ??DataTable182_2                          4
     ??DataTable182_3                          4
     ??DataTable182_4                          4
     ??DataTable182_5                          4
     ??DataTable182_6                          4
     ??DataTable182_7                          4
     ??DataTable182_8                          4
     ??DataTable184                            4
     ??DataTable184_1                          4
     ??DataTable184_2                          4
     ??DataTable184_3                          4
     ??DataTable184_4                          4
     ??DataTable185                            4
     ??DataTable185_1                          4
     ??DataTable185_2                          4
     ??DataTable186                            4
     ??DataTable187                            4
     ??DataTable190                            4
     ??DataTable191                            4
     ??DataTable192                            4
     ??DataTable194                            4
     ??DataTable195                            4
     ??DataTable195_1                          4
     ??DataTable195_2                          4
     ??DataTable195_3                          4
     ??DataTable197                            4
     ??DataTable197_1                          4
     ??DataTable203                            4
     ??DataTable203_1                          4
     ??DataTable203_2                          4
     ??DataTable203_3                          4
     ??DataTable203_4                          4
     ??DataTable203_5                          4
     ??DataTable203_6                          4
     ??DataTable203_7                          4
     ??DataTable203_8                          4
     ??DataTable203_9                          4
     ??DataTable203_10                         4
     ??DataTable203_11                         4
     ??DataTable203_12                         4
     ??DataTable203_13                         4
     ??DataTable203_14                         4
     ??DataTable203_15                         4
     ??DataTable203_16                         4
     ??DataTable203_17                         4
     ??DataTable203_18                         4
     ??DataTable203_19                         4
     ??DataTable203_20                         4
     ??DataTable203_21                         4
     ??DataTable203_22                         4
     ??DataTable203_23                         4
     ?<Constant "None">                        8
     ?<Constant "Mobius">                      8
     ?<Constant "Replay Mini">                12
     ?<Constant "Current RPM">                12
     ?<Constant "Max RPM">                     8
     ?<Constant "Redline Start">              16
     ?<Constant "TraqData USB">               16
     ?<Constant "Replay Prime X">             16
     ?<Constant "Replay XD1080">              16
     ?<Constant "TraqData HD2">               16
     ?<Constant "GoPro HERO1 & 2">            16
     ?<Constant "TraqData/Sync Pro">          20
     ?<Constant "Sony HD">                     8
     ?<Constant "TraqData HD">                12
     ?<Constant "RaceCam HD">                 12
     ?<Constant "ChaseCam SD LANC">           20
     ?<Constant "Settings Warning">           20
     ?<Constant "Invalid tachometer co...">   36
     ?<Constant "Warning Start">              16
     ?<Constant "Engine Cylinders">           20
     ?<Constant "Weight in kilos">            16
     ?<Constant "Weight in pounds">           20
     ?<Constant "ANALOG">                      8
     ?<Constant "DIGITAL">                     8
     ?<Constant "Enter Tire Size">            16
     ?<Constant "Enter Diff Ratio">           20
     ?<Constant "Enter Trans Ratios">         20
     ?<Constant "Gearing Help">               16
     ?<Constant "%u/%u*%u">                   12
     ?<Constant "Gearing Disabled">           20
     ?<Constant "%.2f">                        8
     ?<Constant "Transmission Ratios">        20
     ?<Constant "1st:">                        8
     ?<Constant "2nd:">                        8
     ?<Constant "3rd:">                        8
     ?<Constant "4th:">                        8
     ?<Constant "5th:">                        8
     ?<Constant "6th:">                        8
     ?<Constant "7th:">                        8
     ?<Constant "8th:">                        8
     ?<Constant "Drag Coefficient (Cd)...">   44
     ?<Constant "Tire Friction Crr Rol...">   40
     ?<Constant "%0.03f">                      8
     ?<Constant "Vehicle: %s">                12
     ?<Constant "Reset Total Time">           20
     ?<Constant "Reset Total Distance">       24
     ?<Constant "Reset Max RPM">              16
     ?<Constant "Aero/Grip">                  12
     ?<Constant "Reset All">                  12
     ?<Constant "Total Time:">                12
     ?<Constant "Total Distance:">            16
     ?<Constant "Max RPM:">                   12
     ?<Constant "Aero (Cd)">                  12
     ?<Constant "Grip (Crr)">                 12
     ?<Constant "%u hr">                       8
     ?<Constant "%0.1f hr">                   12
     ?<Constant "%0.2f hr">                   12
     ?<Constant "%u mi">                       8
     ?<Constant "%0.1f mi">                   12
     ?<Constant "%0.2f mi">                   12
     ?<Constant "%u km">                       8
     ?<Constant "%0.1f km">                   12
     ?<Constant "%0.2f km">                   12
     ?<Constant "TraqDash USB Port">          20
     ?<Constant "Sensor Unit Box">            16
     ?<Constant "Test Camera(s)">             16
     ?<Constant "Camera Connection">          20
     ?<Constant "Camera Settings">            16
     ?<Constant "Sensor Unit Camera Box">     24
     ?<Constant "%s (%u.%usec)">              16
     ?<Constant "TraqDash USB Camera">        20
     ?<Constant "Not Supported">              16
     ?<Constant "Camera(s) Active">           20
     ?<Constant "Camera(s) Not Active">       24
     ?<Constant "Selected Camera(s)\nSU: ">   24
     ?<Constant "Would you like to go ...">   32
     ?<Constant "\nUSB: ">                     8
     ?<Constant "USB Camera">                 12
     ?<Constant "Replay Prime-X">             16
     ?<Constant "None selected">              16
     ?<Constant "Prime-X">                     8
     ?<Constant "Mini">                        8
     ?<Constant "Custom Sync Time">           20
     ?<Constant "Select Camera">              16
     ?<Constant "Current Settings">           20
     ?<Constant "No Camera Enabled">          20
     ?<Constant "%u.%usec">                   12
     ?<Constant "Default Sync Time">          20
     ?<Constant "Disabled">                   12
     ?<Constant "%0.1f\n%s">                  12
     ?<Constant "Camera">                      8
     ?<Constant "Interface">                  12
     ?<Constant "Sync Time">                  12
     ?<Constant "have us auto-fix the ...">   28
     ?<Constant "Go Back">                     8
     ?<Constant "Auto-Fix">                   12
     ?<Constant "Invalid Gear Ratios.">       24
     ?<Constant "Invalid vehicle weight.">    24
     ?<Constant "You entered a diff ra...">   36
     ?<Constant "This will disable gea...">   40
     ?<Constant "Confirm">                     8
     ?<Constant "GoPro HD and Replay X...">   32
     ?<Constant "require Sensor Unit f...">   32
     ?<Constant "seconds">                     8
     ?<Constant "version 3.40 or newer.">     24
     ?<Constant "OK">                          4
     ?<Constant "Cameras connected to ...">   32
     ?<Constant "USB module require Se...">   32
     ?<Constant "firmware version 3.70...">   32
     ?<Constant "You have changed came...">   36
     ?<Constant "which requires a powe...">   32
     ?<Constant "Would you like to pow...">   36
     ?<Constant "YES">                         4
     ?<Constant "NO">                          4
     ?<Constant "The camera you had se...">   28
     ?<Constant "is no longer supporte...">   32
     ?<Constant "selection has been di...">   32
     ?<Constant "0">                           2
     ?<Constant "1">                           2
     ?<Constant "2">                           2
     ?<Constant "3">                           2
     ?<Constant "4">                           2
     ?<Constant "5">                           2
     ?<Constant "6">                           2
     ?<Constant "7">                           2
     ?<Constant "8">                           2
     ?<Constant "9">                           2
     ?<Constant "%u">                          4
     ?<Constant "%s">                          4
     ?<Constant "\n\n">                        4
     ?<Constant ".">                           2

 
     32 bytes in section .bss
    406 bytes in section .data
    846 bytes in section .rodata
 22 700 bytes in section .text
 
 22 700 bytes of CODE  memory
    846 bytes of CONST memory
    438 bytes of DATA  memory

Errors: none
Warnings: none
