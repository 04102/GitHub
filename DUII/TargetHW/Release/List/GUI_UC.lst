###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:12:18 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_UC.c                            #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_UC.c -D DEBUG=1 -D              #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_UC.lst                 #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_UC.o                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_UC.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_UC_EncodeUTF8.c
     19          Purpose     : Encoding routines
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "GUI_Private.h"
     24          
     25          /*********************************************************************
     26          *
     27          *       Public code
     28          *
     29          **********************************************************************
     30          */
     31          /*********************************************************************
     32          *
     33          *       GUI_UC_GetCharSize
     34          */

   \                                 In section .text, align 4, keep-with-next
     35          int GUI_UC_GetCharSize(const char GUI_UNI_PTR * s) {
   \                     GUI_UC_GetCharSize:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     36            int r;
     37            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
     38            r =  GUI_pUC_API->pfGetCharSize(s);
   \   0000000C   ........           LDR      R1,??DataTable6
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   001091E5           LDR      R1,[R1, #+0]
   \   00000018   041091E5           LDR      R1,[R1, #+4]
   \   0000001C   31FF2FE1           BLX      R1
   \   00000020   0040A0E1           MOV      R4,R0
     39            GUI_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
     40            return r;
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
     41          }
     42          
     43          /*********************************************************************
     44          *
     45          *       GUI_UC_GetCharCode
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          U16 GUI_UC_GetCharCode(const char GUI_UNI_PTR * s) {
   \                     GUI_UC_GetCharCode:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     48            U16 r;
     49            GUI_LOCK();
   \   00000008   ........           BL       GUI_Lock
     50            r =  GUI_pUC_API->pfGetCharCode(s);
   \   0000000C   ........           LDR      R1,??DataTable6
   \   00000010   0400A0E1           MOV      R0,R4
   \   00000014   001091E5           LDR      R1,[R1, #+0]
   \   00000018   001091E5           LDR      R1,[R1, #+0]
   \   0000001C   31FF2FE1           BLX      R1
   \   00000020   0040A0E1           MOV      R4,R0
     51            GUI_UNLOCK();
   \   00000024   ........           BL       GUI_Unlock
     52            return r;
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   1080BDE8           POP      {R4,PC}          ;; return
     53          }
     54          
     55          /*********************************************************************
     56          *
     57          *       GUI_UC_Encode
     58          */

   \                                 In section .text, align 4, keep-with-next
     59          int GUI_UC_Encode(char* s, U16 Char) {
   \                     GUI_UC_Encode:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     60            int r;
     61            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
     62            r = GUI_pUC_API->pfEncode(s, Char);
   \   00000014   ........           LDR      R2,??DataTable6
   \   00000018   0510A0E1           MOV      R1,R5
   \   0000001C   002092E5           LDR      R2,[R2, #+0]
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   0C2092E5           LDR      R2,[R2, #+12]
   \   00000028   32FF2FE1           BLX      R2
   \   0000002C   0040A0E1           MOV      R4,R0
     63            GUI_UNLOCK();
   \   00000030   ........           BL       GUI_Unlock
     64            return r;
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   04D08DE2           ADD      SP,SP,#+4
   \   0000003C   3080BDE8           POP      {R4,R5,PC}       ;; return
     65          }
     66          
     67          /*********************************************************************
     68          *
     69          *       GUI_UC__CalcSizeOfChar
     70          */

   \                                 In section .text, align 4, keep-with-next
     71          int GUI_UC__CalcSizeOfChar(U16 Char) {
     72            return GUI_pUC_API->pfCalcSizeOfChar(Char);
   \                     GUI_UC__CalcSizeOfChar:
   \   00000000   ........           LDR      R1,??DataTable6
   \   00000004   001091E5           LDR      R1,[R1, #+0]
   \   00000008   081091E5           LDR      R1,[R1, #+8]
   \   0000000C   11FF2FE1           BX       R1               ;; tailcall
     73          }
     74          
     75          /*********************************************************************
     76          *
     77          *       GUI_UC__GetCharCodeInc
     78          */

   \                                 In section .text, align 4, keep-with-next
     79          U16 GUI_UC__GetCharCodeInc(const char GUI_UNI_PTR ** ps) {
   \                     GUI_UC__GetCharCodeInc:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
     80            const char GUI_UNI_PTR * s;
     81            U16 r;
     82            s   = *ps;
     83            r   = GUI_UC__GetCharCode(s);
   \   00000004   ........           LDR      R6,??DataTable6
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   005094E5           LDR      R5,[R4, #+0]
   \   00000010   001096E5           LDR      R1,[R6, #+0]
   \   00000014   04D04DE2           SUB      SP,SP,#+4
   \   00000018   0500A0E1           MOV      R0,R5
   \   0000001C   001091E5           LDR      R1,[R1, #+0]
   \   00000020   31FF2FE1           BLX      R1
     84            s  += GUI_UC__GetCharSize(s);
     85            *ps = s;
   \   00000024   001096E5           LDR      R1,[R6, #+0]
   \   00000028   0070A0E1           MOV      R7,R0
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   041091E5           LDR      R1,[R1, #+4]
   \   00000034   31FF2FE1           BLX      R1
   \   00000038   050080E0           ADD      R0,R0,R5
   \   0000003C   000084E5           STR      R0,[R4, #+0]
     86            return r;
   \   00000040   0700A0E1           MOV      R0,R7
   \   00000044   04D08DE2           ADD      SP,SP,#+4
   \   00000048   F080BDE8           POP      {R4-R7,PC}       ;; return
     87          }
     88          
     89          /*********************************************************************
     90          *
     91          *       GUI_UC__NumChars2NumBytes
     92          */

   \                                 In section .text, align 4, keep-with-next
     93          int GUI_UC__NumChars2NumBytes(const char GUI_UNI_PTR * s, int NumChars) {
   \                     GUI_UC__NumChars2NumBytes:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150B0E1           MOVS     R5,R1
     94            int CharSize, NumBytes = 0;
   \   00000010   0060A0E3           MOV      R6,#+0
   \   00000014   0900000A           BEQ      ??GUI_UC__NumChars2NumBytes_0
   \   00000018   ........           LDR      R7,??DataTable6
     95            while (NumChars--) {
     96              CharSize = GUI_UC__GetCharSize(s);
   \                     ??GUI_UC__NumChars2NumBytes_1:
   \   0000001C   001097E5           LDR      R1,[R7, #+0]
   \   00000020   015045E2           SUB      R5,R5,#+1
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   041091E5           LDR      R1,[R1, #+4]
   \   0000002C   31FF2FE1           BLX      R1
     97              s += CharSize;    
   \   00000030   044080E0           ADD      R4,R0,R4
     98              NumBytes += CharSize;
   \   00000034   066080E0           ADD      R6,R0,R6
   \   00000038   000055E3           CMP      R5,#+0
   \   0000003C   F6FFFF1A           BNE      ??GUI_UC__NumChars2NumBytes_1
     99            }
    100            return NumBytes;
   \                     ??GUI_UC__NumChars2NumBytes_0:
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   04D08DE2           ADD      SP,SP,#+4
   \   00000048   F080BDE8           POP      {R4-R7,PC}       ;; return
    101          }
    102          
    103          /*********************************************************************
    104          *
    105          *       GUI_UC__NumBytes2NumChars
    106          */

   \                                 In section .text, align 4, keep-with-next
    107          int GUI_UC__NumBytes2NumChars(const char GUI_UNI_PTR * s, int NumBytes) {
   \                     GUI_UC__NumBytes2NumChars:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   0040A0E1           MOV      R4,R0
    108            int CharSize, Chars = 0, Bytes = 0;
   \   0000000C   0060A0E3           MOV      R6,#+0
   \   00000010   0070A0E3           MOV      R7,#+0
   \   00000014   ........           LDR      R8,??DataTable6
    109            while (NumBytes > Bytes) {
   \   00000018   010055E3           CMP      R5,#+1
   \   0000001C   070000BA           BLT      ??GUI_UC__NumBytes2NumChars_0
    110              CharSize = GUI_UC__GetCharSize(s + Bytes);
    111              Bytes += CharSize;
   \                     ??GUI_UC__NumBytes2NumChars_1:
   \   00000020   001098E5           LDR      R1,[R8, #+0]
   \   00000024   040087E0           ADD      R0,R7,R4
   \   00000028   041091E5           LDR      R1,[R1, #+4]
   \   0000002C   31FF2FE1           BLX      R1
   \   00000030   077080E0           ADD      R7,R0,R7
    112              Chars++;
   \   00000034   016086E2           ADD      R6,R6,#+1
   \   00000038   050057E1           CMP      R7,R5
   \   0000003C   F7FFFFBA           BLT      ??GUI_UC__NumBytes2NumChars_1
    113            }
    114            return Chars;
   \                     ??GUI_UC__NumBytes2NumChars_0:
   \   00000040   0600A0E1           MOV      R0,R6
   \   00000044   F081BDE8           POP      {R4-R8,PC}       ;; return
    115          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   ........           DC32     GUI_pUC_API
    116          
    117          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                  .cstack
     --------                  -------
     GUI_UC_Encode                 16
     GUI_UC_GetCharCode             8
     GUI_UC_GetCharSize             8
     GUI_UC__CalcSizeOfChar         8
     GUI_UC__GetCharCodeInc        24
     GUI_UC__NumBytes2NumChars     24
     GUI_UC__NumChars2NumBytes     24


   Section sizes:

     Function/Label            Bytes
     --------------            -----
     GUI_UC_GetCharSize          48
     GUI_UC_GetCharCode          48
     GUI_UC_Encode               64
     GUI_UC__CalcSizeOfChar      16
     GUI_UC__GetCharCodeInc      76
     GUI_UC__NumChars2NumBytes   76
     GUI_UC__NumBytes2NumChars   72
     ??DataTable6                 4

 
 404 bytes in section .text
 
 404 bytes of CODE memory

Errors: none
Warnings: none
