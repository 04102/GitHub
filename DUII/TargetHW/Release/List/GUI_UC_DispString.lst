###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:13:38 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\GUI_UC_DispString.c                 #
#    Command line =  C:\DUII\TargetHW\GUI\GUI_UC_DispString.c -D DEBUG=1 -D   #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GUI_UC_DispString.lst      #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GUI_UC_DispString.o         #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\GUI_UC_DispString.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : GUI_UC_DispString.c
     19          Purpose     : Implementation of GUI_UC_DispString
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "GUI_Private.h"
     26          
     27          /*********************************************************************
     28          *
     29          *       Static code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       _GetLineDistX
     36          */
     37          static int _GetLineDistX(const U16 GUI_UNI_PTR *s, int MaxNumChars) {
     38            int Dist =0;
     39            if (s) {
     40              U16 Char;
     41              while (((Char = *s) != 0) && MaxNumChars >= 0) {
     42                s++;
     43                MaxNumChars--;
     44                Dist += GUI_GetCharDistX(Char);
     45              }
     46            }
     47            return Dist;
     48          }
     49          
     50          /*********************************************************************
     51          *
     52          *       _GetLineLen
     53          */
     54          static int _GetLineLen(const U16 GUI_UNI_PTR *s, int MaxLen) {
     55            int Len =0;
     56            if (!s)
     57              return 0;
     58            {
     59              while ((*s !=0) && Len < MaxLen) {
     60                Len++; s++;
     61              }
     62            }
     63            return Len;
     64          }
     65          
     66          /*********************************************************************
     67          *
     68          *       _DispLine_UC
     69          */
     70          static void _DispLine_UC(const U16 GUI_UNI_PTR *s, int Len, const GUI_RECT *pRect) {
     71            if (GUI_Context.pClipRect_HL) {
     72              if (GUI_RectsIntersect(GUI_Context.pClipRect_HL, pRect) == 0)
     73                return;
     74            }
     75            {
     76              U16 c0;
     77              while (--Len >=0) {
     78                c0=*s++;
     79                GL_DispChar(c0);
     80              }
     81            }
     82          }
     83          
     84          /*********************************************************************
     85          *
     86          *       _DispLine
     87          */

   \                                 In section .text, align 4, keep-with-next
     88          static void _DispLine(const U16 GUI_UNI_PTR *s, int Len, const GUI_RECT* pr) {
   \                     _DispLine:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0150A0E1           MOV      R5,R1
   \   00000008   08D04DE2           SUB      SP,SP,#+8
   \   0000000C   0040A0E1           MOV      R4,R0
   \   00000010   0210A0E1           MOV      R1,R2
     89            GUI_RECT r;
     90            r = *pr;
   \   00000014   0D00A0E1           MOV      R0,SP
   \   00000018   0820A0E3           MOV      R2,#+8
   \   0000001C   ........           BL       __aeabi_memcpy
     91            #if GUI_WINSUPPORT
     92            WM_ADDORG(r.x0,r.y0);
   \   00000020   ........           LDR      R6,??DataTable1
   \   00000024   F010DDE1           LDRSH    R1,[SP, #+0]
   \   00000028   400096E5           LDR      R0,[R6, #+64]
   \   0000002C   F220DDE1           LDRSH    R2,[SP, #+2]
   \   00000030   011080E0           ADD      R1,R0,R1
   \   00000034   B010CDE1           STRH     R1,[SP, #+0]
   \   00000038   441096E5           LDR      R1,[R6, #+68]
   \   0000003C   022081E0           ADD      R2,R1,R2
   \   00000040   B220CDE1           STRH     R2,[SP, #+2]
     93            WM_ADDORG(r.x1,r.y1);
   \   00000044   F420DDE1           LDRSH    R2,[SP, #+4]
   \   00000048   020080E0           ADD      R0,R0,R2
   \   0000004C   B400CDE1           STRH     R0,[SP, #+4]
   \   00000050   F600DDE1           LDRSH    R0,[SP, #+6]
   \   00000054   000081E0           ADD      R0,R1,R0
   \   00000058   B600CDE1           STRH     R0,[SP, #+6]
     94            WM_ITERATE_START(&r) {
   \   0000005C   0D00A0E1           MOV      R0,SP
   \   00000060   ........           BL       WM__InitIVRSearch
   \   00000064   000050E3           CMP      R0,#+0
   \   00000068   1400000A           BEQ      ??_DispLine_0
     95            #endif
     96               GUI_Context.DispPosX = r.x0;
   \                     ??_DispLine_1:
   \   0000006C   F000DDE1           LDRSH    R0,[SP, #+0]
     97               GUI_Context.DispPosY = r.y0;
     98               _DispLine_UC(s, Len, &r);    /* Do the actual drawing via routine call. */
   \   00000070   0570A0E1           MOV      R7,R5
   \   00000074   0480A0E1           MOV      R8,R4
   \   00000078   B202C6E1           STRH     R0,[R6, #+34]
   \   0000007C   F200DDE1           LDRSH    R0,[SP, #+2]
   \   00000080   B402C6E1           STRH     R0,[R6, #+36]
   \   00000084   140096E5           LDR      R0,[R6, #+20]
   \   00000088   000050E3           CMP      R0,#+0
   \   0000008C   0600000A           BEQ      ??_DispLine_2
   \   00000090   0D10A0E1           MOV      R1,SP
   \   00000094   ........           BL       GUI_RectsIntersect
   \   00000098   000050E3           CMP      R0,#+0
   \   0000009C   0200001A           BNE      ??_DispLine_2
   \   000000A0   030000EA           B        ??_DispLine_3
   \                     ??_DispLine_4:
   \   000000A4   B200D8E0           LDRH     R0,[R8], #+2
   \   000000A8   ........           BL       GL_DispChar
   \                     ??_DispLine_2:
   \   000000AC   017057E2           SUBS     R7,R7,#+1
   \   000000B0   FBFFFF5A           BPL      ??_DispLine_4
     99            #if GUI_WINSUPPORT
    100            } WM_ITERATE_END();
   \                     ??_DispLine_3:
   \   000000B4   ........           BL       WM__GetNextIVR
   \   000000B8   000050E3           CMP      R0,#+0
   \   000000BC   EAFFFF1A           BNE      ??_DispLine_1
    101            WM_SUBORG(GUI_Context.DispPosX, GUI_Context.DispPosY);
   \                     ??_DispLine_0:
   \   000000C0   F202D6E1           LDRSH    R0,[R6, #+34]
   \   000000C4   401096E5           LDR      R1,[R6, #+64]
    102            #endif
    103          }
   \   000000C8   08D08DE2           ADD      SP,SP,#+8
   \   000000CC   010040E0           SUB      R0,R0,R1
   \   000000D0   B202C6E1           STRH     R0,[R6, #+34]
   \   000000D4   F402D6E1           LDRSH    R0,[R6, #+36]
   \   000000D8   441096E5           LDR      R1,[R6, #+68]
   \   000000DC   010040E0           SUB      R0,R0,R1
   \   000000E0   B402C6E1           STRH     R0,[R6, #+36]
   \   000000E4   F081BDE8           POP      {R4-R8,PC}       ;; return
    104          
    105          /*********************************************************************
    106          *
    107          *       Public code
    108          *
    109          **********************************************************************
    110          */
    111          /*********************************************************************
    112          *
    113          *       GUI_UC_DispString
    114          */

   \                                 In section .text, align 4, keep-with-next
    115          void GUI_UC_DispString(const U16 GUI_UNI_PTR *s) {
   \                     GUI_UC_DispString:
   \   00000000   F04F2DE9           PUSH     {R4-R11,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0040B0E1           MOVS     R4,R0
    116            int xAdjust, yAdjust, xOrg;
    117            int FontSizeY;
    118            if (!s)
   \   0000000C   6600000A           BEQ      ??GUI_UC_DispString_0
    119              return;
    120            GUI_LOCK();
   \   00000010   ........           BL       GUI_Lock
    121            FontSizeY = GUI_Context.pAFont->YSize;
   \   00000014   ........           LDR      R5,??DataTable1
   \   00000018   1C1095E5           LDR      R1,[R5, #+28]
   \   0000001C   1810D1E5           LDRB     R1,[R1, #+24]
   \   00000020   0C108DE5           STR      R1,[SP, #+12]
    122            xOrg = GUI_Context.DispPosX;
   \   00000024   F212D5E1           LDRSH    R1,[R5, #+34]
   \   00000028   08108DE5           STR      R1,[SP, #+8]
    123           /* Adjust vertical position */
    124            yAdjust = GUI_GetYAdjust();
   \   0000002C   ........           BL       GUI_GetYAdjust
   \   00000030   0060A0E1           MOV      R6,R0
    125            GUI_Context.DispPosY -= yAdjust;
   \   00000034   F402D5E1           LDRSH    R0,[R5, #+36]
   \   00000038   FF70A0E3           MOV      R7,#+255
   \   0000003C   7F7C87E3           ORR      R7,R7,#0x7F00
   \   00000040   060040E0           SUB      R0,R0,R6
   \   00000044   B402C5E1           STRH     R0,[R5, #+36]
    126            for (; *s; s++) {
   \                     ??GUI_UC_DispString_1:
   \   00000048   B000D4E1           LDRH     R0,[R4, #+0]
   \   0000004C   000050E3           CMP      R0,#+0
   \   00000050   4D00000A           BEQ      ??GUI_UC_DispString_2
    127              GUI_RECT r;
    128              int LineLen= _GetLineLen(s,0x7fff);
   \   00000054   0400B0E1           MOVS     R0,R4
   \   00000058   0080A0E3           MOV      R8,#+0
   \   0000005C   0500001A           BNE      ??GUI_UC_DispString_3
    129              int xLineSize = _GetLineDistX(s, LineLen);
   \                     ??GUI_UC_DispString_4:
   \   00000060   08A0A0E1           MOV      R10,R8
   \   00000064   04B0B0E1           MOVS     R11,R4
   \   00000068   0090A0E3           MOV      R9,#+0
   \   0000006C   0F00000A           BEQ      ??GUI_UC_DispString_5
   \   00000070   090000EA           B        ??GUI_UC_DispString_6
   \                     ??GUI_UC_DispString_7:
   \   00000074   018088E2           ADD      R8,R8,#+1
   \                     ??GUI_UC_DispString_3:
   \   00000078   B210D0E0           LDRH     R1,[R0], #+2
   \   0000007C   000051E3           CMP      R1,#+0
   \   00000080   F6FFFF0A           BEQ      ??GUI_UC_DispString_4
   \   00000084   070058E1           CMP      R8,R7
   \   00000088   F9FFFFBA           BLT      ??GUI_UC_DispString_7
   \   0000008C   F3FFFFEA           B        ??GUI_UC_DispString_4
   \                     ??GUI_UC_DispString_8:
   \   00000090   01A04AE2           SUB      R10,R10,#+1
   \   00000094   ........           BL       GUI_GetCharDistX
   \   00000098   099080E0           ADD      R9,R0,R9
   \                     ??GUI_UC_DispString_6:
   \   0000009C   B200DBE0           LDRH     R0,[R11], #+2
   \   000000A0   000050E3           CMP      R0,#+0
   \   000000A4   0100000A           BEQ      ??GUI_UC_DispString_5
   \   000000A8   00005AE3           CMP      R10,#+0
   \   000000AC   F7FFFF5A           BPL      ??GUI_UC_DispString_8
    130            /* Check if x-position needs to be changed due to h-alignment */
    131              switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
   \                     ??GUI_UC_DispString_5:
   \   000000B0   2C00D5E5           LDRB     R0,[R5, #+44]
   \   000000B4   030000E2           AND      R0,R0,#0x3
   \   000000B8   010050E3           CMP      R0,#+1
   \   000000BC   0500000A           BEQ      ??GUI_UC_DispString_9
   \   000000C0   0600003A           BCC      ??GUI_UC_DispString_10
   \   000000C4   020050E3           CMP      R0,#+2
   \   000000C8   0400001A           BNE      ??GUI_UC_DispString_10
    132              case GUI_TA_CENTER: xAdjust= xLineSize/2; break;
   \   000000CC   A90F89E0           ADD      R0,R9,R9, LSR #+31
   \   000000D0   C000A0E1           ASR      R0,R0,#+1
   \   000000D4   020000EA           B        ??GUI_UC_DispString_11
    133              case GUI_TA_RIGHT:  xAdjust= xLineSize; break;
   \                     ??GUI_UC_DispString_9:
   \   000000D8   0900A0E1           MOV      R0,R9
   \   000000DC   000000EA           B        ??GUI_UC_DispString_11
    134              default:            xAdjust= 0;
   \                     ??GUI_UC_DispString_10:
   \   000000E0   0000A0E3           MOV      R0,#+0
    135              }
    136              r.x0 = GUI_Context.DispPosX -= xAdjust;
   \                     ??GUI_UC_DispString_11:
   \   000000E4   F212D5E1           LDRSH    R1,[R5, #+34]
    137              r.x1 = r.x0 + xLineSize-1;    
    138              r.y0 = GUI_Context.DispPosY;
    139              r.y1 = r.y0 + FontSizeY-1;    
    140              _DispLine(s, LineLen, &r);
   \   000000E8   0D20A0E1           MOV      R2,SP
   \   000000EC   000041E0           SUB      R0,R1,R0
   \   000000F0   B000CDE1           STRH     R0,[SP, #+0]
   \   000000F4   F010DDE1           LDRSH    R1,[SP, #+0]
   \   000000F8   B202C5E1           STRH     R0,[R5, #+34]
   \   000000FC   090081E0           ADD      R0,R1,R9
   \   00000100   010040E2           SUB      R0,R0,#+1
   \   00000104   B400CDE1           STRH     R0,[SP, #+4]
   \   00000108   F402D5E1           LDRSH    R0,[R5, #+36]
   \   0000010C   0C109DE5           LDR      R1,[SP, #+12]
   \   00000110   B200CDE1           STRH     R0,[SP, #+2]
   \   00000114   010080E0           ADD      R0,R0,R1
   \   00000118   010040E2           SUB      R0,R0,#+1
   \   0000011C   B600CDE1           STRH     R0,[SP, #+6]
   \   00000120   0810A0E1           MOV      R1,R8
   \   00000124   0400A0E1           MOV      R0,R4
   \   00000128   ........           BL       _DispLine
    141              GUI_Context.DispPosY = r.y0;
   \   0000012C   F200DDE1           LDRSH    R0,[SP, #+2]
    142              s += LineLen;
   \   00000130   884084E0           ADD      R4,R4,R8, LSL #+1
   \   00000134   B402C5E1           STRH     R0,[R5, #+36]
    143              if (*s=='\n') {
   \   00000138   B000D4E1           LDRH     R0,[R4, #+0]
   \   0000013C   0A0050E3           CMP      R0,#+10
   \   00000140   0B00001A           BNE      ??GUI_UC_DispString_12
    144                switch (GUI_Context.TextAlign & GUI_TA_HORIZONTAL) { 
   \   00000144   2C00D5E5           LDRB     R0,[R5, #+44]
   \   00000148   030000E2           AND      R0,R0,#0x3
   \   0000014C   010040E2           SUB      R0,R0,#+1
   \   00000150   010050E3           CMP      R0,#+1
    145                case GUI_TA_CENTER:
    146                case GUI_TA_RIGHT:
    147                  GUI_Context.DispPosX = xOrg;
    148                  break;
    149                default:
    150                  GUI_Context.DispPosX = GUI_Context.LBorder;
   \   00000154   F002D581           LDRSHHI  R0,[R5, #+32]
   \   00000158   08009D95           LDRLS    R0,[SP, #+8]
    151                  break;
   \   0000015C   B202C5E1           STRH     R0,[R5, #+34]
    152                }
    153                GUI_Context.DispPosY += GUI_GetFontDistY();
   \   00000160   ........           BL       GUI_GetFontDistY
   \   00000164   F412D5E1           LDRSH    R1,[R5, #+36]
   \   00000168   010080E0           ADD      R0,R0,R1
   \   0000016C   B402C5E1           STRH     R0,[R5, #+36]
   \   00000170   020000EA           B        ??GUI_UC_DispString_13
    154              } else {
    155                GUI_Context.DispPosX = r.x0+xLineSize;
   \                     ??GUI_UC_DispString_12:
   \   00000174   F000DDE1           LDRSH    R0,[SP, #+0]
   \   00000178   000089E0           ADD      R0,R9,R0
   \   0000017C   B202C5E1           STRH     R0,[R5, #+34]
    156              }
    157              if (*s==0)    /* end of string (last line) reached ? */
   \                     ??GUI_UC_DispString_13:
   \   00000180   B200D4E0           LDRH     R0,[R4], #+2
   \   00000184   000050E3           CMP      R0,#+0
   \   00000188   AEFFFF1A           BNE      ??GUI_UC_DispString_1
    158                break;
    159            }
    160            GUI_Context.DispPosY += yAdjust;
   \                     ??GUI_UC_DispString_2:
   \   0000018C   F402D5E1           LDRSH    R0,[R5, #+36]
    161            GUI_Context.TextAlign &= ~GUI_TA_HORIZONTAL;
   \   00000190   0310E0E3           MVN      R1,#+3
   \   00000194   000086E0           ADD      R0,R6,R0
   \   00000198   B402C5E1           STRH     R0,[R5, #+36]
   \   0000019C   FC02D5E1           LDRSH    R0,[R5, #+44]
   \   000001A0   000001E0           AND      R0,R1,R0
   \   000001A4   BC02C5E1           STRH     R0,[R5, #+44]
    162            GUI_UNLOCK();
   \   000001A8   ........           BL       GUI_Unlock
    163          }
   \                     ??GUI_UC_DispString_0:
   \   000001AC   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   000001B0   F08FBDE8           POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     GUI_Context
    164          
    165          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     GUI_UC_DispString     56
     _DispLine             32


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     _DispLine          232
     GUI_UC_DispString  436
     ??DataTable1         4

 
 672 bytes in section .text
 
 672 bytes of CODE memory

Errors: none
Warnings: none
