###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:14:56 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\FS\FS_Attrib.c                          #
#    Command line =  C:\DUII\TargetHW\FS\FS_Attrib.c -D DEBUG=1 -D            #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\FS_Attrib.lst              #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\FS_Attrib.o                 #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\FS\FS_Attrib.c
      1          /*********************************************************************
      2          *                SEGGER MICROCONTROLLER GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 2003-2010     SEGGER Microcontroller GmbH & Co KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          **** emFile file system for embedded applications ****
     13          emFile is protected by international copyright laws. Knowledge of the
     14          source code may not be used to write a similar product. This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : FS_Attrib.c
     19          Purpose     : Implementation of FS_GetFileAttributes
     20                                          FS_SetFileAttributes
     21          ---------------------------END-OF-HEADER------------------------------
     22          */
     23          
     24          /*********************************************************************
     25          *
     26          *             #include Section
     27          *
     28          **********************************************************************
     29          */
     30          
     31          #include "FS_Int.h"
     32          
     33          /*********************************************************************
     34          *
     35          *       Public code, internal code
     36          *
     37          **********************************************************************
     38          */
     39          
     40          /*********************************************************************
     41          *
     42          *       FS__SetFileAttributes
     43          *
     44          *  Function description
     45          *    Internal version of FS_SetFileAttributes
     46          *    Sets the attributes for a given file/directory name.
     47          *
     48          *  Parameters:
     49          *    sName       - pointer to a string that contains the file/directory name.
     50          *    Attributes  - Attributes that shall be set.
     51          *
     52          */

   \                                 In section .text, align 4, keep-with-next
     53          int FS__SetFileAttributes(const char * sName, U8 Attributes) {
   \                     FS__SetFileAttributes:
   \   00000000   32402DE9           PUSH     {R1,R4,R5,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
     54            int  r;
     55            const char *s;
     56            FS_VOLUME * pVolume;
     57          
     58            r = -1;
   \   00000008   0040E0E3           MVN      R4,#+0
     59            pVolume = FS__FindVolume(sName, &s);
   \   0000000C   0D10A0E1           MOV      R1,SP
   \   00000010   ........           BL       FS__FindVolume
   \   00000014   0050B0E1           MOVS     R5,R0
     60            if (pVolume) {
   \   00000018   0800000A           BEQ      ??FS__SetFileAttributes_0
     61              if (FS__AutoMount(pVolume) == FS_MOUNT_RW)  {
   \   0000001C   ........           BL       FS__AutoMount
   \   00000020   030050E3           CMP      R0,#+3
   \   00000024   0500001A           BNE      ??FS__SetFileAttributes_0
     62                FS_LOCK_DRIVER(&pVolume->Partition.Device);
     63                FS_JOURNAL_BEGIN(pVolume);
     64                r = FS_SETDIRENTRYINFO(pVolume, s, &Attributes, FS_DIRENTRY_SET_ATTRIBUTES);
   \   00000028   0130A0E3           MOV      R3,#+1
   \   0000002C   08208DE2           ADD      R2,SP,#+8
   \   00000030   00109DE5           LDR      R1,[SP, #+0]
   \   00000034   0500A0E1           MOV      R0,R5
   \   00000038   ........           BL       FS_FAT_SetDirEntryInfo
   \   0000003C   0040A0E1           MOV      R4,R0
     65                FS_JOURNAL_END(pVolume);
     66                FS_UNLOCK_DRIVER(&pVolume->Partition.Device);
     67              }
     68            }
     69            return r;
   \                     ??FS__SetFileAttributes_0:
   \   00000040   0400A0E1           MOV      R0,R4
   \   00000044   0CD08DE2           ADD      SP,SP,#+12
   \   00000048   3080BDE8           POP      {R4,R5,PC}       ;; return
     70          }
     71          
     72          /*********************************************************************
     73          *
     74          *       FS_GetFileAttributes
     75          *
     76          *  Function description:
     77          *    Internal version of FS__GetFileAttributes
     78          *    Gets the attributes from a given file/directory name.
     79          *
     80          *  Parameters:
     81          *    sName       - pointer to a string that contains the file/directory name.
     82          *
     83          *  Return value:
     84          *    0xff             - Error
     85          *    other than 0xff   file's/directory's attributtes (or-combined)
     86          */

   \                                 In section .text, align 4, keep-with-next
     87          U8 FS__GetFileAttributes(const char * pName) {
   \                     FS__GetFileAttributes:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   08D04DE2           SUB      SP,SP,#+8
     88            U8      Attributes;
     89            U8      r;
     90            const char * s;
     91            FS_VOLUME  * pVolume;
     92          
     93            Attributes = 0;
   \   00000008   0020A0E3           MOV      R2,#+0
   \   0000000C   0020CDE5           STRB     R2,[SP, #+0]
     94            pVolume = FS__FindVolume(pName, &s);
   \   00000010   04108DE2           ADD      R1,SP,#+4
   \   00000014   ........           BL       FS__FindVolume
   \   00000018   0040B0E1           MOVS     R4,R0
     95            if (pVolume) {
   \   0000001C   0A00000A           BEQ      ??FS__GetFileAttributes_0
     96              if (FS__AutoMount(pVolume) & FS_MOUNT_R)  {
   \   00000020   ........           BL       FS__AutoMount
   \   00000024   010010E3           TST      R0,#0x1
   \   00000028   0700000A           BEQ      ??FS__GetFileAttributes_0
     97                FS_LOCK_DRIVER(&pVolume->Partition.Device);
     98                r = FS_GETDIRENTRYINFO(pVolume, s, &Attributes, FS_DIRENTRY_GET_ATTRIBUTES);
     99                FS_UNLOCK_DRIVER(&pVolume->Partition.Device);
    100                if (r) {
   \   0000002C   0130A0E3           MOV      R3,#+1
   \   00000030   0D20A0E1           MOV      R2,SP
   \   00000034   04109DE5           LDR      R1,[SP, #+4]
   \   00000038   0400A0E1           MOV      R0,R4
   \   0000003C   ........           BL       FS_FAT_GetDirEntryInfo
   \   00000040   000050E3           CMP      R0,#+0
    101                  Attributes = 0xff;
   \   00000044   FF10A013           MOVNE    R1,#+255
   \   00000048   0010CD15           STRBNE   R1,[SP, #+0]
    102                }
    103              }
    104            }
    105            return Attributes;
   \                     ??FS__GetFileAttributes_0:
   \   0000004C   0000DDE5           LDRB     R0,[SP, #+0]
   \   00000050   08D08DE2           ADD      SP,SP,#+8
   \   00000054   1080BDE8           POP      {R4,PC}          ;; return
    106          }
    107          
    108          /*********************************************************************
    109          *
    110          *       Public code
    111          *
    112          **********************************************************************
    113          */
    114          
    115          /*********************************************************************
    116          *
    117          *       FS_SetFileAttributes
    118          *
    119          *  Function description:
    120          *    Sets the attributes for a given file/directory name.
    121          *
    122          *  Parameters:
    123          *    pName      - Pointer to a name of the file/directory.
    124          *    Attributes - Attribute to set.
    125          *
    126          *  Return value:
    127          *    == 0             - O.K.
    128          *    != 0             - Error
    129          */

   \                                 In section .text, align 4, keep-with-next
    130          int FS_SetFileAttributes(const char * sName, U8 Attributes) {
   \                     FS_SetFileAttributes:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0CD04DE2           SUB      SP,SP,#+12
   \   0000000C   0150A0E1           MOV      R5,R1
    131            int  r;
    132          
    133            FS_LOCK();
   \   00000010   0000A0E3           MOV      R0,#+0
   \   00000014   ........           BL       FS_OS_Lock
    134            r = FS__SetFileAttributes(sName, Attributes);  
   \   00000018   0450CDE5           STRB     R5,[SP, #+4]
   \   0000001C   0050E0E3           MVN      R5,#+0
   \   00000020   0D10A0E1           MOV      R1,SP
   \   00000024   0400A0E1           MOV      R0,R4
   \   00000028   ........           BL       FS__FindVolume
   \   0000002C   0040B0E1           MOVS     R4,R0
   \   00000030   0800000A           BEQ      ??FS_SetFileAttributes_0
   \   00000034   ........           BL       FS__AutoMount
   \   00000038   030050E3           CMP      R0,#+3
   \   0000003C   0500001A           BNE      ??FS_SetFileAttributes_0
   \   00000040   0130A0E3           MOV      R3,#+1
   \   00000044   04208DE2           ADD      R2,SP,#+4
   \   00000048   00109DE5           LDR      R1,[SP, #+0]
   \   0000004C   0400A0E1           MOV      R0,R4
   \   00000050   ........           BL       FS_FAT_SetDirEntryInfo
   \   00000054   0050A0E1           MOV      R5,R0
    135            FS_UNLOCK();
   \                     ??FS_SetFileAttributes_0:
   \   00000058   0000A0E3           MOV      R0,#+0
   \   0000005C   ........           BL       FS_OS_Unlock
    136            return r;
   \   00000060   0500A0E1           MOV      R0,R5
   \   00000064   0CD08DE2           ADD      SP,SP,#+12
   \   00000068   3080BDE8           POP      {R4,R5,PC}       ;; return
    137          }
    138          
    139          /*********************************************************************
    140          *
    141          *       FS_GetFileAttributes
    142          *
    143          *  Function description:
    144          *    Gets the attributes of a given file/directory name.
    145          *
    146          *  Parameters:
    147          *    sName  - Pointer to a name of the file/directory.
    148          *
    149          *  Return value:
    150          *    0xff             - Error
    151          *    other than 0xff   file's/directory's attributtes (or-combined)
    152          */

   \                                 In section .text, align 4, keep-with-next
    153          U8 FS_GetFileAttributes(const char * sName) {
   \                     FS_GetFileAttributes:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   08D04DE2           SUB      SP,SP,#+8
    154            U8 Attributes;
    155          
    156            FS_LOCK();
   \   0000000C   0000A0E3           MOV      R0,#+0
   \   00000010   ........           BL       FS_OS_Lock
    157            Attributes = FS__GetFileAttributes(sName);
   \   00000014   0010A0E3           MOV      R1,#+0
   \   00000018   0010CDE5           STRB     R1,[SP, #+0]
   \   0000001C   04108DE2           ADD      R1,SP,#+4
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       FS__FindVolume
   \   00000028   0040B0E1           MOVS     R4,R0
   \   0000002C   0B00000A           BEQ      ??FS_GetFileAttributes_0
   \   00000030   ........           BL       FS__AutoMount
   \   00000034   010010E3           TST      R0,#0x1
   \   00000038   0800000A           BEQ      ??FS_GetFileAttributes_0
   \   0000003C   0130A0E3           MOV      R3,#+1
   \   00000040   0D20A0E1           MOV      R2,SP
   \   00000044   04109DE5           LDR      R1,[SP, #+4]
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       FS_FAT_GetDirEntryInfo
   \   00000050   000050E3           CMP      R0,#+0
   \   00000054   0200000A           BEQ      ??FS_GetFileAttributes_1
   \   00000058   FF10A0E3           MOV      R1,#+255
   \   0000005C   0010CDE5           STRB     R1,[SP, #+0]
    158            FS_UNLOCK();
   \                     ??FS_GetFileAttributes_0:
   \   00000060   0000A0E3           MOV      R0,#+0
   \                     ??FS_GetFileAttributes_1:
   \   00000064   ........           BL       FS_OS_Unlock
    159            return Attributes;
   \   00000068   0000DDE5           LDRB     R0,[SP, #+0]
   \   0000006C   08D08DE2           ADD      SP,SP,#+8
   \   00000070   1080BDE8           POP      {R4,PC}          ;; return
    160          }
    161          
    162          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function              .cstack
     --------              -------
     FS_GetFileAttributes      16
     FS_SetFileAttributes      24
     FS__GetFileAttributes     16
     FS__SetFileAttributes     24


   Section sizes:

     Function/Label        Bytes
     --------------        -----
     FS__SetFileAttributes   76
     FS__GetFileAttributes   88
     FS_SetFileAttributes   108
     FS_GetFileAttributes   116

 
 388 bytes in section .text
 
 388 bytes of CODE memory

Errors: none
Warnings: none
