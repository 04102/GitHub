###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:16 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\LISTVIEW_DisableRow.c               #
#    Command line =  C:\DUII\TargetHW\GUI\LISTVIEW_DisableRow.c -D DEBUG=1    #
#                    -D SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D  #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\LISTVIEW_DisableRow.lst    #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\LISTVIEW_DisableRow.o       #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\LISTVIEW_DisableRow.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : LISTVIEW_DisableRow.c
     19          Purpose     : Implementation of LISTVIEW_DisableRow
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include <string.h>
     24          
     25          #include "LISTVIEW_Private.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Static routines
     32          *
     33          **********************************************************************
     34          */
     35          /*********************************************************************
     36          *
     37          *       _SetRowDisabled
     38          */
     39          static void _SetRowDisabled(LISTVIEW_Handle hObj, unsigned Row, int OnOff) {
     40            if (hObj) {
     41              LISTVIEW_Obj* pObj;
     42              WM_LOCK();
     43              pObj = LISTVIEW_LOCK_H(hObj);
     44              if (Row < LISTVIEW__GetNumRows(pObj)) {
     45                LISTVIEW_ROW * pRow;
     46                pRow = (LISTVIEW_ROW *)GUI_ARRAY_GetpItemLocked(pObj->RowArray, Row);
     47                pRow->Disabled = OnOff;
     48                GUI_UNLOCK_H(pRow);
     49                LISTVIEW__InvalidateRow(hObj, pObj, Row);
     50              }
     51              GUI_UNLOCK_H(pObj);
     52              WM_UNLOCK();
     53            }
     54          }
     55          /*********************************************************************
     56          *
     57          *       Public routines
     58          *
     59          **********************************************************************
     60          */
     61          /*********************************************************************
     62          *
     63          *       LISTVIEW_DisableRow
     64          */

   \                                 In section .text, align 4, keep-with-next
     65          void LISTVIEW_DisableRow(LISTVIEW_Handle hObj, unsigned Row) {
   \                     LISTVIEW_DisableRow:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     66            _SetRowDisabled(hObj, Row, 1);
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   1200000A           BEQ      ??LISTVIEW_DisableRow_0
   \   00000014   ........           BL       GUI_Lock
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   ........           BL       LISTVIEW__GetNumRows
   \   00000028   000055E1           CMP      R5,R0
   \   0000002C   0900002A           BCS      ??LISTVIEW_DisableRow_1
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   380096E5           LDR      R0,[R6, #+56]
   \   00000038   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000003C   0110A0E3           MOV      R1,#+1
   \   00000040   0410C0E5           STRB     R1,[R0, #+4]
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
   \   00000048   0520A0E1           MOV      R2,R5
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       LISTVIEW__InvalidateRow
   \                     ??LISTVIEW_DisableRow_1:
   \   00000058   ........           BL       GUI_ALLOC_UnlockH
   \   0000005C   ........           BL       GUI_Unlock
     67          }
   \                     ??LISTVIEW_DisableRow_0:
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
     68          
     69          /*********************************************************************
     70          *
     71          *       LISTVIEW_EnableRow
     72          */

   \                                 In section .text, align 4, keep-with-next
     73          void LISTVIEW_EnableRow(LISTVIEW_Handle hObj, unsigned Row) {
   \                     LISTVIEW_EnableRow:
   \   00000000   70402DE9           PUSH     {R4-R6,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
     74            _SetRowDisabled(hObj, Row, 0);
   \   0000000C   000054E3           CMP      R4,#+0
   \   00000010   1200000A           BEQ      ??LISTVIEW_EnableRow_0
   \   00000014   ........           BL       GUI_Lock
   \   00000018   0400A0E1           MOV      R0,R4
   \   0000001C   ........           BL       GUI_ALLOC_LockH
   \   00000020   0060A0E1           MOV      R6,R0
   \   00000024   ........           BL       LISTVIEW__GetNumRows
   \   00000028   000055E1           CMP      R5,R0
   \   0000002C   0900002A           BCS      ??LISTVIEW_EnableRow_1
   \   00000030   0510A0E1           MOV      R1,R5
   \   00000034   380096E5           LDR      R0,[R6, #+56]
   \   00000038   ........           BL       GUI_ARRAY_GetpItemLocked
   \   0000003C   0010A0E3           MOV      R1,#+0
   \   00000040   0410C0E5           STRB     R1,[R0, #+4]
   \   00000044   ........           BL       GUI_ALLOC_UnlockH
   \   00000048   0520A0E1           MOV      R2,R5
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       LISTVIEW__InvalidateRow
   \                     ??LISTVIEW_EnableRow_1:
   \   00000058   ........           BL       GUI_ALLOC_UnlockH
   \   0000005C   ........           BL       GUI_Unlock
     75          }
   \                     ??LISTVIEW_EnableRow_0:
   \   00000060   7080BDE8           POP      {R4-R6,PC}       ;; return
     76          
     77          #else                            /* Avoid problems with empty object modules */
     78            void LISTVIEW_DisableRow_C(void);
     79            void LISTVIEW_DisableRow_C(void) {}
     80          #endif
     81          
     82          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function            .cstack
     --------            -------
     LISTVIEW_DisableRow     16
     LISTVIEW_EnableRow      16


   Section sizes:

     Function/Label      Bytes
     --------------      -----
     LISTVIEW_DisableRow  100
     LISTVIEW_EnableRow   100

 
 200 bytes in section .text
 
 200 bytes of CODE memory

Errors: none
Warnings: none
