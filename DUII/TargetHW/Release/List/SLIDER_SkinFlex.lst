###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:44 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\SLIDER_SkinFlex.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\SLIDER_SkinFlex.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\SLIDER_SkinFlex.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\SLIDER_SkinFlex.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\SLIDER_SkinFlex.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : SLIDER_SkinFlex.c
     19          Purpose     : Implementation of framewindow skin
     20          ---------------------------END-OF-HEADER------------------------------
     21          */
     22          
     23          #include "SLIDER_Private.h"
     24          #include "GUI_Private.h"
     25          #include "WM_Intern.h"
     26          
     27          #if GUI_WINSUPPORT
     28          
     29          /*********************************************************************
     30          *
     31          *       Defines (configuration defaults)
     32          *
     33          **********************************************************************
     34          */
     35          #ifndef   SLIDER_SKINPROPS_TICKSIZE
     36            #define SLIDER_SKINPROPS_TICKSIZE    3
     37          #endif
     38          #ifndef   SLIDER_SKINPROPS_SHAFTSIZE
     39            #define SLIDER_SKINPROPS_SHAFTSIZE   3
     40          #endif
     41          
     42          #ifndef   SLIDER_SKINPROPS_PRESSED

   \                                 In section .data, align 4
     43            static SLIDER_SKINFLEX_PROPS _PropsPressed = {
   \                     _PropsPressed:
   \   00000000   2C628B009EB0       DC32 9134636, 12234910, 16577765, 14398312, 9803157, 15987699, 12632256
   \              BA00E5F4FC00
   \              68B3DB009595
   \              9500F3F3F300
   \              C0C0C000    
   \   0000001C   404040000000       DC32 4210752, 0, 3, 3
   \              000003000000
   \              03000000    
     44              { 0x008B622C, 0x00BAB09E },
     45              { 0x00FCF4E5, 0x00DBB368 },
     46              { 0x00959595, 0x00F3F3F3, 0x00C0C0C0 },
     47              0x00404040,
     48              0x00000000,
     49              SLIDER_SKINPROPS_TICKSIZE,
     50              SLIDER_SKINPROPS_SHAFTSIZE
     51            };
     52            #define SLIDER_SKINPROPS_PRESSED     &_PropsPressed
     53          #endif
     54          
     55          #ifndef   SLIDER_SKINPROPS_UNPRESSED
     56            static SLIDER_SKINFLEX_PROPS _PropsUnpressed = {
   \                     _PropsUnpressed:
   \   0000002C   70707000FCFC       DC32 7368816, 16579836, 15921906, 12369084, 9803157, 15987699, 12632256
   \              FC00F2F2F200
   \              BCBCBC009595
   \              9500F3F3F300
   \              C0C0C000    
   \   00000048   404040000000       DC32 4210752, 0, 3, 3
   \              000003000000
   \              03000000    
     57              { 0x00707070, 0x00FCFCFC },
     58              { 0x00F2F2F2, 0x00BCBCBC  },
     59              { 0x00959595, 0x00F3F3F3, 0x00C0C0C0 },
     60              0x00404040,
     61              0x00000000,
     62              SLIDER_SKINPROPS_TICKSIZE,
     63              SLIDER_SKINPROPS_SHAFTSIZE
     64            };
     65            #define SLIDER_SKINPROPS_UNPRESSED   &_PropsUnpressed
     66          #endif
     67          
     68          /*********************************************************************
     69          *
     70          *       Static data
     71          *
     72          **********************************************************************
     73          */

   \                                 In section .text, align 4, keep-with-next
     74          static SLIDER_SKINFLEX_PROPS * const _apProps[] = {
   \                     _apProps:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   ............       DC32 _PropsPressed, _PropsUnpressed
   \              ....        
     75            SLIDER_SKINPROPS_PRESSED,
     76            SLIDER_SKINPROPS_UNPRESSED
     77          };
     78          
     79          /*********************************************************************
     80          *
     81          *       Static code
     82          *
     83          **********************************************************************
     84          */
     85          /*********************************************************************
     86          *
     87          *       _DrawShaftH
     88          */

   \                                 In section .text, align 4, keep-with-next
     89          static void _DrawShaftH(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
   \                     _DrawShaftH:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
     90            int y0, y1, h;
     91          
     92            h  = pDrawItemInfo->y1 - pDrawItemInfo->y0 + 1 - pProps->TickSize - 1;
     93            y0 = pDrawItemInfo->y0 + pProps->TickSize + 1 + (h - pProps->ShaftSize) / 2;
   \   00000008   102094E5           LDR      R2,[R4, #+16]
   \   0000000C   183094E5           LDR      R3,[R4, #+24]
   \   00000010   0150A0E1           MOV      R5,R1
   \   00000014   241095E5           LDR      R1,[R5, #+36]
   \   00000018   023043E0           SUB      R3,R3,R2
   \   0000001C   013083E2           ADD      R3,R3,#+1
   \   00000020   280095E5           LDR      R0,[R5, #+40]
   \   00000024   013043E0           SUB      R3,R3,R1
   \   00000028   013043E2           SUB      R3,R3,#+1
   \   0000002C   003043E0           SUB      R3,R3,R0
   \   00000030   021081E0           ADD      R1,R1,R2
   \   00000034   A32F83E0           ADD      R2,R3,R3, LSR #+31
   \   00000038   C21081E0           ADD      R1,R1,R2, ASR #+1
   \   0000003C   016081E2           ADD      R6,R1,#+1
     94            y1 = y0 + pProps->ShaftSize - 1;
   \   00000040   060080E0           ADD      R0,R0,R6
   \   00000044   017040E2           SUB      R7,R0,#+1
     95            GUI_SetColor(pProps->aColorShaft[0]);
   \   00000048   100095E5           LDR      R0,[R5, #+16]
   \   0000004C   ........           BL       GUI_SetColor
     96            GUI_DrawVLine(pDrawItemInfo->x0, y0, y1);
   \   00000050   0720A0E1           MOV      R2,R7
   \   00000054   0610A0E1           MOV      R1,R6
   \   00000058   0C0094E5           LDR      R0,[R4, #+12]
   \   0000005C   ........           BL       GUI_DrawVLine
     97            GUI_DrawHLine(y0, pDrawItemInfo->x0 + 1, pDrawItemInfo->x1);
   \   00000060   0C0094E5           LDR      R0,[R4, #+12]
   \   00000064   142094E5           LDR      R2,[R4, #+20]
   \   00000068   011080E2           ADD      R1,R0,#+1
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   ........           BL       GUI_DrawHLine
     98            GUI_SetColor(pProps->aColorShaft[1]);
   \   00000074   140095E5           LDR      R0,[R5, #+20]
   \   00000078   ........           BL       GUI_SetColor
     99            GUI_DrawVLine(pDrawItemInfo->x1, y0 + 1, y1 - 1);
   \   0000007C   016086E2           ADD      R6,R6,#+1
   \   00000080   018047E2           SUB      R8,R7,#+1
   \   00000084   0820A0E1           MOV      R2,R8
   \   00000088   0610A0E1           MOV      R1,R6
   \   0000008C   140094E5           LDR      R0,[R4, #+20]
   \   00000090   ........           BL       GUI_DrawVLine
    100            GUI_DrawHLine(y1, pDrawItemInfo->x0 + 1, pDrawItemInfo->x1);
   \   00000094   0C0094E5           LDR      R0,[R4, #+12]
   \   00000098   142094E5           LDR      R2,[R4, #+20]
   \   0000009C   011080E2           ADD      R1,R0,#+1
   \   000000A0   0700A0E1           MOV      R0,R7
   \   000000A4   ........           BL       GUI_DrawHLine
    101            GUI_SetColor(pProps->aColorShaft[2]);
   \   000000A8   180095E5           LDR      R0,[R5, #+24]
   \   000000AC   ........           BL       GUI_SetColor
    102            GUI_FillRect(pDrawItemInfo->x0 + 1, y0 + 1, pDrawItemInfo->x1 - 1, y1 - 1);
   \   000000B0   140094E5           LDR      R0,[R4, #+20]
   \   000000B4   0830A0E1           MOV      R3,R8
   \   000000B8   012040E2           SUB      R2,R0,#+1
   \   000000BC   0610A0E1           MOV      R1,R6
   \   000000C0   0C0094E5           LDR      R0,[R4, #+12]
   \   000000C4   F041BDE8           POP      {R4-R8,LR}
   \   000000C8   010080E2           ADD      R0,R0,#+1
   \   000000CC   ........           B        GUI_FillRect     ;; tailcall
    103          }
    104          
    105          /*********************************************************************
    106          *
    107          *       _DrawShaftV
    108          */

   \                                 In section .text, align 4, keep-with-next
    109          static void _DrawShaftV(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
   \                     _DrawShaftV:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
    110            int x0, x1, h;
    111          
    112            h  = pDrawItemInfo->x1 - pDrawItemInfo->x0 + 1 - pProps->TickSize - 1;
    113            x0 = pDrawItemInfo->x0 + (h - pProps->ShaftSize) / 2;
   \   0000000C   0C1094E5           LDR      R1,[R4, #+12]
   \   00000010   142094E5           LDR      R2,[R4, #+20]
   \   00000014   243095E5           LDR      R3,[R5, #+36]
   \   00000018   012042E0           SUB      R2,R2,R1
   \   0000001C   012082E2           ADD      R2,R2,#+1
   \   00000020   280095E5           LDR      R0,[R5, #+40]
   \   00000024   032042E0           SUB      R2,R2,R3
   \   00000028   012042E2           SUB      R2,R2,#+1
   \   0000002C   002042E0           SUB      R2,R2,R0
   \   00000030   A22F82E0           ADD      R2,R2,R2, LSR #+31
   \   00000034   C26081E0           ADD      R6,R1,R2, ASR #+1
    114            x1 = x0 + pProps->ShaftSize - 1;
   \   00000038   060080E0           ADD      R0,R0,R6
   \   0000003C   017040E2           SUB      R7,R0,#+1
    115            GUI_SetColor(pProps->aColorShaft[0]);
   \   00000040   100095E5           LDR      R0,[R5, #+16]
   \   00000044   ........           BL       GUI_SetColor
    116            GUI_DrawHLine(pDrawItemInfo->y0, x0, x1);
   \   00000048   0720A0E1           MOV      R2,R7
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   100094E5           LDR      R0,[R4, #+16]
   \   00000054   ........           BL       GUI_DrawHLine
    117            GUI_DrawVLine(x0, pDrawItemInfo->y0 + 1, pDrawItemInfo->y1);
   \   00000058   100094E5           LDR      R0,[R4, #+16]
   \   0000005C   182094E5           LDR      R2,[R4, #+24]
   \   00000060   011080E2           ADD      R1,R0,#+1
   \   00000064   0600A0E1           MOV      R0,R6
   \   00000068   ........           BL       GUI_DrawVLine
    118            GUI_SetColor(pProps->aColorShaft[1]);
   \   0000006C   140095E5           LDR      R0,[R5, #+20]
   \   00000070   ........           BL       GUI_SetColor
    119            GUI_DrawHLine(pDrawItemInfo->y1, x0 + 1, x1 - 1);
   \   00000074   016086E2           ADD      R6,R6,#+1
   \   00000078   018047E2           SUB      R8,R7,#+1
   \   0000007C   0820A0E1           MOV      R2,R8
   \   00000080   0610A0E1           MOV      R1,R6
   \   00000084   180094E5           LDR      R0,[R4, #+24]
   \   00000088   ........           BL       GUI_DrawHLine
    120            GUI_DrawVLine(x1, pDrawItemInfo->y0 + 1, pDrawItemInfo->y1);
   \   0000008C   100094E5           LDR      R0,[R4, #+16]
   \   00000090   182094E5           LDR      R2,[R4, #+24]
   \   00000094   011080E2           ADD      R1,R0,#+1
   \   00000098   0700A0E1           MOV      R0,R7
   \   0000009C   ........           BL       GUI_DrawVLine
    121            GUI_SetColor(pProps->aColorShaft[2]);
   \   000000A0   180095E5           LDR      R0,[R5, #+24]
   \   000000A4   ........           BL       GUI_SetColor
    122            GUI_FillRect(x0 + 1, pDrawItemInfo->y0 + 1, x1 - 1, pDrawItemInfo->y1 - 1);
   \   000000A8   180094E5           LDR      R0,[R4, #+24]
   \   000000AC   0820A0E1           MOV      R2,R8
   \   000000B0   013040E2           SUB      R3,R0,#+1
   \   000000B4   100094E5           LDR      R0,[R4, #+16]
   \   000000B8   011080E2           ADD      R1,R0,#+1
   \   000000BC   0600A0E1           MOV      R0,R6
   \   000000C0   F041BDE8           POP      {R4-R8,LR}
   \   000000C4   ........           B        GUI_FillRect     ;; tailcall
    123          }
    124          
    125          /*********************************************************************
    126          *
    127          *       _DrawThumbH
    128          */

   \                                 In section .text, align 4, keep-with-next
    129          static void _DrawThumbH(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
   \                     _DrawThumbH:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    130            SLIDER_SKINFLEX_INFO * pSkinInfo;
    131            int x0, x1, y, i, w2;
    132          
    133            pSkinInfo = (SLIDER_SKINFLEX_INFO *)pDrawItemInfo->p;
    134            w2 = (pSkinInfo->Width + 1) >> 1;
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
    135            y  = pDrawItemInfo->y0 + pProps->TickSize + 1;
   \   00000014   241097E5           LDR      R1,[R7, #+36]
   \   00000018   010080E2           ADD      R0,R0,#+1
   \   0000001C   C050A0E1           ASR      R5,R0,#+1
   \   00000020   100094E5           LDR      R0,[R4, #+16]
   \   00000024   08D04DE2           SUB      SP,SP,#+8
   \   00000028   000081E0           ADD      R0,R1,R0
   \   0000002C   016080E2           ADD      R6,R0,#+1
    136            GUI_SetColor(pProps->aColorFrame[0]);
   \   00000030   000097E5           LDR      R0,[R7, #+0]
   \   00000034   ........           BL       GUI_SetColor
    137            GUI_DrawLine(pDrawItemInfo->x0 + w2 - 1, y, pDrawItemInfo->x0, y + w2 - 1);
   \   00000038   0C2094E5           LDR      R2,[R4, #+12]
   \   0000003C   068085E0           ADD      R8,R5,R6
   \   00000040   019048E2           SUB      R9,R8,#+1
   \   00000044   020085E0           ADD      R0,R5,R2
   \   00000048   0930A0E1           MOV      R3,R9
   \   0000004C   0610A0E1           MOV      R1,R6
   \   00000050   010040E2           SUB      R0,R0,#+1
   \   00000054   ........           BL       GUI_DrawLine
    138            GUI_DrawLine(pDrawItemInfo->x1 - w2 + 1, y, pDrawItemInfo->x1, y + w2 - 1);
   \   00000058   142094E5           LDR      R2,[R4, #+20]
   \   0000005C   0930A0E1           MOV      R3,R9
   \   00000060   050042E0           SUB      R0,R2,R5
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   010080E2           ADD      R0,R0,#+1
   \   0000006C   ........           BL       GUI_DrawLine
    139            GUI_DrawVLine(pDrawItemInfo->x0, y + w2, pDrawItemInfo->y1);
   \   00000070   182094E5           LDR      R2,[R4, #+24]
   \   00000074   0810A0E1           MOV      R1,R8
   \   00000078   0C0094E5           LDR      R0,[R4, #+12]
   \   0000007C   ........           BL       GUI_DrawVLine
    140            GUI_DrawVLine(pDrawItemInfo->x1, y + w2, pDrawItemInfo->y1);
   \   00000080   182094E5           LDR      R2,[R4, #+24]
   \   00000084   0810A0E1           MOV      R1,R8
   \   00000088   140094E5           LDR      R0,[R4, #+20]
   \   0000008C   ........           BL       GUI_DrawVLine
    141            GUI_DrawHLine(pDrawItemInfo->y1, pDrawItemInfo->x0 + 1, pDrawItemInfo->x1 - 1);
   \   00000090   140094E5           LDR      R0,[R4, #+20]
   \   00000094   012040E2           SUB      R2,R0,#+1
   \   00000098   0C0094E5           LDR      R0,[R4, #+12]
   \   0000009C   011080E2           ADD      R1,R0,#+1
   \   000000A0   180094E5           LDR      R0,[R4, #+24]
   \   000000A4   ........           BL       GUI_DrawHLine
    142            GUI_SetColor(pProps->aColorFrame[1]);
   \   000000A8   040097E5           LDR      R0,[R7, #+4]
   \   000000AC   ........           BL       GUI_SetColor
    143            GUI_DrawLine(pDrawItemInfo->x0 + w2 - 1, y + 1, pDrawItemInfo->x0 + 1, y + w2 - 1);
   \   000000B0   0C0094E5           LDR      R0,[R4, #+12]
   \   000000B4   01A086E2           ADD      R10,R6,#+1
   \   000000B8   012080E2           ADD      R2,R0,#+1
   \   000000BC   000085E0           ADD      R0,R5,R0
   \   000000C0   0930A0E1           MOV      R3,R9
   \   000000C4   0A10A0E1           MOV      R1,R10
   \   000000C8   010040E2           SUB      R0,R0,#+1
   \   000000CC   ........           BL       GUI_DrawLine
    144            GUI_DrawLine(pDrawItemInfo->x1 - w2 + 1, y + 1, pDrawItemInfo->x1 - 1, y + w2 - 1);
   \   000000D0   140094E5           LDR      R0,[R4, #+20]
   \   000000D4   0930A0E1           MOV      R3,R9
   \   000000D8   012040E2           SUB      R2,R0,#+1
   \   000000DC   050040E0           SUB      R0,R0,R5
   \   000000E0   0A10A0E1           MOV      R1,R10
   \   000000E4   010080E2           ADD      R0,R0,#+1
   \   000000E8   ........           BL       GUI_DrawLine
    145            GUI_DrawVLine(pDrawItemInfo->x0 + 1, y + w2, pDrawItemInfo->y1 - 1);
   \   000000EC   180094E5           LDR      R0,[R4, #+24]
   \   000000F0   0810A0E1           MOV      R1,R8
   \   000000F4   012040E2           SUB      R2,R0,#+1
   \   000000F8   0C0094E5           LDR      R0,[R4, #+12]
   \   000000FC   010080E2           ADD      R0,R0,#+1
   \   00000100   ........           BL       GUI_DrawVLine
    146            GUI_DrawVLine(pDrawItemInfo->x1 - 1, y + w2, pDrawItemInfo->y1 - 1);
   \   00000104   180094E5           LDR      R0,[R4, #+24]
   \   00000108   0810A0E1           MOV      R1,R8
   \   0000010C   012040E2           SUB      R2,R0,#+1
   \   00000110   140094E5           LDR      R0,[R4, #+20]
   \   00000114   010040E2           SUB      R0,R0,#+1
   \   00000118   ........           BL       GUI_DrawVLine
    147            GUI_DrawHLine(pDrawItemInfo->y1 - 1, pDrawItemInfo->x0 + 2, pDrawItemInfo->x1 - 2);
   \   0000011C   140094E5           LDR      R0,[R4, #+20]
   \   00000120   022040E2           SUB      R2,R0,#+2
   \   00000124   0C0094E5           LDR      R0,[R4, #+12]
   \   00000128   021080E2           ADD      R1,R0,#+2
   \   0000012C   180094E5           LDR      R0,[R4, #+24]
   \   00000130   010040E2           SUB      R0,R0,#+1
   \   00000134   ........           BL       GUI_DrawHLine
    148            GUI_DrawGradientV(pDrawItemInfo->x0 + 2, y + w2 - 1, pDrawItemInfo->x1 - 2, pDrawItemInfo->y1 - 2, pProps->aColorInner[0], pProps->aColorInner[1]);
   \   00000138   0C0097E5           LDR      R0,[R7, #+12]
   \   0000013C   0910A0E1           MOV      R1,R9
   \   00000140   04008DE5           STR      R0,[SP, #+4]
   \   00000144   080097E5           LDR      R0,[R7, #+8]
   \   00000148   00008DE5           STR      R0,[SP, #+0]
   \   0000014C   180094E5           LDR      R0,[R4, #+24]
   \   00000150   023040E2           SUB      R3,R0,#+2
   \   00000154   140094E5           LDR      R0,[R4, #+20]
   \   00000158   022040E2           SUB      R2,R0,#+2
   \   0000015C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000160   020080E2           ADD      R0,R0,#+2
   \   00000164   ........           BL       GUI_DrawGradientV
    149            GUI_SetColor(pProps->aColorInner[0]);
   \   00000168   080097E5           LDR      R0,[R7, #+8]
   \   0000016C   ........           BL       GUI_SetColor
    150            for (i = 2; i < w2 - 1; i++) {
   \   00000170   010045E2           SUB      R0,R5,#+1
   \   00000174   0280A0E3           MOV      R8,#+2
   \   00000178   030050E3           CMP      R0,#+3
   \   0000017C   250000BA           BLT      ??_DrawThumbH_0
   \   00000180   037045E2           SUB      R7,R5,#+3
   \   00000184   010017E3           TST      R7,#0x1
   \   00000188   0800000A           BEQ      ??_DrawThumbH_1
    151              x0 = pDrawItemInfo->x0 + w2 - i + 1;
    152              x1 = pDrawItemInfo->x1 - w2 + i - 1; 
    153              GUI_DrawHLine(y + i, x0, x1);
   \   0000018C   140094E5           LDR      R0,[R4, #+20]
   \   00000190   010080E2           ADD      R0,R0,#+1
   \   00000194   052040E0           SUB      R2,R0,R5
   \   00000198   0C0094E5           LDR      R0,[R4, #+12]
   \   0000019C   000085E0           ADD      R0,R5,R0
   \   000001A0   011040E2           SUB      R1,R0,#+1
   \   000001A4   020086E2           ADD      R0,R6,#+2
   \   000001A8   ........           BL       GUI_DrawHLine
   \   000001AC   0380A0E3           MOV      R8,#+3
   \                     ??_DrawThumbH_1:
   \   000001B0   A770B0E1           LSRS     R7,R7,#+1
   \   000001B4   1700000A           BEQ      ??_DrawThumbH_0
   \                     ??_DrawThumbH_2:
   \   000001B8   140094E5           LDR      R0,[R4, #+20]
   \   000001BC   080080E0           ADD      R0,R0,R8
   \   000001C0   010040E2           SUB      R0,R0,#+1
   \   000001C4   052040E0           SUB      R2,R0,R5
   \   000001C8   0C0094E5           LDR      R0,[R4, #+12]
   \   000001CC   000085E0           ADD      R0,R5,R0
   \   000001D0   080040E0           SUB      R0,R0,R8
   \   000001D4   011080E2           ADD      R1,R0,#+1
   \   000001D8   060088E0           ADD      R0,R8,R6
   \   000001DC   ........           BL       GUI_DrawHLine
   \   000001E0   140094E5           LDR      R0,[R4, #+20]
   \   000001E4   018088E2           ADD      R8,R8,#+1
   \   000001E8   080080E0           ADD      R0,R0,R8
   \   000001EC   010040E2           SUB      R0,R0,#+1
   \   000001F0   052040E0           SUB      R2,R0,R5
   \   000001F4   0C0094E5           LDR      R0,[R4, #+12]
   \   000001F8   000085E0           ADD      R0,R5,R0
   \   000001FC   080040E0           SUB      R0,R0,R8
   \   00000200   011080E2           ADD      R1,R0,#+1
   \   00000204   060088E0           ADD      R0,R8,R6
   \   00000208   ........           BL       GUI_DrawHLine
    154            }
   \   0000020C   018088E2           ADD      R8,R8,#+1
   \   00000210   017057E2           SUBS     R7,R7,#+1
   \   00000214   E7FFFF1A           BNE      ??_DrawThumbH_2
    155          }
   \                     ??_DrawThumbH_0:
   \   00000218   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   0000021C   F087BDE8           POP      {R4-R10,PC}      ;; return
    156          
    157          /*********************************************************************
    158          *
    159          *       _DrawThumbV
    160          */

   \                                 In section .text, align 4, keep-with-next
    161          static void _DrawThumbV(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
   \                     _DrawThumbV:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    162            SLIDER_SKINFLEX_INFO * pSkinInfo;
    163            int y0, y1, x, i, w2;
    164          
    165            pSkinInfo = (SLIDER_SKINFLEX_INFO *)pDrawItemInfo->p;
    166            w2 = (pSkinInfo->Width + 1) >> 1;
   \   00000008   1C0094E5           LDR      R0,[R4, #+28]
   \   0000000C   0170A0E1           MOV      R7,R1
   \   00000010   000090E5           LDR      R0,[R0, #+0]
    167            x  = pDrawItemInfo->x1 - pProps->TickSize - 1;
   \   00000014   241097E5           LDR      R1,[R7, #+36]
   \   00000018   010080E2           ADD      R0,R0,#+1
   \   0000001C   C050A0E1           ASR      R5,R0,#+1
   \   00000020   140094E5           LDR      R0,[R4, #+20]
   \   00000024   08D04DE2           SUB      SP,SP,#+8
   \   00000028   010040E0           SUB      R0,R0,R1
   \   0000002C   016040E2           SUB      R6,R0,#+1
    168            GUI_SetColor(pProps->aColorFrame[0]);
   \   00000030   000097E5           LDR      R0,[R7, #+0]
   \   00000034   ........           BL       GUI_SetColor
    169            GUI_DrawLine(x - w2 + 1, pDrawItemInfo->y0, x, pDrawItemInfo->y0 + w2 - 1);
   \   00000038   101094E5           LDR      R1,[R4, #+16]
   \   0000003C   058046E0           SUB      R8,R6,R5
   \   00000040   010085E0           ADD      R0,R5,R1
   \   00000044   019088E2           ADD      R9,R8,#+1
   \   00000048   013040E2           SUB      R3,R0,#+1
   \   0000004C   0620A0E1           MOV      R2,R6
   \   00000050   0900A0E1           MOV      R0,R9
   \   00000054   ........           BL       GUI_DrawLine
    170            GUI_DrawLine(x - w2 + 1, pDrawItemInfo->y1, x, pDrawItemInfo->y1 - w2 + 1);
   \   00000058   181094E5           LDR      R1,[R4, #+24]
   \   0000005C   0620A0E1           MOV      R2,R6
   \   00000060   050041E0           SUB      R0,R1,R5
   \   00000064   013080E2           ADD      R3,R0,#+1
   \   00000068   0900A0E1           MOV      R0,R9
   \   0000006C   ........           BL       GUI_DrawLine
    171            GUI_DrawHLine(pDrawItemInfo->y0, pDrawItemInfo->x0, x - w2);
   \   00000070   0820A0E1           MOV      R2,R8
   \   00000074   0C1094E5           LDR      R1,[R4, #+12]
   \   00000078   100094E5           LDR      R0,[R4, #+16]
   \   0000007C   ........           BL       GUI_DrawHLine
    172            GUI_DrawHLine(pDrawItemInfo->y1, pDrawItemInfo->x0, x - w2);
   \   00000080   0820A0E1           MOV      R2,R8
   \   00000084   0C1094E5           LDR      R1,[R4, #+12]
   \   00000088   180094E5           LDR      R0,[R4, #+24]
   \   0000008C   ........           BL       GUI_DrawHLine
    173            GUI_DrawVLine(pDrawItemInfo->x0, pDrawItemInfo->y0, pDrawItemInfo->y1);
   \   00000090   182094E5           LDR      R2,[R4, #+24]
   \   00000094   101094E5           LDR      R1,[R4, #+16]
   \   00000098   0C0094E5           LDR      R0,[R4, #+12]
   \   0000009C   ........           BL       GUI_DrawVLine
    174            GUI_SetColor(pProps->aColorFrame[1]);
   \   000000A0   040097E5           LDR      R0,[R7, #+4]
   \   000000A4   ........           BL       GUI_SetColor
    175            GUI_DrawLine(x - w2 + 1, pDrawItemInfo->y0 + 1, x - 1, pDrawItemInfo->y0 + w2 - 1);
   \   000000A8   100094E5           LDR      R0,[R4, #+16]
   \   000000AC   01A046E2           SUB      R10,R6,#+1
   \   000000B0   001085E0           ADD      R1,R5,R0
   \   000000B4   013041E2           SUB      R3,R1,#+1
   \   000000B8   011080E2           ADD      R1,R0,#+1
   \   000000BC   0A20A0E1           MOV      R2,R10
   \   000000C0   0900A0E1           MOV      R0,R9
   \   000000C4   ........           BL       GUI_DrawLine
    176            GUI_DrawLine(x - w2 + 1, pDrawItemInfo->y1 - 1, x - 1, pDrawItemInfo->y1 - w2 + 1);
   \   000000C8   180094E5           LDR      R0,[R4, #+24]
   \   000000CC   0A20A0E1           MOV      R2,R10
   \   000000D0   051040E0           SUB      R1,R0,R5
   \   000000D4   013081E2           ADD      R3,R1,#+1
   \   000000D8   011040E2           SUB      R1,R0,#+1
   \   000000DC   0900A0E1           MOV      R0,R9
   \   000000E0   ........           BL       GUI_DrawLine
    177            GUI_DrawHLine(pDrawItemInfo->y0 + 1, pDrawItemInfo->x0 + 1, x - w2);
   \   000000E4   0C0094E5           LDR      R0,[R4, #+12]
   \   000000E8   0820A0E1           MOV      R2,R8
   \   000000EC   011080E2           ADD      R1,R0,#+1
   \   000000F0   100094E5           LDR      R0,[R4, #+16]
   \   000000F4   010080E2           ADD      R0,R0,#+1
   \   000000F8   ........           BL       GUI_DrawHLine
    178            GUI_DrawHLine(pDrawItemInfo->y1 - 1, pDrawItemInfo->x0 + 1, x - w2);
   \   000000FC   0C0094E5           LDR      R0,[R4, #+12]
   \   00000100   0820A0E1           MOV      R2,R8
   \   00000104   011080E2           ADD      R1,R0,#+1
   \   00000108   180094E5           LDR      R0,[R4, #+24]
   \   0000010C   010040E2           SUB      R0,R0,#+1
   \   00000110   ........           BL       GUI_DrawHLine
    179            GUI_DrawVLine(pDrawItemInfo->x0 + 1, pDrawItemInfo->y0 + 1, pDrawItemInfo->y1 - 1);
   \   00000114   180094E5           LDR      R0,[R4, #+24]
   \   00000118   012040E2           SUB      R2,R0,#+1
   \   0000011C   100094E5           LDR      R0,[R4, #+16]
   \   00000120   011080E2           ADD      R1,R0,#+1
   \   00000124   0C0094E5           LDR      R0,[R4, #+12]
   \   00000128   010080E2           ADD      R0,R0,#+1
   \   0000012C   ........           BL       GUI_DrawVLine
    180            GUI_DrawGradientH(pDrawItemInfo->x0 + 2, pDrawItemInfo->y0 + 2, x - w2 + 1, pDrawItemInfo->y1 - 2, pProps->aColorInner[0], pProps->aColorInner[1]);
   \   00000130   0C0097E5           LDR      R0,[R7, #+12]
   \   00000134   0920A0E1           MOV      R2,R9
   \   00000138   04008DE5           STR      R0,[SP, #+4]
   \   0000013C   080097E5           LDR      R0,[R7, #+8]
   \   00000140   00008DE5           STR      R0,[SP, #+0]
   \   00000144   180094E5           LDR      R0,[R4, #+24]
   \   00000148   023040E2           SUB      R3,R0,#+2
   \   0000014C   100094E5           LDR      R0,[R4, #+16]
   \   00000150   021080E2           ADD      R1,R0,#+2
   \   00000154   0C0094E5           LDR      R0,[R4, #+12]
   \   00000158   020080E2           ADD      R0,R0,#+2
   \   0000015C   ........           BL       GUI_DrawGradientH
    181            GUI_SetColor(pProps->aColorInner[1]);
   \   00000160   0C0097E5           LDR      R0,[R7, #+12]
   \   00000164   ........           BL       GUI_SetColor
    182            for (i = 2; i < w2 - 1; i++) {
   \   00000168   010045E2           SUB      R0,R5,#+1
   \   0000016C   0280A0E3           MOV      R8,#+2
   \   00000170   030050E3           CMP      R0,#+3
   \   00000174   250000BA           BLT      ??_DrawThumbV_0
   \   00000178   037045E2           SUB      R7,R5,#+3
   \   0000017C   010017E3           TST      R7,#0x1
   \   00000180   0800000A           BEQ      ??_DrawThumbV_1
    183              y0 = pDrawItemInfo->y0 + w2 - i + 1;
    184              y1 = pDrawItemInfo->y1 - w2 + i - 1; 
    185              GUI_DrawVLine(x - i, y0, y1);
   \   00000184   180094E5           LDR      R0,[R4, #+24]
   \   00000188   010080E2           ADD      R0,R0,#+1
   \   0000018C   052040E0           SUB      R2,R0,R5
   \   00000190   100094E5           LDR      R0,[R4, #+16]
   \   00000194   000085E0           ADD      R0,R5,R0
   \   00000198   011040E2           SUB      R1,R0,#+1
   \   0000019C   020046E2           SUB      R0,R6,#+2
   \   000001A0   ........           BL       GUI_DrawVLine
   \   000001A4   0380A0E3           MOV      R8,#+3
   \                     ??_DrawThumbV_1:
   \   000001A8   A770B0E1           LSRS     R7,R7,#+1
   \   000001AC   1700000A           BEQ      ??_DrawThumbV_0
   \                     ??_DrawThumbV_2:
   \   000001B0   180094E5           LDR      R0,[R4, #+24]
   \   000001B4   080080E0           ADD      R0,R0,R8
   \   000001B8   010040E2           SUB      R0,R0,#+1
   \   000001BC   052040E0           SUB      R2,R0,R5
   \   000001C0   100094E5           LDR      R0,[R4, #+16]
   \   000001C4   000085E0           ADD      R0,R5,R0
   \   000001C8   080040E0           SUB      R0,R0,R8
   \   000001CC   011080E2           ADD      R1,R0,#+1
   \   000001D0   080046E0           SUB      R0,R6,R8
   \   000001D4   ........           BL       GUI_DrawVLine
   \   000001D8   180094E5           LDR      R0,[R4, #+24]
   \   000001DC   018088E2           ADD      R8,R8,#+1
   \   000001E0   080080E0           ADD      R0,R0,R8
   \   000001E4   010040E2           SUB      R0,R0,#+1
   \   000001E8   052040E0           SUB      R2,R0,R5
   \   000001EC   100094E5           LDR      R0,[R4, #+16]
   \   000001F0   000085E0           ADD      R0,R5,R0
   \   000001F4   080040E0           SUB      R0,R0,R8
   \   000001F8   011080E2           ADD      R1,R0,#+1
   \   000001FC   080046E0           SUB      R0,R6,R8
   \   00000200   ........           BL       GUI_DrawVLine
    186            }
   \   00000204   018088E2           ADD      R8,R8,#+1
   \   00000208   017057E2           SUBS     R7,R7,#+1
   \   0000020C   E7FFFF1A           BNE      ??_DrawThumbV_2
    187          }
   \                     ??_DrawThumbV_0:
   \   00000210   08D08DE2           ADD      SP,SP,#+8        ;; stack cleaning
   \   00000214   F087BDE8           POP      {R4-R10,PC}      ;; return
    188          
    189          /*********************************************************************
    190          *
    191          *       _DrawTicksH
    192          */
    193          static void _DrawTicksH(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
    194            SLIDER_SKINFLEX_INFO * pSkinInfo;
    195            int i, x;
    196          
    197            GUI_SetColor(pProps->ColorTick);
    198            pSkinInfo = (SLIDER_SKINFLEX_INFO *)pDrawItemInfo->p;
    199            for (i = 0; i < pSkinInfo->NumTicks; i++) {
    200              x = pSkinInfo->Width / 2 + pDrawItemInfo->x0 + pSkinInfo->Size * i / (pSkinInfo->NumTicks - 1);
    201              GUI_DrawVLine(x, pDrawItemInfo->y0, pDrawItemInfo->y0 + pProps->TickSize - 1);
    202            }
    203          }
    204          
    205          /*********************************************************************
    206          *
    207          *       _DrawTicksV
    208          */
    209          static void _DrawTicksV(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
    210            SLIDER_SKINFLEX_INFO * pSkinInfo;
    211            int i, y;
    212          
    213            GUI_SetColor(pProps->ColorTick);
    214            pSkinInfo = (SLIDER_SKINFLEX_INFO *)pDrawItemInfo->p;
    215            for (i = 0; i < pSkinInfo->NumTicks; i++) {
    216              y = pSkinInfo->Width / 2 + pDrawItemInfo->y0 + pSkinInfo->Size * i / (pSkinInfo->NumTicks - 1);
    217              GUI_DrawHLine(y, pDrawItemInfo->x1 - pProps->TickSize + 1, pDrawItemInfo->x1);
    218            }
    219          }
    220          
    221          /*********************************************************************
    222          *
    223          *       _DrawFocusRect
    224          */
    225          static void _DrawFocusRect(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo, const SLIDER_SKINFLEX_PROPS * pProps) {
    226            GUI_RECT Rect;
    227          
    228            GUI_SetColor(pProps->ColorFocus);
    229            Rect.x0 = pDrawItemInfo->x0;
    230            Rect.y0 = pDrawItemInfo->y0;
    231            Rect.x1 = pDrawItemInfo->x1;
    232            Rect.y1 = pDrawItemInfo->y1;
    233            GUI_DrawFocusRect(&Rect, 0);
    234          }
    235          
    236          /*********************************************************************
    237          *
    238          *       Public code
    239          *
    240          **********************************************************************
    241          */
    242          /*********************************************************************
    243          *
    244          *       SLIDER_DrawSkinFlex
    245          */

   \                                 In section .text, align 4, keep-with-next
    246          int SLIDER_DrawSkinFlex(const WIDGET_ITEM_DRAW_INFO * pDrawItemInfo) {
   \                     SLIDER_DrawSkinFlex:
   \   00000000   F0472DE9           PUSH     {R4-R10,LR}
   \   00000004   0050A0E1           MOV      R5,R0
    247            const SLIDER_SKINFLEX_PROPS * pProps;
    248            SLIDER_SKINFLEX_INFO * pSkinInfo;
    249          
    250            pSkinInfo = (SLIDER_SKINFLEX_INFO *)pDrawItemInfo->p;
   \   00000008   1C1095E5           LDR      R1,[R5, #+28]
   \   0000000C   08D04DE2           SUB      SP,SP,#+8
    251            if (pSkinInfo) {
   \   00000010   000051E3           CMP      R1,#+0
   \   00000014   0300000A           BEQ      ??SLIDER_DrawSkinFlex_1
    252              pProps = (pSkinInfo->IsPressed) ? _apProps[SLIDER_SKINFLEX_PI_PRESSED] : _apProps[SLIDER_SKINFLEX_PI_UNPRESSED];
   \   00000018   0C0091E5           LDR      R0,[R1, #+12]
   \   0000001C   ........           LDR      R4,??DataTable1
   \   00000020   000050E3           CMP      R0,#+0
   \   00000024   2C408402           ADDEQ    R4,R4,#+44
    253            }
    254            switch (pDrawItemInfo->Cmd) {
   \                     ??SLIDER_DrawSkinFlex_1:
   \   00000028   040095E5           LDR      R0,[R5, #+4]
   \   0000002C   080040E2           SUB      R0,R0,#+8
   \   00000030   0A0050E3           CMP      R0,#+10
   \   00000034   00F18F90           ADDLS    PC,PC,R0, LSL #+2
   \                     ??SLIDER_DrawSkinFlex_0:
   \   00000038   5F00008A           BHI      ??SLIDER_DrawSkinFlex_2
   \   0000003C   510000EA           B        ??SLIDER_DrawSkinFlex_3
   \   00000040   5D0000EA           B        ??SLIDER_DrawSkinFlex_2
   \   00000044   5C0000EA           B        ??SLIDER_DrawSkinFlex_2
   \   00000048   5B0000EA           B        ??SLIDER_DrawSkinFlex_2
   \   0000004C   5A0000EA           B        ??SLIDER_DrawSkinFlex_2
   \   00000050   040000EA           B        ??SLIDER_DrawSkinFlex_4
   \   00000054   580000EA           B        ??SLIDER_DrawSkinFlex_2
   \   00000058   570000EA           B        ??SLIDER_DrawSkinFlex_2
   \   0000005C   560000EA           B        ??SLIDER_DrawSkinFlex_2
   \   00000060   090000EA           B        ??SLIDER_DrawSkinFlex_5
   \   00000064   110000EA           B        ??SLIDER_DrawSkinFlex_6
    255            case WIDGET_ITEM_DRAW_SHAFT:
    256              if (pSkinInfo->IsVertical) {
   \                     ??SLIDER_DrawSkinFlex_4:
   \   00000068   100091E5           LDR      R0,[R1, #+16]
   \   0000006C   0410A0E1           MOV      R1,R4
   \   00000070   000050E3           CMP      R0,#+0
   \   00000074   0500A0E1           MOV      R0,R5
   \   00000078   0100000A           BEQ      ??SLIDER_DrawSkinFlex_7
    257                _DrawShaftV(pDrawItemInfo, pProps);
   \   0000007C   ........           BL       _DrawShaftV
   \   00000080   4D0000EA           B        ??SLIDER_DrawSkinFlex_2
    258              } else {
    259                _DrawShaftH(pDrawItemInfo, pProps);
   \                     ??SLIDER_DrawSkinFlex_7:
   \   00000084   ........           BL       _DrawShaftH
   \   00000088   4B0000EA           B        ??SLIDER_DrawSkinFlex_2
    260              }
    261              break;
    262            case WIDGET_ITEM_DRAW_THUMB:
    263              if (pSkinInfo->IsVertical) {
   \                     ??SLIDER_DrawSkinFlex_5:
   \   0000008C   100091E5           LDR      R0,[R1, #+16]
   \   00000090   0410A0E1           MOV      R1,R4
   \   00000094   000050E3           CMP      R0,#+0
   \   00000098   0500A0E1           MOV      R0,R5
   \   0000009C   0100000A           BEQ      ??SLIDER_DrawSkinFlex_8
    264                _DrawThumbV(pDrawItemInfo, pProps);
   \   000000A0   ........           BL       _DrawThumbV
   \   000000A4   440000EA           B        ??SLIDER_DrawSkinFlex_2
    265              } else {
    266                _DrawThumbH(pDrawItemInfo, pProps);
   \                     ??SLIDER_DrawSkinFlex_8:
   \   000000A8   ........           BL       _DrawThumbH
   \   000000AC   420000EA           B        ??SLIDER_DrawSkinFlex_2
    267              }
    268              break;
    269            case WIDGET_ITEM_DRAW_TICKS:
    270              if (pSkinInfo->IsVertical) {
   \                     ??SLIDER_DrawSkinFlex_6:
   \   000000B0   101091E5           LDR      R1,[R1, #+16]
   \   000000B4   1C0094E5           LDR      R0,[R4, #+28]
   \   000000B8   000051E3           CMP      R1,#+0
   \   000000BC   1800000A           BEQ      ??SLIDER_DrawSkinFlex_9
    271                _DrawTicksV(pDrawItemInfo, pProps);
   \   000000C0   ........           BL       GUI_SetColor
   \   000000C4   1C6095E5           LDR      R6,[R5, #+28]
   \   000000C8   0070A0E3           MOV      R7,#+0
   \                     ??SLIDER_DrawSkinFlex_10:
   \   000000CC   043096E5           LDR      R3,[R6, #+4]
   \   000000D0   030057E1           CMP      R7,R3
   \   000000D4   380000AA           BGE      ??SLIDER_DrawSkinFlex_2
   \   000000D8   142095E5           LDR      R2,[R5, #+20]
   \   000000DC   241094E5           LDR      R1,[R4, #+36]
   \   000000E0   000096E5           LDR      R0,[R6, #+0]
   \   000000E4   011042E0           SUB      R1,R2,R1
   \   000000E8   018081E2           ADD      R8,R1,#+1
   \   000000EC   101095E5           LDR      R1,[R5, #+16]
   \   000000F0   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   000000F4   C0A081E0           ADD      R10,R1,R0, ASR #+1
   \   000000F8   080096E5           LDR      R0,[R6, #+8]
   \   000000FC   0290A0E1           MOV      R9,R2
   \   00000100   970000E0           MUL      R0,R7,R0
   \   00000104   011043E2           SUB      R1,R3,#+1
   \   00000108   ........           BL       __aeabi_idiv
   \   0000010C   0A0080E0           ADD      R0,R0,R10
   \   00000110   0920A0E1           MOV      R2,R9
   \   00000114   0810A0E1           MOV      R1,R8
   \   00000118   ........           BL       GUI_DrawHLine
   \   0000011C   017087E2           ADD      R7,R7,#+1
   \   00000120   E9FFFFEA           B        ??SLIDER_DrawSkinFlex_10
    272              } else {
    273                _DrawTicksH(pDrawItemInfo, pProps);
   \                     ??SLIDER_DrawSkinFlex_9:
   \   00000124   ........           BL       GUI_SetColor
   \   00000128   1C6095E5           LDR      R6,[R5, #+28]
   \   0000012C   0070A0E3           MOV      R7,#+0
   \                     ??SLIDER_DrawSkinFlex_11:
   \   00000130   043096E5           LDR      R3,[R6, #+4]
   \   00000134   030057E1           CMP      R7,R3
   \   00000138   1F0000AA           BGE      ??SLIDER_DrawSkinFlex_2
   \   0000013C   101095E5           LDR      R1,[R5, #+16]
   \   00000140   242094E5           LDR      R2,[R4, #+36]
   \   00000144   000096E5           LDR      R0,[R6, #+0]
   \   00000148   022081E0           ADD      R2,R1,R2
   \   0000014C   0180A0E1           MOV      R8,R1
   \   00000150   0C1095E5           LDR      R1,[R5, #+12]
   \   00000154   A00F80E0           ADD      R0,R0,R0, LSR #+31
   \   00000158   C0A081E0           ADD      R10,R1,R0, ASR #+1
   \   0000015C   080096E5           LDR      R0,[R6, #+8]
   \   00000160   019042E2           SUB      R9,R2,#+1
   \   00000164   970000E0           MUL      R0,R7,R0
   \   00000168   011043E2           SUB      R1,R3,#+1
   \   0000016C   ........           BL       __aeabi_idiv
   \   00000170   0A0080E0           ADD      R0,R0,R10
   \   00000174   0920A0E1           MOV      R2,R9
   \   00000178   0810A0E1           MOV      R1,R8
   \   0000017C   ........           BL       GUI_DrawVLine
   \   00000180   017087E2           ADD      R7,R7,#+1
   \   00000184   E9FFFFEA           B        ??SLIDER_DrawSkinFlex_11
    274              }
    275              break;
    276            case WIDGET_ITEM_DRAW_FOCUS:
    277              _DrawFocusRect(pDrawItemInfo, pProps);
   \                     ??SLIDER_DrawSkinFlex_3:
   \   00000188   200094E5           LDR      R0,[R4, #+32]
   \   0000018C   ........           BL       GUI_SetColor
   \   00000190   0C0095E5           LDR      R0,[R5, #+12]
   \   00000194   0010A0E3           MOV      R1,#+0
   \   00000198   B000CDE1           STRH     R0,[SP, #+0]
   \   0000019C   100095E5           LDR      R0,[R5, #+16]
   \   000001A0   B200CDE1           STRH     R0,[SP, #+2]
   \   000001A4   140095E5           LDR      R0,[R5, #+20]
   \   000001A8   B400CDE1           STRH     R0,[SP, #+4]
   \   000001AC   180095E5           LDR      R0,[R5, #+24]
   \   000001B0   B600CDE1           STRH     R0,[SP, #+6]
   \   000001B4   0D00A0E1           MOV      R0,SP
   \   000001B8   ........           BL       GUI_DrawFocusRect
    278              break;
    279            }
    280            return 0;
   \                     ??SLIDER_DrawSkinFlex_2:
   \   000001BC   0000A0E3           MOV      R0,#+0
   \   000001C0   08D08DE2           ADD      SP,SP,#+8
   \   000001C4   F087BDE8           POP      {R4-R10,PC}      ;; return
    281          }
    282          
    283          /*********************************************************************
    284          *
    285          *       SLIDER_SetSkinFlexProps
    286          */

   \                                 In section .text, align 4, keep-with-next
    287          void SLIDER_SetSkinFlexProps(const SLIDER_SKINFLEX_PROPS * pProps, int Index) {
    288            if (Index < GUI_COUNTOF(_apProps)) {
   \                     SLIDER_SetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??SLIDER_SetSkinFlexProps_0
    289              *_apProps[Index] = *pProps;
   \   00000008   1EFF2FE1           BX       LR
    290            }
   \                     ??SLIDER_SetSkinFlexProps_0:
   \   0000000C   30402DE9           PUSH     {R4,R5,LR}
   \   00000010   ........           ADR      R2,_apProps
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   3C50B0E8           LDM      R0!,{R2-R5,R12,LR}
   \   0000001C   3C50A1E8           STM      R1!,{R2-R5,R12,LR}
   \   00000020   1C50B0E8           LDM      R0!,{R2-R4,R12,LR}
   \   00000024   1C50A1E8           STM      R1!,{R2-R4,R12,LR}
    291          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return
    292          
    293          /*********************************************************************
    294          *
    295          *       SLIDER_GetSkinFlexProps
    296          */

   \                                 In section .text, align 4, keep-with-next
    297          void SLIDER_GetSkinFlexProps(SLIDER_SKINFLEX_PROPS * pProps, int Index) {
    298            if (Index < GUI_COUNTOF(_apProps)) {
   \                     SLIDER_GetSkinFlexProps:
   \   00000000   020051E3           CMP      R1,#+2
   \   00000004   0000003A           BCC      ??SLIDER_GetSkinFlexProps_0
    299              *pProps = *_apProps[Index];
   \   00000008   1EFF2FE1           BX       LR
    300            }
   \                     ??SLIDER_GetSkinFlexProps_0:
   \   0000000C   30402DE9           PUSH     {R4,R5,LR}
   \   00000010   ........           ADR      R2,_apProps
   \   00000014   011192E7           LDR      R1,[R2, +R1, LSL #+2]
   \   00000018   3C50B1E8           LDM      R1!,{R2-R5,R12,LR}
   \   0000001C   3C50A0E8           STM      R0!,{R2-R5,R12,LR}
   \   00000020   1C50B1E8           LDM      R1!,{R2-R4,R12,LR}
   \   00000024   1C50A0E8           STM      R0!,{R2-R4,R12,LR}
    301          }
   \   00000028   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     _PropsPressed
    302          
    303          #else
    304            void SLIDER_SkinFlex_C(void);
    305            void SLIDER_SkinFlex_C(void) {} /* avoid empty object files */
    306          #endif /* GUI_WINSUPPORT */
    307          
    308          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function                .cstack
     --------                -------
     SLIDER_DrawSkinFlex         40
     SLIDER_GetSkinFlexProps     12
     SLIDER_SetSkinFlexProps     12
     _DrawShaftH                 24
     _DrawShaftV                 24
     _DrawThumbH                 40
     _DrawThumbV                 40


   Section sizes:

     Function/Label          Bytes
     --------------          -----
     _PropsPressed             88
     _PropsUnpressed
     _apProps                   8
     _DrawShaftH              208
     _DrawShaftV              200
     _DrawThumbH              544
     _DrawThumbV              536
     SLIDER_DrawSkinFlex      456
     SLIDER_SetSkinFlexProps   44
     SLIDER_GetSkinFlexProps   44
     ??DataTable1               4

 
    88 bytes in section .data
 2 044 bytes in section .text
 
 2 044 bytes of CODE memory
    88 bytes of DATA memory

Errors: none
Warnings: none
