###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     02/Feb/2016  18:29:29 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\DUII\GearRatios.c                                #
#    Command line =  C:\DUII\DUII\GearRatios.c -D DEBUG=1 -D SDRAM_TARGET=1   #
#                    -D USB_IS_HIGH_SPEED -D NOPROFILER -D OS_TRACE=0 -D      #
#                    OS_VIEW_ENABLE=0 -lCN C:\DUII\TargetHW\Release\List\ -o  #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\GearRatios.lst             #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\GearRatios.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\DUII\GearRatios.c
      1          //
      2          //	AnalogInputScale.c
      3          //
      4          //	Gathers user input for analog input scale settings
      5          //
      6          #include <stdio.h>
      7          #include <stdlib.h>
      8          #include <string.h>
      9          #include "DUII.h"
     10          #include "GUI.h"
     11          #include "commondefs.h"
     12          #include "ConfigScreens.h"
     13          #include "DataHandler.h"
     14          #include "InputScreens.h"
     15          #include "KeyboardAccess.h"
     16          #include "GearRatios.h"
     17          #include "Utilities.h"
     18          #include "GeneralConfig.h"
     19          
     20          
     21          /*********************************************************************
     22          *
     23          *       Public Variables
     24          *
     25          **********************************************************************
     26          */
     27          
     28          /*********************************************************************
     29          *
     30          *       External data and code
     31          *
     32          **********************************************************************
     33          */
     34          extern GUI_CONST_STORAGE GUI_BITMAP bmthreewayarrow;
     35          
     36          /*********************************************************************
     37          *
     38          *       Local Prototypes
     39          *
     40          **********************************************************************
     41          */
     42          void DisplayFirst(WM_HWIN);
     43          void DisplaySecond(WM_HWIN);
     44          void DisplayThird(WM_HWIN);
     45          void DisplayFourth(WM_HWIN);
     46          void DisplayFifth(WM_HWIN);
     47          void DisplaySixth(WM_HWIN);
     48          void DisplaySeventh(WM_HWIN);
     49          void DisplayEighth(WM_HWIN);
     50          
     51          void FirstPaint(WM_HWIN);
     52          void SecondPaint(WM_HWIN);
     53          void ThirdPaint(WM_HWIN);
     54          void FourthPaint(WM_HWIN);
     55          void FifthPaint(WM_HWIN);
     56          void SixthPaint(WM_HWIN);
     57          void SeventhPaint(WM_HWIN);
     58          void EighthPaint(WM_HWIN);
     59          
     60          void GearRatiosSaveData(const void *type);
     61          
     62          
     63          /*********************************************************************
     64          *
     65          *       Tables and Constants
     66          *
     67          **********************************************************************
     68          */

   \                                 In section .data, align 4
     69          struct SCREEN_LIST GearRatiosScreenList[NUM_GEAR_RATIOS_SCREENS+1] = {
   \                     GearRatiosScreenList:
   \   00000000   00000000....       DC32 0, DisplayFirst, FirstPaint, 1, DisplaySecond, SecondPaint, 2
   \              ............
   \              01000000....
   \              ............
   \              02000000    
   \   0000001C   ............       DC32 DisplayThird, ThirdPaint, 3, DisplayFourth, FourthPaint, 4
   \              ....03000000
   \              ............
   \              ....04000000
   \   00000034   ............       DC32 DisplayFifth, FifthPaint, 5, DisplaySixth, SixthPaint, 6
   \              ....05000000
   \              ............
   \              ....06000000
   \   0000004C   ............       DC32 DisplaySeventh, SeventhPaint, 7, DisplayEighth, EighthPaint, -1
   \              ....07000000
   \              ............
   \              ....FFFFFFFF
   \   00000064   000000000000       DC32 0H, 0H
   \              0000        
   \   0000006C   00000000           DC8 0, 0, 0, 0
     70          	{ FIRST_GEAR_SCREEN, DisplayFirst, FirstPaint },
     71          	{ SECOND_GEAR_SCREEN, DisplaySecond, SecondPaint },
     72          	{ THIRD_GEAR_SCREEN, DisplayThird, ThirdPaint },
     73          	{ FOURTH_GEAR_SCREEN, DisplayFourth, FourthPaint },
     74          	{ FIFTH_GEAR_SCREEN, DisplayFifth, FifthPaint },
     75          	{ SIXTH_GEAR_SCREEN, DisplaySixth, SixthPaint },
     76          	{ SEVENTH_GEAR_SCREEN, DisplaySeventh, SeventhPaint },
     77          	{ EIGHTH_GEAR_SCREEN, DisplayEighth, EighthPaint },
     78          	{ -1, NULL, NULL }
     79          };
     80          
     81          /*********************************************************************
     82          *
     83          *       Local Variables
     84          *
     85          **********************************************************************
     86          */
     87          static WM_HWIN hGearRatios;

   \                                 In section .bss, align 4
     88          static void *pFirst = 0;
   \                     pFirst:
   \   00000000                      DS8 4
   \   00000004                      DS8 4
   \   00000008                      DS8 4
   \   0000000C                      DS8 4
   \   00000010                      DS8 4
   \   00000014                      DS8 4
   \   00000018                      DS8 4
   \   0000001C                      DS8 4
     89          static void *pSecond = 0;
     90          static void *pThird = 0;
     91          static void *pFourth = 0;
     92          static void *pFifth = 0;
     93          static void *pSixth = 0;
     94          static void *pSeventh = 0;
     95          static void *pEighth = 0;
     96          
     97          char gearRatioString[NUMBER_LENGTH+1];
   \                     gearRatioString:
   \   00000020                      DS8 12
     98          
     99          /*********************************************************************
    100          *
    101          *       Public code
    102          *
    103          **********************************************************************
    104          */

   \                                 In section .text, align 4, keep-with-next
    105          WM_HWIN GetGearRatiosWindowHandle(void)
    106          {
    107          	return hGearRatios;
   \                     GetGearRatiosWindowHandle:
   \   00000000   ........           LDR      R0,??DataTable21
   \   00000004   6C0090E5           LDR      R0,[R0, #+108]
   \   00000008   1EFF2FE1           BX       LR               ;; return
    108          }
    109          

   \                                 In section .text, align 4, keep-with-next
    110          void SetGearRatiosWindowHandle(WM_HWIN hWin)
    111          {
    112          	hGearRatios = hWin;
   \                     SetGearRatiosWindowHandle:
   \   00000000   ........           LDR      R1,??DataTable21
   \   00000004   6C0081E5           STR      R0,[R1, #+108]
    113          }
   \   00000008   1EFF2FE1           BX       LR               ;; return
    114          

   \                                 In section .text, align 4, keep-with-next
    115          void GearRatiosSaveData(const void *type)
    116          {
   \                     GearRatiosSaveData:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
    117          	float temp;
    118          
    119          	// KMC 2/11/12 - ensure no dashes ('-') in the string
    120          	EnsurePositive(gearRatioString);
   \   00000004   ........           LDR      R5,??DataTable21_1
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   04D04DE2           SUB      SP,SP,#+4
   \   00000010   200085E2           ADD      R0,R5,#+32
   \   00000014   ........           BL       EnsurePositive
    121          	if ((temp = atof(gearRatioString)) >= 100.0)
   \   00000018   0020A0E3           MOV      R2,#+0
   \   0000001C   0010A0E3           MOV      R1,#+0
   \   00000020   200085E2           ADD      R0,R5,#+32
   \   00000024   ........           BL       __iar_Stod
   \   00000028   ........           BL       __aeabi_d2f
   \   0000002C   4014A0E3           MOV      R1,#+1073741824
   \   00000030   B21781E3           ORR      R1,R1,#0x2C80000
   \   00000034   ........           BL       __aeabi_cfrcmple
    122          		temp = 99.0;
   \   00000038   800B4192           SUBLS    R0,R1,#+131072
    123          
    124          	if (type == pFirst)
   \   0000003C   001095E5           LDR      R1,[R5, #+0]
   \   00000040   010054E1           CMP      R4,R1
    125          		vehicleData.gearRatios[0] = temp;
   \   00000044   ........           LDREQ    R1,??DataTable21_2
   \   00000048   30008105           STREQ    R0,[R1, #+48]
   \   0000004C   2100000A           BEQ      ??GearRatiosSaveData_0
    126          	else if (type == pSecond)
   \   00000050   041095E5           LDR      R1,[R5, #+4]
   \   00000054   010054E1           CMP      R4,R1
    127          		vehicleData.gearRatios[1] = temp;
   \   00000058   ........           LDREQ    R1,??DataTable21_2
   \   0000005C   34008105           STREQ    R0,[R1, #+52]
   \   00000060   1C00000A           BEQ      ??GearRatiosSaveData_0
    128          	else if (type == pThird)
   \   00000064   081095E5           LDR      R1,[R5, #+8]
   \   00000068   010054E1           CMP      R4,R1
    129          		vehicleData.gearRatios[2] = temp;
   \   0000006C   ........           LDREQ    R1,??DataTable21_2
   \   00000070   38008105           STREQ    R0,[R1, #+56]
   \   00000074   1700000A           BEQ      ??GearRatiosSaveData_0
    130          	else if (type == pFourth)
   \   00000078   0C1095E5           LDR      R1,[R5, #+12]
   \   0000007C   010054E1           CMP      R4,R1
    131          		vehicleData.gearRatios[3] = temp;
   \   00000080   ........           LDREQ    R1,??DataTable21_2
   \   00000084   3C008105           STREQ    R0,[R1, #+60]
   \   00000088   1200000A           BEQ      ??GearRatiosSaveData_0
    132          	else if (type == pFifth)
   \   0000008C   101095E5           LDR      R1,[R5, #+16]
   \   00000090   010054E1           CMP      R4,R1
    133          		vehicleData.gearRatios[4] = temp;
   \   00000094   ........           LDREQ    R1,??DataTable21_2
   \   00000098   40008105           STREQ    R0,[R1, #+64]
   \   0000009C   0D00000A           BEQ      ??GearRatiosSaveData_0
    134          	else if (type == pSixth)
   \   000000A0   141095E5           LDR      R1,[R5, #+20]
   \   000000A4   010054E1           CMP      R4,R1
    135          		vehicleData.gearRatios[5] = temp;
   \   000000A8   ........           LDREQ    R1,??DataTable21_2
   \   000000AC   44008105           STREQ    R0,[R1, #+68]
   \   000000B0   0800000A           BEQ      ??GearRatiosSaveData_0
    136          	else if (type == pSeventh)
   \   000000B4   181095E5           LDR      R1,[R5, #+24]
   \   000000B8   010054E1           CMP      R4,R1
    137          		vehicleData.gearRatios[6] = temp;
   \   000000BC   ........           LDREQ    R1,??DataTable21_2
   \   000000C0   48008105           STREQ    R0,[R1, #+72]
   \   000000C4   0300000A           BEQ      ??GearRatiosSaveData_0
    138          	else if (type == pEighth)
   \   000000C8   1C1095E5           LDR      R1,[R5, #+28]
   \   000000CC   010054E1           CMP      R4,R1
    139          		vehicleData.gearRatios[7] = temp;
   \   000000D0   ........           LDREQ    R1,??DataTable21_2
   \   000000D4   4C008105           STREQ    R0,[R1, #+76]
    140          }
   \                     ??GearRatiosSaveData_0:
   \   000000D8   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   000000DC   3080BDE8           POP      {R4,R5,PC}       ;; return
    141          

   \                                 In section .text, align 4, keep-with-next
    142          void GearRatiosCallback(WM_MESSAGE * pMsg)
    143          {
   \                     GearRatiosCallback:
   \   00000000   10402DE9           PUSH     {R4,LR}
   \   00000004   0040A0E1           MOV      R4,R0
    144          	switch(pMsg->MsgId)
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   010050E2           SUBS     R0,R0,#+1
   \   00000010   3700000A           BEQ      ??GearRatiosCallback_0
   \   00000014   0E0050E2           SUBS     R0,R0,#+14
   \   00000018   2600000A           BEQ      ??GearRatiosCallback_1
   \   0000001C   0B0050E2           SUBS     R0,R0,#+11
   \   00000020   0E00000A           BEQ      ??GearRatiosCallback_2
   \   00000024   010050E2           SUBS     R0,R0,#+1
   \   00000028   0400000A           BEQ      ??GearRatiosCallback_3
   \   0000002C   010050E2           SUBS     R0,R0,#+1
   \   00000030   0D00000A           BEQ      ??GearRatiosCallback_4
   \   00000034   F70050E2           SUBS     R0,R0,#+247
   \   00000038   1300000A           BEQ      ??GearRatiosCallback_5
   \   0000003C   2A0000EA           B        ??GearRatiosCallback_6
    145          	{
    146          		case KB_CANCEL_MSG:
    147          			DisplayNewScreenList(GEARING_SCREENS_TYPE, GetLastScreen(GEARING_SCREENS_TYPE), hGearRatios);
   \                     ??GearRatiosCallback_3:
   \   00000040   0E00A0E3           MOV      R0,#+14
   \   00000044   ........           BL       GetLastScreen
   \   00000048   ........           LDR      R1,??DataTable21
   \   0000004C   6C2091E5           LDR      R2,[R1, #+108]
   \   00000050   0010A0E1           MOV      R1,R0
   \                     ??GearRatiosCallback_7:
   \   00000054   1040BDE8           POP      {R4,LR}
   \   00000058   0E00A0E3           MOV      R0,#+14
   \   0000005C   ........           B        DisplayNewScreenList  ;; tailcall
    148          			break;
    149          
    150          		case KB_SAVE_MSG:
    151          			GearRatiosSaveData(pMsg->Data.p);
   \                     ??GearRatiosCallback_2:
   \   00000060   0C0094E5           LDR      R0,[R4, #+12]
   \   00000064   1040BDE8           POP      {R4,LR}
   \   00000068   ........           B        GearRatiosSaveData  ;; tailcall
    152          			break;
    153          
    154          		case KB_SAVE_AND_EXIT_MSG:
    155          			GearRatiosSaveData(pMsg->Data.p);
   \                     ??GearRatiosCallback_4:
   \   0000006C   0C0094E5           LDR      R0,[R4, #+12]
   \   00000070   ........           BL       GearRatiosSaveData
    156          			DisplayNewScreenList(GEARING_SCREENS_TYPE, GetLastScreen(GEARING_SCREENS_TYPE), hGearRatios);
   \   00000074   0E00A0E3           MOV      R0,#+14
   \   00000078   ........           BL       GetLastScreen
   \   0000007C   0010A0E1           MOV      R1,R0
   \   00000080   ........           LDR      R0,??DataTable21
   \   00000084   6C2090E5           LDR      R2,[R0, #+108]
   \   00000088   F1FFFFEA           B        ??GearRatiosCallback_7
    157          			break;
    158          
    159          		case WM_TIMER:
    160          			if (pMsg->Data.v == hScreenTimer)
   \                     ??GearRatiosCallback_5:
   \   0000008C   ........           LDR      R0,??DataTable21_3
   \   00000090   0C1094E5           LDR      R1,[R4, #+12]
   \   00000094   000090E5           LDR      R0,[R0, #+0]
   \   00000098   000051E1           CMP      R1,R0
   \   0000009C   1400001A           BNE      ??GearRatiosCallback_0
    161          			{
    162          				WM_RestartTimer(hScreenTimer, SETUP_SCREEN_REFRESH_TIME);
   \   000000A0   7D10A0E3           MOV      R1,#+125
   \   000000A4   ........           BL       WM_RestartTimer
    163          				WM_InvalidateRect(pMsg->hWin, &BannerRect);
   \   000000A8   040094E5           LDR      R0,[R4, #+4]
   \   000000AC   1040BDE8           POP      {R4,LR}
   \   000000B0   ........           LDR      R1,??DataTable21_4
   \   000000B4   ........           B        WM_InvalidateRect  ;; tailcall
    164          			}
    165          			break;
    166          
    167          		case WM_CREATE:
    168          			GearRatiosIgnoreNextKeyRelease();
    169          			break;
    170          
    171          		case WM_PAINT:
    172          			if (GetScreenType() == GEAR_RATIOS)
   \                     ??GearRatiosCallback_1:
   \   000000B8   ........           BL       GetScreenType
   \   000000BC   130050E3           CMP      R0,#+19
   \   000000C0   0B00001A           BNE      ??GearRatiosCallback_0
    173          			{
    174          				// Call paint method of center screen
    175          				GearRatiosScreenList[GetLastScreen(GEAR_RATIOS)].paint(hGearRatios);
   \   000000C4   ........           BL       GetLastScreen
   \   000000C8   0010A0E1           MOV      R1,R0
   \   000000CC   ........           LDR      R2,??DataTable21
   \   000000D0   0C30A0E3           MOV      R3,#+12
   \   000000D4   932121E0           MLA      R1,R3,R1,R2
   \   000000D8   6C0092E5           LDR      R0,[R2, #+108]
   \   000000DC   081091E5           LDR      R1,[R1, #+8]
   \   000000E0   31FF2FE1           BLX      R1
    176          				DrawSignalStrength();
   \   000000E4   1040BDE8           POP      {R4,LR}
   \   000000E8   ........           B        DrawSignalStrength  ;; tailcall
    177          			}
    178          			break;
    179          
    180          		default:
    181          			WM_DefaultProc(pMsg);
   \                     ??GearRatiosCallback_6:
   \   000000EC   0400A0E1           MOV      R0,R4
   \   000000F0   ........           BL       WM_DefaultProc
    182          	}
    183          }
   \                     ??GearRatiosCallback_0:
   \   000000F4   1080BDE8           POP      {R4,PC}          ;; return
    184          

   \                                 In section .text, align 4, keep-with-next
    185          void DisplayFirst(WM_HWIN hParent)
    186          {
   \                     DisplayFirst:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    187          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    188          	//if (pFirst)
    189          	//	DestroyKeyboard(pFirst);
    190          
    191          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[0]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   300090E5           LDR      R0,[R0, #+48]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    192          	trim(gearRatioString);			// Trim off trailing 0s
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    193          	pFirst = CreateKeyboard("First Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, FIRST_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0000A0E3           MOV      R0,#+0
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ............       ADRL     R0,`?<Constant "First Gear">`
   \              ....        
   \   0000006C   ........           BL       CreateKeyboard
   \   00000070   000084E5           STR      R0,[R4, #+0]
    194          }
   \   00000074   14D08DE2           ADD      SP,SP,#+20
   \   00000078   3080BDE8           POP      {R4,R5,PC}       ;; return
    195          

   \                                 In section .text, align 4, keep-with-next
    196          void DisplaySecond(WM_HWIN hParent)
    197          {
   \                     DisplaySecond:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    198          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    199          	//if (pSecond)
    200          	//	DestroyKeyboard(pSecond);
    201          
    202          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[1]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   340090E5           LDR      R0,[R0, #+52]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    203          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    204          	pSecond = CreateKeyboard("Second Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, SECOND_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   04008DE5           STR      R0,[SP, #+4]
   \   00000048   0900A0E3           MOV      R0,#+9
   \   0000004C   00008DE5           STR      R0,[SP, #+0]
   \   00000050   08508DE5           STR      R5,[SP, #+8]
   \   00000054   0130A0E3           MOV      R3,#+1
   \   00000058   0220A0E3           MOV      R2,#+2
   \   0000005C   201084E2           ADD      R1,R4,#+32
   \   00000060   ............       ADRL     R0,`?<Constant "Second Gear">`
   \              ....        
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   040084E5           STR      R0,[R4, #+4]
    205          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    206          

   \                                 In section .text, align 4, keep-with-next
    207          void DisplayThird(WM_HWIN hParent)
    208          {
   \                     DisplayThird:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    209          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    210          	//if (pThird)
    211          	//	DestroyKeyboard(pThird);
    212          
    213          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[2]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   380090E5           LDR      R0,[R0, #+56]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    214          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    215          	pThird = CreateKeyboard("Third Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, THIRD_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0200A0E3           MOV      R0,#+2
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ............       ADRL     R0,`?<Constant "Third Gear">`
   \              ....        
   \   0000006C   ........           BL       CreateKeyboard
   \   00000070   080084E5           STR      R0,[R4, #+8]
    216          }
   \   00000074   14D08DE2           ADD      SP,SP,#+20
   \   00000078   3080BDE8           POP      {R4,R5,PC}       ;; return
    217          

   \                                 In section .text, align 4, keep-with-next
    218          void DisplayFourth(WM_HWIN hParent)
    219          {
   \                     DisplayFourth:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    220          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    221          	//if (pFourth)
    222          	//	DestroyKeyboard(pFourth);
    223          
    224          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[3]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   3C0090E5           LDR      R0,[R0, #+60]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    225          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    226          	pFourth = CreateKeyboard("Fourth Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, FOURTH_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0300A0E3           MOV      R0,#+3
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ........           ADR      R0,`?<Constant "Fourth Gear">`
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   0C0084E5           STR      R0,[R4, #+12]
    227          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    228          

   \                                 In section .text, align 4, keep-with-next
    229          void DisplayFifth(WM_HWIN hParent)
    230          {
   \                     DisplayFifth:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    231          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    232          	//if (pFifth)
    233          	//	DestroyKeyboard(pFifth);
    234          
    235          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[4]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   400090E5           LDR      R0,[R0, #+64]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    236          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    237          	pFifth = CreateKeyboard("Fifth Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, FIFTH_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0400A0E3           MOV      R0,#+4
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ........           ADR      R0,`?<Constant "Fifth Gear">`
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   100084E5           STR      R0,[R4, #+16]
    238          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    239          

   \                                 In section .text, align 4, keep-with-next
    240          void DisplaySixth(WM_HWIN hParent)
    241          {
   \                     DisplaySixth:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    242          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    243          	//if (pSixth)
    244          	//	DestroyKeyboard(pSixth);
    245          
    246          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[5]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   440090E5           LDR      R0,[R0, #+68]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    247          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    248          	pSixth = CreateKeyboard("Sixth Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, SIXTH_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0500A0E3           MOV      R0,#+5
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ........           ADR      R0,`?<Constant "Sixth Gear">`
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   140084E5           STR      R0,[R4, #+20]
    249          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    250          

   \                                 In section .text, align 4, keep-with-next
    251          void DisplaySeventh(WM_HWIN hParent)
    252          {
   \                     DisplaySeventh:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    253          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    254          	//if (pSeventh)
    255          	//	DestroyKeyboard(pSeventh);
    256          
    257          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[6]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   480090E5           LDR      R0,[R0, #+72]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    258          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    259          	pSeventh = CreateKeyboard("Seventh Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, SEVENTH_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0600A0E3           MOV      R0,#+6
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ........           ADR      R0,`?<Constant "Seventh Gear">`
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   180084E5           STR      R0,[R4, #+24]
    260          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    261          

   \                                 In section .text, align 4, keep-with-next
    262          void DisplayEighth(WM_HWIN hParent)
    263          {
   \                     DisplayEighth:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
    264          	DeleteGearRatiosKeyboards();
   \   0000000C   ........           BL       DeleteGearRatiosKeyboards
    265          	//if (pEighth)
    266          	//	DestroyKeyboard(pEighth);
    267          
    268          	sprintf(gearRatioString, "%f", vehicleData.gearRatios[7]);
   \   00000010   ........           LDR      R0,??DataTable21_2
   \   00000014   ........           LDR      R4,??DataTable21_1
   \   00000018   4C0090E5           LDR      R0,[R0, #+76]
   \   0000001C   ........           BL       __aeabi_f2d
   \   00000020   0020A0E1           MOV      R2,R0
   \   00000024   0130A0E1           MOV      R3,R1
   \   00000028   ........           ADR      R1,??DataTable20  ;; 0x25, 0x66, 0x00, 0x00
   \   0000002C   200084E2           ADD      R0,R4,#+32
   \   00000030   ........           BL       sprintf
    269          	trim(gearRatioString);
   \   00000034   200084E2           ADD      R0,R4,#+32
   \   00000038   ........           BL       trim
    270          	pEighth = CreateKeyboard("Eighth Gear", gearRatioString, NUMERIC, true, NUMBER_LENGTH, EIGHTH_GEAR_SCREEN, hParent, true);
   \   0000003C   0100A0E3           MOV      R0,#+1
   \   00000040   0C008DE5           STR      R0,[SP, #+12]
   \   00000044   0700A0E3           MOV      R0,#+7
   \   00000048   04008DE5           STR      R0,[SP, #+4]
   \   0000004C   0900A0E3           MOV      R0,#+9
   \   00000050   00008DE5           STR      R0,[SP, #+0]
   \   00000054   08508DE5           STR      R5,[SP, #+8]
   \   00000058   0130A0E3           MOV      R3,#+1
   \   0000005C   0220A0E3           MOV      R2,#+2
   \   00000060   201084E2           ADD      R1,R4,#+32
   \   00000064   ........           ADR      R0,`?<Constant "Eighth Gear">`
   \   00000068   ........           BL       CreateKeyboard
   \   0000006C   1C0084E5           STR      R0,[R4, #+28]
    271          }
   \   00000070   14D08DE2           ADD      SP,SP,#+20
   \   00000074   3080BDE8           POP      {R4,R5,PC}       ;; return
    272          

   \                                 In section .text, align 4, keep-with-next
    273          void FirstPaint(WM_HWIN hParent)
    274          {
    275          }
   \                     FirstPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    276          
    277          

   \                                 In section .text, align 4, keep-with-next
    278          void SecondPaint(WM_HWIN hParent)
    279          {
    280          }
   \                     SecondPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    281          

   \                                 In section .text, align 4, keep-with-next
    282          void ThirdPaint(WM_HWIN hParent)
    283          {
    284          }
   \                     ThirdPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    285          

   \                                 In section .text, align 4, keep-with-next
    286          void FourthPaint(WM_HWIN hParent)
    287          {
    288          }
   \                     FourthPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    289          

   \                                 In section .text, align 4, keep-with-next
    290          void FifthPaint(WM_HWIN hParent)
    291          {
    292          }
   \                     FifthPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    293          

   \                                 In section .text, align 4, keep-with-next
    294          void SixthPaint(WM_HWIN hParent)
    295          {
    296          }
   \                     SixthPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    297          

   \                                 In section .text, align 4, keep-with-next
    298          void SeventhPaint(WM_HWIN hParent)
    299          {
    300          }
   \                     SeventhPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    301          

   \                                 In section .text, align 4, keep-with-next
    302          void EighthPaint(WM_HWIN hParent)
    303          {
    304          }
   \                     EighthPaint:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    305          

   \                                 In section .text, align 4, keep-with-next
    306          void GearRatiosIgnoreNextKeyRelease(void)
    307          {
    308          }
   \                     GearRatiosIgnoreNextKeyRelease:
   \   00000000   1EFF2FE1           BX       LR               ;; return
    309          

   \                                 In section .text, align 4, keep-with-next
    310          void DeleteGearRatiosKeyboards(void)
    311          {
   \                     DeleteGearRatiosKeyboards:
   \   00000000   10402DE9           PUSH     {R4,LR}
    312          	if (pFirst)
   \   00000004   ........           LDR      R4,??DataTable21_1
   \   00000008   000094E5           LDR      R0,[R4, #+0]
   \   0000000C   000050E3           CMP      R0,#+0
   \   00000010   0200000A           BEQ      ??DeleteGearRatiosKeyboards_0
    313          	{
    314          		DestroyKeyboard(pFirst);
   \   00000014   ........           BL       DestroyKeyboard
    315          		pFirst = 0;
   \   00000018   0000A0E3           MOV      R0,#+0
   \   0000001C   000084E5           STR      R0,[R4, #+0]
    316          	}
    317          	if (pSecond)
   \                     ??DeleteGearRatiosKeyboards_0:
   \   00000020   040094E5           LDR      R0,[R4, #+4]
   \   00000024   000050E3           CMP      R0,#+0
   \   00000028   0200000A           BEQ      ??DeleteGearRatiosKeyboards_1
    318          	{
    319          		DestroyKeyboard(pSecond);
   \   0000002C   ........           BL       DestroyKeyboard
    320          		pSecond = 0;
   \   00000030   0000A0E3           MOV      R0,#+0
   \   00000034   040084E5           STR      R0,[R4, #+4]
    321          	}
    322          	if (pThird)
   \                     ??DeleteGearRatiosKeyboards_1:
   \   00000038   080094E5           LDR      R0,[R4, #+8]
   \   0000003C   000050E3           CMP      R0,#+0
   \   00000040   0200000A           BEQ      ??DeleteGearRatiosKeyboards_2
    323          	{
    324          		DestroyKeyboard(pThird);
   \   00000044   ........           BL       DestroyKeyboard
    325          		pThird = 0;
   \   00000048   0000A0E3           MOV      R0,#+0
   \   0000004C   080084E5           STR      R0,[R4, #+8]
    326          	}
    327          	if (pFourth)
   \                     ??DeleteGearRatiosKeyboards_2:
   \   00000050   0C0094E5           LDR      R0,[R4, #+12]
   \   00000054   000050E3           CMP      R0,#+0
   \   00000058   0200000A           BEQ      ??DeleteGearRatiosKeyboards_3
    328          	{
    329          		DestroyKeyboard(pFourth);
   \   0000005C   ........           BL       DestroyKeyboard
    330          		pFourth = 0;
   \   00000060   0000A0E3           MOV      R0,#+0
   \   00000064   0C0084E5           STR      R0,[R4, #+12]
    331          	}
    332          	if (pFifth)
   \                     ??DeleteGearRatiosKeyboards_3:
   \   00000068   100094E5           LDR      R0,[R4, #+16]
   \   0000006C   000050E3           CMP      R0,#+0
   \   00000070   0200000A           BEQ      ??DeleteGearRatiosKeyboards_4
    333          	{
    334          		DestroyKeyboard(pFifth);
   \   00000074   ........           BL       DestroyKeyboard
    335          		pFifth = 0;
   \   00000078   0000A0E3           MOV      R0,#+0
   \   0000007C   100084E5           STR      R0,[R4, #+16]
    336          	}
    337          	if (pSixth)
   \                     ??DeleteGearRatiosKeyboards_4:
   \   00000080   140094E5           LDR      R0,[R4, #+20]
   \   00000084   000050E3           CMP      R0,#+0
   \   00000088   0200000A           BEQ      ??DeleteGearRatiosKeyboards_5
    338          	{
    339          		DestroyKeyboard(pSixth);
   \   0000008C   ........           BL       DestroyKeyboard
    340          		pSixth = 0;
   \   00000090   0000A0E3           MOV      R0,#+0
   \   00000094   140084E5           STR      R0,[R4, #+20]
    341          	}
    342          	if (pSeventh)
   \                     ??DeleteGearRatiosKeyboards_5:
   \   00000098   180094E5           LDR      R0,[R4, #+24]
   \   0000009C   000050E3           CMP      R0,#+0
   \   000000A0   0200000A           BEQ      ??DeleteGearRatiosKeyboards_6
    343          	{
    344          		DestroyKeyboard(pSeventh);
   \   000000A4   ........           BL       DestroyKeyboard
    345          		pSeventh = 0;
   \   000000A8   0000A0E3           MOV      R0,#+0
   \   000000AC   180084E5           STR      R0,[R4, #+24]
    346          	}
    347          	if (pEighth)
   \                     ??DeleteGearRatiosKeyboards_6:
   \   000000B0   1C0094E5           LDR      R0,[R4, #+28]
   \   000000B4   000050E3           CMP      R0,#+0
   \   000000B8   0200000A           BEQ      ??DeleteGearRatiosKeyboards_7
    348          	{
    349          		DestroyKeyboard(pEighth);
   \   000000BC   ........           BL       DestroyKeyboard
    350          		pEighth = 0;
   \   000000C0   0000A0E3           MOV      R0,#+0
   \   000000C4   1C0084E5           STR      R0,[R4, #+28]
    351          	}
    352          }
   \                     ??DeleteGearRatiosKeyboards_7:
   \   000000C8   1080BDE8           POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   25660000           DC8      0x25, 0x66, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   ........           DC32     GearRatiosScreenList

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   ........           DC32     pFirst

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   ........           DC32     vehicleData

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   ........           DC32     hScreenTimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   ........           DC32     BannerRect

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant "%f">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   25660000           DC8 37, 102, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "First Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466972737420       DC8 70, 105, 114, 115, 116, 32, 71, 101, 97, 114
   \              47656172    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Second Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   5365636F6E64       DC8 83, 101, 99, 111, 110, 100, 32, 71, 101, 97
   \              20476561    
   \   0000000A   7200               DC8 114, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Third Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   546869726420       DC8 84, 104, 105, 114, 100, 32, 71, 101, 97, 114
   \              47656172    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Fourth Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466F75727468       DC8 70, 111, 117, 114, 116, 104, 32, 71, 101, 97
   \              20476561    
   \   0000000A   7200               DC8 114, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Fifth Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   466966746820       DC8 70, 105, 102, 116, 104, 32, 71, 101, 97, 114
   \              47656172    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Sixth Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   536978746820       DC8 83, 105, 120, 116, 104, 32, 71, 101, 97, 114
   \              47656172    
   \   0000000A   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Seventh Gear">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   536576656E74       DC8 83, 101, 118, 101, 110, 116, 104, 32, 71, 101
   \              68204765    
   \   0000000A   617200000000       DC8 97, 114, 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Eighth Gear">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   456967687468       DC8 69, 105, 103, 104, 116, 104, 32, 71, 101, 97
   \              20476561    
   \   0000000A   7200               DC8 114, 0
    353          
    354          /*************************** End of file ****************************/
    355          

   Maximum stack usage in bytes:

     Function                       .cstack
     --------                       -------
     DeleteGearRatiosKeyboards           8
     DisplayEighth                      32
     DisplayFifth                       32
     DisplayFirst                       32
     DisplayFourth                      32
     DisplaySecond                      32
     DisplaySeventh                     32
     DisplaySixth                       32
     DisplayThird                       32
     EighthPaint                         0
     FifthPaint                          0
     FirstPaint                          0
     FourthPaint                         0
     GearRatiosCallback                  8
     GearRatiosIgnoreNextKeyRelease      0
     GearRatiosSaveData                 16
     GetGearRatiosWindowHandle           0
     SecondPaint                         0
     SetGearRatiosWindowHandle           0
     SeventhPaint                        0
     SixthPaint                          0
     ThirdPaint                          0


   Section sizes:

     Function/Label                 Bytes
     --------------                 -----
     GearRatiosScreenList            112
     hGearRatios
     pFirst                           44
     pSecond
     pThird
     pFourth
     pFifth
     pSixth
     pSeventh
     pEighth
     gearRatioString
     GetGearRatiosWindowHandle        12
     SetGearRatiosWindowHandle        12
     GearRatiosSaveData              224
     GearRatiosCallback              248
     DisplayFirst                    124
     DisplaySecond                   120
     DisplayThird                    124
     DisplayFourth                   120
     DisplayFifth                    120
     DisplaySixth                    120
     DisplaySeventh                  120
     DisplayEighth                   120
     FirstPaint                        4
     SecondPaint                       4
     ThirdPaint                        4
     FourthPaint                       4
     FifthPaint                        4
     SixthPaint                        4
     SeventhPaint                      4
     EighthPaint                       4
     GearRatiosIgnoreNextKeyRelease    4
     DeleteGearRatiosKeyboards       204
     ??DataTable20                     4
     ??DataTable21                     4
     ??DataTable21_1                   4
     ??DataTable21_2                   4
     ??DataTable21_3                   4
     ??DataTable21_4                   4
     ?<Constant "%f">                  4
     ?<Constant "First Gear">         12
     ?<Constant "Second Gear">        12
     ?<Constant "Third Gear">         12
     ?<Constant "Fourth Gear">        12
     ?<Constant "Fifth Gear">         12
     ?<Constant "Sixth Gear">         12
     ?<Constant "Seventh Gear">       16
     ?<Constant "Eighth Gear">        12

 
    44 bytes in section .bss
   112 bytes in section .data
     4 bytes in section .rodata
 1 828 bytes in section .text
 
 1 828 bytes of CODE  memory
     4 bytes of CONST memory
   156 bytes of DATA  memory

Errors: none
Warnings: none
