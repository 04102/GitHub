###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:16:40 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_AttachWindow.c                   #
#    Command line =  C:\DUII\TargetHW\GUI\WM_AttachWindow.c -D DEBUG=1 -D     #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_AttachWindow.lst        #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_AttachWindow.o           #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_AttachWindow.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_AttachWindow.c
     19          Purpose     : Windows manager routines
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include "WM_Intern.h"
     24          
     25          #if GUI_WINSUPPORT    /* If 0, WM will not generate any code */
     26          
     27          /*********************************************************************
     28          *
     29          *         Public code
     30          *
     31          **********************************************************************
     32          */
     33          /*********************************************************************
     34          *
     35          *       WM_DetachWindow
     36          */

   \                                 In section .text, align 4, keep-with-next
     37          void WM_DetachWindow(WM_HWIN hWin) {
   \                     WM_DetachWindow:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040B0E1           MOVS     R4,R0
     38            if (hWin) {
   \   0000000C   1000000A           BEQ      ??WM_DetachWindow_0
     39              WM_HWIN hParent;
     40              WM_Obj* pWin;
     41              WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     42              pWin = WM_H2P(hWin);
     43              hParent = pWin->hParent;
   \   00000014   0400A0E1           MOV      R0,R4
   \   00000018   ........           BL       GUI_ALLOC_h2p
   \   0000001C   185090E5           LDR      R5,[R0, #+24]
     44              if (hParent) {
   \   00000020   000055E3           CMP      R5,#+0
   \   00000024   0900000A           BEQ      ??WM_DetachWindow_1
     45                WM_Obj* pParent;
     46                WM__DetachWindow(hWin);
   \   00000028   0400A0E1           MOV      R0,R4
   \   0000002C   ........           BL       WM__DetachWindow
     47                pParent = WM_H2P(hParent);
   \   00000030   0500A0E1           MOV      R0,R5
   \   00000034   ........           BL       GUI_ALLOC_h2p
     48                WM_MoveWindow(hWin, -pParent->Rect.x0,  -pParent->Rect.y0);   /* Convert screen coordinates -> parent coordinates */
   \   00000038   F210D0E1           LDRSH    R1,[R0, #+2]
   \   0000003C   F000D0E1           LDRSH    R0,[R0, #+0]
   \   00000040   002061E2           RSB      R2,R1,#+0
   \   00000044   001060E2           RSB      R1,R0,#+0
   \   00000048   0400A0E1           MOV      R0,R4
   \   0000004C   ........           BL       WM_MoveWindow
     49              }
     50              WM_UNLOCK();
   \                     ??WM_DetachWindow_1:
   \   00000050   ........           BL       GUI_Unlock
     51            }
     52          }
   \                     ??WM_DetachWindow_0:
   \   00000054   04D08DE2           ADD      SP,SP,#+4        ;; stack cleaning
   \   00000058   3080BDE8           POP      {R4,R5,PC}       ;; return
     53          
     54          /*********************************************************************
     55          *
     56          *       WM_AttachWindow
     57          */

   \                                 In section .text, align 4, keep-with-next
     58          void WM_AttachWindow(WM_HWIN hWin, WM_HWIN hParent) {
   \                     WM_AttachWindow:
   \   00000000   F0402DE9           PUSH     {R4-R7,LR}
   \   00000004   04D04DE2           SUB      SP,SP,#+4
   \   00000008   0040A0E1           MOV      R4,R0
   \   0000000C   0150A0E1           MOV      R5,R1
     59            WM_LOCK();
   \   00000010   ........           BL       GUI_Lock
     60            if (hParent && (hParent != hWin)) {
   \   00000014   000055E3           CMP      R5,#+0
   \   00000018   04005511           CMPNE    R5,R4
   \   0000001C   2400000A           BEQ      ??WM_AttachWindow_0
     61              WM_Obj* pWin    = WM_H2P(hWin);
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_h2p
   \   00000028   0060A0E1           MOV      R6,R0
     62              WM_Obj* pParent = WM_H2P(hParent);
   \   0000002C   0500A0E1           MOV      R0,R5
   \   00000030   ........           BL       GUI_ALLOC_h2p
   \   00000034   0070A0E1           MOV      R7,R0
     63              if (pWin->hParent != hParent) {
   \   00000038   180096E5           LDR      R0,[R6, #+24]
   \   0000003C   050050E1           CMP      R0,R5
   \   00000040   1B00000A           BEQ      ??WM_AttachWindow_0
     64                WM_DetachWindow(hWin);
   \   00000044   000054E3           CMP      R4,#+0
   \   00000048   1000000A           BEQ      ??WM_AttachWindow_1
   \   0000004C   ........           BL       GUI_Lock
   \   00000050   0400A0E1           MOV      R0,R4
   \   00000054   ........           BL       GUI_ALLOC_h2p
   \   00000058   186090E5           LDR      R6,[R0, #+24]
   \   0000005C   000056E3           CMP      R6,#+0
   \   00000060   0900000A           BEQ      ??WM_AttachWindow_2
   \   00000064   0400A0E1           MOV      R0,R4
   \   00000068   ........           BL       WM__DetachWindow
   \   0000006C   0600A0E1           MOV      R0,R6
   \   00000070   ........           BL       GUI_ALLOC_h2p
   \   00000074   F210D0E1           LDRSH    R1,[R0, #+2]
   \   00000078   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000007C   002061E2           RSB      R2,R1,#+0
   \   00000080   001060E2           RSB      R1,R0,#+0
   \   00000084   0400A0E1           MOV      R0,R4
   \   00000088   ........           BL       WM_MoveWindow
   \                     ??WM_AttachWindow_2:
   \   0000008C   ........           BL       GUI_Unlock
     65                WM__InsertWindowIntoList(hWin, hParent);
   \                     ??WM_AttachWindow_1:
   \   00000090   0510A0E1           MOV      R1,R5
   \   00000094   0400A0E1           MOV      R0,R4
   \   00000098   ........           BL       WM__InsertWindowIntoList
     66                WM_MoveWindow(hWin, pParent->Rect.x0,  pParent->Rect.y0);    /* Convert parent coordinates -> screen coordinates */
   \   0000009C   F220D7E1           LDRSH    R2,[R7, #+2]
   \   000000A0   F010D7E1           LDRSH    R1,[R7, #+0]
   \   000000A4   0400A0E1           MOV      R0,R4
   \   000000A8   ........           BL       WM_MoveWindow
     67                WM_InvalidateWindow(hWin);                                   /* Because WM_MoveWindow(0, 0) does not invalidate the window! */
   \   000000AC   0400A0E1           MOV      R0,R4
   \   000000B0   ........           BL       WM_InvalidateWindow
     68              }
     69            }
     70            WM_UNLOCK();
   \                     ??WM_AttachWindow_0:
   \   000000B4   04D08DE2           ADD      SP,SP,#+4
   \   000000B8   F040BDE8           POP      {R4-R7,LR}
   \   000000BC   ........           B        GUI_Unlock       ;; tailcall
     71          }
     72          
     73          /*********************************************************************
     74          *
     75          *       WM_AttachWindowAt
     76          */

   \                                 In section .text, align 4, keep-with-next
     77          void WM_AttachWindowAt(WM_HWIN hWin, WM_HWIN hParent, int x, int y) {
   \                     WM_AttachWindowAt:
   \   00000000   F0412DE9           PUSH     {R4-R8,LR}
   \   00000004   0040A0E1           MOV      R4,R0
   \   00000008   0150A0E1           MOV      R5,R1
   \   0000000C   0260A0E1           MOV      R6,R2
   \   00000010   0370A0E1           MOV      R7,R3
     78            WM_DetachWindow(hWin);
   \   00000014   000054E3           CMP      R4,#+0
   \   00000018   1000000A           BEQ      ??WM_AttachWindowAt_0
   \   0000001C   ........           BL       GUI_Lock
   \   00000020   0400A0E1           MOV      R0,R4
   \   00000024   ........           BL       GUI_ALLOC_h2p
   \   00000028   188090E5           LDR      R8,[R0, #+24]
   \   0000002C   000058E3           CMP      R8,#+0
   \   00000030   0900000A           BEQ      ??WM_AttachWindowAt_1
   \   00000034   0400A0E1           MOV      R0,R4
   \   00000038   ........           BL       WM__DetachWindow
   \   0000003C   0800A0E1           MOV      R0,R8
   \   00000040   ........           BL       GUI_ALLOC_h2p
   \   00000044   F210D0E1           LDRSH    R1,[R0, #+2]
   \   00000048   F000D0E1           LDRSH    R0,[R0, #+0]
   \   0000004C   002061E2           RSB      R2,R1,#+0
   \   00000050   001060E2           RSB      R1,R0,#+0
   \   00000054   0400A0E1           MOV      R0,R4
   \   00000058   ........           BL       WM_MoveWindow
   \                     ??WM_AttachWindowAt_1:
   \   0000005C   ........           BL       GUI_Unlock
     79            WM_MoveTo(hWin, x, y);
   \                     ??WM_AttachWindowAt_0:
   \   00000060   0720A0E1           MOV      R2,R7
   \   00000064   0610A0E1           MOV      R1,R6
   \   00000068   0400A0E1           MOV      R0,R4
   \   0000006C   ........           BL       WM_MoveTo
     80            WM_AttachWindow(hWin, hParent);
   \   00000070   ........           BL       GUI_Lock
   \   00000074   000055E3           CMP      R5,#+0
   \   00000078   04005511           CMPNE    R5,R4
   \   0000007C   2400000A           BEQ      ??WM_AttachWindowAt_2
   \   00000080   0400A0E1           MOV      R0,R4
   \   00000084   ........           BL       GUI_ALLOC_h2p
   \   00000088   0070A0E1           MOV      R7,R0
   \   0000008C   0500A0E1           MOV      R0,R5
   \   00000090   ........           BL       GUI_ALLOC_h2p
   \   00000094   0060A0E1           MOV      R6,R0
   \   00000098   180097E5           LDR      R0,[R7, #+24]
   \   0000009C   050050E1           CMP      R0,R5
   \   000000A0   1B00000A           BEQ      ??WM_AttachWindowAt_2
   \   000000A4   000054E3           CMP      R4,#+0
   \   000000A8   1000000A           BEQ      ??WM_AttachWindowAt_3
   \   000000AC   ........           BL       GUI_Lock
   \   000000B0   0400A0E1           MOV      R0,R4
   \   000000B4   ........           BL       GUI_ALLOC_h2p
   \   000000B8   187090E5           LDR      R7,[R0, #+24]
   \   000000BC   000057E3           CMP      R7,#+0
   \   000000C0   0900000A           BEQ      ??WM_AttachWindowAt_4
   \   000000C4   0400A0E1           MOV      R0,R4
   \   000000C8   ........           BL       WM__DetachWindow
   \   000000CC   0700A0E1           MOV      R0,R7
   \   000000D0   ........           BL       GUI_ALLOC_h2p
   \   000000D4   F210D0E1           LDRSH    R1,[R0, #+2]
   \   000000D8   F000D0E1           LDRSH    R0,[R0, #+0]
   \   000000DC   002061E2           RSB      R2,R1,#+0
   \   000000E0   001060E2           RSB      R1,R0,#+0
   \   000000E4   0400A0E1           MOV      R0,R4
   \   000000E8   ........           BL       WM_MoveWindow
   \                     ??WM_AttachWindowAt_4:
   \   000000EC   ........           BL       GUI_Unlock
   \                     ??WM_AttachWindowAt_3:
   \   000000F0   0510A0E1           MOV      R1,R5
   \   000000F4   0400A0E1           MOV      R0,R4
   \   000000F8   ........           BL       WM__InsertWindowIntoList
   \   000000FC   F220D6E1           LDRSH    R2,[R6, #+2]
   \   00000100   F010D6E1           LDRSH    R1,[R6, #+0]
   \   00000104   0400A0E1           MOV      R0,R4
   \   00000108   ........           BL       WM_MoveWindow
   \   0000010C   0400A0E1           MOV      R0,R4
   \   00000110   ........           BL       WM_InvalidateWindow
   \                     ??WM_AttachWindowAt_2:
   \   00000114   F041BDE8           POP      {R4-R8,LR}
   \   00000118   ........           B        GUI_Unlock       ;; tailcall
     81          }
     82          
     83          
     84          #else
     85            void WM_AttachWindow_c(void) {} /* avoid empty object files */
     86          #endif   /* GUI_WINSUPPORT */
     87          
     88          /*************************** End of file ****************************/
     89          

   Maximum stack usage in bytes:

     Function          .cstack
     --------          -------
     WM_AttachWindow       24
     WM_AttachWindowAt     24
     WM_DetachWindow       16


   Section sizes:

     Function/Label    Bytes
     --------------    -----
     WM_DetachWindow     92
     WM_AttachWindow    192
     WM_AttachWindowAt  284

 
 568 bytes in section .text
 
 568 bytes of CODE memory

Errors: none
Warnings: none
