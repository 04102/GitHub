###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.2.52244/W32 for ARM     19/Nov/2015  13:09:18 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  arm                                                      #
#    Endian       =  little                                                   #
#    Source file  =  C:\DUII\TargetHW\GUI\WM_MakeModal.c                      #
#    Command line =  C:\DUII\TargetHW\GUI\WM_MakeModal.c -D DEBUG=1 -D        #
#                    SDRAM_TARGET=1 -D USB_IS_HIGH_SPEED -D NOPROFILER -D     #
#                    OS_TRACE=0 -D OS_VIEW_ENABLE=0 -lCN                      #
#                    C:\DUII\TargetHW\Release\List\ -o                        #
#                    C:\DUII\TargetHW\Release\Obj\ --endian=little            #
#                    --cpu=ARM926EJ-S -e --fpu=None --dlib_config             #
#                    "C:\Program Files (x86)\IAR Systems\Embedded Workbench   #
#                    6.0\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\ -I              #
#                    C:\DUII\TargetHW\Application\SEGGERDEMO\Src\ -I          #
#                    C:\DUII\TargetHW\Config\ -I C:\DUII\TargetHW\FS\ -I      #
#                    C:\DUII\TargetHW\GUI\ -I C:\DUII\TargetHW\Inc\ -I        #
#                    C:\DUII\TargetHW\OS\ -I C:\DUII\TargetHW\Setup\ -I       #
#                    \DUII\DUII\ -I \DUII\DUII\Graphics\ --cpu_mode arm -Ohs  #
#                    --use_c++_inline --require_prototypes                    #
#    List file    =  C:\DUII\TargetHW\Release\List\WM_MakeModal.lst           #
#    Object file  =  C:\DUII\TargetHW\Release\Obj\WM_MakeModal.o              #
#                                                                             #
#                                                                             #
###############################################################################

C:\DUII\TargetHW\GUI\WM_MakeModal.c
      1          /*********************************************************************
      2          *                SEGGER Microcontroller GmbH & Co. KG                *
      3          *        Solutions for real time microcontroller applications        *
      4          **********************************************************************
      5          *                                                                    *
      6          *        (c) 1996 - 2010  SEGGER Microcontroller GmbH & Co. KG       *
      7          *                                                                    *
      8          *        Internet: www.segger.com    Support:  support@segger.com    *
      9          *                                                                    *
     10          **********************************************************************
     11          
     12          ** emWin V5.06 - Graphical user interface for embedded applications **
     13          emWin is protected by international copyright laws.   Knowledge of the
     14          source code may not be used to write a similar product.  This file may
     15          only be used in accordance with a license and should not be re-
     16          distributed in any way. We appreciate your understanding and fairness.
     17          ----------------------------------------------------------------------
     18          File        : WM_MakeModal.c
     19          Purpose     : Windows manager, modal windows
     20          ----------------------------------------------------------------------
     21          */
     22          
     23          #include <stddef.h>           /* needed for definition of NULL */
     24          
     25          #include "WM_Intern.h"
     26          #include "GUI_Debug.h"
     27          
     28          #if (GUI_WINSUPPORT)
     29          
     30          /*********************************************************************
     31          *
     32          *       public code
     33          *
     34          **********************************************************************
     35          */
     36          /*********************************************************************
     37          *
     38          *       WM_MakeModal
     39          *
     40          * Purpose:
     41          *   Makes the window modal.
     42          *   We also need to send a message to the window which has received
     43          *   the last "pressed" message
     44          *
     45          * Return value:
     46          */

   \                                 In section .text, align 4, keep-with-next
     47          void WM_MakeModal(WM_HWIN hWin) {
   \                     WM_MakeModal:
   \   00000000   30402DE9           PUSH     {R4,R5,LR}
   \   00000004   14D04DE2           SUB      SP,SP,#+20
   \   00000008   0050A0E1           MOV      R5,R0
     48            WM_LOCK();
   \   0000000C   ........           BL       GUI_Lock
     49            WM_ReleaseCapture();
   \   00000010   ........           BL       WM_ReleaseCapture
     50            WM__aCHWinModal[WM__TOUCHED_LAYER].hWin = hWin;
   \   00000014   ........           LDR      R4,??DataTable1
   \   00000018   ........           LDR      R1,??DataTable1_1
   \   0000001C   000094E5           LDR      R0,[R4, #+0]
   \   00000020   801181E0           ADD      R1,R1,R0, LSL #+3
   \   00000024   045081E5           STR      R5,[R1, #+4]
     51            /* Send a message to the window that it is no longer pressed (WM_TOUCH(0)) 
     52               if it is outside the modal area, because otherwise it will not receive this message any more.
     53            */
     54            if (WM__aCHWinLast[WM__TOUCHED_LAYER].hWin) {
   \   00000028   ........           LDR      R5,??DataTable1_2
   \   0000002C   800185E0           ADD      R0,R5,R0, LSL #+3
   \   00000030   041090E5           LDR      R1,[R0, #+4]
   \   00000034   000051E3           CMP      R1,#+0
   \   00000038   1400000A           BEQ      ??WM_MakeModal_0
     55              if (!WM__IsInModalArea(WM__aCHWinLast[WM__TOUCHED_LAYER].hWin)) {
   \   0000003C   040090E5           LDR      R0,[R0, #+4]
   \   00000040   ........           BL       WM__IsInModalArea
   \   00000044   000050E3           CMP      R0,#+0
   \   00000048   1000001A           BNE      ??WM_MakeModal_0
     56                WM_MESSAGE Msg = {0};
   \   0000004C   0D00A0E1           MOV      R0,SP
   \   00000050   0010A0E3           MOV      R1,#+0
   \   00000054   0020A0E3           MOV      R2,#+0
   \   00000058   0030A0E3           MOV      R3,#+0
   \   0000005C   00C0A0E3           MOV      R12,#+0
   \   00000060   0E10A0E8           STM      R0!,{R1-R3,R12}
     57                Msg.MsgId = WM_TOUCH;
     58                WM__SendPIDMessage(WM__aCHWinLast[WM__TOUCHED_LAYER].hWin, &Msg);
   \   00000064   000094E5           LDR      R0,[R4, #+0]
   \   00000068   0C10A0E3           MOV      R1,#+12
   \   0000006C   00108DE5           STR      R1,[SP, #+0]
   \   00000070   800185E0           ADD      R0,R5,R0, LSL #+3
   \   00000074   0D10A0E1           MOV      R1,SP
   \   00000078   040090E5           LDR      R0,[R0, #+4]
   \   0000007C   ........           BL       WM__SendPIDMessage
     59                WM__aCHWinLast[WM__TOUCHED_LAYER].hWin = 0;
   \   00000080   000094E5           LDR      R0,[R4, #+0]
   \   00000084   0010A0E3           MOV      R1,#+0
   \   00000088   800185E0           ADD      R0,R5,R0, LSL #+3
   \   0000008C   041080E5           STR      R1,[R0, #+4]
     60              } 
     61            }
     62            WM_UNLOCK();
   \                     ??WM_MakeModal_0:
   \   00000090   ........           BL       GUI_Unlock
     63          }
   \   00000094   14D08DE2           ADD      SP,SP,#+20       ;; stack cleaning
   \   00000098   3080BDE8           POP      {R4,R5,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   ........           DC32     WM__TouchedLayer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   ........           DC32     WM__aCHWinModal

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   ........           DC32     WM__aCHWinLast

   \                                 In section .rodata, align 4, keep-with-next
   \                     `?<Constant {0}>`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   00000000           DC32 0
   \   00000004   000000000000       DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              00000000    
   \   0000000E   0000               DC8 0, 0
     64          
     65          #else
     66            void WM_MakeModal_c(void) {} /* avoid empty object files */
     67          #endif  /* (GUI_WINSUPPORT & GUI_SUPPORT_TOUCH) */
     68          
     69          /*************************** End of file ****************************/

   Maximum stack usage in bytes:

     Function     .cstack
     --------     -------
     WM_MakeModal     32


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     WM_MakeModal     156
     ??DataTable1       4
     ??DataTable1_1     4
     ??DataTable1_2     4
     ?<Constant {0}>   16

 
  16 bytes in section .rodata
 168 bytes in section .text
 
 168 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: none
