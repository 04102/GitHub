// TraqDash linker file
// GAStephens 2011-03-20
//
// While there is no ROM, the code and constants are stored in Dataflash so
// it is effectively a ROM. Since the bootloader copies it directly into RAM,
// the "ROM" is set to an address within the RAM space.
//
// Special Sections
define symbol __ICFEDIT_intvec_start__ = 0x20000000;

// Memory Regions
define symbol __ICFEDIT_region_ROM_start__ = 0x20000040;
define symbol __ICFEDIT_region_ROM_end__   = 0x2107FFFF;	// 2 chips * 8192 segments * 1056 bytes per seg
define symbol __ICFEDIT_region_RAM_start__ = 0x21080000;
define symbol __ICFEDIT_region_RAM_end__   = 0x23FFFFFF;

// Sizes
define symbol __ICFEDIT_size_cstack__   = 0x400;
define symbol __ICFEDIT_size_svcstack__ = 0x40;
define symbol __ICFEDIT_size_irqstack__ = 0x80;     // (4*(4*8)) = Nesting level*(4*8) bytes. Total size must be multiple of 8 bytes
define symbol __ICFEDIT_size_fiqstack__ = 0x40;
define symbol __ICFEDIT_size_undstack__ = 0x40;
define symbol __ICFEDIT_size_abtstack__ = 0x40;
define symbol __ICFEDIT_size_heap__     = 0x400000;	// 4 meg. this could be up to 48 meg minus stack -- gas

define memory mem with size = 8G;
define region ROM_region = mem:[from __ICFEDIT_region_ROM_start__ to __ICFEDIT_region_ROM_end__];
define region RAM_region = mem:[from __ICFEDIT_region_RAM_start__ to __ICFEDIT_region_RAM_end__];

define block CSTACK    with alignment = 8, size = __ICFEDIT_size_cstack__   { };
define block SVC_STACK with alignment = 8, size = __ICFEDIT_size_svcstack__ { };
define block IRQ_STACK with alignment = 8, size = __ICFEDIT_size_irqstack__ { };
define block FIQ_STACK with alignment = 8, size = __ICFEDIT_size_fiqstack__ { };
define block UND_STACK with alignment = 8, size = __ICFEDIT_size_undstack__ { };
define block ABT_STACK with alignment = 8, size = __ICFEDIT_size_abtstack__ { };
define block HEAP      with alignment = 8, size = __ICFEDIT_size_heap__     { };

initialize by copy with packing = none { readwrite };
do not initialize  { section .noinit };

place at address mem:__ICFEDIT_intvec_start__    { readonly section .intvec };
place in ROM_region { readonly };
place in RAM_region { block RAM_block with fixed order
		{ readwrite, block CSTACK, block SVC_STACK, block IRQ_STACK,
		block FIQ_STACK, block UND_STACK, block ABT_STACK, block HEAP }};
