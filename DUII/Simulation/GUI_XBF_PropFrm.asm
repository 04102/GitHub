; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_XBF_PropFrm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_XBF_APIList_Prop_Frm
EXTRN	_GUI_XBF__IsInFont:PROC
EXTRN	_GUI_XBF__GetFontInfo:PROC
EXTRN	_GUI_XBF__GetCharDistX:PROC
CONST	SEGMENT
_GUI_XBF_APIList_Prop_Frm DD FLAT:__DispChar
	DD	FLAT:_GUI_XBF__GetCharDistX
	DD	FLAT:_GUI_XBF__GetFontInfo
	DD	FLAT:_GUI_XBF__IsInFont
	ORG $+8
CONST	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_LCD_pBkColorIndex:DWORD
EXTRN	_GUI__Read16:PROC
EXTRN	_LCD_pColorIndex:DWORD
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	_GUI_XBF__GetOffAndSize:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_xbf_propfrm.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DispChar
_TEXT	SEGMENT
_OldIndex$ = -448					; size = 4
_OldDrawMode$ = -436					; size = 4
_yPos$ = -424						; size = 4
_xPos$ = -412						; size = 4
_NumLines$ = -400					; size = 4
_RemLines$ = -388					; size = 4
_NumBytes$ = -376					; size = 2
_BytesPerLine$ = -364					; size = 2
_MaxLines$ = -352					; size = 2
_YSize$ = -340						; size = 2
_XSize$ = -328						; size = 2
_yOff$ = -316						; size = 2
_xOff$ = -304						; size = 2
_xDist$ = -292						; size = 2
_Size$ = -280						; size = 2
_i$ = -268						; size = 4
_iOff$ = -256						; size = 4
_Off$ = -244						; size = 4
_pXBF_Data$ = -232					; size = 4
_aBuffer$ = -220					; size = 200
_pBuffer$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_c$ = 8							; size = 2
__DispChar PROC						; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 644				; 00000284H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-644]
	mov	ecx, 161				; 000000a1H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 50
	lea	eax, DWORD PTR _aBuffer$[ebp]
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _GUI_Context+28
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pXBF_Data$[ebp], ecx
; Line 52
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jl	SHORT $LN12@DispChar
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	eax, edx
	jle	SHORT $LN13@DispChar
$LN12@DispChar:
; Line 53
	jmp	$LN14@DispChar
$LN13@DispChar:
; Line 58
	lea	eax, DWORD PTR _Size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Off$[ebp]
	push	ecx
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	mov	eax, DWORD PTR _pXBF_Data$[ebp]
	push	eax
	call	_GUI_XBF__GetOffAndSize
	add	esp, 16					; 00000010H
; Line 59
	cmp	DWORD PTR _Off$[ebp], 0
	jne	SHORT $LN11@DispChar
; Line 60
	jmp	$LN14@DispChar
$LN11@DispChar:
; Line 65
	movsx	eax, WORD PTR _GUI_Context+42
	and	eax, 4
	or	eax, 2
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _OldDrawMode$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OldIndex$[ebp], ecx
; Line 70
	movzx	eax, WORD PTR _Size$[ebp]
	cmp	eax, 200				; 000000c8H
	jle	$LN10@DispChar
; Line 74
	mov	esi, esp
	lea	eax, DWORD PTR _aBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	push	12					; 0000000cH
	mov	eax, DWORD PTR _Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 75
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _xDist$[ebp], ax
; Line 76
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _XSize$[ebp], ax
; Line 77
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _YSize$[ebp], ax
; Line 78
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _xOff$[ebp], ax
; Line 79
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _yOff$[ebp], ax
; Line 80
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _BytesPerLine$[ebp], ax
; Line 81
	mov	eax, DWORD PTR _Off$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _iOff$[ebp], eax
; Line 82
	movzx	ecx, WORD PTR _BytesPerLine$[ebp]
	mov	eax, 188				; 000000bcH
	cdq
	idiv	ecx
	mov	WORD PTR _MaxLines$[ebp], ax
; Line 83
	movzx	eax, WORD PTR _YSize$[ebp]
	mov	DWORD PTR _RemLines$[ebp], eax
; Line 84
	movsx	eax, WORD PTR _GUI_Context+34
	movsx	ecx, WORD PTR _xOff$[ebp]
	add	eax, ecx
	mov	DWORD PTR _xPos$[ebp], eax
; Line 85
	movsx	eax, WORD PTR _GUI_Context+36
	movsx	ecx, WORD PTR _yOff$[ebp]
	add	eax, ecx
	mov	DWORD PTR _yPos$[ebp], eax
; Line 89
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@DispChar
$LN8@DispChar:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@DispChar:
	cmp	DWORD PTR _i$[ebp], 2
	jae	$LN7@DispChar
$LN6@DispChar:
; Line 94
	movzx	eax, WORD PTR _MaxLines$[ebp]
	mov	DWORD PTR _NumLines$[ebp], eax
; Line 95
	mov	eax, DWORD PTR _NumLines$[ebp]
	cmp	eax, DWORD PTR _RemLines$[ebp]
	jle	SHORT $LN3@DispChar
; Line 96
	mov	eax, DWORD PTR _RemLines$[ebp]
	mov	DWORD PTR _NumLines$[ebp], eax
$LN3@DispChar:
; Line 98
	movzx	eax, WORD PTR _BytesPerLine$[ebp]
	imul	eax, DWORD PTR _NumLines$[ebp]
	mov	WORD PTR _NumBytes$[ebp], ax
; Line 99
	mov	esi, esp
	lea	eax, DWORD PTR _aBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	movzx	eax, WORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pXBF_Data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 108
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	lea	ecx, DWORD PTR _aBuffer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _BytesPerLine$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+26]
	push	eax
	mov	ecx, DWORD PTR _NumLines$[ebp]
	push	ecx
	movzx	edx, WORD PTR _XSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _yPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPos$[ebp]
	push	ecx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 109
	movzx	eax, WORD PTR _NumBytes$[ebp]
	add	eax, DWORD PTR _iOff$[ebp]
	mov	DWORD PTR _iOff$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _RemLines$[ebp]
	sub	eax, DWORD PTR _NumLines$[ebp]
	mov	DWORD PTR _RemLines$[ebp], eax
; Line 111
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _NumLines$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 112
	cmp	DWORD PTR _RemLines$[ebp], 0
	jne	$LN6@DispChar
; Line 113
	cmp	DWORD PTR _i$[ebp], 0
	jne	SHORT $LN2@DispChar
; Line 114
	movzx	eax, WORD PTR _YSize$[ebp]
	mov	DWORD PTR _RemLines$[ebp], eax
; Line 115
	movsx	eax, WORD PTR _GUI_Context+36
	movsx	ecx, WORD PTR _yOff$[ebp]
	add	eax, ecx
	mov	DWORD PTR _yPos$[ebp], eax
; Line 116
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _LCD_pBkColorIndex
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
$LN2@DispChar:
; Line 118
	jmp	$LN8@DispChar
$LN7@DispChar:
; Line 119
	jmp	$LN1@DispChar
$LN10@DispChar:
; Line 120
	mov	esi, esp
	lea	eax, DWORD PTR _aBuffer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pXBF_Data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	movzx	eax, WORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pXBF_Data$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 121
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _xDist$[ebp], ax
; Line 122
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _XSize$[ebp], ax
; Line 123
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _YSize$[ebp], ax
; Line 124
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _xOff$[ebp], ax
; Line 125
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _yOff$[ebp], ax
; Line 126
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _BytesPerLine$[ebp], ax
; Line 135
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _BytesPerLine$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+26]
	push	eax
	movzx	ecx, WORD PTR _YSize$[ebp]
	push	ecx
	movzx	edx, WORD PTR _XSize$[ebp]
	push	edx
	movsx	eax, WORD PTR _GUI_Context+36
	movsx	ecx, WORD PTR _yOff$[ebp]
	add	eax, ecx
	push	eax
	movsx	edx, WORD PTR _GUI_Context+34
	movsx	eax, WORD PTR _xOff$[ebp]
	add	edx, eax
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 139
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _LCD_pBkColorIndex
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 148
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	movzx	ecx, WORD PTR _BytesPerLine$[ebp]
	movzx	edx, WORD PTR _YSize$[ebp]
	imul	ecx, edx
	add	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	movzx	eax, WORD PTR _BytesPerLine$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [ecx+27]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+26]
	push	ecx
	movzx	edx, WORD PTR _YSize$[ebp]
	push	edx
	movzx	eax, WORD PTR _XSize$[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+36
	movsx	edx, WORD PTR _yOff$[ebp]
	add	ecx, edx
	push	ecx
	movsx	eax, WORD PTR _GUI_Context+34
	movsx	ecx, WORD PTR _xOff$[ebp]
	add	eax, ecx
	push	eax
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
$LN1@DispChar:
; Line 153
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _OldIndex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 154
	mov	eax, DWORD PTR _OldDrawMode$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 155
	movsx	eax, WORD PTR _xDist$[ebp]
	movsx	ecx, WORD PTR _GUI_Context+34
	add	ecx, eax
	mov	WORD PTR _GUI_Context+34, cx
$LN14@DispChar:
; Line 156
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@DispChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 644				; 00000284H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN21@DispChar:
	DD	4
	DD	$LN20@DispChar
$LN20@DispChar:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN16@DispChar
	DD	-220					; ffffff24H
	DD	200					; 000000c8H
	DD	$LN17@DispChar
	DD	-244					; ffffff0cH
	DD	4
	DD	$LN18@DispChar
	DD	-280					; fffffee8H
	DD	2
	DD	$LN19@DispChar
$LN19@DispChar:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN18@DispChar:
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN17@DispChar:
	DB	97					; 00000061H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN16@DispChar:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
__DispChar ENDP
_TEXT	ENDS
END
