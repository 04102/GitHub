; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_ReadLine.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_MEMDEV__ReadLine
EXTRN	_GUI_ReadRect:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_readline.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV__ReadLine
_TEXT	SEGMENT
_pDevice$ = -24						; size = 4
_r$ = -12						; size = 8
_x0$ = 8						; size = 4
_y$ = 12						; size = 4
_x1$ = 16						; size = 4
_pBuffer$ = 20						; size = 4
_GUI_MEMDEV__ReadLine PROC				; COMDAT
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 35
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 37
	mov	esi, esp
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+48]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 38
	movsx	eax, WORD PTR _r$[ebp+4]
	cmp	DWORD PTR _x0$[ebp], eax
	jle	SHORT $LN6@GUI_MEMDEV
; Line 39
	jmp	SHORT $LN7@GUI_MEMDEV
$LN6@GUI_MEMDEV:
; Line 41
	movsx	eax, WORD PTR _r$[ebp]
	cmp	DWORD PTR _x1$[ebp], eax
	jge	SHORT $LN5@GUI_MEMDEV
; Line 42
	jmp	SHORT $LN7@GUI_MEMDEV
$LN5@GUI_MEMDEV:
; Line 44
	movsx	eax, WORD PTR _r$[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN4@GUI_MEMDEV
; Line 45
	jmp	SHORT $LN7@GUI_MEMDEV
$LN4@GUI_MEMDEV:
; Line 47
	movsx	eax, WORD PTR _r$[ebp+2]
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN3@GUI_MEMDEV
; Line 48
	jmp	SHORT $LN7@GUI_MEMDEV
$LN3@GUI_MEMDEV:
; Line 50
	movsx	eax, WORD PTR _r$[ebp]
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN2@GUI_MEMDEV
; Line 51
	movsx	eax, WORD PTR _r$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pBuffer$[ebp], edx
; Line 52
	movsx	eax, WORD PTR _r$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
$LN2@GUI_MEMDEV:
; Line 54
	movsx	eax, WORD PTR _r$[ebp+4]
	cmp	DWORD PTR _x1$[ebp], eax
	jle	SHORT $LN1@GUI_MEMDEV
; Line 55
	movsx	eax, WORD PTR _r$[ebp+4]
	mov	DWORD PTR _x1$[ebp], eax
$LN1@GUI_MEMDEV:
; Line 57
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GUI_ReadRect
	add	esp, 24					; 00000018H
$LN7@GUI_MEMDEV:
; Line 58
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_MEMDEV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@GUI_MEMDEV:
	DD	1
	DD	$LN10@GUI_MEMDEV
$LN10@GUI_MEMDEV:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN9@GUI_MEMDEV
$LN9@GUI_MEMDEV:
	DB	114					; 00000072H
	DB	0
_GUI_MEMDEV__ReadLine ENDP
_TEXT	ENDS
END
