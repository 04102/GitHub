; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawGraph.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawGraph
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawgraph.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawGraph
_TEXT	SEGMENT
_pay$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_DrawGraph PROC					; COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 90
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawGr
$LN3@GUI_DrawGr:
; Line 92
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pay$[ebp]
	push	eax
	call	__DrawGraph
	add	esp, 16					; 00000010H
; Line 94
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawGr
$LN5@GUI_DrawGr:
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawGraph ENDP
_TEXT	ENDS
EXTRN	_LCD_DrawVLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawGraph
_TEXT	SEGMENT
_y01$8361 = -68						; size = 4
_yClip1$ = -56						; size = 4
_yClip0$ = -44						; size = 4
_y1$ = -32						; size = 4
_y0$ = -20						; size = 4
_i$ = -8						; size = 4
_pay$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_xOff$ = 16						; size = 4
_yOff$ = 20						; size = 4
__DrawGraph PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _yClip0$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _yClip1$[ebp], ecx
; Line 44
	mov	DWORD PTR _i$[ebp], 0
; Line 45
	cmp	DWORD PTR _GUI_Context+20, 0
	je	SHORT $LN13@DrawGraph
; Line 46
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax]
	cmp	DWORD PTR _xOff$[ebp], ecx
	jge	SHORT $LN12@DrawGraph
; Line 47
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax]
	sub	ecx, DWORD PTR _xOff$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
$LN12@DrawGraph:
; Line 48
	mov	eax, DWORD PTR _NumPoints$[ebp]
	mov	ecx, DWORD PTR _xOff$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+4]
	cmp	edx, ecx
	jle	SHORT $LN13@DrawGraph
; Line 49
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+4]
	sub	ecx, DWORD PTR _xOff$[ebp]
	add	ecx, 1
	mov	DWORD PTR _NumPoints$[ebp], ecx
$LN13@DrawGraph:
; Line 52
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	$LN14@DrawGraph
; Line 53
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pay$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2]
	add	edx, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _y0$[ebp], edx
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN9@DrawGraph
$LN8@DrawGraph:
; Line 55
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@DrawGraph:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	$LN14@DrawGraph
; Line 57
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pay$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2]
	add	edx, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _y1$[ebp], edx
; Line 58
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _yClip0$[ebp]
	jge	SHORT $LN5@DrawGraph
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _yClip0$[ebp]
	jl	$LN6@DrawGraph
$LN5@DrawGraph:
; Line 59
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _yClip1$[ebp]
	jle	SHORT $LN3@DrawGraph
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _yClip1$[ebp]
	jg	SHORT $LN6@DrawGraph
$LN3@DrawGraph:
; Line 61
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _y01$8361[ebp], eax
; Line 62
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y1$[ebp]
	jg	SHORT $LN2@DrawGraph
; Line 63
	mov	eax, DWORD PTR _y01$8361[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xOff$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 64
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y01$8361[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR _xOff$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 65
	jmp	SHORT $LN6@DrawGraph
$LN2@DrawGraph:
; Line 66
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y01$8361[ebp]
	push	ecx
	mov	edx, DWORD PTR _xOff$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 67
	mov	eax, DWORD PTR _y01$8361[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR _xOff$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
$LN6@DrawGraph:
; Line 71
	mov	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 72
	jmp	$LN8@DrawGraph
$LN14@DrawGraph:
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawGraph ENDP
_TEXT	ENDS
END
