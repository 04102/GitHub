; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD_NextPixelAPI.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
__NextPixel_API DD FLAT:__NextPixel_Start
	DD	FLAT:__NextPixel_SetPixel
	DD	FLAT:__NextPixel_NextLine
	DD	FLAT:__NextPixel_End
_DATA	ENDS
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_ALLOC_AllocNoInit:PROC
EXTRN	_GUI_ALLOC_GetMaxSize:PROC
EXTRN	_GUI_GetBitsPerPixelEx:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
__Context DB	028H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd_nextpixelapi.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __NextPixel_Start
_TEXT	SEGMENT
tv74 = -256						; size = 4
tv70 = -256						; size = 4
_xSize$ = -56						; size = 4
_BytesPerLineDest$ = -44				; size = 4
_BytesPerPixel$ = -32					; size = 4
_BufferSize$ = -20					; size = 4
_BufferSizeAvailable$ = -8				; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
__NextPixel_Start PROC					; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 79
	mov	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	add	eax, 1
	mov	DWORD PTR _xSize$[ebp], eax
; Line 84
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetBitsPerPixelEx
	add	esp, 4
	mov	DWORD PTR __Context+28, eax
; Line 85
	cmp	DWORD PTR __Context+28, 24		; 00000018H
	jne	SHORT $LN5@NextPixel_
	mov	DWORD PTR tv70[ebp], 32			; 00000020H
	jmp	SHORT $LN6@NextPixel_
$LN5@NextPixel_:
	mov	eax, DWORD PTR __Context+28
	mov	DWORD PTR tv70[ebp], eax
$LN6@NextPixel_:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR __Context+28, ecx
; Line 86
	cmp	DWORD PTR __Context+28, 8
	jg	SHORT $LN7@NextPixel_
	mov	DWORD PTR tv74[ebp], 1
	jmp	SHORT $LN8@NextPixel_
$LN7@NextPixel_:
	xor	eax, eax
	cmp	DWORD PTR __Context+28, 16		; 00000010H
	setg	al
	lea	eax, DWORD PTR [eax+eax+2]
	mov	DWORD PTR tv74[ebp], eax
$LN8@NextPixel_:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _BytesPerPixel$[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	imul	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR _BytesPerLineDest$[ebp], eax
; Line 88
	call	_GUI_ALLOC_GetMaxSize
	mov	DWORD PTR _BufferSizeAvailable$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _BufferSizeAvailable$[ebp]
	cmp	eax, DWORD PTR _BytesPerLineDest$[ebp]
	jae	SHORT $LN2@NextPixel_
; Line 90
	mov	eax, DWORD PTR _BufferSizeAvailable$[ebp]
	xor	edx, edx
	div	DWORD PTR _BytesPerPixel$[ebp]
	imul	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR _BufferSize$[ebp], eax
; Line 91
	jmp	SHORT $LN1@NextPixel_
$LN2@NextPixel_:
; Line 92
	mov	eax, DWORD PTR _BytesPerLineDest$[ebp]
	mov	DWORD PTR _BufferSize$[ebp], eax
$LN1@NextPixel_:
; Line 94
	mov	eax, DWORD PTR _BufferSize$[ebp]
	cdq
	idiv	DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR __Context+32, eax
; Line 95
	mov	DWORD PTR __Context+36, 0
; Line 96
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR __Context, eax
	mov	ecx, DWORD PTR __Context
	mov	DWORD PTR __Context+4, ecx
; Line 97
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR __Context+8, eax
; Line 98
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR __Context+24, eax
; Line 102
	mov	eax, DWORD PTR _BytesPerLineDest$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR __Context+12, eax
; Line 103
	mov	eax, DWORD PTR __Context+12
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR __Context+16, eax
; Line 104
	mov	eax, DWORD PTR __Context+16
	mov	DWORD PTR __Context+20, eax
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__NextPixel_Start ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __NextPixel_SetPixel
_TEXT	SEGMENT
tv64 = -232						; size = 4
_pData$8387 = -32					; size = 4
_pData$8384 = -20					; size = 4
_pData$8381 = -8					; size = 4
_PixelIndex$ = 8					; size = 4
__NextPixel_SetPixel PROC				; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR __Context+24
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN4@NextPixel_@2
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN3@NextPixel_@2
	cmp	DWORD PTR tv64[ebp], 4
	je	SHORT $LN2@NextPixel_@2
	jmp	SHORT $LN5@NextPixel_@2
$LN4@NextPixel_@2:
; Line 115
	mov	eax, DWORD PTR __Context+20
	mov	DWORD PTR _pData$8381[ebp], eax
; Line 116
	mov	eax, DWORD PTR _pData$8381[ebp]
	mov	cl, BYTE PTR _PixelIndex$[ebp]
	mov	BYTE PTR [eax], cl
; Line 117
	mov	eax, DWORD PTR __Context+20
	add	eax, 1
	mov	DWORD PTR __Context+20, eax
; Line 119
	jmp	SHORT $LN5@NextPixel_@2
$LN3@NextPixel_@2:
; Line 122
	mov	eax, DWORD PTR __Context+20
	mov	DWORD PTR _pData$8384[ebp], eax
; Line 123
	mov	eax, DWORD PTR _pData$8384[ebp]
	mov	cx, WORD PTR _PixelIndex$[ebp]
	mov	WORD PTR [eax], cx
; Line 124
	mov	eax, DWORD PTR __Context+20
	add	eax, 2
	mov	DWORD PTR __Context+20, eax
; Line 126
	jmp	SHORT $LN5@NextPixel_@2
$LN2@NextPixel_@2:
; Line 129
	mov	eax, DWORD PTR __Context+20
	mov	DWORD PTR _pData$8387[ebp], eax
; Line 130
	mov	eax, DWORD PTR _pData$8387[ebp]
	mov	ecx, DWORD PTR _PixelIndex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 131
	mov	eax, DWORD PTR __Context+20
	add	eax, 4
	mov	DWORD PTR __Context+20, eax
$LN5@NextPixel_@2:
; Line 135
	mov	eax, DWORD PTR __Context+36
	add	eax, 1
	mov	DWORD PTR __Context+36, eax
	mov	ecx, DWORD PTR __Context+36
	cmp	ecx, DWORD PTR __Context+32
	jne	SHORT $LN7@NextPixel_@2
; Line 136
	call	__NextPixel_FlushBuffer
$LN7@NextPixel_@2:
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__NextPixel_SetPixel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __NextPixel_FlushBuffer
_TEXT	SEGMENT
__NextPixel_FlushBuffer PROC				; COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 63
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR __Context+16
	push	eax
	push	0
	mov	ecx, DWORD PTR __Context+28
	push	ecx
	push	1
	mov	edx, DWORD PTR __Context+36
	push	edx
	mov	eax, DWORD PTR __Context+8
	push	eax
	mov	ecx, DWORD PTR __Context+4
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	mov	eax, DWORD PTR __Context+4
	add	eax, DWORD PTR __Context+36
	mov	DWORD PTR __Context+4, eax
; Line 65
	mov	DWORD PTR __Context+36, 0
; Line 66
	mov	eax, DWORD PTR __Context+16
	mov	DWORD PTR __Context+20, eax
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__NextPixel_FlushBuffer ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __NextPixel_NextLine
_TEXT	SEGMENT
__NextPixel_NextLine PROC				; COMDAT
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 145
	cmp	DWORD PTR __Context+36, 0
	je	SHORT $LN1@NextPixel_@3
; Line 146
	call	__NextPixel_FlushBuffer
$LN1@NextPixel_@3:
; Line 148
	mov	eax, DWORD PTR __Context
	mov	DWORD PTR __Context+4, eax
; Line 149
	mov	eax, DWORD PTR __Context+8
	add	eax, 1
	mov	DWORD PTR __Context+8, eax
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__NextPixel_NextLine ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __NextPixel_End
_TEXT	SEGMENT
__NextPixel_End PROC					; COMDAT
; Line 156
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 157
	cmp	DWORD PTR __Context+36, 0
	je	SHORT $LN1@NextPixel_@4
; Line 158
	call	__NextPixel_FlushBuffer
$LN1@NextPixel_@4:
; Line 160
	mov	eax, DWORD PTR __Context+12
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 161
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__NextPixel_End ENDP
_TEXT	ENDS
PUBLIC	_LCD_GetNextPixelAPI
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_GetNextPixelAPI
_TEXT	SEGMENT
_pNextPixel_API$ = -20					; size = 4
_pDevice$ = -8						; size = 4
_LCD_GetNextPixelAPI PROC				; COMDAT
; Line 184
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 188
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 189
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+36], 0
	je	SHORT $LN3@LCD_GetNex
; Line 190
	mov	esi, esp
	push	8
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pNextPixel_API$[ebp], eax
; Line 191
	jmp	SHORT $LN2@LCD_GetNex
$LN3@LCD_GetNex:
; Line 192
	mov	DWORD PTR _pNextPixel_API$[ebp], 0
$LN2@LCD_GetNex:
; Line 194
	cmp	DWORD PTR _pNextPixel_API$[ebp], 0
	jne	SHORT $LN1@LCD_GetNex
; Line 195
	mov	DWORD PTR _pNextPixel_API$[ebp], OFFSET __NextPixel_API
$LN1@LCD_GetNex:
; Line 197
	mov	eax, DWORD PTR _pNextPixel_API$[ebp]
; Line 198
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@LCD_GetNex
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@LCD_GetNex:
	DD	1
	DD	$LN7@LCD_GetNex
$LN7@LCD_GetNex:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN6@LCD_GetNex
$LN6@LCD_GetNex:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_GetNextPixelAPI ENDP
_TEXT	ENDS
END
