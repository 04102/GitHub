; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\TrackSettingsScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_ResetPLPaint
PUBLIC	_DisplayResetPL
PUBLIC	_StartFinishPaint
PUBLIC	_DisplayStartFinish
PUBLIC	_HoldTimePaint
PUBLIC	_DisplayHoldTime
PUBLIC	_TrackTypePaint
PUBLIC	_DisplayTrackType
PUBLIC	_alteredTrackData
PUBLIC	_TrackSettingsScreenList
PUBLIC	_pTrackTypes
PUBLIC	_LapHoldTimes
PUBLIC	_hFinishLatButton
PUBLIC	_hFinishLongButton
PUBLIC	_hFinishHeadButton
EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_DATA	SEGMENT
COMM	_hStartLatButton:DWORD
COMM	_hStartLongButton:DWORD
COMM	_hStartHeadButton:DWORD
COMM	_hFastestLap:DWORD
COMM	_hTrackSettingMainScreen:DWORD
_DATA	ENDS
_BSS	SEGMENT
_alteredTrackData DB 01H DUP (?)
	ALIGN	4

_hFinishLatButton DD 01H DUP (?)
_hFinishLongButton DD 01H DUP (?)
_hFinishHeadButton DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_ResetSFDialog DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG19383
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19384
	DW	00H
	DW	00H
	DW	0aH
	DW	0168H
	DW	032H
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19385
	DW	00H
	DW	00H
	DW	046H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19386
	DW	03H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19387
	DW	02H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
CONST	ENDS
_DATA	SEGMENT
_TrackSettingsScreenList DD 00H
	DD	FLAT:_DisplayTrackType
	DD	FLAT:_TrackTypePaint
	DD	01H
	DD	FLAT:_DisplayHoldTime
	DD	FLAT:_HoldTimePaint
	DD	02H
	DD	FLAT:_DisplayStartFinish
	DD	FLAT:_StartFinishPaint
	DD	03H
	DD	FLAT:_DisplayResetPL
	DD	FLAT:_ResetPLPaint
	DD	0ffffffffH
	DD	00H
	DD	00H
$SG19113 DB	'Road Race - Closed', 00H
	ORG $+1
$SG19114 DB	'Oval - Closed', 00H
	ORG $+2
$SG19115 DB	'Auto-X/Rally - Open', 00H
$SG19116 DB	'Drag Strip - Open', 00H
	ORG $+2
$SG19117 DB	'Hill Climb - Open', 00H
	ORG $+2
$SG19118 DB	'Drive - Open', 00H
	ORG $+3
_pTrackTypes DD	FLAT:$SG19113
	DD	FLAT:$SG19114
	DD	FLAT:$SG19115
	DD	FLAT:$SG19116
	DD	FLAT:$SG19117
	DD	FLAT:$SG19118
	DD	00H
$SG19121 DB	'0 sec', 00H
	ORG $+2
$SG19122 DB	'10 sec', 00H
	ORG $+1
$SG19123 DB	'20 sec', 00H
	ORG $+1
$SG19124 DB	'30 sec', 00H
	ORG $+1
$SG19125 DB	'40 sec', 00H
	ORG $+1
$SG19126 DB	'50 sec', 00H
	ORG $+1
$SG19127 DB	'60 sec', 00H
	ORG $+1
$SG19128 DB	'70 sec', 00H
	ORG $+1
$SG19129 DB	'80 sec', 00H
	ORG $+1
$SG19130 DB	'90 sec', 00H
	ORG $+1
$SG19131 DB	'100 sec', 00H
$SG19132 DB	'110 sec', 00H
$SG19133 DB	'120 sec', 00H
$SG19134 DB	'130 sec', 00H
$SG19135 DB	'140 sec', 00H
$SG19136 DB	'150 sec', 00H
$SG19137 DB	'160 sec', 00H
$SG19138 DB	'170 sec', 00H
$SG19139 DB	'180 sec', 00H
_LapHoldTimes DD FLAT:$SG19121
	DD	FLAT:$SG19122
	DD	FLAT:$SG19123
	DD	FLAT:$SG19124
	DD	FLAT:$SG19125
	DD	FLAT:$SG19126
	DD	FLAT:$SG19127
	DD	FLAT:$SG19128
	DD	FLAT:$SG19129
	DD	FLAT:$SG19130
	DD	FLAT:$SG19131
	DD	FLAT:$SG19132
	DD	FLAT:$SG19133
	DD	FLAT:$SG19134
	DD	FLAT:$SG19135
	DD	FLAT:$SG19136
	DD	FLAT:$SG19137
	DD	FLAT:$SG19138
	DD	FLAT:$SG19139
	DD	00H
$SG19288 DB	'Select Race Type', 00H
	ORG $+3
$SG19292 DB	'On-Screen Time', 00H
	ORG $+1
$SG19302 DB	'%f', 00H
	ORG $+1
$SG19306 DB	'%f', 00H
	ORG $+1
$SG19310 DB	'%.0f', 00H
	ORG $+3
$SG19315 DB	'%f', 00H
	ORG $+1
$SG19320 DB	'%f', 00H
	ORG $+1
$SG19325 DB	'%.0f', 00H
	ORG $+3
$SG19331 DB	'Clear Start/Finish', 00H
	ORG $+1
$SG19334 DB	'Clear Start Line', 00H
	ORG $+3
$SG19336 DB	'Clear Start/Finish', 00H
	ORG $+1
$SG19342 DB	'Enter Start/Finish', 00H
	ORG $+1
$SG19344 DB	'Start/Finish', 00H
	ORG $+3
$SG19345 DB	'Heading', 00H
$SG19348 DB	'Enter Start Line', 00H
	ORG $+3
$SG19350 DB	'Enter Start/Finish', 00H
	ORG $+1
$SG19351 DB	'Heading', 00H
$SG19371 DB	'Reset Time', 00H
	ORG $+1
$SG19375 DB	'Resetting will clear the fastest lap for this track', 00H
$SG19376 DB	'is the current fastest lap', 00H
	ORG $+1
$SG19383 DB	'WARNING', 00H
$SG19384 DB	'Resetting your current', 0aH, 'Start/Finish Coordinates!'
	DB	00H
	ORG $+3
$SG19385 DB	'Are you sure?', 00H
	ORG $+2
$SG19386 DB	'YES', 00H
$SG19387 DB	'CANCEL', 00H
_DATA	ENDS
PUBLIC	_Display_TrackSettingMainScreen
EXTRN	_ResetNewScreen:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_WM_CreateTimer:PROC
EXTRN	_bmResetPredictiveLap:BYTE
EXTRN	_bmStartFinish:BYTE
EXTRN	_bmLapHoldTimeButton:BYTE
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_bmTrackType:BYTE
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindow:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_screen_scrolling:DWORD
EXTRN	_WM_DeleteWindow:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\tracksettingsscreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _Display_TrackSettingMainScreen
_TEXT	SEGMENT
_hButton$ = -8						; size = 4
_hPrev$ = 8						; size = 4
_Display_TrackSettingMainScreen PROC			; COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@Display_Tr
; Line 199
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@Display_Tr:
; Line 201
	mov	DWORD PTR _screen_scrolling, 2
; Line 203
	push	12					; 0000000cH
	call	_SetScreenType
	add	esp, 4
; Line 205
	push	0
	push	OFFSET _TrackSettingMainScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hTrackSettingMainScreen, eax
	cmp	DWORD PTR _hTrackSettingMainScreen, 0
	jg	SHORT $LN1@Display_Tr
; Line 206
	call	_SystemError
$LN1@Display_Tr:
; Line 208
	push	2049					; 00000801H
	push	0
	push	2
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	178					; 000000b2H
	push	38					; 00000026H
	push	41					; 00000029H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 209
	push	OFFSET _bmTrackType
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 211
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	178					; 000000b2H
	push	38					; 00000026H
	push	261					; 00000105H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 212
	push	OFFSET _bmLapHoldTimeButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 214
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	178					; 000000b2H
	push	156					; 0000009cH
	push	41					; 00000029H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 215
	push	OFFSET _bmStartFinish
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 217
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	178					; 000000b2H
	push	156					; 0000009cH
	push	261					; 00000105H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 218
	push	OFFSET _bmResetPredictiveLap
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 220
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 221
	call	_ResetNewScreen
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_Display_TrackSettingMainScreen ENDP
_TEXT	ENDS
EXTRN	_WM_DefaultProc:PROC
EXTRN	_DisplayNewScreenList:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_bmleftarrow:BYTE
EXTRN	_bmTrackSettingsText:BYTE
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmBackground:BYTE
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
_BSS	SEGMENT
_clickedOnVSMScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _TrackSettingMainScreenCallback
_TEXT	SEGMENT
tv86 = -220						; size = 4
tv84 = -220						; size = 4
tv64 = -220						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_TrackSettingMainScreenCallback PROC			; COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 227
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN14@TrackSetti
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN13@TrackSetti
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN16@TrackSetti
	jmp	$LN1@TrackSetti
$LN16@TrackSetti:
; Line 230
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN15@TrackSetti
; Line 232
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 233
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	call	_WM_InvalidateRect
	add	esp, 8
$LN15@TrackSetti:
; Line 235
	jmp	$LN19@TrackSetti
$LN14@TrackSetti:
; Line 238
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 239
	push	1
	push	60					; 0000003cH
	push	OFFSET _bmTrackSettingsText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 240
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 241
	call	_DrawSignalStrength
; Line 242
	jmp	$LN19@TrackSetti
$LN13@TrackSetti:
; Line 245
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 246
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 247
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv84[ebp], eax
	cmp	DWORD PTR tv84[ebp], 1
	je	SHORT $LN10@TrackSetti
	cmp	DWORD PTR tv84[ebp], 2
	je	SHORT $LN9@TrackSetti
	jmp	$LN11@TrackSetti
$LN10@TrackSetti:
; Line 250
	mov	DWORD PTR _clickedOnVSMScreen, 1
; Line 251
	jmp	$LN11@TrackSetti
$LN9@TrackSetti:
; Line 254
	cmp	DWORD PTR _clickedOnVSMScreen, 0
	je	SHORT $LN11@TrackSetti
; Line 255
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	sub	ecx, 2049				; 00000801H
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 7
	ja	SHORT $LN11@TrackSetti
	mov	edx, DWORD PTR tv86[ebp]
	jmp	DWORD PTR $LN21@TrackSetti[edx*4]
$LN5@TrackSetti:
; Line 258
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	0
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 259
	jmp	SHORT $LN11@TrackSetti
$LN4@TrackSetti:
; Line 262
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	1
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 263
	jmp	SHORT $LN11@TrackSetti
$LN3@TrackSetti:
; Line 266
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	2
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 267
	jmp	SHORT $LN11@TrackSetti
$LN2@TrackSetti:
; Line 270
	mov	eax, DWORD PTR _hTrackSettingMainScreen
	push	eax
	push	3
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
$LN11@TrackSetti:
; Line 275
	jmp	SHORT $LN19@TrackSetti
$LN1@TrackSetti:
; Line 278
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN19@TrackSetti:
; Line 280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@TrackSetti:
	DD	$LN5@TrackSetti
	DD	$LN4@TrackSetti
	DD	$LN3@TrackSetti
	DD	$LN11@TrackSetti
	DD	$LN11@TrackSetti
	DD	$LN11@TrackSetti
	DD	$LN11@TrackSetti
	DD	$LN2@TrackSetti
_TrackSettingMainScreenCallback ENDP
_TEXT	ENDS
PUBLIC	_GetTrackSettingMainWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetTrackSettingMainWindowHandle
_TEXT	SEGMENT
_GetTrackSettingMainWindowHandle PROC			; COMDAT
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 284
	mov	eax, DWORD PTR _hTrackSettingMainScreen
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTrackSettingMainWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetTrackSettingMainWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetTrackSettingMainWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetTrackSettingMainWindowHandle PROC			; COMDAT
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 289
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hTrackSettingMainScreen, eax
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetTrackSettingMainWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetTrackSettingsWindowHandle
_BSS	SEGMENT
_hTrackSettingsScreens DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GetTrackSettingsWindowHandle
_TEXT	SEGMENT
_GetTrackSettingsWindowHandle PROC			; COMDAT
; Line 294
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 295
	mov	eax, DWORD PTR _hTrackSettingsScreens
; Line 296
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTrackSettingsWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetTrackSettingsWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetTrackSettingsWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetTrackSettingsWindowHandle PROC			; COMDAT
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 300
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hTrackSettingsScreens, eax
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetTrackSettingsWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_TSButtonToScreenID
PUBLIC	_NeedToEditStartFinish
PUBLIC	_SetFinishLatButtonText
PUBLIC	_SetFinishLongButtonText
PUBLIC	_SetFinishHeadButtonText
PUBLIC	_SetLatButtonText
PUBLIC	_SetLongButtonText
PUBLIC	_SetHeadButtonText
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	_okToResetSF
PUBLIC	_IndexToCourseType
PUBLIC	_TrackSettingsIgnoreNextKeyRelease
PUBLIC	_TrackSettingsScreensCallback
EXTRN	_DisplaySFKeyboard:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_pressingbutton_semaphore:DWORD
EXTRN	_sysData:BYTE
EXTRN	_TrackTypeToSessionType:PROC
EXTRN	_LISTWHEEL_SetSel:PROC
EXTRN	_trackData:BYTE
EXTRN	_LISTWHEEL_GetPos:PROC
EXTRN	_abs:PROC
EXTRN	_LISTWHEEL_GetVelocity:PROC
EXTRN	_GetLastScreen:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font32_ASCII:BYTE
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_DeleteSFScreensKeyboards:PROC
EXTRN	__fltused:DWORD
_BSS	SEGMENT
_clickedOnVSScreen DD 01H DUP (?)
_BSS	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _TrackSettingsScreensCallback
_TEXT	SEGMENT
tv161 = -244						; size = 4
tv156 = -244						; size = 4
tv93 = -244						; size = 4
tv86 = -244						; size = 4
tv64 = -244						; size = 4
_temp$19241 = -41					; size = 1
_Sel$ = -32						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_TrackSettingsScreensCallback PROC			; COMDAT
; Line 304
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 308
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	jg	SHORT $LN37@TrackSetti@2
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN28@TrackSetti@2
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN30@TrackSetti@2
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	SHORT $LN29@TrackSetti@2
	jmp	$LN1@TrackSetti@2
$LN37@TrackSetti@2:
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN26@TrackSetti@2
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN32@TrackSetti@2
	jmp	$LN1@TrackSetti@2
$LN32@TrackSetti@2:
; Line 311
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN31@TrackSetti@2
; Line 313
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 314
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN31@TrackSetti@2:
; Line 316
	jmp	$LN33@TrackSetti@2
$LN30@TrackSetti@2:
; Line 320
	call	_TrackSettingsIgnoreNextKeyRelease
; Line 321
	jmp	$LN33@TrackSetti@2
$LN29@TrackSetti@2:
; Line 324
	call	_DeleteSFScreensKeyboards
; Line 325
	mov	DWORD PTR _hFinishLatButton, 0
; Line 326
	mov	DWORD PTR _hFinishLongButton, 0
; Line 327
	mov	DWORD PTR _hFinishHeadButton, 0
; Line 328
	jmp	$LN33@TrackSetti@2
$LN28@TrackSetti@2:
; Line 331
	call	_GetScreenType
	cmp	eax, 13					; 0000000dH
	jne	SHORT $LN27@TrackSetti@2
; Line 333
	call	_GUI_Clear
; Line 334
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 335
	push	OFFSET _GUI_Font32_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 338
	mov	esi, esp
	mov	eax, DWORD PTR _hTrackSettingsScreens
	push	eax
	push	13					; 0000000dH
	call	_GetLastScreen
	add	esp, 4
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _TrackSettingsScreenList[eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 339
	call	_DrawSignalStrength
$LN27@TrackSetti@2:
; Line 341
	jmp	$LN33@TrackSetti@2
$LN26@TrackSetti@2:
; Line 344
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 345
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 346
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 1
	je	$LN15@TrackSetti@2
	cmp	DWORD PTR tv86[ebp], 2
	je	$LN10@TrackSetti@2
	cmp	DWORD PTR tv86[ebp], 4
	je	SHORT $LN23@TrackSetti@2
	jmp	$LN24@TrackSetti@2
$LN23@TrackSetti@2:
; Line 349
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetVelocity
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 1
	jg	$LN20@TrackSetti@2
; Line 351
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	cmp	DWORD PTR tv93[ebp], 608		; 00000260H
	je	SHORT $LN17@TrackSetti@2
	cmp	DWORD PTR tv93[ebp], 609		; 00000261H
	je	SHORT $LN19@TrackSetti@2
	jmp	$LN20@TrackSetti@2
$LN19@TrackSetti@2:
; Line 357
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	edx, DWORD PTR _Sel$[ebp]
	imul	edx, 10					; 0000000aH
	mov	BYTE PTR _temp$19241[ebp], dl
; Line 358
	movzx	eax, BYTE PTR _temp$19241[ebp]
	movzx	ecx, BYTE PTR _trackData+65
	cmp	eax, ecx
	je	SHORT $LN18@TrackSetti@2
; Line 360
	mov	al, BYTE PTR _temp$19241[ebp]
	mov	BYTE PTR _trackData+65, al
; Line 361
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 362
	mov	BYTE PTR _alteredTrackData, 1
$LN18@TrackSetti@2:
; Line 365
	jmp	SHORT $LN20@TrackSetti@2
$LN17@TrackSetti@2:
; Line 368
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	edx, DWORD PTR _Sel$[ebp]
	push	edx
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 369
	movzx	eax, BYTE PTR _Sel$[ebp]
	push	eax
	call	_IndexToCourseType
	add	esp, 4
	movzx	ecx, BYTE PTR _trackData+64
	cmp	eax, ecx
	je	SHORT $LN16@TrackSetti@2
; Line 371
	movzx	eax, BYTE PTR _Sel$[ebp]
	push	eax
	call	_IndexToCourseType
	add	esp, 4
	mov	BYTE PTR _trackData+64, al
	movzx	ecx, BYTE PTR _trackData+64
	push	ecx
	call	_TrackTypeToSessionType
	add	esp, 4
	mov	BYTE PTR _sysData+208, al
; Line 372
	mov	BYTE PTR _alteredTrackData, 1
$LN16@TrackSetti@2:
$LN20@TrackSetti@2:
; Line 377
	jmp	$LN24@TrackSetti@2
$LN15@TrackSetti@2:
; Line 380
	mov	DWORD PTR _clickedOnVSScreen, 1
; Line 381
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv156[ebp], eax
	cmp	DWORD PTR tv156[ebp], 608		; 00000260H
	jl	SHORT $LN11@TrackSetti@2
	cmp	DWORD PTR tv156[ebp], 609		; 00000261H
	jle	SHORT $LN12@TrackSetti@2
	jmp	SHORT $LN11@TrackSetti@2
$LN12@TrackSetti@2:
; Line 385
	mov	DWORD PTR _pressingbutton_semaphore, 1
; Line 386
	jmp	SHORT $LN13@TrackSetti@2
$LN11@TrackSetti@2:
; Line 389
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN13@TrackSetti@2:
; Line 391
	jmp	$LN24@TrackSetti@2
$LN10@TrackSetti@2:
; Line 394
	mov	DWORD PTR _pressingbutton_semaphore, 0
; Line 395
	cmp	DWORD PTR _clickedOnVSScreen, 0
	jne	SHORT $LN9@TrackSetti@2
; Line 396
	jmp	$LN24@TrackSetti@2
$LN9@TrackSetti@2:
; Line 398
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv161[ebp], eax
	mov	ecx, DWORD PTR tv161[ebp]
	sub	ecx, 2052				; 00000804H
	mov	DWORD PTR tv161[ebp], ecx
	cmp	DWORD PTR tv161[ebp], 8
	ja	$LN7@TrackSetti@2
	mov	edx, DWORD PTR tv161[ebp]
	movzx	eax, BYTE PTR $LN38@TrackSetti@2[edx]
	jmp	DWORD PTR $LN39@TrackSetti@2[eax*4]
$LN6@TrackSetti@2:
; Line 401
	mov	DWORD PTR _trackData+68, 0
; Line 402
	mov	eax, DWORD PTR _hTrackSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 403
	mov	BYTE PTR _alteredTrackData, 1
; Line 404
	jmp	$LN7@TrackSetti@2
$LN5@TrackSetti@2:
; Line 407
	call	_okToResetSF
	cmp	eax, 3
	jne	SHORT $LN4@TrackSetti@2
; Line 409
	fldz
	fstp	QWORD PTR _trackData+16
; Line 410
	fldz
	fstp	QWORD PTR _trackData+24
; Line 411
	fldz
	fstp	DWORD PTR _trackData+36
; Line 412
	fldz
	fstp	QWORD PTR _trackData+40
; Line 413
	fldz
	fstp	QWORD PTR _trackData+48
; Line 414
	fldz
	fstp	DWORD PTR _trackData+60
; Line 415
	call	_SetHeadButtonText
; Line 416
	call	_SetLongButtonText
; Line 417
	call	_SetLatButtonText
; Line 418
	call	_SetFinishHeadButtonText
; Line 419
	call	_SetFinishLongButtonText
; Line 420
	call	_SetFinishLatButtonText
; Line 421
	mov	BYTE PTR _alteredTrackData, 1
$LN4@TrackSetti@2:
; Line 423
	jmp	SHORT $LN7@TrackSetti@2
$LN3@TrackSetti@2:
; Line 431
	call	_NeedToEditStartFinish
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@TrackSetti@2
; Line 432
	mov	eax, DWORD PTR _hTrackSettingsScreens
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	_TSButtonToScreenID
	add	esp, 4
	push	eax
	call	_DisplaySFKeyboard
	add	esp, 8
$LN2@TrackSetti@2:
$LN7@TrackSetti@2:
$LN24@TrackSetti@2:
; Line 437
	jmp	SHORT $LN33@TrackSetti@2
$LN1@TrackSetti@2:
; Line 440
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN33@TrackSetti@2:
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN39@TrackSetti@2:
	DD	$LN5@TrackSetti@2
	DD	$LN3@TrackSetti@2
	DD	$LN6@TrackSetti@2
	DD	$LN7@TrackSetti@2
$LN38@TrackSetti@2:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	3
	DB	2
	DB	1
	DB	1
	DB	1
_TrackSettingsScreensCallback ENDP
_TEXT	ENDS
PUBLIC	_OpenCourse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TSButtonToScreenID
_TEXT	SEGMENT
tv64 = -196						; size = 4
_Id$ = 8						; size = 4
_TSButtonToScreenID PROC				; COMDAT
; Line 445
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 446
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2054				; 00000806H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 6
	ja	SHORT $LN12@TSButtonTo
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN17@TSButtonTo[edx*4]
$LN12@TSButtonTo:
; Line 450
	call	_OpenCourse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN11@TSButtonTo
; Line 451
	mov	eax, 4
	jmp	SHORT $LN15@TSButtonTo
	jmp	SHORT $LN9@TSButtonTo
$LN11@TSButtonTo:
; Line 452
	mov	eax, 1
	jmp	SHORT $LN15@TSButtonTo
$LN9@TSButtonTo:
; Line 454
	call	_OpenCourse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN8@TSButtonTo
; Line 455
	mov	eax, 3
	jmp	SHORT $LN15@TSButtonTo
	jmp	SHORT $LN6@TSButtonTo
$LN8@TSButtonTo:
; Line 456
	xor	eax, eax
	jmp	SHORT $LN15@TSButtonTo
$LN6@TSButtonTo:
; Line 458
	call	_OpenCourse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@TSButtonTo
; Line 459
	mov	eax, 5
	jmp	SHORT $LN15@TSButtonTo
	jmp	SHORT $LN3@TSButtonTo
$LN5@TSButtonTo:
; Line 460
	mov	eax, 2
	jmp	SHORT $LN15@TSButtonTo
$LN3@TSButtonTo:
; Line 461
	mov	eax, 7
	jmp	SHORT $LN15@TSButtonTo
$LN2@TSButtonTo:
; Line 462
	mov	eax, 6
	jmp	SHORT $LN15@TSButtonTo
$LN1@TSButtonTo:
; Line 463
	mov	eax, 8
$LN15@TSButtonTo:
; Line 465
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@TSButtonTo:
	DD	$LN9@TSButtonTo
	DD	$LN6@TSButtonTo
	DD	$LN12@TSButtonTo
	DD	$LN12@TSButtonTo
	DD	$LN3@TSButtonTo
	DD	$LN2@TSButtonTo
	DD	$LN1@TSButtonTo
_TSButtonToScreenID ENDP
_TEXT	ENDS
PUBLIC	_CourseTypeToIndex
EXTRN	_DisplayStdListScreen:PROC
_BSS	SEGMENT
_hTrackTypeWheel DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayTrackType
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayTrackType PROC					; COMDAT
; Line 469
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 470
	push	OFFSET $SG19288
	push	0
	movzx	eax, BYTE PTR _trackData+64
	push	eax
	call	_CourseTypeToIndex
	add	esp, 4
	movzx	ecx, al
	push	ecx
	push	OFFSET _hTrackTypeWheel
	push	608					; 00000260H
	push	OFFSET _pTrackTypes
	mov	edx, DWORD PTR _hParent$[ebp]
	push	edx
	call	_DisplayStdListScreen
	add	esp, 28					; 0000001cH
; Line 471
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTrackType ENDP
_TEXT	ENDS
_BSS	SEGMENT
_hHoldTimeListWheel DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayHoldTime
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayHoldTime PROC					; COMDAT
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 475
	push	OFFSET $SG19292
	push	0
	movzx	eax, BYTE PTR _trackData+65
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	eax
	push	OFFSET _hHoldTimeListWheel
	push	609					; 00000261H
	push	OFFSET _LapHoldTimes
	mov	edx, DWORD PTR _hParent$[ebp]
	push	edx
	call	_DisplayStdListScreen
	add	esp, 28					; 0000001cH
; Line 476
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayHoldTime ENDP
_TEXT	ENDS
EXTRN	_bmTrackTypeText:BYTE
EXTRN	_bmSingleSpinner:BYTE
EXTRN	_bmBackgroundWithPanel:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TrackTypePaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_TrackTypePaint PROC					; COMDAT
; Line 479
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 480
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 481
	push	42					; 0000002aH
	push	240					; 000000f0H
	push	OFFSET _bmSingleSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 482
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTrackTypeText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 483
	push	229					; 000000e5H
	push	0
	push	0
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 484
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TrackTypePaint ENDP
_TEXT	ENDS
EXTRN	_bmLaptimeHold:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HoldTimePaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_HoldTimePaint PROC					; COMDAT
; Line 489
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 490
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 491
	push	42					; 0000002aH
	push	240					; 000000f0H
	push	OFFSET _bmSingleSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 492
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmLaptimeHold
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 493
	push	229					; 000000e5H
	push	0
	push	1
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 494
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HoldTimePaint ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_BUTTON_SetText:PROC
EXTRN	_sprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetLatButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetLatButtonText PROC					; COMDAT
; Line 497
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 500
	sub	esp, 8
	fld	QWORD PTR _trackData+16
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19302
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 501
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hStartLatButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 502
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetLatButt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetLatButt:
	DD	1
	DD	$LN4@SetLatButt
$LN4@SetLatButt:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN3@SetLatButt
$LN3@SetLatButt:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetLatButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetLongButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetLongButtonText PROC					; COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 507
	sub	esp, 8
	fld	QWORD PTR _trackData+24
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19306
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 508
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hStartLongButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 509
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetLongBut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetLongBut:
	DD	1
	DD	$LN4@SetLongBut
$LN4@SetLongBut:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN3@SetLongBut
$LN3@SetLongBut:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetLongButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetHeadButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetHeadButtonText PROC					; COMDAT
; Line 511
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 514
	fld	DWORD PTR _trackData+36
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19310
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 515
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hStartHeadButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 516
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetHeadBut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetHeadBut:
	DD	1
	DD	$LN4@SetHeadBut
$LN4@SetHeadBut:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN3@SetHeadBut
$LN3@SetHeadBut:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetHeadButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetFinishLatButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetFinishLatButtonText PROC				; COMDAT
; Line 519
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 522
	cmp	DWORD PTR _hFinishLatButton, 0
	je	SHORT $LN1@SetFinishL
; Line 524
	sub	esp, 8
	fld	QWORD PTR _trackData+40
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19315
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 525
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFinishLatButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
$LN1@SetFinishL:
; Line 527
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFinishL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SetFinishL:
	DD	1
	DD	$LN5@SetFinishL
$LN5@SetFinishL:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN4@SetFinishL
$LN4@SetFinishL:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetFinishLatButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetFinishLongButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetFinishLongButtonText PROC				; COMDAT
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 532
	cmp	DWORD PTR _hFinishLongButton, 0
	je	SHORT $LN1@SetFinishL@2
; Line 534
	sub	esp, 8
	fld	QWORD PTR _trackData+48
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19320
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 535
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFinishLongButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
$LN1@SetFinishL@2:
; Line 537
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFinishL@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SetFinishL@2:
	DD	1
	DD	$LN5@SetFinishL@2
$LN5@SetFinishL@2:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN4@SetFinishL@2
$LN4@SetFinishL@2:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetFinishLongButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetFinishHeadButtonText
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_SetFinishHeadButtonText PROC				; COMDAT
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 542
	cmp	DWORD PTR _hFinishHeadButton, 0
	je	SHORT $LN1@SetFinishH
; Line 544
	fld	DWORD PTR _trackData+60
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19325
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 545
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFinishHeadButton
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
$LN1@SetFinishH:
; Line 547
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@SetFinishH
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@SetFinishH:
	DD	1
	DD	$LN5@SetFinishH
$LN5@SetFinishH:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN4@SetFinishH
$LN4@SetFinishH:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetFinishHeadButtonText ENDP
_TEXT	ENDS
PUBLIC	_NeedToDisplayFinish
EXTRN	_BUTTON_SetDefaultFont:PROC
EXTRN	_GUI_Font32B_ASCII:BYTE
EXTRN	_BUTTON_SetDefaultTextColor:PROC
EXTRN	_BUTTON_SetDefaultBkColor:PROC
EXTRN	_BUTTON_SetFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_bmRedButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayStartFinish
_TEXT	SEGMENT
_hButton$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayStartFinish PROC				; COMDAT
; Line 550
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 553
	call	_NeedToDisplayFinish
	movzx	eax, al
	test	eax, eax
	je	$LN4@DisplaySta
; Line 555
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	53					; 00000035H
	push	139					; 0000008bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 556
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 557
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 558
	push	OFFSET $SG19331
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 560
	push	0
	push	16777215				; 00ffffffH
	call	_BUTTON_SetDefaultBkColor
	add	esp, 8
; Line 561
	push	0
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 562
	push	OFFSET _GUI_Font32B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 563
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	140					; 0000008cH
	push	12					; 0000000cH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartLatButton, eax
; Line 564
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	140					; 0000008cH
	push	192					; 000000c0H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartLongButton, eax
; Line 565
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	86					; 00000056H
	push	140					; 0000008cH
	push	377					; 00000179H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartHeadButton, eax
; Line 566
	push	2058					; 0000080aH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	187					; 000000bbH
	push	12					; 0000000cH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hFinishLatButton, eax
; Line 567
	push	2059					; 0000080bH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	187					; 000000bbH
	push	192					; 000000c0H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hFinishLongButton, eax
; Line 568
	push	2060					; 0000080cH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	86					; 00000056H
	push	187					; 000000bbH
	push	377					; 00000179H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hFinishHeadButton, eax
; Line 570
	jmp	$LN5@DisplaySta
$LN4@DisplaySta:
; Line 572
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	55					; 00000037H
	push	139					; 0000008bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 573
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 574
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 575
	call	_OpenCourse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@DisplaySta
; Line 576
	push	OFFSET $SG19334
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN1@DisplaySta
$LN2@DisplaySta:
; Line 577
	push	OFFSET $SG19336
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
$LN1@DisplaySta:
; Line 579
	push	0
	push	16777215				; 00ffffffH
	call	_BUTTON_SetDefaultBkColor
	add	esp, 8
; Line 580
	push	0
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 581
	push	OFFSET _GUI_Font32B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 582
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	152					; 00000098H
	push	12					; 0000000cH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartLatButton, eax
; Line 583
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	152					; 00000098H
	push	192					; 000000c0H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartLongButton, eax
; Line 584
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	86					; 00000056H
	push	152					; 00000098H
	push	377					; 00000179H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStartHeadButton, eax
; Line 586
	mov	DWORD PTR _hFinishLatButton, 0
; Line 587
	mov	DWORD PTR _hFinishLongButton, 0
; Line 588
	mov	DWORD PTR _hFinishHeadButton, 0
$LN5@DisplaySta:
; Line 590
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayStartFinish ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_FillRect:PROC
EXTRN	_bmStartFinishText:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _StartFinishPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_StartFinishPaint PROC					; COMDAT
; Line 593
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 594
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 595
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmStartFinishText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 597
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 598
	call	_NeedToDisplayFinish
	movzx	eax, al
	test	eax, eax
	je	$LN6@StartFinis
; Line 600
	push	267					; 0000010bH
	push	480					; 000001e0H
	push	43					; 0000002bH
	push	0
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 602
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 603
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 604
	push	100					; 00000064H
	push	480					; 000001e0H
	push	100					; 00000064H
	push	0
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 606
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 607
	push	OFFSET _GUI_Font32B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 608
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 609
	call	_NeedToEditStartFinish
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN5@StartFinis
; Line 610
	push	105					; 00000069H
	push	180					; 000000b4H
	push	OFFSET $SG19342
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@StartFinis
$LN5@StartFinis:
; Line 611
	push	105					; 00000069H
	push	180					; 000000b4H
	push	OFFSET $SG19344
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN4@StartFinis:
; Line 612
	push	105					; 00000069H
	push	420					; 000001a4H
	push	OFFSET $SG19345
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 614
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 615
	push	230					; 000000e6H
	push	240					; 000000f0H
	push	OFFSET _sysData+160
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 617
	call	_SetFinishLatButtonText
; Line 618
	call	_SetFinishLongButtonText
; Line 619
	call	_SetFinishHeadButtonText
; Line 621
	jmp	$LN3@StartFinis
$LN6@StartFinis:
; Line 623
	push	240					; 000000f0H
	push	480					; 000001e0H
	push	45					; 0000002dH
	push	0
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 625
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 626
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 627
	push	105					; 00000069H
	push	480					; 000001e0H
	push	105					; 00000069H
	push	0
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 629
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 630
	push	OFFSET _GUI_Font32B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 631
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 632
	call	_OpenCourse
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@StartFinis
; Line 633
	push	115					; 00000073H
	push	180					; 000000b4H
	push	OFFSET $SG19348
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@StartFinis
$LN2@StartFinis:
; Line 634
	push	115					; 00000073H
	push	180					; 000000b4H
	push	OFFSET $SG19350
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN1@StartFinis:
; Line 635
	push	115					; 00000073H
	push	420					; 000001a4H
	push	OFFSET $SG19351
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 637
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 638
	push	200					; 000000c8H
	push	240					; 000000f0H
	push	OFFSET _sysData+160
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN3@StartFinis:
; Line 641
	call	_SetLatButtonText
; Line 642
	call	_SetLongButtonText
; Line 643
	call	_SetHeadButtonText
; Line 645
	push	229					; 000000e5H
	push	0
	push	2
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_StartFinishPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _OpenCourse
_TEXT	SEGMENT
_OpenCourse PROC					; COMDAT
; Line 650
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 651
	movzx	eax, BYTE PTR _trackData+64
	test	eax, eax
	je	SHORT $LN2@OpenCourse
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 1
	jne	SHORT $LN3@OpenCourse
$LN2@OpenCourse:
; Line 652
	xor	al, al
	jmp	SHORT $LN4@OpenCourse
	jmp	SHORT $LN4@OpenCourse
$LN3@OpenCourse:
; Line 653
	mov	al, 1
$LN4@OpenCourse:
; Line 654
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_OpenCourse ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _NeedToEditStartFinish
_TEXT	SEGMENT
_NeedToEditStartFinish PROC				; COMDAT
; Line 657
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 658
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 4
	je	SHORT $LN2@NeedToEdit
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 3
	je	SHORT $LN2@NeedToEdit
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 5
	jne	SHORT $LN3@NeedToEdit
$LN2@NeedToEdit:
; Line 659
	xor	al, al
	jmp	SHORT $LN4@NeedToEdit
	jmp	SHORT $LN4@NeedToEdit
$LN3@NeedToEdit:
; Line 660
	mov	al, 1
$LN4@NeedToEdit:
; Line 661
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_NeedToEditStartFinish ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _NeedToDisplayFinish
_TEXT	SEGMENT
_NeedToDisplayFinish PROC				; COMDAT
; Line 664
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 666
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 2
	je	SHORT $LN2@NeedToDisp
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 6
	je	SHORT $LN2@NeedToDisp
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 7
	je	SHORT $LN2@NeedToDisp
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 5
	je	SHORT $LN2@NeedToDisp
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 4
	je	SHORT $LN2@NeedToDisp
	movzx	eax, BYTE PTR _trackData+64
	cmp	eax, 3
	jne	SHORT $LN3@NeedToDisp
$LN2@NeedToDisp:
; Line 667
	mov	al, 1
	jmp	SHORT $LN4@NeedToDisp
	jmp	SHORT $LN4@NeedToDisp
$LN3@NeedToDisp:
; Line 668
	xor	al, al
$LN4@NeedToDisp:
; Line 669
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_NeedToDisplayFinish ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayResetPL
_TEXT	SEGMENT
_hButton$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayResetPL PROC					; COMDAT
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 675
	push	2057					; 00000809H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	55					; 00000037H
	push	139					; 0000008bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 676
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 677
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 678
	push	OFFSET $SG19371
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 680
	push	0
	push	16777215				; 00ffffffH
	call	_BUTTON_SetDefaultBkColor
	add	esp, 8
; Line 681
	push	0
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 682
	push	OFFSET _GUI_Font32B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 683
	push	0
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	36					; 00000024H
	push	156					; 0000009cH
	push	152					; 00000098H
	push	12					; 0000000cH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hFastestLap, eax
; Line 684
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayResetPL ENDP
_TEXT	ENDS
EXTRN	_GUI_FillRoundedRect:PROC
EXTRN	_GUI_DrawRoundedRect:PROC
EXTRN	_formatLapTime:PROC
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_DrawRect:PROC
EXTRN	_bmPredictiveLapText:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ResetPLPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_ResetPLPaint PROC					; COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 687
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 688
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmPredictiveLapText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 690
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 691
	push	240					; 000000f0H
	push	480					; 000001e0H
	push	45					; 0000002dH
	push	0
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 692
	push	240					; 000000f0H
	push	480					; 000001e0H
	push	45					; 0000002dH
	push	0
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 694
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 695
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 696
	push	105					; 00000069H
	push	480					; 000001e0H
	push	105					; 00000069H
	push	0
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 698
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 699
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 700
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 701
	push	115					; 00000073H
	push	240					; 000000f0H
	push	OFFSET $SG19375
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 702
	push	155					; 0000009bH
	push	190					; 000000beH
	push	OFFSET $SG19376
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 704
	push	1
	mov	eax, DWORD PTR _trackData+68
	push	eax
	call	_formatLapTime
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _hFastestLap
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 706
	push	5
	push	190					; 000000beH
	push	170					; 000000aaH
	push	150					; 00000096H
	push	10					; 0000000aH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 707
	push	5
	push	190					; 000000beH
	push	170					; 000000aaH
	push	150					; 00000096H
	push	10					; 0000000aH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 709
	push	OFFSET _GUI_Font32B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 710
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 711
	push	200					; 000000c8H
	push	240					; 000000f0H
	push	OFFSET _sysData+160
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 713
	push	229					; 000000e5H
	push	0
	push	2
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ResetPLPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetNavigationArrow
_TEXT	SEGMENT
_screen$ = 8						; size = 4
_GetNavigationArrow PROC				; COMDAT
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 718
	mov	eax, OFFSET _bmleftarrow
; Line 719
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNavigationArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _TrackSettingsIgnoreNextKeyRelease
_TEXT	SEGMENT
_TrackSettingsIgnoreNextKeyRelease PROC			; COMDAT
; Line 722
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 723
	mov	DWORD PTR _clickedOnVSScreen, 0
; Line 724
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_TrackSettingsIgnoreNextKeyRelease ENDP
_TEXT	ENDS
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_SetPopupDefaults:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _okToResetSF
_TEXT	SEGMENT
_okToResetSF PROC					; COMDAT
; Line 741
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 748
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 750
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hTrackSettingsScreens
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _ResetSFDialog
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 751
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_okToResetSF ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _CourseTypeToIndex
_TEXT	SEGMENT
tv64 = -196						; size = 4
_type$ = 8						; size = 4
_CourseTypeToIndex PROC					; COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 756
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 6
	ja	SHORT $LN6@CourseType
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN11@CourseType[edx*4]
$LN6@CourseType:
; Line 759
	xor	al, al
	jmp	SHORT $LN9@CourseType
$LN5@CourseType:
; Line 760
	mov	al, 1
	jmp	SHORT $LN9@CourseType
$LN4@CourseType:
; Line 761
	mov	al, 2
	jmp	SHORT $LN9@CourseType
$LN3@CourseType:
; Line 764
	mov	al, 3
	jmp	SHORT $LN9@CourseType
$LN2@CourseType:
; Line 765
	mov	al, 4
	jmp	SHORT $LN9@CourseType
$LN1@CourseType:
; Line 766
	mov	al, 5
$LN9@CourseType:
; Line 768
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@CourseType:
	DD	$LN5@CourseType
	DD	$LN4@CourseType
	DD	$LN3@CourseType
	DD	$LN3@CourseType
	DD	$LN3@CourseType
	DD	$LN2@CourseType
	DD	$LN1@CourseType
_CourseTypeToIndex ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _IndexToCourseType
_TEXT	SEGMENT
tv65 = -196						; size = 4
_type$ = 8						; size = 1
_IndexToCourseType PROC					; COMDAT
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 772
	movzx	eax, BYTE PTR _type$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 4
	ja	SHORT $LN6@IndexToCou
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN11@IndexToCou[edx*4]
$LN6@IndexToCou:
; Line 775
	xor	eax, eax
	jmp	SHORT $LN9@IndexToCou
$LN5@IndexToCou:
; Line 776
	mov	eax, 1
	jmp	SHORT $LN9@IndexToCou
$LN4@IndexToCou:
; Line 777
	mov	eax, 2
	jmp	SHORT $LN9@IndexToCou
$LN3@IndexToCou:
; Line 778
	mov	eax, 5
	jmp	SHORT $LN9@IndexToCou
$LN2@IndexToCou:
; Line 779
	mov	eax, 6
	jmp	SHORT $LN9@IndexToCou
$LN1@IndexToCou:
; Line 780
	mov	eax, 7
$LN9@IndexToCou:
; Line 782
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@IndexToCou:
	DD	$LN5@IndexToCou
	DD	$LN4@IndexToCou
	DD	$LN3@IndexToCou
	DD	$LN2@IndexToCou
	DD	$LN1@IndexToCou
_IndexToCourseType ENDP
_TEXT	ENDS
END
