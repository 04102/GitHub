; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_MOUSE.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_MOUSE_GetState
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
__State	DB	0cH DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_mouse.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MOUSE_GetState
_TEXT	SEGMENT
_pState$ = 8						; size = 4
_GUI_MOUSE_GetState PROC				; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 47
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR __State
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR __State+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR __State+8
	mov	DWORD PTR [eax+8], ecx
; Line 48
	movzx	eax, BYTE PTR __State+8
	neg	eax
	sbb	eax, eax
	neg	eax
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MOUSE_GetState ENDP
_TEXT	ENDS
PUBLIC	_GUI_MOUSE_StoreState
EXTRN	_GUI_PID_StoreState:PROC
EXTRN	_memcmp:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MOUSE_StoreState
_TEXT	SEGMENT
_pState$ = 8						; size = 4
_GUI_MOUSE_StoreState PROC				; COMDAT
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 56
	push	12					; 0000000cH
	push	OFFSET __State
	mov	eax, DWORD PTR _pState$[ebp]
	push	eax
	call	_memcmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@GUI_MOUSE_
; Line 57
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __State, ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR __State+4, edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR __State+8, eax
; Line 58
	mov	eax, DWORD PTR _pState$[ebp]
	push	eax
	call	_GUI_PID_StoreState
	add	esp, 4
$LN2@GUI_MOUSE_:
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MOUSE_StoreState ENDP
_TEXT	ENDS
END
