; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\SLIDER_SkinFlex.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
__apProps DD	FLAT:__PropsPressed
	DD	FLAT:__PropsUnpressed
CONST	ENDS
_DATA	SEGMENT
__PropsPressed DD 08b622cH
	DD	0bab09eH
	DD	0fcf4e5H
	DD	0dbb368H
	DD	0959595H
	DD	0f3f3f3H
	DD	0c0c0c0H
	DD	0404040H
	DD	00H
	DD	03H
	DD	03H
__PropsUnpressed DD 0707070H
	DD	0fcfcfcH
	DD	0f2f2f2H
	DD	0bcbcbcH
	DD	0959595H
	DD	0f3f3f3H
	DD	0c0c0c0H
	DD	0404040H
	DD	00H
	DD	03H
	DD	03H
_DATA	ENDS
PUBLIC	_SLIDER_DrawSkinFlex
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_UninitUse:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\slider_skinflex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _SLIDER_DrawSkinFlex
_TEXT	SEGMENT
tv71 = -232						; size = 4
tv69 = -232						; size = 4
$T10503 = -221						; size = 1
_pSkinInfo$ = -20					; size = 4
_pProps$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_SLIDER_DrawSkinFlex PROC				; COMDAT
; Line 246
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T10503[ebp], 0
; Line 250
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pSkinInfo$[ebp], ecx
; Line 251
	cmp	DWORD PTR _pSkinInfo$[ebp], 0
	je	SHORT $LN13@SLIDER_Dra
; Line 252
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN16@SLIDER_Dra
	mov	ecx, DWORD PTR __apProps
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN17@SLIDER_Dra
$LN16@SLIDER_Dra:
	mov	edx, DWORD PTR __apProps+4
	mov	DWORD PTR tv69[ebp], edx
$LN17@SLIDER_Dra:
	mov	BYTE PTR $T10503[ebp], 1
	mov	eax, DWORD PTR tv69[ebp]
	mov	DWORD PTR _pProps$[ebp], eax
$LN13@SLIDER_Dra:
; Line 254
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	sub	edx, 8
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 10			; 0000000aH
	ja	$LN11@SLIDER_Dra
	mov	eax, DWORD PTR tv71[ebp]
	movzx	ecx, BYTE PTR $LN26@SLIDER_Dra[eax]
	jmp	DWORD PTR $LN28@SLIDER_Dra[ecx*4]
$LN10@SLIDER_Dra:
; Line 256
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN9@SLIDER_Dra
; Line 257
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN18@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN18@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawShaftV
	add	esp, 8
; Line 258
	jmp	SHORT $LN8@SLIDER_Dra
$LN9@SLIDER_Dra:
; Line 259
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN20@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN20@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawShaftH
	add	esp, 8
$LN8@SLIDER_Dra:
; Line 261
	jmp	$LN11@SLIDER_Dra
$LN7@SLIDER_Dra:
; Line 263
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN6@SLIDER_Dra
; Line 264
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN21@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN21@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawThumbV
	add	esp, 8
; Line 265
	jmp	SHORT $LN5@SLIDER_Dra
$LN6@SLIDER_Dra:
; Line 266
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN22@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN22@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawThumbH
	add	esp, 8
$LN5@SLIDER_Dra:
; Line 268
	jmp	SHORT $LN11@SLIDER_Dra
$LN4@SLIDER_Dra:
; Line 270
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@SLIDER_Dra
; Line 271
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN23@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN23@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawTicksV
	add	esp, 8
; Line 272
	jmp	SHORT $LN2@SLIDER_Dra
$LN3@SLIDER_Dra:
; Line 273
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN24@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN24@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawTicksH
	add	esp, 8
$LN2@SLIDER_Dra:
; Line 275
	jmp	SHORT $LN11@SLIDER_Dra
$LN1@SLIDER_Dra:
; Line 277
	cmp	BYTE PTR $T10503[ebp], 0
	jne	SHORT $LN25@SLIDER_Dra
	push	OFFSET $LN19@SLIDER_Dra
	call	__RTC_UninitUse
	add	esp, 4
$LN25@SLIDER_Dra:
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawFocusRect
	add	esp, 8
$LN11@SLIDER_Dra:
; Line 280
	xor	eax, eax
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN27@SLIDER_Dra:
$LN19@SLIDER_Dra:
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN28@SLIDER_Dra:
	DD	$LN1@SLIDER_Dra
	DD	$LN10@SLIDER_Dra
	DD	$LN7@SLIDER_Dra
	DD	$LN4@SLIDER_Dra
	DD	$LN11@SLIDER_Dra
$LN26@SLIDER_Dra:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	2
	DB	3
_SLIDER_DrawSkinFlex ENDP
_TEXT	ENDS
EXTRN	_GUI_FillRect:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_SetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawShaftH
_TEXT	SEGMENT
_h$ = -32						; size = 4
_y1$ = -20						; size = 4
_y0$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawShaftH PROC					; COMDAT
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 92
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	add	edx, 1
	mov	eax, DWORD PTR _pProps$[ebp]
	sub	edx, DWORD PTR [eax+36]
	sub	edx, 1
	mov	DWORD PTR _h$[ebp], edx
; Line 93
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+36]
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR _h$[ebp]
	sub	edx, DWORD PTR [eax+40]
	mov	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	lea	eax, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _y0$[ebp], eax
; Line 94
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _y0$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _y1$[ebp], eax
; Line 95
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 96
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 97
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 98
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 99
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 100
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 101
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 102
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	push	edx
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawShaftH ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawShaftV
_TEXT	SEGMENT
_h$ = -32						; size = 4
_x1$ = -20						; size = 4
_x0$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawShaftV PROC					; COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+12]
	add	edx, 1
	mov	eax, DWORD PTR _pProps$[ebp]
	sub	edx, DWORD PTR [eax+36]
	sub	edx, 1
	mov	DWORD PTR _h$[ebp], edx
; Line 113
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR _h$[ebp]
	sub	ecx, DWORD PTR [eax+40]
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [edx+12]
	mov	DWORD PTR _x0$[ebp], eax
; Line 114
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR _x0$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _x1$[ebp], eax
; Line 115
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 116
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 117
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 118
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 119
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 120
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 121
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 122
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, 1
	push	edx
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 123
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawShaftV ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawGradientV:PROC
EXTRN	_GUI_DrawLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawThumbH
_TEXT	SEGMENT
_w2$ = -68						; size = 4
_i$ = -56						; size = 4
_y$ = -44						; size = 4
_x1$ = -32						; size = 4
_x0$ = -20						; size = 4
_pSkinInfo$ = -8					; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawThumbH PROC					; COMDAT
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pSkinInfo$[ebp], ecx
; Line 134
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	sar	ecx, 1
	mov	DWORD PTR _w2$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+36]
	lea	ecx, DWORD PTR [ecx+eax+1]
	mov	DWORD PTR _y$[ebp], ecx
; Line 136
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 137
	mov	eax, DWORD PTR _w2$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _w2$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 138
	mov	eax, DWORD PTR _w2$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 139
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _w2$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 140
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _w2$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 141
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 142
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 143
	mov	eax, DWORD PTR _w2$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _w2$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 144
	mov	eax, DWORD PTR _w2$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 145
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _w2$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 146
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _w2$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 147
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 1
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 148
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _w2$[ebp]
	mov	eax, DWORD PTR _y$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 2
	push	eax
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 149
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 150
	mov	DWORD PTR _i$[ebp], 2
	jmp	SHORT $LN3@DrawThumbH
$LN2@DrawThumbH:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DrawThumbH:
	mov	eax, DWORD PTR _w2$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@DrawThumbH
; Line 151
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _w2$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _x0$[ebp], ecx
; Line 152
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _w2$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR _x1$[ebp], eax
; Line 153
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 154
	jmp	SHORT $LN2@DrawThumbH
$LN4@DrawThumbH:
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawThumbH ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawGradientH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawThumbV
_TEXT	SEGMENT
_w2$ = -68						; size = 4
_i$ = -56						; size = 4
_x$ = -44						; size = 4
_y1$ = -32						; size = 4
_y0$ = -20						; size = 4
_pSkinInfo$ = -8					; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawThumbV PROC					; COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 165
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pSkinInfo$[ebp], ecx
; Line 166
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 1
	sar	ecx, 1
	mov	DWORD PTR _w2$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+36]
	sub	edx, 1
	mov	DWORD PTR _x$[ebp], edx
; Line 168
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 169
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _w2$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 170
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, DWORD PTR _w2$[ebp]
	add	edx, 1
	push	edx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 171
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _w2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 172
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _w2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 173
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 174
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 175
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _w2$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 176
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _w2$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, DWORD PTR _w2$[ebp]
	add	edx, 1
	push	edx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 177
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _w2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 178
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _w2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 179
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 180
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _w2$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 2
	push	ecx
	call	_GUI_DrawGradientH
	add	esp, 24					; 00000018H
; Line 181
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 182
	mov	DWORD PTR _i$[ebp], 2
	jmp	SHORT $LN3@DrawThumbV
$LN2@DrawThumbV:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DrawThumbV:
	mov	eax, DWORD PTR _w2$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@DrawThumbV
; Line 183
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _w2$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _y0$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _w2$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	DWORD PTR _y1$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, DWORD PTR _i$[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 186
	jmp	SHORT $LN2@DrawThumbV
$LN4@DrawThumbV:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawThumbV ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawTicksH
_TEXT	SEGMENT
_x$ = -32						; size = 4
_i$ = -20						; size = 4
_pSkinInfo$ = -8					; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawTicksH PROC					; COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 198
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pSkinInfo$[ebp], ecx
; Line 199
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@DrawTicksH
$LN2@DrawTicksH:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DrawTicksH:
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN4@DrawTicksH
; Line 200
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _pSkinInfo$[ebp]
	mov	esi, DWORD PTR [edx+4]
	sub	esi, 1
	cdq
	idiv	esi
	add	ecx, eax
	mov	DWORD PTR _x$[ebp], ecx
; Line 201
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+36]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 202
	jmp	SHORT $LN2@DrawTicksH
$LN4@DrawTicksH:
; Line 203
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawTicksH ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawTicksV
_TEXT	SEGMENT
_y$ = -32						; size = 4
_i$ = -20						; size = 4
_pSkinInfo$ = -8					; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawTicksV PROC					; COMDAT
; Line 209
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 214
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _pSkinInfo$[ebp], ecx
; Line 215
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@DrawTicksV
$LN2@DrawTicksV:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DrawTicksV:
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN4@DrawTicksV
; Line 216
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	eax, DWORD PTR [eax]
	cdq
	sub	eax, edx
	mov	ecx, eax
	sar	ecx, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+16]
	mov	eax, DWORD PTR _pSkinInfo$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _pSkinInfo$[ebp]
	mov	esi, DWORD PTR [edx+4]
	sub	esi, 1
	cdq
	idiv	esi
	add	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 217
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+36]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 218
	jmp	SHORT $LN2@DrawTicksV
$LN4@DrawTicksV:
; Line 219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawTicksV ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawFocusRect:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawFocusRect
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawFocusRect PROC					; COMDAT
; Line 225
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 228
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 229
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+12]
	mov	WORD PTR _Rect$[ebp], cx
; Line 230
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _Rect$[ebp+2], cx
; Line 231
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+20]
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 232
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 233
	push	0
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_GUI_DrawFocusRect
	add	esp, 8
; Line 234
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawFocusR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DrawFocusR:
	DD	1
	DD	$LN4@DrawFocusR
$LN4@DrawFocusR:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@DrawFocusR
$LN3@DrawFocusR:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__DrawFocusRect ENDP
_TEXT	ENDS
PUBLIC	_SLIDER_SetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SLIDER_SetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_SLIDER_SetSkinFlexProps PROC				; COMDAT
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 288
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN2@SLIDER_Set
; Line 289
	mov	esi, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR _Index$[ebp]
	mov	edi, DWORD PTR __apProps[eax*4]
	mov	ecx, 11					; 0000000bH
	rep movsd
$LN2@SLIDER_Set:
; Line 291
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SLIDER_SetSkinFlexProps ENDP
_TEXT	ENDS
PUBLIC	_SLIDER_GetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SLIDER_GetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_SLIDER_GetSkinFlexProps PROC				; COMDAT
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 298
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN2@SLIDER_Get
; Line 299
	mov	eax, DWORD PTR _Index$[ebp]
	mov	esi, DWORD PTR __apProps[eax*4]
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _pProps$[ebp]
	rep movsd
$LN2@SLIDER_Get:
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SLIDER_GetSkinFlexProps ENDP
_TEXT	ENDS
END
