; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\GearingScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_HelpPaint
PUBLIC	_DisplayHelp
PUBLIC	_TransRatioPaint
PUBLIC	_DisplayTransRatio
PUBLIC	_DiffRatioPaint
PUBLIC	_DisplayDiffRatio
PUBLIC	_TireSizeSelectionPaint
PUBLIC	_DisplayTireSizeSelection
PUBLIC	_GearingScreenList
PUBLIC	_ZeroThroughNine
PUBLIC	_ZeroThroughNinty
PUBLIC	_TreadWidth
PUBLIC	_AspectRatio
PUBLIC	_WheelDiameter
_DATA	SEGMENT
COMM	_hTireCircumferenceButton:DWORD
COMM	_hGearButton:DWORD:08H
COMM	_hTireDimensionButton:DWORD
COMM	_tireCircumference:BYTE:0bH
_DATA	ENDS
_BSS	SEGMENT
_buttonsCreated DB 01H DUP (?)
	ALIGN	4

_pEntryKeyboard DD 01H DUP (?)
_gearingScreenSuspended DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_GearingScreenList DD 00H
	DD	FLAT:_DisplayTireSizeSelection
	DD	FLAT:_TireSizeSelectionPaint
	DD	01H
	DD	FLAT:_DisplayDiffRatio
	DD	FLAT:_DiffRatioPaint
	DD	02H
	DD	FLAT:_DisplayTransRatio
	DD	FLAT:_TransRatioPaint
	DD	03H
	DD	FLAT:_DisplayHelp
	DD	FLAT:_HelpPaint
	DD	0ffffffffH
	DD	00H
	DD	00H
$SG19557 DB	'0', 00H
	ORG $+2
$SG19558 DB	'1', 00H
	ORG $+2
$SG19559 DB	'2', 00H
	ORG $+2
$SG19560 DB	'3', 00H
	ORG $+2
$SG19561 DB	'4', 00H
	ORG $+2
$SG19562 DB	'5', 00H
	ORG $+2
$SG19563 DB	'6', 00H
	ORG $+2
$SG19564 DB	'7', 00H
	ORG $+2
$SG19565 DB	'8', 00H
	ORG $+2
$SG19566 DB	'9', 00H
	ORG $+2
_ZeroThroughNine DD FLAT:$SG19557
	DD	FLAT:$SG19558
	DD	FLAT:$SG19559
	DD	FLAT:$SG19560
	DD	FLAT:$SG19561
	DD	FLAT:$SG19562
	DD	FLAT:$SG19563
	DD	FLAT:$SG19564
	DD	FLAT:$SG19565
	DD	FLAT:$SG19566
	DD	00H
$SG19569 DB	'00', 00H
	ORG $+1
$SG19570 DB	'10', 00H
	ORG $+1
$SG19571 DB	'20', 00H
	ORG $+1
$SG19572 DB	'30', 00H
	ORG $+1
$SG19573 DB	'40', 00H
	ORG $+1
$SG19574 DB	'50', 00H
	ORG $+1
$SG19575 DB	'60', 00H
	ORG $+1
$SG19576 DB	'70', 00H
	ORG $+1
$SG19577 DB	'80', 00H
	ORG $+1
$SG19578 DB	'90', 00H
	ORG $+1
_ZeroThroughNinty DD FLAT:$SG19569
	DD	FLAT:$SG19570
	DD	FLAT:$SG19571
	DD	FLAT:$SG19572
	DD	FLAT:$SG19573
	DD	FLAT:$SG19574
	DD	FLAT:$SG19575
	DD	FLAT:$SG19576
	DD	FLAT:$SG19577
	DD	FLAT:$SG19578
	DD	00H
$SG19582 DB	'355', 00H
$SG19583 DB	'345', 00H
$SG19584 DB	'335', 00H
$SG19585 DB	'325', 00H
$SG19586 DB	'315', 00H
$SG19587 DB	'305', 00H
$SG19588 DB	'295', 00H
$SG19589 DB	'285', 00H
$SG19590 DB	'275', 00H
$SG19591 DB	'265', 00H
$SG19592 DB	'255', 00H
$SG19593 DB	'245', 00H
$SG19594 DB	'235', 00H
$SG19595 DB	'225', 00H
$SG19596 DB	'215', 00H
$SG19597 DB	'205', 00H
$SG19598 DB	'195', 00H
$SG19599 DB	'185', 00H
$SG19600 DB	'175', 00H
$SG19601 DB	'165', 00H
$SG19602 DB	'155', 00H
$SG19603 DB	'145', 00H
$SG19604 DB	'135', 00H
_TreadWidth DD	FLAT:$SG19582
	DD	FLAT:$SG19583
	DD	FLAT:$SG19584
	DD	FLAT:$SG19585
	DD	FLAT:$SG19586
	DD	FLAT:$SG19587
	DD	FLAT:$SG19588
	DD	FLAT:$SG19589
	DD	FLAT:$SG19590
	DD	FLAT:$SG19591
	DD	FLAT:$SG19592
	DD	FLAT:$SG19593
	DD	FLAT:$SG19594
	DD	FLAT:$SG19595
	DD	FLAT:$SG19596
	DD	FLAT:$SG19597
	DD	FLAT:$SG19598
	DD	FLAT:$SG19599
	DD	FLAT:$SG19600
	DD	FLAT:$SG19601
	DD	FLAT:$SG19602
	DD	FLAT:$SG19603
	DD	FLAT:$SG19604
	DD	00H
$SG19608 DB	'80', 00H
	ORG $+1
$SG19609 DB	'75', 00H
	ORG $+1
$SG19610 DB	'70', 00H
	ORG $+1
$SG19611 DB	'65', 00H
	ORG $+1
$SG19612 DB	'60', 00H
	ORG $+1
$SG19613 DB	'55', 00H
	ORG $+1
$SG19614 DB	'50', 00H
	ORG $+1
$SG19615 DB	'45', 00H
	ORG $+1
$SG19616 DB	'40', 00H
	ORG $+1
$SG19617 DB	'35', 00H
	ORG $+1
$SG19618 DB	'30', 00H
	ORG $+1
$SG19619 DB	'25', 00H
	ORG $+1
$SG19620 DB	'20', 00H
	ORG $+1
_AspectRatio DD	FLAT:$SG19608
	DD	FLAT:$SG19609
	DD	FLAT:$SG19610
	DD	FLAT:$SG19611
	DD	FLAT:$SG19612
	DD	FLAT:$SG19613
	DD	FLAT:$SG19614
	DD	FLAT:$SG19615
	DD	FLAT:$SG19616
	DD	FLAT:$SG19617
	DD	FLAT:$SG19618
	DD	FLAT:$SG19619
	DD	FLAT:$SG19620
	DD	00H
$SG19624 DB	'20', 00H
	ORG $+1
$SG19625 DB	'19', 00H
	ORG $+1
$SG19626 DB	'18', 00H
	ORG $+1
$SG19627 DB	'17', 00H
	ORG $+1
$SG19628 DB	'16', 00H
	ORG $+1
$SG19629 DB	'15', 00H
	ORG $+1
$SG19630 DB	'14', 00H
	ORG $+1
$SG19631 DB	'13', 00H
	ORG $+1
$SG19632 DB	'12', 00H
	ORG $+1
$SG19633 DB	'11', 00H
	ORG $+1
$SG19634 DB	'10', 00H
	ORG $+1
_WheelDiameter DD FLAT:$SG19624
	DD	FLAT:$SG19625
	DD	FLAT:$SG19626
	DD	FLAT:$SG19627
	DD	FLAT:$SG19628
	DD	FLAT:$SG19629
	DD	FLAT:$SG19630
	DD	FLAT:$SG19631
	DD	FLAT:$SG19632
	DD	FLAT:$SG19633
	DD	FLAT:$SG19634
	DD	00H
$SG19738 DB	'Enter Tire Circumference', 00H
	ORG $+3
$SG19748 DB	' cm', 00H
$SG19750 DB	' in', 00H
$SG19751 DB	'%.2f', 00H
	ORG $+3
$SG19764 DB	'Select Tire Size', 00H
	ORG $+3
$SG19800 DB	'Tire Size', 00H
	ORG $+2
$SG19801 DB	'Tire Circumference', 00H
	ORG $+1
$SG19810 DB	'Select Diff Ratio', 00H
	ORG $+2
$SG19818 DB	'%f', 00H
	ORG $+1
$SG19825 DB	'ex = 205 / 50 x 15', 00H
	ORG $+1
$SG19826 DB	'/', 00H
	ORG $+2
$SG19827 DB	'x', 00H
	ORG $+2
$SG19828 DB	'Width / Aspect Ratio x Rim Size', 00H
$SG19832 DB	'.', 00H
	ORG $+2
$SG19836 DB	'1st Gear', 00H
	ORG $+3
$SG19837 DB	'2nd Gear', 00H
	ORG $+3
$SG19838 DB	'3rd Gear', 00H
	ORG $+3
$SG19839 DB	'4th Gear', 00H
	ORG $+3
$SG19840 DB	'5th Gear', 00H
	ORG $+3
$SG19841 DB	'6th Gear', 00H
	ORG $+3
$SG19842 DB	'7th Gear', 00H
	ORG $+3
$SG19843 DB	'8th Gear', 00H
	ORG $+3
$SG19844 DB	'Touch to Enter', 0aH, 'Transmission', 0aH, 'Ratios', 00H
	ORG $+1
$SG19852 DB	'GEAR RATIOS AND TIRE SIZES', 00H
	ORG $+1
$SG19853 DB	'In order to determine which gear is selected in the vehi'
	DB	'cle the', 00H
$SG19854 DB	'complete gearing information about the vehicle must be k'
	DB	'nown.  This', 00H
$SG19864 DB	'TIRE SIZE', 00H
	ORG $+2
$SG19855 DB	'includes the gear ratios as well as the differential rat'
	DB	'io and the', 00H
	ORG $+1
$SG19860 DB	'position will not be displayed.', 00H
$SG19871 DB	'to 150in (381cm).', 00H
	ORG $+2
$SG19856 DB	'tire rolling circumference.  However, if you do not wish'
	DB	' to use this', 00H
	ORG $+3
$SG19857 DB	'feature it can be disabled by entering a differential ra'
	DB	'tio of 0.00.', 00H
	ORG $+3
$SG19858 DB	'If this value is entered you will be asked to confirm th'
	DB	'at you do not', 00H
	ORG $+2
$SG19859 DB	'wish to calculate gear ratios.  If accepted then the cal'
	DB	'culated gear', 00H
	ORG $+3
$SG19865 DB	'In order to determine which gear is selected in the vehi'
	DB	'cle, the', 00H
	ORG $+3
$SG19868 DB	'You may enter the number on the sidewall of the tire usi'
	DB	'ng the', 00H
	ORG $+5
$SG19866 DB	'circumference. (distance around) the tire must be measur'
	DB	'ed.  This is', 00H
	ORG $+3
$SG19867 DB	'the distance the vehicle travels for every revolution of'
	DB	' the tire.', 00H
	ORG $+5
$SG19869 DB	'calculator or you can measure the distance around the ti'
	DB	're with a tape', 00H
	ORG $+1
$SG19870 DB	'measure.  Most tire circumferences are in the range of 5'
	DB	'0in (127cm)', 00H
_DATA	ENDS
PUBLIC	_GetGearingWindowHandle
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_hGearingScreens DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\gearingscreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GetGearingWindowHandle
_TEXT	SEGMENT
_GetGearingWindowHandle PROC				; COMDAT
; Line 244
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 245
	mov	eax, DWORD PTR _hGearingScreens
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetGearingWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetGearingWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetGearingWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetGearingWindowHandle PROC				; COMDAT
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 250
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hGearingScreens, eax
; Line 251
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetGearingWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_ButtonToScreenID
PUBLIC	_DisplayTireSize
PUBLIC	_DisplayTireCircumference
PUBLIC	__real@00000000
PUBLIC	__real@38d1b717
PUBLIC	__real@3ee4f8b588e368f1
PUBLIC	__real@4059000000000000
PUBLIC	_TCKeyboardSaveButton
PUBLIC	_TCKillKeyboard
PUBLIC	_GearingIgnoreNextKeyRelease
PUBLIC	_GearingScreensCallback
EXTRN	_DisplayNewScreenList:PROC
EXTRN	_WM_DefaultProc:PROC
EXTRN	_pressingbutton_semaphore:DWORD
EXTRN	_LISTWHEEL_SetSel:PROC
EXTRN	_vehicleData:BYTE
EXTRN	_LISTWHEEL_GetPos:PROC
EXTRN	_abs:PROC
EXTRN	_LISTWHEEL_GetVelocity:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_GetLastScreen:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
_BSS	SEGMENT
_hDiffWheel3 DD	01H DUP (?)
_hDiffWheel2 DD	01H DUP (?)
_hDiffWheel1 DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@38d1b717
CONST	SEGMENT
__real@38d1b717 DD 038d1b717r			; 0.0001
CONST	ENDS
;	COMDAT __real@3ee4f8b588e368f1
CONST	SEGMENT
__real@3ee4f8b588e368f1 DQ 03ee4f8b588e368f1r	; 1e-005
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _GearingScreensCallback
_TEXT	SEGMENT
tv295 = -232						; size = 4
tv277 = -232						; size = 4
tv258 = -232						; size = 4
tv203 = -232						; size = 4
tv195 = -232						; size = 4
tv128 = -232						; size = 4
tv89 = -232						; size = 4
tv64 = -232						; size = 4
_Sel$ = -32						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_GearingScreensCallback PROC				; COMDAT
; Line 254
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	jg	SHORT $LN43@GearingScr
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	je	$LN34@GearingScr
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN36@GearingScr
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	SHORT $LN35@GearingScr
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN30@GearingScr
	jmp	$LN1@GearingScr
$LN43@GearingScr:
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	$LN32@GearingScr
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN28@GearingScr
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN38@GearingScr
	jmp	$LN1@GearingScr
$LN38@GearingScr:
; Line 261
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN37@GearingScr
; Line 263
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 264
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN37@GearingScr:
; Line 266
	jmp	$LN39@GearingScr
$LN36@GearingScr:
; Line 269
	call	_GearingIgnoreNextKeyRelease
; Line 270
	jmp	$LN39@GearingScr
$LN35@GearingScr:
; Line 273
	mov	BYTE PTR _buttonsCreated, 0
; Line 274
	jmp	$LN39@GearingScr
$LN34@GearingScr:
; Line 277
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _pEntryKeyboard
	jne	SHORT $LN33@GearingScr
; Line 278
	call	_TCKillKeyboard
$LN33@GearingScr:
; Line 279
	jmp	$LN39@GearingScr
$LN32@GearingScr:
; Line 282
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _pEntryKeyboard
	jne	SHORT $LN31@GearingScr
; Line 283
	call	_TCKeyboardSaveButton
$LN31@GearingScr:
; Line 284
	jmp	$LN39@GearingScr
$LN30@GearingScr:
; Line 287
	call	_GetScreenType
	cmp	eax, 14					; 0000000eH
	jne	SHORT $LN29@GearingScr
	cmp	DWORD PTR _gearingScreenSuspended, 0
	jne	SHORT $LN29@GearingScr
; Line 290
	mov	esi, esp
	mov	eax, DWORD PTR _hGearingScreens
	push	eax
	push	14					; 0000000eH
	call	_GetLastScreen
	add	esp, 4
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _GearingScreenList[eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 291
	call	_DrawSignalStrength
$LN29@GearingScr:
; Line 293
	jmp	$LN39@GearingScr
$LN28@GearingScr:
; Line 296
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 297
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 298
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	cmp	DWORD PTR tv89[ebp], 1
	je	$LN15@GearingScr
	cmp	DWORD PTR tv89[ebp], 2
	je	$LN10@GearingScr
	cmp	DWORD PTR tv89[ebp], 4
	je	SHORT $LN25@GearingScr
	jmp	$LN26@GearingScr
$LN25@GearingScr:
; Line 301
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetVelocity
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 1
	jg	$LN22@GearingScr
; Line 303
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv128[ebp], eax
	cmp	DWORD PTR tv128[ebp], 612		; 00000264H
	je	SHORT $LN21@GearingScr
	cmp	DWORD PTR tv128[ebp], 613		; 00000265H
	je	$LN19@GearingScr
	cmp	DWORD PTR tv128[ebp], 614		; 00000266H
	je	$LN17@GearingScr
	jmp	$LN22@GearingScr
$LN21@GearingScr:
; Line 306
	mov	eax, DWORD PTR _hDiffWheel1
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	esi, DWORD PTR _Sel$[ebp]
	imul	esi, 100				; 00000064H
	mov	ecx, DWORD PTR _hDiffWheel2
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 10					; 0000000aH
	add	esi, eax
	mov	edx, DWORD PTR _hDiffWheel3
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	add	esi, eax
	mov	DWORD PTR tv258[ebp], esi
	fild	DWORD PTR tv258[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	fadd	QWORD PTR __real@3ee4f8b588e368f1
	fstp	DWORD PTR _vehicleData+80
	fld	DWORD PTR _vehicleData+80
	fcomp	DWORD PTR __real@38d1b717
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN20@GearingScr
; Line 307
	fldz
	fstp	DWORD PTR _vehicleData+80
$LN20@GearingScr:
; Line 308
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 309
	jmp	$LN22@GearingScr
$LN19@GearingScr:
; Line 311
	mov	eax, DWORD PTR _hDiffWheel2
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	ecx, DWORD PTR _hDiffWheel3
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	esi, eax
	mov	edi, DWORD PTR _Sel$[ebp]
	imul	edi, 10					; 0000000aH
	mov	edx, DWORD PTR _hDiffWheel1
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 100				; 00000064H
	add	eax, edi
	add	eax, esi
	mov	DWORD PTR tv277[ebp], eax
	fild	DWORD PTR tv277[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	fadd	QWORD PTR __real@3ee4f8b588e368f1
	fstp	DWORD PTR _vehicleData+80
	fld	DWORD PTR _vehicleData+80
	fcomp	DWORD PTR __real@38d1b717
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN18@GearingScr
; Line 312
	fldz
	fstp	DWORD PTR _vehicleData+80
$LN18@GearingScr:
; Line 313
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 314
	jmp	$LN22@GearingScr
$LN17@GearingScr:
; Line 316
	mov	eax, DWORD PTR _hDiffWheel3
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	ecx, DWORD PTR _hDiffWheel2
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	esi, eax
	imul	esi, 10					; 0000000aH
	mov	edx, DWORD PTR _hDiffWheel1
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 100				; 00000064H
	add	eax, DWORD PTR _Sel$[ebp]
	add	esi, eax
	mov	DWORD PTR tv295[ebp], esi
	fild	DWORD PTR tv295[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	fadd	QWORD PTR __real@3ee4f8b588e368f1
	fstp	DWORD PTR _vehicleData+80
	fld	DWORD PTR _vehicleData+80
	fcomp	DWORD PTR __real@38d1b717
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN16@GearingScr
; Line 317
	fldz
	fstp	DWORD PTR _vehicleData+80
$LN16@GearingScr:
; Line 318
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
$LN22@GearingScr:
; Line 322
	jmp	$LN26@GearingScr
$LN15@GearingScr:
; Line 326
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv195[ebp], eax
	cmp	DWORD PTR tv195[ebp], 612		; 00000264H
	jl	SHORT $LN11@GearingScr
	cmp	DWORD PTR tv195[ebp], 614		; 00000266H
	jle	SHORT $LN12@GearingScr
	jmp	SHORT $LN11@GearingScr
$LN12@GearingScr:
; Line 334
	mov	DWORD PTR _pressingbutton_semaphore, 1
; Line 335
	jmp	SHORT $LN13@GearingScr
$LN11@GearingScr:
; Line 338
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN13@GearingScr:
; Line 340
	jmp	SHORT $LN26@GearingScr
$LN10@GearingScr:
; Line 343
	mov	DWORD PTR _pressingbutton_semaphore, 0
; Line 345
	cmp	DWORD PTR _Id$[ebp], 2049		; 00000801H
	jne	SHORT $LN9@GearingScr
; Line 347
	call	_DisplayTireCircumference
	jmp	SHORT $LN3@GearingScr
$LN9@GearingScr:
; Line 349
	cmp	DWORD PTR _Id$[ebp], 2058		; 0000080aH
	jne	SHORT $LN7@GearingScr
; Line 351
	call	_DisplayTireSize
	jmp	SHORT $LN3@GearingScr
$LN7@GearingScr:
; Line 354
	movzx	eax, BYTE PTR _buttonsCreated
	test	eax, eax
	je	SHORT $LN3@GearingScr
; Line 355
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv203[ebp], eax
	cmp	DWORD PTR tv203[ebp], 2050		; 00000802H
	jl	SHORT $LN3@GearingScr
	cmp	DWORD PTR tv203[ebp], 2057		; 00000809H
	jle	SHORT $LN2@GearingScr
	jmp	SHORT $LN3@GearingScr
$LN2@GearingScr:
; Line 365
	mov	eax, DWORD PTR _hGearingScreens
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	_ButtonToScreenID
	add	esp, 4
	push	eax
	push	19					; 00000013H
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
$LN3@GearingScr:
$LN26@GearingScr:
; Line 370
	jmp	SHORT $LN39@GearingScr
$LN1@GearingScr:
; Line 373
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN39@GearingScr:
; Line 375
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GearingScreensCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ButtonToScreenID
_TEXT	SEGMENT
tv64 = -196						; size = 4
_Id$ = 8						; size = 4
_ButtonToScreenID PROC					; COMDAT
; Line 378
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 379
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2050				; 00000802H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 7
	ja	SHORT $LN1@ButtonToSc
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN14@ButtonToSc[edx*4]
$LN9@ButtonToSc:
; Line 381
	xor	eax, eax
	jmp	SHORT $LN12@ButtonToSc
$LN8@ButtonToSc:
; Line 382
	mov	eax, 1
	jmp	SHORT $LN12@ButtonToSc
$LN7@ButtonToSc:
; Line 383
	mov	eax, 2
	jmp	SHORT $LN12@ButtonToSc
$LN6@ButtonToSc:
; Line 384
	mov	eax, 3
	jmp	SHORT $LN12@ButtonToSc
$LN5@ButtonToSc:
; Line 385
	mov	eax, 4
	jmp	SHORT $LN12@ButtonToSc
$LN4@ButtonToSc:
; Line 386
	mov	eax, 5
	jmp	SHORT $LN12@ButtonToSc
$LN3@ButtonToSc:
; Line 387
	mov	eax, 6
	jmp	SHORT $LN12@ButtonToSc
$LN2@ButtonToSc:
; Line 388
	mov	eax, 7
	jmp	SHORT $LN12@ButtonToSc
$LN1@ButtonToSc:
; Line 389
	xor	eax, eax
$LN12@ButtonToSc:
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@ButtonToSc:
	DD	$LN9@ButtonToSc
	DD	$LN8@ButtonToSc
	DD	$LN7@ButtonToSc
	DD	$LN6@ButtonToSc
	DD	$LN5@ButtonToSc
	DD	$LN4@ButtonToSc
	DD	$LN3@ButtonToSc
	DD	$LN2@ButtonToSc
_ButtonToScreenID ENDP
_TEXT	ENDS
PUBLIC	_GetTireSizeScreenWindowHandle
_BSS	SEGMENT
_hTireSizeScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GetTireSizeScreenWindowHandle
_TEXT	SEGMENT
_GetTireSizeScreenWindowHandle PROC			; COMDAT
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 395
	mov	eax, DWORD PTR _hTireSizeScreen
; Line 396
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTireSizeScreenWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetTireCircumferenceString
EXTRN	_CreateKeyboard:PROC
EXTRN	_DestroyKeyboard:PROC
EXTRN	_SetLastScreen:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_screen_scrolling:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTireCircumference
_TEXT	SEGMENT
_DisplayTireCircumference PROC				; COMDAT
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 401
	mov	DWORD PTR _screen_scrolling, 2
; Line 403
	mov	DWORD PTR _gearingScreenSuspended, 1
; Line 405
	push	22					; 00000016H
	call	_SetScreenType
	add	esp, 4
; Line 406
	push	5
	push	22					; 00000016H
	call	_SetLastScreen
	add	esp, 8
; Line 408
	cmp	DWORD PTR _pEntryKeyboard, 0
	je	SHORT $LN1@DisplayTir
; Line 409
	mov	eax, DWORD PTR _pEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
$LN1@DisplayTir:
; Line 411
	push	OFFSET _tireCircumference
	push	0
	call	_GetTireCircumferenceString
	add	esp, 8
; Line 413
	push	0
	mov	eax, DWORD PTR _hGearingScreens
	push	eax
	push	0
	push	10					; 0000000aH
	push	1
	push	2
	push	OFFSET _tireCircumference
	push	OFFSET $SG19738
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pEntryKeyboard, eax
; Line 414
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTireCircumference ENDP
_TEXT	ENDS
PUBLIC	__real@40228f5c
EXTRN	_strcat:PROC
EXTRN	_trim:PROC
EXTRN	_sprintf:PROC
EXTRN	_sysData:BYTE
;	COMDAT __real@40228f5c
CONST	SEGMENT
__real@40228f5c DD 040228f5cr			; 2.54
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _GetTireCircumferenceString
_TEXT	SEGMENT
_pUnits$ = -20						; size = 4
_circumference$ = -8					; size = 4
_withUnits$ = 8						; size = 1
_scratch$ = 12						; size = 4
_GetTireCircumferenceString PROC			; COMDAT
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 426
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN3@GetTireCir
; Line 428
	fld	DWORD PTR _vehicleData+84
	fmul	DWORD PTR __real@40228f5c
	fstp	DWORD PTR _circumference$[ebp]
; Line 429
	mov	DWORD PTR _pUnits$[ebp], OFFSET $SG19748
; Line 431
	jmp	SHORT $LN2@GetTireCir
$LN3@GetTireCir:
; Line 433
	fld	DWORD PTR _vehicleData+84
	fstp	DWORD PTR _circumference$[ebp]
; Line 434
	mov	DWORD PTR _pUnits$[ebp], OFFSET $SG19750
$LN2@GetTireCir:
; Line 437
	fld	DWORD PTR _circumference$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19751
	mov	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 438
	mov	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_trim
	add	esp, 4
; Line 440
	movzx	eax, BYTE PTR _withUnits$[ebp]
	test	eax, eax
	je	SHORT $LN1@GetTireCir
; Line 441
	mov	eax, DWORD PTR _pUnits$[ebp]
	push	eax
	mov	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN1@GetTireCir:
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTireCircumferenceString ENDP
_TEXT	ENDS
PUBLIC	__real@43470000
PUBLIC	__real@4068e00000000000
PUBLIC	__real@3ec99326
EXTRN	_atof:PROC
EXTRN	_EnsurePositive:PROC
;	COMDAT __real@43470000
CONST	SEGMENT
__real@43470000 DD 043470000r			; 199
CONST	ENDS
;	COMDAT __real@4068e00000000000
CONST	SEGMENT
__real@4068e00000000000 DQ 04068e00000000000r	; 199
CONST	ENDS
;	COMDAT __real@3ec99326
CONST	SEGMENT
__real@3ec99326 DD 03ec99326r			; 0.393701
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _TCKeyboardSaveButton
_TEXT	SEGMENT
_TCKeyboardSaveButton PROC				; COMDAT
; Line 445
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 446
	call	_TCKillKeyboard
; Line 447
	push	OFFSET _tireCircumference
	call	_EnsurePositive
	add	esp, 4
; Line 448
	push	OFFSET _tireCircumference
	call	_atof
	add	esp, 4
	fstp	DWORD PTR _vehicleData+84
; Line 449
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN2@TCKeyboard
; Line 450
	fld	DWORD PTR _vehicleData+84
	fmul	DWORD PTR __real@3ec99326
	fstp	DWORD PTR _vehicleData+84
$LN2@TCKeyboard:
; Line 453
	fld	DWORD PTR _vehicleData+84
	fcomp	QWORD PTR __real@4068e00000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@TCKeyboard
; Line 454
	fld	DWORD PTR __real@43470000
	fstp	DWORD PTR _vehicleData+84
$LN1@TCKeyboard:
; Line 456
	mov	BYTE PTR _vehicleData+100, 0
; Line 457
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TCKeyboardSaveButton ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TCKillKeyboard
_TEXT	SEGMENT
_TCKillKeyboard PROC					; COMDAT
; Line 460
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 461
	cmp	DWORD PTR _pEntryKeyboard, 0
	je	SHORT $LN1@TCKillKeyb
; Line 463
	mov	eax, DWORD PTR _pEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 464
	mov	DWORD PTR _pEntryKeyboard, 0
$LN1@TCKillKeyb:
; Line 466
	mov	DWORD PTR _screen_scrolling, 1
; Line 468
	mov	DWORD PTR _gearingScreenSuspended, 0
; Line 469
	push	14					; 0000000eH
	call	_SetScreenType
	add	esp, 4
; Line 470
	mov	eax, DWORD PTR _hGearingScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 471
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TCKillKeyboard ENDP
_TEXT	ENDS
EXTRN	_ResetNewScreen:PROC
EXTRN	_WM_CreateTimer:PROC
EXTRN	_DisplayTripleListScreen:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindow:PROC
EXTRN	_WM_DeleteWindow:PROC
_BSS	SEGMENT
_hTreadWidthListWheel DD 01H DUP (?)
_hAspectRatioWheel DD 01H DUP (?)
_hWheelDiameterWheel DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayTireSize
_TEXT	SEGMENT
_DisplayTireSize PROC					; COMDAT
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 475
	mov	eax, DWORD PTR _hGearingScreens
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 476
	mov	DWORD PTR _screen_scrolling, 2
; Line 477
	push	22					; 00000016H
	call	_SetScreenType
	add	esp, 4
; Line 478
	push	4
	push	22					; 00000016H
	call	_SetLastScreen
	add	esp, 8
; Line 480
	push	0
	push	OFFSET _TireSizeScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hTireSizeScreen, eax
	cmp	DWORD PTR _hTireSizeScreen, 0
	jg	SHORT $LN1@DisplayTir@2
; Line 481
	call	_SystemError
$LN1@DisplayTir@2:
; Line 488
	push	0
	push	0
	push	OFFSET $SG19764
	mov	eax, 20					; 00000014H
	sub	eax, DWORD PTR _vehicleData+92
	push	eax
	push	OFFSET _hWheelDiameterWheel
	push	611					; 00000263H
	push	OFFSET _WheelDiameter
	mov	eax, 80					; 00000050H
	sub	eax, DWORD PTR _vehicleData+96
	cdq
	mov	ecx, 5
	idiv	ecx
	push	eax
	push	OFFSET _hAspectRatioWheel
	push	610					; 00000262H
	push	OFFSET _AspectRatio
	mov	eax, 355				; 00000163H
	sub	eax, DWORD PTR _vehicleData+88
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	eax
	push	OFFSET _hTreadWidthListWheel
	push	609					; 00000261H
	push	OFFSET _TreadWidth
	mov	edx, DWORD PTR _hTireSizeScreen
	push	edx
	call	_DisplayTripleListScreen
	add	esp, 64					; 00000040H
; Line 490
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hTireSizeScreen
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 491
	call	_ResetNewScreen
; Line 492
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTireSize ENDP
_TEXT	ENDS
PUBLIC	_UpdateTireCircumference
PUBLIC	_TireSizePaint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TireSizeScreenCallback
_TEXT	SEGMENT
tv84 = -232						; size = 4
tv77 = -232						; size = 4
tv64 = -232						; size = 4
_Sel$ = -32						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_TireSizeScreenCallback PROC				; COMDAT
; Line 495
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 498
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN13@TireSizeSc
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	SHORT $LN12@TireSizeSc
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN15@TireSizeSc
	jmp	$LN1@TireSizeSc
$LN15@TireSizeSc:
; Line 501
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN14@TireSizeSc
; Line 503
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 504
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN14@TireSizeSc:
; Line 506
	jmp	$LN18@TireSizeSc
$LN13@TireSizeSc:
; Line 509
	mov	eax, DWORD PTR _hTireSizeScreen
	push	eax
	call	_TireSizePaint
	add	esp, 4
; Line 510
	jmp	$LN18@TireSizeSc
$LN12@TireSizeSc:
; Line 513
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 514
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 515
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 4
	je	SHORT $LN9@TireSizeSc
	jmp	$LN2@TireSizeSc
$LN9@TireSizeSc:
; Line 518
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetVelocity
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 1
	jg	$LN8@TireSizeSc
; Line 520
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv84[ebp], eax
	cmp	DWORD PTR tv84[ebp], 609		; 00000261H
	je	SHORT $LN5@TireSizeSc
	cmp	DWORD PTR tv84[ebp], 610		; 00000262H
	je	SHORT $LN4@TireSizeSc
	cmp	DWORD PTR tv84[ebp], 611		; 00000263H
	je	$LN3@TireSizeSc
	jmp	$LN8@TireSizeSc
$LN5@TireSizeSc:
; Line 523
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	edx, DWORD PTR _Sel$[ebp]
	imul	edx, 10					; 0000000aH
	mov	eax, 355				; 00000163H
	sub	eax, edx
	mov	DWORD PTR _vehicleData+88, eax
; Line 524
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 525
	call	_UpdateTireCircumference
; Line 526
	jmp	SHORT $LN8@TireSizeSc
$LN4@TireSizeSc:
; Line 528
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	edx, DWORD PTR _Sel$[ebp]
	imul	edx, 5
	mov	eax, 80					; 00000050H
	sub	eax, edx
	mov	DWORD PTR _vehicleData+96, eax
; Line 529
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 530
	call	_UpdateTireCircumference
; Line 531
	jmp	SHORT $LN8@TireSizeSc
$LN3@TireSizeSc:
; Line 533
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	edx, 20					; 00000014H
	sub	edx, DWORD PTR _Sel$[ebp]
	mov	DWORD PTR _vehicleData+92, edx
; Line 534
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 535
	call	_UpdateTireCircumference
$LN8@TireSizeSc:
; Line 539
	jmp	SHORT $LN10@TireSizeSc
$LN2@TireSizeSc:
; Line 542
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN10@TireSizeSc:
; Line 544
	jmp	SHORT $LN18@TireSizeSc
$LN1@TireSizeSc:
; Line 547
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN18@TireSizeSc:
; Line 549
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TireSizeScreenCallback ENDP
_TEXT	ENDS
PUBLIC	__real@400921fb5444261e
PUBLIC	__real@42c80000
PUBLIC	__real@3d214270
;	COMDAT __real@400921fb5444261e
CONST	SEGMENT
__real@400921fb5444261e DQ 0400921fb5444261er	; 3.14159
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@3d214270
CONST	SEGMENT
__real@3d214270 DD 03d214270r			; 0.03937
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _UpdateTireCircumference
_TEXT	SEGMENT
tv77 = -196						; size = 4
_UpdateTireCircumference PROC				; COMDAT
; Line 552
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 553
	mov	BYTE PTR _vehicleData+100, 1
; Line 554
	mov	eax, DWORD PTR _vehicleData+88
	imul	eax, DWORD PTR _vehicleData+96
	mov	DWORD PTR tv77[ebp], eax
	fild	DWORD PTR tv77[ebp]
	fmul	DWORD PTR __real@3d214270
	fadd	ST(0), ST(0)
	fdiv	DWORD PTR __real@42c80000
	fiadd	DWORD PTR _vehicleData+92
	fmul	QWORD PTR __real@400921fb5444261e
	fstp	DWORD PTR _vehicleData+84
; Line 555
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateTireCircumference ENDP
_TEXT	ENDS
EXTRN	_bmRedButton:BYTE
EXTRN	_BUTTON_SetTextColor:PROC
EXTRN	_BUTTON_SetText:PROC
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_bmGreenButton:BYTE
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_BUTTON_SetDefaultFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTireSizeSelection
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayTireSizeSelection PROC				; COMDAT
; Line 559
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 560
	push	OFFSET _GUI_Font24B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 562
	push	2058					; 0000080aH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	174					; 000000aeH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hTireDimensionButton, eax
; Line 563
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hTireDimensionButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 564
	push	OFFSET $SG19800
	mov	eax, DWORD PTR _hTireDimensionButton
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 565
	push	0
	push	0
	mov	eax, DWORD PTR _hTireDimensionButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 567
	push	2049					; 00000801H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	218					; 000000daH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hTireCircumferenceButton, eax
; Line 568
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hTireCircumferenceButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 569
	push	OFFSET $SG19801
	mov	eax, DWORD PTR _hTireCircumferenceButton
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 570
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hTireCircumferenceButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTireSizeSelection ENDP
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _DisplayDiffRatio
_TEXT	SEGMENT
_temp$ = -44						; size = 4
_ones$ = -32						; size = 4
_tens$ = -20						; size = 4
_hundreds$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayDiffRatio PROC					; COMDAT
; Line 574
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 577
	fld	DWORD PTR _vehicleData+80
	fmul	QWORD PTR __real@4059000000000000
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR _temp$[ebp], eax
; Line 578
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _hundreds$[ebp], eax
; Line 579
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _tens$[ebp], edx
; Line 580
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _ones$[ebp], edx
; Line 586
	push	0
	push	0
	push	OFFSET $SG19810
	mov	eax, DWORD PTR _ones$[ebp]
	push	eax
	push	OFFSET _hDiffWheel3
	push	614					; 00000266H
	push	OFFSET _ZeroThroughNine
	mov	ecx, DWORD PTR _tens$[ebp]
	push	ecx
	push	OFFSET _hDiffWheel2
	push	613					; 00000265H
	push	OFFSET _ZeroThroughNine
	mov	edx, DWORD PTR _hundreds$[ebp]
	push	edx
	push	OFFSET _hDiffWheel1
	push	612					; 00000264H
	push	OFFSET _ZeroThroughNine
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_DisplayTripleListScreen
	add	esp, 64					; 00000040H
; Line 587
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayDiffRatio ENDP
_TEXT	ENDS
PUBLIC	_SetGearButtonText
EXTRN	_bmGearRatioButton:BYTE
EXTRN	_BUTTON_SetDefaultTextColor:PROC
EXTRN	_BUTTON_SetDefaultBkColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTransRatio
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayTransRatio PROC					; COMDAT
; Line 590
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 591
	push	OFFSET _GUI_Font24B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 592
	push	0
	push	0
	call	_BUTTON_SetDefaultBkColor
	add	esp, 8
; Line 593
	push	0
	push	65280					; 0000ff00H
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 594
	push	1
	push	255					; 000000ffH
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 596
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	50					; 00000032H
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton, eax
; Line 597
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 598
	push	0
	call	_SetGearButtonText
	add	esp, 4
; Line 600
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	50					; 00000032H
	push	180					; 000000b4H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+4, eax
; Line 601
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+4
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 602
	push	1
	call	_SetGearButtonText
	add	esp, 4
; Line 604
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	50					; 00000032H
	push	330					; 0000014aH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+8, eax
; Line 605
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+8
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 606
	push	2
	call	_SetGearButtonText
	add	esp, 4
; Line 608
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	120					; 00000078H
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+12, eax
; Line 609
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+12
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 610
	push	3
	call	_SetGearButtonText
	add	esp, 4
; Line 612
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	120					; 00000078H
	push	180					; 000000b4H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+16, eax
; Line 613
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+16
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 614
	push	4
	call	_SetGearButtonText
	add	esp, 4
; Line 616
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	120					; 00000078H
	push	330					; 0000014aH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+20, eax
; Line 617
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+20
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 618
	push	5
	call	_SetGearButtonText
	add	esp, 4
; Line 620
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	190					; 000000beH
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+24, eax
; Line 621
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+24
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 622
	push	6
	call	_SetGearButtonText
	add	esp, 4
; Line 624
	push	2057					; 00000809H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	45					; 0000002dH
	push	119					; 00000077H
	push	190					; 000000beH
	push	180					; 000000b4H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGearButton+28, eax
; Line 625
	push	OFFSET _bmGearRatioButton
	push	0
	mov	eax, DWORD PTR _hGearButton+28
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 626
	push	7
	call	_SetGearButtonText
	add	esp, 4
; Line 628
	mov	BYTE PTR _buttonsCreated, 1
; Line 629
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTransRatio ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetGearButtonText
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 4
_SetGearButtonText PROC					; COMDAT
; Line 632
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 635
	mov	eax, DWORD PTR _index$[ebp]
	fld	DWORD PTR _vehicleData[eax*4+48]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19818
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 636
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_trim
	add	esp, 4
; Line 637
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	mov	edx, DWORD PTR _hGearButton[ecx*4]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
; Line 638
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetGearBut
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@SetGearBut:
	DD	1
	DD	$LN4@SetGearBut
$LN4@SetGearBut:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@SetGearBut
$LN3@SetGearBut:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetGearButtonText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayHelp
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayHelp PROC					; COMDAT
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 643
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayHelp ENDP
_TEXT	ENDS
EXTRN	_GUI_Font16_ASCII:BYTE
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font20_ASCII:BYTE
EXTRN	_bmTireSize:BYTE
EXTRN	_bmNarrowSpinner:BYTE
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmBackgroundWithPanel:BYTE
EXTRN	_GUI_SetTextMode:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TireSizePaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_TireSizePaint PROC					; COMDAT
; Line 647
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 648
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 649
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 650
	push	49					; 00000031H
	push	225					; 000000e1H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 651
	push	49					; 00000031H
	push	304					; 00000130H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 652
	push	49					; 00000031H
	push	383					; 0000017fH
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 653
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTireSize
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 655
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 656
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 657
	push	165					; 000000a5H
	push	123					; 0000007bH
	push	OFFSET $SG19825
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 660
	push	16744576				; 00ff8080H
	call	_GUI_SetColor
	add	esp, 4
; Line 661
	push	140					; 0000008cH
	push	298					; 0000012aH
	push	OFFSET $SG19826
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 662
	push	138					; 0000008aH
	push	378					; 0000017aH
	push	OFFSET $SG19827
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 664
	push	OFFSET _GUI_Font16_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 665
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 666
	push	190					; 000000beH
	push	123					; 0000007bH
	push	OFFSET $SG19828
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 668
	push	229					; 000000e5H
	push	0
	push	4
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 670
	call	_DrawSignalStrength
; Line 671
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TireSizePaint ENDP
_TEXT	ENDS
EXTRN	_GUI_FontD32:BYTE
EXTRN	_bmDiffRatio:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DiffRatioPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DiffRatioPaint PROC					; COMDAT
; Line 674
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 675
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 676
	push	49					; 00000031H
	push	225					; 000000e1H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 677
	push	49					; 00000031H
	push	304					; 00000130H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 678
	push	49					; 00000031H
	push	383					; 0000017fH
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 680
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmDiffRatio
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 687
	push	OFFSET _GUI_FontD32
	call	_GUI_SetFont
	add	esp, 4
; Line 688
	push	16744576				; 00ff8080H
	call	_GUI_SetColor
	add	esp, 4
; Line 689
	push	125					; 0000007dH
	push	299					; 0000012bH
	push	OFFSET $SG19832
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 691
	push	229					; 000000e5H
	push	0
	push	1
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 692
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DiffRatioPaint ENDP
_TEXT	ENDS
EXTRN	_GUI_Font20B_ASCII:BYTE
EXTRN	_bmTransRatio:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TransRatioPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_TransRatioPaint PROC					; COMDAT
; Line 695
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 696
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 698
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTransRatio
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 706
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 707
	push	OFFSET _GUI_Font20B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 708
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 709
	push	95					; 0000005fH
	push	90					; 0000005aH
	push	OFFSET $SG19836
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 710
	push	95					; 0000005fH
	push	240					; 000000f0H
	push	OFFSET $SG19837
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 711
	push	95					; 0000005fH
	push	390					; 00000186H
	push	OFFSET $SG19838
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 712
	push	166					; 000000a6H
	push	90					; 0000005aH
	push	OFFSET $SG19839
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 713
	push	166					; 000000a6H
	push	240					; 000000f0H
	push	OFFSET $SG19840
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 714
	push	166					; 000000a6H
	push	390					; 00000186H
	push	OFFSET $SG19841
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 715
	push	236					; 000000ecH
	push	90					; 0000005aH
	push	OFFSET $SG19842
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 716
	push	236					; 000000ecH
	push	240					; 000000f0H
	push	OFFSET $SG19843
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 718
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 719
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 720
	push	190					; 000000beH
	push	390					; 00000186H
	push	OFFSET $SG19844
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 722
	push	229					; 000000e5H
	push	0
	push	2
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TransRatioPaint ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_Font16B_ASCII:BYTE
EXTRN	_bmHelp:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HelpPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_HelpPaint PROC						; COMDAT
; Line 731
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 732
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 733
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmHelp
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 735
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 736
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 738
	push	OFFSET _GUI_Font16B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 739
	push	55					; 00000037H
	push	40					; 00000028H
	push	OFFSET $SG19852
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 741
	push	OFFSET _GUI_Font16_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 742
	push	70					; 00000046H
	push	40					; 00000028H
	push	OFFSET $SG19853
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 743
	push	85					; 00000055H
	push	40					; 00000028H
	push	OFFSET $SG19854
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 744
	push	100					; 00000064H
	push	40					; 00000028H
	push	OFFSET $SG19855
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 745
	push	115					; 00000073H
	push	40					; 00000028H
	push	OFFSET $SG19856
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 746
	push	130					; 00000082H
	push	40					; 00000028H
	push	OFFSET $SG19857
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 747
	push	145					; 00000091H
	push	40					; 00000028H
	push	OFFSET $SG19858
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 748
	push	160					; 000000a0H
	push	40					; 00000028H
	push	OFFSET $SG19859
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 749
	push	175					; 000000afH
	push	40					; 00000028H
	push	OFFSET $SG19860
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 751
	push	229					; 000000e5H
	push	0
	push	3
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 752
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HelpPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _TireSizeSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_TireSizeSelectionPaint PROC				; COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 756
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 757
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTireSize
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 759
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 760
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 762
	push	OFFSET _GUI_Font16B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 763
	push	55					; 00000037H
	push	40					; 00000028H
	push	OFFSET $SG19864
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 764
	push	OFFSET _GUI_Font16_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 765
	push	70					; 00000046H
	push	40					; 00000028H
	push	OFFSET $SG19865
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 766
	push	85					; 00000055H
	push	40					; 00000028H
	push	OFFSET $SG19866
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 767
	push	100					; 00000064H
	push	40					; 00000028H
	push	OFFSET $SG19867
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 768
	push	115					; 00000073H
	push	40					; 00000028H
	push	OFFSET $SG19868
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 769
	push	130					; 00000082H
	push	40					; 00000028H
	push	OFFSET $SG19869
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 770
	push	145					; 00000091H
	push	40					; 00000028H
	push	OFFSET $SG19870
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 771
	push	160					; 000000a0H
	push	40					; 00000028H
	push	OFFSET $SG19871
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 773
	push	229					; 000000e5H
	push	0
	push	0
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 774
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TireSizeSelectionPaint ENDP
_TEXT	ENDS
EXTRN	_bmleftarrow:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetNavigationArrow
_TEXT	SEGMENT
_screen$ = 8						; size = 4
_GetNavigationArrow PROC				; COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	mov	eax, OFFSET _bmleftarrow
; Line 779
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNavigationArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GearingIgnoreNextKeyRelease
_TEXT	SEGMENT
_GearingIgnoreNextKeyRelease PROC			; COMDAT
; Line 782
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 784
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GearingIgnoreNextKeyRelease ENDP
_TEXT	ENDS
END
