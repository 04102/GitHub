; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispStringInRect.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__DispStringInRect
EXTRN	_GUI__DispLine:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI__GetLineDistX:PROC
EXTRN	_GUI__HandleEOLine:PROC
EXTRN	_GUI_UC__NumChars2NumBytes:PROC
EXTRN	_GUI__GetLineNumChars:PROC
EXTRN	_GUI_GetClientRect:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_dispstringinrect.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__DispStringInRect
_TEXT	SEGMENT
tv143 = -324						; size = 4
tv85 = -324						; size = 4
_xLineSize$9150 = -124					; size = 4
_NumLines$9136 = -112					; size = 4
_NumCharsRem$ = -100					; size = 4
_LineLen$ = -88						; size = 4
_xLine$ = -76						; size = 4
_FontYSize$ = -64					; size = 4
_sOrg$ = -52						; size = 4
_y$ = -40						; size = 4
_rLine$ = -28						; size = 8
_r$ = -12						; size = 8
_s$ = 8							; size = 4
_pRect$ = 12						; size = 4
_TextAlign$ = 16					; size = 4
_MaxNumChars$ = 20					; size = 4
_GUI__DispStringInRect PROC				; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	DWORD PTR _y$[ebp], 0
; Line 43
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _sOrg$[ebp], eax
; Line 45
	mov	DWORD PTR _xLine$[ebp], 0
; Line 48
	call	_GUI_GetFontDistY
	mov	DWORD PTR _FontYSize$[ebp], eax
; Line 49
	cmp	DWORD PTR _pRect$[ebp], 0
	je	SHORT $LN20@GUI__DispS
; Line 50
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r$[ebp], ecx
	mov	DWORD PTR _r$[ebp+4], edx
; Line 51
	jmp	SHORT $LN19@GUI__DispS
$LN20@GUI__DispS:
; Line 52
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_GUI_GetClientRect
	add	esp, 4
$LN19@GUI__DispS:
; Line 55
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 12					; 0000000cH
	jne	SHORT $LN18@GUI__DispS
; Line 56
	movsx	eax, WORD PTR _r$[ebp+2]
	mov	DWORD PTR _y$[ebp], eax
; Line 57
	jmp	$LN17@GUI__DispS
$LN18@GUI__DispS:
; Line 60
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	mov	DWORD PTR _NumCharsRem$[ebp], eax
	mov	DWORD PTR _NumLines$9136[ebp], 1
	jmp	SHORT $LN16@GUI__DispS
$LN15@GUI__DispS:
	mov	eax, DWORD PTR _NumLines$9136[ebp]
	add	eax, 1
	mov	DWORD PTR _NumLines$9136[ebp], eax
$LN16@GUI__DispS:
	cmp	DWORD PTR _NumCharsRem$[ebp], 0
	je	SHORT $LN14@GUI__DispS
; Line 61
	mov	eax, DWORD PTR _NumCharsRem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI__GetLineNumChars
	add	esp, 8
	mov	DWORD PTR _LineLen$[ebp], eax
; Line 62
	mov	eax, DWORD PTR _NumCharsRem$[ebp]
	sub	eax, DWORD PTR _LineLen$[ebp]
	mov	DWORD PTR _NumCharsRem$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _LineLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 64
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__HandleEOLine
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@GUI__DispS
; Line 65
	jmp	SHORT $LN14@GUI__DispS
$LN13@GUI__DispS:
; Line 66
	jmp	SHORT $LN15@GUI__DispS
$LN14@GUI__DispS:
; Line 68
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 12					; 0000000cH
	mov	DWORD PTR tv85[ebp], eax
	cmp	DWORD PTR tv85[ebp], 4
	je	SHORT $LN10@GUI__DispS
	cmp	DWORD PTR tv85[ebp], 8
	je	SHORT $LN10@GUI__DispS
	cmp	DWORD PTR tv85[ebp], 12			; 0000000cH
	je	SHORT $LN9@GUI__DispS
	jmp	SHORT $LN17@GUI__DispS
$LN10@GUI__DispS:
; Line 71
	movsx	eax, WORD PTR _r$[ebp+6]
	mov	ecx, DWORD PTR _NumLines$9136[ebp]
	imul	ecx, DWORD PTR _FontYSize$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
; Line 72
	jmp	SHORT $LN17@GUI__DispS
$LN9@GUI__DispS:
; Line 74
	movsx	ecx, WORD PTR _r$[ebp+2]
	movsx	eax, WORD PTR _r$[ebp+6]
	movsx	edx, WORD PTR _r$[ebp+2]
	sub	eax, edx
	add	eax, 1
	mov	edx, DWORD PTR _NumLines$9136[ebp]
	imul	edx, DWORD PTR _FontYSize$[ebp]
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
$LN17@GUI__DispS:
; Line 79
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	mov	DWORD PTR _NumCharsRem$[ebp], eax
	mov	ecx, DWORD PTR _sOrg$[ebp]
	mov	DWORD PTR _s$[ebp], ecx
$LN8@GUI__DispS:
	cmp	DWORD PTR _NumCharsRem$[ebp], 0
	je	$LN21@GUI__DispS
; Line 81
	mov	eax, DWORD PTR _NumCharsRem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI__GetLineNumChars
	add	esp, 8
	mov	DWORD PTR _LineLen$[ebp], eax
; Line 82
	mov	eax, DWORD PTR _NumCharsRem$[ebp]
	sub	eax, DWORD PTR _LineLen$[ebp]
	mov	DWORD PTR _NumCharsRem$[ebp], eax
; Line 83
	mov	eax, DWORD PTR _LineLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI__GetLineDistX
	add	esp, 8
	mov	DWORD PTR _xLineSize$9150[ebp], eax
; Line 84
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 3
	mov	DWORD PTR tv143[ebp], eax
	je	SHORT $LN3@GUI__DispS
	cmp	DWORD PTR tv143[ebp], 1
	je	SHORT $LN2@GUI__DispS
	cmp	DWORD PTR tv143[ebp], 2
	je	SHORT $LN4@GUI__DispS
	jmp	SHORT $LN5@GUI__DispS
$LN4@GUI__DispS:
; Line 86
	movsx	ecx, WORD PTR _r$[ebp]
	movsx	eax, WORD PTR _r$[ebp+4]
	movsx	edx, WORD PTR _r$[ebp]
	sub	eax, edx
	sub	eax, DWORD PTR _xLineSize$9150[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	DWORD PTR _xLine$[ebp], ecx
	jmp	SHORT $LN5@GUI__DispS
$LN3@GUI__DispS:
; Line 88
	movsx	eax, WORD PTR _r$[ebp]
	mov	DWORD PTR _xLine$[ebp], eax
	jmp	SHORT $LN5@GUI__DispS
$LN2@GUI__DispS:
; Line 90
	movsx	eax, WORD PTR _r$[ebp+4]
	sub	eax, DWORD PTR _xLineSize$9150[ebp]
	add	eax, 1
	mov	DWORD PTR _xLine$[ebp], eax
$LN5@GUI__DispS:
; Line 92
	mov	ax, WORD PTR _xLine$[ebp]
	mov	WORD PTR _GUI_Context+34, ax
	mov	cx, WORD PTR _GUI_Context+34
	mov	WORD PTR _rLine$[ebp], cx
; Line 93
	movsx	eax, WORD PTR _rLine$[ebp]
	mov	ecx, DWORD PTR _xLineSize$9150[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _rLine$[ebp+4], dx
; Line 94
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _GUI_Context+36, ax
	mov	cx, WORD PTR _GUI_Context+36
	mov	WORD PTR _rLine$[ebp+2], cx
; Line 95
	mov	eax, DWORD PTR _FontYSize$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _rLine$[ebp+6], dx
; Line 96
	lea	eax, DWORD PTR _rLine$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LineLen$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI__DispLine
	add	esp, 12					; 0000000cH
; Line 97
	mov	eax, DWORD PTR _LineLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 98
	call	_GUI_GetFontDistY
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 99
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__HandleEOLine
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@GUI__DispS
; Line 100
	jmp	SHORT $LN21@GUI__DispS
$LN1@GUI__DispS:
; Line 101
	jmp	$LN8@GUI__DispS
$LN21@GUI__DispS:
; Line 102
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@GUI__DispS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@GUI__DispS:
	DD	2
	DD	$LN25@GUI__DispS
$LN25@GUI__DispS:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN23@GUI__DispS
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN24@GUI__DispS
$LN24@GUI__DispS:
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	0
$LN23@GUI__DispS:
	DB	114					; 00000072H
	DB	0
_GUI__DispStringInRect ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispStringInRectMax
EXTRN	_GUI__IntersectRects:PROC
EXTRN	_WM_SetUserClipRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispStringInRectMax
_TEXT	SEGMENT
_r$9171 = -24						; size = 8
_pOldClipRect$9169 = -8					; size = 4
_s$ = 8							; size = 4
_pRect$ = 12						; size = 4
_TextAlign$ = 16					; size = 4
_MaxLen$ = 20						; size = 4
_GUI_DispStringInRectMax PROC				; COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 110
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN4@GUI_DispSt
; Line 111
	mov	DWORD PTR _pOldClipRect$9169[ebp], 0
; Line 114
	cmp	DWORD PTR _pRect$[ebp], 0
	je	SHORT $LN2@GUI_DispSt
; Line 115
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
	mov	DWORD PTR _pOldClipRect$9169[ebp], eax
; Line 116
	cmp	DWORD PTR _pOldClipRect$9169[ebp], 0
	je	SHORT $LN2@GUI_DispSt
; Line 117
	mov	eax, DWORD PTR _pOldClipRect$9169[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$9171[ebp]
	push	edx
	call	_GUI__IntersectRects
	add	esp, 12					; 0000000cH
; Line 118
	lea	eax, DWORD PTR _r$9171[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
$LN2@GUI_DispSt:
; Line 121
	mov	eax, DWORD PTR _MaxLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TextAlign$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__DispStringInRect
	add	esp, 16					; 00000010H
; Line 122
	mov	eax, DWORD PTR _pOldClipRect$9169[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
$LN4@GUI_DispSt:
; Line 125
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GUI_DispSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@GUI_DispSt:
	DD	1
	DD	$LN7@GUI_DispSt
$LN7@GUI_DispSt:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN6@GUI_DispSt
$LN6@GUI_DispSt:
	DB	114					; 00000072H
	DB	0
_GUI_DispStringInRectMax ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispStringInRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispStringInRect
_TEXT	SEGMENT
_s$ = 8							; size = 4
_pRect$ = 12						; size = 4
_TextAlign$ = 16					; size = 4
_GUI_DispStringInRect PROC				; COMDAT
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 148
	push	32767					; 00007fffH
	mov	eax, DWORD PTR _TextAlign$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI_DispStringInRectMax
	add	esp, 16					; 00000010H
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispStringInRect ENDP
_TEXT	ENDS
END
