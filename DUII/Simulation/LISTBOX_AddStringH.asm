; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTBOX_AddStringH.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	_LISTBOX_AddStringH
EXTRN	_LISTBOX__InvalidateItem:PROC
EXTRN	_LISTBOX_UpdateScrollers:PROC
EXTRN	_LISTBOX__AddSize:PROC
EXTRN	_LISTBOX__InvalidateItemSize:PROC
EXTRN	_strcpy:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	_GUI_ARRAY_AddItem:PROC
EXTRN	_LISTBOX_LockH:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_strlen:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listbox_addstringh.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTBOX_AddStringH
_TEXT	SEGMENT
_ItemArray$ = -92					; size = 4
_Len$ = -80						; size = 4
_ItemIndex$ = -68					; size = 4
_s$ = -56						; size = 4
_pItem$ = -44						; size = 4
_Item$ = -32						; size = 12
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_hString$ = 12						; size = 4
_LISTBOX_AddStringH PROC				; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 41
	xor	eax, eax
	mov	WORD PTR _Item$[ebp], ax
	xor	eax, eax
	mov	DWORD PTR _Item$[ebp+2], eax
	mov	DWORD PTR _Item$[ebp+6], eax
	mov	WORD PTR _Item$[ebp+10], ax
; Line 48
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN3@LISTBOX_Ad
	cmp	DWORD PTR _hString$[ebp], 0
	je	$LN3@LISTBOX_Ad
; Line 50
	mov	eax, DWORD PTR _hString$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _Len$[ebp], eax
; Line 52
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$[ebp], 0
; Line 53
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 55
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 56
	mov	eax, DWORD PTR _Len$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ItemArray$[ebp]
	push	edx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN3@LISTBOX_Ad
; Line 57
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _ItemIndex$[ebp], eax
; Line 58
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 59
	mov	eax, DWORD PTR _hString$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 60
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 61
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 9
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 62
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 63
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$[ebp], 0
; Line 64
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemSize
	add	esp, 8
; Line 66
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__AddSize
	add	esp, 8
; Line 67
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 68
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 69
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItem
	add	esp, 8
$LN3@LISTBOX_Ad:
; Line 73
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LISTBOX_Ad
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LISTBOX_Ad:
	DD	1
	DD	$LN6@LISTBOX_Ad
$LN6@LISTBOX_Ad:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN5@LISTBOX_Ad
$LN5@LISTBOX_Ad:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_LISTBOX_AddStringH ENDP
_TEXT	ENDS
END
