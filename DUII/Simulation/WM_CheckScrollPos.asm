; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_CheckScrollPos.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_CheckScrollBounds
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_checkscrollpos.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_CheckScrollBounds
_TEXT	SEGMENT
_Max$ = -8						; size = 4
_pScrollState$ = 8					; size = 4
_WM_CheckScrollBounds PROC				; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR _pScrollState$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _Max$[ebp], edx
; Line 44
	jns	SHORT $LN3@WM_CheckSc
; Line 45
	mov	DWORD PTR _Max$[ebp], 0
$LN3@WM_CheckSc:
; Line 48
	mov	eax, DWORD PTR _pScrollState$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jge	SHORT $LN2@WM_CheckSc
; Line 49
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN2@WM_CheckSc:
; Line 51
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _Max$[ebp]
	jle	SHORT $LN4@WM_CheckSc
; Line 52
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR _Max$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN4@WM_CheckSc:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_CheckScrollBounds ENDP
_TEXT	ENDS
PUBLIC	_WM_CheckScrollPos
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_CheckScrollPos
_TEXT	SEGMENT
_vOld$ = -8						; size = 4
_pScrollState$ = 8					; size = 4
_Pos$ = 12						; size = 4
_LowerDist$ = 16					; size = 4
_UpperDist$ = 20					; size = 4
_WM_CheckScrollPos PROC					; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _vOld$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pScrollState$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [ecx+eax-1]
	cmp	DWORD PTR _Pos$[ebp], ecx
	jle	SHORT $LN2@WM_CheckSc@2
; Line 69
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _Pos$[ebp]
	sub	edx, ecx
	add	edx, DWORD PTR _UpperDist$[ebp]
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	DWORD PTR [eax+4], edx
$LN2@WM_CheckSc@2:
; Line 72
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR _Pos$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	jge	SHORT $LN1@WM_CheckSc@2
; Line 73
	mov	eax, DWORD PTR _Pos$[ebp]
	sub	eax, DWORD PTR _LowerDist$[ebp]
	mov	ecx, DWORD PTR _pScrollState$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN1@WM_CheckSc@2:
; Line 75
	mov	eax, DWORD PTR _pScrollState$[ebp]
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 76
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR _vOld$[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_CheckScrollPos ENDP
_TEXT	ENDS
PUBLIC	_WM_SetScrollValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_SetScrollValue
_TEXT	SEGMENT
_vOld$ = -8						; size = 4
_pScrollState$ = 8					; size = 4
_v$ = 12						; size = 4
_WM_SetScrollValue PROC					; COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _vOld$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 90
	mov	eax, DWORD PTR _pScrollState$[ebp]
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 91
	mov	eax, DWORD PTR _pScrollState$[ebp]
	mov	eax, DWORD PTR [eax+4]
	sub	eax, DWORD PTR _vOld$[ebp]
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetScrollValue ENDP
_TEXT	ENDS
END
