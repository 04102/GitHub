; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\Config\LCDConf.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_X_Config
EXTRN	_LCD_SetVRAMAddrEx:PROC
EXTRN	_LCD_SetVSizeEx:PROC
EXTRN	_LCD_SetSizeEx:PROC
EXTRN	_GUI_DEVICE_CreateAndLink:PROC
EXTRN	_GUIDRV_Win_API:BYTE
EXTRN	_LCD_API_ColorConv_M565:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\config\lcdconf.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LCD_X_Config
_TEXT	SEGMENT
_LCD_X_Config PROC					; COMDAT
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 151
	push	0
	push	0
	push	OFFSET _LCD_API_ColorConv_M565
	push	OFFSET _GUIDRV_Win_API
	call	_GUI_DEVICE_CreateAndLink
	add	esp, 16					; 00000010H
; Line 155
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	call	_LCD_SetSizeEx
	add	esp, 12					; 0000000cH
; Line 156
	push	816					; 00000330H
	push	480					; 000001e0H
	push	0
	call	_LCD_SetVSizeEx
	add	esp, 12					; 0000000cH
; Line 157
	push	0
	push	0
	call	_LCD_SetVRAMAddrEx
	add	esp, 8
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_X_Config ENDP
_TEXT	ENDS
PUBLIC	_LCD_X_DisplayDriver
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_X_DisplayDriver
_TEXT	SEGMENT
tv64 = -244						; size = 4
_p$6257 = -44						; size = 4
_p$6254 = -32						; size = 4
_p$6251 = -20						; size = 4
_r$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_Cmd$ = 12						; size = 4
_pData$ = 16						; size = 4
_LCD_X_DisplayDriver PROC				; COMDAT
; Line 187
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 190
	mov	eax, DWORD PTR _Cmd$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 5
	ja	SHORT $LN1@LCD_X_Disp
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@LCD_X_Disp[edx*4]
$LN7@LCD_X_Disp:
; Line 201
	call	__InitController
; Line 202
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN6@LCD_X_Disp:
; Line 210
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _p$6251[ebp], eax
; Line 211
	mov	eax, DWORD PTR _p$6251[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	__SetVRAMAddr
	add	esp, 4
; Line 212
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN5@LCD_X_Disp:
; Line 219
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _p$6254[ebp], eax
; Line 220
	mov	eax, DWORD PTR _p$6254[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _p$6254[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	__SetOrg
	add	esp, 8
; Line 221
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN4@LCD_X_Disp:
; Line 228
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _p$6257[ebp], eax
; Line 229
	mov	eax, DWORD PTR _p$6257[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _p$6257[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	__SetLUTEntry
	add	esp, 8
; Line 230
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN3@LCD_X_Disp:
; Line 236
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN2@LCD_X_Disp:
; Line 243
	xor	eax, eax
	jmp	SHORT $LN10@LCD_X_Disp
$LN1@LCD_X_Disp:
; Line 246
	mov	DWORD PTR _r$[ebp], -1
; Line 248
	mov	eax, DWORD PTR _r$[ebp]
$LN10@LCD_X_Disp:
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@LCD_X_Disp:
	DD	$LN7@LCD_X_Disp
	DD	$LN6@LCD_X_Disp
	DD	$LN5@LCD_X_Disp
	DD	$LN4@LCD_X_Disp
	DD	$LN3@LCD_X_Disp
	DD	$LN2@LCD_X_Disp
_LCD_X_DisplayDriver ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __InitController
_TEXT	SEGMENT
__InitController PROC					; COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__InitController ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetVRAMAddr
_TEXT	SEGMENT
_pVRAM$ = 8						; size = 4
__SetVRAMAddr PROC					; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetVRAMAddr ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetOrg
_TEXT	SEGMENT
_xPos$ = 8						; size = 4
_yPos$ = 12						; size = 4
__SetOrg PROC						; COMDAT
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetOrg ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetLUTEntry
_TEXT	SEGMENT
_Color$ = 8						; size = 4
_Pos$ = 12						; size = 1
__SetLUTEntry PROC					; COMDAT
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetLUTEntry ENDP
_TEXT	ENDS
END
