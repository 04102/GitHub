; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawPie.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawPie
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawpie.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawPie
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_a0$ = 20						; size = 4
_a1$ = 24						; size = 4
_Type$ = 28						; size = 4
_GUI_DrawPie PROC					; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 60
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 61
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawPi
$LN3@GUI_DrawPi:
; Line 63
	mov	eax, DWORD PTR _Type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _a0$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawPie
	add	esp, 24					; 00000018H
; Line 65
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawPi
$LN5@GUI_DrawPi:
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawPie ENDP
_TEXT	ENDS
EXTRN	_GL_DrawArc:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_GetPenSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawPie
_TEXT	SEGMENT
_PenSizeOld$ = -8					; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_Angle0$ = 20						; size = 4
_Angle1$ = 24						; size = 4
_Type$ = 28						; size = 4
__DrawPie PROC						; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	call	_GUI_GetPenSize
	movzx	eax, al
	mov	DWORD PTR _PenSizeOld$[ebp], eax
; Line 40
	movzx	eax, BYTE PTR _r$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 41
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 42
	mov	eax, DWORD PTR _Angle1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Angle0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_DrawArc
	add	esp, 24					; 00000018H
; Line 43
	movzx	eax, BYTE PTR _PenSizeOld$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 44
	mov	eax, DWORD PTR _Type$[ebp]
	mov	DWORD PTR _Type$[ebp], eax
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawPie ENDP
_TEXT	ENDS
END
