; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_Write.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_MEMDEV_WriteAt
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_GUI_MEMDEV__WriteToActiveAt:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_write.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV_WriteAt
_TEXT	SEGMENT
_r$9169 = -24						; size = 8
_pDevData$9168 = -8					; size = 4
_hMem$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_GUI_MEMDEV_WriteAt PROC				; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	cmp	DWORD PTR _hMem$[ebp], 0
	je	$LN7@GUI_MEMDEV
; Line 47
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pDevData$9168[ebp], eax
; Line 48
	cmp	DWORD PTR _x$[ebp], -4095		; fffff001H
	jne	SHORT $LN5@GUI_MEMDEV
; Line 49
	mov	eax, DWORD PTR _pDevData$9168[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _x$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _pDevData$9168[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _y$[ebp], ecx
$LN5@GUI_MEMDEV:
; Line 54
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _r$9169[ebp], ax
	movsx	ecx, WORD PTR _r$9169[ebp]
	mov	edx, DWORD PTR _pDevData$9168[ebp]
	movsx	eax, WORD PTR [edx+8]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _r$9169[ebp+4], cx
; Line 55
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _r$9169[ebp+2], ax
	movsx	ecx, WORD PTR _r$9169[ebp+2]
	mov	edx, DWORD PTR _pDevData$9168[ebp]
	movsx	eax, WORD PTR [edx+10]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _r$9169[ebp+6], cx
; Line 57
	lea	eax, DWORD PTR _r$9169[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@GUI_MEMDEV
$LN3@GUI_MEMDEV:
; Line 58
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMem$[ebp]
	push	edx
	call	_GUI_MEMDEV__WriteToActiveAt
	add	esp, 12					; 0000000cH
; Line 59
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_MEMDEV
$LN7@GUI_MEMDEV:
; Line 65
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_MEMDEV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@GUI_MEMDEV:
	DD	1
	DD	$LN10@GUI_MEMDEV
$LN10@GUI_MEMDEV:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN9@GUI_MEMDEV
$LN9@GUI_MEMDEV:
	DB	114					; 00000072H
	DB	0
_GUI_MEMDEV_WriteAt ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV_Write
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV_Write
_TEXT	SEGMENT
_hMem$ = 8						; size = 4
_GUI_MEMDEV_Write PROC					; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	push	-4095					; fffff001H
	push	-4095					; fffff001H
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_MEMDEV_WriteAt
	add	esp, 12					; 0000000cH
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_Write ENDP
_TEXT	ENDS
END
