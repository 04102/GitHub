; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_SetOrientation.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUIDRV_Rotate_API
_DATA	SEGMENT
$SG8626	DB	'c:\duii\simulation\gui\core\gui_setorientation.c: Memory'
	DB	' allocation failed', 00H
	ORG $+5
$SG8643	DB	'c:\duii\simulation\gui\core\gui_setorientation.c: Memory'
	DB	' allocation failed', 00H
_DATA	ENDS
CONST	SEGMENT
_GUIDRV_Rotate_API DD 00H
	DD	FLAT:__DrawBitmap
	DD	FLAT:__DrawHLine
	DD	FLAT:__DrawVLine
	DD	FLAT:__FillRect
	DD	FLAT:__GetPixelIndex
	DD	FLAT:__SetPixelIndex
	DD	FLAT:__XorPixel
	DD	FLAT:__SetOrg
	DD	FLAT:__GetDevFunc
	DD	FLAT:__GetDevProp
	DD	FLAT:__GetDevData
	DD	FLAT:__GetRect
CONST	ENDS
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_setorientation.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DrawBitmap
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_xSize$ = 20						; size = 4
_ySize$ = 24						; size = 4
_BitsPerPixel$ = 28					; size = 4
_BytesPerLine$ = 32					; size = 4
_pData$ = 36						; size = 4
_Diff$ = 40						; size = 4
_pTrans$ = 44						; size = 4
__DrawBitmap PROC					; COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 90
	mov	esi, esp
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Diff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pData$[ebp]
	push	edx
	mov	eax, DWORD PTR _BytesPerLine$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BitsPerPixel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ySize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPixelIndex
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__GetPixelIndex PROC					; COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 100
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPixelIndex ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetPixelIndex
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_PixelIndex$ = 20					; size = 4
__SetPixelIndex PROC					; COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR _PixelIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+20]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetPixelIndex ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __XorPixel
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__XorPixel PROC						; COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 122
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 123
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__XorPixel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawHLine
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x0$ = 12						; size = 4
_y$ = 16						; size = 4
_x1$ = 20						; size = 4
__DrawHLine PROC					; COMDAT
; Line 130
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 133
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 134
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawHLine ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawVLine
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x$ = 12						; size = 4
_y0$ = 16						; size = 4
_y1$ = 20						; size = 4
__DrawVLine PROC					; COMDAT
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 144
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+40]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawVLine ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __FillRect
_TEXT	SEGMENT
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
__FillRect PROC						; COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 155
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 156
	mov	esi, esp
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+40]
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__FillRect ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetOrg
_TEXT	SEGMENT
_pDevice$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__SetOrg PROC						; COMDAT
; Line 169
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 170
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 171
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+32]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetOrg ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetDevFunc
_TEXT	SEGMENT
tv64 = -196						; size = 4
_ppDevice$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetDevFunc PROC					; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 179
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN1@GetDevFunc
	jmp	SHORT $LN2@GetDevFunc
$LN1@GetDevFunc:
; Line 181
	xor	eax, eax
	jmp	SHORT $LN4@GetDevFunc
$LN2@GetDevFunc:
; Line 183
	mov	eax, DWORD PTR _ppDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _ppDevice$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
; Line 184
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ppDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ppDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+36]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@GetDevFunc:
; Line 185
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetDevFunc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetDevProp
_TEXT	SEGMENT
tv89 = -208						; size = 4
tv83 = -208						; size = 4
tv77 = -208						; size = 4
tv71 = -208						; size = 4
tv65 = -208						; size = 4
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetDevProp PROC					; COMDAT
; Line 191
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 194
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 195
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 13			; 0000000dH
	ja	$LN8@GetDevProp
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN20@GetDevProp[edx]
	jmp	DWORD PTR $LN21@GetDevProp[eax*4]
$LN7@GetDevProp:
; Line 197
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN12@GetDevProp
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+20]
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN13@GetDevProp
$LN12@GetDevProp:
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR tv71[ebp], edx
$LN13@GetDevProp:
	mov	eax, DWORD PTR tv71[ebp]
	jmp	$LN10@GetDevProp
$LN6@GetDevProp:
; Line 199
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN14@GetDevProp
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	DWORD PTR tv77[ebp], eax
	jmp	SHORT $LN15@GetDevProp
$LN14@GetDevProp:
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR tv77[ebp], edx
$LN15@GetDevProp:
	mov	eax, DWORD PTR tv77[ebp]
	jmp	$LN10@GetDevProp
$LN5@GetDevProp:
; Line 201
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN16@GetDevProp
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+28]
	mov	DWORD PTR tv83[ebp], eax
	jmp	SHORT $LN17@GetDevProp
$LN16@GetDevProp:
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv83[ebp], edx
$LN17@GetDevProp:
	mov	eax, DWORD PTR tv83[ebp]
	jmp	$LN10@GetDevProp
$LN4@GetDevProp:
; Line 203
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN18@GetDevProp
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+24]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN19@GetDevProp
$LN18@GetDevProp:
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR tv89[ebp], edx
$LN19@GetDevProp:
	mov	eax, DWORD PTR tv89[ebp]
	jmp	SHORT $LN10@GetDevProp
$LN3@GetDevProp:
; Line 205
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	neg	eax
	jmp	SHORT $LN10@GetDevProp
$LN2@GetDevProp:
; Line 207
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	neg	eax
	jmp	SHORT $LN10@GetDevProp
$LN1@GetDevProp:
; Line 209
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [eax+12]
	and	eax, 4
	neg	eax
	sbb	eax, eax
	neg	eax
	jmp	SHORT $LN10@GetDevProp
$LN8@GetDevProp:
; Line 211
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 212
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+40]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@GetDevProp:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@GetDevProp:
	DD	$LN7@GetDevProp
	DD	$LN6@GetDevProp
	DD	$LN5@GetDevProp
	DD	$LN4@GetDevProp
	DD	$LN3@GetDevProp
	DD	$LN2@GetDevProp
	DD	$LN1@GetDevProp
	DD	$LN8@GetDevProp
$LN20@GetDevProp:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	5
	DB	6
__GetDevProp ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetDevData
_TEXT	SEGMENT
_pDevice$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetDevData PROC					; COMDAT
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 221
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+44]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 222
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetDevData ENDP
_TEXT	ENDS
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetRect
_TEXT	SEGMENT
_Rect$ = -24						; size = 8
_pContext$ = -8						; size = 4
_pDevice$ = 8						; size = 4
_pRect$ = 12						; size = 4
__GetRect PROC						; COMDAT
; Line 228
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 233
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 234
	mov	esi, esp
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+48]
	call	ecx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 235
	xor	eax, eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
	xor	edx, edx
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [eax], dx
; Line 236
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	and	ecx, 4
	je	SHORT $LN2@GetRect
; Line 237
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$[ebp+6]
	mov	WORD PTR [eax+4], cx
; Line 238
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$[ebp+4]
	mov	WORD PTR [eax+6], cx
; Line 239
	jmp	SHORT $LN3@GetRect
$LN2@GetRect:
; Line 240
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$[ebp+4]
	mov	WORD PTR [eax+4], cx
; Line 241
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$[ebp+6]
	mov	WORD PTR [eax+6], cx
$LN3@GetRect:
; Line 243
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@GetRect:
	DD	1
	DD	$LN6@GetRect
$LN6@GetRect:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN5@GetRect
$LN5@GetRect:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetRect ENDP
_TEXT	ENDS
PUBLIC	_GUI_SetOrientationExCached
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_GetFixedBlock:PROC
EXTRN	_GUI_DEVICE_Link:PROC
EXTRN	_GUI_DEVICE_Create:PROC
EXTRN	_GUI_DEVICE__GetpDriver:PROC
EXTRN	_LCD_SetVSizeEx:PROC
EXTRN	_LCD_SetSizeEx:PROC
EXTRN	_GUIDRV_Win_API:BYTE
EXTRN	_LCD_GetVYSizeEx:PROC
EXTRN	_LCD_GetVXSizeEx:PROC
EXTRN	_LCD_GetYSizeEx:PROC
EXTRN	_LCD_GetXSizeEx:PROC
EXTRN	_GUI_DEVICE_Delete:PROC
EXTRN	_GUI_DEVICE_Unlink:PROC
EXTRN	_GUI_ALLOC_FreeFixedBlock:PROC
EXTRN	_GUI_DEVICE__GetpDevice:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SetOrientationExCached
_TEXT	SEGMENT
tv153 = -280						; size = 4
_ySize$ = -80						; size = 4
_xSize$ = -68						; size = 4
_vySize$ = -56						; size = 4
_vxSize$ = -44						; size = 4
_pContext$ = -32					; size = 4
_pDriver$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_Orientation$ = 8					; size = 4
_LayerIndex$ = 12					; size = 4
_pAPI$ = 16						; size = 4
_GUI_SetOrientationExCached PROC			; COMDAT
; Line 293
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 303
	push	0
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDevice
	add	esp, 8
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 304
	mov	eax, DWORD PTR _pDevice$[ebp]
	cmp	DWORD PTR [eax+12], OFFSET _GUIDRV_Rotate_API
	jne	SHORT $LN18@GUI_SetOri
; Line 305
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 306
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN17@GUI_SetOri
; Line 307
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_FreeFixedBlock
	add	esp, 4
$LN17@GUI_SetOri:
; Line 309
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_ALLOC_FreeFixedBlock
	add	esp, 4
; Line 310
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	_GUI_DEVICE_Unlink
	add	esp, 4
; Line 311
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	_GUI_DEVICE_Delete
	add	esp, 4
$LN18@GUI_SetOri:
; Line 316
	cmp	DWORD PTR _Orientation$[ebp], 0
	jne	SHORT $LN16@GUI_SetOri
; Line 317
	mov	eax, 1
	jmp	$LN19@GUI_SetOri
$LN16@GUI_SetOri:
; Line 322
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_LCD_GetXSizeEx
	add	esp, 4
	mov	DWORD PTR _xSize$[ebp], eax
; Line 323
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_LCD_GetYSizeEx
	add	esp, 4
	mov	DWORD PTR _ySize$[ebp], eax
; Line 324
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_LCD_GetVXSizeEx
	add	esp, 4
	mov	DWORD PTR _vxSize$[ebp], eax
; Line 325
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_LCD_GetVYSizeEx
	add	esp, 4
	mov	DWORD PTR _vySize$[ebp], eax
; Line 330
	push	0
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDevice
	add	esp, 8
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 331
	mov	eax, DWORD PTR _pDevice$[ebp]
	cmp	DWORD PTR [eax+12], OFFSET _GUIDRV_Win_API
	jne	SHORT $LN15@GUI_SetOri
; Line 332
	mov	eax, DWORD PTR _Orientation$[ebp]
	and	eax, 4
	je	SHORT $LN14@GUI_SetOri
; Line 333
	mov	eax, DWORD PTR _xSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ySize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _LayerIndex$[ebp]
	push	edx
	call	_LCD_SetSizeEx
	add	esp, 12					; 0000000cH
; Line 334
	mov	eax, DWORD PTR _vxSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _vySize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _LayerIndex$[ebp]
	push	edx
	call	_LCD_SetVSizeEx
	add	esp, 12					; 0000000cH
$LN14@GUI_SetOri:
; Line 336
	xor	eax, eax
	jmp	$LN19@GUI_SetOri
$LN15@GUI_SetOri:
; Line 342
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDriver$[ebp], eax
; Line 343
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pDriver$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	OFFSET _GUIDRV_Rotate_API
	call	_GUI_DEVICE_Create
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 347
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN13@GUI_SetOri
; Line 348
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	_GUI_DEVICE_Link
	add	esp, 4
$LN13@GUI_SetOri:
; Line 353
	push	44					; 0000002cH
	call	_GUI_ALLOC_GetFixedBlock
	add	esp, 4
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 354
	mov	eax, DWORD PTR _pDevice$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN12@GUI_SetOri
; Line 355
	push	OFFSET $SG8626
	call	_GUI_ErrorOut
	add	esp, 4
; Line 356
	mov	eax, 1
	jmp	$LN19@GUI_SetOri
$LN12@GUI_SetOri:
; Line 358
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pContext$[ebp], ecx
; Line 362
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 363
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 364
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _vxSize$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 365
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _vySize$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 366
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Orientation$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 367
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pAPI$[ebp]
	mov	DWORD PTR [eax+40], ecx
; Line 371
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv153[ebp], ecx
	mov	edx, DWORD PTR tv153[ebp]
	sub	edx, 1
	mov	DWORD PTR tv153[ebp], edx
	cmp	DWORD PTR tv153[ebp], 6
	ja	$LN10@GUI_SetOri
	mov	eax, DWORD PTR tv153[ebp]
	jmp	DWORD PTR $LN21@GUI_SetOri[eax*4]
$LN9@GUI_SetOri:
; Line 373
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_X
; Line 374
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+32], -1
; Line 375
	jmp	$LN10@GUI_SetOri
$LN8@GUI_SetOri:
; Line 377
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_Y
; Line 378
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+32], 1
; Line 379
	jmp	SHORT $LN10@GUI_SetOri
$LN7@GUI_SetOri:
; Line 381
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_XY
; Line 382
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+32], -1
; Line 383
	jmp	SHORT $LN10@GUI_SetOri
$LN6@GUI_SetOri:
; Line 385
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_S
; Line 386
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+32], edx
; Line 387
	jmp	SHORT $LN10@GUI_SetOri
$LN5@GUI_SetOri:
; Line 389
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_SX
; Line 390
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+32], edx
; Line 391
	jmp	SHORT $LN10@GUI_SetOri
$LN4@GUI_SetOri:
; Line 393
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_SY
; Line 394
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	neg	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+32], ecx
; Line 395
	jmp	SHORT $LN10@GUI_SetOri
$LN3@GUI_SetOri:
; Line 397
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+36], OFFSET __Log2Phys_SXY
; Line 398
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	neg	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+32], ecx
$LN10@GUI_SetOri:
; Line 404
	mov	eax, DWORD PTR _pAPI$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN2@GUI_SetOri
; Line 405
	mov	eax, DWORD PTR _vxSize$[ebp]
	imul	eax, DWORD PTR _vySize$[ebp]
	mov	ecx, DWORD PTR _pAPI$[ebp]
	imul	eax, DWORD PTR [ecx+28]
	push	eax
	call	_GUI_ALLOC_GetFixedBlock
	add	esp, 4
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx], eax
; Line 406
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN1@GUI_SetOri
; Line 407
	push	OFFSET $SG8643
	call	_GUI_ErrorOut
	add	esp, 4
; Line 408
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_ALLOC_FreeFixedBlock
	add	esp, 4
; Line 409
	mov	eax, 1
	jmp	SHORT $LN19@GUI_SetOri
$LN1@GUI_SetOri:
; Line 411
	mov	eax, DWORD PTR _pAPI$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	imul	ecx, DWORD PTR _vxSize$[ebp]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+8], ecx
$LN2@GUI_SetOri:
; Line 413
	xor	eax, eax
$LN19@GUI_SetOri:
; Line 414
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN21@GUI_SetOri:
	DD	$LN9@GUI_SetOri
	DD	$LN8@GUI_SetOri
	DD	$LN7@GUI_SetOri
	DD	$LN6@GUI_SetOri
	DD	$LN5@GUI_SetOri
	DD	$LN4@GUI_SetOri
	DD	$LN3@GUI_SetOri
_GUI_SetOrientationExCached ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_X
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_X PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	sub	ecx, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _px_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 39
	mov	eax, DWORD PTR _py_phys$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_X ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_Y
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_Y PROC					; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _px_phys$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 43
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	sub	ecx, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _py_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 44
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_Y ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_XY
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_XY PROC					; COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	sub	ecx, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _px_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 47
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	sub	ecx, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _py_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_XY ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_S
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_S PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR _pContext$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _px_phys$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 52
	mov	eax, DWORD PTR _py_phys$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_S ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_SX
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_SX PROC					; COMDAT
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 55
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	sub	ecx, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _px_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 56
	mov	eax, DWORD PTR _py_phys$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_SX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_SY
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_SY PROC					; COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	eax, DWORD PTR _px_phys$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 60
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	sub	ecx, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _py_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_SY ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Log2Phys_SXY
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_px_phys$ = 20						; size = 4
_py_phys$ = 24						; size = 4
__Log2Phys_SXY PROC					; COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 63
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	sub	ecx, DWORD PTR _y$[ebp]
	mov	edx, DWORD PTR _px_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 64
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	sub	ecx, 1
	sub	ecx, DWORD PTR _x$[ebp]
	mov	edx, DWORD PTR _py_phys$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Log2Phys_SXY ENDP
_TEXT	ENDS
PUBLIC	_GUI_SetOrientationEx
EXTRN	_GUI_OrientationAPI_C32:BYTE
EXTRN	_GUI_OrientationAPI_C16:BYTE
EXTRN	_GUI_OrientationAPI_C8:BYTE
EXTRN	_GUI_OrientationAPI_C0:BYTE
EXTRN	_LCD_GetBitsPerPixelEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SetOrientationEx
_TEXT	SEGMENT
_BitsPerPixel$ = -8					; size = 4
_Orientation$ = 8					; size = 4
_LayerIndex$ = 12					; size = 4
_GUI_SetOrientationEx PROC				; COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 423
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_LCD_GetBitsPerPixelEx
	add	esp, 4
	mov	DWORD PTR _BitsPerPixel$[ebp], eax
; Line 424
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jge	SHORT $LN6@GUI_SetOri@2
; Line 425
	push	OFFSET _GUI_OrientationAPI_C0
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Orientation$[ebp]
	push	ecx
	call	_GUI_SetOrientationExCached
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@GUI_SetOri@2
	jmp	SHORT $LN7@GUI_SetOri@2
$LN6@GUI_SetOri@2:
; Line 426
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jne	SHORT $LN4@GUI_SetOri@2
; Line 427
	push	OFFSET _GUI_OrientationAPI_C8
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Orientation$[ebp]
	push	ecx
	call	_GUI_SetOrientationExCached
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@GUI_SetOri@2
	jmp	SHORT $LN7@GUI_SetOri@2
$LN4@GUI_SetOri@2:
; Line 428
	cmp	DWORD PTR _BitsPerPixel$[ebp], 16	; 00000010H
	jg	SHORT $LN2@GUI_SetOri@2
; Line 429
	push	OFFSET _GUI_OrientationAPI_C16
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Orientation$[ebp]
	push	ecx
	call	_GUI_SetOrientationExCached
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@GUI_SetOri@2
; Line 430
	jmp	SHORT $LN7@GUI_SetOri@2
$LN2@GUI_SetOri@2:
; Line 431
	push	OFFSET _GUI_OrientationAPI_C32
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Orientation$[ebp]
	push	ecx
	call	_GUI_SetOrientationExCached
	add	esp, 12					; 0000000cH
$LN7@GUI_SetOri@2:
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SetOrientationEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_SetOrientation
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SetOrientation
_TEXT	SEGMENT
_Orientation$ = 8					; size = 4
_GUI_SetOrientation PROC				; COMDAT
; Line 439
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	mov	ecx, DWORD PTR _Orientation$[ebp]
	push	ecx
	call	_GUI_SetOrientationEx
	add	esp, 8
; Line 441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SetOrientation ENDP
_TEXT	ENDS
END
