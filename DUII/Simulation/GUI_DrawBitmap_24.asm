; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawBitmap_24.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_BitmapMethods24
EXTRN	_LCD_Index2Color_888:PROC
CONST	SEGMENT
_GUI_BitmapMethods24 DD FLAT:__DrawBitmap
	DD	FLAT:_LCD_Index2Color_888
	ORG $+4
CONST	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_SetColorIndex:PROC
EXTRN	_LCD_GetNextPixelAPI:PROC
EXTRN	_LCD_GetpfColor2IndexEx:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawbitmap_24.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DrawBitmap
_TEXT	SEGMENT
tv138 = -424						; size = 4
_xi$8394 = -224						; size = 4
_yMax$8392 = -212					; size = 4
_yi$8388 = -200						; size = 4
_y$8387 = -188						; size = 4
_x$8386 = -176						; size = 4
_PrevColor$8385 = -164					; size = 4
_Diff$8366 = -152					; size = 4
_y1$8365 = -140						; size = 4
_x1$8364 = -128						; size = 4
_x$8363 = -116						; size = 4
_pNextPixel_API$ = -104					; size = 4
_pfColor2Index$ = -92					; size = 4
_BytesPerLine$ = -80					; size = 4
_Index$ = -68						; size = 4
_Color$ = -56						; size = 4
_pSrc$ = -44						; size = 4
_b$ = -29						; size = 1
_g$ = -17						; size = 1
_r$ = -5						; size = 1
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_pLogPal$ = 28						; size = 4
_xMag$ = 32						; size = 4
_yMag$ = 36						; size = 4
__DrawBitmap PROC					; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 424				; 000001a8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-424]
	mov	ecx, 106				; 0000006aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	eax, DWORD PTR _pLogPal$[ebp]
	mov	DWORD PTR _pLogPal$[ebp], eax
; Line 53
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_LCD_GetpfColor2IndexEx
	add	esp, 4
	mov	DWORD PTR _pfColor2Index$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _xSize$[ebp]
	imul	eax, 3
	mov	DWORD PTR _BytesPerLine$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _xMag$[ebp]
	or	eax, DWORD PTR _yMag$[ebp]
	cmp	eax, 1
	jne	$LN22@DrawBitmap
; Line 57
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _y1$8365[ebp], edx
; Line 58
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _x1$8364[ebp], edx
; Line 62
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y0$[ebp], eax
	jge	SHORT $LN21@DrawBitmap
; Line 63
	movsx	eax, WORD PTR _GUI_Context+10
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _Diff$8366[ebp], eax
; Line 64
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _Diff$8366[ebp]
	imul	eax, DWORD PTR _BytesPerLine$[ebp]
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8366[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN21@DrawBitmap:
; Line 72
	movsx	eax, WORD PTR _GUI_Context+14
	mov	ecx, DWORD PTR _y1$8365[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8366[ebp], ecx
; Line 73
	cmp	DWORD PTR _Diff$8366[ebp], 0
	jle	SHORT $LN20@DrawBitmap
; Line 74
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8366[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN20@DrawBitmap:
; Line 76
	cmp	DWORD PTR _ySize$[ebp], 0
	jg	SHORT $LN19@DrawBitmap
; Line 77
	jmp	$LN23@DrawBitmap
$LN19@DrawBitmap:
; Line 82
	movsx	eax, WORD PTR _GUI_Context+12
	mov	ecx, DWORD PTR _x1$8364[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8366[ebp], ecx
; Line 83
	cmp	DWORD PTR _Diff$8366[ebp], 0
	jle	SHORT $LN18@DrawBitmap
; Line 84
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8366[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
$LN18@DrawBitmap:
; Line 89
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN17@DrawBitmap
; Line 90
	movsx	eax, WORD PTR _GUI_Context+8
	sub	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _Diff$8366[ebp], eax
; Line 91
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8366[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
; Line 92
	mov	eax, DWORD PTR _Diff$8366[ebp]
	imul	eax, 3
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
; Line 93
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8366[ebp]
	mov	DWORD PTR _x0$[ebp], eax
$LN17@DrawBitmap:
; Line 95
	cmp	DWORD PTR _xSize$[ebp], 0
	jg	SHORT $LN16@DrawBitmap
; Line 96
	jmp	$LN23@DrawBitmap
$LN16@DrawBitmap:
; Line 101
	call	_LCD_GetNextPixelAPI
	mov	DWORD PTR _pNextPixel_API$[ebp], eax
; Line 105
	mov	esi, esp
	mov	eax, DWORD PTR _y1$8365[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$8364[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@DrawBitmap:
; Line 106
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR _ySize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _ySize$[ebp], ecx
	cmp	DWORD PTR tv138[ebp], 0
	je	$LN14@DrawBitmap
; Line 107
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 108
	mov	DWORD PTR _x$8363[ebp], 0
	jmp	SHORT $LN13@DrawBitmap
$LN12@DrawBitmap:
	mov	eax, DWORD PTR _x$8363[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8363[ebp], eax
$LN13@DrawBitmap:
	mov	eax, DWORD PTR _x$8363[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN11@DrawBitmap
; Line 112
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _r$[ebp], cl
; Line 113
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR _g$[ebp], cl
; Line 114
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax+2]
	mov	BYTE PTR _b$[ebp], cl
; Line 115
	mov	eax, DWORD PTR _pSrc$[ebp]
	add	eax, 3
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 116
	movzx	eax, BYTE PTR _b$[ebp]
	shl	eax, 16					; 00000010H
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _r$[ebp]
	or	eax, edx
	mov	DWORD PTR _Color$[ebp], eax
; Line 117
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Index$[ebp], eax
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	jmp	SHORT $LN12@DrawBitmap
$LN11@DrawBitmap:
; Line 120
	cmp	DWORD PTR _ySize$[ebp], 0
	je	SHORT $LN10@DrawBitmap
; Line 121
	mov	eax, DWORD PTR _pNextPixel_API$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	mov	eax, DWORD PTR _pPixel$[ebp]
	add	eax, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
$LN10@DrawBitmap:
; Line 124
	jmp	$LN15@DrawBitmap
$LN14@DrawBitmap:
; Line 125
	mov	eax, DWORD PTR _pNextPixel_API$[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	jmp	$LN23@DrawBitmap
$LN22@DrawBitmap:
; Line 132
	mov	DWORD PTR _PrevColor$8385[ebp], 268435455 ; 0fffffffH
; Line 133
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y$8387[ebp], eax
	mov	DWORD PTR _yi$8388[ebp], 0
	jmp	SHORT $LN8@DrawBitmap
$LN7@DrawBitmap:
	mov	eax, DWORD PTR _yi$8388[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$8388[ebp], eax
	mov	ecx, DWORD PTR _y$8387[ebp]
	add	ecx, DWORD PTR _yMag$[ebp]
	mov	DWORD PTR _y$8387[ebp], ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], edx
$LN8@DrawBitmap:
	mov	eax, DWORD PTR _yi$8388[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jge	$LN23@DrawBitmap
; Line 135
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _y$8387[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yMax$8392[ebp], edx
; Line 136
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 138
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _yMax$8392[ebp], eax
	jl	$LN5@DrawBitmap
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$8387[ebp], eax
	jg	$LN5@DrawBitmap
; Line 140
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x$8386[ebp], eax
	mov	DWORD PTR _xi$8394[ebp], 0
	jmp	SHORT $LN4@DrawBitmap
$LN3@DrawBitmap:
	mov	eax, DWORD PTR _xi$8394[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$8394[ebp], eax
	mov	ecx, DWORD PTR _x$8386[ebp]
	add	ecx, DWORD PTR _xMag$[ebp]
	mov	DWORD PTR _x$8386[ebp], ecx
$LN4@DrawBitmap:
	mov	eax, DWORD PTR _xi$8394[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	$LN5@DrawBitmap
; Line 144
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _r$[ebp], cl
; Line 145
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR _g$[ebp], cl
; Line 146
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	cl, BYTE PTR [eax+2]
	mov	BYTE PTR _b$[ebp], cl
; Line 147
	mov	eax, DWORD PTR _pSrc$[ebp]
	add	eax, 3
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 148
	movzx	eax, BYTE PTR _b$[ebp]
	shl	eax, 16					; 00000010H
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _r$[ebp]
	or	eax, edx
	mov	DWORD PTR _Color$[ebp], eax
; Line 149
	mov	eax, DWORD PTR _Color$[ebp]
	cmp	eax, DWORD PTR _PrevColor$8385[ebp]
	je	SHORT $LN1@DrawBitmap
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 151
	mov	eax, DWORD PTR _Color$[ebp]
	mov	DWORD PTR _PrevColor$8385[ebp], eax
$LN1@DrawBitmap:
; Line 153
	mov	eax, DWORD PTR _yMax$8392[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMag$[ebp]
	mov	edx, DWORD PTR _x$8386[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _y$8387[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$8386[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 154
	jmp	$LN3@DrawBitmap
$LN5@DrawBitmap:
; Line 156
	jmp	$LN7@DrawBitmap
$LN23@DrawBitmap:
; Line 158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 424				; 000001a8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap ENDP
_TEXT	ENDS
END
