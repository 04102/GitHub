; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\GearRatios.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_EighthPaint
PUBLIC	_DisplayEighth
PUBLIC	_SeventhPaint
PUBLIC	_DisplaySeventh
PUBLIC	_SixthPaint
PUBLIC	_DisplaySixth
PUBLIC	_FifthPaint
PUBLIC	_DisplayFifth
PUBLIC	_FourthPaint
PUBLIC	_DisplayFourth
PUBLIC	_ThirdPaint
PUBLIC	_DisplayThird
PUBLIC	_SecondPaint
PUBLIC	_DisplaySecond
PUBLIC	_FirstPaint
PUBLIC	_DisplayFirst
PUBLIC	_GearRatiosScreenList
_DATA	SEGMENT
COMM	_gearRatioString:BYTE:0aH
_DATA	ENDS
_BSS	SEGMENT
_pFirst	DD	01H DUP (?)
_pSecond DD	01H DUP (?)
_pThird	DD	01H DUP (?)
_pFourth DD	01H DUP (?)
_pFifth	DD	01H DUP (?)
_pSixth	DD	01H DUP (?)
_pSeventh DD	01H DUP (?)
_pEighth DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_GearRatiosScreenList DD 00H
	DD	FLAT:_DisplayFirst
	DD	FLAT:_FirstPaint
	DD	01H
	DD	FLAT:_DisplaySecond
	DD	FLAT:_SecondPaint
	DD	02H
	DD	FLAT:_DisplayThird
	DD	FLAT:_ThirdPaint
	DD	03H
	DD	FLAT:_DisplayFourth
	DD	FLAT:_FourthPaint
	DD	04H
	DD	FLAT:_DisplayFifth
	DD	FLAT:_FifthPaint
	DD	05H
	DD	FLAT:_DisplaySixth
	DD	FLAT:_SixthPaint
	DD	06H
	DD	FLAT:_DisplaySeventh
	DD	FLAT:_SeventhPaint
	DD	07H
	DD	FLAT:_DisplayEighth
	DD	FLAT:_EighthPaint
	DD	0ffffffffH
	DD	00H
	DD	00H
$SG19440 DB	'%f', 00H
	ORG $+1
$SG19441 DB	'First Gear', 00H
	ORG $+1
$SG19445 DB	'%f', 00H
	ORG $+1
$SG19446 DB	'Second Gear', 00H
$SG19450 DB	'%f', 00H
	ORG $+1
$SG19451 DB	'Third Gear', 00H
	ORG $+1
$SG19455 DB	'%f', 00H
	ORG $+1
$SG19456 DB	'Fourth Gear', 00H
$SG19460 DB	'%f', 00H
	ORG $+1
$SG19461 DB	'Fifth Gear', 00H
	ORG $+1
$SG19465 DB	'%f', 00H
	ORG $+1
$SG19466 DB	'Sixth Gear', 00H
	ORG $+1
$SG19470 DB	'%f', 00H
	ORG $+1
$SG19471 DB	'Seventh Gear', 00H
	ORG $+3
$SG19475 DB	'%f', 00H
	ORG $+1
$SG19476 DB	'Eighth Gear', 00H
_DATA	ENDS
PUBLIC	_GetGearRatiosWindowHandle
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_hGearRatios DD	01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\gearratios.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GetGearRatiosWindowHandle
_TEXT	SEGMENT
_GetGearRatiosWindowHandle PROC				; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	eax, DWORD PTR _hGearRatios
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetGearRatiosWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetGearRatiosWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetGearRatiosWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetGearRatiosWindowHandle PROC				; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hGearRatios, eax
; Line 113
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetGearRatiosWindowHandle ENDP
_TEXT	ENDS
PUBLIC	__real@42c60000
PUBLIC	__real@4059000000000000
PUBLIC	_GearRatiosSaveData
EXTRN	_vehicleData:BYTE
EXTRN	_atof:PROC
EXTRN	_EnsurePositive:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
;	COMDAT __real@42c60000
CONST	SEGMENT
__real@42c60000 DD 042c60000r			; 99
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _GearRatiosSaveData
_TEXT	SEGMENT
_temp$ = -8						; size = 4
_type$ = 8						; size = 4
_GearRatiosSaveData PROC				; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 120
	push	OFFSET _gearRatioString
	call	_EnsurePositive
	add	esp, 4
; Line 121
	push	OFFSET _gearRatioString
	call	_atof
	add	esp, 4
	fstp	DWORD PTR _temp$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fcomp	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN16@GearRatios
; Line 122
	fld	DWORD PTR __real@42c60000
	fstp	DWORD PTR _temp$[ebp]
$LN16@GearRatios:
; Line 124
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pFirst
	jne	SHORT $LN15@GearRatios
; Line 125
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+48
	jmp	$LN1@GearRatios
$LN15@GearRatios:
; Line 126
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pSecond
	jne	SHORT $LN13@GearRatios
; Line 127
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+52
	jmp	$LN1@GearRatios
$LN13@GearRatios:
; Line 128
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pThird
	jne	SHORT $LN11@GearRatios
; Line 129
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+56
	jmp	SHORT $LN1@GearRatios
$LN11@GearRatios:
; Line 130
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pFourth
	jne	SHORT $LN9@GearRatios
; Line 131
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+60
	jmp	SHORT $LN1@GearRatios
$LN9@GearRatios:
; Line 132
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pFifth
	jne	SHORT $LN7@GearRatios
; Line 133
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+64
	jmp	SHORT $LN1@GearRatios
$LN7@GearRatios:
; Line 134
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pSixth
	jne	SHORT $LN5@GearRatios
; Line 135
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+68
	jmp	SHORT $LN1@GearRatios
$LN5@GearRatios:
; Line 136
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pSeventh
	jne	SHORT $LN3@GearRatios
; Line 137
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+72
	jmp	SHORT $LN1@GearRatios
$LN3@GearRatios:
; Line 138
	mov	eax, DWORD PTR _type$[ebp]
	cmp	eax, DWORD PTR _pEighth
	jne	SHORT $LN1@GearRatios
; Line 139
	fld	DWORD PTR _temp$[ebp]
	fstp	DWORD PTR _vehicleData+76
$LN1@GearRatios:
; Line 140
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GearRatiosSaveData ENDP
_TEXT	ENDS
PUBLIC	_GearRatiosIgnoreNextKeyRelease
PUBLIC	_GearRatiosCallback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_DisplayNewScreenList:PROC
EXTRN	_GetLastScreen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GearRatiosCallback
_TEXT	SEGMENT
tv64 = -196						; size = 4
_pMsg$ = 8						; size = 4
_GearRatiosCallback PROC				; COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 144
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	jg	SHORT $LN14@GearRatios@2
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	je	SHORT $LN9@GearRatios@2
	cmp	DWORD PTR tv64[ebp], 1
	je	$LN4@GearRatios@2
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN3@GearRatios@2
	cmp	DWORD PTR tv64[ebp], 26			; 0000001aH
	je	SHORT $LN8@GearRatios@2
	jmp	$LN1@GearRatios@2
$LN14@GearRatios@2:
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	SHORT $LN7@GearRatios@2
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN6@GearRatios@2
	jmp	$LN1@GearRatios@2
$LN9@GearRatios@2:
; Line 147
	mov	eax, DWORD PTR _hGearRatios
	push	eax
	push	14					; 0000000eH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	14					; 0000000eH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 148
	jmp	$LN12@GearRatios@2
$LN8@GearRatios@2:
; Line 151
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GearRatiosSaveData
	add	esp, 4
; Line 152
	jmp	$LN12@GearRatios@2
$LN7@GearRatios@2:
; Line 155
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GearRatiosSaveData
	add	esp, 4
; Line 156
	mov	eax, DWORD PTR _hGearRatios
	push	eax
	push	14					; 0000000eH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	14					; 0000000eH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 157
	jmp	SHORT $LN12@GearRatios@2
$LN6@GearRatios@2:
; Line 160
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN5@GearRatios@2
; Line 162
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 163
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN5@GearRatios@2:
; Line 165
	jmp	SHORT $LN12@GearRatios@2
$LN4@GearRatios@2:
; Line 168
	call	_GearRatiosIgnoreNextKeyRelease
; Line 169
	jmp	SHORT $LN12@GearRatios@2
$LN3@GearRatios@2:
; Line 172
	call	_GetScreenType
	cmp	eax, 19					; 00000013H
	jne	SHORT $LN2@GearRatios@2
; Line 175
	mov	esi, esp
	mov	eax, DWORD PTR _hGearRatios
	push	eax
	push	19					; 00000013H
	call	_GetLastScreen
	add	esp, 4
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _GearRatiosScreenList[eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 176
	call	_DrawSignalStrength
$LN2@GearRatios@2:
; Line 178
	jmp	SHORT $LN12@GearRatios@2
$LN1@GearRatios@2:
; Line 181
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN12@GearRatios@2:
; Line 183
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GearRatiosCallback ENDP
_TEXT	ENDS
PUBLIC	_DeleteGearRatiosKeyboards
EXTRN	_CreateKeyboard:PROC
EXTRN	_trim:PROC
EXTRN	_sprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayFirst
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayFirst PROC					; COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 187
	call	_DeleteGearRatiosKeyboards
; Line 191
	fld	DWORD PTR _vehicleData+48
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19440
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 192
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 193
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	0
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19441
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pFirst, eax
; Line 194
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayFirst ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplaySecond
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplaySecond PROC					; COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	call	_DeleteGearRatiosKeyboards
; Line 202
	fld	DWORD PTR _vehicleData+52
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19445
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 203
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 204
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	1
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19446
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pSecond, eax
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplaySecond ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayThird
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayThird PROC					; COMDAT
; Line 208
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 209
	call	_DeleteGearRatiosKeyboards
; Line 213
	fld	DWORD PTR _vehicleData+56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19450
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 214
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 215
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	2
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19451
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pThird, eax
; Line 216
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayThird ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayFourth
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayFourth PROC					; COMDAT
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	call	_DeleteGearRatiosKeyboards
; Line 224
	fld	DWORD PTR _vehicleData+60
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19455
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 225
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 226
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	3
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19456
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pFourth, eax
; Line 227
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayFourth ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayFifth
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayFifth PROC					; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 231
	call	_DeleteGearRatiosKeyboards
; Line 235
	fld	DWORD PTR _vehicleData+64
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19460
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 236
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 237
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	4
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19461
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pFifth, eax
; Line 238
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayFifth ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplaySixth
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplaySixth PROC					; COMDAT
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 242
	call	_DeleteGearRatiosKeyboards
; Line 246
	fld	DWORD PTR _vehicleData+68
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19465
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 247
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 248
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	5
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19466
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pSixth, eax
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplaySixth ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplaySeventh
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplaySeventh PROC					; COMDAT
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 253
	call	_DeleteGearRatiosKeyboards
; Line 257
	fld	DWORD PTR _vehicleData+72
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19470
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 258
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 259
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	6
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19471
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pSeventh, eax
; Line 260
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplaySeventh ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DisplayEighth
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayEighth PROC					; COMDAT
; Line 263
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 264
	call	_DeleteGearRatiosKeyboards
; Line 268
	fld	DWORD PTR _vehicleData+76
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19475
	push	OFFSET _gearRatioString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 269
	push	OFFSET _gearRatioString
	call	_trim
	add	esp, 4
; Line 270
	push	1
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	7
	push	9
	push	1
	push	2
	push	OFFSET _gearRatioString
	push	OFFSET $SG19476
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pEighth, eax
; Line 271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayEighth ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FirstPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_FirstPaint PROC					; COMDAT
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_FirstPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SecondPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_SecondPaint PROC					; COMDAT
; Line 279
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 280
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SecondPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ThirdPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_ThirdPaint PROC					; COMDAT
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 284
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ThirdPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FourthPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_FourthPaint PROC					; COMDAT
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 288
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_FourthPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FifthPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_FifthPaint PROC					; COMDAT
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 292
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_FifthPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SixthPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_SixthPaint PROC					; COMDAT
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 296
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SixthPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SeventhPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_SeventhPaint PROC					; COMDAT
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SeventhPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _EighthPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_EighthPaint PROC					; COMDAT
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 304
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_EighthPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GearRatiosIgnoreNextKeyRelease
_TEXT	SEGMENT
_GearRatiosIgnoreNextKeyRelease PROC			; COMDAT
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GearRatiosIgnoreNextKeyRelease ENDP
_TEXT	ENDS
EXTRN	_DestroyKeyboard:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeleteGearRatiosKeyboards
_TEXT	SEGMENT
_DeleteGearRatiosKeyboards PROC				; COMDAT
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 312
	cmp	DWORD PTR _pFirst, 0
	je	SHORT $LN8@DeleteGear
; Line 314
	mov	eax, DWORD PTR _pFirst
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 315
	mov	DWORD PTR _pFirst, 0
$LN8@DeleteGear:
; Line 317
	cmp	DWORD PTR _pSecond, 0
	je	SHORT $LN7@DeleteGear
; Line 319
	mov	eax, DWORD PTR _pSecond
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 320
	mov	DWORD PTR _pSecond, 0
$LN7@DeleteGear:
; Line 322
	cmp	DWORD PTR _pThird, 0
	je	SHORT $LN6@DeleteGear
; Line 324
	mov	eax, DWORD PTR _pThird
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 325
	mov	DWORD PTR _pThird, 0
$LN6@DeleteGear:
; Line 327
	cmp	DWORD PTR _pFourth, 0
	je	SHORT $LN5@DeleteGear
; Line 329
	mov	eax, DWORD PTR _pFourth
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 330
	mov	DWORD PTR _pFourth, 0
$LN5@DeleteGear:
; Line 332
	cmp	DWORD PTR _pFifth, 0
	je	SHORT $LN4@DeleteGear
; Line 334
	mov	eax, DWORD PTR _pFifth
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 335
	mov	DWORD PTR _pFifth, 0
$LN4@DeleteGear:
; Line 337
	cmp	DWORD PTR _pSixth, 0
	je	SHORT $LN3@DeleteGear
; Line 339
	mov	eax, DWORD PTR _pSixth
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 340
	mov	DWORD PTR _pSixth, 0
$LN3@DeleteGear:
; Line 342
	cmp	DWORD PTR _pSeventh, 0
	je	SHORT $LN2@DeleteGear
; Line 344
	mov	eax, DWORD PTR _pSeventh
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 345
	mov	DWORD PTR _pSeventh, 0
$LN2@DeleteGear:
; Line 347
	cmp	DWORD PTR _pEighth, 0
	je	SHORT $LN9@DeleteGear
; Line 349
	mov	eax, DWORD PTR _pEighth
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 350
	mov	DWORD PTR _pEighth, 0
$LN9@DeleteGear:
; Line 352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DeleteGearRatiosKeyboards ENDP
_TEXT	ENDS
END
