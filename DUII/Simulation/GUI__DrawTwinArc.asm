; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__DrawTwinArc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__DrawTwinArc2
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__drawtwinarc.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__DrawTwinArc2
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_x1$ = 12						; size = 4
_y0$ = 16						; size = 4
_r$ = 20						; size = 4
_ColorR0$ = 24						; size = 4
_ColorR1$ = 28						; size = 4
_ColorFill$ = 32					; size = 4
_GUI__DrawTwinArc2 PROC					; COMDAT
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 478
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
; Line 479
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
; Line 480
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 481
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 482
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 483
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 484
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	ecx, DWORD PTR _r$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 485
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI__DrawT
$LN3@GUI__DrawT:
; Line 487
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ColorR1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ColorR0$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawTwinArc2
	add	esp, 28					; 0000001cH
; Line 489
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI__DrawT
$LN5@GUI__DrawT:
; Line 492
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI__DrawT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GUI__DrawT:
	DD	1
	DD	$LN8@GUI__DrawT
$LN8@GUI__DrawT:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI__DrawT
$LN7@GUI__DrawT:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI__DrawTwinArc2 ENDP
_TEXT	ENDS
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_GUI_SetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawTwinArc2
_TEXT	SEGMENT
_xer$ = -104						; size = 4
_xar$ = -92						; size = 4
_xel$ = -80						; size = 4
_xal$ = -68						; size = 4
_yu$ = -56						; size = 4
_l2$ = -44						; size = 4
_l1$ = -32						; size = 4
_l0$ = -20						; size = 4
_y$ = -8						; size = 4
_x0$ = 8						; size = 4
_x1$ = 12						; size = 4
_y0$ = 16						; size = 4
_r$ = 20						; size = 4
_ColorR0$ = 24						; size = 4
_ColorR1$ = 28						; size = 4
_ColorFill$ = 32					; size = 4
__DrawTwinArc2 PROC					; COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	cmp	DWORD PTR _r$[ebp], 0
	jle	$LN13@DrawTwinAr
; Line 201
	mov	eax, DWORD PTR _ColorR0$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 202
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN11@DrawTwinAr
$LN10@DrawTwinAr:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN11@DrawTwinAr:
	cmp	DWORD PTR _y$[ebp], 0
	jle	$LN9@DrawTwinAr
; Line 203
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 204
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 205
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 206
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 208
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l1$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 209
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 210
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 211
	jmp	$LN10@DrawTwinAr
$LN9@DrawTwinAr:
; Line 212
	cmp	DWORD PTR _r$[ebp], 1
	jle	$LN13@DrawTwinAr
; Line 216
	mov	eax, DWORD PTR _ColorR1$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 217
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 2
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN7@DrawTwinAr
$LN6@DrawTwinAr:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN7@DrawTwinAr:
	cmp	DWORD PTR _y$[ebp], 0
	jle	$LN5@DrawTwinAr
; Line 218
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 219
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 220
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 223
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l2$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 224
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 225
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 226
	jmp	$LN6@DrawTwinAr
$LN5@DrawTwinAr:
; Line 227
	cmp	DWORD PTR _r$[ebp], 2
	jle	$LN13@DrawTwinAr
; Line 231
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 232
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 3
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN3@DrawTwinAr
$LN2@DrawTwinAr:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN3@DrawTwinAr:
	cmp	DWORD PTR _y$[ebp], 0
	je	$LN13@DrawTwinAr
; Line 233
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 234
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 235
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 236
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _xel$[ebp], edx
; Line 237
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 238
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, 1
	mov	DWORD PTR _xar$[ebp], eax
; Line 239
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 240
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 241
	jmp	$LN2@DrawTwinAr
$LN13@DrawTwinAr:
; Line 245
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@DrawTwinAr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@DrawTwinAr:
	DD	3
	DD	$LN18@DrawTwinAr
$LN18@DrawTwinAr:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@DrawTwinAr
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN16@DrawTwinAr
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN17@DrawTwinAr
$LN17@DrawTwinAr:
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN16@DrawTwinAr:
	DB	108					; 0000006cH
	DB	49					; 00000031H
	DB	0
$LN15@DrawTwinAr:
	DB	108					; 0000006cH
	DB	48					; 00000030H
	DB	0
__DrawTwinArc2 ENDP
_TEXT	ENDS
EXTRN	_GUI__sqrt32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetTwinArcPara
_TEXT	SEGMENT
_ri$ = -20						; size = 4
_yy$ = -8						; size = 4
_r$ = 8							; size = 4
_y$ = 12						; size = 4
_pl0$ = 16						; size = 4
_pl1$ = 20						; size = 4
_pl2$ = 24						; size = 4
__GetTwinArcPara PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yy$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	mov	DWORD PTR _ri$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _yy$[ebp]
	push	eax
	call	_GUI__sqrt32
	add	esp, 4
	mov	ecx, DWORD PTR _pl0$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 46
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ri$[ebp]
	jge	SHORT $LN4@GetTwinArc
; Line 47
	mov	eax, DWORD PTR _ri$[ebp]
	imul	eax, DWORD PTR _ri$[ebp]
	sub	eax, DWORD PTR _yy$[ebp]
	push	eax
	call	_GUI__sqrt32
	add	esp, 4
	mov	ecx, DWORD PTR _pl1$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 48
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 2
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN3@GetTwinArc
; Line 49
	mov	eax, DWORD PTR _pl1$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 50
	jmp	SHORT $LN2@GetTwinArc
$LN3@GetTwinArc:
; Line 51
	mov	eax, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@GetTwinArc:
; Line 53
	jmp	SHORT $LN5@GetTwinArc
$LN4@GetTwinArc:
; Line 54
	mov	eax, DWORD PTR _pl1$[ebp]
	mov	DWORD PTR [eax], 0
; Line 55
	mov	eax, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [eax], 0
$LN5@GetTwinArc:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetTwinArcPara ENDP
_TEXT	ENDS
PUBLIC	_GUI__DrawTwinArc4
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__DrawTwinArc4
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_ColorR0$ = 28						; size = 4
_ColorR1$ = 32						; size = 4
_ColorFill$ = 36					; size = 4
_GUI__DrawTwinArc4 PROC					; COMDAT
; Line 498
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 504
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 505
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 506
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 507
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 508
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 509
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 510
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI__DrawT@2
$LN3@GUI__DrawT@2:
; Line 512
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ColorR1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ColorR0$[ebp]
	push	edx
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	__DrawTwinArc4
	add	esp, 32					; 00000020H
; Line 514
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI__DrawT@2
$LN5@GUI__DrawT@2:
; Line 517
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI__DrawT@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GUI__DrawT@2:
	DD	1
	DD	$LN8@GUI__DrawT@2
$LN8@GUI__DrawT@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI__DrawT@2
$LN7@GUI__DrawT@2:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI__DrawTwinArc4 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawTwinArc4
_TEXT	SEGMENT
_xer$ = -116						; size = 4
_xar$ = -104						; size = 4
_xel$ = -92						; size = 4
_xal$ = -80						; size = 4
_yl$ = -68						; size = 4
_yu$ = -56						; size = 4
_l2$ = -44						; size = 4
_l1$ = -32						; size = 4
_l0$ = -20						; size = 4
_y$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_ColorR0$ = 28						; size = 4
_ColorR1$ = 32						; size = 4
_ColorFill$ = 36					; size = 4
__DrawTwinArc4 PROC					; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 115
	cmp	DWORD PTR _r$[ebp], 0
	jle	$LN13@DrawTwinAr@2
; Line 119
	mov	eax, DWORD PTR _ColorR0$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 120
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN11@DrawTwinAr@2
$LN10@DrawTwinAr@2:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN11@DrawTwinAr@2:
	cmp	DWORD PTR _y$[ebp], 0
	jle	$LN9@DrawTwinAr@2
; Line 121
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 122
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 123
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 124
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 125
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l1$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 128
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 129
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 130
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 131
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 132
	jmp	$LN10@DrawTwinAr@2
$LN9@DrawTwinAr@2:
; Line 133
	cmp	DWORD PTR _r$[ebp], 1
	jle	$LN13@DrawTwinAr@2
; Line 137
	mov	eax, DWORD PTR _ColorR1$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 138
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 2
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN7@DrawTwinAr@2
$LN6@DrawTwinAr@2:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN7@DrawTwinAr@2:
	cmp	DWORD PTR _y$[ebp], 0
	jle	$LN5@DrawTwinAr@2
; Line 139
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 140
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 141
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 142
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 143
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 144
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 145
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l2$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 146
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 147
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 148
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 149
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 150
	jmp	$LN6@DrawTwinAr@2
$LN5@DrawTwinAr@2:
; Line 151
	cmp	DWORD PTR _r$[ebp], 2
	jle	$LN13@DrawTwinAr@2
; Line 155
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 156
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 3
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN3@DrawTwinAr@2
$LN2@DrawTwinAr@2:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN3@DrawTwinAr@2:
	cmp	DWORD PTR _y$[ebp], 0
	je	$LN13@DrawTwinAr@2
; Line 157
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 158
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 159
	lea	eax, DWORD PTR _l2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	__GetTwinArcPara
	add	esp, 20					; 00000014H
; Line 160
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 161
	mov	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _xel$[ebp], edx
; Line 162
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 163
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, 1
	mov	DWORD PTR _xar$[ebp], eax
; Line 164
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 165
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 166
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 167
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 168
	jmp	$LN2@DrawTwinAr@2
$LN13@DrawTwinAr@2:
; Line 172
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@DrawTwinAr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@DrawTwinAr@2:
	DD	3
	DD	$LN18@DrawTwinAr@2
$LN18@DrawTwinAr@2:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN15@DrawTwinAr@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN16@DrawTwinAr@2
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN17@DrawTwinAr@2
$LN17@DrawTwinAr@2:
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN16@DrawTwinAr@2:
	DB	108					; 0000006cH
	DB	49					; 00000031H
	DB	0
$LN15@DrawTwinAr@2:
	DB	108					; 0000006cH
	DB	48					; 00000030H
	DB	0
__DrawTwinArc4 ENDP
_TEXT	ENDS
PUBLIC	_GUI__FillTrippleArc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__FillTrippleArc
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_Size$ = 16						; size = 4
_ColorR0$ = 20						; size = 4
_ColorR1$ = 24						; size = 4
_ColorR2$ = 28						; size = 4
_ColorFill$ = 32					; size = 4
_GUI__FillTrippleArc PROC				; COMDAT
; Line 523
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 529
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 530
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 531
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 532
	mov	eax, DWORD PTR _Size$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+4], dx
; Line 533
	mov	eax, DWORD PTR _Size$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 534
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI__FillT
$LN3@GUI__FillT:
; Line 536
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ColorR2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ColorR1$[ebp]
	push	edx
	mov	eax, DWORD PTR _ColorR0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__FillTrippleArc
	add	esp, 28					; 0000001cH
; Line 538
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI__FillT
$LN5@GUI__FillT:
; Line 541
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI__FillT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GUI__FillT:
	DD	1
	DD	$LN8@GUI__FillT
$LN8@GUI__FillT:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI__FillT
$LN7@GUI__FillT:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI__FillTrippleArc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __FillTrippleArc
_TEXT	SEGMENT
_r$ = -164						; size = 4
_y1$ = -152						; size = 4
_x1$ = -140						; size = 4
_xer$ = -128						; size = 4
_xar$ = -116						; size = 4
_xel$ = -104						; size = 4
_xal$ = -92						; size = 4
_yl$ = -80						; size = 4
_yu$ = -68						; size = 4
_l3$ = -56						; size = 4
_l2$ = -44						; size = 4
_l1$ = -32						; size = 4
_l0$ = -20						; size = 4
_y$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_Size$ = 16						; size = 4
_ColorR0$ = 20						; size = 4
_ColorR1$ = 24						; size = 4
_ColorR2$ = 28						; size = 4
_ColorFill$ = 32					; size = 4
__FillTrippleArc PROC					; COMDAT
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 277
	mov	eax, DWORD PTR _Size$[ebp]
	and	eax, 1
	je	SHORT $LN23@FillTrippl
; Line 278
	jmp	$LN24@FillTrippl
$LN23@FillTrippl:
; Line 280
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x0$[ebp], eax
	mov	ecx, DWORD PTR _Size$[ebp]
	mov	edx, DWORD PTR _x0$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _x1$[ebp], eax
; Line 281
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y0$[ebp], eax
	mov	ecx, DWORD PTR _Size$[ebp]
	mov	edx, DWORD PTR _y0$[ebp]
	lea	eax, DWORD PTR [edx+ecx+1]
	mov	DWORD PTR _y1$[ebp], eax
; Line 282
	mov	eax, DWORD PTR _Size$[ebp]
	sar	eax, 1
	add	eax, 2
	mov	DWORD PTR _r$[ebp], eax
; Line 283
	cmp	DWORD PTR _r$[ebp], 0
	jle	$LN24@FillTrippl
; Line 287
	mov	eax, DWORD PTR _ColorR0$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 288
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN21@FillTrippl
$LN20@FillTrippl:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN21@FillTrippl:
	cmp	DWORD PTR _y$[ebp], 1
	jle	$LN19@FillTrippl
; Line 289
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 290
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 291
	lea	eax, DWORD PTR _l3$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l1$[ebp]
	push	edx
	lea	eax, DWORD PTR _l0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	__GetTrippleArcPara
	add	esp, 24					; 00000018H
; Line 292
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 293
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 294
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l0$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 295
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l1$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 296
	mov	eax, DWORD PTR _xar$[ebp]
	cmp	eax, DWORD PTR _xel$[ebp]
	jge	SHORT $LN18@FillTrippl
; Line 297
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 298
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 299
	jmp	SHORT $LN17@FillTrippl
$LN18@FillTrippl:
; Line 300
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 301
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 302
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 303
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN17@FillTrippl:
; Line 305
	jmp	$LN20@FillTrippl
$LN19@FillTrippl:
; Line 306
	cmp	DWORD PTR _r$[ebp], 1
	jle	$LN24@FillTrippl
; Line 310
	mov	eax, DWORD PTR _ColorR1$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 311
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 2
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN15@FillTrippl
$LN14@FillTrippl:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN15@FillTrippl:
	cmp	DWORD PTR _y$[ebp], 1
	jle	$LN13@FillTrippl
; Line 312
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 313
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 314
	lea	eax, DWORD PTR _l3$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l1$[ebp]
	push	edx
	lea	eax, DWORD PTR _l0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	__GetTrippleArcPara
	add	esp, 24					; 00000018H
; Line 315
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 316
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 317
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l1$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 318
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l2$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 319
	mov	eax, DWORD PTR _xar$[ebp]
	cmp	eax, DWORD PTR _xel$[ebp]
	jge	SHORT $LN12@FillTrippl
; Line 320
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 321
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 322
	jmp	SHORT $LN11@FillTrippl
$LN12@FillTrippl:
; Line 323
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 324
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 325
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 326
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN11@FillTrippl:
; Line 328
	jmp	$LN14@FillTrippl
$LN13@FillTrippl:
; Line 329
	cmp	DWORD PTR _r$[ebp], 2
	jle	$LN24@FillTrippl
; Line 333
	mov	eax, DWORD PTR _ColorR2$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 334
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 3
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN9@FillTrippl
$LN8@FillTrippl:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN9@FillTrippl:
	cmp	DWORD PTR _y$[ebp], 1
	jle	$LN7@FillTrippl
; Line 335
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 336
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 337
	lea	eax, DWORD PTR _l3$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l1$[ebp]
	push	edx
	lea	eax, DWORD PTR _l0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	__GetTrippleArcPara
	add	esp, 24					; 00000018H
; Line 338
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 339
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l3$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xel$[ebp], eax
; Line 340
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l2$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 341
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _l3$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _xar$[ebp], edx
; Line 342
	mov	eax, DWORD PTR _xar$[ebp]
	cmp	eax, DWORD PTR _xel$[ebp]
	jge	SHORT $LN6@FillTrippl
; Line 343
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 344
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 345
	jmp	SHORT $LN5@FillTrippl
$LN6@FillTrippl:
; Line 346
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 347
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 348
	mov	eax, DWORD PTR _xel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 349
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xar$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN5@FillTrippl:
; Line 351
	jmp	$LN8@FillTrippl
$LN7@FillTrippl:
; Line 352
	cmp	DWORD PTR _r$[ebp], 3
	jle	$LN24@FillTrippl
; Line 356
	mov	eax, DWORD PTR _ColorFill$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 357
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 4
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN3@FillTrippl
$LN2@FillTrippl:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN3@FillTrippl:
	cmp	DWORD PTR _y$[ebp], 0
	je	$LN24@FillTrippl
; Line 358
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yu$[ebp], eax
; Line 359
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yl$[ebp], eax
; Line 360
	lea	eax, DWORD PTR _l3$[ebp]
	push	eax
	lea	ecx, DWORD PTR _l2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _l1$[ebp]
	push	edx
	lea	eax, DWORD PTR _l0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _r$[ebp]
	push	edx
	call	__GetTrippleArcPara
	add	esp, 24					; 00000018H
; Line 361
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _l3$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 362
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _l3$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 363
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 364
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 365
	jmp	$LN2@FillTrippl
$LN24@FillTrippl:
; Line 370
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@FillTrippl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN31@FillTrippl:
	DD	4
	DD	$LN30@FillTrippl
$LN30@FillTrippl:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN26@FillTrippl
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN27@FillTrippl
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN28@FillTrippl
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN29@FillTrippl
$LN29@FillTrippl:
	DB	108					; 0000006cH
	DB	51					; 00000033H
	DB	0
$LN28@FillTrippl:
	DB	108					; 0000006cH
	DB	50					; 00000032H
	DB	0
$LN27@FillTrippl:
	DB	108					; 0000006cH
	DB	49					; 00000031H
	DB	0
$LN26@FillTrippl:
	DB	108					; 0000006cH
	DB	48					; 00000030H
	DB	0
__FillTrippleArc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetTrippleArcPara
_TEXT	SEGMENT
_rj$ = -32						; size = 4
_ri$ = -20						; size = 4
_yy$ = -8						; size = 4
_r$ = 8							; size = 4
_y$ = 12						; size = 4
_pl0$ = 16						; size = 4
_pl1$ = 20						; size = 4
_pl2$ = 24						; size = 4
_pl3$ = 28						; size = 4
__GetTrippleArcPara PROC				; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 67
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yy$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	mov	DWORD PTR _ri$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 2
	mov	DWORD PTR _rj$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _yy$[ebp]
	push	eax
	call	_GUI__sqrt32
	add	esp, 4
	mov	ecx, DWORD PTR _pl0$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 71
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ri$[ebp]
	jge	SHORT $LN6@GetTripple
; Line 72
	mov	eax, DWORD PTR _ri$[ebp]
	imul	eax, DWORD PTR _ri$[ebp]
	sub	eax, DWORD PTR _yy$[ebp]
	push	eax
	call	_GUI__sqrt32
	add	esp, 4
	mov	ecx, DWORD PTR _pl1$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 73
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _rj$[ebp]
	jge	SHORT $LN5@GetTripple
; Line 74
	mov	eax, DWORD PTR _rj$[ebp]
	imul	eax, DWORD PTR _rj$[ebp]
	sub	eax, DWORD PTR _yy$[ebp]
	push	eax
	call	_GUI__sqrt32
	add	esp, 4
	mov	ecx, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 75
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, 3
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN4@GetTripple
; Line 76
	mov	eax, DWORD PTR _pl2$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, 1
	mov	edx, DWORD PTR _pl3$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 77
	jmp	SHORT $LN3@GetTripple
$LN4@GetTripple:
; Line 78
	mov	eax, DWORD PTR _pl3$[ebp]
	mov	DWORD PTR [eax], 0
$LN3@GetTripple:
; Line 80
	jmp	SHORT $LN2@GetTripple
$LN5@GetTripple:
; Line 81
	mov	eax, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [eax], 0
; Line 82
	mov	eax, DWORD PTR _pl3$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@GetTripple:
; Line 84
	jmp	SHORT $LN7@GetTripple
$LN6@GetTripple:
; Line 85
	mov	eax, DWORD PTR _pl1$[ebp]
	mov	DWORD PTR [eax], 0
; Line 86
	mov	eax, DWORD PTR _pl2$[ebp]
	mov	DWORD PTR [eax], 0
; Line 87
	mov	eax, DWORD PTR _pl3$[ebp]
	mov	DWORD PTR [eax], 0
$LN7@GetTripple:
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetTrippleArcPara ENDP
_TEXT	ENDS
END
