; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__DrawBitmap16bpp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__DrawBitmap16bpp
EXTRN	_GUI_SetColor:PROC
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI_GetpfColor2IndexEx:PROC
EXTRN	_LCD_GetNextPixelAPI:PROC
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_GUI_GetpfIndex2ColorEx:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_LCD_GetColorIndex:PROC
EXTRN	_GUI_GetColor:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__drawbitmap16bpp.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__DrawBitmap16bpp
_TEXT	SEGMENT
tv158 = -460						; size = 4
_Diff$8381 = -260					; size = 4
_y1$8380 = -248						; size = 4
_x1$8379 = -236						; size = 4
_pNextPixel_API$8378 = -224				; size = 4
_pfColor2Index$8377 = -212				; size = 4
_Color$8376 = -200					; size = 4
_pSrc$8375 = -188					; size = 4
_Value$8374 = -176					; size = 2
_pfIndex2ColorCompare$8369 = -164			; size = 4
_OldColor$ = -152					; size = 4
_p$ = -140						; size = 4
_Index$ = -128						; size = 4
_UseDrawBitmap$ = -116					; size = 4
_BytesPerLine$ = -104					; size = 4
_Mag$ = -92						; size = 4
_PrevIndex$ = -80					; size = 4
_yMax$ = -68						; size = 4
_yi$ = -56						; size = 4
_xi$ = -44						; size = 4
_y$ = -32						; size = 4
_x$ = -20						; size = 4
_pData$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_pLogPal$ = 28						; size = 4
_xMag$ = 32						; size = 4
_yMag$ = 36						; size = 4
_pfIndex2Color$ = 40					; size = 4
_GUI__DrawBitmap16bpp PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 460				; 000001ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-460]
	mov	ecx, 115				; 00000073H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	DWORD PTR _UseDrawBitmap$[ebp], 0
; Line 42
	mov	eax, DWORD PTR _pLogPal$[ebp]
	mov	DWORD PTR _pLogPal$[ebp], eax
; Line 43
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$[ebp], eax
; Line 44
	call	_LCD_GetColorIndex
	mov	DWORD PTR _PrevIndex$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 46
	mov	eax, DWORD PTR _xMag$[ebp]
	or	eax, DWORD PTR _yMag$[ebp]
	mov	DWORD PTR _Mag$[ebp], eax
; Line 47
	mov	eax, DWORD PTR _xSize$[ebp]
	shl	eax, 1
	mov	DWORD PTR _BytesPerLine$[ebp], eax
; Line 49
	cmp	DWORD PTR _Mag$[ebp], 1
	jne	SHORT $LN26@GUI__DrawB
; Line 51
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetpfIndex2ColorEx
	add	esp, 4
	mov	DWORD PTR _pfIndex2ColorCompare$8369[ebp], eax
; Line 52
	mov	eax, DWORD PTR _pfIndex2ColorCompare$8369[ebp]
	cmp	eax, DWORD PTR _pfIndex2Color$[ebp]
	jne	SHORT $LN26@GUI__DrawB
; Line 53
	mov	DWORD PTR _UseDrawBitmap$[ebp], 1
$LN26@GUI__DrawB:
; Line 56
	cmp	DWORD PTR _UseDrawBitmap$[ebp], 0
	je	SHORT $LN24@GUI__DrawB
; Line 57
	push	0
	mov	eax, DWORD PTR _pPixel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BytesPerLine$[ebp]
	push	ecx
	push	16					; 00000010H
	push	1
	push	1
	mov	edx, DWORD PTR _ySize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 58
	jmp	$LN27@GUI__DrawB
$LN24@GUI__DrawB:
; Line 59
	cmp	DWORD PTR _Mag$[ebp], 1
	jne	$LN22@GUI__DrawB
; Line 67
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _y1$8380[ebp], edx
; Line 68
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _x1$8379[ebp], edx
; Line 70
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y0$[ebp], eax
	jge	SHORT $LN21@GUI__DrawB
; Line 71
	movsx	eax, WORD PTR _GUI_Context+10
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _Diff$8381[ebp], eax
; Line 72
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
; Line 74
	mov	eax, DWORD PTR _Diff$8381[ebp]
	imul	eax, DWORD PTR _BytesPerLine$[ebp]
	shr	eax, 1
	mov	ecx, DWORD PTR _pData$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData$[ebp], edx
; Line 78
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8381[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN21@GUI__DrawB:
; Line 80
	movsx	eax, WORD PTR _GUI_Context+14
	mov	ecx, DWORD PTR _y1$8380[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8381[ebp], ecx
; Line 81
	cmp	DWORD PTR _Diff$8381[ebp], 0
	jle	SHORT $LN20@GUI__DrawB
; Line 82
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8381[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN20@GUI__DrawB:
; Line 84
	cmp	DWORD PTR _ySize$[ebp], 0
	jg	SHORT $LN19@GUI__DrawB
; Line 85
	jmp	$LN27@GUI__DrawB
$LN19@GUI__DrawB:
; Line 88
	movsx	eax, WORD PTR _GUI_Context+12
	mov	ecx, DWORD PTR _x1$8379[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8381[ebp], ecx
; Line 89
	cmp	DWORD PTR _Diff$8381[ebp], 0
	jle	SHORT $LN18@GUI__DrawB
; Line 90
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8381[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
$LN18@GUI__DrawB:
; Line 93
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN17@GUI__DrawB
; Line 94
	movsx	eax, WORD PTR _GUI_Context+8
	sub	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _Diff$8381[ebp], eax
; Line 95
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8381[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
; Line 96
	mov	eax, DWORD PTR _Diff$8381[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData$[ebp], edx
; Line 97
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8381[ebp]
	mov	DWORD PTR _x0$[ebp], eax
$LN17@GUI__DrawB:
; Line 99
	cmp	DWORD PTR _xSize$[ebp], 0
	jg	SHORT $LN16@GUI__DrawB
; Line 100
	jmp	$LN27@GUI__DrawB
$LN16@GUI__DrawB:
; Line 105
	call	_LCD_GetNextPixelAPI
	mov	DWORD PTR _pNextPixel_API$8378[ebp], eax
; Line 106
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetpfColor2IndexEx
	add	esp, 4
	mov	DWORD PTR _pfColor2Index$8377[ebp], eax
; Line 107
	mov	esi, esp
	mov	eax, DWORD PTR _y1$8380[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$8379[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$8378[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN15@GUI__DrawB:
; Line 108
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR tv158[ebp], eax
	mov	ecx, DWORD PTR _ySize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _ySize$[ebp], ecx
	cmp	DWORD PTR tv158[ebp], 0
	je	$LN14@GUI__DrawB
; Line 109
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pSrc$8375[ebp], eax
; Line 110
	mov	DWORD PTR _x$[ebp], 0
	jmp	SHORT $LN13@GUI__DrawB
$LN12@GUI__DrawB:
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN13@GUI__DrawB:
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN11@GUI__DrawB
; Line 111
	mov	eax, DWORD PTR _pSrc$8375[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _Value$8374[ebp], cx
	mov	edx, DWORD PTR _pSrc$8375[ebp]
	add	edx, 2
	mov	DWORD PTR _pSrc$8375[ebp], edx
; Line 112
	movzx	eax, WORD PTR _Value$8374[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR _pfIndex2Color$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Color$8376[ebp], eax
; Line 113
	mov	esi, esp
	mov	eax, DWORD PTR _Color$8376[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$8377[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Index$[ebp], eax
; Line 114
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$8378[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	jmp	$LN12@GUI__DrawB
$LN11@GUI__DrawB:
; Line 116
	cmp	DWORD PTR _ySize$[ebp], 0
	je	SHORT $LN10@GUI__DrawB
; Line 117
	mov	eax, DWORD PTR _pNextPixel_API$8378[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 118
	mov	eax, DWORD PTR _BytesPerLine$[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _pData$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData$[ebp], edx
$LN10@GUI__DrawB:
; Line 120
	jmp	$LN15@GUI__DrawB
$LN14@GUI__DrawB:
; Line 121
	mov	eax, DWORD PTR _pNextPixel_API$8378[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	jmp	$LN9@GUI__DrawB
$LN22@GUI__DrawB:
; Line 124
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	mov	DWORD PTR _yi$[ebp], 0
	jmp	SHORT $LN8@GUI__DrawB
$LN7@GUI__DrawB:
	mov	eax, DWORD PTR _yi$[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _yMag$[ebp]
	mov	DWORD PTR _y$[ebp], ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], edx
$LN8@GUI__DrawB:
	mov	eax, DWORD PTR _yi$[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jge	$LN9@GUI__DrawB
; Line 125
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yMax$[ebp], edx
; Line 127
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _yMax$[ebp], eax
	jl	$LN5@GUI__DrawB
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jg	$LN5@GUI__DrawB
; Line 128
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 129
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x$[ebp], eax
	mov	DWORD PTR _xi$[ebp], 0
	jmp	SHORT $LN4@GUI__DrawB
$LN3@GUI__DrawB:
	mov	eax, DWORD PTR _xi$[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$[ebp], eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR _xMag$[ebp]
	mov	DWORD PTR _x$[ebp], ecx
$LN4@GUI__DrawB:
	mov	eax, DWORD PTR _xi$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN5@GUI__DrawB
; Line 130
	mov	eax, DWORD PTR _p$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _Index$[ebp], ecx
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 2
	mov	DWORD PTR _p$[ebp], edx
; Line 131
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _PrevIndex$[ebp]
	je	SHORT $LN1@GUI__DrawB
; Line 132
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	call	DWORD PTR _pfIndex2Color$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 133
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _PrevIndex$[ebp], eax
$LN1@GUI__DrawB:
; Line 135
	mov	eax, DWORD PTR _yMax$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMag$[ebp]
	mov	edx, DWORD PTR _x$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 136
	jmp	SHORT $LN3@GUI__DrawB
$LN5@GUI__DrawB:
; Line 138
	mov	eax, DWORD PTR _BytesPerLine$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pData$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData$[ebp], edx
; Line 139
	jmp	$LN7@GUI__DrawB
$LN9@GUI__DrawB:
; Line 141
	mov	eax, DWORD PTR _OldColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
$LN27@GUI__DrawB:
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 460				; 000001ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__DrawBitmap16bpp ENDP
_TEXT	ENDS
END
