; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispChar.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DispChar
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_dispchar.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispChar
_TEXT	SEGMENT
_c$ = 8							; size = 2
_GUI_DispChar PROC					; COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_CL_DispChar
	add	esp, 4
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispChar ENDP
_TEXT	ENDS
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_GL_DispChar:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_GetFontSizeY:PROC
EXTRN	_GUI__GetOverlap:PROC
EXTRN	_GUI_GetCharDistX:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CL_DispChar
_TEXT	SEGMENT
_r$ = -12						; size = 8
_c$ = 8							; size = 2
_CL_DispChar PROC					; COMDAT
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	movsx	eax, WORD PTR _GUI_Context+34
	add	eax, DWORD PTR _GUI_Context+64
	mov	WORD PTR _GUI_Context+34, ax
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _GUI_Context+68
	mov	WORD PTR _GUI_Context+36, ax
; Line 39
	mov	ax, WORD PTR _GUI_Context+34
	mov	WORD PTR _r$[ebp], ax
	movsx	esi, WORD PTR _r$[ebp]
	movzx	ecx, WORD PTR _c$[ebp]
	push	ecx
	call	_GUI_GetCharDistX
	add	esp, 4
	add	esi, eax
	movzx	edx, WORD PTR _c$[ebp]
	push	edx
	call	_GUI__GetOverlap
	add	esp, 4
	lea	eax, DWORD PTR [esi+eax-1]
	mov	WORD PTR _r$[ebp+4], ax
; Line 40
	mov	ax, WORD PTR _GUI_Context+36
	mov	WORD PTR _r$[ebp+2], ax
	movsx	esi, WORD PTR _r$[ebp+2]
	call	_GUI_GetFontSizeY
	lea	ecx, DWORD PTR [esi+eax-1]
	mov	WORD PTR _r$[ebp+6], cx
; Line 41
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@CL_DispCha
$LN4@CL_DispCha:
; Line 42
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_GL_DispChar
	add	esp, 4
; Line 43
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN4@CL_DispCha
$LN5@CL_DispCha:
; Line 44
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN1@CL_DispCha
; Line 45
	movsx	eax, WORD PTR _r$[ebp+4]
	add	eax, 1
	mov	WORD PTR _GUI_Context+34, ax
$LN1@CL_DispCha:
; Line 47
	movsx	eax, WORD PTR _GUI_Context+34
	sub	eax, DWORD PTR _GUI_Context+64
	mov	WORD PTR _GUI_Context+34, ax
	movsx	eax, WORD PTR _GUI_Context+36
	sub	eax, DWORD PTR _GUI_Context+68
	mov	WORD PTR _GUI_Context+36, ax
; Line 48
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CL_DispCha
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@CL_DispCha:
	DD	1
	DD	$LN9@CL_DispCha
$LN9@CL_DispCha:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN8@CL_DispCha
$LN8@CL_DispCha:
	DB	114					; 00000072H
	DB	0
_CL_DispChar ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispCharAt
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispCharAt
_TEXT	SEGMENT
_c$ = 8							; size = 2
_x$ = 12						; size = 2
_y$ = 16						; size = 2
_GUI_DispCharAt PROC					; COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 77
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _GUI_Context+34, ax
; Line 78
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _GUI_Context+36, ax
; Line 80
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	_CL_DispChar
	add	esp, 4
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispCharAt ENDP
_TEXT	ENDS
END
