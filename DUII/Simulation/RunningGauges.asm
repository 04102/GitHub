; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\RunningGauges.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GaugesScreenList
PUBLIC	_DriveScreenList
PUBLIC	_InstrumentsScreenList
EXTRN	_DisplayGPSInfo:PROC
EXTRN	_Display_DriveScreen:PROC
EXTRN	_DisplayTestInfo:PROC
EXTRN	_Display_GMeterScreen:PROC
EXTRN	_Display_DigitalGaugeScreen:PROC
EXTRN	_DisplayMultiAnalogGaugesScreen:PROC
EXTRN	_Display_RPMSweepScreen:PROC
EXTRN	_Display_GaugeScreen:PROC
_BSS	SEGMENT
_peekingScreenHandle DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_GaugesScreenList DD 01H
	DD	FLAT:_Display_GaugeScreen
	DD	06H
	DD	FLAT:_Display_RPMSweepScreen
	DD	04H
	DD	FLAT:_DisplayMultiAnalogGaugesScreen
	DD	07H
	DD	FLAT:_Display_DigitalGaugeScreen
	DD	00H
	DD	FLAT:_Display_GMeterScreen
	DD	09H
	DD	FLAT:_DisplayTestInfo
	DD	0ffffffffH
	DD	00H
_DriveScreenList DD 00H
	DD	FLAT:_Display_GMeterScreen
	DD	01H
	DD	FLAT:_Display_GaugeScreen
	DD	05H
	DD	FLAT:_Display_DriveScreen
	DD	06H
	DD	FLAT:_Display_RPMSweepScreen
	DD	04H
	DD	FLAT:_DisplayMultiAnalogGaugesScreen
	DD	08H
	DD	FLAT:_DisplayGPSInfo
	DD	09H
	DD	FLAT:_DisplayTestInfo
	DD	0ffffffffH
	DD	00H
_InstrumentsScreenList DD 00H
	DD	FLAT:_Display_GMeterScreen
	DD	01H
	DD	FLAT:_Display_GaugeScreen
	DD	05H
	DD	FLAT:_Display_DriveScreen
	DD	06H
	DD	FLAT:_Display_RPMSweepScreen
	DD	04H
	DD	FLAT:_DisplayMultiAnalogGaugesScreen
	DD	08H
	DD	FLAT:_DisplayGPSInfo
	DD	09H
	DD	FLAT:_DisplayTestInfo
	DD	0ffffffffH
	DD	00H
_DATA	ENDS
PUBLIC	_GetRunningGaugesWindowHandle
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_hRunningGauges DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\runninggauges.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GetRunningGaugesWindowHandle
_TEXT	SEGMENT
_GetRunningGaugesWindowHandle PROC			; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 140
	mov	eax, DWORD PTR _hRunningGauges
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetRunningGaugesWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetRunningGaugesWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetRunningGaugesWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetRunningGaugesWindowHandle PROC			; COMDAT
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 145
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hRunningGauges, eax
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetRunningGaugesWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GaugesScreensCallback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_CheckSlideoutTimer:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GaugesScreensCallback
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_GaugesScreensCallback PROC				; COMDAT
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 151
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 275			; 00000113H
	jne	SHORT $LN3@GaugesScre
; Line 153
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_CheckSlideoutTimer
	add	esp, 4
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN2@GaugesScre
; Line 154
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN2@GaugesScre:
; Line 156
	jmp	SHORT $LN4@GaugesScre
$LN3@GaugesScre:
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN4@GaugesScre:
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GaugesScreensCallback ENDP
_TEXT	ENDS
PUBLIC	_RunningGauges
EXTRN	_screen_scrolling:DWORD
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindow:PROC
EXTRN	_SetLastScreen:PROC
EXTRN	_selectedRaceMode:DWORD
EXTRN	_GUI_Clear:PROC
EXTRN	_WM_DeleteWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RunningGauges
_TEXT	SEGMENT
_pScreenList$ = -8					; size = 4
_screen$ = 8						; size = 4
_hPrev$ = 12						; size = 4
_RunningGauges PROC					; COMDAT
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 166
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN8@RunningGau
; Line 167
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN8@RunningGau:
; Line 169
	cmp	DWORD PTR _peekingScreenHandle, 0
	je	SHORT $LN7@RunningGau
; Line 171
	mov	eax, DWORD PTR _peekingScreenHandle
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 172
	mov	DWORD PTR _peekingScreenHandle, 0
$LN7@RunningGau:
; Line 175
	call	_GUI_Clear
; Line 177
	cmp	DWORD PTR _screen$[ebp], -1
	jne	SHORT $LN6@RunningGau
; Line 178
	mov	DWORD PTR _screen$[ebp], 0
$LN6@RunningGau:
; Line 180
	cmp	DWORD PTR _selectedRaceMode, 3
	jne	SHORT $LN5@RunningGau
; Line 182
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	push	3
	call	_SetLastScreen
	add	esp, 8
; Line 183
	mov	DWORD PTR _pScreenList$[ebp], OFFSET _DriveScreenList
	jmp	SHORT $LN4@RunningGau
$LN5@RunningGau:
; Line 185
	cmp	DWORD PTR _selectedRaceMode, 2
	jne	SHORT $LN3@RunningGau
; Line 187
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	push	4
	call	_SetLastScreen
	add	esp, 8
; Line 188
	mov	DWORD PTR _pScreenList$[ebp], OFFSET _InstrumentsScreenList
; Line 190
	jmp	SHORT $LN4@RunningGau
$LN3@RunningGau:
; Line 192
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	push	2
	call	_SetLastScreen
	add	esp, 8
; Line 193
	mov	DWORD PTR _pScreenList$[ebp], OFFSET _GaugesScreenList
$LN4@RunningGau:
; Line 201
	push	0
	push	OFFSET _GaugesScreensCallback
	push	2
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hRunningGauges, eax
	cmp	DWORD PTR _hRunningGauges, 0
	jg	SHORT $LN1@RunningGau
; Line 202
	call	_SystemError
$LN1@RunningGau:
; Line 205
	mov	esi, esp
	mov	eax, DWORD PTR _hRunningGauges
	push	eax
	mov	ecx, DWORD PTR _screen$[ebp]
	mov	edx, DWORD PTR _pScreenList$[ebp]
	mov	eax, DWORD PTR [edx+ecx*8+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 207
	mov	DWORD PTR _screen_scrolling, 1
; Line 209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RunningGauges ENDP
_TEXT	ENDS
PUBLIC	_rgDeleteScreen
EXTRN	_GetCurrentScreen:PROC
_BSS	SEGMENT
_peekingScreenID DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _rgDeleteScreen
_TEXT	SEGMENT
_index$ = 8						; size = 4
_rgDeleteScreen PROC					; COMDAT
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	call	_GetCurrentScreen
	cmp	eax, DWORD PTR _peekingScreenID
	je	SHORT $LN2@rgDeleteSc
; Line 214
	cmp	DWORD PTR _peekingScreenHandle, 0
	je	SHORT $LN2@rgDeleteSc
; Line 215
	mov	eax, DWORD PTR _peekingScreenHandle
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@rgDeleteSc:
; Line 217
	mov	DWORD PTR _peekingScreenID, -1
; Line 218
	mov	DWORD PTR _peekingScreenHandle, 0
; Line 219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_rgDeleteScreen ENDP
_TEXT	ENDS
END
