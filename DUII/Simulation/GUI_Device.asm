; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Device.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DEVICE__GetpDevice
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_device.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DEVICE__GetpDevice
_TEXT	SEGMENT
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_DeviceClass$ = 12					; size = 4
_GUI_DEVICE__GetpDevice PROC				; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 117
	mov	DWORD PTR _pDevice$[ebp], 0
; Line 122
	cmp	DWORD PTR _LayerIndex$[ebp], 1
	jl	SHORT $LN4@GUI_DEVICE
; Line 123
	xor	eax, eax
	jmp	SHORT $LN5@GUI_DEVICE
$LN4@GUI_DEVICE:
; Line 128
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
$LN3@GUI_DEVICE:
; Line 129
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@GUI_DEVICE
; Line 130
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _DeviceClass$[ebp]
	jne	SHORT $LN1@GUI_DEVICE
; Line 131
	mov	eax, DWORD PTR _pDevice$[ebp]
	jmp	SHORT $LN5@GUI_DEVICE
$LN1@GUI_DEVICE:
; Line 133
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 134
	jmp	SHORT $LN3@GUI_DEVICE
$LN2@GUI_DEVICE:
; Line 135
	xor	eax, eax
$LN5@GUI_DEVICE:
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE__GetpDevice ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE__GetpDriver
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE__GetpDriver
_TEXT	SEGMENT
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_GUI_DEVICE__GetpDriver PROC				; COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	mov	DWORD PTR _pDevice$[ebp], 0
; Line 152
	cmp	DWORD PTR _LayerIndex$[ebp], 1
	jl	SHORT $LN4@GUI_DEVICE@2
; Line 153
	xor	eax, eax
	jmp	SHORT $LN5@GUI_DEVICE@2
$LN4@GUI_DEVICE@2:
; Line 158
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
$LN3@GUI_DEVICE@2:
; Line 159
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@GUI_DEVICE@2
; Line 160
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx], 0
	jne	SHORT $LN1@GUI_DEVICE@2
; Line 161
	jmp	SHORT $LN2@GUI_DEVICE@2
$LN1@GUI_DEVICE@2:
; Line 163
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 164
	jmp	SHORT $LN3@GUI_DEVICE@2
$LN2@GUI_DEVICE@2:
; Line 165
	mov	eax, DWORD PTR _pDevice$[ebp]
$LN5@GUI_DEVICE@2:
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE__GetpDriver ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE_Delete
EXTRN	_GUI_ALLOC_FreeFixedBlock:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE_Delete
_TEXT	SEGMENT
_pDevice$ = 8						; size = 4
_GUI_DEVICE_Delete PROC					; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 179
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	_GUI_ALLOC_FreeFixedBlock
	add	esp, 4
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE_Delete ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE_Create
EXTRN	_GUI_ALLOC_GetFixedBlock:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE_Create
_TEXT	SEGMENT
_pDevice$ = -8						; size = 4
_pDeviceAPI$ = 8					; size = 4
_pColorConvAPI$ = 12					; size = 4
_Flags$ = 16						; size = 2
_LayerIndex$ = 20					; size = 4
_GUI_DEVICE_Create PROC					; COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 192
	cmp	DWORD PTR _LayerIndex$[ebp], 1
	jl	SHORT $LN2@GUI_DEVICE@3
; Line 193
	xor	eax, eax
	jmp	SHORT $LN3@GUI_DEVICE@3
$LN2@GUI_DEVICE@3:
; Line 198
	push	28					; 0000001cH
	call	_GUI_ALLOC_GetFixedBlock
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 199
	cmp	DWORD PTR _pDevice$[ebp], 0
	jne	SHORT $LN1@GUI_DEVICE@3
; Line 200
	xor	eax, eax
	jmp	SHORT $LN3@GUI_DEVICE@3
$LN1@GUI_DEVICE@3:
; Line 205
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pColorConvAPI$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	__SetColorConv
	add	esp, 12					; 0000000cH
; Line 206
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR _LayerIndex$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 207
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	cx, WORD PTR _Flags$[ebp]
	mov	WORD PTR [eax+20], cx
; Line 208
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR _pDeviceAPI$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 209
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax], 0
; Line 210
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 211
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 212
	mov	eax, DWORD PTR _pDevice$[ebp]
$LN3@GUI_DEVICE@3:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE_Create ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetColorConv
_TEXT	SEGMENT
_pDeviceCur$ = -8					; size = 4
_pDevice$ = 8						; size = 4
_pColorConvAPI$ = 12					; size = 4
_LayerIndex$ = 16					; size = 4
__SetColorConv PROC					; COMDAT
; Line 87
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 90
	cmp	DWORD PTR _pColorConvAPI$[ebp], 0
	je	SHORT $LN5@SetColorCo
; Line 91
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR _pColorConvAPI$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 92
	jmp	SHORT $LN6@SetColorCo
$LN5@SetColorCo:
; Line 93
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 94
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	je	SHORT $LN6@SetColorCo
$LN2@SetColorCo:
; Line 95
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@SetColorCo
; Line 96
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 97
	jmp	SHORT $LN2@SetColorCo
$LN1@SetColorCo:
; Line 98
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR _pDeviceCur$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
$LN6@SetColorCo:
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetColorConv ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE_Unlink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE_Unlink
_TEXT	SEGMENT
_pDevice$ = 8						; size = 4
_GUI_DEVICE_Unlink PROC					; COMDAT
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	__UnlinkDevice
	add	esp, 4
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE_Unlink ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __UnlinkDevice
_TEXT	SEGMENT
_LayerIndex$ = -8					; size = 4
_pDevice$ = 8						; size = 4
__UnlinkDevice PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _LayerIndex$[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	cmp	ecx, DWORD PTR _pDevice$[ebp]
	jne	SHORT $LN3@UnlinkDevi
; Line 64
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _GUI_Context[eax*4+72], edx
$LN3@UnlinkDevi:
; Line 66
	mov	eax, DWORD PTR _pDevice$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@UnlinkDevi
; Line 67
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
$LN2@UnlinkDevi:
; Line 69
	mov	eax, DWORD PTR _pDevice$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN1@UnlinkDevi
; Line 70
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDevice$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax
$LN1@UnlinkDevi:
; Line 72
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax], 0
; Line 73
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__UnlinkDevice ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE_Link
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE_Link
_TEXT	SEGMENT
_LayerIndex$ = -20					; size = 4
_pDeviceCur$ = -8					; size = 4
_pDeviceNew$ = 8					; size = 4
_GUI_DEVICE_Link PROC					; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 234
	cmp	DWORD PTR _pDeviceNew$[ebp], 0
	jne	SHORT $LN17@GUI_DEVICE@4
; Line 235
	mov	eax, 1
	jmp	$LN18@GUI_DEVICE@4
$LN17@GUI_DEVICE@4:
; Line 240
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _LayerIndex$[ebp], ecx
; Line 241
	cmp	DWORD PTR _LayerIndex$[ebp], 1
	jl	SHORT $LN16@GUI_DEVICE@4
; Line 242
	mov	eax, 1
	jmp	$LN18@GUI_DEVICE@4
$LN16@GUI_DEVICE@4:
; Line 244
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	mov	ecx, DWORD PTR _LayerIndex$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 245
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 246
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	jne	SHORT $LN14@GUI_DEVICE@4
; Line 247
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _pDeviceNew$[ebp]
	mov	DWORD PTR _GUI_Context[eax*4+72], ecx
; Line 248
	xor	eax, eax
	jmp	$LN18@GUI_DEVICE@4
$LN14@GUI_DEVICE@4:
; Line 253
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN12@GUI_DEVICE@4
; Line 254
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 255
	jmp	SHORT $LN14@GUI_DEVICE@4
$LN12@GUI_DEVICE@4:
; Line 259
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	je	SHORT $LN11@GUI_DEVICE@4
; Line 260
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pDeviceNew$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	jg	SHORT $LN10@GUI_DEVICE@4
; Line 261
	jmp	SHORT $LN11@GUI_DEVICE@4
$LN10@GUI_DEVICE@4:
; Line 263
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 264
	jmp	SHORT $LN12@GUI_DEVICE@4
$LN11@GUI_DEVICE@4:
; Line 268
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	je	SHORT $LN9@GUI_DEVICE@4
; Line 269
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pDeviceNew$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	jne	SHORT $LN9@GUI_DEVICE@4
; Line 270
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	cmp	ecx, 1
	jne	SHORT $LN9@GUI_DEVICE@4
$LN6@GUI_DEVICE@4:
; Line 271
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	je	SHORT $LN9@GUI_DEVICE@4
; Line 272
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN4@GUI_DEVICE@4
; Line 273
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pDeviceCur$[ebp], ecx
; Line 274
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pDeviceNew$[ebp]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [ecx]
	cmp	ecx, DWORD PTR [eax]
	jge	SHORT $LN3@GUI_DEVICE@4
; Line 275
	jmp	SHORT $LN9@GUI_DEVICE@4
$LN3@GUI_DEVICE@4:
; Line 277
	jmp	SHORT $LN2@GUI_DEVICE@4
$LN4@GUI_DEVICE@4:
; Line 278
	jmp	SHORT $LN9@GUI_DEVICE@4
$LN2@GUI_DEVICE@4:
; Line 280
	jmp	SHORT $LN6@GUI_DEVICE@4
$LN9@GUI_DEVICE@4:
; Line 287
	cmp	DWORD PTR _pDeviceCur$[ebp], 0
	jne	SHORT $LN1@GUI_DEVICE@4
; Line 288
	mov	eax, 1
	jmp	SHORT $LN18@GUI_DEVICE@4
$LN1@GUI_DEVICE@4:
; Line 293
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDeviceNew$[ebp]
	push	ecx
	call	__LinkDevice
	add	esp, 8
; Line 294
	xor	eax, eax
$LN18@GUI_DEVICE@4:
; Line 295
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE_Link ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __LinkDevice
_TEXT	SEGMENT
_LayerIndex$ = -8					; size = 4
_pDeviceNew$ = 8					; size = 4
_pDeviceCur$ = 12					; size = 4
__LinkDevice PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _LayerIndex$[ebp], ecx
; Line 42
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN2@LinkDevice
; Line 43
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pDeviceNew$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 44
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	mov	ecx, DWORD PTR _pDeviceCur$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 45
	jmp	SHORT $LN1@LinkDevice
$LN2@LinkDevice:
; Line 46
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	mov	ecx, DWORD PTR _pDeviceNew$[ebp]
	mov	DWORD PTR _GUI_Context[eax*4+72], ecx
$LN1@LinkDevice:
; Line 48
	mov	eax, DWORD PTR _pDeviceCur$[ebp]
	mov	ecx, DWORD PTR _pDeviceNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 49
	mov	eax, DWORD PTR _pDeviceNew$[ebp]
	mov	ecx, DWORD PTR _pDeviceCur$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__LinkDevice ENDP
_TEXT	ENDS
PUBLIC	_GUI_DEVICE_CreateAndLink
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DEVICE_CreateAndLink
_TEXT	SEGMENT
_pDevice$ = -8						; size = 4
_pDeviceAPI$ = 8					; size = 4
_pColorConvAPI$ = 12					; size = 4
_Flags$ = 16						; size = 2
_LayerIndex$ = 20					; size = 4
_GUI_DEVICE_CreateAndLink PROC				; COMDAT
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 307
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	movzx	ecx, WORD PTR _Flags$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pColorConvAPI$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDeviceAPI$[ebp]
	push	eax
	call	_GUI_DEVICE_Create
	add	esp, 16					; 00000010H
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 311
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN1@GUI_DEVICE@5
; Line 312
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	_GUI_DEVICE_Link
	add	esp, 4
$LN1@GUI_DEVICE@5:
; Line 314
	mov	eax, DWORD PTR _pDevice$[ebp]
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DEVICE_CreateAndLink ENDP
_TEXT	ENDS
END
