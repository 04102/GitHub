; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_SetAnchor.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG9441	DB	'WM_SetAnchor.c: Wrong anchor flags', 00H
_DATA	ENDS
PUBLIC	_WM_SetAnchor
EXTRN	_GUI_Warn:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_setanchor.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetAnchor
_TEXT	SEGMENT
_Mask$9438 = -20					; size = 2
_pWin$9437 = -8						; size = 4
_hWin$ = 8						; size = 4
_AnchorFlags$ = 12					; size = 2
_WM_SetAnchor PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@WM_SetAnch
; Line 42
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$9437[ebp], eax
; Line 43
	mov	eax, 1920				; 00000780H
	mov	WORD PTR _Mask$9438[ebp], ax
; Line 45
	movzx	eax, WORD PTR _AnchorFlags$[ebp]
	movzx	ecx, WORD PTR _Mask$9438[ebp]
	not	ecx
	and	eax, ecx
	je	SHORT $LN1@WM_SetAnch
	push	OFFSET $SG9441
	call	_GUI_Warn
	add	esp, 4
$LN1@WM_SetAnch:
; Line 47
	movzx	eax, WORD PTR _Mask$9438[ebp]
	movzx	ecx, WORD PTR _AnchorFlags$[ebp]
	and	ecx, eax
	mov	WORD PTR _AnchorFlags$[ebp], cx
; Line 50
	movzx	eax, WORD PTR _Mask$9438[ebp]
	not	eax
	mov	ecx, DWORD PTR _pWin$9437[ebp]
	and	eax, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _pWin$9437[ebp]
	mov	DWORD PTR [edx+40], eax
; Line 51
	movzx	eax, WORD PTR _AnchorFlags$[ebp]
	mov	ecx, DWORD PTR _pWin$9437[ebp]
	or	eax, DWORD PTR [ecx+40]
	mov	edx, DWORD PTR _pWin$9437[ebp]
	mov	DWORD PTR [edx+40], eax
$LN3@WM_SetAnch:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetAnchor ENDP
_TEXT	ENDS
END
