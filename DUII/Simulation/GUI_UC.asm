; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_UC.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_UC_GetCharSize
EXTRN	_GUI_pUC_API:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_uc.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_UC_GetCharSize
_TEXT	SEGMENT
_r$ = -8						; size = 4
_s$ = 8							; size = 4
_GUI_UC_GetCharSize PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 40
	mov	eax, DWORD PTR _r$[ebp]
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC_GetCharSize ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC_GetCharCode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC_GetCharCode
_TEXT	SEGMENT
_r$ = -8						; size = 2
_s$ = 8							; size = 4
_GUI_UC_GetCharCode PROC				; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _r$[ebp], ax
; Line 52
	mov	ax, WORD PTR _r$[ebp]
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC_GetCharCode ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC_Encode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC_Encode
_TEXT	SEGMENT
_r$ = -8						; size = 4
_s$ = 8							; size = 4
_Char$ = 12						; size = 2
_GUI_UC_Encode PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	esi, esp
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_pUC_API
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _r$[ebp]
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC_Encode ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC__CalcSizeOfChar
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC__CalcSizeOfChar
_TEXT	SEGMENT
_Char$ = 8						; size = 2
_GUI_UC__CalcSizeOfChar PROC				; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	mov	esi, esp
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC__CalcSizeOfChar ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC__GetCharCodeInc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC__GetCharCodeInc
_TEXT	SEGMENT
_r$ = -20						; size = 2
_s$ = -8						; size = 4
_ps$ = 8						; size = 4
_GUI_UC__GetCharCodeInc PROC				; COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 82
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx
; Line 83
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _r$[ebp], ax
; Line 84
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 85
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 86
	mov	ax, WORD PTR _r$[ebp]
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC__GetCharCodeInc ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC__NumChars2NumBytes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC__NumChars2NumBytes
_TEXT	SEGMENT
tv65 = -220						; size = 4
_NumBytes$ = -20					; size = 4
_CharSize$ = -8						; size = 4
_s$ = 8							; size = 4
_NumChars$ = 12						; size = 4
_GUI_UC__NumChars2NumBytes PROC				; COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 94
	mov	DWORD PTR _NumBytes$[ebp], 0
$LN2@GUI_UC__Nu:
; Line 95
	mov	eax, DWORD PTR _NumChars$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _NumChars$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _NumChars$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN1@GUI_UC__Nu
; Line 96
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _CharSize$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _CharSize$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 98
	mov	eax, DWORD PTR _NumBytes$[ebp]
	add	eax, DWORD PTR _CharSize$[ebp]
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 99
	jmp	SHORT $LN2@GUI_UC__Nu
$LN1@GUI_UC__Nu:
; Line 100
	mov	eax, DWORD PTR _NumBytes$[ebp]
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC__NumChars2NumBytes ENDP
_TEXT	ENDS
PUBLIC	_GUI_UC__NumBytes2NumChars
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_UC__NumBytes2NumChars
_TEXT	SEGMENT
_Bytes$ = -32						; size = 4
_Chars$ = -20						; size = 4
_CharSize$ = -8						; size = 4
_s$ = 8							; size = 4
_NumBytes$ = 12						; size = 4
_GUI_UC__NumBytes2NumChars PROC				; COMDAT
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	mov	DWORD PTR _Chars$[ebp], 0
	mov	DWORD PTR _Bytes$[ebp], 0
$LN2@GUI_UC__Nu@2:
; Line 109
	mov	eax, DWORD PTR _NumBytes$[ebp]
	cmp	eax, DWORD PTR _Bytes$[ebp]
	jle	SHORT $LN1@GUI_UC__Nu@2
; Line 110
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _Bytes$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _CharSize$[ebp], eax
; Line 111
	mov	eax, DWORD PTR _Bytes$[ebp]
	add	eax, DWORD PTR _CharSize$[ebp]
	mov	DWORD PTR _Bytes$[ebp], eax
; Line 112
	mov	eax, DWORD PTR _Chars$[ebp]
	add	eax, 1
	mov	DWORD PTR _Chars$[ebp], eax
; Line 113
	jmp	SHORT $LN2@GUI_UC__Nu@2
$LN1@GUI_UC__Nu@2:
; Line 114
	mov	eax, DWORD PTR _Chars$[ebp]
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC__NumBytes2NumChars ENDP
_TEXT	ENDS
END
