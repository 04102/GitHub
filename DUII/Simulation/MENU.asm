; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\MENU.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MENU__DefaultProps
PUBLIC	_MENU__pDefaultEffect
EXTRN	_WIDGET_Effect_3D1L:BYTE
EXTRN	_GUI_Font13_1:BYTE
_BSS	SEGMENT
$SG13534 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_MENU__DefaultProps DD 00H
	DD	0ffffffH
	DD	07c7c7cH
	DD	0d3d3d3H
	DD	0ffffffH
	DD	0d3d3d3H
	DD	0980000H
	DD	0d3d3d3H
	DD	0980000H
	DD	07c7c7cH
	DB	04H
	DB	04H
	DB	02H
	DB	02H
	DD	FLAT:_GUI_Font13_1
_MENU__pDefaultEffect DD FLAT:_WIDGET_Effect_3D1L
$SG13420 DB	'MENU.c: Wrong handle type or Object not init''ed', 00H
$SG13490 DB	'MENU_CreateEx failed', 00H
	ORG $+3
$SG13493 DB	'MENU_CreateEx failed', 00H
_DATA	ENDS
PUBLIC	_MENU_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\menu.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _MENU_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_MENU_LockH PROC					; COMDAT
; Line 1517
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1518
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 1519
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@MENU_LockH
; Line 1520
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+128], 1296387669		; 4d454e55H
	je	SHORT $LN2@MENU_LockH
; Line 1521
	push	OFFSET $SG13420
	call	_GUI_ErrorOut
	add	esp, 4
; Line 1522
	xor	eax, eax
	jmp	SHORT $LN3@MENU_LockH
$LN2@MENU_LockH:
; Line 1525
	mov	eax, DWORD PTR _p$[ebp]
$LN3@MENU_LockH:
; Line 1526
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_LockH ENDP
_TEXT	ENDS
PUBLIC	_MENU_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_GUI_ARRAY_Delete:PROC
EXTRN	_WIDGET_HandleActive:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU_Callback
_TEXT	SEGMENT
tv129 = -280						; size = 4
_HasFocus$ = -80					; size = 4
_Result$ = -68						; size = 4
_OldWidgetState$ = -56					; size = 4
_Sel$ = -44						; size = 4
_ItemArray$ = -32					; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_MENU_Callback PROC					; COMDAT
; Line 1539
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1546
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 1547
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1548
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	mov	DWORD PTR _OldWidgetState$[ebp], ecx
; Line 1549
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1550
	mov	DWORD PTR _Result$[ebp], 1
; Line 1551
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 17			; 00000011H
	je	SHORT $LN20@MENU_Callb
; Line 1553
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	mov	DWORD PTR _Result$[ebp], eax
$LN20@MENU_Callb:
; Line 1555
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1556
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1557
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 1558
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	mov	DWORD PTR _HasFocus$[ebp], ecx
; Line 1559
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1561
	mov	eax, DWORD PTR _OldWidgetState$[ebp]
	and	eax, 1
	cmp	eax, DWORD PTR _HasFocus$[ebp]
	je	SHORT $LN19@MENU_Callb
; Line 1562
	cmp	DWORD PTR _HasFocus$[ebp], 0
	je	SHORT $LN18@MENU_Callb
; Line 1563
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 1564
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1565
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 1566
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1567
	cmp	DWORD PTR _Sel$[ebp], 0
	jg	SHORT $LN17@MENU_Callb
; Line 1568
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
; Line 1569
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetCapture
	add	esp, 4
$LN17@MENU_Callb:
; Line 1571
	jmp	SHORT $LN19@MENU_Callb
$LN18@MENU_Callb:
; Line 1572
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ReleaseCapture
	add	esp, 4
$LN19@MENU_Callb:
; Line 1576
	cmp	DWORD PTR _Result$[ebp], 0
	jne	SHORT $LN15@MENU_Callb
; Line 1577
	jmp	$LN21@MENU_Callb
$LN15@MENU_Callb:
; Line 1579
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv129[ebp], ecx
	mov	edx, DWORD PTR tv129[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv129[ebp], edx
	cmp	DWORD PTR tv129[ebp], 33		; 00000021H
	ja	$LN13@MENU_Callb
	mov	eax, DWORD PTR tv129[ebp]
	movzx	ecx, BYTE PTR $LN23@MENU_Callb[eax]
	jmp	DWORD PTR $LN24@MENU_Callb[ecx*4]
$LN12@MENU_Callb:
; Line 1581
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ForwardPIDStateChange
	add	esp, 8
; Line 1582
	jmp	$LN13@MENU_Callb
$LN11@MENU_Callb:
; Line 1584
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnMenu
	add	esp, 8
; Line 1585
	jmp	$LN21@MENU_Callb
$LN10@MENU_Callb:
; Line 1590
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN9@MENU_Callb
; Line 1591
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ForwardPIDMsgToOwner
	add	esp, 8
	test	eax, eax
	je	SHORT $LN9@MENU_Callb
; Line 1592
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ForwardPIDMsg
	add	esp, 8
$LN9@MENU_Callb:
; Line 1595
	jmp	SHORT $LN13@MENU_Callb
$LN7@MENU_Callb:
; Line 1598
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnMouseOver
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN6@MENU_Callb
; Line 1599
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ForwardPIDMsgToOwner
	add	esp, 8
$LN6@MENU_Callb:
; Line 1601
	jmp	SHORT $LN13@MENU_Callb
$LN5@MENU_Callb:
; Line 1604
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN4@MENU_Callb
; Line 1605
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnKey
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@MENU_Callb
; Line 1606
	jmp	SHORT $LN21@MENU_Callb
$LN4@MENU_Callb:
; Line 1609
	jmp	SHORT $LN13@MENU_Callb
$LN2@MENU_Callb:
; Line 1611
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnPaint
	add	esp, 4
; Line 1612
	jmp	SHORT $LN13@MENU_Callb
$LN1@MENU_Callb:
; Line 1614
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_Delete
	add	esp, 4
$LN13@MENU_Callb:
; Line 1617
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN21@MENU_Callb:
; Line 1618
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@MENU_Callb:
	DD	$LN1@MENU_Callb
	DD	$LN10@MENU_Callb
	DD	$LN5@MENU_Callb
	DD	$LN2@MENU_Callb
	DD	$LN7@MENU_Callb
	DD	$LN12@MENU_Callb
	DD	$LN11@MENU_Callb
	DD	$LN13@MENU_Callb
$LN23@MENU_Callb:
	DB	0
	DB	1
	DB	7
	DB	2
	DB	3
	DB	4
	DB	5
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	6
_MENU_Callback ENDP
_TEXT	ENDS
EXTRN	_WM_SetCapture:PROC
EXTRN	_WM_HasCaptured:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetCapture
_TEXT	SEGMENT
_IsSubmenuActive$ = -17					; size = 1
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__SetCapture PROC					; COMDAT
; Line 470
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 473
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 474
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _IsSubmenuActive$[ebp], cl
; Line 475
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 476
	movzx	eax, BYTE PTR _IsSubmenuActive$[ebp]
	test	eax, eax
	jne	SHORT $LN3@SetCapture
; Line 477
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_HasCaptured
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@SetCapture
; Line 478
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetCapture
	add	esp, 8
$LN3@SetCapture:
; Line 481
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetCapture ENDP
_TEXT	ENDS
EXTRN	_WM_ReleaseCapture:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ReleaseCapture
_TEXT	SEGMENT
_Flags$ = -20						; size = 2
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__ReleaseCapture PROC					; COMDAT
; Line 487
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 490
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_HasCaptured
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@ReleaseCap
; Line 491
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 492
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 493
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 494
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@ReleaseCap
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN3@ReleaseCap
; Line 495
	call	_WM_ReleaseCapture
$LN3@ReleaseCap:
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ReleaseCapture ENDP
_TEXT	ENDS
PUBLIC	_MENU__SendMenuMessage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __IsTopLevelMenu
_TEXT	SEGMENT
_hOwner$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__IsTopLevelMenu PROC					; COMDAT
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 166
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 167
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 168
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 169
	push	0
	push	5
	mov	eax, DWORD PTR _hOwner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
	test	eax, eax
	jne	SHORT $LN1@IsTopLevel
; Line 170
	mov	al, 1
	jmp	SHORT $LN2@IsTopLevel
$LN1@IsTopLevel:
; Line 172
	xor	al, al
$LN2@IsTopLevel:
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsTopLevelMenu ENDP
_TEXT	ENDS
PUBLIC	_MENU__InvalidateItem
EXTRN	_WM_DetachWindow:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CloseSubmenu
_TEXT	SEGMENT
_hSubmenu$12920 = -80					; size = 4
_pItem$12917 = -68					; size = 4
_IsSubmenuActive$ = -53					; size = 1
_Sel$ = -44						; size = 4
_ItemArray$ = -32					; size = 4
_Flags$ = -20						; size = 2
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__CloseSubmenu PROC					; COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 510
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 511
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 512
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 513
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 514
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _IsSubmenuActive$[ebp], cl
; Line 515
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 516
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 64					; 00000040H
	je	$LN5@CloseSubme
; Line 517
	movzx	eax, BYTE PTR _IsSubmenuActive$[ebp]
	test	eax, eax
	je	$LN5@CloseSubme
; Line 519
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$12917[ebp], eax
; Line 521
	cmp	DWORD PTR _pItem$12917[ebp], 0
	je	SHORT $LN2@CloseSubme
; Line 523
	mov	eax, DWORD PTR _pItem$12917[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hSubmenu$12920[ebp], ecx
; Line 524
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12917[ebp], 0
; Line 525
	push	0
	push	4
	mov	eax, DWORD PTR _hSubmenu$12920[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
; Line 526
	mov	eax, DWORD PTR _hSubmenu$12920[ebp]
	push	eax
	call	_WM_DetachWindow
	add	esp, 4
; Line 527
	jmp	SHORT $LN1@CloseSubme
$LN2@CloseSubme:
; Line 528
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12917[ebp], 0
$LN1@CloseSubme:
; Line 530
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 531
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+114], 0
; Line 532
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 538
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetCapture
	add	esp, 4
; Line 540
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__InvalidateItem
	add	esp, 8
$LN5@CloseSubme:
; Line 543
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CloseSubmenu ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetSelection
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__SetSelection PROC					; COMDAT
; Line 676
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 677
	push	0
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelectionEx
	add	esp, 12					; 0000000cH
; Line 678
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetSelection ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetSelectionEx
_TEXT	SEGMENT
_Flags$12982 = -80					; size = 2
_Id$12981 = -68						; size = 2
_pItem$12980 = -56					; size = 4
_hOwner$ = -44						; size = 4
_ItemArray$ = -32					; size = 4
_IsSubmenuActive$ = -17					; size = 1
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_SuppressNotification$ = 16				; size = 4
__SetSelectionEx PROC					; COMDAT
; Line 641
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 646
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 647
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	cmp	ecx, DWORD PTR [eax+124]
	je	$LN4@SetSelecti
; Line 648
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _IsSubmenuActive$[ebp], cl
; Line 649
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 650
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 651
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__InvalidateItem
	add	esp, 8
; Line 652
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 653
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__InvalidateItem
	add	esp, 8
; Line 654
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 655
	movzx	eax, BYTE PTR _IsSubmenuActive$[ebp]
	test	eax, eax
	jne	SHORT $LN3@SetSelecti
	cmp	DWORD PTR _Index$[ebp], 0
	jl	SHORT $LN3@SetSelecti
	cmp	DWORD PTR _SuppressNotification$[ebp], 0
	jne	SHORT $LN3@SetSelecti
; Line 659
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$12980[ebp], eax
; Line 660
	mov	eax, DWORD PTR _pItem$12980[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Id$12981[ebp], cx
; Line 661
	mov	eax, DWORD PTR _pItem$12980[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Flags$12982[ebp], cx
; Line 662
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12980[ebp], 0
; Line 663
	movzx	eax, WORD PTR _Flags$12982[ebp]
	and	eax, 2
	jne	SHORT $LN3@SetSelecti
; Line 664
	movzx	eax, WORD PTR _Id$12981[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN3@SetSelecti:
; Line 667
	jmp	SHORT $LN5@SetSelecti
$LN4@SetSelecti:
; Line 668
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN5@SetSelecti:
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetSelectionEx ENDP
_TEXT	ENDS
EXTRN	_WM__SendMessage:PROC
EXTRN	_WM_GetWindowOrgY:PROC
EXTRN	_WM_GetWindowOrgX:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ForwardPIDMsgToOwner
_TEXT	SEGMENT
tv75 = -232						; size = 4
_pState$13155 = -32					; size = 4
_hOwner$13151 = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__ForwardPIDMsgToOwner PROC				; COMDAT
; Line 984
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 986
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	$LN3@ForwardPID
; Line 988
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 989
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN6@ForwardPID
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR tv75[ebp], edx
	jmp	SHORT $LN7@ForwardPID
$LN6@ForwardPID:
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR tv75[ebp], eax
$LN7@ForwardPID:
	mov	ecx, DWORD PTR tv75[ebp]
	mov	DWORD PTR _hOwner$13151[ebp], ecx
; Line 990
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 991
	cmp	DWORD PTR _hOwner$13151[ebp], 0
	je	SHORT $LN3@ForwardPID
; Line 992
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN1@ForwardPID
; Line 994
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$13155[ebp], ecx
; Line 995
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hOwner$13151[ebp]
	push	ecx
	call	_WM_GetWindowOrgX
	add	esp, 4
	sub	esi, eax
	mov	edx, DWORD PTR _pState$13155[ebp]
	add	esi, DWORD PTR [edx]
	mov	eax, DWORD PTR _pState$13155[ebp]
	mov	DWORD PTR [eax], esi
; Line 996
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hOwner$13151[ebp]
	push	ecx
	call	_WM_GetWindowOrgY
	add	esp, 4
	sub	esi, eax
	mov	edx, DWORD PTR _pState$13155[ebp]
	add	esi, DWORD PTR [edx+4]
	mov	eax, DWORD PTR _pState$13155[ebp]
	mov	DWORD PTR [eax+4], esi
$LN1@ForwardPID:
; Line 998
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOwner$13151[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 999
	xor	eax, eax
	jmp	SHORT $LN4@ForwardPID
$LN3@ForwardPID:
; Line 1002
	mov	eax, 1
$LN4@ForwardPID:
; Line 1003
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ForwardPIDMsgToOwner ENDP
_TEXT	ENDS
EXTRN	_WM__SetLastTouched:PROC
EXTRN	_WM_SetFocus:PROC
EXTRN	_WM_HasFocus:PROC
EXTRN	_WM_Screen2hWin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ForwardPIDStateChange
_TEXT	SEGMENT
tv93 = -280						; size = 4
_y$ = -80						; size = 4
_x$ = -68						; size = 4
_XYInWidget$ = -56					; size = 4
_pState$ = -44						; size = 4
_hWin$ = -32						; size = 4
_hOwner$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__ForwardPIDStateChange PROC				; COMDAT
; Line 1009
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1015
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1016
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 1017
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 1018
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x$[ebp], ecx
; Line 1019
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _y$[ebp], ecx
; Line 1020
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__XYInWidget
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _XYInWidget$[ebp], eax
; Line 1021
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1022
	cmp	DWORD PTR _XYInWidget$[ebp], 0
	jne	SHORT $LN5@ForwardPID@2
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN6@ForwardPID@2
$LN5@ForwardPID@2:
; Line 1023
	jmp	$LN7@ForwardPID@2
$LN6@ForwardPID@2:
; Line 1025
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 1026
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 1027
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@ForwardPID@2
; Line 1028
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_WM_Screen2hWin
	add	esp, 8
	mov	DWORD PTR _hWin$[ebp], eax
; Line 1029
	call	_WM_ReleaseCapture
; Line 1030
	jmp	SHORT $LN3@ForwardPID@2
$LN4@ForwardPID@2:
; Line 1031
	cmp	DWORD PTR _hOwner$[ebp], 0
	je	SHORT $LN9@ForwardPID@2
	mov	eax, DWORD PTR _hOwner$[ebp]
	mov	DWORD PTR tv93[ebp], eax
	jmp	SHORT $LN10@ForwardPID@2
$LN9@ForwardPID@2:
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR tv93[ebp], eax
$LN10@ForwardPID@2:
	mov	edx, DWORD PTR tv93[ebp]
	mov	DWORD PTR _hWin$[ebp], edx
; Line 1032
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _x$[ebp], ecx
; Line 1033
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 1034
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_HasFocus
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@ForwardPID@2
; Line 1035
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
$LN3@ForwardPID@2:
; Line 1038
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN7@ForwardPID@2
; Line 1039
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1040
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1041
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1042
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 1043
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM__SetLastTouched
	add	esp, 4
$LN7@ForwardPID@2:
; Line 1045
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ForwardPIDStateChange ENDP
_TEXT	ENDS
EXTRN	_WM__GetClientRectWin:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __XYInWidget
_TEXT	SEGMENT
_r$13089 = -24						; size = 8
_XYInWidget$ = -8					; size = 4
_pObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__XYInWidget PROC					; COMDAT
; Line 842
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 844
	mov	DWORD PTR _XYInWidget$[ebp], 0
; Line 845
	cmp	DWORD PTR _x$[ebp], 0
	jl	SHORT $LN2@XYInWidget
	cmp	DWORD PTR _y$[ebp], 0
	jl	SHORT $LN2@XYInWidget
; Line 847
	lea	eax, DWORD PTR _r$13089[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WM__GetClientRectWin
	add	esp, 8
; Line 848
	movsx	eax, WORD PTR _r$13089[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jg	SHORT $LN2@XYInWidget
	movsx	eax, WORD PTR _r$13089[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jg	SHORT $LN2@XYInWidget
; Line 849
	mov	DWORD PTR _XYInWidget$[ebp], 1
$LN2@XYInWidget:
; Line 852
	mov	eax, DWORD PTR _XYInWidget$[ebp]
; Line 853
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@XYInWidget
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@XYInWidget:
	DD	1
	DD	$LN6@XYInWidget
$LN6@XYInWidget:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN5@XYInWidget
$LN5@XYInWidget:
	DB	114					; 00000072H
	DB	0
__XYInWidget ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ForwardPIDMsg
_TEXT	SEGMENT
_y$ = -68						; size = 4
_x$ = -56						; size = 4
_XYInWidget$ = -44					; size = 4
_pState$ = -32						; size = 4
_hWin$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__ForwardPIDMsg PROC					; COMDAT
; Line 1051
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1056
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 1057
	cmp	DWORD PTR _pState$[ebp], 0
	jne	SHORT $LN3@ForwardPID@3
; Line 1058
	jmp	$LN4@ForwardPID@3
$LN3@ForwardPID@3:
; Line 1060
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x$[ebp], ecx
; Line 1061
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _y$[ebp], ecx
; Line 1062
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1063
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__XYInWidget
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _XYInWidget$[ebp], eax
; Line 1064
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1065
	cmp	DWORD PTR _XYInWidget$[ebp], 0
	je	SHORT $LN2@ForwardPID@3
; Line 1066
	jmp	$LN4@ForwardPID@3
$LN2@ForwardPID@3:
; Line 1068
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 1069
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 1070
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_WM_Screen2hWin
	add	esp, 8
	mov	DWORD PTR _hWin$[ebp], eax
; Line 1071
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN4@ForwardPID@3
; Line 1072
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _x$[ebp], ecx
; Line 1073
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 1074
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1075
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1076
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1077
	call	_WM_ReleaseCapture
; Line 1078
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 1079
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM__SetLastTouched
	add	esp, 4
$LN4@ForwardPID@3:
; Line 1081
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ForwardPIDMsg ENDP
_TEXT	ENDS
PUBLIC	_MENU__ResizeMenu
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnMenu
_TEXT	SEGMENT
tv70 = -232						; size = 4
_pData$ = -32						; size = 4
_hOwner$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnMenu PROC						; COMDAT
; Line 1093
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1097
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pData$[ebp], ecx
; Line 1098
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1099
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 1100
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1101
	cmp	DWORD PTR _pData$[ebp], 0
	je	$LN11@OnMenu
; Line 1102
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv70[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 7
	ja	$LN11@OnMenu
	mov	edx, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN13@OnMenu[edx*4]
$LN7@OnMenu:
; Line 1104
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeactivateMenu
	add	esp, 4
; Line 1105
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
; Line 1106
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ClosePopup
	add	esp, 4
$LN6@OnMenu:
; Line 1113
	cmp	DWORD PTR _hOwner$[ebp], 0
	jne	SHORT $LN5@OnMenu
; Line 1114
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hOwner$[ebp], eax
$LN5@OnMenu:
; Line 1116
	cmp	DWORD PTR _hOwner$[ebp], 0
	je	SHORT $LN4@OnMenu
; Line 1117
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1118
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
$LN4@OnMenu:
; Line 1120
	jmp	SHORT $LN11@OnMenu
$LN3@OnMenu:
; Line 1122
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1123
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+124], -1
; Line 1124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+114], 0
; Line 1125
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	or	ecx, 66					; 00000042H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 1126
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1127
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetCapture
	add	esp, 4
; Line 1128
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU__ResizeMenu
	add	esp, 4
; Line 1129
	jmp	SHORT $LN11@OnMenu
$LN2@OnMenu:
; Line 1131
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 1132
	jmp	SHORT $LN11@OnMenu
$LN1@OnMenu:
; Line 1134
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [eax+12], 1
$LN11@OnMenu:
; Line 1138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@OnMenu:
	DD	$LN7@OnMenu
	DD	$LN6@OnMenu
	DD	$LN6@OnMenu
	DD	$LN3@OnMenu
	DD	$LN2@OnMenu
	DD	$LN1@OnMenu
	DD	$LN6@OnMenu
	DD	$LN6@OnMenu
__OnMenu ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ClosePopup
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__ClosePopup PROC					; COMDAT
; Line 624
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 626
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 627
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 128				; 00000080H
	je	SHORT $LN2@ClosePopup
; Line 628
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, -129				; ffffff7fH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 629
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 630
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_DetachWindow
	add	esp, 4
; Line 631
	call	_WM_ReleaseCapture
; Line 632
	jmp	SHORT $LN3@ClosePopup
$LN2@ClosePopup:
; Line 633
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@ClosePopup:
; Line 635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ClosePopup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DeselectItem
_TEXT	SEGMENT
_IsSubmenuActive$ = -17					; size = 1
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__DeselectItem PROC					; COMDAT
; Line 701
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 704
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 705
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _IsSubmenuActive$[ebp], cl
; Line 706
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 707
	movzx	eax, BYTE PTR _IsSubmenuActive$[ebp]
	test	eax, eax
	jne	SHORT $LN2@DeselectIt
; Line 708
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
; Line 709
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ReleaseCapture
	add	esp, 4
$LN2@DeselectIt:
; Line 711
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DeselectItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DeactivateMenu
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__DeactivateMenu PROC					; COMDAT
; Line 786
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 788
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 789
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 790
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 2
	jne	SHORT $LN1@Deactivate
; Line 791
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
$LN1@Deactivate:
; Line 793
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 794
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DeactivateMenu ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnTouch
_TEXT	SEGMENT
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 1144
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1145
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 1146
	cmp	DWORD PTR _pState$[ebp], 0
	je	SHORT $LN1@OnTouch
; Line 1147
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pState$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pState$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__HandlePID
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@OnTouch
$LN1@OnTouch:
; Line 1149
	push	-1
	push	-1
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__HandlePID
	add	esp, 16					; 00000010H
$LN2@OnTouch:
; Line 1150
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WM_PID__GetPrevState:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __HandlePID
_TEXT	SEGMENT
_hObjTopLevel$13141 = -176				; size = 4
_Id$13128 = -164					; size = 2
_Flags$13127 = -152					; size = 2
_pItem$13126 = -140					; size = 4
_Id$13115 = -128					; size = 2
_Flags$13114 = -116					; size = 2
_pItem$13113 = -104					; size = 4
_ItemIndex$13109 = -92					; size = 4
_XYInWidget$ = -80					; size = 4
_PrevState$ = -68					; size = 12
_State$ = -48						; size = 2
_hOwner$ = -36						; size = 4
_ItemArray$ = -24					; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_Pressed$ = 20						; size = 4
__HandlePID PROC					; COMDAT
; Line 863
	push	ebp
	mov	ebp, esp
	sub	esp, 372				; 00000174H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-372]
	mov	ecx, 93					; 0000005dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 870
	push	0
	lea	eax, DWORD PTR _PrevState$[ebp]
	push	eax
	call	_WM_PID__GetPrevState
	add	esp, 8
; Line 874
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 875
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 876
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 877
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _State$[ebp], cx
; Line 878
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__XYInWidget
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _XYInWidget$[ebp], eax
; Line 879
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 880
	cmp	DWORD PTR _XYInWidget$[ebp], 0
	je	$LN23@HandlePID
; Line 882
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemFromPos
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ItemIndex$13109[ebp], eax
; Line 886
	cmp	DWORD PTR _ItemIndex$13109[ebp], 0
	jl	$LN22@HandlePID
; Line 890
	cmp	DWORD PTR _Pressed$[ebp], 0
	jle	$LN21@HandlePID
; Line 891
	movzx	eax, BYTE PTR _PrevState$[ebp+8]
	test	eax, eax
	jne	SHORT $LN20@HandlePID
	cmp	DWORD PTR _Pressed$[ebp], 1
	jne	SHORT $LN20@HandlePID
; Line 895
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ActivateMenu
	add	esp, 8
; Line 896
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SelectItem
	add	esp, 8
; Line 897
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$13113[ebp], eax
; Line 898
	mov	eax, DWORD PTR _pItem$13113[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Flags$13114[ebp], cx
; Line 899
	mov	eax, DWORD PTR _pItem$13113[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Id$13115[ebp], cx
; Line 900
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13113[ebp], 0
; Line 901
	movzx	eax, WORD PTR _Flags$13114[ebp]
	and	eax, 2
	jne	SHORT $LN19@HandlePID
; Line 902
	movzx	eax, WORD PTR _Id$13115[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN19@HandlePID:
; Line 904
	jmp	SHORT $LN18@HandlePID
$LN20@HandlePID:
; Line 905
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SelectItem
	add	esp, 8
$LN18@HandlePID:
; Line 906
	jmp	$LN17@HandlePID
$LN21@HandlePID:
; Line 907
	cmp	DWORD PTR _Pressed$[ebp], 0
	jne	SHORT $LN16@HandlePID
	movzx	eax, BYTE PTR _PrevState$[ebp+8]
	cmp	eax, 1
	jne	SHORT $LN16@HandlePID
; Line 908
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ActivateItem
	add	esp, 8
	jmp	$LN17@HandlePID
$LN16@HandlePID:
; Line 909
	cmp	DWORD PTR _Pressed$[ebp], 0
	jge	$LN17@HandlePID
; Line 911
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__ForwardMouseOverMsg
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN13@HandlePID
; Line 912
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
; Line 913
	jmp	SHORT $LN17@HandlePID
$LN13@HandlePID:
; Line 919
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SelectItem
	add	esp, 8
; Line 920
	mov	eax, DWORD PTR _ItemIndex$13109[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$13126[ebp], eax
; Line 921
	mov	eax, DWORD PTR _pItem$13126[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Flags$13127[ebp], cx
; Line 922
	mov	eax, DWORD PTR _pItem$13126[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Id$13128[ebp], cx
; Line 923
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13126[ebp], 0
; Line 924
	movzx	eax, WORD PTR _Flags$13127[ebp]
	and	eax, 2
	jne	SHORT $LN17@HandlePID
; Line 925
	movzx	eax, WORD PTR _Id$13128[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN17@HandlePID:
; Line 929
	jmp	SHORT $LN10@HandlePID
$LN22@HandlePID:
; Line 933
	cmp	DWORD PTR _Pressed$[ebp], 0
	jle	SHORT $LN9@HandlePID
; Line 934
	movzx	eax, BYTE PTR _PrevState$[ebp+8]
	test	eax, eax
	jne	SHORT $LN8@HandlePID
; Line 939
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeactivateMenu
	add	esp, 4
$LN8@HandlePID:
; Line 941
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
	jmp	SHORT $LN10@HandlePID
$LN9@HandlePID:
; Line 942
	cmp	DWORD PTR _Pressed$[ebp], 0
	jge	SHORT $LN10@HandlePID
; Line 943
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 1
	jne	SHORT $LN10@HandlePID
; Line 944
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
$LN10@HandlePID:
; Line 948
	xor	al, al
	jmp	$LN24@HandlePID
; Line 949
	jmp	$LN4@HandlePID
$LN23@HandlePID:
; Line 953
	cmp	DWORD PTR _Pressed$[ebp], 0
	jle	$LN3@HandlePID
	movzx	eax, BYTE PTR _PrevState$[ebp+8]
	test	eax, eax
	jne	SHORT $LN3@HandlePID
; Line 958
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
; Line 959
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeactivateMenu
	add	esp, 4
; Line 960
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ClosePopup
	add	esp, 4
; Line 961
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
; Line 962
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 1
	je	SHORT $LN3@HandlePID
; Line 964
	push	0
	lea	eax, DWORD PTR _hObjTopLevel$13141[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTopLevelMenu
	add	esp, 12					; 0000000cH
; Line 965
	mov	eax, DWORD PTR _hObjTopLevel$13141[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 966
	push	-1
	mov	eax, DWORD PTR _hObjTopLevel$13141[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
; Line 967
	mov	eax, DWORD PTR _hObjTopLevel$13141[ebp]
	push	eax
	call	__ReleaseCapture
	add	esp, 4
$LN3@HandlePID:
; Line 970
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 1
	jne	SHORT $LN1@HandlePID
; Line 971
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeselectItem
	add	esp, 4
$LN1@HandlePID:
; Line 974
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__ForwardMouseOverMsg
	add	esp, 12					; 0000000cH
$LN4@HandlePID:
; Line 977
	mov	al, 1
$LN24@HandlePID:
; Line 978
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@HandlePID
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 372				; 00000174H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN29@HandlePID:
	DD	2
	DD	$LN28@HandlePID
$LN28@HandlePID:
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN26@HandlePID
	DD	-176					; ffffff50H
	DD	4
	DD	$LN27@HandlePID
$LN27@HandlePID:
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN26@HandlePID:
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
__HandlePID ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetTopLevelMenu
_TEXT	SEGMENT
_pObjTopLevel$ = -20					; size = 4
_hObjTopLevel$ = -8					; size = 4
_hObj$ = 8						; size = 4
_phObjTopLevel$ = 12					; size = 4
_pSubSel$ = 16						; size = 4
__GetTopLevelMenu PROC					; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN8@GetTopLeve
; Line 192
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _hObjTopLevel$[ebp], eax
; Line 193
	jmp	SHORT $LN7@GetTopLeve
$LN8@GetTopLeve:
; Line 194
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObjTopLevel$[ebp], eax
$LN6@GetTopLeve:
; Line 196
	mov	eax, DWORD PTR _pObjTopLevel$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hObjTopLevel$[ebp], ecx
; Line 197
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObjTopLevel$[ebp], 0
; Line 198
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObjTopLevel$[ebp], eax
; Line 199
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@GetTopLeve
; Line 200
	jmp	SHORT $LN4@GetTopLeve
; Line 201
	jmp	SHORT $LN5@GetTopLeve
$LN3@GetTopLeve:
; Line 202
	cmp	DWORD PTR _pSubSel$[ebp], 0
	je	SHORT $LN5@GetTopLeve
; Line 203
	mov	eax, DWORD PTR _pSubSel$[ebp]
	mov	ecx, DWORD PTR _pObjTopLevel$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	mov	DWORD PTR [eax], edx
$LN5@GetTopLeve:
; Line 206
	mov	eax, 1
	test	eax, eax
	jne	SHORT $LN6@GetTopLeve
$LN4@GetTopLeve:
; Line 207
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObjTopLevel$[ebp], 0
$LN7@GetTopLeve:
; Line 209
	mov	eax, DWORD PTR _phObjTopLevel$[ebp]
	mov	ecx, DWORD PTR _hObjTopLevel$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetTopLevelMenu ENDP
_TEXT	ENDS
PUBLIC	_MENU__GetNumItems
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetItemFromPos
_TEXT	SEGMENT
_xPos$12855 = -104					; size = 4
_yPos$12849 = -92					; size = 4
_NumItems$12847 = -80					; size = 4
_i$12846 = -68						; size = 4
_r$ = -56						; size = 4
_EffectSize$ = -44					; size = 4
_ySize$ = -32						; size = 4
_xSize$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__GetItemFromPos PROC					; COMDAT
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 398
	mov	DWORD PTR _r$[ebp], -1
; Line 399
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeY
	add	esp, 4
	mov	DWORD PTR _ySize$[ebp], eax
; Line 400
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 401
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN13@GetItemFro
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	cmp	ecx, DWORD PTR _ySize$[ebp]
	jge	SHORT $LN13@GetItemFro
; Line 402
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _ySize$[ebp], ecx
$LN13@GetItemFro:
; Line 404
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeX
	add	esp, 4
	mov	DWORD PTR _xSize$[ebp], eax
; Line 405
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN12@GetItemFro
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	cmp	ecx, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN12@GetItemFro
; Line 406
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _xSize$[ebp], ecx
$LN12@GetItemFro:
; Line 408
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	DWORD PTR _EffectSize$[ebp], eax
; Line 409
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 410
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 411
	mov	eax, DWORD PTR _EffectSize$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _xSize$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xSize$[ebp], ecx
; Line 412
	mov	eax, DWORD PTR _EffectSize$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _ySize$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _ySize$[ebp], ecx
; Line 413
	cmp	DWORD PTR _x$[ebp], 0
	jl	$LN11@GetItemFro
	cmp	DWORD PTR _y$[ebp], 0
	jl	$LN11@GetItemFro
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	$LN11@GetItemFro
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jge	$LN11@GetItemFro
; Line 414
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_MENU__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$12847[ebp], eax
; Line 415
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN10@GetItemFro
; Line 416
	mov	DWORD PTR _yPos$12849[ebp], 0
; Line 417
	mov	DWORD PTR _i$12846[ebp], 0
	jmp	SHORT $LN9@GetItemFro
$LN8@GetItemFro:
	mov	eax, DWORD PTR _i$12846[ebp]
	add	eax, 1
	mov	DWORD PTR _i$12846[ebp], eax
$LN9@GetItemFro:
	mov	eax, DWORD PTR _i$12846[ebp]
	cmp	eax, DWORD PTR _NumItems$12847[ebp]
	jae	SHORT $LN7@GetItemFro
; Line 418
	mov	eax, DWORD PTR _i$12846[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemHeight
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _yPos$12849[ebp]
	mov	DWORD PTR _yPos$12849[ebp], eax
; Line 419
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yPos$12849[ebp]
	jge	SHORT $LN6@GetItemFro
; Line 420
	mov	eax, DWORD PTR _i$12846[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 421
	jmp	SHORT $LN7@GetItemFro
$LN6@GetItemFro:
; Line 423
	jmp	SHORT $LN8@GetItemFro
$LN7@GetItemFro:
; Line 424
	jmp	SHORT $LN11@GetItemFro
$LN10@GetItemFro:
; Line 425
	mov	DWORD PTR _xPos$12855[ebp], 0
; Line 426
	mov	DWORD PTR _i$12846[ebp], 0
	jmp	SHORT $LN4@GetItemFro
$LN3@GetItemFro:
	mov	eax, DWORD PTR _i$12846[ebp]
	add	eax, 1
	mov	DWORD PTR _i$12846[ebp], eax
$LN4@GetItemFro:
	mov	eax, DWORD PTR _i$12846[ebp]
	cmp	eax, DWORD PTR _NumItems$12847[ebp]
	jae	SHORT $LN11@GetItemFro
; Line 427
	mov	eax, DWORD PTR _i$12846[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemWidth
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _xPos$12855[ebp]
	mov	DWORD PTR _xPos$12855[ebp], eax
; Line 428
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xPos$12855[ebp]
	jge	SHORT $LN1@GetItemFro
; Line 429
	mov	eax, DWORD PTR _i$12846[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 430
	jmp	SHORT $LN11@GetItemFro
$LN1@GetItemFro:
; Line 432
	jmp	SHORT $LN3@GetItemFro
$LN11@GetItemFro:
; Line 435
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 436
	mov	eax, DWORD PTR _r$[ebp]
; Line 437
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemFromPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetEffectSize
_TEXT	SEGMENT
_r$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetEffectSize PROC					; COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 233
	mov	DWORD PTR _r$[ebp], 0
; Line 234
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__HasEffect
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@GetEffectS
; Line 235
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _r$[ebp], edx
$LN1@GetEffectS:
; Line 237
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 238
	mov	eax, DWORD PTR _r$[ebp]
; Line 239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetEffectSize ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __HasEffect
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__HasEffect PROC					; COMDAT
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 217
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 128				; 00000080H
	jne	SHORT $LN2@HasEffect
; Line 218
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@HasEffect
; Line 219
	xor	eax, eax
	jmp	SHORT $LN3@HasEffect
$LN2@HasEffect:
; Line 222
	mov	eax, 1
$LN3@HasEffect:
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__HasEffect ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemWidth
_TEXT	SEGMENT
_pItem$12754 = -20					; size = 4
_ItemWidth$ = -8					; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_Index$ = 16						; size = 4
__GetItemWidth PROC					; COMDAT
; Line 260
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 262
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN5@GetItemWid
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN5@GetItemWid
; Line 263
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	sub	edx, eax
	mov	DWORD PTR _ItemWidth$[ebp], edx
; Line 264
	jmp	SHORT $LN4@GetItemWid
$LN5@GetItemWid:
; Line 266
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$12754[ebp], eax
; Line 267
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	jne	SHORT $LN2@GetItemWid
	mov	eax, DWORD PTR _pItem$12754[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	jne	SHORT $LN3@GetItemWid
$LN2@GetItemWid:
; Line 268
	mov	eax, DWORD PTR _pItem$12754[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ItemWidth$[ebp], ecx
; Line 269
	jmp	SHORT $LN1@GetItemWid
$LN3@GetItemWid:
; Line 270
	mov	DWORD PTR _ItemWidth$[ebp], 3
$LN1@GetItemWid:
; Line 272
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12754[ebp], 0
; Line 273
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+96]
	mov	edx, DWORD PTR _pObj$[ebp]
	movzx	eax, BYTE PTR [edx+97]
	add	eax, DWORD PTR _ItemWidth$[ebp]
	add	eax, ecx
	mov	DWORD PTR _ItemWidth$[ebp], eax
$LN4@GetItemWid:
; Line 275
	mov	eax, DWORD PTR _ItemWidth$[ebp]
; Line 276
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemWidth ENDP
_TEXT	ENDS
EXTRN	_GUI_GetYDistOfFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetItemHeight
_TEXT	SEGMENT
_pItem$12772 = -20					; size = 4
_ItemHeight$ = -8					; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_Index$ = 16						; size = 4
__GetItemHeight PROC					; COMDAT
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 284
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	SHORT $LN4@GetItemHei
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	jne	SHORT $LN4@GetItemHei
; Line 285
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	sub	edx, eax
	mov	DWORD PTR _ItemHeight$[ebp], edx
; Line 286
	jmp	SHORT $LN3@GetItemHei
$LN4@GetItemHei:
; Line 287
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _ItemHeight$[ebp], eax
; Line 288
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN2@GetItemHei
; Line 290
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$12772[ebp], eax
; Line 291
	mov	eax, DWORD PTR _pItem$12772[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	je	SHORT $LN1@GetItemHei
; Line 292
	mov	DWORD PTR _ItemHeight$[ebp], 3
$LN1@GetItemHei:
; Line 294
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12772[ebp], 0
$LN2@GetItemHei:
; Line 296
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+98]
	mov	edx, DWORD PTR _pObj$[ebp]
	movzx	eax, BYTE PTR [edx+99]
	add	eax, DWORD PTR _ItemHeight$[ebp]
	add	eax, ecx
	mov	DWORD PTR _ItemHeight$[ebp], eax
$LN3@GetItemHei:
; Line 298
	mov	eax, DWORD PTR _ItemHeight$[ebp]
; Line 299
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemHeight ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcMenuSizeX
_TEXT	SEGMENT
_ItemWidth$12785 = -56					; size = 4
_xSize$ = -44						; size = 4
_NumItems$ = -32					; size = 4
_i$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__CalcMenuSizeX PROC					; COMDAT
; Line 305
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 310
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 311
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_MENU__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 312
	mov	DWORD PTR _xSize$[ebp], 0
; Line 313
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN9@CalcMenuSi
; Line 315
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@CalcMenuSi
$LN7@CalcMenuSi:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@CalcMenuSi:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN6@CalcMenuSi
; Line 316
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemWidth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ItemWidth$12785[ebp], eax
; Line 317
	mov	eax, DWORD PTR _ItemWidth$12785[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jle	SHORT $LN5@CalcMenuSi
; Line 318
	mov	eax, DWORD PTR _ItemWidth$12785[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
$LN5@CalcMenuSi:
; Line 320
	jmp	SHORT $LN7@CalcMenuSi
$LN6@CalcMenuSi:
; Line 321
	jmp	SHORT $LN4@CalcMenuSi
$LN9@CalcMenuSi:
; Line 322
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@CalcMenuSi
$LN2@CalcMenuSi:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@CalcMenuSi:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN4@CalcMenuSi
; Line 323
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemWidth
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
; Line 324
	jmp	SHORT $LN2@CalcMenuSi
$LN4@CalcMenuSi:
; Line 326
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	ecx, DWORD PTR _xSize$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _xSize$[ebp], edx
; Line 327
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 328
	mov	eax, DWORD PTR _xSize$[ebp]
; Line 329
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcMenuSizeX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcMenuSizeY
_TEXT	SEGMENT
_ItemHeight$12808 = -56					; size = 4
_ySize$ = -44						; size = 4
_NumItems$ = -32					; size = 4
_i$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__CalcMenuSizeY PROC					; COMDAT
; Line 335
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 340
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 341
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_MENU__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 342
	mov	DWORD PTR _ySize$[ebp], 0
; Line 343
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN9@CalcMenuSi@2
; Line 344
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@CalcMenuSi@2
$LN7@CalcMenuSi@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@CalcMenuSi@2:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN6@CalcMenuSi@2
; Line 345
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemHeight
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
; Line 346
	jmp	SHORT $LN7@CalcMenuSi@2
$LN6@CalcMenuSi@2:
; Line 347
	jmp	SHORT $LN5@CalcMenuSi@2
$LN9@CalcMenuSi@2:
; Line 349
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@CalcMenuSi@2
$LN3@CalcMenuSi@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@CalcMenuSi@2:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN5@CalcMenuSi@2
; Line 350
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemHeight
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ItemHeight$12808[ebp], eax
; Line 351
	mov	eax, DWORD PTR _ItemHeight$12808[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jle	SHORT $LN1@CalcMenuSi@2
; Line 352
	mov	eax, DWORD PTR _ItemHeight$12808[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN1@CalcMenuSi@2:
; Line 354
	jmp	SHORT $LN3@CalcMenuSi@2
$LN5@CalcMenuSi@2:
; Line 356
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	ecx, DWORD PTR _ySize$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _ySize$[ebp], edx
; Line 357
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 358
	mov	eax, DWORD PTR _ySize$[ebp]
; Line 359
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcMenuSizeY ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SelectItem
_TEXT	SEGMENT
_Sel$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__SelectItem PROC					; COMDAT
; Line 684
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 687
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 688
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 689
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 690
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _Index$[ebp]
	je	SHORT $LN2@SelectItem
; Line 691
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetCapture
	add	esp, 4
; Line 692
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OpenSubmenu
	add	esp, 8
; Line 693
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelection
	add	esp, 8
$LN2@SelectItem:
; Line 695
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SelectItem ENDP
_TEXT	ENDS
PUBLIC	_MENU_SetOwner
EXTRN	_WM_AttachWindowAt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OpenSubmenu
_TEXT	SEGMENT
_hParent$12950 = -164					; size = 4
_EffectSize$12949 = -152				; size = 4
_y$12948 = -140						; size = 4
_x$12947 = -128						; size = 4
_hObjTopLevel$12946 = -116				; size = 4
_Item_Flags$12941 = -104				; size = 2
_Item_Id$12940 = -92					; size = 2
_Item_hSubmenu$12939 = -80				; size = 4
_pItem$12938 = -68					; size = 4
_PrevActiveSubmenu$ = -53				; size = 1
_Flags$ = -44						; size = 2
_hOwner$ = -32						; size = 4
_ItemArray$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__OpenSubmenu PROC					; COMDAT
; Line 549
	push	ebp
	mov	ebp, esp
	sub	esp, 360				; 00000168H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-360]
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 555
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 556
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 557
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 558
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 559
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _PrevActiveSubmenu$[ebp], cl
; Line 560
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 561
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 64					; 00000040H
	je	$LN8@OpenSubmen
; Line 567
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 568
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$12938[ebp], eax
; Line 569
	mov	eax, DWORD PTR _pItem$12938[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Item_hSubmenu$12939[ebp], ecx
; Line 570
	mov	eax, DWORD PTR _pItem$12938[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Item_Id$12940[ebp], cx
; Line 571
	mov	eax, DWORD PTR _pItem$12938[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Item_Flags$12941[ebp], cx
; Line 572
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12938[ebp], 0
; Line 573
	cmp	DWORD PTR _Item_hSubmenu$12939[ebp], 0
	je	$LN8@OpenSubmen
; Line 574
	movzx	eax, WORD PTR _Item_Flags$12941[ebp]
	and	eax, 1
	jne	$LN8@OpenSubmen
; Line 579
	push	0
	lea	eax, DWORD PTR _hObjTopLevel$12946[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTopLevelMenu
	add	esp, 12					; 0000000cH
; Line 580
	mov	eax, DWORD PTR _hObjTopLevel$12946[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hParent$12950[ebp], eax
; Line 583
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	DWORD PTR _EffectSize$12949[ebp], eax
; Line 584
	lea	eax, DWORD PTR _y$12948[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$12947[ebp]
	push	ecx
	mov	edx, DWORD PTR _Index$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetItemPos
	add	esp, 16					; 00000010H
; Line 585
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN4@OpenSubmen
; Line 586
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeX
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetEffectSize
	add	esp, 4
	shl	eax, 1
	sub	esi, eax
	add	esi, DWORD PTR _x$12947[ebp]
	mov	DWORD PTR _x$12947[ebp], esi
; Line 587
	mov	eax, DWORD PTR _y$12948[ebp]
	sub	eax, DWORD PTR _EffectSize$12949[ebp]
	mov	DWORD PTR _y$12948[ebp], eax
; Line 588
	jmp	SHORT $LN3@OpenSubmen
$LN4@OpenSubmen:
; Line 589
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeY
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetEffectSize
	add	esp, 4
	shl	eax, 1
	sub	esi, eax
	add	esi, DWORD PTR _y$12948[ebp]
	mov	DWORD PTR _y$12948[ebp], esi
; Line 590
	mov	eax, DWORD PTR _x$12947[ebp]
	sub	eax, DWORD PTR _EffectSize$12949[ebp]
	mov	DWORD PTR _x$12947[ebp], eax
$LN3@OpenSubmen:
; Line 592
	mov	eax, DWORD PTR _hObjTopLevel$12946[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hParent$12950[ebp]
	push	ecx
	call	_WM_GetWindowOrgX
	add	esp, 4
	sub	esi, eax
	add	esi, DWORD PTR _x$12947[ebp]
	mov	DWORD PTR _x$12947[ebp], esi
; Line 593
	mov	eax, DWORD PTR _hObjTopLevel$12946[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _hParent$12950[ebp]
	push	ecx
	call	_WM_GetWindowOrgY
	add	esp, 4
	sub	esi, eax
	add	esi, DWORD PTR _y$12948[ebp]
	mov	DWORD PTR _y$12948[ebp], esi
; Line 598
	movzx	eax, BYTE PTR _PrevActiveSubmenu$[ebp]
	test	eax, eax
	jne	SHORT $LN2@OpenSubmen
; Line 599
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@OpenSubmen
; Line 600
	push	0
	push	1
	mov	eax, DWORD PTR _hOwner$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN2@OpenSubmen:
; Line 604
	movzx	eax, WORD PTR _Item_Id$12940[ebp]
	push	eax
	push	2
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
; Line 606
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Item_hSubmenu$12939[ebp]
	push	ecx
	call	_MENU_SetOwner
	add	esp, 8
; Line 608
	mov	eax, DWORD PTR _y$12948[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$12947[ebp]
	push	ecx
	mov	edx, DWORD PTR _hParent$12950[ebp]
	push	edx
	mov	eax, DWORD PTR _Item_hSubmenu$12939[ebp]
	push	eax
	call	_WM_AttachWindowAt
	add	esp, 16					; 00000010H
; Line 609
	push	0
	push	3
	mov	eax, DWORD PTR _Item_hSubmenu$12939[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
; Line 610
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 611
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+114], 1
; Line 612
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 614
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MENU__InvalidateItem
	add	esp, 8
$LN8@OpenSubmen:
; Line 618
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@OpenSubmen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 360				; 00000168H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@OpenSubmen:
	DD	3
	DD	$LN13@OpenSubmen
$LN13@OpenSubmen:
	DD	-116					; ffffff8cH
	DD	4
	DD	$LN10@OpenSubmen
	DD	-128					; ffffff80H
	DD	4
	DD	$LN11@OpenSubmen
	DD	-140					; ffffff74H
	DD	4
	DD	$LN12@OpenSubmen
$LN12@OpenSubmen:
	DB	121					; 00000079H
	DB	0
$LN11@OpenSubmen:
	DB	120					; 00000078H
	DB	0
$LN10@OpenSubmen:
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
__OpenSubmenu ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemPos
_TEXT	SEGMENT
_xPos$12881 = -56					; size = 4
_yPos$12875 = -44					; size = 4
_EffectSize$ = -32					; size = 4
_i$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_px$ = 16						; size = 4
_py$ = 20						; size = 4
__GetItemPos PROC					; COMDAT
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 446
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	DWORD PTR _EffectSize$[ebp], eax
; Line 447
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 448
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN8@GetItemPos
; Line 449
	mov	DWORD PTR _yPos$12875[ebp], 0
; Line 450
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@GetItemPos
$LN6@GetItemPos:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@GetItemPos:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _Index$[ebp]
	jge	SHORT $LN5@GetItemPos
; Line 451
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemHeight
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _yPos$12875[ebp]
	mov	DWORD PTR _yPos$12875[ebp], eax
; Line 452
	jmp	SHORT $LN6@GetItemPos
$LN5@GetItemPos:
; Line 453
	mov	eax, DWORD PTR _px$[ebp]
	mov	ecx, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 454
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _yPos$12875[ebp]
	mov	ecx, DWORD PTR _py$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 455
	jmp	SHORT $LN4@GetItemPos
$LN8@GetItemPos:
; Line 456
	mov	DWORD PTR _xPos$12881[ebp], 0
; Line 457
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@GetItemPos
$LN2@GetItemPos:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@GetItemPos:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _Index$[ebp]
	jge	SHORT $LN1@GetItemPos
; Line 458
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemWidth
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _xPos$12881[ebp]
	mov	DWORD PTR _xPos$12881[ebp], eax
; Line 459
	jmp	SHORT $LN2@GetItemPos
$LN1@GetItemPos:
; Line 460
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _xPos$12881[ebp]
	mov	ecx, DWORD PTR _px$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 461
	mov	eax, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@GetItemPos:
; Line 463
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 464
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ActivateItem
_TEXT	SEGMENT
_hOwner$ = -80						; size = 4
_ItemArray$ = -68					; size = 4
_Item_Id$ = -56						; size = 2
_Item_Flags$ = -44					; size = 2
_Item_hSubmenu$ = -32					; size = 4
_pItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__ActivateItem PROC					; COMDAT
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 725
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 726
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 727
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 728
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 729
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 730
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Item_hSubmenu$[ebp], ecx
; Line 731
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Item_Flags$[ebp], cx
; Line 732
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Item_Id$[ebp], cx
; Line 733
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 734
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	jne	SHORT $LN3@ActivateIt
; Line 735
	movzx	eax, WORD PTR _Item_Flags$[ebp]
	and	eax, 3
	jne	SHORT $LN3@ActivateIt
; Line 736
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ClosePopup
	add	esp, 4
; Line 738
	movzx	eax, WORD PTR _Item_Id$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN3@ActivateIt:
; Line 741
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ActivateItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ActivateMenu
_TEXT	SEGMENT
_Item_Flags$ = -68					; size = 2
_Item_hSubmenu$ = -56					; size = 4
_pItem$ = -44						; size = 4
_Flags$ = -32						; size = 2
_Sel$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__ActivateMenu PROC					; COMDAT
; Line 747
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 754
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 755
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 756
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 757
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 758
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 759
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Item_hSubmenu$[ebp], ecx
; Line 760
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Item_Flags$[ebp], cx
; Line 761
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 762
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	je	$LN7@ActivateMe
; Line 763
	movzx	eax, WORD PTR _Item_Flags$[ebp]
	and	eax, 1
	jne	$LN7@ActivateMe
; Line 764
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 64					; 00000040H
	jne	SHORT $LN4@ActivateMe
; Line 765
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 766
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 767
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 768
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OpenSubmenu
	add	esp, 8
; Line 769
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelection
	add	esp, 8
	jmp	SHORT $LN7@ActivateMe
$LN4@ActivateMe:
; Line 770
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 4
	je	SHORT $LN7@ActivateMe
; Line 771
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Sel$[ebp]
	jne	SHORT $LN7@ActivateMe
; Line 772
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 773
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 774
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 775
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN7@ActivateMe:
; Line 780
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ActivateMenu ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WM__IsInModalArea:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ForwardMouseOverMsg
_TEXT	SEGMENT
_State$13078 = -92					; size = 12
_Msg$13077 = -72					; size = 16
_hBelow$13075 = -48					; size = 4
_Flags$ = -36						; size = 2
_IsSubmenuActive$ = -21					; size = 1
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__ForwardMouseOverMsg PROC				; COMDAT
; Line 801
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 805
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 806
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+114]
	mov	BYTE PTR _IsSubmenuActive$[ebp], cl
; Line 807
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 808
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 809
	movzx	eax, BYTE PTR _IsSubmenuActive$[ebp]
	test	eax, eax
	jne	$LN3@ForwardMou
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	jne	$LN3@ForwardMou
; Line 810
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsTopLevelMenu
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN3@ForwardMou
; Line 812
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 813
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 814
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_WM_Screen2hWin
	add	esp, 8
	mov	DWORD PTR _hBelow$13075[ebp], eax
; Line 815
	cmp	DWORD PTR _hBelow$13075[ebp], 0
	je	SHORT $LN3@ForwardMou
	mov	eax, DWORD PTR _hBelow$13075[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	SHORT $LN3@ForwardMou
	mov	eax, DWORD PTR _hBelow$13075[ebp]
	push	eax
	call	_WM__IsInModalArea
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@ForwardMou
; Line 818
	mov	eax, DWORD PTR _hBelow$13075[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _x$[ebp], ecx
; Line 819
	mov	eax, DWORD PTR _hBelow$13075[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y$[ebp], ecx
; Line 820
	mov	BYTE PTR _State$13078[ebp+8], 0
; Line 821
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _State$13078[ebp], eax
; Line 822
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _State$13078[ebp+4], eax
; Line 823
	lea	eax, DWORD PTR _State$13078[ebp]
	mov	DWORD PTR _Msg$13077[ebp+12], eax
; Line 824
	mov	DWORD PTR _Msg$13077[ebp], 16		; 00000010H
; Line 825
	lea	eax, DWORD PTR _Msg$13077[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBelow$13075[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 826
	mov	eax, 1
	jmp	SHORT $LN4@ForwardMou
$LN3@ForwardMou:
; Line 830
	xor	eax, eax
$LN4@ForwardMou:
; Line 831
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ForwardMou
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@ForwardMou:
	DD	2
	DD	$LN8@ForwardMou
$LN8@ForwardMou:
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN6@ForwardMou
	DD	-92					; ffffffa4H
	DD	12					; 0000000cH
	DD	$LN7@ForwardMou
$LN7@ForwardMou:
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN6@ForwardMou:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
__ForwardMouseOverMsg ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnMouseOver
_TEXT	SEGMENT
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnMouseOver PROC					; COMDAT
; Line 1157
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1158
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 1159
	cmp	DWORD PTR _pState$[ebp], 0
	je	SHORT $LN1@OnMouseOve
; Line 1160
	push	-1
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pState$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__HandlePID
	add	esp, 16					; 00000010H
	jmp	SHORT $LN2@OnMouseOve
$LN1@OnMouseOve:
; Line 1162
	xor	al, al
$LN2@OnMouseOve:
; Line 1163
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnMouseOver ENDP
_TEXT	ENDS
EXTRN	_GUI_ClearRect:PROC
EXTRN	_GUI_SetBkColor:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_WIDGET__FillStringInRect:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_ClearRectEx:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI__ReduceRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_r$13292 = -200						; size = 8
_ySize$13282 = -184					; size = 4
_ItemWidth$13281 = -172					; size = 4
_xSize$13272 = -160					; size = 4
_ItemHeight$13271 = -148				; size = 4
_EffectSize$ = -136					; size = 4
_FontHeight$ = -124					; size = 4
_BorderTop$ = -109					; size = 1
_BorderLeft$ = -97					; size = 1
_i$ = -88						; size = 4
_NumItems$ = -76					; size = 4
_TextWidth$ = -64					; size = 4
_pItem$ = -52						; size = 4
_TextRect$ = -40					; size = 8
_FillRect$ = -24					; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__OnPaint PROC						; COMDAT
; Line 1196
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1206
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1207
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+96]
	mov	BYTE PTR _BorderLeft$[ebp], cl
; Line 1208
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+98]
	mov	BYTE PTR _BorderTop$[ebp], cl
; Line 1209
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _FontHeight$[ebp], eax
; Line 1210
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetEffectSize
	add	esp, 4
	mov	DWORD PTR _EffectSize$[ebp], eax
; Line 1211
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_MENU__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1212
	lea	eax, DWORD PTR _FillRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WM__GetClientRectWin
	add	esp, 8
; Line 1213
	mov	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _FillRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _FillRect$[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 1214
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 1215
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 1
	je	$LN15@OnPaint
; Line 1217
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeX
	add	esp, 4
	mov	DWORD PTR _xSize$13272[ebp], eax
; Line 1218
	mov	eax, DWORD PTR _xSize$13272[ebp]
	sub	eax, DWORD PTR _EffectSize$[ebp]
	sub	eax, 1
	mov	WORD PTR _FillRect$[ebp+4], ax
; Line 1219
	movsx	eax, WORD PTR _FillRect$[ebp]
	movzx	ecx, BYTE PTR _BorderLeft$[ebp]
	add	eax, ecx
	mov	WORD PTR _TextRect$[ebp], ax
; Line 1220
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@OnPaint
$LN13@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN14@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN12@OnPaint
; Line 1221
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1222
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemHeight
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ItemHeight$13271[ebp], eax
; Line 1223
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__SetPaintColors
	add	esp, 12					; 0000000cH
; Line 1224
	movsx	eax, WORD PTR _FillRect$[ebp+2]
	mov	ecx, DWORD PTR _ItemHeight$13271[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _FillRect$[ebp+6], dx
; Line 1225
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	je	SHORT $LN11@OnPaint
; Line 1226
	lea	eax, DWORD PTR _FillRect$[ebp]
	push	eax
	call	_GUI_ClearRectEx
	add	esp, 4
; Line 1227
	push	8158332					; 007c7c7cH
	call	_GUI_SetColor
	add	esp, 4
; Line 1228
	movsx	eax, WORD PTR _FillRect$[ebp+4]
	sub	eax, 2
	push	eax
	movsx	ecx, WORD PTR _FillRect$[ebp]
	add	ecx, 2
	push	ecx
	movsx	edx, WORD PTR _FillRect$[ebp+2]
	movzx	eax, BYTE PTR _BorderTop$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 1229
	jmp	SHORT $LN10@OnPaint
$LN11@OnPaint:
; Line 1230
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _TextWidth$[ebp], ecx
; Line 1231
	movsx	eax, WORD PTR _TextRect$[ebp]
	mov	ecx, DWORD PTR _TextWidth$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _TextRect$[ebp+4], dx
; Line 1232
	movsx	eax, WORD PTR _FillRect$[ebp+2]
	movzx	ecx, BYTE PTR _BorderTop$[ebp]
	add	eax, ecx
	mov	WORD PTR _TextRect$[ebp+2], ax
; Line 1233
	movsx	eax, WORD PTR _TextRect$[ebp+2]
	mov	ecx, DWORD PTR _FontHeight$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _TextRect$[ebp+6], dx
; Line 1234
	lea	eax, DWORD PTR _TextRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _TextRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _FillRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_WIDGET__FillStringInRect
	add	esp, 16					; 00000010H
$LN10@OnPaint:
; Line 1236
	movsx	eax, WORD PTR _FillRect$[ebp+2]
	add	eax, DWORD PTR _ItemHeight$13271[ebp]
	mov	WORD PTR _FillRect$[ebp+2], ax
; Line 1237
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1238
	jmp	$LN13@OnPaint
$LN12@OnPaint:
; Line 1239
	jmp	$LN9@OnPaint
$LN15@OnPaint:
; Line 1241
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeY
	add	esp, 4
	mov	DWORD PTR _ySize$13282[ebp], eax
; Line 1242
	mov	eax, DWORD PTR _ySize$13282[ebp]
	sub	eax, DWORD PTR _EffectSize$[ebp]
	sub	eax, 1
	mov	WORD PTR _FillRect$[ebp+6], ax
; Line 1243
	movsx	eax, WORD PTR _FillRect$[ebp+2]
	movzx	ecx, BYTE PTR _BorderTop$[ebp]
	add	eax, ecx
	mov	WORD PTR _TextRect$[ebp+2], ax
; Line 1244
	movsx	eax, WORD PTR _TextRect$[ebp+2]
	mov	ecx, DWORD PTR _FontHeight$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _TextRect$[ebp+6], dx
; Line 1245
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@OnPaint
$LN7@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN9@OnPaint
; Line 1246
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1247
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemWidth
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ItemWidth$13281[ebp], eax
; Line 1248
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__SetPaintColors
	add	esp, 12					; 0000000cH
; Line 1249
	movsx	eax, WORD PTR _FillRect$[ebp]
	mov	ecx, DWORD PTR _ItemWidth$13281[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _FillRect$[ebp+4], dx
; Line 1250
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	je	SHORT $LN5@OnPaint
; Line 1251
	lea	eax, DWORD PTR _FillRect$[ebp]
	push	eax
	call	_GUI_ClearRectEx
	add	esp, 4
; Line 1252
	push	8158332					; 007c7c7cH
	call	_GUI_SetColor
	add	esp, 4
; Line 1253
	movsx	eax, WORD PTR _FillRect$[ebp+6]
	sub	eax, 2
	push	eax
	movsx	ecx, WORD PTR _FillRect$[ebp+2]
	add	ecx, 2
	push	ecx
	movsx	edx, WORD PTR _FillRect$[ebp]
	movzx	eax, BYTE PTR _BorderLeft$[ebp]
	lea	ecx, DWORD PTR [edx+eax+1]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 1254
	jmp	SHORT $LN4@OnPaint
$LN5@OnPaint:
; Line 1255
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _TextWidth$[ebp], ecx
; Line 1256
	movsx	eax, WORD PTR _FillRect$[ebp]
	movzx	ecx, BYTE PTR _BorderLeft$[ebp]
	add	eax, ecx
	mov	WORD PTR _TextRect$[ebp], ax
; Line 1257
	movsx	eax, WORD PTR _TextRect$[ebp]
	mov	ecx, DWORD PTR _TextWidth$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _TextRect$[ebp+4], dx
; Line 1258
	lea	eax, DWORD PTR _TextRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _TextRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _FillRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_WIDGET__FillStringInRect
	add	esp, 16					; 00000010H
$LN4@OnPaint:
; Line 1260
	movsx	eax, WORD PTR _FillRect$[ebp]
	add	eax, DWORD PTR _ItemWidth$13281[ebp]
	mov	WORD PTR _FillRect$[ebp], ax
; Line 1261
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1262
	jmp	$LN7@OnPaint
$LN9@OnPaint:
; Line 1264
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	jne	SHORT $LN2@OnPaint
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+120], 0
	je	$LN3@OnPaint
$LN2@OnPaint:
; Line 1266
	lea	eax, DWORD PTR _r$13292[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WM__GetClientRectWin
	add	esp, 8
; Line 1267
	mov	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$13292[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$13292[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 1268
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 1269
	movsx	eax, WORD PTR _FillRect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _r$13292[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _EffectSize$[ebp]
	push	edx
	movsx	eax, WORD PTR _FillRect$[ebp+4]
	add	eax, 1
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 1270
	movsx	eax, WORD PTR _r$13292[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _r$13292[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _FillRect$[ebp+6]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
$LN3@OnPaint:
; Line 1273
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__HasEffect
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@OnPaint
; Line 1274
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@OnPaint:
; Line 1276
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1277
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN22@OnPaint:
	DD	3
	DD	$LN21@OnPaint
$LN21@OnPaint:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN18@OnPaint
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN19@OnPaint
	DD	-200					; ffffff38H
	DD	8
	DD	$LN20@OnPaint
$LN20@OnPaint:
	DB	114					; 00000072H
	DB	0
$LN19@OnPaint:
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN18@OnPaint:
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__OnPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetPaintColors
_TEXT	SEGMENT
_ColorIndex$ = -20					; size = 4
_Selected$ = -5						; size = 1
_pObj$ = 8						; size = 4
_pItem$ = 12						; size = 4
_ItemIndex$ = 16					; size = 4
__SetPaintColors PROC					; COMDAT
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1173
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ItemIndex$[ebp]
	xor	edx, edx
	cmp	ecx, DWORD PTR [eax+124]
	sete	dl
	mov	BYTE PTR _Selected$[ebp], dl
; Line 1174
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+114]
	test	ecx, ecx
	je	SHORT $LN7@SetPaintCo
	movzx	eax, BYTE PTR _Selected$[ebp]
	test	eax, eax
	je	SHORT $LN7@SetPaintCo
; Line 1175
	mov	DWORD PTR _ColorIndex$[ebp], 4
	jmp	SHORT $LN6@SetPaintCo
$LN7@SetPaintCo:
; Line 1176
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	je	SHORT $LN5@SetPaintCo
; Line 1177
	mov	DWORD PTR _ColorIndex$[ebp], 0
; Line 1178
	jmp	SHORT $LN6@SetPaintCo
$LN5@SetPaintCo:
; Line 1179
	movzx	eax, BYTE PTR _Selected$[ebp]
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _ColorIndex$[ebp], eax
; Line 1180
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 1
	je	SHORT $LN6@SetPaintCo
; Line 1181
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, 8
	je	SHORT $LN2@SetPaintCo
; Line 1182
	mov	DWORD PTR _ColorIndex$[ebp], 2
; Line 1183
	jmp	SHORT $LN6@SetPaintCo
$LN2@SetPaintCo:
; Line 1184
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	add	eax, 2
	mov	DWORD PTR _ColorIndex$[ebp], eax
$LN6@SetPaintCo:
; Line 1188
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+76]
	push	edx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 1189
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+56]
	push	edx
	call	_GUI_SetColor
	add	esp, 4
; Line 1190
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetPaintColors ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_GetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnKey
_TEXT	SEGMENT
tv186 = -472						; size = 4
_FlagsOwner$13399 = -272				; size = 2
_IdOwner$13398 = -260					; size = 2
_pItemOwner$13397 = -248				; size = 4
_pObjOwner$13396 = -236					; size = 4
_NumItems$13369 = -224					; size = 4
_TopLevel_Sel$ = -212					; size = 4
_TopLevel_Flags$ = -200					; size = 2
_Item_Flags$ = -188					; size = 2
_Item_Id$ = -176					; size = 2
_Item_hSubmenu$ = -164					; size = 4
_Flags$ = -152						; size = 2
_hOwner$ = -140						; size = 4
_ItemArray$ = -128					; size = 4
_pObjTopLevel$ = -116					; size = 4
_hObjTopLevel$ = -104					; size = 4
_pItem$ = -92						; size = 4
_SubSel$ = -80						; size = 4
_Index$ = -68						; size = 4
_KeyPrev$ = -56						; size = 4
_KeyNext$ = -44						; size = 4
_KeyBack$ = -32						; size = 4
_KeyOpen$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
__OnKey	PROC						; COMDAT
; Line 1351
	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1353
	mov	DWORD PTR _SubSel$[ebp], 0
; Line 1366
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1367
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1368
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 1369
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _Flags$[ebp], cx
; Line 1370
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Index$[ebp], ecx
; Line 1371
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1373
	lea	eax, DWORD PTR _SubSel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hObjTopLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetTopLevelMenu
	add	esp, 12					; 0000000cH
; Line 1374
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObjTopLevel$[ebp], eax
; Line 1375
	mov	eax, DWORD PTR _pObjTopLevel$[ebp]
	mov	cx, WORD PTR [eax+112]
	mov	WORD PTR _TopLevel_Flags$[ebp], cx
; Line 1376
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObjTopLevel$[ebp], 0
; Line 1378
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN36@OnKey
; Line 1379
	mov	DWORD PTR _KeyOpen$[ebp], 18		; 00000012H
; Line 1380
	mov	DWORD PTR _KeyBack$[ebp], 16		; 00000010H
; Line 1381
	mov	DWORD PTR _KeyNext$[ebp], 19		; 00000013H
; Line 1382
	mov	DWORD PTR _KeyPrev$[ebp], 17		; 00000011H
; Line 1383
	jmp	SHORT $LN35@OnKey
$LN36@OnKey:
; Line 1384
	mov	DWORD PTR _KeyOpen$[ebp], 19		; 00000013H
; Line 1385
	mov	DWORD PTR _KeyBack$[ebp], 0
; Line 1386
	mov	DWORD PTR _KeyNext$[ebp], 18		; 00000012H
; Line 1387
	mov	DWORD PTR _KeyPrev$[ebp], 16		; 00000010H
$LN35@OnKey:
; Line 1389
	cmp	DWORD PTR _Index$[ebp], 0
	jge	SHORT $LN34@OnKey
; Line 1390
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyPrev$[ebp]
	jne	SHORT $LN33@OnKey
; Line 1392
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$13369[ebp], eax
; Line 1393
	mov	eax, DWORD PTR _NumItems$13369[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelection
	add	esp, 8
	jmp	SHORT $LN32@OnKey
$LN33@OnKey:
; Line 1394
	cmp	DWORD PTR _Key$[ebp], 27		; 0000001bH
	je	SHORT $LN32@OnKey
; Line 1395
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
$LN32@OnKey:
; Line 1397
	cmp	DWORD PTR _Key$[ebp], 27		; 0000001bH
	je	SHORT $LN30@OnKey
; Line 1398
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetCapture
	add	esp, 4
$LN30@OnKey:
; Line 1400
	xor	eax, eax
	jmp	$LN37@OnKey
$LN34@OnKey:
; Line 1403
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1404
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Item_hSubmenu$[ebp], ecx
; Line 1405
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Item_Flags$[ebp], cx
; Line 1406
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Item_Id$[ebp], cx
; Line 1407
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1409
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	je	SHORT $LN29@OnKey
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyOpen$[ebp]
	je	SHORT $LN28@OnKey
	cmp	DWORD PTR _Key$[ebp], 13		; 0000000dH
	jne	SHORT $LN29@OnKey
$LN28@OnKey:
; Line 1413
	push	0
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OpenMenu
	add	esp, 12					; 0000000cH
	jmp	$LN27@OnKey
$LN29@OnKey:
; Line 1414
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	jne	SHORT $LN26@OnKey
	cmp	DWORD PTR _Key$[ebp], 13		; 0000000dH
	jne	SHORT $LN26@OnKey
; Line 1419
	movzx	eax, WORD PTR _Item_Flags$[ebp]
	and	eax, 1
	jne	SHORT $LN25@OnKey
; Line 1420
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1421
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ActivateItem
	add	esp, 8
$LN25@OnKey:
; Line 1423
	movzx	eax, WORD PTR _Item_Flags$[ebp]
	and	eax, 2
	jne	SHORT $LN24@OnKey
; Line 1424
	movzx	eax, WORD PTR _Item_Id$[ebp]
	push	eax
	push	7
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN24@OnKey:
; Line 1426
	jmp	$LN27@OnKey
$LN26@OnKey:
; Line 1427
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	SHORT $LN20@OnKey
	movzx	eax, WORD PTR _TopLevel_Flags$[ebp]
	and	eax, 1
	jne	SHORT $LN20@OnKey
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyOpen$[ebp]
	jne	SHORT $LN20@OnKey
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	je	SHORT $LN21@OnKey
$LN20@OnKey:
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	$LN22@OnKey
	movzx	eax, WORD PTR _TopLevel_Flags$[ebp]
	and	eax, 1
	jne	$LN22@OnKey
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyBack$[ebp]
	jne	$LN22@OnKey
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hOwner$[ebp]
	jne	$LN22@OnKey
$LN21@OnKey:
; Line 1433
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1434
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	and	ecx, -65				; ffffffbfH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 1435
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1437
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1439
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyOpen$[ebp]
	jne	SHORT $LN19@OnKey
; Line 1440
	push	1
	push	1
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 12					; 0000000cH
; Line 1441
	lea	eax, DWORD PTR _SubSel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hObjTopLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetTopLevelMenu
	add	esp, 12					; 0000000cH
; Line 1442
	jmp	SHORT $LN18@OnKey
$LN19@OnKey:
; Line 1443
	push	1
	push	-1
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 12					; 0000000cH
; Line 1444
	lea	eax, DWORD PTR _SubSel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hObjTopLevel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetTopLevelMenu
	add	esp, 12					; 0000000cH
$LN18@OnKey:
; Line 1447
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObjTopLevel$[ebp], eax
; Line 1448
	mov	eax, DWORD PTR _pObjTopLevel$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _TopLevel_Sel$[ebp], ecx
; Line 1449
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObjTopLevel$[ebp], 0
; Line 1450
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyBack$[ebp]
	jne	SHORT $LN39@OnKey
	mov	ecx, DWORD PTR _SubSel$[ebp]
	mov	DWORD PTR tv186[ebp], ecx
	jmp	SHORT $LN40@OnKey
$LN39@OnKey:
	mov	DWORD PTR tv186[ebp], 0
$LN40@OnKey:
	mov	edx, DWORD PTR tv186[ebp]
	push	edx
	mov	eax, DWORD PTR _TopLevel_Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObjTopLevel$[ebp]
	push	ecx
	call	__OpenMenu
	add	esp, 12					; 0000000cH
; Line 1451
	jmp	$LN27@OnKey
$LN22@OnKey:
; Line 1452
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	$LN16@OnKey
	cmp	DWORD PTR _Key$[ebp], 27		; 0000001bH
	je	SHORT $LN15@OnKey
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyBack$[ebp]
	jne	SHORT $LN13@OnKey
	movzx	eax, WORD PTR _TopLevel_Flags$[ebp]
	and	eax, 1
	jne	SHORT $LN13@OnKey
	cmp	DWORD PTR _Item_hSubmenu$[ebp], 0
	jne	SHORT $LN13@OnKey
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hOwner$[ebp]
	jne	SHORT $LN15@OnKey
$LN13@OnKey:
	movzx	eax, WORD PTR _TopLevel_Flags$[ebp]
	and	eax, 1
	je	$LN16@OnKey
$LN15@OnKey:
; Line 1458
	mov	eax, DWORD PTR _hOwner$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1459
	cmp	DWORD PTR _hOwner$[ebp], 0
	je	$LN11@OnKey
; Line 1464
	mov	eax, DWORD PTR _hOwner$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObjOwner$13396[ebp], eax
; Line 1465
	mov	eax, DWORD PTR _pObjOwner$13396[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _pObjOwner$13396[ebp]
	mov	eax, DWORD PTR [edx+104]
	push	eax
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItemOwner$13397[ebp], eax
; Line 1466
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObjOwner$13396[ebp], 0
; Line 1467
	mov	eax, DWORD PTR _pItemOwner$13397[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _IdOwner$13398[ebp], cx
; Line 1468
	mov	eax, DWORD PTR _pItemOwner$13397[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _FlagsOwner$13399[ebp], cx
; Line 1469
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemOwner$13397[ebp], 0
; Line 1470
	movzx	eax, WORD PTR _FlagsOwner$13399[ebp]
	and	eax, 2
	jne	SHORT $LN11@OnKey
; Line 1471
	movzx	eax, WORD PTR _IdOwner$13398[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SendMenuMessage
	add	esp, 16					; 00000010H
$LN11@OnKey:
; Line 1473
	jmp	$LN27@OnKey
$LN16@OnKey:
; Line 1474
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	jne	SHORT $LN8@OnKey
	cmp	DWORD PTR _Key$[ebp], 27		; 0000001bH
	jne	SHORT $LN8@OnKey
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN8@OnKey
; Line 1479
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 1480
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSelection
	add	esp, 8
; Line 1481
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ReleaseCapture
	add	esp, 4
	jmp	SHORT $LN27@OnKey
$LN8@OnKey:
; Line 1482
	mov	eax, DWORD PTR _hObjTopLevel$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	jne	SHORT $LN6@OnKey
	cmp	DWORD PTR _Key$[ebp], 27		; 0000001bH
	jne	SHORT $LN6@OnKey
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN6@OnKey
; Line 1487
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ClosePopup
	add	esp, 4
	jmp	SHORT $LN27@OnKey
$LN6@OnKey:
; Line 1488
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyNext$[ebp]
	jne	SHORT $LN4@OnKey
; Line 1492
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 1493
	push	0
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN27@OnKey
$LN4@OnKey:
; Line 1494
	mov	eax, DWORD PTR _Key$[ebp]
	cmp	eax, DWORD PTR _KeyPrev$[ebp]
	jne	SHORT $LN2@OnKey
; Line 1498
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CloseSubmenu
	add	esp, 4
; Line 1499
	push	0
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 12					; 0000000cH
; Line 1500
	jmp	SHORT $LN27@OnKey
$LN2@OnKey:
; Line 1501
	mov	eax, 1
	jmp	SHORT $LN37@OnKey
$LN27@OnKey:
; Line 1503
	xor	eax, eax
$LN37@OnKey:
; Line 1504
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@OnKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN44@OnKey:
	DD	2
	DD	$LN43@OnKey
$LN43@OnKey:
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN41@OnKey
	DD	-104					; ffffff98H
	DD	4
	DD	$LN42@OnKey
$LN42@OnKey:
	DB	104					; 00000068H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	84					; 00000054H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
$LN41@OnKey:
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	0
__OnKey	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __MoveSel
_TEXT	SEGMENT
_pItem$13313 = -80					; size = 4
_Cnt$ = -68						; size = 4
_NumItems$ = -56					; size = 4
_Index$ = -44						; size = 4
_NewIndex$ = -32					; size = 4
_ItemArray$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Dir$ = 12						; size = 4
_SuppressNotification$ = 16				; size = 4
__MoveSel PROC						; COMDAT
; Line 1288
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1291
	mov	DWORD PTR _Cnt$[ebp], 0
; Line 1292
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1293
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1294
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _Index$[ebp], ecx
; Line 1295
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1296
	mov	DWORD PTR _NewIndex$[ebp], -1
; Line 1297
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
$LN9@MoveSel:
; Line 1300
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _Index$[ebp], eax
; Line 1301
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jl	SHORT $LN6@MoveSel
; Line 1302
	mov	DWORD PTR _Index$[ebp], 0
; Line 1303
	mov	eax, DWORD PTR _Cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _Cnt$[ebp], eax
	jmp	SHORT $LN5@MoveSel
$LN6@MoveSel:
; Line 1304
	cmp	DWORD PTR _Index$[ebp], 0
	jge	SHORT $LN5@MoveSel
; Line 1305
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Index$[ebp], eax
; Line 1306
	mov	eax, DWORD PTR _Cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _Cnt$[ebp], eax
$LN5@MoveSel:
; Line 1308
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$13313[ebp], eax
; Line 1309
	mov	eax, DWORD PTR _pItem$13313[ebp]
	movzx	ecx, WORD PTR [eax+6]
	and	ecx, 2
	jne	SHORT $LN3@MoveSel
; Line 1310
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _NewIndex$[ebp], eax
$LN3@MoveSel:
; Line 1312
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13313[ebp], 0
; Line 1313
	cmp	DWORD PTR _NewIndex$[ebp], 0
	jge	SHORT $LN7@MoveSel
	cmp	DWORD PTR _Cnt$[ebp], 2
	jl	SHORT $LN9@MoveSel
$LN7@MoveSel:
; Line 1314
	cmp	DWORD PTR _NewIndex$[ebp], 0
	jl	SHORT $LN10@MoveSel
; Line 1315
	mov	eax, DWORD PTR _SuppressNotification$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__SetSelectionEx
	add	esp, 12					; 0000000cH
$LN10@MoveSel:
; Line 1317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__MoveSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OpenMenu
_TEXT	SEGMENT
_Item_hSubmenu$ = -56					; size = 4
_ItemArray$ = -44					; size = 4
_NumItems$ = -32					; size = 4
_pItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_SubSel$ = 16						; size = 4
__OpenMenu PROC						; COMDAT
; Line 1323
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1330
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1331
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1332
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+112]
	or	ecx, 64					; 00000040H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+112], cx
; Line 1333
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1334
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1335
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Item_hSubmenu$[ebp], ecx
; Line 1336
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1337
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OpenSubmenu
	add	esp, 8
; Line 1338
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1339
	mov	eax, DWORD PTR _SubSel$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jl	SHORT $LN1@OpenMenu
; Line 1340
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	mov	DWORD PTR _SubSel$[ebp], eax
$LN1@OpenMenu:
; Line 1342
	mov	eax, DWORD PTR _SubSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Item_hSubmenu$[ebp]
	push	ecx
	call	__SetSelection
	add	esp, 8
; Line 1343
	mov	eax, DWORD PTR _Item_hSubmenu$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1344
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelection
	add	esp, 8
; Line 1345
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OpenMenu ENDP
_TEXT	ENDS
PUBLIC	_MENU_CreateEx
EXTRN	_WM_DeleteWindow:PROC
EXTRN	_WIDGET_SetEffect:PROC
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU_CreateEx
_TEXT	SEGMENT
_ItemArray$13482 = -32					; size = 4
_pObj$13481 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_MENU_CreateEx PROC					; COMDAT
; Line 1630
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1635
	push	84					; 00000054H
	push	OFFSET _MENU_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	or	eax, 10					; 0000000aH
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ySize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 1636
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN8@MENU_Creat
; Line 1639
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _ItemArray$13482[ebp], eax
; Line 1640
	cmp	DWORD PTR _ItemArray$13482[ebp], 0
	je	$LN7@MENU_Creat
; Line 1641
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13481[ebp], eax
; Line 1643
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	ecx, DWORD PTR _ItemArray$13482[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 1645
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13481[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 1647
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	DWORD PTR [eax+128], 1296387669		; 4d454e55H
; Line 1648
	mov	eax, DWORD PTR _ExFlags$[ebp]
	and	eax, 2
	je	SHORT $LN6@MENU_Creat
; Line 1649
	mov	eax, DWORD PTR _ExFlags$[ebp]
	or	eax, 64					; 00000040H
	mov	DWORD PTR _ExFlags$[ebp], eax
; Line 1650
	jmp	SHORT $LN5@MENU_Creat
$LN6@MENU_Creat:
; Line 1651
	mov	eax, DWORD PTR _ExFlags$[ebp]
	and	eax, -65				; ffffffbfH
	mov	DWORD PTR _ExFlags$[ebp], eax
$LN5@MENU_Creat:
; Line 1653
	mov	edi, DWORD PTR _pObj$13481[ebp]
	add	edi, 56					; 00000038H
	mov	ecx, 12					; 0000000cH
	mov	esi, OFFSET _MENU__DefaultProps
	rep movsd
; Line 1654
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	cx, WORD PTR _ExFlags$[ebp]
	mov	WORD PTR [eax+112], cx
; Line 1655
	xor	eax, eax
	cmp	DWORD PTR _xSize$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _pObj$13481[ebp]
	mov	DWORD PTR [ecx+116], eax
; Line 1656
	xor	eax, eax
	cmp	DWORD PTR _ySize$[ebp], 0
	setle	al
	sub	eax, 1
	and	eax, DWORD PTR _ySize$[ebp]
	mov	ecx, DWORD PTR _pObj$13481[ebp]
	mov	DWORD PTR [ecx+120], eax
; Line 1657
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	DWORD PTR [eax+124], -1
; Line 1658
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	DWORD PTR [eax+108], 0
; Line 1659
	mov	eax, DWORD PTR _pObj$13481[ebp]
	mov	BYTE PTR [eax+114], 0
; Line 1660
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13481[ebp], 0
; Line 1661
	mov	eax, DWORD PTR _MENU__pDefaultEffect
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_SetEffect
	add	esp, 8
; Line 1662
	jmp	SHORT $LN4@MENU_Creat
$LN7@MENU_Creat:
; Line 1663
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 1664
	mov	DWORD PTR _hObj$[ebp], 0
; Line 1665
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN4@MENU_Creat
	push	OFFSET $SG13490
	call	_GUI_ErrorOut
	add	esp, 4
$LN4@MENU_Creat:
; Line 1667
	jmp	SHORT $LN2@MENU_Creat
$LN8@MENU_Creat:
; Line 1668
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@MENU_Creat
	push	OFFSET $SG13493
	call	_GUI_ErrorOut
	add	esp, 4
$LN2@MENU_Creat:
; Line 1671
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 1672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_CreateEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MENU__GetNumItems
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_MENU__GetNumItems PROC					; COMDAT
; Line 1684
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1685
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
; Line 1686
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU__GetNumItems ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU__InvalidateItem
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MENU__InvalidateItem PROC				; COMDAT
; Line 1692
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1693
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _Index$[ebp], eax
; Line 1694
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1695
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU__InvalidateItem ENDP
_TEXT	ENDS
PUBLIC	_MENU__RecalcTextWidthOfItems
EXTRN	_GUI_GetStringDistX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU__RecalcTextWidthOfItems
_TEXT	SEGMENT
_NumItems$ = -44					; size = 4
_i$ = -32						; size = 4
_pItem$ = -20						; size = 4
_pOldFont$ = -8						; size = 4
_pObj$ = 8						; size = 4
_MENU__RecalcTextWidthOfItems PROC			; COMDAT
; Line 1701
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1705
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_MENU__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1706
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$[ebp], eax
; Line 1707
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@MENU__Reca
$LN2@MENU__Reca:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@MENU__Reca:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN1@MENU__Reca
; Line 1708
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1709
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 1710
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1711
	jmp	SHORT $LN2@MENU__Reca
$LN1@MENU__Reca:
; Line 1712
	mov	eax, DWORD PTR _pOldFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 1713
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU__RecalcTextWidthOfItems ENDP
_TEXT	ENDS
EXTRN	_WM_SetSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU__ResizeMenu
_TEXT	SEGMENT
_ySize$ = -32						; size = 4
_xSize$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_MENU__ResizeMenu PROC					; COMDAT
; Line 1719
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1722
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1723
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CalcWindowSizeX
	add	esp, 8
	mov	DWORD PTR _xSize$[ebp], eax
; Line 1724
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CalcWindowSizeY
	add	esp, 8
	mov	DWORD PTR _ySize$[ebp], eax
; Line 1725
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1726
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WM_SetSize
	add	esp, 12					; 0000000cH
; Line 1727
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1728
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU__ResizeMenu ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcWindowSizeX
_TEXT	SEGMENT
_xSize$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__CalcWindowSizeX PROC					; COMDAT
; Line 365
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 366
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _xSize$[ebp], ecx
; Line 367
	cmp	DWORD PTR _xSize$[ebp], 0
	jne	SHORT $LN1@CalcWindow
; Line 368
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeX
	add	esp, 4
	mov	DWORD PTR _xSize$[ebp], eax
$LN1@CalcWindow:
; Line 370
	mov	eax, DWORD PTR _xSize$[ebp]
; Line 371
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcWindowSizeX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcWindowSizeY
_TEXT	SEGMENT
_ySize$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__CalcWindowSizeY PROC					; COMDAT
; Line 377
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 378
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _ySize$[ebp], ecx
; Line 379
	cmp	DWORD PTR _ySize$[ebp], 0
	jne	SHORT $LN1@CalcWindow@2
; Line 380
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcMenuSizeY
	add	esp, 4
	mov	DWORD PTR _ySize$[ebp], eax
$LN1@CalcWindow@2:
; Line 382
	mov	eax, DWORD PTR _ySize$[ebp]
; Line 383
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcWindowSizeY ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_MENU__SetItem
EXTRN	_strcpy:PROC
EXTRN	_GUI_ARRAY_SetItem:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU__SetItem
_TEXT	SEGMENT
_pItem$13539 = -84					; size = 4
_r$ = -69						; size = 1
_pText$ = -60						; size = 4
_Item$ = -48						; size = 16
_ItemArray$ = -24					; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_pItemData$ = 16					; size = 4
_MENU__SetItem PROC					; COMDAT
; Line 1734
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1737
	mov	DWORD PTR _Item$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Item$[ebp+4], eax
	mov	DWORD PTR _Item$[ebp+8], eax
	mov	DWORD PTR _Item$[ebp+12], eax
; Line 1739
	mov	BYTE PTR _r$[ebp], 0
; Line 1740
	mov	eax, DWORD PTR _pItemData$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pText$[ebp], ecx
; Line 1741
	cmp	DWORD PTR _pText$[ebp], 0
	jne	SHORT $LN3@MENU__SetI
; Line 1742
	mov	DWORD PTR _pText$[ebp], OFFSET $SG13534
$LN3@MENU__SetI:
; Line 1744
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1745
	mov	eax, DWORD PTR _pItemData$[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _Item$[ebp+4], cx
; Line 1746
	mov	eax, DWORD PTR _pItemData$[ebp]
	mov	cx, WORD PTR [eax+6]
	mov	WORD PTR _Item$[ebp+6], cx
; Line 1747
	mov	eax, DWORD PTR _pItemData$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _Item$[ebp], ecx
; Line 1748
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__CalcTextWidth
	add	esp, 8
	mov	DWORD PTR _Item$[ebp+8], eax
; Line 1749
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1750
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1751
	movzx	eax, WORD PTR _Item$[ebp+6]
	and	eax, 2
	je	SHORT $LN2@MENU__SetI
; Line 1752
	mov	DWORD PTR _Item$[ebp], 0
$LN2@MENU__SetI:
; Line 1754
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Index$[ebp]
	push	edx
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_SetItem
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN1@MENU__SetI
; Line 1756
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$13539[ebp], eax
; Line 1757
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$13539[ebp]
	add	ecx, 12					; 0000000cH
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1758
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13539[ebp], 0
; Line 1759
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	call	_MENU_SetOwner
	add	esp, 8
; Line 1760
	mov	eax, DWORD PTR _Item$[ebp]
	push	eax
	call	_WM_DetachWindow
	add	esp, 4
; Line 1761
	mov	BYTE PTR _r$[ebp], 1
$LN1@MENU__SetI:
; Line 1763
	mov	al, BYTE PTR _r$[ebp]
; Line 1764
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@MENU__SetI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@MENU__SetI:
	DD	1
	DD	$LN7@MENU__SetI
$LN7@MENU__SetI:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN6@MENU__SetI
$LN6@MENU__SetI:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_MENU__SetItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcTextWidth
_TEXT	SEGMENT
_pOldFont$12742 = -20					; size = 4
_TextWidth$ = -8					; size = 4
_pObj$ = 8						; size = 4
_sText$ = 12						; size = 4
__CalcTextWidth PROC					; COMDAT
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 246
	mov	DWORD PTR _TextWidth$[ebp], 0
; Line 247
	cmp	DWORD PTR _sText$[ebp], 0
	je	SHORT $LN1@CalcTextWi
; Line 249
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$12742[ebp], eax
; Line 250
	mov	eax, DWORD PTR _sText$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _TextWidth$[ebp], eax
; Line 251
	mov	eax, DWORD PTR _pOldFont$12742[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
$LN1@CalcTextWi:
; Line 253
	mov	eax, DWORD PTR _TextWidth$[ebp]
; Line 254
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcTextWidth ENDP
_TEXT	ENDS
PUBLIC	_MENU__SetItemFlags
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU__SetItemFlags
_TEXT	SEGMENT
_pItem$ = -8						; size = 4
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Mask$ = 16						; size = 2
_Flags$ = 20						; size = 2
_MENU__SetItemFlags PROC				; COMDAT
; Line 1770
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1771
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1772
	movzx	eax, WORD PTR _Mask$[ebp]
	not	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	and	edx, eax
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [eax+6], dx
; Line 1773
	movzx	eax, WORD PTR _Flags$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	movzx	edx, WORD PTR [ecx+6]
	or	edx, eax
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [eax+6], dx
; Line 1774
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1775
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU__SetItemFlags ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MENU__SendMenuMessage
_TEXT	SEGMENT
_Msg$ = -32						; size = 16
_MsgData$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hDestWin$ = 12						; size = 4
_MsgType$ = 16						; size = 2
_ItemId$ = 20						; size = 2
_MENU__SendMenuMessage PROC				; COMDAT
; Line 1781
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1783
	mov	DWORD PTR _Msg$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Msg$[ebp+4], eax
	mov	DWORD PTR _Msg$[ebp+8], eax
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 1784
	mov	ax, WORD PTR _MsgType$[ebp]
	mov	WORD PTR _MsgData$[ebp], ax
; Line 1785
	mov	ax, WORD PTR _ItemId$[ebp]
	mov	WORD PTR _MsgData$[ebp+2], ax
; Line 1786
	mov	DWORD PTR _Msg$[ebp], 44		; 0000002cH
; Line 1787
	lea	eax, DWORD PTR _MsgData$[ebp]
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 1788
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _Msg$[ebp+8], eax
; Line 1789
	cmp	DWORD PTR _hDestWin$[ebp], 0
	jne	SHORT $LN2@MENU__Send
; Line 1790
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hDestWin$[ebp], eax
$LN2@MENU__Send:
; Line 1792
	cmp	DWORD PTR _hDestWin$[ebp], 0
	je	SHORT $LN1@MENU__Send
; Line 1793
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDestWin$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 1794
	mov	eax, DWORD PTR _Msg$[ebp+12]
	jmp	SHORT $LN3@MENU__Send
$LN1@MENU__Send:
; Line 1796
	xor	eax, eax
$LN3@MENU__Send:
; Line 1797
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@MENU__Send
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@MENU__Send:
	DD	2
	DD	$LN7@MENU__Send
$LN7@MENU__Send:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@MENU__Send
	DD	-32					; ffffffe0H
	DD	16					; 00000010H
	DD	$LN6@MENU__Send
$LN6@MENU__Send:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN5@MENU__Send:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_MENU__SendMenuMessage ENDP
_TEXT	ENDS
PUBLIC	_MENU_AddItem
EXTRN	_GUI_ARRAY_DeleteItem:PROC
EXTRN	_GUI_ARRAY_AddItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU_AddItem
_TEXT	SEGMENT
_Index$13579 = -32					; size = 4
_ItemArray$13575 = -20					; size = 4
_pObj$13574 = -8					; size = 4
_hObj$ = 8						; size = 4
_pItemData$ = 12					; size = 4
_MENU_AddItem PROC					; COMDAT
; Line 1809
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1810
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN5@MENU_AddIt
	cmp	DWORD PTR _pItemData$[ebp], 0
	je	$LN5@MENU_AddIt
; Line 1814
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13574[ebp], eax
; Line 1815
	mov	eax, DWORD PTR _pObj$13574[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _ItemArray$13575[ebp], ecx
; Line 1816
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13574[ebp], 0
; Line 1817
	push	0
	push	0
	mov	eax, DWORD PTR _ItemArray$13575[ebp]
	push	eax
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN5@MENU_AddIt
; Line 1819
	mov	eax, DWORD PTR _ItemArray$13575[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _Index$13579[ebp], eax
; Line 1820
	mov	eax, DWORD PTR _pItemData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$13579[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MENU__SetItem
	add	esp, 12					; 0000000cH
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@MENU_AddIt
; Line 1821
	mov	eax, DWORD PTR _Index$13579[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$13575[ebp]
	push	ecx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 1822
	jmp	SHORT $LN5@MENU_AddIt
$LN2@MENU_AddIt:
; Line 1823
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU__ResizeMenu
	add	esp, 4
$LN5@MENU_AddIt:
; Line 1828
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_AddItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MENU_SetOwner
_TEXT	SEGMENT
_pObj$13588 = -8					; size = 4
_hObj$ = 8						; size = 4
_hOwner$ = 12						; size = 4
_MENU_SetOwner PROC					; COMDAT
; Line 1834
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1835
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@MENU_SetOw
; Line 1838
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13588[ebp], eax
; Line 1839
	cmp	DWORD PTR _pObj$13588[ebp], 0
	je	SHORT $LN1@MENU_SetOw
; Line 1840
	mov	eax, DWORD PTR _pObj$13588[ebp]
	mov	ecx, DWORD PTR _hOwner$[ebp]
	mov	DWORD PTR [eax+108], ecx
$LN1@MENU_SetOw:
; Line 1842
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13588[ebp], 0
$LN3@MENU_SetOw:
; Line 1845
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_SetOwner ENDP
_TEXT	ENDS
PUBLIC	_MENU_SetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU_SetSel
_TEXT	SEGMENT
_NumItems$13600 = -32					; size = 4
_pObj$13598 = -20					; size = 4
_OldSel$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
_MENU_SetSel PROC					; COMDAT
; Line 1851
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1853
	mov	DWORD PTR _OldSel$[ebp], 0
; Line 1854
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@MENU_SetSe
; Line 1857
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13598[ebp], eax
; Line 1858
	cmp	DWORD PTR _pObj$13598[ebp], 0
	je	SHORT $LN2@MENU_SetSe
; Line 1860
	mov	eax, DWORD PTR _pObj$13598[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _OldSel$[ebp], ecx
; Line 1861
	mov	eax, DWORD PTR _pObj$13598[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$13600[ebp], eax
; Line 1862
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _NumItems$13600[ebp]
	jge	SHORT $LN2@MENU_SetSe
; Line 1863
	mov	eax, DWORD PTR _pObj$13598[ebp]
	mov	ecx, DWORD PTR _Sel$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 1864
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@MENU_SetSe:
; Line 1867
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13598[ebp], 0
$LN3@MENU_SetSe:
; Line 1870
	mov	eax, DWORD PTR _OldSel$[ebp]
; Line 1871
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_SetSel ENDP
_TEXT	ENDS
PUBLIC	_MENU_GetOwner
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MENU_GetOwner
_TEXT	SEGMENT
tv73 = -220						; size = 4
_pObj$13608 = -20					; size = 4
_hOwner$ = -8						; size = 4
_hObj$ = 8						; size = 4
_MENU_GetOwner PROC					; COMDAT
; Line 1877
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1878
	mov	DWORD PTR _hOwner$[ebp], 0
; Line 1879
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MENU_GetOw
; Line 1882
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MENU_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13608[ebp], eax
; Line 1883
	cmp	DWORD PTR _pObj$13608[ebp], 0
	je	SHORT $LN1@MENU_GetOw
; Line 1884
	mov	eax, DWORD PTR _pObj$13608[ebp]
	cmp	DWORD PTR [eax+108], 0
	je	SHORT $LN5@MENU_GetOw
	mov	ecx, DWORD PTR _pObj$13608[ebp]
	mov	edx, DWORD PTR [ecx+108]
	mov	DWORD PTR tv73[ebp], edx
	jmp	SHORT $LN6@MENU_GetOw
$LN5@MENU_GetOw:
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR tv73[ebp], eax
$LN6@MENU_GetOw:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _hOwner$[ebp], ecx
$LN1@MENU_GetOw:
; Line 1886
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13608[ebp], 0
$LN2@MENU_GetOw:
; Line 1889
	mov	eax, DWORD PTR _hOwner$[ebp]
; Line 1890
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MENU_GetOwner ENDP
_TEXT	ENDS
END
