; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\FRAMEWIN.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_FRAMEWIN__GetBorderSize
PUBLIC	_FRAMEWIN__DefaultProps
PUBLIC	_FRAMEWIN__pSkinDefault
EXTRN	_FRAMEWIN__SkinClassic:BYTE
EXTRN	_GUI_Font8_1:BYTE
_DATA	SEGMENT
_FRAMEWIN__DefaultProps DD FLAT:_GUI_Font8_1
	DD	0404040H
	DD	0ff0000H
	DD	0ffffffH
	DD	0ffffffH
	DD	0c0c0c0H
	DD	FLAT:_FRAMEWIN__GetBorderSize
	DD	00H
	DW	00H
	DW	03H
	DW	01H
	DW	00H
_FRAMEWIN__pSkinDefault DD FLAT:_FRAMEWIN__SkinClassic
_FRAMEWIN__MinVisibility DW 05H
	ORG $+2
$SG12848 DB	'FRAMEWIN.c: Wrong handle type or Object not init''ed', 00H
_DATA	ENDS
PUBLIC	_FRAMEWIN_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\framewin.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _FRAMEWIN_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_FRAMEWIN_LockH PROC					; COMDAT
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 281
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 282
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@FRAMEWIN_L
; Line 283
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+144], 1179795789		; 4652414dH
	je	SHORT $LN2@FRAMEWIN_L
; Line 284
	push	OFFSET $SG12848
	call	_GUI_ErrorOut
	add	esp, 4
; Line 285
	xor	eax, eax
	jmp	SHORT $LN3@FRAMEWIN_L
$LN2@FRAMEWIN_L:
; Line 288
	mov	eax, DWORD PTR _p$[ebp]
$LN3@FRAMEWIN_L:
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRAMEWIN_LockH ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__GetBorderSize
_TEXT	SEGMENT
tv68 = -260						; size = 4
_ItemInfo$ = -60					; size = 32
_pSkinPrivate$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_FRAMEWIN__GetBorderSize PROC				; COMDAT
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 301
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 302
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pSkinPrivate$[ebp], edx
; Line 303
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 304
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 305
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 3
	ja	SHORT $LN5@FRAMEWIN__
	mov	ecx, DWORD PTR tv68[ebp]
	jmp	DWORD PTR $LN12@FRAMEWIN__[ecx*4]
$LN4@FRAMEWIN__:
; Line 307
	mov	DWORD PTR _ItemInfo$[ebp+4], 22		; 00000016H
; Line 308
	jmp	SHORT $LN5@FRAMEWIN__
$LN3@FRAMEWIN__:
; Line 310
	mov	DWORD PTR _ItemInfo$[ebp+4], 20		; 00000014H
; Line 311
	jmp	SHORT $LN5@FRAMEWIN__
$LN2@FRAMEWIN__:
; Line 313
	mov	DWORD PTR _ItemInfo$[ebp+4], 19		; 00000013H
; Line 314
	jmp	SHORT $LN5@FRAMEWIN__
$LN1@FRAMEWIN__:
; Line 316
	mov	DWORD PTR _ItemInfo$[ebp+4], 21		; 00000015H
$LN5@FRAMEWIN__:
; Line 319
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 320
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@FRAMEWIN__
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@FRAMEWIN__:
	DD	1
	DD	$LN10@FRAMEWIN__
$LN10@FRAMEWIN__:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN9@FRAMEWIN__
$LN9@FRAMEWIN__:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
	npad	3
$LN12@FRAMEWIN__:
	DD	$LN4@FRAMEWIN__
	DD	$LN3@FRAMEWIN__
	DD	$LN2@FRAMEWIN__
	DD	$LN1@FRAMEWIN__
_FRAMEWIN__GetBorderSize ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN__CalcTitleHeight
EXTRN	_GUI_GetYSizeOfFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__CalcTitleHeight
_TEXT	SEGMENT
_r$ = -8						; size = 4
_pObj$ = 8						; size = 4
_FRAMEWIN__CalcTitleHeight PROC				; COMDAT
; Line 326
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 327
	mov	DWORD PTR _r$[ebp], 0
; Line 328
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 32					; 00000020H
	je	SHORT $LN2@FRAMEWIN__@2
; Line 329
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+88]
	mov	DWORD PTR _r$[ebp], ecx
; Line 330
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN2@FRAMEWIN__@2
; Line 331
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 2
	mov	DWORD PTR _r$[ebp], eax
$LN2@FRAMEWIN__@2:
; Line 334
	mov	eax, DWORD PTR _r$[ebp]
; Line 335
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRAMEWIN__CalcTitleHeight ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN__GetTitleLimits
EXTRN	_WM_GetNextSibling:PROC
EXTRN	_WM_GetFirstChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__GetTitleLimits
_TEXT	SEGMENT
_Rect$ = -108						; size = 8
_BorderSizeT$ = -92					; size = 4
_y0$ = -80						; size = 4
_x1$ = -68						; size = 4
_x0$ = -56						; size = 4
_pChild$ = -44						; size = 4
_hChild$ = -32						; size = 4
_pSkinPrivate$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pxMin$ = 12						; size = 4
_pxMax$ = 16						; size = 4
_FRAMEWIN__GetTitleLimits PROC				; COMDAT
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 352
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 353
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pSkinPrivate$[ebp], edx
; Line 354
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _Rect$[ebp], ecx
	mov	DWORD PTR _Rect$[ebp+4], edx
; Line 355
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 356
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _BorderSizeT$[ebp], eax
; Line 360
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetFirstChild
	add	esp, 4
	mov	DWORD PTR _hChild$[ebp], eax
$LN7@FRAMEWIN__@3:
; Line 361
	cmp	DWORD PTR _hChild$[ebp], 0
	je	$LN8@FRAMEWIN__@3
; Line 362
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pChild$[ebp], eax
; Line 363
	mov	eax, DWORD PTR _pChild$[ebp]
	movsx	ecx, WORD PTR [eax]
	movsx	edx, WORD PTR _Rect$[ebp]
	sub	ecx, edx
	mov	DWORD PTR _x0$[ebp], ecx
; Line 364
	mov	eax, DWORD PTR _pChild$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	movsx	edx, WORD PTR _Rect$[ebp]
	sub	ecx, edx
	mov	DWORD PTR _x1$[ebp], ecx
; Line 365
	mov	eax, DWORD PTR _pChild$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	movsx	edx, WORD PTR _Rect$[ebp+2]
	sub	ecx, edx
	mov	DWORD PTR _y0$[ebp], ecx
; Line 366
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _BorderSizeT$[ebp]
	jne	SHORT $LN5@FRAMEWIN__@3
; Line 367
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 128				; 00000080H
	je	SHORT $LN4@FRAMEWIN__@3
; Line 368
	mov	eax, DWORD PTR _pxMax$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jg	SHORT $LN3@FRAMEWIN__@3
; Line 369
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pxMax$[ebp]
	mov	DWORD PTR [ecx], eax
$LN3@FRAMEWIN__@3:
; Line 371
	jmp	SHORT $LN5@FRAMEWIN__@3
$LN4@FRAMEWIN__@3:
; Line 372
	mov	eax, DWORD PTR _pxMin$[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	cmp	ecx, DWORD PTR [eax]
	jl	SHORT $LN5@FRAMEWIN__@3
; Line 373
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _pxMin$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@FRAMEWIN__@3:
; Line 377
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pChild$[ebp], 0
; Line 378
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM_GetNextSibling
	add	esp, 4
	mov	DWORD PTR _hChild$[ebp], eax
; Line 379
	jmp	$LN7@FRAMEWIN__@3
$LN8@FRAMEWIN__@3:
; Line 380
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@FRAMEWIN__@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@FRAMEWIN__@3:
	DD	1
	DD	$LN11@FRAMEWIN__@3
$LN11@FRAMEWIN__@3:
	DD	-108					; ffffff94H
	DD	8
	DD	$LN10@FRAMEWIN__@3
$LN10@FRAMEWIN__@3:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_FRAMEWIN__GetTitleLimits ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN__CalcPositions
EXTRN	_WM_GetWindowSizeY:PROC
EXTRN	_WM__GetWindowSizeY:PROC
EXTRN	_WM__GetWindowSizeX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__CalcPositions
_TEXT	SEGMENT
_pSkinPrivate$ = -152					; size = 4
_x1$ = -140						; size = 4
_x0$ = -128						; size = 4
_ysize$ = -116						; size = 4
_xsize$ = -104						; size = 4
_BorderSizeT$ = -92					; size = 4
_BorderSizeB$ = -80					; size = 4
_BorderSizeR$ = -68					; size = 4
_BorderSizeL$ = -56					; size = 4
_IBorderSize$ = -44					; size = 4
_MenuHeight$ = -32					; size = 4
_TitleHeight$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pPos$ = 12						; size = 4
_FRAMEWIN__CalcPositions PROC				; COMDAT
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 389
	mov	DWORD PTR _MenuHeight$[ebp], 0
; Line 390
	mov	DWORD PTR _IBorderSize$[ebp], 0
; Line 399
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 400
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pSkinPrivate$[ebp], edx
; Line 401
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _BorderSizeL$[ebp], eax
; Line 402
	mov	esi, esp
	push	3
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _BorderSizeR$[ebp], eax
; Line 403
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _BorderSizeB$[ebp], eax
; Line 404
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _BorderSizeT$[ebp], eax
; Line 405
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WM__GetWindowSizeX
	add	esp, 4
	mov	DWORD PTR _xsize$[ebp], eax
; Line 406
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WM__GetWindowSizeY
	add	esp, 4
	mov	DWORD PTR _ysize$[ebp], eax
; Line 407
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 32					; 00000020H
	je	SHORT $LN2@FRAMEWIN__@4
; Line 408
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+92]
	mov	DWORD PTR _IBorderSize$[ebp], ecx
$LN2@FRAMEWIN__@4:
; Line 410
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_FRAMEWIN__CalcTitleHeight
	add	esp, 4
	mov	DWORD PTR _TitleHeight$[ebp], eax
; Line 411
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN1@FRAMEWIN__@4
; Line 412
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_WM_GetWindowSizeY
	add	esp, 4
	mov	DWORD PTR _MenuHeight$[ebp], eax
$LN1@FRAMEWIN__@4:
; Line 414
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _TitleHeight$[ebp]
	mov	WORD PTR [eax], cx
; Line 415
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _MenuHeight$[ebp]
	mov	WORD PTR [eax+2], cx
; Line 419
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _BorderSizeL$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 420
	mov	eax, DWORD PTR _xsize$[ebp]
	sub	eax, DWORD PTR _BorderSizeR$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 421
	mov	eax, DWORD PTR _BorderSizeT$[ebp]
	add	eax, DWORD PTR _IBorderSize$[ebp]
	add	eax, DWORD PTR _TitleHeight$[ebp]
	add	eax, DWORD PTR _MenuHeight$[ebp]
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 422
	mov	eax, DWORD PTR _ysize$[ebp]
	sub	eax, DWORD PTR _BorderSizeB$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	WORD PTR [ecx+10], ax
; Line 426
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _BorderSizeL$[ebp]
	mov	WORD PTR [eax+12], cx
; Line 427
	mov	eax, DWORD PTR _xsize$[ebp]
	sub	eax, DWORD PTR _BorderSizeR$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	WORD PTR [ecx+16], ax
; Line 428
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _BorderSizeT$[ebp]
	mov	WORD PTR [eax+14], cx
; Line 429
	mov	eax, DWORD PTR _TitleHeight$[ebp]
	mov	ecx, DWORD PTR _BorderSizeT$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	WORD PTR [eax+18], dx
; Line 431
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 432
	mov	eax, DWORD PTR _pPos$[ebp]
	movsx	ecx, WORD PTR [eax+12]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 433
	mov	eax, DWORD PTR _pPos$[ebp]
	movsx	ecx, WORD PTR [eax+16]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 434
	lea	eax, DWORD PTR _x1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_FRAMEWIN__GetTitleLimits
	add	esp, 12					; 0000000cH
; Line 435
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _x0$[ebp]
	mov	WORD PTR [eax+12], cx
; Line 436
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	cx, WORD PTR _x1$[ebp]
	mov	WORD PTR [eax+16], cx
; Line 468
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@FRAMEWIN__@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@FRAMEWIN__@4:
	DD	2
	DD	$LN7@FRAMEWIN__@4
$LN7@FRAMEWIN__@4:
	DD	-128					; ffffff80H
	DD	4
	DD	$LN5@FRAMEWIN__@4
	DD	-140					; ffffff74H
	DD	4
	DD	$LN6@FRAMEWIN__@4
$LN6@FRAMEWIN__@4:
	DB	120					; 00000078H
	DB	49					; 00000031H
	DB	0
$LN5@FRAMEWIN__@4:
	DB	120					; 00000078H
	DB	48					; 00000030H
	DB	0
_FRAMEWIN__CalcPositions ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_FRAMEWIN__UpdatePositions
EXTRN	_WM_SetSize:PROC
EXTRN	_WM_MoveChildTo:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__UpdatePositions
_TEXT	SEGMENT
_hMenu$ = -64						; size = 4
_hClient$ = -52						; size = 4
_Pos$ = -40						; size = 20
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_FRAMEWIN__UpdatePositions PROC				; COMDAT
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 479
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 480
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hClient$[ebp], ecx
; Line 481
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _hMenu$[ebp], ecx
; Line 482
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 486
	cmp	DWORD PTR _hClient$[ebp], 0
	jne	SHORT $LN3@FRAMEWIN__@5
	cmp	DWORD PTR _hMenu$[ebp], 0
	je	SHORT $LN5@FRAMEWIN__@5
$LN3@FRAMEWIN__@5:
; Line 487
	lea	eax, DWORD PTR _Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_FRAMEWIN__CalcPositions
	add	esp, 8
; Line 488
	cmp	DWORD PTR _hClient$[ebp], 0
	je	SHORT $LN2@FRAMEWIN__@5
; Line 489
	movsx	eax, WORD PTR _Pos$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _Pos$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _hClient$[ebp]
	push	edx
	call	_WM_MoveChildTo
	add	esp, 12					; 0000000cH
; Line 492
	movsx	eax, WORD PTR _Pos$[ebp+10]
	movsx	ecx, WORD PTR _Pos$[ebp+6]
	sub	eax, ecx
	add	eax, 1
	push	eax
	movsx	edx, WORD PTR _Pos$[ebp+8]
	movsx	eax, WORD PTR _Pos$[ebp+4]
	sub	edx, eax
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _hClient$[ebp]
	push	ecx
	call	_WM_SetSize
	add	esp, 12					; 0000000cH
$LN2@FRAMEWIN__@5:
; Line 494
	cmp	DWORD PTR _hMenu$[ebp], 0
	je	SHORT $LN5@FRAMEWIN__@5
; Line 495
	movsx	eax, WORD PTR _Pos$[ebp+6]
	movsx	ecx, WORD PTR _Pos$[ebp+2]
	sub	eax, ecx
	push	eax
	movsx	edx, WORD PTR _Pos$[ebp+4]
	push	edx
	mov	eax, DWORD PTR _hMenu$[ebp]
	push	eax
	call	_WM_MoveChildTo
	add	esp, 12					; 0000000cH
$LN5@FRAMEWIN__@5:
; Line 498
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@FRAMEWIN__@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@FRAMEWIN__@5:
	DD	1
	DD	$LN8@FRAMEWIN__@5
$LN8@FRAMEWIN__@5:
	DD	-40					; ffffffd8H
	DD	20					; 00000014H
	DD	$LN7@FRAMEWIN__@5
$LN7@FRAMEWIN__@5:
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_FRAMEWIN__UpdatePositions ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN_SetActive
PUBLIC	__$ArrayPad$
PUBLIC	_FRAMEWIN_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WIDGET_HandleActive:PROC
EXTRN	_GUI_ALLOC_FreePtr:PROC
EXTRN	_WM_SetFocusOnNextChild:PROC
EXTRN	_WM_SetFocus:PROC
EXTRN	_WM_IsWindow:PROC
EXTRN	_WM__SendMessage:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN_Callback
_TEXT	SEGMENT
tv80 = -396						; size = 4
$T13137 = -385						; size = 1
_pState$12996 = -184					; size = 4
_pMsgOrg$12995 = -172					; size = 4
_Msg$12986 = -160					; size = 16
_r$12965 = -136						; size = 4
_pfPaint$ = -124					; size = 4
_Flags$ = -112						; size = 2
_hClient$ = -100					; size = 4
_hFocussedChild$ = -88					; size = 4
_pHook$ = -76						; size = 4
_Pos$ = -64						; size = 20
_pRect$ = -36						; size = 4
_pObj$ = -24						; size = 4
_hObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_FRAMEWIN_Callback PROC					; COMDAT
; Line 524
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	BYTE PTR $T13137[ebp], 0
; Line 536
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 537
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 538
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _pHook$[ebp], ecx
; Line 539
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR _hFocussedChild$[ebp], ecx
; Line 540
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _hClient$[ebp], ecx
; Line 541
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+128]
	mov	WORD PTR _Flags$[ebp], cx
; Line 542
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN29@FRAMEWIN_C
; Line 543
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	BYTE PTR $T13137[ebp], 1
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pfPaint$[ebp], edx
$LN29@FRAMEWIN_C:
; Line 545
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
	jmp	SHORT $LN28@FRAMEWIN_C
$LN27@FRAMEWIN_C:
; Line 550
	mov	eax, DWORD PTR _pHook$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pHook$[ebp], ecx
$LN28@FRAMEWIN_C:
	cmp	DWORD PTR _pHook$[ebp], 0
	je	SHORT $LN26@FRAMEWIN_C
; Line 552
	mov	esi, esp
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pHook$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$12965[ebp], eax
; Line 553
	cmp	DWORD PTR _r$12965[ebp], 0
	je	SHORT $LN25@FRAMEWIN_C
; Line 554
	jmp	$LN30@FRAMEWIN_C
$LN25@FRAMEWIN_C:
; Line 556
	jmp	SHORT $LN27@FRAMEWIN_C
$LN26@FRAMEWIN_C:
; Line 557
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv80[ebp], ecx
	mov	edx, DWORD PTR tv80[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv80[ebp], edx
	cmp	DWORD PTR tv80[ebp], 31			; 0000001fH
	ja	$LN23@FRAMEWIN_C
	mov	eax, DWORD PTR tv80[ebp]
	movzx	ecx, BYTE PTR $LN34@FRAMEWIN_C[eax]
	jmp	DWORD PTR $LN39@FRAMEWIN_C[ecx*4]
$LN22@FRAMEWIN_C:
; Line 559
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnPidStateChange
	add	esp, 8
; Line 560
	jmp	$LN23@FRAMEWIN_C
$LN21@FRAMEWIN_C:
; Line 562
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 563
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN20@FRAMEWIN_C
; Line 564
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+136], edx
; Line 565
	jmp	SHORT $LN19@FRAMEWIN_C
$LN20@FRAMEWIN_C:
; Line 566
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+136]
	mov	DWORD PTR [eax+12], edx
$LN19@FRAMEWIN_C:
; Line 568
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 569
	jmp	$LN30@FRAMEWIN_C
$LN18@FRAMEWIN_C:
; Line 571
	cmp	BYTE PTR $T13137[ebp], 0
	jne	SHORT $LN32@FRAMEWIN_C
	push	OFFSET $LN33@FRAMEWIN_C
	call	__RTC_UninitUse
	add	esp, 4
$LN32@FRAMEWIN_C:
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	DWORD PTR _pfPaint$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 573
	jmp	$LN23@FRAMEWIN_C
$LN17@FRAMEWIN_C:
; Line 575
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 576
	jmp	$LN30@FRAMEWIN_C
$LN16@FRAMEWIN_C:
; Line 578
	lea	eax, DWORD PTR _Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_FRAMEWIN__CalcPositions
	add	esp, 8
; Line 579
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pRect$[ebp], ecx
; Line 580
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	ecx, DWORD PTR _Pos$[ebp+4]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _Pos$[ebp+8]
	mov	DWORD PTR [eax+4], edx
; Line 581
	jmp	$LN30@FRAMEWIN_C
$LN15@FRAMEWIN_C:
; Line 583
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hClient$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 584
	jmp	$LN30@FRAMEWIN_C
$LN14@FRAMEWIN_C:
; Line 586
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 2
	jne	SHORT $LN13@FRAMEWIN_C
; Line 588
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _Msg$12986[ebp+8], eax
; Line 589
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _Msg$12986[ebp+12], ecx
; Line 590
	mov	DWORD PTR _Msg$12986[ebp], 39		; 00000027H
; Line 591
	lea	eax, DWORD PTR _Msg$12986[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM__SendMessage
	add	esp, 8
$LN13@FRAMEWIN_C:
; Line 593
	jmp	$LN30@FRAMEWIN_C
$LN12@FRAMEWIN_C:
; Line 595
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN11@FRAMEWIN_C
; Line 596
	mov	eax, DWORD PTR _hFocussedChild$[ebp]
	push	eax
	call	_WM_IsWindow
	add	esp, 4
	test	eax, eax
	je	SHORT $LN10@FRAMEWIN_C
; Line 597
	mov	eax, DWORD PTR _hFocussedChild$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 598
	jmp	SHORT $LN9@FRAMEWIN_C
$LN10@FRAMEWIN_C:
; Line 599
	mov	eax, DWORD PTR _hClient$[ebp]
	push	eax
	call	_WM_SetFocusOnNextChild
	add	esp, 4
	mov	DWORD PTR _hFocussedChild$[ebp], eax
; Line 600
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 601
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hFocussedChild$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 602
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN9@FRAMEWIN_C:
; Line 604
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_SetActive
	add	esp, 8
; Line 605
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 606
	jmp	SHORT $LN8@FRAMEWIN_C
$LN11@FRAMEWIN_C:
; Line 607
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_SetActive
	add	esp, 8
$LN8@FRAMEWIN_C:
; Line 609
	jmp	$LN30@FRAMEWIN_C
$LN7@FRAMEWIN_C:
; Line 615
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 8
	jne	SHORT $LN6@FRAMEWIN_C
; Line 618
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pMsgOrg$12995[ebp], ecx
; Line 619
	mov	eax, DWORD PTR _pMsgOrg$12995[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$12996[ebp], ecx
; Line 620
	cmp	DWORD PTR _pState$12996[ebp], 0
	je	SHORT $LN6@FRAMEWIN_C
; Line 621
	mov	eax, DWORD PTR _pState$12996[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN6@FRAMEWIN_C
; Line 622
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
$LN6@FRAMEWIN_C:
; Line 626
	jmp	SHORT $LN23@FRAMEWIN_C
$LN3@FRAMEWIN_C:
; Line 628
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnChildHasFocus
	add	esp, 8
; Line 629
	jmp	SHORT $LN23@FRAMEWIN_C
$LN2@FRAMEWIN_C:
; Line 632
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 633
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 116				; 00000074H
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 634
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN23@FRAMEWIN_C:
; Line 640
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN1@FRAMEWIN_C
; Line 641
	jmp	SHORT $LN30@FRAMEWIN_C
$LN1@FRAMEWIN_C:
; Line 643
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN30@FRAMEWIN_C:
; Line 644
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN38@FRAMEWIN_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN38@FRAMEWIN_C:
	DD	2
	DD	$LN37@FRAMEWIN_C
$LN37@FRAMEWIN_C:
	DD	-64					; ffffffc0H
	DD	20					; 00000014H
	DD	$LN35@FRAMEWIN_C
	DD	-160					; ffffff60H
	DD	16					; 00000010H
	DD	$LN36@FRAMEWIN_C
$LN36@FRAMEWIN_C:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN35@FRAMEWIN_C:
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN33@FRAMEWIN_C:
	DB	112					; 00000070H
	DB	102					; 00000066H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN39@FRAMEWIN_C:
	DD	$LN2@FRAMEWIN_C
	DD	$LN17@FRAMEWIN_C
	DD	$LN7@FRAMEWIN_C
	DD	$LN18@FRAMEWIN_C
	DD	$LN22@FRAMEWIN_C
	DD	$LN16@FRAMEWIN_C
	DD	$LN15@FRAMEWIN_C
	DD	$LN12@FRAMEWIN_C
	DD	$LN3@FRAMEWIN_C
	DD	$LN14@FRAMEWIN_C
	DD	$LN21@FRAMEWIN_C
	DD	$LN23@FRAMEWIN_C
$LN34@FRAMEWIN_C:
	DB	0
	DB	1
	DB	2
	DB	11					; 0000000bH
	DB	3
	DB	11					; 0000000bH
	DB	4
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	5
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	6
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	7
	DB	11					; 0000000bH
	DB	8
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	9
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	11					; 0000000bH
	DB	10					; 0000000aH
_FRAMEWIN_Callback ENDP
_TEXT	ENDS
EXTRN	_WM_SetCaptureMove:PROC
EXTRN	_WM_BringToTop:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnTouch
_TEXT	SEGMENT
_LimitTop$12779 = -44					; size = 4
_Flags$ = -32						; size = 2
_pState$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 106
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+128]
	mov	WORD PTR _Flags$[ebp], cx
; Line 113
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 114
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN7@OnTouch
; Line 115
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN5@OnTouch
; Line 116
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 8
	jne	SHORT $LN4@OnTouch
; Line 117
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
$LN4@OnTouch:
; Line 119
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_BringToTop
	add	esp, 4
; Line 120
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 16					; 00000010H
	je	SHORT $LN3@OnTouch
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 256				; 00000100H
	je	SHORT $LN3@OnTouch
; Line 123
	mov	DWORD PTR _LimitTop$12779[ebp], 0
; Line 131
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	jne	SHORT $LN3@OnTouch
; Line 132
	mov	eax, DWORD PTR _LimitTop$12779[ebp]
	push	eax
	movsx	ecx, WORD PTR _FRAMEWIN__MinVisibility
	push	ecx
	mov	edx, DWORD PTR _pState$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetCaptureMove
	add	esp, 16					; 00000010H
$LN3@OnTouch:
; Line 136
	jmp	SHORT $LN7@OnTouch
$LN5@OnTouch:
; Line 137
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	and	ecx, -257				; fffffeffH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+128], cx
; Line 139
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN7@OnTouch:
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
EXTRN	_WM__IsAncestor:PROC
EXTRN	_WM__IsAncestorOrSelf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnChildHasFocus
_TEXT	SEGMENT
_IsDesc$12793 = -32					; size = 4
_pInfo$12791 = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnChildHasFocus PROC					; COMDAT
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 160
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN5@OnChildHas
; Line 161
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pInfo$12791[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$12791[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	call	_WM__IsAncestorOrSelf
	add	esp, 8
	mov	DWORD PTR _IsDesc$12793[ebp], eax
; Line 163
	cmp	DWORD PTR _IsDesc$12793[ebp], 0
	je	SHORT $LN3@OnChildHas
; Line 164
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetActive
	add	esp, 8
; Line 165
	jmp	SHORT $LN5@OnChildHas
$LN3@OnChildHas:
; Line 166
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetActive
	add	esp, 8
; Line 170
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$12791[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_WM__IsAncestor
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@OnChildHas
; Line 171
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 172
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pInfo$12791[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax+132], edx
; Line 173
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN5@OnChildHas:
; Line 177
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnChildHasFocus ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetActive
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
__SetActive PROC					; COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 82
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 83
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN3@SetActive
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	and	ecx, 8
	jne	SHORT $LN3@SetActive
; Line 84
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	or	ecx, 8
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+128], cx
; Line 85
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN2@SetActive
$LN3@SetActive:
; Line 86
	cmp	DWORD PTR _State$[ebp], 0
	jne	SHORT $LN2@SetActive
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	and	ecx, 8
	je	SHORT $LN2@SetActive
; Line 87
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	and	ecx, -9					; fffffff7H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+128], cx
; Line 88
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@SetActive:
; Line 90
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetActive ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnPidStateChange
_TEXT	SEGMENT
_pState$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnPidStateChange PROC					; COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 506
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 507
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 508
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	jne	SHORT $LN1@OnPidState
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 1
	jne	SHORT $LN1@OnPidState
; Line 509
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+128]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+128], cx
$LN1@OnPidState:
; Line 511
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 512
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnPidStateChange ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN_SetText
PUBLIC	__$ArrayPad$
PUBLIC	_FRAMEWIN_CreateEx
EXTRN	_WM_DisableMemdev:PROC
EXTRN	_WIDGET__Init:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN_CreateEx
_TEXT	SEGMENT
_hClient$ = -64						; size = 4
_Pos$ = -52						; size = 20
_pObj$ = -24						; size = 4
_hObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_pTitle$ = 40						; size = 4
_cb$ = 44						; size = 4
_FRAMEWIN_CreateEx PROC					; COMDAT
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 668
	mov	eax, DWORD PTR _WinFlags$[ebp]
	or	eax, 4096				; 00001000H
	mov	DWORD PTR _WinFlags$[ebp], eax
; Line 670
	push	100					; 00000064H
	push	OFFSET _FRAMEWIN_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 671
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN2@FRAMEWIN_C@2
; Line 672
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 676
	push	48					; 00000030H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 680
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+144], 1179795789		; 4652414dH
; Line 681
	mov	edi, DWORD PTR _pObj$[ebp]
	add	edi, 56					; 00000038H
	mov	ecx, 10					; 0000000aH
	mov	esi, OFFSET _FRAMEWIN__DefaultProps
	rep movsd
; Line 682
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 683
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR _ExFlags$[ebp]
	mov	WORD PTR [eax+128], cx
; Line 684
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+132], 0
; Line 685
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+112], 0
; Line 686
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+140], 0
; Line 687
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _FRAMEWIN__pSkinDefault
	mov	DWORD PTR [eax+96], ecx
; Line 688
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 689
	lea	eax, DWORD PTR _Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_FRAMEWIN__CalcPositions
	add	esp, 8
; Line 695
	push	0
	push	OFFSET _FRAMEWIN__cbClient
	push	6018					; 00001782H
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	movsx	ecx, WORD PTR _Pos$[ebp+10]
	movsx	edx, WORD PTR _Pos$[ebp+6]
	sub	ecx, edx
	add	ecx, 1
	push	ecx
	movsx	eax, WORD PTR _Pos$[ebp+8]
	movsx	ecx, WORD PTR _Pos$[ebp+4]
	sub	eax, ecx
	add	eax, 1
	push	eax
	movsx	edx, WORD PTR _Pos$[ebp+6]
	push	edx
	movsx	eax, WORD PTR _Pos$[ebp+4]
	push	eax
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hClient$[ebp], eax
; Line 696
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _FRAMEWIN__pSkinDefault
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 697
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 698
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hClient$[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 699
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 705
	mov	eax, DWORD PTR _WinFlags$[ebp]
	and	eax, 8196				; 00002004H
	jne	SHORT $LN1@FRAMEWIN_C@2
; Line 706
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_DisableMemdev
	add	esp, 4
$LN1@FRAMEWIN_C@2:
; Line 708
	mov	eax, DWORD PTR _pTitle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_FRAMEWIN_SetText
	add	esp, 8
$LN2@FRAMEWIN_C@2:
; Line 711
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 712
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FRAMEWIN_C@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@FRAMEWIN_C@2:
	DD	1
	DD	$LN6@FRAMEWIN_C@2
$LN6@FRAMEWIN_C@2:
	DD	-52					; ffffffccH
	DD	20					; 00000014H
	DD	$LN5@FRAMEWIN_C@2
$LN5@FRAMEWIN_C@2:
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
_FRAMEWIN_CreateEx ENDP
_TEXT	ENDS
EXTRN	_WM_SetFocusOnPrevChild:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN__cbClient
_TEXT	SEGMENT
tv129 = -304						; size = 4
tv73 = -304						; size = 4
_Key$12827 = -104					; size = 4
_Msg$12817 = -92					; size = 16
_hFocussedChild$ = -68					; size = 4
_ClientColor$ = -56					; size = 4
_cb$ = -44						; size = 4
_pObj$ = -32						; size = 4
_hParent$ = -20						; size = 4
_hWin$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_FRAMEWIN__cbClient PROC				; COMDAT
; Line 183
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 190
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hWin$[ebp], ecx
; Line 191
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hParent$[ebp], eax
; Line 192
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 193
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _cb$[ebp], ecx
; Line 194
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _ClientColor$[ebp], ecx
; Line 195
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR _hFocussedChild$[ebp], ecx
; Line 196
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 197
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv73[ebp], ecx
	mov	edx, DWORD PTR tv73[ebp]
	sub	edx, 14					; 0000000eH
	mov	DWORD PTR tv73[ebp], edx
	cmp	DWORD PTR tv73[ebp], 20			; 00000014H
	ja	$LN19@FRAMEWIN__@6
	mov	eax, DWORD PTR tv73[ebp]
	movzx	ecx, BYTE PTR $LN23@FRAMEWIN__@6[eax]
	jmp	DWORD PTR $LN27@FRAMEWIN__@6[ecx*4]
$LN18@FRAMEWIN__@6:
; Line 199
	cmp	DWORD PTR _ClientColor$[ebp], 268435455	; 0fffffffH
	je	SHORT $LN17@FRAMEWIN__@6
; Line 200
	mov	eax, DWORD PTR _ClientColor$[ebp]
	push	eax
	call	_LCD_SetBkColor
	add	esp, 4
; Line 201
	call	_GUI_Clear
$LN17@FRAMEWIN__@6:
; Line 207
	cmp	DWORD PTR _cb$[ebp], 0
	je	SHORT $LN16@FRAMEWIN__@6
; Line 209
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Msg$12817[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _Msg$12817[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _Msg$12817[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _Msg$12817[ebp+12], edx
; Line 210
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _Msg$12817[ebp+4], eax
; Line 211
	mov	esi, esp
	lea	eax, DWORD PTR _Msg$12817[ebp]
	push	eax
	call	DWORD PTR _cb$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN16@FRAMEWIN__@6:
; Line 213
	jmp	$LN21@FRAMEWIN__@6
$LN15@FRAMEWIN__@6:
; Line 215
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN14@FRAMEWIN__@6
; Line 216
	cmp	DWORD PTR _hFocussedChild$[ebp], 0
	je	SHORT $LN13@FRAMEWIN__@6
	mov	eax, DWORD PTR _hFocussedChild$[ebp]
	cmp	eax, DWORD PTR _hWin$[ebp]
	je	SHORT $LN13@FRAMEWIN__@6
; Line 217
	mov	eax, DWORD PTR _hFocussedChild$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 218
	jmp	SHORT $LN12@FRAMEWIN__@6
$LN13@FRAMEWIN__@6:
; Line 219
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetFocusOnNextChild
	add	esp, 4
	mov	DWORD PTR _hFocussedChild$[ebp], eax
; Line 220
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hFocussedChild$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 222
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN12@FRAMEWIN__@6:
; Line 224
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [eax+12], 0
$LN14@FRAMEWIN__@6:
; Line 226
	jmp	$LN21@FRAMEWIN__@6
$LN11@FRAMEWIN__@6:
; Line 228
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
; Line 229
	jmp	$LN21@FRAMEWIN__@6
$LN10@FRAMEWIN__@6:
; Line 231
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	$LN9@FRAMEWIN__@6
; Line 232
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Key$12827[ebp], edx
; Line 233
	mov	eax, DWORD PTR _Key$12827[ebp]
	mov	DWORD PTR tv129[ebp], eax
	cmp	DWORD PTR tv129[ebp], 9
	je	SHORT $LN5@FRAMEWIN__@6
	cmp	DWORD PTR tv129[ebp], 10		; 0000000aH
	je	SHORT $LN6@FRAMEWIN__@6
	jmp	SHORT $LN9@FRAMEWIN__@6
$LN6@FRAMEWIN__@6:
; Line 235
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetFocusOnPrevChild
	add	esp, 4
	mov	DWORD PTR _hFocussedChild$[ebp], eax
; Line 236
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 237
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hFocussedChild$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 238
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 239
	jmp	$LN21@FRAMEWIN__@6
$LN5@FRAMEWIN__@6:
; Line 241
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetFocusOnNextChild
	add	esp, 4
	mov	DWORD PTR _hFocussedChild$[ebp], eax
; Line 242
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 243
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hFocussedChild$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 244
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 245
	jmp	SHORT $LN21@FRAMEWIN__@6
$LN9@FRAMEWIN__@6:
; Line 248
	jmp	SHORT $LN19@FRAMEWIN__@6
$LN4@FRAMEWIN__@6:
; Line 250
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _ClientColor$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 251
	jmp	SHORT $LN21@FRAMEWIN__@6
$LN3@FRAMEWIN__@6:
; Line 255
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
; Line 256
	jmp	SHORT $LN21@FRAMEWIN__@6
$LN19@FRAMEWIN__@6:
; Line 261
	cmp	DWORD PTR _cb$[ebp], 0
	je	SHORT $LN2@FRAMEWIN__@6
; Line 262
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hParent$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 263
	mov	esi, esp
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	DWORD PTR _cb$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 264
	jmp	SHORT $LN21@FRAMEWIN__@6
$LN2@FRAMEWIN__@6:
; Line 265
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN21@FRAMEWIN__@6:
; Line 267
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@FRAMEWIN__@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN26@FRAMEWIN__@6:
	DD	1
	DD	$LN25@FRAMEWIN__@6
$LN25@FRAMEWIN__@6:
	DD	-92					; ffffffa4H
	DD	16					; 00000010H
	DD	$LN24@FRAMEWIN__@6
$LN24@FRAMEWIN__@6:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN27@FRAMEWIN__@6:
	DD	$LN10@FRAMEWIN__@6
	DD	$LN18@FRAMEWIN__@6
	DD	$LN3@FRAMEWIN__@6
	DD	$LN15@FRAMEWIN__@6
	DD	$LN11@FRAMEWIN__@6
	DD	$LN4@FRAMEWIN__@6
	DD	$LN19@FRAMEWIN__@6
$LN23@FRAMEWIN__@6:
	DB	0
	DB	1
	DB	6
	DB	6
	DB	6
	DB	6
	DB	2
	DB	2
	DB	6
	DB	2
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	3
	DB	4
	DB	6
	DB	6
	DB	5
_FRAMEWIN__cbClient ENDP
_TEXT	ENDS
EXTRN	_GUI__SetText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN_SetText
_TEXT	SEGMENT
_hText$13045 = -20					; size = 4
_pObj$13044 = -8					; size = 4
_hObj$ = 8						; size = 4
_s$ = 12						; size = 4
_FRAMEWIN_SetText PROC					; COMDAT
; Line 724
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 725
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@FRAMEWIN_S
; Line 729
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13044[ebp], eax
; Line 730
	mov	eax, DWORD PTR _pObj$13044[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _hText$13045[ebp], ecx
; Line 731
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13044[ebp], 0
; Line 732
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hText$13045[ebp]
	push	ecx
	call	_GUI__SetText
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@FRAMEWIN_S
; Line 733
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13044[ebp], eax
; Line 734
	mov	eax, DWORD PTR _pObj$13044[ebp]
	mov	ecx, DWORD PTR _hText$13045[ebp]
	mov	DWORD PTR [eax+116], ecx
; Line 735
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13044[ebp], 0
; Line 736
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN3@FRAMEWIN_S:
; Line 740
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@FRAMEWIN_S
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@FRAMEWIN_S:
	DD	1
	DD	$LN6@FRAMEWIN_S
$LN6@FRAMEWIN_S:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN5@FRAMEWIN_S
$LN5@FRAMEWIN_S:
	DB	104					; 00000068H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_FRAMEWIN_SetText ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN_SetTextAlign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN_SetTextAlign
_TEXT	SEGMENT
_pObj$13055 = -8					; size = 4
_hObj$ = 8						; size = 4
_Align$ = 12						; size = 4
_FRAMEWIN_SetTextAlign PROC				; COMDAT
; Line 746
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 747
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@FRAMEWIN_S@2
; Line 750
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13055[ebp], eax
; Line 751
	mov	eax, DWORD PTR _pObj$13055[ebp]
	movsx	ecx, WORD PTR [eax+94]
	cmp	ecx, DWORD PTR _Align$[ebp]
	je	SHORT $LN1@FRAMEWIN_S@2
; Line 752
	mov	eax, DWORD PTR _pObj$13055[ebp]
	mov	cx, WORD PTR _Align$[ebp]
	mov	WORD PTR [eax+94], cx
; Line 753
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@FRAMEWIN_S@2:
; Line 755
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13055[ebp], 0
$LN3@FRAMEWIN_S@2:
; Line 758
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRAMEWIN_SetTextAlign ENDP
_TEXT	ENDS
PUBLIC	_FRAMEWIN_SetMoveable
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRAMEWIN_SetMoveable
_TEXT	SEGMENT
_pObj$13064 = -8					; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_FRAMEWIN_SetMoveable PROC				; COMDAT
; Line 764
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 765
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN4@FRAMEWIN_S@3
; Line 768
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_FRAMEWIN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13064[ebp], eax
; Line 769
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN2@FRAMEWIN_S@3
; Line 770
	mov	eax, DWORD PTR _pObj$13064[ebp]
	movzx	ecx, WORD PTR [eax+128]
	or	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _pObj$13064[ebp]
	mov	WORD PTR [edx+128], cx
; Line 771
	jmp	SHORT $LN1@FRAMEWIN_S@3
$LN2@FRAMEWIN_S@3:
; Line 772
	mov	eax, DWORD PTR _pObj$13064[ebp]
	movzx	ecx, WORD PTR [eax+128]
	and	ecx, -17				; ffffffefH
	mov	edx, DWORD PTR _pObj$13064[ebp]
	mov	WORD PTR [edx+128], cx
$LN1@FRAMEWIN_S@3:
; Line 774
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13064[ebp], 0
$LN4@FRAMEWIN_S@3:
; Line 777
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRAMEWIN_SetMoveable ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FRAMEWIN_SetActive
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_FRAMEWIN_SetActive PROC				; COMDAT
; Line 783
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 784
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@FRAMEWIN_S@4
; Line 786
	mov	eax, DWORD PTR _State$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetActive
	add	esp, 8
$LN2@FRAMEWIN_S@4:
; Line 789
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRAMEWIN_SetActive ENDP
_TEXT	ENDS
END
