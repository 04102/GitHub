; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\RPMSweep.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG17161 DB	'%d', 00H
	ORG $+1
$SG17190 DB	'%1.0d', 00H
CONST	ENDS
PUBLIC	?CreateBackground@RPMSweep@@AAEXXZ		; RPMSweep::CreateBackground
PUBLIC	__real@4050000000000000
PUBLIC	??0RPMSweep@@QAE@HHHHHHHHPAVAlarm@@_N@Z		; RPMSweep::RPMSweep
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@4050000000000000
; File c:\duii\duii\rpmsweep.cpp
CONST	SEGMENT
__real@4050000000000000 DQ 04050000000000000r	; 64
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0RPMSweep@@QAE@HHHHHHHHPAVAlarm@@_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_MinValue$ = 24						; size = 4
_MaxValue$ = 28						; size = 4
_MajorTicRange$ = 32					; size = 4
_MinorTicRange$ = 36					; size = 4
_pAlarmList$ = 40					; size = 4
_bShowGear$ = 44					; size = 1
??0RPMSweep@@QAE@HHHHHHHHPAVAlarm@@_N@Z PROC		; RPMSweep::RPMSweep, COMDAT
; _this$ = ecx
; Line 21
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xsize$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ysize$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bShowGear$[ebp]
	mov	BYTE PTR [eax+76], cl
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _MaxValue$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _MinValue$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _MajorTicRange$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _MinorTicRange$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	fisub	DWORD PTR [ecx+4]
	fdivr	QWORD PTR __real@4050000000000000
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+72]
; Line 36
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pAlarmList$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 453			; 000001c5H
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+84], 566			; 00000236H
; Line 41
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBackground@RPMSweep@@AAEXXZ	; RPMSweep::CreateBackground
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
??0RPMSweep@@QAE@HHHHHHHHPAVAlarm@@_N@Z ENDP		; RPMSweep::RPMSweep
_TEXT	ENDS
PUBLIC	??1RPMSweep@@QAE@XZ				; RPMSweep::~RPMSweep
EXTRN	_GUI_MEMDEV_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1RPMSweep@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1RPMSweep@@QAE@XZ PROC				; RPMSweep::~RPMSweep, COMDAT
; _this$ = ecx
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1RPMSweep@@QAE@XZ ENDP				; RPMSweep::~RPMSweep
_TEXT	ENDS
PUBLIC	?DrawControl@RPMSweep@@QAEXXZ			; RPMSweep::DrawControl
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_FontD32:BYTE
EXTRN	_GUI_MEMDEV_Write:PROC
EXTRN	_GUI_FillPolygon:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmDigitalBarBlueSweep:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawControl@RPMSweep@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DrawControl@RPMSweep@@QAEXXZ PROC			; RPMSweep::DrawControl, COMDAT
; _this$ = ecx
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	OFFSET _bmDigitalBarBlueSweep
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 55
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	push	4
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 88					; 00000058H
	push	ecx
	call	_GUI_FillPolygon
	add	esp, 16					; 00000010H
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_MEMDEV_Write
	add	esp, 4
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	je	SHORT $LN2@DrawContro
; Line 65
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 66
	push	OFFSET _GUI_FontD32
	call	_GUI_SetFont
	add	esp, 4
; Line 67
	push	14					; 0000000eH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 104				; 00000068H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 77					; 0000004dH
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
$LN2@DrawContro:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawControl@RPMSweep@@QAEXXZ ENDP			; RPMSweep::DrawControl
_TEXT	ENDS
PUBLIC	__real@42ac0000
PUBLIC	__real@430c0000
PUBLIC	__real@3ff599999999999a
PUBLIC	__real@3ff4000000000000
PUBLIC	__real@3ff2666666666666
PUBLIC	__real@43070000
PUBLIC	__real@43020000
PUBLIC	__real@42fa0000
PUBLIC	__real@4047000000000000
PUBLIC	__real@42f00000
PUBLIC	__real@404a000000000000
PUBLIC	__real@42e60000
PUBLIC	__real@404b000000000000
PUBLIC	__real@4018000000000000
PUBLIC	__real@42dc0000
PUBLIC	__real@404b800000000000
PUBLIC	__real@404e000000000000
PUBLIC	__real@42c80000
PUBLIC	__real@4024000000000000
PUBLIC	__real@42be0000
PUBLIC	__real@4000000000000000
PUBLIC	?atan@@YAMM@Z					; atan
PUBLIC	__real@bf800000
PUBLIC	__real@4006000000000000
PUBLIC	__real@400b333333333333
PUBLIC	__real@4062c00000000000
PUBLIC	__real@42d20000
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	__real@4066800000000000
PUBLIC	__real@400921fb5444261e
PUBLIC	?ceil@@YAMM@Z					; ceil
PUBLIC	__$ArrayPad$
EXTRN	_GUI_SelectLCD:PROC
EXTRN	_GUI_FillRoundedRect:PROC
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	_sprintf:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_GetPenSize:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
EXTRN	_ceil:PROC
EXTRN	_GUI_DrawArc2:PROC
EXTRN	_abs:PROC
EXTRN	_GUI_DrawArc:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_bmTransSweepTachOnAsphalt:BYTE
EXTRN	_GUI_MEMDEV_Select:PROC
EXTRN	_GUI_MEMDEV_Create:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@42ac0000
CONST	SEGMENT
__real@42ac0000 DD 042ac0000r			; 86
CONST	ENDS
;	COMDAT __real@430c0000
CONST	SEGMENT
__real@430c0000 DD 0430c0000r			; 140
CONST	ENDS
;	COMDAT __real@3ff599999999999a
CONST	SEGMENT
__real@3ff599999999999a DQ 03ff599999999999ar	; 1.35
CONST	ENDS
;	COMDAT __real@3ff4000000000000
CONST	SEGMENT
__real@3ff4000000000000 DQ 03ff4000000000000r	; 1.25
CONST	ENDS
;	COMDAT __real@3ff2666666666666
CONST	SEGMENT
__real@3ff2666666666666 DQ 03ff2666666666666r	; 1.15
CONST	ENDS
;	COMDAT __real@43070000
CONST	SEGMENT
__real@43070000 DD 043070000r			; 135
CONST	ENDS
;	COMDAT __real@43020000
CONST	SEGMENT
__real@43020000 DD 043020000r			; 130
CONST	ENDS
;	COMDAT __real@42fa0000
CONST	SEGMENT
__real@42fa0000 DD 042fa0000r			; 125
CONST	ENDS
;	COMDAT __real@4047000000000000
CONST	SEGMENT
__real@4047000000000000 DQ 04047000000000000r	; 46
CONST	ENDS
;	COMDAT __real@42f00000
CONST	SEGMENT
__real@42f00000 DD 042f00000r			; 120
CONST	ENDS
;	COMDAT __real@404a000000000000
CONST	SEGMENT
__real@404a000000000000 DQ 0404a000000000000r	; 52
CONST	ENDS
;	COMDAT __real@42e60000
CONST	SEGMENT
__real@42e60000 DD 042e60000r			; 115
CONST	ENDS
;	COMDAT __real@404b000000000000
CONST	SEGMENT
__real@404b000000000000 DQ 0404b000000000000r	; 54
CONST	ENDS
;	COMDAT __real@4018000000000000
CONST	SEGMENT
__real@4018000000000000 DQ 04018000000000000r	; 6
CONST	ENDS
;	COMDAT __real@42dc0000
CONST	SEGMENT
__real@42dc0000 DD 042dc0000r			; 110
CONST	ENDS
;	COMDAT __real@404b800000000000
CONST	SEGMENT
__real@404b800000000000 DQ 0404b800000000000r	; 55
CONST	ENDS
;	COMDAT __real@404e000000000000
CONST	SEGMENT
__real@404e000000000000 DQ 0404e000000000000r	; 60
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@42be0000
CONST	SEGMENT
__real@42be0000 DD 042be0000r			; 95
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@4006000000000000
CONST	SEGMENT
__real@4006000000000000 DQ 04006000000000000r	; 2.75
CONST	ENDS
;	COMDAT __real@400b333333333333
CONST	SEGMENT
__real@400b333333333333 DQ 0400b333333333333r	; 3.4
CONST	ENDS
;	COMDAT __real@4062c00000000000
CONST	SEGMENT
__real@4062c00000000000 DQ 04062c00000000000r	; 150
CONST	ENDS
;	COMDAT __real@42d20000
CONST	SEGMENT
__real@42d20000 DD 042d20000r			; 105
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@400921fb5444261e
CONST	SEGMENT
__real@400921fb5444261e DQ 0400921fb5444261er	; 3.14159
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CreateBackground@RPMSweep@@AAEXXZ
_TEXT	SEGMENT
tv848 = -588						; size = 4
tv787 = -588						; size = 4
tv1167 = -584						; size = 4
tv1165 = -584						; size = 4
tv724 = -584						; size = 4
tv710 = -584						; size = 4
tv1097 = -580						; size = 4
tv1092 = -580						; size = 4
tv1083 = -580						; size = 4
tv1052 = -580						; size = 4
tv1045 = -580						; size = 4
tv1038 = -580						; size = 4
tv1031 = -580						; size = 4
tv845 = -580						; size = 4
tv837 = -580						; size = 4
tv830 = -580						; size = 4
tv784 = -580						; size = 4
tv766 = -580						; size = 4
tv759 = -580						; size = 4
tv718 = -580						; size = 4
tv704 = -580						; size = 4
tv689 = -580						; size = 4
_temp$17113 = -380					; size = 4
_iAlarmEndAngle$17080 = -368				; size = 4
_iAlarmStartAngle$17079 = -356				; size = 4
_pAlarm$17078 = -344					; size = 4
_str$ = -332						; size = 10
_dValuePerDeg$ = -312					; size = 4
_radians$ = -300					; size = 4
_angle$ = -288						; size = 4
_dSin$ = -276						; size = 4
_dCos$ = -264						; size = 4
_iInnerY$ = -252					; size = 4
_iInnerX$ = -240					; size = 4
_iOuterY$ = -228					; size = 4
_iOuterX$ = -216					; size = 4
_TicLength$ = -204					; size = 4
_radius$ = -192						; size = 4
_iTemp$ = -180						; size = 4
_y2$ = -168						; size = 4
_x2$ = -156						; size = 4
_y1$ = -144						; size = 4
_x1$ = -132						; size = 4
_iMultiplier$ = -120					; size = 4
_iEndAngle$ = -108					; size = 4
_TicCount$ = -96					; size = 4
_range$ = -84						; size = 4
_i$ = -72						; size = 4
_iYCenter$ = -60					; size = 4
_iXCenter$ = -48					; size = 4
_iInnerArcRadius$ = -36					; size = 4
_iOuterArcRadius$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateBackground@RPMSweep@@AAEXXZ PROC			; RPMSweep::CreateBackground, COMDAT
; _this$ = ecx
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 588				; 0000024cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-588]
	mov	ecx, 147				; 00000093H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 84
	mov	DWORD PTR _iTemp$[ebp], 1
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+128], eax
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	push	OFFSET _bmTransSweepTachOnAsphalt
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 99
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 100
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 102
	push	4
	call	_GUI_SetPenSize
	add	esp, 4
; Line 103
	mov	DWORD PTR _iOuterArcRadius$[ebp], 520	; 00000208H
; Line 104
	mov	DWORD PTR _iInnerArcRadius$[ebp], 520	; 00000208H
; Line 105
	mov	DWORD PTR _iOuterX$[ebp], 447		; 000001bfH
; Line 106
	mov	DWORD PTR _iOuterY$[ebp], 522		; 0000020aH
; Line 107
	mov	DWORD PTR _iInnerX$[ebp], 460		; 000001ccH
; Line 108
	mov	DWORD PTR _iInnerY$[ebp], 610		; 00000262H
; Line 109
	push	150					; 00000096H
	push	86					; 00000056H
	mov	eax, DWORD PTR _iOuterArcRadius$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iOuterArcRadius$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iOuterY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iOuterX$[ebp]
	push	eax
	call	_GUI_DrawArc
	add	esp, 24					; 00000018H
; Line 110
	push	140					; 0000008cH
	push	88					; 00000058H
	mov	eax, DWORD PTR _iInnerArcRadius$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iInnerArcRadius$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iInnerY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iInnerX$[ebp]
	push	eax
	call	_GUI_DrawArc
	add	esp, 24					; 00000018H
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv689[ebp], edx
	fild	DWORD PTR tv689[ebp]
	fdivr	QWORD PTR __real@4050000000000000
	fstp	DWORD PTR _dValuePerDeg$[ebp]
; Line 116
	mov	DWORD PTR _iEndAngle$[ebp], 150		; 00000096H
; Line 117
	mov	DWORD PTR _iXCenter$[ebp], 453		; 000001c5H
; Line 118
	mov	DWORD PTR _iYCenter$[ebp], 566		; 00000236H
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	$LN43@CreateBack
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _pAlarm$17078[ebp], ecx
$LN44@CreateBack:
; Line 127
	cmp	DWORD PTR _pAlarm$17078[ebp], 0
	je	$LN43@CreateBack
; Line 129
	mov	eax, DWORD PTR _pAlarm$17078[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN42@CreateBack
; Line 131
	mov	eax, DWORD PTR _pAlarm$17078[ebp]
	fld	DWORD PTR [eax+8]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR tv704[ebp], eax
	fild	DWORD PTR tv704[ebp]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	call	__ftol2_sse
	mov	edx, DWORD PTR _iEndAngle$[ebp]
	sub	edx, eax
	mov	DWORD PTR tv710[ebp], edx
	fild	DWORD PTR tv710[ebp]
	fstp	DWORD PTR _iAlarmStartAngle$17079[ebp]
; Line 132
	mov	eax, DWORD PTR _pAlarm$17078[ebp]
	fld	DWORD PTR [eax+4]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	sub	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR tv718[ebp], eax
	fild	DWORD PTR tv718[ebp]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	call	__ftol2_sse
	mov	edx, DWORD PTR _iEndAngle$[ebp]
	sub	edx, eax
	mov	DWORD PTR tv724[ebp], edx
	fild	DWORD PTR tv724[ebp]
	fstp	DWORD PTR _iAlarmEndAngle$17080[ebp]
; Line 135
	fild	DWORD PTR _iEndAngle$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pAlarm$17078[ebp]
	fsubr	DWORD PTR [ecx+8]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	fsubp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?ceil@@YAMM@Z				; ceil
	add	esp, 4
	fstp	DWORD PTR _angle$[ebp]
; Line 136
	fld	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 137
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 138
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 140
	fld	DWORD PTR __real@42d20000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN41@CreateBack
; Line 141
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@400b333333333333
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 142
	jmp	SHORT $LN40@CreateBack
$LN41@CreateBack:
; Line 143
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@4006000000000000
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
$LN40@CreateBack:
; Line 145
	mov	eax, DWORD PTR _iTemp$[ebp]
	mov	ecx, DWORD PTR _iOuterArcRadius$[ebp]
	lea	edx, DWORD PTR [ecx+eax+30]
	mov	DWORD PTR _radius$[ebp], edx
; Line 147
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv759[ebp], eax
	fild	DWORD PTR tv759[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	add	eax, DWORD PTR _iXCenter$[ebp]
	mov	DWORD PTR _x1$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv766[ebp], eax
	fild	DWORD PTR tv766[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	add	eax, DWORD PTR _iYCenter$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 150
	fld	DWORD PTR _iAlarmStartAngle$17079[ebp]
	call	__ftol2_sse
	cmp	eax, 86					; 00000056H
	je	$LN39@CreateBack
	fld	DWORD PTR _iAlarmStartAngle$17079[ebp]
	call	__ftol2_sse
	cmp	eax, 87					; 00000057H
	je	SHORT $LN39@CreateBack
; Line 151
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _iOuterY$[ebp]
	push	eax
	call	_abs
	add	esp, 4
	mov	DWORD PTR tv784[ebp], eax
	fild	DWORD PTR tv784[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	sub	ecx, DWORD PTR _iOuterX$[ebp]
	push	ecx
	fstp	DWORD PTR tv1165[ebp]
	call	_abs
	add	esp, 4
	mov	DWORD PTR tv787[ebp], eax
	fild	DWORD PTR tv787[ebp]
	fdivr	DWORD PTR tv1165[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?atan@@YAMM@Z				; atan
	add	esp, 4
	fmul	QWORD PTR __real@4066800000000000
	fdiv	QWORD PTR __real@400921fb5444261e
	fsubr	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _iAlarmStartAngle$17079[ebp]
$LN39@CreateBack:
; Line 153
	fild	DWORD PTR _iEndAngle$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pAlarm$17078[ebp]
	fsubr	DWORD PTR [ecx+4]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	fsubp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?ceil@@YAMM@Z				; ceil
	add	esp, 4
	fstp	DWORD PTR _angle$[ebp]
; Line 154
	fld	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 155
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 156
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 158
	fld	DWORD PTR __real@42d20000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN38@CreateBack
; Line 159
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@400b333333333333
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 160
	jmp	SHORT $LN37@CreateBack
$LN38@CreateBack:
; Line 161
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@4006000000000000
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
$LN37@CreateBack:
; Line 163
	mov	eax, DWORD PTR _iTemp$[ebp]
	mov	ecx, DWORD PTR _iOuterArcRadius$[ebp]
	lea	edx, DWORD PTR [ecx+eax+30]
	mov	DWORD PTR _radius$[ebp], edx
; Line 165
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv830[ebp], eax
	fild	DWORD PTR tv830[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	add	eax, DWORD PTR _iXCenter$[ebp]
	mov	DWORD PTR _x1$[ebp], eax
; Line 166
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv837[ebp], eax
	fild	DWORD PTR tv837[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	add	eax, DWORD PTR _iYCenter$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 168
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _iOuterY$[ebp]
	push	eax
	call	_abs
	add	esp, 4
	mov	DWORD PTR tv845[ebp], eax
	fild	DWORD PTR tv845[ebp]
	mov	ecx, DWORD PTR _x1$[ebp]
	sub	ecx, DWORD PTR _iOuterX$[ebp]
	push	ecx
	fstp	DWORD PTR tv1167[ebp]
	call	_abs
	add	esp, 4
	mov	DWORD PTR tv848[ebp], eax
	fild	DWORD PTR tv848[ebp]
	fdivr	DWORD PTR tv1167[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	?atan@@YAMM@Z				; atan
	add	esp, 4
	fmul	QWORD PTR __real@4066800000000000
	fdiv	QWORD PTR __real@400921fb5444261e
	fsubr	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _iAlarmEndAngle$17080[ebp]
; Line 171
	fld	DWORD PTR _iAlarmEndAngle$17080[ebp]
	fcomp	DWORD PTR _iAlarmStartAngle$17079[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN36@CreateBack
; Line 176
	fld	DWORD PTR _iAlarmStartAngle$17079[ebp]
	fstp	DWORD PTR _temp$17113[ebp]
; Line 177
	fld	DWORD PTR _iAlarmEndAngle$17080[ebp]
	fstp	DWORD PTR _iAlarmStartAngle$17079[ebp]
; Line 178
	fld	DWORD PTR _temp$17113[ebp]
	fstp	DWORD PTR _iAlarmEndAngle$17080[ebp]
$LN36@CreateBack:
; Line 181
	mov	DWORD PTR _iTemp$[ebp], 512		; 00000200H
; Line 183
	push	9
	call	_GUI_SetPenSize
	add	esp, 4
; Line 184
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 185
	push	ecx
	fld	DWORD PTR _iAlarmEndAngle$17080[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _iAlarmStartAngle$17079[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _iTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iTemp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iOuterY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iOuterX$[ebp]
	push	eax
	call	_GUI_DrawArc2
	add	esp, 24					; 00000018H
; Line 188
	push	7
	call	_GUI_SetPenSize
	add	esp, 4
; Line 189
	mov	eax, DWORD PTR _pAlarm$17078[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 190
	push	ecx
	fld	DWORD PTR _iAlarmEndAngle$17080[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _iAlarmStartAngle$17079[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _iTemp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _iTemp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iOuterY$[ebp]
	push	edx
	mov	eax, DWORD PTR _iOuterX$[ebp]
	push	eax
	call	_GUI_DrawArc2
	add	esp, 24					; 00000018H
$LN42@CreateBack:
; Line 193
	mov	eax, DWORD PTR _pAlarm$17078[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pAlarm$17078[ebp], ecx
; Line 194
	jmp	$LN44@CreateBack
$LN43@CreateBack:
; Line 197
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 201
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _range$[ebp], edx
; Line 202
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _range$[ebp]
	cdq
	idiv	DWORD PTR [ecx+12]
	mov	DWORD PTR _TicCount$[ebp], eax
; Line 203
	cmp	DWORD PTR _TicCount$[ebp], 9
	jle	SHORT $LN35@CreateBack
; Line 205
	fild	DWORD PTR _TicCount$[ebp]
	fdiv	QWORD PTR __real@4000000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_ceil
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _TicCount$[ebp], eax
; Line 206
	mov	DWORD PTR _iMultiplier$[ebp], 2
; Line 208
	jmp	SHORT $LN34@CreateBack
$LN35@CreateBack:
; Line 210
	mov	DWORD PTR _iMultiplier$[ebp], 1
$LN34@CreateBack:
; Line 216
	mov	eax, DWORD PTR _iOuterArcRadius$[ebp]
	add	eax, 30					; 0000001eH
	mov	DWORD PTR _radius$[ebp], eax
; Line 217
	mov	DWORD PTR _TicLength$[ebp], 50		; 00000032H
; Line 219
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 221
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN33@CreateBack
$LN32@CreateBack:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN33@CreateBack:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _TicCount$[ebp]
	jge	$LN31@CreateBack
; Line 223
	fild	DWORD PTR _iEndAngle$[ebp]
	fild	DWORD PTR _i$[ebp]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	fimul	DWORD PTR _iMultiplier$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fimul	DWORD PTR [eax+12]
	fsubp	ST(1), ST(0)
	push	ecx
	fstp	DWORD PTR [esp]
	call	?ceil@@YAMM@Z				; ceil
	add	esp, 4
	fstp	DWORD PTR _angle$[ebp]
; Line 225
	fld	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 227
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 228
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 230
	fld	DWORD PTR __real@42d20000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN30@CreateBack
; Line 231
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@400b333333333333
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 232
	jmp	SHORT $LN29@CreateBack
$LN30@CreateBack:
; Line 233
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fdiv	QWORD PTR __real@4006000000000000
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
$LN29@CreateBack:
; Line 240
	mov	eax, DWORD PTR _iTemp$[ebp]
	mov	ecx, DWORD PTR _iOuterArcRadius$[ebp]
	lea	edx, DWORD PTR [ecx+eax+30]
	mov	DWORD PTR _radius$[ebp], edx
; Line 245
	fld	DWORD PTR __real@42be0000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN28@CreateBack
; Line 246
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4024000000000000
	fdiv	QWORD PTR __real@4050000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN28@CreateBack:
; Line 247
	fld	DWORD PTR __real@42c80000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN26@CreateBack
; Line 248
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4024000000000000
	fdiv	QWORD PTR __real@404e000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN26@CreateBack:
; Line 249
	fld	DWORD PTR __real@42d20000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN24@CreateBack
; Line 250
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4024000000000000
	fdiv	QWORD PTR __real@404b800000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN24@CreateBack:
; Line 251
	fld	DWORD PTR __real@42dc0000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN22@CreateBack
; Line 252
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@404b000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN22@CreateBack:
; Line 253
	fld	DWORD PTR __real@42e60000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN20@CreateBack
; Line 254
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@404a000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN20@CreateBack:
; Line 255
	fld	DWORD PTR __real@42f00000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN18@CreateBack
; Line 256
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fsub	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@4047000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN18@CreateBack:
; Line 257
	fld	DWORD PTR __real@42fa0000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN16@CreateBack
; Line 258
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fadd	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@404e000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	$LN11@CreateBack
$LN16@CreateBack:
; Line 259
	fld	DWORD PTR __real@43020000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN14@CreateBack
; Line 260
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fadd	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@4050000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
	jmp	SHORT $LN11@CreateBack
$LN14@CreateBack:
; Line 261
	fld	DWORD PTR __real@43070000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN12@CreateBack
; Line 262
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fadd	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@404e000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 263
	jmp	SHORT $LN11@CreateBack
$LN12@CreateBack:
; Line 264
	fild	DWORD PTR _TicLength$[ebp]
	fld	DWORD PTR _angle$[ebp]
	fsubr	QWORD PTR __real@4062c00000000000
	fadd	QWORD PTR __real@4018000000000000
	fdiv	QWORD PTR __real@4050000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	add	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
$LN11@CreateBack:
; Line 268
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv1031[ebp], eax
	fild	DWORD PTR tv1031[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	add	eax, DWORD PTR _iXCenter$[ebp]
	mov	DWORD PTR _x1$[ebp], eax
; Line 269
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 5
	mov	DWORD PTR tv1038[ebp], eax
	fild	DWORD PTR tv1038[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	add	eax, DWORD PTR _iYCenter$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 285
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, DWORD PTR _iTemp$[ebp]
	mov	DWORD PTR tv1045[ebp], eax
	fild	DWORD PTR tv1045[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	add	eax, DWORD PTR _iXCenter$[ebp]
	mov	DWORD PTR _x2$[ebp], eax
; Line 286
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, DWORD PTR _iTemp$[ebp]
	mov	DWORD PTR tv1052[ebp], eax
	fild	DWORD PTR tv1052[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	add	eax, DWORD PTR _iYCenter$[ebp]
	mov	DWORD PTR _y2$[ebp], eax
; Line 289
	call	_GUI_GetPenSize
	movzx	eax, al
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 290
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 291
	mov	eax, DWORD PTR _iTemp$[ebp]
	add	eax, 2
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 292
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 293
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 294
	movzx	eax, BYTE PTR _iTemp$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 295
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 299
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _iMultiplier$[ebp]
	push	eax
	push	OFFSET $SG17161
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 300
	fld	DWORD PTR __real@42c80000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN10@CreateBack
; Line 301
	call	_GUI_GetFontDistY
	mov	ecx, DWORD PTR _y2$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y2$[ebp], ecx
	jmp	$LN5@CreateBack
$LN10@CreateBack:
; Line 302
	fld	DWORD PTR __real@42e60000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN8@CreateBack
; Line 303
	call	_GUI_GetFontDistY
	mov	DWORD PTR tv1083[ebp], eax
	fild	DWORD PTR tv1083[ebp]
	fmul	QWORD PTR __real@3ff2666666666666
	fisubr	DWORD PTR _y2$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _y2$[ebp], eax
	jmp	SHORT $LN5@CreateBack
$LN8@CreateBack:
; Line 304
	fld	DWORD PTR __real@42fa0000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN6@CreateBack
; Line 305
	call	_GUI_GetFontDistY
	mov	DWORD PTR tv1092[ebp], eax
	fild	DWORD PTR tv1092[ebp]
	fmul	QWORD PTR __real@3ff4000000000000
	fisubr	DWORD PTR _y2$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _y2$[ebp], eax
; Line 306
	jmp	SHORT $LN5@CreateBack
$LN6@CreateBack:
; Line 307
	call	_GUI_GetFontDistY
	mov	DWORD PTR tv1097[ebp], eax
	fild	DWORD PTR tv1097[ebp]
	fmul	QWORD PTR __real@3ff599999999999a
	fisubr	DWORD PTR _y2$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _y2$[ebp], eax
$LN5@CreateBack:
; Line 309
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _x2$[ebp]
	mov	DWORD PTR _x2$[ebp], eax
; Line 310
	fld	DWORD PTR __real@430c0000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@CreateBack
; Line 311
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, 12					; 0000000cH
	mov	DWORD PTR _x2$[ebp], eax
	jmp	SHORT $LN2@CreateBack
$LN4@CreateBack:
; Line 312
	fld	DWORD PTR __real@42f00000
	fcomp	DWORD PTR _angle$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@CreateBack
; Line 313
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, 7
	mov	DWORD PTR _x2$[ebp], eax
$LN2@CreateBack:
; Line 315
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 316
	mov	eax, DWORD PTR _y2$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	add	ecx, 1
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 317
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 318
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 322
	movzx	eax, BYTE PTR _iTemp$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 323
	jmp	$LN32@CreateBack
$LN31@CreateBack:
; Line 326
	fld	DWORD PTR __real@42ac0000
	fstp	DWORD PTR _angle$[ebp]
; Line 327
	fld	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 329
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 330
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 332
	mov	eax, DWORD PTR _iOuterArcRadius$[ebp]
	add	eax, 30					; 0000001eH
	mov	DWORD PTR _radius$[ebp], eax
; Line 338
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	lea	ecx, DWORD PTR [ecx+eax-2]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 339
	mov	eax, DWORD PTR _iInnerY$[ebp]
	sub	eax, 520				; 00000208H
	mov	DWORD PTR _y1$[ebp], eax
; Line 340
	mov	eax, DWORD PTR _x1$[ebp]
	mov	DWORD PTR _x2$[ebp], eax
; Line 341
	mov	eax, DWORD PTR _iOuterY$[ebp]
	sub	eax, 520				; 00000208H
	mov	DWORD PTR _y2$[ebp], eax
; Line 346
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 347
	movzx	eax, BYTE PTR _iTemp$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 348
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 351
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+76]
	test	ecx, ecx
	je	$LN1@CreateBack
; Line 353
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 354
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	lea	ecx, DWORD PTR [ecx+eax-50]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	add	ecx, 15					; 0000000fH
	mov	DWORD PTR _y1$[ebp], ecx
; Line 356
	push	5
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	add	ecx, 40					; 00000028H
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 358
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+104], ax
; Line 359
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+106], ax
; Line 360
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, 38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+108], ax
; Line 361
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 38					; 00000026H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+110], ax
; Line 362
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
$LN1@CreateBack:
; Line 364
	push	1
	call	_GUI_SetPenSize
	add	esp, 4
; Line 365
	call	_GUI_SelectLCD
; Line 366
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN50@CreateBack
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 588				; 0000024cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN50@CreateBack:
	DD	1
	DD	$LN49@CreateBack
$LN49@CreateBack:
	DD	-332					; fffffeb4H
	DD	10					; 0000000aH
	DD	$LN48@CreateBack
$LN48@CreateBack:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?CreateBackground@RPMSweep@@AAEXXZ ENDP			; RPMSweep::CreateBackground
_TEXT	ENDS
PUBLIC	_atanf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?atan@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?atan@@YAMM@Z PROC					; atan, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_atanf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?atan@@YAMM@Z ENDP					; atan
_TEXT	ENDS
EXTRN	_atan:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _atanf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_atanf	PROC						; COMDAT
; Line 404
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_atan
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_atanf	ENDP
_TEXT	ENDS
PUBLIC	_ceilf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ceil@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?ceil@@YAMM@Z PROC					; ceil, COMDAT
; Line 510
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_ceilf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ceil@@YAMM@Z ENDP					; ceil
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ceilf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_ceilf	PROC						; COMDAT
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_ceil
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ceilf	ENDP
_TEXT	ENDS
PUBLIC	_cosf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_cosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
EXTRN	_cos:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cosf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
PUBLIC	_sinf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT
; Line 538
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_sinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
EXTRN	_sin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sinf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
PUBLIC	?tan@@YAMM@Z					; tan
PUBLIC	__real@42700000
PUBLIC	?SetValue@RPMSweep@@QAEXM@Z			; RPMSweep::SetValue
;	COMDAT __real@42700000
; File c:\duii\duii\rpmsweep.cpp
CONST	SEGMENT
__real@42700000 DD 042700000r			; 60
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetValue@RPMSweep@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dValue$ = 8						; size = 4
?SetValue@RPMSweep@@QAEXM@Z PROC			; RPMSweep::SetValue, COMDAT
; _this$ = ecx
; Line 369
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dValue$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 372
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fmul	DWORD PTR [ecx+72]
	fsubr	DWORD PTR __real@42700000
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+116]
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+116]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+120]
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	push	ecx
	fld	DWORD PTR [eax+120]
	fstp	DWORD PTR [esp]
	call	?tan@@YAMM@Z				; tan
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+112]
; Line 377
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+88], ax
; Line 378
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+90], ax
; Line 379
	mov	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+92], ax
; Line 380
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+94], ax
; Line 381
	mov	eax, 23					; 00000017H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+96], ax
; Line 382
	mov	eax, -566				; fffffdcaH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+98], ax
; Line 383
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+84]
	mov	ecx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [ecx+112]
	call	__ftol2_sse
	imul	eax, -1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+100], ax
; Line 384
	mov	eax, -566				; fffffdcaH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+102], ax
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetValue@RPMSweep@@QAEXM@Z ENDP			; RPMSweep::SetValue
_TEXT	ENDS
PUBLIC	_tanf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?tan@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?tan@@YAMM@Z PROC					; tan, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 544
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_tanf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?tan@@YAMM@Z ENDP					; tan
_TEXT	ENDS
EXTRN	_tan:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _tanf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_tanf	PROC						; COMDAT
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_tan
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_tanf	ENDP
_TEXT	ENDS
PUBLIC	?GetPixelsFromValue@RPMSweep@@AAEHM@Z		; RPMSweep::GetPixelsFromValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetPixelsFromValue@RPMSweep@@AAEHM@Z
_TEXT	SEGMENT
tv79 = -232						; size = 4
_dValuePerPix$ = -32					; size = 4
_iPixels$ = -20						; size = 4
_this$ = -8						; size = 4
_dValue$ = 8						; size = 4
?GetPixelsFromValue@RPMSweep@@AAEHM@Z PROC		; RPMSweep::GetPixelsFromValue, COMDAT
; _this$ = ecx
; File c:\duii\duii\rpmsweep.cpp
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 392
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	sub	eax, DWORD PTR [ecx+4]
	cdq
	mov	ecx, 585				; 00000249H
	idiv	ecx
	mov	DWORD PTR tv79[ebp], eax
	fild	DWORD PTR tv79[ebp]
	fstp	DWORD PTR _dValuePerPix$[ebp]
; Line 393
	fld	DWORD PTR _dValue$[ebp]
	fdiv	DWORD PTR _dValuePerPix$[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _iPixels$[ebp], eax
; Line 395
	mov	eax, DWORD PTR _iPixels$[ebp]
; Line 396
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?GetPixelsFromValue@RPMSweep@@AAEHM@Z ENDP		; RPMSweep::GetPixelsFromValue
_TEXT	ENDS
PUBLIC	?SetGear@RPMSweep@@QAEXH@Z			; RPMSweep::SetGear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetGear@RPMSweep@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_iGear$ = 8						; size = 4
?SetGear@RPMSweep@@QAEXH@Z PROC				; RPMSweep::SetGear, COMDAT
; _this$ = ecx
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 401
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iGear$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 402
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+68], 0
	jle	SHORT $LN2@SetGear
; Line 403
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	push	OFFSET $SG17190
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 77					; 0000004dH
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 404
	jmp	SHORT $LN3@SetGear
$LN2@SetGear:
; Line 405
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+77], 0
$LN3@SetGear:
; Line 406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetGear@RPMSweep@@QAEXH@Z ENDP				; RPMSweep::SetGear
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	?sqrt@@YAMM@Z					; sqrt
PUBLIC	__real@40000000
PUBLIC	__real@bff0000000000000
PUBLIC	?GetXIntersect@RPMSweep@@AAEHMMMHHHHH@Z		; RPMSweep::GetXIntersect
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?GetXIntersect@RPMSweep@@AAEHMMMHHHHH@Z
_TEXT	SEGMENT
tv206 = -280						; size = 4
_dPart2$ = -80						; size = 4
_dPart1$ = -68						; size = 4
_iYIntersect$ = -56					; size = 4
_radians$ = -44						; size = 4
_Slope$ = -32						; size = 4
_x$ = -20						; size = 4
_this$ = -8						; size = 4
_iXCenter$ = 8						; size = 4
_iYCenter$ = 12						; size = 4
_Radius$ = 16						; size = 4
_x1$ = 20						; size = 4
_y1$ = 24						; size = 4
_x2$ = 28						; size = 4
_y2$ = 32						; size = 4
_angle$ = 36						; size = 4
?GetXIntersect@RPMSweep@@AAEHMMMHHHHH@Z PROC		; RPMSweep::GetXIntersect, COMDAT
; _this$ = ecx
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 412
	fild	DWORD PTR _y1$[ebp]
	fisub	DWORD PTR _y2$[ebp]
	fild	DWORD PTR _x1$[ebp]
	fisub	DWORD PTR _x2$[ebp]
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR _Slope$[ebp]
; Line 413
	fild	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 414
	fild	DWORD PTR _y2$[ebp]
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	fstp	DWORD PTR tv206[ebp]
	call	?tan@@YAMM@Z				; tan
	add	esp, 4
	fimul	DWORD PTR _x2$[ebp]
	fsubr	DWORD PTR tv206[ebp]
	fstp	DWORD PTR _iYIntersect$[ebp]
; Line 422
	fld	DWORD PTR _iYIntersect$[ebp]
	fmul	QWORD PTR __real@bff0000000000000
	fmul	DWORD PTR _iYIntersect$[ebp]
	fld	DWORD PTR _iYCenter$[ebp]
	fmul	QWORD PTR __real@4000000000000000
	fld	DWORD PTR __real@40000000
	fmul	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _iXCenter$[ebp]
	fsubp	ST(1), ST(0)
	fmul	DWORD PTR _iYIntersect$[ebp]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _iYCenter$[ebp]
	fmul	DWORD PTR _iYCenter$[ebp]
	fsubp	ST(1), ST(0)
	fld	DWORD PTR _Slope$[ebp]
	fmul	QWORD PTR __real@4000000000000000
	fmul	DWORD PTR _iXCenter$[ebp]
	fmul	DWORD PTR _iYCenter$[ebp]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _iXCenter$[ebp]
	fmul	DWORD PTR _iXCenter$[ebp]
	fsubp	ST(1), ST(0)
	fld	DWORD PTR _Radius$[ebp]
	fmul	DWORD PTR _Radius$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _Radius$[ebp]
	fmul	DWORD PTR _Radius$[ebp]
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _dPart1$[ebp]
; Line 423
	push	ecx
	fld	DWORD PTR _dPart1$[ebp]
	fstp	DWORD PTR [esp]
	call	?sqrt@@YAMM@Z				; sqrt
	add	esp, 4
	fld	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _iYIntersect$[ebp]
	faddp	ST(1), ST(0)
	fld	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _iYCenter$[ebp]
	fsubp	ST(1), ST(0)
	fsub	DWORD PTR _iXCenter$[ebp]
	fstp	DWORD PTR _dPart2$[ebp]
; Line 425
	fld	DWORD PTR _dPart2$[ebp]
	fld	DWORD PTR _Slope$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	fadd	QWORD PTR __real@3ff0000000000000
	fdivp	ST(1), ST(0)
	call	__ftol2_sse
	mov	DWORD PTR _x$[ebp], eax
; Line 426
	mov	eax, DWORD PTR _x$[ebp]
; Line 427
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	32					; 00000020H
?GetXIntersect@RPMSweep@@AAEHMMMHHHHH@Z ENDP		; RPMSweep::GetXIntersect
_TEXT	ENDS
PUBLIC	_sqrtf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sqrt@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sqrt@@YAMM@Z PROC					; sqrt, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 542
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_sqrtf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sqrt@@YAMM@Z ENDP					; sqrt
_TEXT	ENDS
EXTRN	_sqrt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sqrtf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_sqrtf	PROC						; COMDAT
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sqrtf	ENDP
_TEXT	ENDS
END
