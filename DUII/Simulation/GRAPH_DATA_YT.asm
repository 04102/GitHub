; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\GRAPH_DATA_YT.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GRAPH_DATA_YT_Create
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\graph_data_yt.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GRAPH_DATA_YT_Create
_TEXT	SEGMENT
_p$11473 = -56						; size = 4
_BufferSize$11470 = -44					; size = 4
_hData$11469 = -32					; size = 4
_pDataYtObj$11468 = -20					; size = 4
_hDataObj$ = -8						; size = 4
_Color$ = 8						; size = 4
_MaxNumItems$ = 12					; size = 4
_pItems$ = 16						; size = 4
_NumItems$ = 20						; size = 4
_GRAPH_DATA_YT_Create PROC				; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	push	40					; 00000028H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hDataObj$[ebp], eax
; Line 128
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	$LN2@GRAPH_DATA
; Line 132
	mov	eax, DWORD PTR _MaxNumItems$[ebp]
	shl	eax, 1
	mov	DWORD PTR _BufferSize$11470[ebp], eax
; Line 133
	mov	eax, DWORD PTR _BufferSize$11470[ebp]
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hData$11469[ebp], eax
; Line 134
	cmp	DWORD PTR _hData$11469[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
	cmp	DWORD PTR _pItems$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
	cmp	DWORD PTR _NumItems$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
; Line 136
	mov	eax, DWORD PTR _hData$11469[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$11473[ebp], eax
; Line 137
	mov	eax, DWORD PTR _NumItems$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pItems$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$11473[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 138
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _p$11473[ebp], 0
$LN1@GRAPH_DATA:
; Line 140
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$11468[ebp], eax
; Line 141
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	ecx, DWORD PTR _hData$11469[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 142
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 143
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	ecx, DWORD PTR _MaxNumItems$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 144
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	ecx, DWORD PTR _NumItems$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 145
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	DWORD PTR [eax], OFFSET __OnPaint
; Line 146
	mov	eax, DWORD PTR _pDataYtObj$11468[ebp]
	mov	DWORD PTR [eax+4], OFFSET __OnDelete
; Line 147
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$11468[ebp], 0
$LN2@GRAPH_DATA:
; Line 150
	mov	eax, DWORD PTR _hDataObj$[ebp]
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_Create ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawGraphEx:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_BorderB$11438 = -156					; size = 4
_BorderR$11437 = -144					; size = 4
_BorderT$11436 = -132					; size = 4
_BorderL$11435 = -120					; size = 4
_NumVisItems$11434 = -108				; size = 4
_NumItems$11433 = -96					; size = 4
_Rect$11432 = -84					; size = 8
_pDataYtObj$ = -68					; size = 4
_pObj$ = -56						; size = 4
_pData$ = -44						; size = 4
_Diff$ = -32						; size = 4
_yPos$ = -20						; size = 4
_xPos$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
__OnPaint PROC						; COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
; Line 58
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$[ebp], eax
; Line 59
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN5@OnPaint
; Line 62
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _BorderL$11435[ebp], ecx
; Line 65
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _BorderT$11436[ebp], ecx
; Line 66
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _BorderR$11437[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _BorderB$11438[ebp], ecx
; Line 68
	lea	eax, DWORD PTR _Rect$11432[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDataYtObj$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 69
	movsx	eax, WORD PTR _Rect$11432[ebp]
	add	eax, DWORD PTR _BorderL$11435[ebp]
	mov	WORD PTR _Rect$11432[ebp], ax
; Line 70
	movsx	eax, WORD PTR _Rect$11432[ebp+2]
	add	eax, DWORD PTR _BorderT$11436[ebp]
	mov	WORD PTR _Rect$11432[ebp+2], ax
; Line 71
	movsx	eax, WORD PTR _Rect$11432[ebp+4]
	sub	eax, DWORD PTR _BorderR$11437[ebp]
	mov	WORD PTR _Rect$11432[ebp+4], ax
; Line 72
	movsx	eax, WORD PTR _Rect$11432[ebp+6]
	sub	eax, DWORD PTR _BorderB$11438[ebp]
	mov	WORD PTR _Rect$11432[ebp+6], ax
; Line 73
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NumItems$11433[ebp], ecx
; Line 76
	movsx	eax, WORD PTR _Rect$11432[ebp+6]
	mov	ecx, DWORD PTR _pDataYtObj$[ebp]
	sub	eax, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	eax, DWORD PTR [edx+132]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 77
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _NumItems$11433[ebp]
	sub	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR _NumVisItems$11434[ebp], ecx
; Line 78
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	cmp	ecx, 1
	jne	SHORT $LN4@OnPaint
; Line 79
	movsx	eax, WORD PTR _Rect$11432[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 80
	jmp	SHORT $LN3@OnPaint
$LN4@OnPaint:
; Line 81
	movsx	eax, WORD PTR _Rect$11432[ebp+4]
	sub	eax, DWORD PTR _NumVisItems$11434[ebp]
	add	eax, 1
	mov	DWORD PTR _xPos$[ebp], eax
; Line 82
	movsx	eax, WORD PTR _Rect$11432[ebp]
	cmp	eax, DWORD PTR _xPos$[ebp]
	jle	SHORT $LN3@OnPaint
; Line 83
	movsx	eax, WORD PTR _Rect$11432[ebp]
	sub	eax, DWORD PTR _xPos$[ebp]
	mov	DWORD PTR _Diff$[ebp], eax
; Line 84
	mov	eax, DWORD PTR _xPos$[ebp]
	add	eax, DWORD PTR _Diff$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 85
	mov	eax, DWORD PTR _Diff$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData$[ebp], edx
; Line 86
	mov	eax, DWORD PTR _NumVisItems$11434[ebp]
	sub	eax, DWORD PTR _Diff$[ebp]
	mov	DWORD PTR _NumVisItems$11434[ebp], eax
$LN3@OnPaint:
; Line 89
	cmp	DWORD PTR _NumVisItems$11434[ebp], 0
	jle	SHORT $LN1@OnPaint
; Line 90
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 91
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	movzx	ecx, BYTE PTR [eax+37]
	push	ecx
	push	1
	push	-1
	mov	edx, DWORD PTR _yPos$[ebp]
	push	edx
	mov	eax, DWORD PTR _xPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumVisItems$11434[ebp]
	push	ecx
	mov	edx, DWORD PTR _pData$[ebp]
	push	edx
	call	_GUI_DrawGraphEx
	add	esp, 28					; 0000001cH
$LN1@OnPaint:
; Line 93
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 94
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$[ebp], 0
$LN5@OnPaint:
; Line 96
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$[ebp], 0
; Line 97
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@OnPaint:
	DD	1
	DD	$LN9@OnPaint
$LN9@OnPaint:
	DD	-84					; ffffffacH
	DD	8
	DD	$LN8@OnPaint
$LN8@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__OnPaint ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnDelete
_TEXT	SEGMENT
_pDataYtObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
__OnDelete PROC						; COMDAT
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 105
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN1@OnDelete
; Line 107
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 108
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN1@OnDelete:
; Line 110
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$[ebp], 0
; Line 111
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnDelete ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_Delete
_TEXT	SEGMENT
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_YT_Delete PROC				; COMDAT
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 159
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	__OnDelete
	add	esp, 4
; Line 161
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_Delete ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_AddValue
EXTRN	_GRAPH__AddValue:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_AddValue
_TEXT	SEGMENT
_pData$11489 = -20					; size = 4
_pDataYtObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_Value$ = 12						; size = 2
_GRAPH_DATA_YT_AddValue PROC				; COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 170
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$[ebp], eax
; Line 171
	cmp	DWORD PTR _pDataYtObj$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA@2
; Line 173
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$11489[ebp], eax
; Line 174
	push	2
	lea	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$11489[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDataYtObj$[ebp]
	push	edx
	call	_GRAPH__AddValue
	add	esp, 16					; 00000010H
; Line 175
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$11489[ebp], 0
$LN1@GRAPH_DATA@2:
; Line 177
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$[ebp], 0
; Line 179
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_AddValue ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_SetOffY
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_SetOffY
_TEXT	SEGMENT
_pDataObj$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_Off$ = 12						; size = 4
_GRAPH_DATA_YT_SetOffY PROC				; COMDAT
; Line 185
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 187
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN3@GRAPH_DATA@3
; Line 189
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _Off$[ebp]
	je	SHORT $LN1@GRAPH_DATA@3
; Line 191
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 192
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_DATA@3:
; Line 194
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$[ebp], 0
$LN3@GRAPH_DATA@3:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_SetOffY ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_SetAlign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_SetAlign
_TEXT	SEGMENT
_pDataYtObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_Align$ = 12						; size = 4
_GRAPH_DATA_YT_SetAlign PROC				; COMDAT
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 206
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$[ebp], eax
; Line 207
	cmp	DWORD PTR _pDataYtObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@4
; Line 208
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	movzx	ecx, BYTE PTR [eax+36]
	cmp	ecx, DWORD PTR _Align$[ebp]
	je	SHORT $LN2@GRAPH_DATA@4
; Line 209
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	cl, BYTE PTR _Align$[ebp]
	mov	BYTE PTR [eax+36], cl
; Line 210
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_DATA@4:
; Line 213
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$[ebp], 0
; Line 215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_SetAlign ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_MirrorX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_MirrorX
_TEXT	SEGMENT
_pDataYtObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_OnOff$ = 12						; size = 4
_GRAPH_DATA_YT_MirrorX PROC				; COMDAT
; Line 221
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataYtObj$[ebp], eax
; Line 225
	cmp	DWORD PTR _pDataYtObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@5
; Line 226
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	movzx	ecx, BYTE PTR [eax+37]
	cmp	ecx, DWORD PTR _OnOff$[ebp]
	je	SHORT $LN2@GRAPH_DATA@5
; Line 227
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	cl, BYTE PTR _OnOff$[ebp]
	mov	BYTE PTR [eax+37], cl
; Line 228
	mov	eax, DWORD PTR _pDataYtObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_DATA@5:
; Line 231
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataYtObj$[ebp], 0
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_MirrorX ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_YT_Clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_YT_Clear
_TEXT	SEGMENT
_pDataObj$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_YT_Clear PROC				; COMDAT
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 241
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@6
; Line 243
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$[ebp], eax
; Line 244
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 245
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 246
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$[ebp], 0
$LN2@GRAPH_DATA@6:
; Line 249
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_YT_Clear ENDP
_TEXT	ENDS
END
