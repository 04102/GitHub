; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\keyboard.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?TopKeysChar@@3PAPADA				; TopKeysChar
PUBLIC	?MidKeysChar@@3PAPADA				; MidKeysChar
PUBLIC	?LowKeysChar@@3PAPADA				; LowKeysChar
PUBLIC	?BottomKeysChar@@3PAPADA			; BottomKeysChar
PUBLIC	?NumKeysChar@@3PAPADA				; NumKeysChar
PUBLIC	?NumOneKeys@@3PAPADA				; NumOneKeys
PUBLIC	?NumTwoKeys@@3PAPADA				; NumTwoKeys
PUBLIC	?NumThreeKeys@@3PAPADA				; NumThreeKeys
PUBLIC	?NumFourKeys@@3PAPADA				; NumFourKeys
PUBLIC	?NumKeys@@3PAPADA				; NumKeys
_DATA	SEGMENT
?TopKeysChar@@3PAPADA DD FLAT:$SG16794			; TopKeysChar
	DD	FLAT:$SG16795
	DD	FLAT:$SG16796
	DD	FLAT:$SG16797
	DD	FLAT:$SG16798
	DD	FLAT:$SG16799
	DD	FLAT:$SG16800
	DD	FLAT:$SG16801
	DD	FLAT:$SG16802
	DD	FLAT:$SG16803
?MidKeysChar@@3PAPADA DD FLAT:$SG16805			; MidKeysChar
	DD	FLAT:$SG16806
	DD	FLAT:$SG16807
	DD	FLAT:$SG16808
	DD	FLAT:$SG16809
	DD	FLAT:$SG16810
	DD	FLAT:$SG16811
	DD	FLAT:$SG16812
	DD	FLAT:$SG16813
?LowKeysChar@@3PAPADA DD FLAT:$SG16815			; LowKeysChar
	DD	FLAT:$SG16816
	DD	FLAT:$SG16817
	DD	FLAT:$SG16818
	DD	FLAT:$SG16819
	DD	FLAT:$SG16820
	DD	FLAT:$SG16821
?BottomKeysChar@@3PAPADA DD FLAT:$SG16823		; BottomKeysChar
	DD	FLAT:$SG16824
	DD	FLAT:$SG16825
	DD	FLAT:$SG16826
?NumKeysChar@@3PAPADA DD FLAT:$SG16828			; NumKeysChar
	DD	FLAT:$SG16829
	DD	FLAT:$SG16830
	DD	FLAT:$SG16831
	DD	FLAT:$SG16832
	DD	FLAT:$SG16833
	DD	FLAT:$SG16834
	DD	FLAT:$SG16835
	DD	FLAT:$SG16836
?NumOneKeys@@3PAPADA DD FLAT:$SG16838			; NumOneKeys
	DD	FLAT:$SG16839
	DD	FLAT:$SG16840
?NumTwoKeys@@3PAPADA DD FLAT:$SG16842			; NumTwoKeys
	DD	FLAT:$SG16843
	DD	FLAT:$SG16844
	DD	FLAT:$SG16845
?NumThreeKeys@@3PAPADA DD FLAT:$SG16847			; NumThreeKeys
	DD	FLAT:$SG16848
	DD	FLAT:$SG16849
	DD	FLAT:$SG16850
	DD	FLAT:$SG16851
?NumFourKeys@@3PAPADA DD FLAT:$SG16853			; NumFourKeys
	DD	FLAT:$SG16854
	DD	FLAT:$SG16855
?NumKeys@@3PAPADA DD FLAT:$SG16857			; NumKeys
	DD	FLAT:$SG16858
	DD	FLAT:$SG16859
	DD	FLAT:$SG16860
	DD	FLAT:$SG16861
	DD	FLAT:$SG16862
	DD	FLAT:$SG16863
	DD	FLAT:$SG16864
	DD	FLAT:$SG16865
	DD	FLAT:$SG16866
	DD	FLAT:$SG16867
	DD	FLAT:$SG16868
_DATA	ENDS
CONST	SEGMENT
$SG16794 DB	'Q', 00H
	ORG $+2
$SG16795 DB	'W', 00H
	ORG $+2
$SG16796 DB	'E', 00H
	ORG $+2
$SG16797 DB	'R', 00H
	ORG $+2
$SG16798 DB	'T', 00H
	ORG $+2
$SG16799 DB	'Y', 00H
	ORG $+2
$SG16800 DB	'U', 00H
	ORG $+2
$SG16801 DB	'I', 00H
	ORG $+2
$SG16802 DB	'O', 00H
	ORG $+2
$SG16803 DB	'P', 00H
	ORG $+2
$SG16805 DB	'A', 00H
	ORG $+2
$SG16806 DB	'S', 00H
	ORG $+2
$SG16807 DB	'D', 00H
	ORG $+2
$SG16808 DB	'F', 00H
	ORG $+2
$SG16809 DB	'G', 00H
	ORG $+2
$SG16810 DB	'H', 00H
	ORG $+2
$SG16811 DB	'J', 00H
	ORG $+2
$SG16812 DB	'K', 00H
	ORG $+2
$SG16813 DB	'L', 00H
	ORG $+2
$SG16815 DB	'Z', 00H
	ORG $+2
$SG16816 DB	'X', 00H
	ORG $+2
$SG16817 DB	'C', 00H
	ORG $+2
$SG16818 DB	'V', 00H
	ORG $+2
$SG16819 DB	'B', 00H
	ORG $+2
$SG16820 DB	'N', 00H
	ORG $+2
$SG16821 DB	'M', 00H
	ORG $+2
$SG16823 DB	'-', 00H
	ORG $+2
$SG16824 DB	'Space', 00H
	ORG $+2
$SG16825 DB	'.', 00H
	ORG $+2
$SG16826 DB	'Bksp', 00H
	ORG $+3
$SG16828 DB	'7', 00H
	ORG $+2
$SG16829 DB	'8', 00H
	ORG $+2
$SG16830 DB	'9', 00H
	ORG $+2
$SG16831 DB	'4', 00H
	ORG $+2
$SG16832 DB	'5', 00H
	ORG $+2
$SG16833 DB	'6', 00H
	ORG $+2
$SG16834 DB	'1', 00H
	ORG $+2
$SG16835 DB	'2', 00H
	ORG $+2
$SG16836 DB	'3', 00H
	ORG $+2
$SG16838 DB	'7', 00H
	ORG $+2
$SG16839 DB	'8', 00H
	ORG $+2
$SG16840 DB	'9', 00H
	ORG $+2
$SG16842 DB	'4', 00H
	ORG $+2
$SG16843 DB	'5', 00H
	ORG $+2
$SG16844 DB	'6', 00H
	ORG $+2
$SG16845 DB	'-', 00H
	ORG $+2
$SG16847 DB	'0', 00H
	ORG $+2
$SG16848 DB	'1', 00H
	ORG $+2
$SG16849 DB	'2', 00H
	ORG $+2
$SG16850 DB	'3', 00H
	ORG $+2
$SG16851 DB	'.', 00H
	ORG $+2
$SG16853 DB	'0', 00H
	ORG $+2
$SG16854 DB	'.', 00H
	ORG $+2
$SG16855 DB	'<-', 00H
	ORG $+1
$SG16857 DB	'7', 00H
	ORG $+2
$SG16858 DB	'8', 00H
	ORG $+2
$SG16859 DB	'9', 00H
	ORG $+2
$SG16860 DB	'4', 00H
	ORG $+2
$SG16861 DB	'5', 00H
	ORG $+2
$SG16862 DB	'6', 00H
	ORG $+2
$SG16863 DB	'1', 00H
	ORG $+2
$SG16864 DB	'2', 00H
	ORG $+2
$SG16865 DB	'3', 00H
	ORG $+2
$SG16866 DB	'0', 00H
	ORG $+2
$SG16867 DB	'.', 00H
	ORG $+2
$SG16868 DB	'<-', 00H
	ORG $+1
$SG16900 DB	'0', 00H
	ORG $+2
$SG16963 DB	'.-123', 00H
	ORG $+2
$SG16965 DB	'ABC', 00H
$SG16967 DB	'Del', 00H
$SG16968 DB	'Cancel', 00H
	ORG $+1
$SG16969 DB	'Space', 00H
	ORG $+2
$SG16970 DB	'Save', 00H
CONST	ENDS
PUBLIC	?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z ; Keyboard::SetupKeyboard
PUBLIC	?_cbKeyboardCallback@@YAXPAUWM_MESSAGE@@@Z	; _cbKeyboardCallback
PUBLIC	??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z ; Keyboard::Keyboard
EXTRN	_EDIT_SetText:PROC
EXTRN	_strcmp:PROC
EXTRN	_EDIT_SetFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_EDIT_CreateEx:PROC
EXTRN	_WM_ShowWindow:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
EXTRN	_strcpy:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_kbId	DD	0aH DUP (?)
_kb	DD	0aH DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\keyboard.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z
_TEXT	SEGMENT
tv79 = -220						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_iWidth$ = 16						; size = 4
_iHeight$ = 20						; size = 4
_Option$ = 24						; size = 4
_DispText$ = 28						; size = 4
_cTitle$ = 32						; size = 4
_bLockMode$ = 36					; size = 1
_iMaxTextLength$ = 40					; size = 4
_iSource$ = 44						; size = 4
__hParent$ = 48						; size = 4
_canScroll$ = 52					; size = 1
??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z PROC	; Keyboard::Keyboard, COMDAT
; _this$ = ecx
; Line 51
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 56
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+200], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+204], ecx
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __hParent$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iWidth$[ebp]
	mov	DWORD PTR [eax+208], ecx
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iHeight$[ebp]
	mov	DWORD PTR [eax+212], ecx
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _bLockMode$[ebp]
	mov	BYTE PTR [eax+266], cl
; Line 63
	mov	eax, DWORD PTR _cTitle$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iSource$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _canScroll$[ebp]
	mov	BYTE PTR [eax+267], cl
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+192], 0
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+196], 0
; Line 69
	push	0
	push	OFFSET ?_cbKeyboardCallback@@YAXPAUWM_MESSAGE@@@Z ; _cbKeyboardCallback
	push	2
	mov	eax, DWORD PTR __hParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+212]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+208]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv79[ebp], eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR tv79[ebp]
	mov	DWORD PTR [ecx+16], edx
	cmp	DWORD PTR tv79[ebp], 0
	jg	SHORT $LN9@Keyboard
; Line 71
	call	_SystemError
; Line 72
	jmp	$LN10@Keyboard
$LN9@Keyboard:
; Line 75
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@Keyboard
$LN7@Keyboard:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@Keyboard:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN6@Keyboard
; Line 77
	mov	eax, DWORD PTR _i$[ebp]
	cmp	DWORD PTR _kb[eax*4], 0
	jne	SHORT $LN5@Keyboard
; Line 79
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR _kb[eax*4], ecx
; Line 80
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR _kbId[eax*4], edx
; Line 81
	jmp	SHORT $LN6@Keyboard
$LN5@Keyboard:
; Line 83
	jmp	SHORT $LN7@Keyboard
$LN6@Keyboard:
; Line 85
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_WM_ShowWindow
	add	esp, 4
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+200], ecx
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+204], ecx
; Line 90
	mov	eax, DWORD PTR _iMaxTextLength$[ebp]
	push	eax
	push	352					; 00000160H
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	38					; 00000026H
	push	353					; 00000161H
	push	43					; 0000002bH
	push	22					; 00000016H
	call	_EDIT_CreateEx
	add	esp, 36					; 00000024H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+176], eax
; Line 91
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_EDIT_SetFont
	add	esp, 8
; Line 94
	push	OFFSET $SG16900
	mov	eax, DWORD PTR _DispText$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@Keyboard
; Line 95
	mov	eax, DWORD PTR _DispText$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@Keyboard:
; Line 96
	mov	eax, DWORD PTR _DispText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	call	_EDIT_SetText
	add	esp, 8
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iMaxTextLength$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _DispText$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 100
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Keyboard
$LN2@Keyboard:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Keyboard:
	cmp	DWORD PTR _i$[ebp], 35			; 00000023H
	jge	SHORT $LN1@Keyboard
; Line 102
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], 0
; Line 103
	jmp	SHORT $LN2@Keyboard
$LN1@Keyboard:
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 106
	mov	eax, DWORD PTR _Option$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z ; Keyboard::SetupKeyboard
$LN10@Keyboard:
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	48					; 00000030H
??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z ENDP	; Keyboard::Keyboard
_TEXT	ENDS
PUBLIC	?SetBtnStd@Keyboard@@AAEXJ@Z			; Keyboard::SetBtnStd
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_BUTTON_SetBkColor:PROC
EXTRN	_bmDeleteKey:BYTE
EXTRN	_BUTTON_SetTextAlign:PROC
EXTRN	_GUI_FillRect:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_bmNumPadBlank:BYTE
EXTRN	_bmNotCapital:BYTE
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_bmCapital:BYTE
EXTRN	_BUTTON_SetText:PROC
EXTRN	_tolower:PROC
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmKeyboardBlank:BYTE
EXTRN	_BUTTON_SetDefaultFont:PROC
EXTRN	_BUTTON_SetDefaultTextColor:PROC
EXTRN	_BUTTON_SetDefaultBkColor:PROC
EXTRN	_WM_SelectWindow:PROC
EXTRN	_WM_DeleteWindow:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z
_TEXT	SEGMENT
tv87 = -292						; size = 4
_c$ = -92						; size = 2
_btn$ = -80						; size = 4
_Id$ = -68						; size = 4
_index$ = -56						; size = 4
_y$ = -44						; size = 4
_x$ = -32						; size = 4
_i$ = -20						; size = 4
_this$ = -8						; size = 4
_Option$ = 8						; size = 4
?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z PROC	; Keyboard::SetupKeyboard, COMDAT
; _this$ = ecx
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN39@SetupKeybo
; Line 124
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN38@SetupKeybo
$LN37@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN38@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 35			; 00000023H
	jge	SHORT $LN39@SetupKeybo
; Line 126
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+32], 0
	je	SHORT $LN35@SetupKeybo
; Line 128
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+32]
	push	edx
	call	_WM_DeleteWindow
	add	esp, 4
; Line 129
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], 0
$LN35@SetupKeybo:
; Line 131
	jmp	SHORT $LN37@SetupKeybo
$LN39@SetupKeybo:
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_WM_SelectWindow
	add	esp, 4
; Line 136
	push	0
	push	16777215				; 00ffffffH
	call	_BUTTON_SetDefaultBkColor
	add	esp, 8
; Line 137
	push	0
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 138
	push	OFFSET _GUI_Font24B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 140
	mov	eax, DWORD PTR _Option$[ebp]
	mov	DWORD PTR tv87[ebp], eax
	cmp	DWORD PTR tv87[ebp], 1
	je	SHORT $LN32@SetupKeybo
	cmp	DWORD PTR tv87[ebp], 2
	je	$LN14@SetupKeybo
	jmp	$LN33@SetupKeybo
$LN32@SetupKeybo:
; Line 144
	push	0
	push	0
	push	OFFSET _bmKeyboardBlank
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 145
	mov	DWORD PTR _y$[ebp], 94			; 0000005eH
; Line 146
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN31@SetupKeybo
$LN30@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN31@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	$LN29@SetupKeybo
; Line 148
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 22					; 00000016H
	mov	DWORD PTR _x$[ebp], eax
; Line 149
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TopKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 150
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN28@SetupKeybo
; Line 154
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TopKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	_tolower
	add	esp, 4
	mov	BYTE PTR _c$[ebp], al
; Line 155
	mov	BYTE PTR _c$[ebp+1], 0
; Line 156
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 158
	jmp	SHORT $LN27@SetupKeybo
$LN28@SetupKeybo:
; Line 159
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?TopKeysChar@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
$LN27@SetupKeybo:
; Line 161
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 162
	jmp	$LN30@SetupKeybo
$LN29@SetupKeybo:
; Line 164
	mov	DWORD PTR _y$[ebp], 139			; 0000008bH
; Line 165
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN26@SetupKeybo
$LN25@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN26@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 9
	jge	$LN24@SetupKeybo
; Line 167
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _index$[ebp], eax
; Line 168
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 42					; 0000002aH
	mov	DWORD PTR _x$[ebp], eax
; Line 169
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?MidKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 170
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 172
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN23@SetupKeybo
; Line 174
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?MidKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	_tolower
	add	esp, 4
	mov	BYTE PTR _c$[ebp], al
; Line 175
	mov	BYTE PTR _c$[ebp+1], 0
; Line 176
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 178
	jmp	SHORT $LN22@SetupKeybo
$LN23@SetupKeybo:
; Line 179
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?MidKeysChar@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
$LN22@SetupKeybo:
; Line 182
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 183
	jmp	$LN25@SetupKeybo
$LN24@SetupKeybo:
; Line 185
	mov	DWORD PTR _y$[ebp], 185			; 000000b9H
; Line 186
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN21@SetupKeybo
$LN20@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN21@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 7
	jge	$LN19@SetupKeybo
; Line 188
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 19					; 00000013H
	mov	DWORD PTR _index$[ebp], eax
; Line 189
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 64					; 00000040H
	mov	DWORD PTR _x$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?LowKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 191
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 193
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN18@SetupKeybo
; Line 195
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?LowKeysChar@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	call	_tolower
	add	esp, 4
	mov	BYTE PTR _c$[ebp], al
; Line 196
	mov	BYTE PTR _c$[ebp+1], 0
; Line 197
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _btn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 199
	jmp	SHORT $LN17@SetupKeybo
$LN18@SetupKeybo:
; Line 200
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?LowKeysChar@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
$LN17@SetupKeybo:
; Line 203
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 204
	jmp	$LN20@SetupKeybo
$LN19@SetupKeybo:
; Line 207
	mov	DWORD PTR _x$[ebp], 19			; 00000013H
; Line 208
	mov	DWORD PTR _Id$[ebp], 2052		; 00000804H
; Line 209
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	42					; 0000002aH
	push	43					; 0000002bH
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 4
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 3
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 1
	jne	SHORT $LN16@SetupKeybo
; Line 213
	push	OFFSET _bmCapital
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 215
	jmp	SHORT $LN15@SetupKeybo
$LN16@SetupKeybo:
; Line 217
	push	OFFSET _bmNotCapital
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN15@SetupKeybo:
; Line 220
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 1
	mov	DWORD PTR _index$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 40					; 00000028H
	mov	DWORD PTR _y$[ebp], eax
; Line 223
	mov	DWORD PTR _x$[ebp], 5
; Line 226
	mov	DWORD PTR _index$[ebp], 26		; 0000001aH
; Line 227
	jmp	$LN33@SetupKeybo
$LN14@SetupKeybo:
; Line 229
	push	0
	push	0
	push	OFFSET _bmNumPadBlank
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 231
	mov	DWORD PTR _y$[ebp], 94			; 0000005eH
; Line 232
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@SetupKeybo
$LN12@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 3
	jge	SHORT $LN11@SetupKeybo
; Line 234
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 179				; 000000b3H
	mov	DWORD PTR _x$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumOneKeys@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 236
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 238
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumOneKeys@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
; Line 239
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 241
	jmp	SHORT $LN12@SetupKeybo
$LN11@SetupKeybo:
; Line 242
	mov	DWORD PTR _y$[ebp], 139			; 0000008bH
; Line 243
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@SetupKeybo
$LN9@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN8@SetupKeybo
; Line 245
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 3
	mov	DWORD PTR _index$[ebp], eax
; Line 246
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 179				; 000000b3H
	mov	DWORD PTR _x$[ebp], eax
; Line 247
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumTwoKeys@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 248
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 250
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumTwoKeys@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
; Line 251
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 252
	jmp	$LN9@SetupKeybo
$LN8@SetupKeybo:
; Line 253
	mov	DWORD PTR _y$[ebp], 185			; 000000b9H
; Line 254
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@SetupKeybo
$LN6@SetupKeybo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@SetupKeybo:
	cmp	DWORD PTR _i$[ebp], 5
	jge	SHORT $LN33@SetupKeybo
; Line 256
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 7
	mov	DWORD PTR _index$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 45					; 0000002dH
	add	eax, 134				; 00000086H
	mov	DWORD PTR _x$[ebp], eax
; Line 258
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumThreeKeys@@3PAPADA[eax*4]
	movzx	edx, BYTE PTR [ecx]
	add	edx, 2048				; 00000800H
	mov	DWORD PTR _Id$[ebp], edx
; Line 259
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	push	35					; 00000023H
	push	35					; 00000023H
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 261
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR ?NumThreeKeys@@3PAPADA[eax*4]
	push	ecx
	mov	edx, DWORD PTR _btn$[ebp]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
; Line 262
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _btn$[ebp]
	mov	DWORD PTR [ecx+eax*4+32], edx
; Line 264
	jmp	$LN6@SetupKeybo
$LN33@SetupKeybo:
; Line 270
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+266]
	test	ecx, ecx
	jne	SHORT $LN4@SetupKeybo
; Line 272
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	35					; 00000023H
	push	80					; 00000050H
	push	185					; 000000b9H
	push	382					; 0000017eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+172], eax
; Line 273
	cmp	DWORD PTR _Option$[ebp], 1
	jne	SHORT $LN3@SetupKeybo
; Line 274
	push	OFFSET $SG16963
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 275
	jmp	SHORT $LN2@SetupKeybo
$LN3@SetupKeybo:
; Line 276
	push	OFFSET $SG16965
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
$LN2@SetupKeybo:
; Line 278
	jmp	SHORT $LN1@SetupKeybo
$LN4@SetupKeybo:
; Line 281
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 282
	push	225					; 000000e1H
	push	470					; 000001d6H
	push	180					; 000000b4H
	push	352					; 00000160H
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
$LN1@SetupKeybo:
; Line 285
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	35					; 00000023H
	push	80					; 00000050H
	push	42					; 0000002aH
	push	380					; 0000017cH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 286
	push	OFFSET $SG16967
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 287
	push	5
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetTextAlign
	add	esp, 8
; Line 288
	push	OFFSET _bmDeleteKey
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 289
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBtnStd@Keyboard@@AAEXJ@Z		; Keyboard::SetBtnStd
; Line 291
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	36					; 00000024H
	push	106					; 0000006aH
	push	229					; 000000e5H
	push	17					; 00000011H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 292
	push	OFFSET $SG16968
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 293
	push	65535					; 0000ffffH
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 294
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBtnStd@Keyboard@@AAEXJ@Z		; Keyboard::SetBtnStd
; Line 296
	push	2080					; 00000820H
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	36					; 00000024H
	push	215					; 000000d7H
	push	229					; 000000e5H
	push	134					; 00000086H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 297
	push	OFFSET $SG16969
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 298
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBtnStd@Keyboard@@AAEXJ@Z		; Keyboard::SetBtnStd
; Line 300
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	push	36					; 00000024H
	push	105					; 00000069H
	push	229					; 000000e5H
	push	359					; 00000167H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _btn$[ebp], eax
; Line 301
	push	OFFSET $SG16970
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 302
	push	65280					; 0000ff00H
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 303
	push	255					; 000000ffH
	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 304
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetBtnStd@Keyboard@@AAEXJ@Z		; Keyboard::SetBtnStd
; Line 306
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Option$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 309
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 310
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+208]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [ecx+200]
	add	esi, eax
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 216				; 000000d8H
	push	edx
	call	_GUI_GetStringDistX
	add	esp, 4
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	esi, eax
	mov	DWORD PTR _x$[ebp], esi
; Line 311
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 312
	push	5
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 216				; 000000d8H
	push	ecx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 313
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 314
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN44@SetupKeybo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN44@SetupKeybo:
	DD	1
	DD	$LN43@SetupKeybo
$LN43@SetupKeybo:
	DD	-92					; ffffffa4H
	DD	2
	DD	$LN42@SetupKeybo
$LN42@SetupKeybo:
	DB	99					; 00000063H
	DB	0
?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z ENDP	; Keyboard::SetupKeyboard
_TEXT	ENDS
EXTRN	_WM_BringToTop:PROC
EXTRN	_BUTTON_SetSkinClassic:PROC
EXTRN	_BUTTON_SetFont:PROC
EXTRN	_GUI_Font32B_ASCII:BYTE
EXTRN	_BUTTON_SetTextColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetBtnStd@Keyboard@@AAEXJ@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_btn$ = 8						; size = 4
?SetBtnStd@Keyboard@@AAEXJ@Z PROC			; Keyboard::SetBtnStd, COMDAT
; _this$ = ecx
; Line 318
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 319
	push	0
	push	0
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 320
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 321
	push	OFFSET _GUI_Font32B_ASCII
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 322
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_BUTTON_SetSkinClassic
	add	esp, 4
; Line 323
	mov	eax, DWORD PTR _btn$[ebp]
	push	eax
	call	_WM_BringToTop
	add	esp, 4
; Line 324
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetBtnStd@Keyboard@@AAEXJ@Z ENDP			; Keyboard::SetBtnStd
_TEXT	ENDS
PUBLIC	?ChangeKeyboardCase@Keyboard@@QAEX_N@Z		; Keyboard::ChangeKeyboardCase
EXTRN	_toupper:PROC
EXTRN	_BUTTON_GetText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ChangeKeyboardCase@Keyboard@@QAEX_N@Z
_TEXT	SEGMENT
_i$ = -32						; size = 4
_c$ = -20						; size = 2
_this$ = -8						; size = 4
_Capital$ = 8						; size = 1
?ChangeKeyboardCase@Keyboard@@QAEX_N@Z PROC		; Keyboard::ChangeKeyboardCase, COMDAT
; _this$ = ecx
; Line 327
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 331
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN9@ChangeKeyb
; Line 333
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@ChangeKeyb
$LN6@ChangeKeyb:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@ChangeKeyb:
	cmp	DWORD PTR _i$[ebp], 35			; 00000023H
	jge	SHORT $LN9@ChangeKeyb
; Line 335
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*4+32], 0
	je	SHORT $LN4@ChangeKeyb
; Line 337
	push	2
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+32]
	push	eax
	call	_BUTTON_GetText
	add	esp, 12					; 0000000cH
; Line 338
	movzx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	je	SHORT $LN4@ChangeKeyb
; Line 340
	movzx	eax, BYTE PTR _Capital$[ebp]
	cmp	eax, 1
	jne	SHORT $LN2@ChangeKeyb
; Line 341
	movzx	eax, BYTE PTR _c$[ebp]
	push	eax
	call	_toupper
	add	esp, 4
	mov	BYTE PTR _c$[ebp], al
; Line 342
	jmp	SHORT $LN1@ChangeKeyb
$LN2@ChangeKeyb:
; Line 343
	movzx	eax, BYTE PTR _c$[ebp]
	push	eax
	call	_tolower
	add	esp, 4
	mov	BYTE PTR _c$[ebp], al
$LN1@ChangeKeyb:
; Line 344
	lea	eax, DWORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+ecx*4+32]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
$LN4@ChangeKeyb:
; Line 347
	jmp	$LN6@ChangeKeyb
$LN9@ChangeKeyb:
; Line 350
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@ChangeKeyb
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN13@ChangeKeyb:
	DD	1
	DD	$LN12@ChangeKeyb
$LN12@ChangeKeyb:
	DD	-20					; ffffffecH
	DD	2
	DD	$LN11@ChangeKeyb
$LN11@ChangeKeyb:
	DB	99					; 00000063H
	DB	0
?ChangeKeyboardCase@Keyboard@@QAEX_N@Z ENDP		; Keyboard::ChangeKeyboardCase
_TEXT	ENDS
PUBLIC	?GetValue@Keyboard@@QAEXPADH@Z			; Keyboard::GetValue
EXTRN	_EDIT_GetText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetValue@Keyboard@@QAEXPADH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_str$ = 8						; size = 4
_max$ = 12						; size = 4
?GetValue@Keyboard@@QAEXPADH@Z PROC			; Keyboard::GetValue, COMDAT
; _this$ = ecx
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 354
	mov	eax, DWORD PTR _max$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _str$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+176]
	push	eax
	call	_EDIT_GetText
	add	esp, 12					; 0000000cH
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?GetValue@Keyboard@@QAEXPADH@Z ENDP			; Keyboard::GetValue
_TEXT	ENDS
PUBLIC	??1Keyboard@@QAE@XZ				; Keyboard::~Keyboard
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Keyboard@@QAE@XZ
_TEXT	SEGMENT
_i$16997 = -20						; size = 4
_this$ = -8						; size = 4
??1Keyboard@@QAE@XZ PROC				; Keyboard::~Keyboard, COMDAT
; _this$ = ecx
; Line 359
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 362
	mov	DWORD PTR _i$16997[ebp], 0
	jmp	SHORT $LN4@Keyboard@2
$LN3@Keyboard@2:
	mov	eax, DWORD PTR _i$16997[ebp]
	add	eax, 1
	mov	DWORD PTR _i$16997[ebp], eax
$LN4@Keyboard@2:
	cmp	DWORD PTR _i$16997[ebp], 10		; 0000000aH
	jge	SHORT $LN5@Keyboard@2
; Line 364
	mov	eax, DWORD PTR _i$16997[ebp]
	mov	ecx, DWORD PTR _kb[eax*4]
	cmp	ecx, DWORD PTR _this$[ebp]
	jne	SHORT $LN1@Keyboard@2
; Line 366
	mov	eax, DWORD PTR _i$16997[ebp]
	mov	DWORD PTR _kb[eax*4], 0
; Line 367
	mov	eax, DWORD PTR _i$16997[ebp]
	mov	DWORD PTR _kbId[eax*4], 0
; Line 369
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_WM_DeleteWindow
	add	esp, 4
; Line 371
	jmp	SHORT $LN5@Keyboard@2
$LN1@Keyboard@2:
; Line 373
	jmp	SHORT $LN3@Keyboard@2
$LN5@Keyboard@2:
; Line 374
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Keyboard@@QAE@XZ ENDP				; Keyboard::~Keyboard
_TEXT	ENDS
PUBLIC	?SaveData@@YAXHPAVKeyboard@@@Z			; SaveData
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WM_CreateTimer:PROC
EXTRN	_WM_SendMessage:PROC
EXTRN	_GaugeScreensIgnoreNextKeyRelease:PROC
EXTRN	_TouchPosIsBackKey:PROC
EXTRN	_GUI_GetOrg:PROC
EXTRN	_WM_DeleteTimer:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_WM_RestartTimer:PROC
EXTRN	_EDIT_AddKey:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?_cbKeyboardCallback@@YAXPAUWM_MESSAGE@@@Z
_TEXT	SEGMENT
tv137 = -304						; size = 4
tv90 = -304						; size = 4
tv74 = -304						; size = 4
_c$17049 = -101						; size = 1
_y$17031 = -92						; size = 4
_x$17030 = -80						; size = 4
_key$ = -68						; size = 4
_msg$ = -56						; size = 16
_i$ = -32						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
?_cbKeyboardCallback@@YAXPAUWM_MESSAGE@@@Z PROC		; _cbKeyboardCallback, COMDAT
; Line 376
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 380
	mov	DWORD PTR _key$[ebp], 0
; Line 387
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN34@cbKeyboard
$LN33@cbKeyboard:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN34@cbKeyboard:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN32@cbKeyboard
; Line 389
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR _kbId[ecx*4]
	jne	SHORT $LN31@cbKeyboard
; Line 391
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _kb[eax*4]
	mov	DWORD PTR _key$[ebp], ecx
; Line 392
	jmp	SHORT $LN32@cbKeyboard
$LN31@cbKeyboard:
; Line 394
	jmp	SHORT $LN33@cbKeyboard
$LN32@cbKeyboard:
; Line 395
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	je	SHORT $LN29@cbKeyboard
	cmp	DWORD PTR _key$[ebp], 0
	jne	SHORT $LN30@cbKeyboard
$LN29@cbKeyboard:
; Line 397
	jmp	$LN35@cbKeyboard
$LN30@cbKeyboard:
; Line 400
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 38			; 00000026H
	je	SHORT $LN24@cbKeyboard
	cmp	DWORD PTR tv74[ebp], 275		; 00000113H
	je	SHORT $LN26@cbKeyboard
	jmp	$LN1@cbKeyboard
$LN26@cbKeyboard:
; Line 403
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+196]
	jne	SHORT $LN25@cbKeyboard
; Line 405
	push	8
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_EDIT_AddKey
	add	esp, 8
; Line 406
	push	350					; 0000015eH
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	call	_WM_RestartTimer
	add	esp, 8
$LN25@cbKeyboard:
; Line 408
	jmp	$LN35@cbKeyboard
$LN24@cbKeyboard:
; Line 442
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 443
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 445
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	cmp	DWORD PTR tv90[ebp], 1
	je	$LN17@cbKeyboard
	cmp	DWORD PTR tv90[ebp], 1
	jle	$LN22@cbKeyboard
	cmp	DWORD PTR tv90[ebp], 3
	jle	SHORT $LN21@cbKeyboard
	jmp	$LN22@cbKeyboard
$LN21@cbKeyboard:
; Line 449
	cmp	DWORD PTR _Id$[ebp], 2056		; 00000808H
	jne	SHORT $LN20@cbKeyboard
; Line 451
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+196]
	push	ecx
	call	_WM_DeleteTimer
	add	esp, 4
; Line 452
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax+196], 0
; Line 454
	jmp	SHORT $LN19@cbKeyboard
$LN20@cbKeyboard:
; Line 460
	lea	eax, DWORD PTR _y$17031[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$17030[ebp]
	push	ecx
	call	_GUI_GetOrg
	add	esp, 8
; Line 461
	cmp	DWORD PTR _y$17031[ebp], 272		; 00000110H
	je	SHORT $LN19@cbKeyboard
	cmp	DWORD PTR _y$17031[ebp], 0
	je	SHORT $LN19@cbKeyboard
; Line 463
	push	8
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_EDIT_AddKey
	add	esp, 8
; Line 464
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	push	26					; 0000001aH
	call	?SaveData@@YAXHPAVKeyboard@@@Z		; SaveData
	add	esp, 8
$LN19@cbKeyboard:
; Line 467
	jmp	$LN22@cbKeyboard
$LN17@cbKeyboard:
; Line 470
	mov	eax, DWORD PTR _Id$[ebp]
	sub	eax, 2048				; 00000800H
	mov	DWORD PTR tv137[ebp], eax
	mov	ecx, DWORD PTR tv137[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv137[ebp], ecx
	cmp	DWORD PTR tv137[ebp], 3
	ja	$LN5@cbKeyboard
	mov	edx, DWORD PTR tv137[ebp]
	jmp	DWORD PTR $LN42@cbKeyboard[edx*4]
$LN14@cbKeyboard:
; Line 473
	mov	eax, DWORD PTR _key$[ebp]
	cmp	DWORD PTR [eax], 1
	jne	SHORT $LN13@cbKeyboard
; Line 474
	push	2
	mov	ecx, DWORD PTR _key$[ebp]
	call	?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z ; Keyboard::SetupKeyboard
; Line 475
	jmp	SHORT $LN12@cbKeyboard
$LN13@cbKeyboard:
; Line 476
	push	1
	mov	ecx, DWORD PTR _key$[ebp]
	call	?SetupKeyboard@Keyboard@@QAEXW4Keyboard_Type@@@Z ; Keyboard::SetupKeyboard
$LN12@cbKeyboard:
; Line 477
	jmp	$LN22@cbKeyboard
$LN11@cbKeyboard:
; Line 480
	mov	eax, DWORD PTR _key$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN10@cbKeyboard
; Line 482
	push	OFFSET _bmCapital
	push	0
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 483
	mov	eax, DWORD PTR _key$[ebp]
	mov	BYTE PTR [eax+8], 1
; Line 485
	jmp	SHORT $LN9@cbKeyboard
$LN10@cbKeyboard:
; Line 487
	push	OFFSET _bmNotCapital
	push	0
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 488
	mov	eax, DWORD PTR _key$[ebp]
	mov	BYTE PTR [eax+8], 0
$LN9@cbKeyboard:
; Line 490
	mov	eax, DWORD PTR _key$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	push	ecx
	mov	ecx, DWORD PTR _key$[ebp]
	call	?ChangeKeyboardCase@Keyboard@@QAEX_N@Z	; Keyboard::ChangeKeyboardCase
; Line 491
	jmp	$LN22@cbKeyboard
$LN8@cbKeyboard:
; Line 494
	mov	DWORD PTR _msg$[ebp], 27		; 0000001bH
; Line 495
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _msg$[ebp+4], ecx
; Line 496
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _msg$[ebp+8], ecx
; Line 497
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 498
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _msg$[ebp+12], ecx
; Line 499
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _msg$[ebp+12], eax
; Line 500
	call	_TouchPosIsBackKey
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN7@cbKeyboard
; Line 501
	call	_GaugeScreensIgnoreNextKeyRelease
$LN7@cbKeyboard:
; Line 502
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_WM_SendMessage
	add	esp, 8
; Line 503
	jmp	$LN22@cbKeyboard
$LN6@cbKeyboard:
; Line 506
	mov	eax, DWORD PTR _key$[ebp]
	push	eax
	push	28					; 0000001cH
	call	?SaveData@@YAXHPAVKeyboard@@@Z		; SaveData
	add	esp, 8
; Line 507
	jmp	SHORT $LN22@cbKeyboard
$LN5@cbKeyboard:
; Line 512
	cmp	DWORD PTR _Id$[ebp], 2048		; 00000800H
	jge	SHORT $LN4@cbKeyboard
; Line 513
	jmp	SHORT $LN22@cbKeyboard
$LN4@cbKeyboard:
; Line 515
	cmp	DWORD PTR _Id$[ebp], 2056		; 00000808H
	jne	SHORT $LN3@cbKeyboard
; Line 516
	push	0
	push	350					; 0000015eH
	push	0
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _key$[ebp]
	mov	DWORD PTR [edx+196], eax
$LN3@cbKeyboard:
; Line 518
	mov	eax, DWORD PTR _Id$[ebp]
	sub	eax, 2048				; 00000800H
	mov	BYTE PTR _c$17049[ebp], al
; Line 519
	mov	eax, DWORD PTR _key$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN2@cbKeyboard
; Line 520
	movzx	eax, BYTE PTR _c$17049[ebp]
	push	eax
	call	_tolower
	add	esp, 4
	mov	BYTE PTR _c$17049[ebp], al
$LN2@cbKeyboard:
; Line 521
	movzx	eax, BYTE PTR _c$17049[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx+176]
	push	edx
	call	_EDIT_AddKey
	add	esp, 8
$LN22@cbKeyboard:
; Line 526
	jmp	SHORT $LN35@cbKeyboard
$LN1@cbKeyboard:
; Line 529
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN35@cbKeyboard:
; Line 531
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN41@cbKeyboard
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN41@cbKeyboard:
	DD	3
	DD	$LN40@cbKeyboard
$LN40@cbKeyboard:
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN37@cbKeyboard
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN38@cbKeyboard
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN39@cbKeyboard
$LN39@cbKeyboard:
	DB	121					; 00000079H
	DB	0
$LN38@cbKeyboard:
	DB	120					; 00000078H
	DB	0
$LN37@cbKeyboard:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN42@cbKeyboard:
	DD	$LN14@cbKeyboard
	DD	$LN8@cbKeyboard
	DD	$LN11@cbKeyboard
	DD	$LN6@cbKeyboard
?_cbKeyboardCallback@@YAXPAUWM_MESSAGE@@@Z ENDP		; _cbKeyboardCallback
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SaveData@@YAXHPAVKeyboard@@@Z
_TEXT	SEGMENT
_msg$ = -20						; size = 16
_message$ = 8						; size = 4
_key$ = 12						; size = 4
?SaveData@@YAXHPAVKeyboard@@@Z PROC			; SaveData, COMDAT
; Line 534
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 537
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR _msg$[ebp], eax
; Line 538
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _key$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	call	?GetValue@Keyboard@@QAEXPADH@Z		; Keyboard::GetValue
; Line 539
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _msg$[ebp+4], ecx
; Line 540
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _msg$[ebp+8], ecx
; Line 541
	mov	eax, DWORD PTR _key$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _msg$[ebp+12], ecx
; Line 542
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR [eax+4], 1
; Line 543
	mov	eax, DWORD PTR _key$[ebp]
	mov	DWORD PTR _msg$[ebp+12], eax
; Line 544
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _key$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_WM_SendMessage
	add	esp, 8
; Line 545
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SaveData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@SaveData:
	DD	1
	DD	$LN4@SaveData
$LN4@SaveData:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@SaveData
$LN3@SaveData:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
?SaveData@@YAXHPAVKeyboard@@@Z ENDP			; SaveData
_TEXT	ENDS
END
