; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\DROPDOWN_SkinFlex.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
__apProps DD	FLAT:__PropsOpen
	DD	FLAT:__PropsFocussed
	DD	FLAT:__PropsEnabled
	DD	FLAT:__PropsDisabled
CONST	ENDS
_DATA	SEGMENT
__PropsOpen DD	08b622cH
	DD	0bab09eH
	DD	0efd198H
	DD	0fcf4e5H
	DD	0f6e5c4H
	DD	0efd198H
	DD	0dbb368H
	DD	0404040H
	DD	00H
	DD	08b622cH
	DD	02H
__PropsFocussed DD 0b17f3cH
	DD	0fbd846H
	DD	0dfdfdfH
	DD	0f3f3f3H
	DD	0ecececH
	DD	0dfdfdfH
	DD	0d0d0d0H
	DD	0404040H
	DD	00H
	DD	0b17f3cH
	DD	02H
__PropsEnabled DD 0707070H
	DD	0fcfcfcH
	DD	0dfdfdfH
	DD	0f3f3f3H
	DD	0ecececH
	DD	0dfdfdfH
	DD	0d0d0d0H
	DD	0404040H
	DD	00H
	DD	0707070H
	DD	02H
__PropsDisabled DD 0b5b2adH
	DD	0fcfcfcH
	DD	0f4f4f4H
	DD	0f4f4f4H
	DD	0f4f4f4H
	DD	0f4f4f4H
	DD	0f4f4f4H
	DD	0404040H
	DD	00H
	DD	0b5b2adH
	DD	02H
_DATA	ENDS
PUBLIC	_DROPDOWN_DrawSkinFlex
EXTRN	_WM_SetHasTrans:PROC
EXTRN	_WM__IsEnabled:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_DROPDOWN_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\dropdown_skinflex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _DROPDOWN_DrawSkinFlex
_TEXT	SEGMENT
tv82 = -292						; size = 4
_Index$ = -92						; size = 4
_IsEnabled$ = -80					; size = 4
_IsFocussed$ = -68					; size = 4
_IsOpen$ = -56						; size = 4
_State$ = -44						; size = 4
_hListWin$ = -32					; size = 4
_pProps$ = -20						; size = 4
_pObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_DROPDOWN_DrawSkinFlex PROC				; COMDAT
; Line 225
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 234
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	mov	DWORD PTR _State$[ebp], ecx
; Line 236
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _hListWin$[ebp], ecx
; Line 237
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 241
	xor	eax, eax
	cmp	DWORD PTR _hListWin$[ebp], 0
	setne	al
	mov	DWORD PTR _IsOpen$[ebp], eax
; Line 242
	mov	eax, DWORD PTR _State$[ebp]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _IsFocussed$[ebp], eax
; Line 243
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_WM__IsEnabled
	add	esp, 4
	mov	DWORD PTR _IsEnabled$[ebp], eax
; Line 247
	cmp	DWORD PTR _IsOpen$[ebp], 0
	je	SHORT $LN12@DROPDOWN_D
; Line 248
	mov	DWORD PTR _Index$[ebp], 0
	jmp	SHORT $LN11@DROPDOWN_D
$LN12@DROPDOWN_D:
; Line 249
	cmp	DWORD PTR _IsFocussed$[ebp], 0
	je	SHORT $LN10@DROPDOWN_D
; Line 250
	mov	DWORD PTR _Index$[ebp], 1
	jmp	SHORT $LN11@DROPDOWN_D
$LN10@DROPDOWN_D:
; Line 251
	cmp	DWORD PTR _IsEnabled$[ebp], 0
	je	SHORT $LN8@DROPDOWN_D
; Line 252
	mov	DWORD PTR _Index$[ebp], 2
; Line 253
	jmp	SHORT $LN11@DROPDOWN_D
$LN8@DROPDOWN_D:
; Line 254
	mov	DWORD PTR _Index$[ebp], 3
$LN11@DROPDOWN_D:
; Line 256
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR __apProps[eax*4]
	mov	DWORD PTR _pProps$[ebp], ecx
; Line 260
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv82[ebp], ecx
	cmp	DWORD PTR tv82[ebp], 16			; 00000010H
	ja	SHORT $LN5@DROPDOWN_D
	mov	edx, DWORD PTR tv82[ebp]
	movzx	eax, BYTE PTR $LN15@DROPDOWN_D[edx]
	jmp	DWORD PTR $LN16@DROPDOWN_D[eax*4]
$LN4@DROPDOWN_D:
; Line 262
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawBackground
	add	esp, 8
; Line 263
	jmp	SHORT $LN5@DROPDOWN_D
$LN3@DROPDOWN_D:
; Line 265
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawText
	add	esp, 8
; Line 266
	jmp	SHORT $LN5@DROPDOWN_D
$LN2@DROPDOWN_D:
; Line 268
	mov	eax, DWORD PTR _pProps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	push	ecx
	call	__DrawArrow
	add	esp, 8
; Line 269
	jmp	SHORT $LN5@DROPDOWN_D
$LN1@DROPDOWN_D:
; Line 271
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_WM_SetHasTrans
	add	esp, 4
$LN5@DROPDOWN_D:
; Line 274
	xor	eax, eax
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@DROPDOWN_D:
	DD	$LN1@DROPDOWN_D
	DD	$LN2@DROPDOWN_D
	DD	$LN4@DROPDOWN_D
	DD	$LN3@DROPDOWN_D
	DD	$LN5@DROPDOWN_D
$LN15@DROPDOWN_D:
	DB	0
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_DROPDOWN_DrawSkinFlex ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawGradientV:PROC
EXTRN	_GUI_FillRect:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI__DrawTwinArc4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawBackground
_TEXT	SEGMENT
_Color$ = -20						; size = 4
_y$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawBackground PROC					; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 131
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_GUI__DrawTwinArc4
	add	esp, 32					; 00000020H
; Line 135
	mov	DWORD PTR _y$[ebp], 0
	jmp	SHORT $LN4@DrawBackgr
$LN3@DrawBackgr:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN4@DrawBackgr:
	cmp	DWORD PTR _y$[ebp], 2
	jge	$LN2@DrawBackgr
; Line 136
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _Color$[ebp], edx
; Line 137
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 138
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 139
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 140
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 141
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 142
	jmp	$LN3@DrawBackgr
$LN2@DrawBackgr:
; Line 143
	mov	eax, DWORD PTR _pProps$[ebp]
	cmp	DWORD PTR [eax+40], 2
	jle	$LN1@DrawBackgr
; Line 144
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 145
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+40]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _pProps$[ebp]
	add	eax, DWORD PTR [ecx+40]
	push	eax
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 2
	push	eax
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
; Line 146
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _pProps$[ebp]
	add	eax, DWORD PTR [ecx+40]
	push	eax
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [edx+20]
	sub	ecx, DWORD PTR [eax+40]
	add	ecx, 1
	push	ecx
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
$LN1@DrawBackgr:
; Line 155
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	add	edx, DWORD PTR [eax+24]
	sar	edx, 1
	push	edx
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [ecx+20]
	sub	eax, DWORD PTR [edx+40]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 160
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pProps$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+40]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+24]
	sar	ecx, 1
	add	ecx, 1
	push	ecx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _pProps$[ebp]
	add	ecx, DWORD PTR [edx+40]
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 164
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 165
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [ecx+24]
	sub	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	sub	edx, eax
	add	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBackground ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawText
_TEXT	SEGMENT
_Rect$ = -72						; size = 8
_TextBorderSize$ = -56					; size = 4
_Align$ = -44						; size = 4
_pFont$ = -32						; size = 4
_pObj$ = -20						; size = 4
_s$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawText PROC						; COMDAT
; Line 172
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 182
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 183
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+132]
	mov	DWORD PTR _TextBorderSize$[ebp], ecx
; Line 184
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 185
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+134]
	mov	DWORD PTR _Align$[ebp], ecx
; Line 186
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 190
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _TextBorderSize$[ebp]
	lea	eax, DWORD PTR [ecx+edx+2]
	mov	WORD PTR _Rect$[ebp], ax
; Line 191
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, 2
	mov	WORD PTR _Rect$[ebp+2], cx
; Line 192
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 2
	sub	ecx, DWORD PTR _TextBorderSize$[ebp]
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [edx+24]
	sub	edx, DWORD PTR [eax+16]
	add	edx, 1
	sub	ecx, edx
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 193
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 2
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 194
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 195
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 196
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 197
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _s$[ebp], ecx
; Line 198
	mov	eax, DWORD PTR _Align$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 199
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@DrawText:
	DD	1
	DD	$LN4@DrawText
$LN4@DrawText:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN3@DrawText
$LN3@DrawText:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__DrawText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawArrow
_TEXT	SEGMENT
_ySize$ = -32						; size = 4
_yPos$ = -20						; size = 4
_xPos$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_pProps$ = 12						; size = 4
__DrawArrow PROC					; COMDAT
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 208
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	sub	edx, 8
	sar	edx, 1
	sub	edx, 1
	mov	DWORD PTR _ySize$[ebp], edx
; Line 209
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	add	edx, 1
	sar	edx, 1
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, edx
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 210
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	sub	edx, DWORD PTR _ySize$[ebp]
	sar	edx, 1
	mov	DWORD PTR _yPos$[ebp], edx
; Line 211
	mov	eax, DWORD PTR _pProps$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 212
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xPos$[ebp]
	push	edx
	call	__DrawTriangleDown
	add	esp, 12					; 0000000cH
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawTriangleDown
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Size$ = 16						; size = 4
__DrawTriangleDown PROC					; COMDAT
; Line 114
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 115
	jmp	SHORT $LN3@DrawTriang
$LN2@DrawTriang:
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Size$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, 1
	mov	DWORD PTR _y$[ebp], ecx
$LN3@DrawTriang:
	cmp	DWORD PTR _Size$[ebp], 0
	jl	SHORT $LN4@DrawTriang
; Line 116
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 117
	jmp	SHORT $LN2@DrawTriang
$LN4@DrawTriang:
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawTriangleDown ENDP
_TEXT	ENDS
PUBLIC	_DROPDOWN_SetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DROPDOWN_SetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_DROPDOWN_SetSkinFlexProps PROC				; COMDAT
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 282
	cmp	DWORD PTR _Index$[ebp], 4
	jae	SHORT $LN2@DROPDOWN_S
; Line 283
	mov	esi, DWORD PTR _pProps$[ebp]
	mov	eax, DWORD PTR _Index$[ebp]
	mov	edi, DWORD PTR __apProps[eax*4]
	mov	ecx, 11					; 0000000bH
	rep movsd
$LN2@DROPDOWN_S:
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_DROPDOWN_SetSkinFlexProps ENDP
_TEXT	ENDS
PUBLIC	_DROPDOWN_GetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DROPDOWN_GetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_DROPDOWN_GetSkinFlexProps PROC				; COMDAT
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 292
	cmp	DWORD PTR _Index$[ebp], 4
	jae	SHORT $LN2@DROPDOWN_G
; Line 293
	mov	eax, DWORD PTR _Index$[ebp]
	mov	esi, DWORD PTR __apProps[eax*4]
	mov	ecx, 11					; 0000000bH
	mov	edi, DWORD PTR _pProps$[ebp]
	rep movsd
$LN2@DROPDOWN_G:
; Line 295
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_DROPDOWN_GetSkinFlexProps ENDP
_TEXT	ENDS
END
