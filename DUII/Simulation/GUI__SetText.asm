; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__SetText.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__SetText
EXTRN	_GUI_ALLOC_FreePtr:PROC
EXTRN	_strcpy:PROC
EXTRN	_GUI_ALLOC_AllocNoInit:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_ALLOC_GetSize:PROC
EXTRN	_GUI__strlen:PROC
EXTRN	_GUI__strcmp_hp:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__settext.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__SetText
_TEXT	SEGMENT
_pMem$10497 = -80					; size = 4
_pMem$10493 = -68					; size = 4
_OldLen$10491 = -56					; size = 4
_NewLen$10490 = -44					; size = 4
_hMem$10489 = -32					; size = 4
_hOld$ = -20						; size = 4
_r$ = -8						; size = 4
_phText$ = 8						; size = 4
_s$ = 12						; size = 4
_GUI__SetText PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	DWORD PTR _r$[ebp], 0
; Line 54
	mov	eax, DWORD PTR _phText$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hOld$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOld$[ebp]
	push	ecx
	call	_GUI__strcmp_hp
	add	esp, 8
	test	eax, eax
	je	$LN4@GUI__SetTe
; Line 60
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _NewLen$10490[ebp], eax
; Line 61
	mov	eax, DWORD PTR _hOld$[ebp]
	push	eax
	call	_GUI_ALLOC_GetSize
	add	esp, 4
	mov	DWORD PTR _OldLen$10491[ebp], eax
; Line 62
	mov	eax, DWORD PTR _NewLen$10490[ebp]
	cmp	eax, DWORD PTR _OldLen$10491[ebp]
	jne	SHORT $LN3@GUI__SetTe
; Line 64
	mov	eax, DWORD PTR _hOld$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pMem$10493[ebp], eax
; Line 65
	mov	eax, DWORD PTR _NewLen$10490[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMem$10493[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 66
	mov	DWORD PTR _r$[ebp], 1
; Line 67
	jmp	SHORT $LN4@GUI__SetTe
$LN3@GUI__SetTe:
; Line 68
	mov	eax, DWORD PTR _NewLen$10490[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR _hMem$10489[ebp], eax
; Line 69
	cmp	DWORD PTR _hMem$10489[ebp], 0
	je	SHORT $LN4@GUI__SetTe
; Line 71
	mov	eax, DWORD PTR _hMem$10489[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pMem$10497[ebp], eax
; Line 72
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMem$10497[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 73
	mov	eax, DWORD PTR _phText$[ebp]
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 74
	mov	eax, DWORD PTR _phText$[ebp]
	mov	ecx, DWORD PTR _hMem$10489[ebp]
	mov	DWORD PTR [eax], ecx
; Line 75
	mov	DWORD PTR _r$[ebp], 1
$LN4@GUI__SetTe:
; Line 79
	mov	eax, DWORD PTR _r$[ebp]
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__SetText ENDP
_TEXT	ENDS
END
