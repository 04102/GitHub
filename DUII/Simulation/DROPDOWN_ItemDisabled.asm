; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\DROPDOWN_ItemDisabled.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_DROPDOWN_SetItemDisabled
EXTRN	_GUI_ALLOC_Free:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	_DROPDOWN_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\dropdown_itemdisabled.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _DROPDOWN_SetItemDisabled
_TEXT	SEGMENT
_pDisabled$ = -104					; size = 4
_pOld$ = -92						; size = 4
_pNew$ = -80						; size = 4
_hNew$ = -68						; size = 4
_pNumItems$ = -56					; size = 4
_NumItems$ = -44					; size = 2
_RequiredSize$ = -32					; size = 4
_hDisabled$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_OnOff$ = 16						; size = 4
_DROPDOWN_SetItemDisabled PROC				; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN11@DROPDOWN_S
; Line 53
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _hDisabled$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	WORD PTR _NumItems$[ebp], ax
; Line 56
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 57
	movzx	eax, WORD PTR _NumItems$[ebp]
	cmp	DWORD PTR _Index$[ebp], eax
	jae	$LN11@DROPDOWN_S
; Line 58
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, 8
	shr	eax, 3
	add	eax, 2
	mov	DWORD PTR _RequiredSize$[ebp], eax
; Line 59
	cmp	DWORD PTR _hDisabled$[ebp], 0
	je	$LN8@DROPDOWN_S
; Line 61
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pNumItems$[ebp], eax
; Line 62
	mov	eax, DWORD PTR _pNumItems$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _NumItems$[ebp], cx
; Line 63
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pNumItems$[ebp], 0
; Line 64
	movzx	eax, WORD PTR _NumItems$[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	add	ecx, 1
	cmp	eax, ecx
	jae	$LN7@DROPDOWN_S
; Line 66
	mov	eax, DWORD PTR _RequiredSize$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hNew$[ebp], eax
; Line 67
	cmp	DWORD PTR _hNew$[ebp], 0
	je	$LN7@DROPDOWN_S
; Line 68
	mov	eax, DWORD PTR _hNew$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pNew$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pOld$[ebp], eax
; Line 70
	movzx	eax, WORD PTR _NumItems$[ebp]
	add	eax, 7
	cdq
	and	edx, 7
	add	eax, edx
	sar	eax, 3
	add	eax, 2
	push	eax
	mov	eax, DWORD PTR _pOld$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNew$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 71
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _pNew$[ebp]
	mov	WORD PTR [ecx], ax
; Line 72
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 73
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 74
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR [eax+152], ecx
; Line 75
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pNew$[ebp], 0
; Line 76
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pOld$[ebp], 0
; Line 77
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 78
	mov	eax, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR _hDisabled$[ebp], eax
$LN7@DROPDOWN_S:
; Line 81
	jmp	SHORT $LN5@DROPDOWN_S
$LN8@DROPDOWN_S:
; Line 83
	mov	eax, DWORD PTR _RequiredSize$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hDisabled$[ebp], eax
; Line 84
	cmp	DWORD PTR _hDisabled$[ebp], 0
	je	SHORT $LN5@DROPDOWN_S
; Line 85
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pNumItems$[ebp], eax
; Line 86
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _pNumItems$[ebp]
	mov	WORD PTR [ecx], ax
; Line 87
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pNumItems$[ebp], 0
; Line 88
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hDisabled$[ebp]
	mov	DWORD PTR [eax+152], ecx
; Line 90
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN5@DROPDOWN_S:
; Line 94
	cmp	DWORD PTR _hDisabled$[ebp], 0
	je	SHORT $LN11@DROPDOWN_S
; Line 95
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	add	eax, 2
	mov	DWORD PTR _pDisabled$[ebp], eax
; Line 96
	cmp	DWORD PTR _OnOff$[ebp], 0
	je	SHORT $LN2@DROPDOWN_S
; Line 97
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 3
	mov	ecx, DWORD PTR _Index$[ebp]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	mov	ecx, DWORD PTR _pDisabled$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	or	eax, edx
	mov	ecx, DWORD PTR _Index$[ebp]
	shr	ecx, 3
	mov	edx, DWORD PTR _pDisabled$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 98
	jmp	SHORT $LN1@DROPDOWN_S
$LN2@DROPDOWN_S:
; Line 99
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 3
	mov	ecx, DWORD PTR _Index$[ebp]
	and	ecx, 7
	mov	edx, 1
	shl	edx, cl
	not	edx
	mov	ecx, DWORD PTR _pDisabled$[ebp]
	movzx	eax, BYTE PTR [ecx+eax]
	and	eax, edx
	mov	ecx, DWORD PTR _Index$[ebp]
	shr	ecx, 3
	mov	edx, DWORD PTR _pDisabled$[ebp]
	mov	BYTE PTR [edx+ecx], al
$LN1@DROPDOWN_S:
; Line 101
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDisabled$[ebp], 0
$LN11@DROPDOWN_S:
; Line 106
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DROPDOWN_SetItemDisabled ENDP
_TEXT	ENDS
PUBLIC	_DROPDOWN_GetItemDisabled
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DROPDOWN_GetItemDisabled
_TEXT	SEGMENT
_pDisabled$ = -68					; size = 4
_p$ = -56						; size = 4
_NumItems$ = -44					; size = 2
_hDisabled$ = -32					; size = 4
_pObj$ = -20						; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_DROPDOWN_GetItemDisabled PROC				; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 119
	mov	DWORD PTR _r$[ebp], 0
; Line 120
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN3@DROPDOWN_G
; Line 122
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_DROPDOWN_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	WORD PTR _NumItems$[ebp], ax
; Line 124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	DWORD PTR _hDisabled$[ebp], ecx
; Line 125
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 126
	movzx	eax, WORD PTR _NumItems$[ebp]
	cmp	DWORD PTR _Index$[ebp], eax
	jae	SHORT $LN3@DROPDOWN_G
	cmp	DWORD PTR _hDisabled$[ebp], 0
	je	SHORT $LN3@DROPDOWN_G
; Line 127
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 128
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _NumItems$[ebp], cx
; Line 129
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _p$[ebp], 0
; Line 130
	movzx	eax, WORD PTR _NumItems$[ebp]
	cmp	DWORD PTR _Index$[ebp], eax
	jae	SHORT $LN3@DROPDOWN_G
; Line 131
	mov	eax, DWORD PTR _hDisabled$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	add	eax, 2
	mov	DWORD PTR _pDisabled$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 3
	mov	ecx, DWORD PTR _pDisabled$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	mov	ecx, DWORD PTR _Index$[ebp]
	and	ecx, 7
	mov	eax, 1
	shl	eax, cl
	and	edx, eax
	neg	edx
	sbb	edx, edx
	neg	edx
	mov	DWORD PTR _r$[ebp], edx
; Line 133
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDisabled$[ebp], 0
$LN3@DROPDOWN_G:
; Line 138
	mov	eax, DWORD PTR _r$[ebp]
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DROPDOWN_GetItemDisabled ENDP
_TEXT	ENDS
END
