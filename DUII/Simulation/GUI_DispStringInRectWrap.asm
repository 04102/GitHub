; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispStringInRectWrap.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_WrapGetNumLines
EXTRN	_GUI__WrapGetNumBytesToNextLine:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_dispstringinrectwrap.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_WrapGetNumLines
_TEXT	SEGMENT
_NumBytesToNextLine$ = -20				; size = 4
_NumLines$ = -8						; size = 4
_pText$ = 8						; size = 4
_xSize$ = 12						; size = 4
_WrapMode$ = 16						; size = 4
_GUI_WrapGetNumLines PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 36
	mov	DWORD PTR _NumLines$[ebp], 0
$LN4@GUI_WrapGe:
; Line 41
	mov	eax, DWORD PTR _WrapMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$[ebp]
	push	edx
	call	_GUI__WrapGetNumBytesToNextLine
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _NumBytesToNextLine$[ebp], eax
; Line 42
	mov	eax, DWORD PTR _pText$[ebp]
	add	eax, DWORD PTR _NumBytesToNextLine$[ebp]
	mov	DWORD PTR _pText$[ebp], eax
; Line 43
	cmp	DWORD PTR _NumBytesToNextLine$[ebp], 0
	je	SHORT $LN3@GUI_WrapGe
; Line 44
	mov	eax, DWORD PTR _NumLines$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumLines$[ebp], eax
$LN3@GUI_WrapGe:
; Line 46
	cmp	DWORD PTR _NumBytesToNextLine$[ebp], 0
	jne	SHORT $LN4@GUI_WrapGe
; Line 48
	mov	eax, DWORD PTR _NumLines$[ebp]
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_WrapGetNumLines ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispStringInRectWrap
EXTRN	_GUI__DispLine:PROC
EXTRN	_GUI__GetLineDistX:PROC
EXTRN	_GUI__WrapGetNumCharsDisp:PROC
EXTRN	_GUI_SetClipRect:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispStringInRectWrap
_TEXT	SEGMENT
tv143 = -312						; size = 4
tv78 = -312						; size = 4
_RectText$8376 = -112					; size = 8
_xLineSize$8375 = -96					; size = 4
_pText$8365 = -84					; size = 4
_NumLines$8364 = -72					; size = 4
_NumCharsDisp$ = -60					; size = 4
_ySizeFont$ = -48					; size = 4
_xSize$ = -36						; size = 4
_Rect$ = -24						; size = 8
_pOldClipRect$ = -8					; size = 4
_s$ = 8							; size = 4
_pRect$ = 12						; size = 4
_TextAlign$ = 16					; size = 4
_WrapMode$ = 20						; size = 4
_GUI_DispStringInRectWrap PROC				; COMDAT
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN14@GUI_DispSt
; Line 60
	jmp	$LN15@GUI_DispSt
$LN14@GUI_DispSt:
; Line 63
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _Rect$[ebp], ecx
	mov	DWORD PTR _Rect$[ebp+4], edx
; Line 64
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xSize$[ebp], eax
; Line 65
	call	_GUI_GetFontDistY
	mov	DWORD PTR _ySizeFont$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 12					; 0000000cH
	je	$LN13@GUI_DispSt
; Line 70
	mov	DWORD PTR _NumLines$8364[ebp], 0
; Line 72
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _pText$8365[ebp], eax
; Line 76
	mov	eax, DWORD PTR _WrapMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$8365[ebp]
	push	edx
	call	_GUI_WrapGetNumLines
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _NumLines$8364[ebp], eax
; Line 80
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 12					; 0000000cH
	mov	DWORD PTR tv78[ebp], eax
	cmp	DWORD PTR tv78[ebp], 4
	je	SHORT $LN10@GUI_DispSt
	cmp	DWORD PTR tv78[ebp], 8
	je	SHORT $LN10@GUI_DispSt
	cmp	DWORD PTR tv78[ebp], 12			; 0000000cH
	je	SHORT $LN9@GUI_DispSt
	jmp	SHORT $LN13@GUI_DispSt
$LN10@GUI_DispSt:
; Line 83
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	ecx, DWORD PTR _NumLines$8364[ebp]
	imul	ecx, DWORD PTR _ySizeFont$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 84
	jmp	SHORT $LN13@GUI_DispSt
$LN9@GUI_DispSt:
; Line 86
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	edx, WORD PTR _Rect$[ebp+2]
	sub	eax, edx
	add	eax, 1
	mov	edx, DWORD PTR _NumLines$8364[ebp]
	imul	edx, DWORD PTR _ySizeFont$[ebp]
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	WORD PTR _Rect$[ebp+2], cx
$LN13@GUI_DispSt:
; Line 90
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_GUI_SetClipRect
	add	esp, 4
	mov	DWORD PTR _pOldClipRect$[ebp], eax
$LN8@GUI_DispSt:
; Line 94
	mov	eax, DWORD PTR _WrapMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI__WrapGetNumCharsDisp
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _NumCharsDisp$[ebp], eax
; Line 95
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	ecx, DWORD PTR _ySizeFont$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 96
	mov	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _RectText$8376[ebp], eax
	mov	ecx, DWORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _RectText$8376[ebp+4], ecx
; Line 100
	mov	eax, DWORD PTR _NumCharsDisp$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI__GetLineDistX
	add	esp, 8
	mov	DWORD PTR _xLineSize$8375[ebp], eax
; Line 101
	mov	eax, DWORD PTR _TextAlign$[ebp]
	and	eax, 3
	mov	DWORD PTR tv143[ebp], eax
	je	SHORT $LN2@GUI_DispSt
	cmp	DWORD PTR tv143[ebp], 1
	je	SHORT $LN1@GUI_DispSt
	cmp	DWORD PTR tv143[ebp], 2
	je	SHORT $LN3@GUI_DispSt
	jmp	SHORT $LN4@GUI_DispSt
$LN3@GUI_DispSt:
; Line 103
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+4]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	edx, WORD PTR [edx]
	sub	eax, edx
	sub	eax, DWORD PTR _xLineSize$8375[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	WORD PTR _RectText$8376[ebp], cx
; Line 104
	jmp	SHORT $LN4@GUI_DispSt
$LN2@GUI_DispSt:
; Line 106
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _RectText$8376[ebp], cx
; Line 107
	jmp	SHORT $LN4@GUI_DispSt
$LN1@GUI_DispSt:
; Line 109
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sub	ecx, DWORD PTR _xLineSize$8375[ebp]
	add	ecx, 1
	mov	WORD PTR _RectText$8376[ebp], cx
$LN4@GUI_DispSt:
; Line 112
	lea	eax, DWORD PTR _RectText$8376[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumCharsDisp$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI__DispLine
	add	esp, 12					; 0000000cH
; Line 113
	mov	eax, DWORD PTR _WrapMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI__WrapGetNumBytesToNextLine
	add	esp, 12					; 0000000cH
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 114
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _ySizeFont$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 115
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	$LN8@GUI_DispSt
; Line 116
	mov	eax, DWORD PTR _pOldClipRect$[ebp]
	push	eax
	call	_GUI_SetClipRect
	add	esp, 4
$LN15@GUI_DispSt:
; Line 188
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@GUI_DispSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@GUI_DispSt:
	DD	2
	DD	$LN19@GUI_DispSt
$LN19@GUI_DispSt:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN17@GUI_DispSt
	DD	-112					; ffffff90H
	DD	8
	DD	$LN18@GUI_DispSt
$LN18@GUI_DispSt:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN17@GUI_DispSt:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_DispStringInRectWrap ENDP
_TEXT	ENDS
END
