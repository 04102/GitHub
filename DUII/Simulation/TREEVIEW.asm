; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\TREEVIEW.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_TREEVIEW__DefaultProps
EXTRN	_TREEVIEW__bmMinus:BYTE
EXTRN	_TREEVIEW__bmPlus:BYTE
EXTRN	_TREEVIEW__bmLeaf:BYTE
EXTRN	_TREEVIEW__bmOpen:BYTE
EXTRN	_TREEVIEW__bmClosed:BYTE
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_TREEVIEW__DefaultProps DD FLAT:_GUI_Font13_1
	DD	0ffffffH
	DD	0ff0000H
	DD	0c0c0c0H
	DD	00H
	DD	0ffffffH
	DD	0808080H
	DD	00H
	DD	0ffffffH
	DD	0808080H
	DD	0ffffffH
	DD	FLAT:_TREEVIEW__bmClosed
	DD	FLAT:_TREEVIEW__bmOpen
	DD	FLAT:_TREEVIEW__bmLeaf
	DD	FLAT:_TREEVIEW__bmPlus
	DD	FLAT:_TREEVIEW__bmMinus
	DD	010H
	DD	014H
	DD	010H
$SG12625 DB	'TREEVIEW.c: Wrong handle type or Object not init''ed', 00H
$SG13374 DB	'_LinkItem: Can not be indented at a leaf!', 00H
	ORG $+2
$SG13398 DB	'_LinkItem: Position has not been defined!', 00H
	ORG $+2
$SG13402 DB	'_LinkItem: First item already exists!', 00H
	ORG $+2
$SG13568 DB	'TREEVIEW_AttachItem: Item is not allowed to have previou'
	DB	's items!', 00H
	ORG $+3
$SG13584 DB	'TREEVIEW_InsertItem: Allocation failed!', 00H
$SG13624 DB	'TREEVIEW_GetItem: Zero handle not allowed!', 00H
	ORG $+1
$SG13649 DB	'TREEVIEW_GetItem: Item is not a node!', 00H
	ORG $+2
$SG13654 DB	'TREEVIEW_GetItem: Illegal level!', 00H
	ORG $+3
$SG13768 DB	'TREEVIEW_ITEM_Detach: Illegal handle!', 00H
	ORG $+2
$SG13837 DB	'TREEVIEW_ITEM_SetImage: Allocation failed!', 00H
	ORG $+1
$SG13864 DB	'TREEVIEW_ITEM_SetText: Allocation failed!', 00H
_DATA	ENDS
PUBLIC	_TREEVIEW_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\treeview.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _TREEVIEW_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_TREEVIEW_LockH PROC					; COMDAT
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 174
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 175
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@TREEVIEW_L
; Line 176
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+196], 1414677829		; 54524545H
	je	SHORT $LN2@TREEVIEW_L
; Line 177
	push	OFFSET $SG12625
	call	_GUI_ErrorOut
	add	esp, 4
; Line 178
	xor	eax, eax
	jmp	SHORT $LN3@TREEVIEW_L
$LN2@TREEVIEW_L:
; Line 181
	mov	eax, DWORD PTR _p$[ebp]
$LN3@TREEVIEW_L:
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_LockH ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_TREEVIEW_Callback
EXTRN	_WM_NotifyParent:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetScrollState:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_WM_DeleteTimer:PROC
EXTRN	_WIDGET_HandleActive:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_Callback
_TEXT	SEGMENT
tv87 = -256						; size = 4
tv69 = -256						; size = 4
_hTimer$ = -56						; size = 4
_ScrollState$ = -44					; size = 12
_pObj$ = -24						; size = 4
_hObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_TREEVIEW_Callback PROC					; COMDAT
; Line 1834
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1839
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 1841
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN17@TREEVIEW_C
; Line 1842
	jmp	$LN18@TREEVIEW_C
$LN17@TREEVIEW_C:
; Line 1844
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	cmp	DWORD PTR tv69[ebp], 38			; 00000026H
	jg	SHORT $LN20@TREEVIEW_C
	cmp	DWORD PTR tv69[ebp], 38			; 00000026H
	je	$LN8@TREEVIEW_C
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 4
	ja	$LN18@TREEVIEW_C
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN24@TREEVIEW_C[eax*4]
$LN20@TREEVIEW_C:
	cmp	DWORD PTR tv69[ebp], 275		; 00000113H
	je	SHORT $LN13@TREEVIEW_C
	jmp	$LN18@TREEVIEW_C
$LN14@TREEVIEW_C:
; Line 1846
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnDelete
	add	esp, 4
; Line 1847
	jmp	$LN18@TREEVIEW_C
$LN13@TREEVIEW_C:
; Line 1849
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1850
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	push	ecx
	call	_WM_DeleteTimer
	add	esp, 4
; Line 1851
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+176], 0
; Line 1852
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1853
	jmp	$LN18@TREEVIEW_C
$LN12@TREEVIEW_C:
; Line 1855
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnPaint
	add	esp, 8
; Line 1856
	jmp	$LN18@TREEVIEW_C
$LN11@TREEVIEW_C:
; Line 1858
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 1859
	jmp	$LN18@TREEVIEW_C
$LN10@TREEVIEW_C:
; Line 1861
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1862
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+176]
	mov	DWORD PTR _hTimer$[ebp], ecx
; Line 1863
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1864
	cmp	DWORD PTR _hTimer$[ebp], 0
	jne	SHORT $LN9@TREEVIEW_C
; Line 1865
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnKey
	add	esp, 8
$LN9@TREEVIEW_C:
; Line 1867
	jmp	$LN18@TREEVIEW_C
$LN8@TREEVIEW_C:
; Line 1869
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv87[ebp], ecx
	cmp	DWORD PTR tv87[ebp], 5
	je	SHORT $LN5@TREEVIEW_C
	cmp	DWORD PTR tv87[ebp], 6
	je	$LN1@TREEVIEW_C
	jmp	$LN18@TREEVIEW_C
$LN5@TREEVIEW_C:
; Line 1871
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1872
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN4@TREEVIEW_C
; Line 1873
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 1874
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+64], ecx
	jmp	SHORT $LN3@TREEVIEW_C
$LN4@TREEVIEW_C:
; Line 1875
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN3@TREEVIEW_C
; Line 1876
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 1877
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+76], ecx
$LN3@TREEVIEW_C:
; Line 1879
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1880
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1881
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 1882
	jmp	SHORT $LN18@TREEVIEW_C
$LN1@TREEVIEW_C:
; Line 1889
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 1890
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
$LN18@TREEVIEW_C:
; Line 1895
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@TREEVIEW_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@TREEVIEW_C:
	DD	1
	DD	$LN22@TREEVIEW_C
$LN22@TREEVIEW_C:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN21@TREEVIEW_C
$LN21@TREEVIEW_C:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN24@TREEVIEW_C:
	DD	$LN14@TREEVIEW_C
	DD	$LN11@TREEVIEW_C
	DD	$LN18@TREEVIEW_C
	DD	$LN10@TREEVIEW_C
	DD	$LN12@TREEVIEW_C
_TREEVIEW_Callback ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcParams
_TEXT	SEGMENT
_pfDrawItem$ = -168					; size = 4
_ySizeItem$ = -156					; size = 4
_OldLevel$ = -144					; size = 4
_Level$ = -132						; size = 4
_ahIndent$ = -120					; size = 64
_pItem$ = -48						; size = 4
_hItemOld$ = -36					; size = 4
_hItem$ = -24						; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__CalcParams PROC					; COMDAT
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 358
	mov	DWORD PTR _ahIndent$[ebp], 0
	push	60					; 0000003cH
	push	0
	lea	eax, DWORD PTR _ahIndent$[ebp+4]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 362
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 363
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 364
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+188], 0
; Line 365
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+192], 0
; Line 366
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+184], 0
; Line 367
	mov	DWORD PTR _Level$[ebp], -1
	mov	eax, DWORD PTR _Level$[ebp]
	mov	DWORD PTR _OldLevel$[ebp], eax
; Line 368
	mov	DWORD PTR _hItemOld$[ebp], 0
; Line 369
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
$LN5@CalcParams:
; Line 370
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN4@CalcParams
; Line 371
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemOld$[ebp], eax
; Line 372
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 373
	xor	eax, eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [ecx+26], ax
; Line 374
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 375
	mov	eax, DWORD PTR _Level$[ebp]
	mov	ecx, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _ahIndent$[ebp+eax*4], ecx
; Line 376
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, -5					; fffffffbH
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [edx+24], cx
; Line 377
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	mov	edx, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [edx+188], ecx
	jge	SHORT $LN3@CalcParams
; Line 378
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+188], ecx
$LN3@CalcParams:
; Line 380
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 381
	mov	eax, DWORD PTR _Level$[ebp]
	cmp	eax, DWORD PTR _OldLevel$[ebp]
	jge	SHORT $LN2@CalcParams
; Line 382
	mov	eax, DWORD PTR _Level$[ebp]
	push	eax
	mov	ecx, DWORD PTR _OldLevel$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ahIndent$[ebp]
	push	edx
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__ConnectLines
	add	esp, 16					; 00000010H
$LN2@CalcParams:
; Line 384
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 385
	push	25					; 00000019H
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfDrawItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__CallOwnerDraw
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ySizeItem$[ebp], eax
; Line 386
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 387
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+192]
	add	ecx, DWORD PTR _ySizeItem$[ebp]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+192], ecx
; Line 388
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+184], ecx
; Line 389
	mov	eax, DWORD PTR _Level$[ebp]
	mov	DWORD PTR _OldLevel$[ebp], eax
; Line 390
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 391
	jmp	$LN5@CalcParams
$LN4@CalcParams:
; Line 392
	cmp	DWORD PTR _hItemOld$[ebp], 0
	je	SHORT $LN1@CalcParams
; Line 393
	push	0
	mov	eax, DWORD PTR _OldLevel$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ahIndent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hItemOld$[ebp]
	push	edx
	call	__ConnectLines
	add	esp, 16					; 00000010H
$LN1@CalcParams:
; Line 395
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 396
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@CalcParams
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@CalcParams:
	DD	1
	DD	$LN9@CalcParams
$LN9@CalcParams:
	DD	-120					; ffffff88H
	DD	64					; 00000040H
	DD	$LN8@CalcParams
$LN8@CalcParams:
	DB	97					; 00000061H
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
__CalcParams ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CallOwnerDraw
_TEXT	SEGMENT
_r$ = -48						; size = 4
_ItemInfo$ = -36					; size = 32
_hObj$ = 8						; size = 4
_pfDrawItem$ = 12					; size = 4
_hItem$ = 16						; size = 4
_Cmd$ = 20						; size = 4
__CallOwnerDraw PROC					; COMDAT
; Line 248
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 250
	mov	DWORD PTR _r$[ebp], 0
; Line 251
	cmp	DWORD PTR _pfDrawItem$[ebp], 0
	je	SHORT $LN1@CallOwnerD
; Line 252
	mov	eax, DWORD PTR _Cmd$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+4], eax
; Line 253
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 254
	lea	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 255
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawItem$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
$LN1@CallOwnerD:
; Line 257
	mov	eax, DWORD PTR _r$[ebp]
; Line 258
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@CallOwnerD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@CallOwnerD:
	DD	1
	DD	$LN5@CallOwnerD
$LN5@CallOwnerD:
	DD	-36					; ffffffdcH
	DD	32					; 00000020H
	DD	$LN4@CallOwnerD
$LN4@CallOwnerD:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__CallOwnerDraw ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SkipClosedItems
_TEXT	SEGMENT
_Level$12690 = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__SkipClosedItems PROC					; COMDAT
; Line 280
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 283
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 284
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN9@SkipClosed
; Line 285
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN8@SkipClosed
; Line 287
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$12690[ebp], ecx
$LN7@SkipClosed:
; Line 289
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 290
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN6@SkipClosed
; Line 291
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 292
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 293
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$12690[ebp]
	jg	SHORT $LN6@SkipClosed
; Line 294
	jmp	SHORT $LN5@SkipClosed
$LN6@SkipClosed:
; Line 297
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN7@SkipClosed
$LN5@SkipClosed:
; Line 298
	jmp	SHORT $LN2@SkipClosed
$LN8@SkipClosed:
; Line 299
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
$LN2@SkipClosed:
; Line 301
	jmp	SHORT $LN1@SkipClosed
$LN9@SkipClosed:
; Line 302
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
$LN1@SkipClosed:
; Line 304
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 305
	mov	eax, DWORD PTR _hItem$[ebp]
; Line 306
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SkipClosedItems ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ConnectLines
_TEXT	SEGMENT
_Mask$ = -32						; size = 2
_pIndent$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_ahIndent$ = 12						; size = 4
_OldLevel$ = 16						; size = 4
_Level$ = 20						; size = 4
__ConnectLines PROC					; COMDAT
; Line 316
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 320
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
$LN8@ConnectLin:
; Line 322
	mov	eax, DWORD PTR _OldLevel$[ebp]
	mov	ecx, DWORD PTR _ahIndent$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pIndent$[ebp], eax
; Line 323
	cmp	DWORD PTR _pIndent$[ebp], 0
	je	SHORT $LN5@ConnectLin
; Line 324
	mov	eax, DWORD PTR _pIndent$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	or	ecx, 4
	mov	edx, DWORD PTR _pIndent$[ebp]
	mov	WORD PTR [edx+24], cx
$LN5@ConnectLin:
; Line 326
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pIndent$[ebp], 0
; Line 327
	mov	eax, DWORD PTR _OldLevel$[ebp]
	sub	eax, 1
	mov	DWORD PTR _OldLevel$[ebp], eax
	mov	ecx, DWORD PTR _OldLevel$[ebp]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jg	SHORT $LN8@ConnectLin
; Line 328
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 329
	mov	ecx, DWORD PTR _Level$[ebp]
	sub	ecx, 1
	mov	eax, 1
	shl	eax, cl
	mov	WORD PTR _Mask$[ebp], ax
$LN4@ConnectLin:
; Line 330
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItem$[ebp], ecx
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN3@ConnectLin
; Line 331
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 332
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 333
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jle	SHORT $LN2@ConnectLin
; Line 334
	movzx	eax, WORD PTR _Mask$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	movzx	edx, WORD PTR [ecx+26]
	or	edx, eax
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [eax+26], dx
; Line 335
	jmp	SHORT $LN1@ConnectLin
$LN2@ConnectLin:
; Line 336
	jmp	SHORT $LN3@ConnectLin
$LN1@ConnectLin:
; Line 338
	jmp	SHORT $LN4@ConnectLin
$LN3@ConnectLin:
; Line 339
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ConnectLines ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WIDGET__SetScrollState:PROC
EXTRN	_WM_SetScrollbarH:PROC
EXTRN	_WM_SetScrollbarV:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
_BSS	SEGMENT
?IsActive@?1??_ManageAutoScroll@@9@9 DD 01H DUP (?)	; `_ManageAutoScroll'::`2'::IsActive
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT __ManageAutoScroll
_TEXT	SEGMENT
_ScrollStateH$12800 = -116				; size = 12
_ScrollStateV$12799 = -96				; size = 12
_hWin$12794 = -76					; size = 4
_hWin$12786 = -64					; size = 4
_IsRequiredH$ = -52					; size = 4
_IsRequiredV$ = -40					; size = 4
_Rect$ = -28						; size = 8
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__ManageAutoScroll PROC					; COMDAT
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 444
	cmp	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 0
	jne	$LN16@ManageAuto
; Line 445
	mov	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 1
; Line 446
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 447
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 451
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	add	eax, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [edx+192], eax
	setg	cl
	mov	DWORD PTR _IsRequiredV$[ebp], ecx
; Line 452
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	je	SHORT $LN15@ManageAuto
; Line 453
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+60], ecx
; Line 454
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumVisItems
	add	esp, 4
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [ecx+68], eax
; Line 455
	jmp	SHORT $LN14@ManageAuto
$LN15@ManageAuto:
; Line 456
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+64], 0
$LN14@ManageAuto:
; Line 458
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 8
	je	SHORT $LN13@ManageAuto
; Line 459
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 460
	mov	eax, DWORD PTR _IsRequiredV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarV
	add	esp, 8
; Line 461
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 462
	jmp	SHORT $LN12@ManageAuto
$LN13@ManageAuto:
; Line 464
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	DWORD PTR _hWin$12786[ebp], eax
; Line 465
	cmp	DWORD PTR _hWin$12786[ebp], 0
	je	SHORT $LN12@ManageAuto
; Line 466
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	jne	SHORT $LN12@ManageAuto
; Line 467
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+60], 1
; Line 468
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+68], 1
; Line 469
	mov	DWORD PTR _IsRequiredV$[ebp], 1
$LN12@ManageAuto:
; Line 476
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR [edx+188], eax
	setg	cl
	mov	DWORD PTR _IsRequiredH$[ebp], ecx
; Line 477
	cmp	DWORD PTR _IsRequiredH$[ebp], 0
	je	SHORT $LN9@ManageAuto
; Line 478
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+188]
	mov	DWORD PTR [eax+72], edx
; Line 479
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+80], eax
; Line 480
	jmp	SHORT $LN8@ManageAuto
$LN9@ManageAuto:
; Line 481
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+76], 0
$LN8@ManageAuto:
; Line 483
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 4
	je	SHORT $LN7@ManageAuto
; Line 484
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 485
	mov	eax, DWORD PTR _IsRequiredH$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarH
	add	esp, 8
; Line 486
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 487
	jmp	SHORT $LN6@ManageAuto
$LN7@ManageAuto:
; Line 489
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	DWORD PTR _hWin$12794[ebp], eax
; Line 490
	cmp	DWORD PTR _hWin$12794[ebp], 0
	je	SHORT $LN6@ManageAuto
; Line 491
	cmp	DWORD PTR _IsRequiredH$[ebp], 0
	jne	SHORT $LN6@ManageAuto
; Line 492
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+72], 1
; Line 493
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+80], 1
; Line 494
	mov	DWORD PTR _IsRequiredH$[ebp], 1
$LN6@ManageAuto:
; Line 501
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	jne	SHORT $LN2@ManageAuto
	cmp	DWORD PTR _IsRequiredH$[ebp], 0
	je	SHORT $LN3@ManageAuto
$LN2@ManageAuto:
; Line 503
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$12799[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$12799[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$12799[ebp+8], eax
; Line 504
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$12800[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$12800[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$12800[ebp+8], eax
; Line 505
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 506
	lea	eax, DWORD PTR _ScrollStateH$12800[ebp]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateV$12799[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET__SetScrollState
	add	esp, 12					; 0000000cH
; Line 507
	jmp	SHORT $LN16@ManageAuto
$LN3@ManageAuto:
; Line 508
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN16@ManageAuto:
; Line 511
	mov	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 0
; Line 512
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@ManageAuto
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@ManageAuto:
	DD	3
	DD	$LN22@ManageAuto
$LN22@ManageAuto:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN19@ManageAuto
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN20@ManageAuto
	DD	-116					; ffffff8cH
	DD	12					; 0000000cH
	DD	$LN21@ManageAuto
$LN21@ManageAuto:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
$LN20@ManageAuto:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
$LN19@ManageAuto:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__ManageAutoScroll ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumVisItems
_TEXT	SEGMENT
_pfDrawItem$ = -96					; size = 4
_r$ = -84						; size = 4
_Rect$ = -72						; size = 8
_hItem$ = -56						; size = 4
_DistY$ = -44						; size = 4
_ySize$ = -32						; size = 4
_NumItems$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetNumVisItems PROC					; COMDAT
; Line 405
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	DWORD PTR _DistY$[ebp], 0
; Line 410
	mov	DWORD PTR _r$[ebp], 0
; Line 413
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 414
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	mov	DWORD PTR _NumItems$[ebp], ecx
; Line 415
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 416
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 417
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 418
	cmp	DWORD PTR _NumItems$[ebp], 1
	jle	SHORT $LN4@GetNumVisI
; Line 419
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 420
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _ySize$[ebp], eax
$LN3@GetNumVisI:
; Line 421
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN4@GetNumVisI
; Line 422
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 423
	push	25					; 00000019H
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfDrawItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__CallOwnerDraw
	add	esp, 16					; 00000010H
	add	eax, DWORD PTR _DistY$[ebp]
	mov	DWORD PTR _DistY$[ebp], eax
; Line 425
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 426
	mov	eax, DWORD PTR _DistY$[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jl	SHORT $LN1@GetNumVisI
; Line 427
	jmp	SHORT $LN4@GetNumVisI
$LN1@GetNumVisI:
; Line 429
	jmp	SHORT $LN3@GetNumVisI
$LN4@GetNumVisI:
; Line 431
	mov	eax, DWORD PTR _r$[ebp]
; Line 432
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetNumVisI
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GetNumVisI:
	DD	1
	DD	$LN8@GetNumVisI
$LN8@GetNumVisI:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN7@GetNumVisI
$LN7@GetNumVisI:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetNumVisItems ENDP
_TEXT	ENDS
EXTRN	_WIDGET__EFFECT_DrawDown:PROC
EXTRN	_GUI_ClearRectEx:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_GUI__IntersectRect:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	_GUI_SetFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
tv131 = -356						; size = 4
_pfDrawItem$ = -156					; size = 4
_ItemDistY$ = -144					; size = 4
_xSize$ = -132						; size = 4
_i$ = -120						; size = 4
_ClipRect$ = -108					; size = 8
_RectItem$ = -92					; size = 8
_RectInside$ = -76					; size = 8
_ItemInfo$ = -60					; size = 32
_hItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnPaint PROC						; COMDAT
; Line 518
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 526
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 527
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 528
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 530
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _ClipRect$[ebp], edx
	mov	DWORD PTR _ClipRect$[ebp+4], eax
; Line 531
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx]
	neg	eax
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 532
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 533
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI__IntersectRect
	add	esp, 8
; Line 534
	movsx	eax, WORD PTR _RectInside$[ebp+4]
	movsx	ecx, WORD PTR _RectInside$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xSize$[ebp], eax
; Line 535
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xSize$[ebp]
	cmp	ecx, DWORD PTR [eax+188]
	jge	SHORT $LN10@OnPaint
; Line 536
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+188]
	mov	DWORD PTR _xSize$[ebp], ecx
$LN10@OnPaint:
; Line 538
	mov	ax, WORD PTR _ClipRect$[ebp]
	mov	WORD PTR _RectItem$[ebp], ax
; Line 539
	mov	ax, WORD PTR _ClipRect$[ebp+4]
	mov	WORD PTR _RectItem$[ebp+4], ax
; Line 541
	mov	DWORD PTR _ItemInfo$[ebp+4], 1
; Line 542
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 543
	movsx	eax, WORD PTR _RectInside$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	sub	eax, DWORD PTR [ecx+76]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 544
	movsx	eax, WORD PTR _RectInside$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 545
	mov	eax, DWORD PTR _ItemInfo$[ebp+12]
	add	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 546
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 548
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _i$[ebp], ecx
$LN9@OnPaint:
; Line 549
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv131[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR tv131[ebp], 0
	je	SHORT $LN6@OnPaint
; Line 550
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN7@OnPaint
; Line 551
	jmp	SHORT $LN6@OnPaint
$LN7@OnPaint:
; Line 554
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 555
	jmp	SHORT $LN9@OnPaint
$LN6@OnPaint:
; Line 557
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN5@OnPaint
; Line 558
	mov	ax, WORD PTR _ItemInfo$[ebp+16]
	mov	WORD PTR _RectItem$[ebp+2], ax
; Line 560
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	movsx	ecx, WORD PTR _ClipRect$[ebp+6]
	cmp	eax, ecx
	jle	SHORT $LN4@OnPaint
; Line 561
	jmp	$LN5@OnPaint
$LN4@OnPaint:
; Line 563
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 564
	push	25					; 00000019H
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfDrawItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__CallOwnerDraw
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ItemDistY$[ebp], eax
; Line 565
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 566
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	mov	ecx, DWORD PTR _ItemDistY$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _RectItem$[ebp+6], dx
; Line 568
	movsx	eax, WORD PTR _RectItem$[ebp+6]
	movsx	ecx, WORD PTR _ClipRect$[ebp+2]
	cmp	eax, ecx
	jl	SHORT $LN3@OnPaint
; Line 570
	lea	eax, DWORD PTR _RectItem$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 572
	lea	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 573
	mov	eax, DWORD PTR _ItemDistY$[ebp]
	mov	ecx, DWORD PTR _ItemInfo$[ebp+16]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _ItemInfo$[ebp+24], edx
; Line 575
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN3@OnPaint
; Line 576
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@OnPaint:
; Line 579
	mov	eax, DWORD PTR _ItemInfo$[ebp+16]
	add	eax, DWORD PTR _ItemDistY$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 581
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 582
	jmp	$LN6@OnPaint
$LN5@OnPaint:
; Line 583
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 585
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+88], 268435455		; 0fffffffH
	je	SHORT $LN1@OnPaint
; Line 586
	mov	ax, WORD PTR _ItemInfo$[ebp+16]
	mov	WORD PTR _RectItem$[ebp+2], ax
; Line 587
	mov	ax, WORD PTR _RectInside$[ebp+6]
	mov	WORD PTR _RectItem$[ebp+6], ax
; Line 588
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 589
	lea	eax, DWORD PTR _RectItem$[ebp]
	push	eax
	call	_GUI_ClearRectEx
	add	esp, 4
$LN1@OnPaint:
; Line 591
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WIDGET__EFFECT_DrawDown
	add	esp, 4
; Line 592
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 593
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@OnPaint:
	DD	5
	DD	$LN18@OnPaint
$LN18@OnPaint:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN13@OnPaint
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN14@OnPaint
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN15@OnPaint
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN16@OnPaint
	DD	-108					; ffffff94H
	DD	8
	DD	$LN17@OnPaint
$LN17@OnPaint:
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN16@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN15@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN14@OnPaint:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN13@OnPaint:
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
__OnPaint ENDP
_TEXT	ENDS
EXTRN	_WM_CreateTimer:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_WM_SetCapture:PROC
EXTRN	_WM_HasCaptured:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnTouch
_TEXT	SEGMENT
_Rect$12911 = -132					; size = 8
_x1_Row$12909 = -116					; size = 4
_x0_Row$12908 = -104					; size = 4
_x1_Button$12900 = -92					; size = 4
_x0_Button$12899 = -80					; size = 4
_Flags$12895 = -68					; size = 2
_hTimer$12894 = -56					; size = 4
_pItem$12893 = -44					; size = 4
_hItem$12892 = -32					; size = 4
_pObj$12891 = -20					; size = 4
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 687
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 688
	cmp	DWORD PTR _pState$[ebp], 0
	je	$LN19@OnTouch
; Line 694
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	$LN18@OnTouch
; Line 695
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_HasCaptured
	add	esp, 4
	test	eax, eax
	jne	$LN17@OnTouch
; Line 696
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetCapture
	add	esp, 8
; Line 697
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetItemFromPos
	add	esp, 8
	mov	DWORD PTR _hItem$12892[ebp], eax
; Line 698
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$12891[ebp], eax
; Line 699
	cmp	DWORD PTR _hItem$12892[ebp], 0
	je	$LN16@OnTouch
; Line 701
	mov	eax, DWORD PTR _hItem$12892[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$12893[ebp], eax
; Line 702
	mov	eax, DWORD PTR _pItem$12893[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pObj$12891[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	DWORD PTR _x0_Button$12899[ebp], ecx
; Line 703
	mov	eax, DWORD PTR _pObj$12891[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _x0_Button$12899[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _x1_Button$12900[ebp], eax
; Line 707
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _x0_Button$12899[ebp]
	jl	SHORT $LN15@OnTouch
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _x1_Button$12900[ebp]
	jg	SHORT $LN15@OnTouch
	mov	eax, DWORD PTR _pItem$12893[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN15@OnTouch
; Line 711
	mov	eax, DWORD PTR _pItem$12893[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Flags$12895[ebp], cx
; Line 712
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12893[ebp], 0
; Line 713
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
; Line 714
	movzx	eax, WORD PTR _Flags$12895[ebp]
	and	eax, 2
	je	SHORT $LN14@OnTouch
; Line 715
	mov	eax, DWORD PTR _hItem$12892[ebp]
	push	eax
	call	__CollapseItem
	add	esp, 4
; Line 716
	jmp	SHORT $LN13@OnTouch
$LN14@OnTouch:
; Line 717
	mov	eax, DWORD PTR _hItem$12892[ebp]
	push	eax
	call	__ExpandItem
	add	esp, 4
$LN13@OnTouch:
; Line 719
	jmp	$LN12@OnTouch
$LN15@OnTouch:
; Line 721
	mov	eax, DWORD PTR _pObj$12891[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN11@OnTouch
; Line 723
	lea	eax, DWORD PTR _Rect$12911[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 724
	movsx	eax, WORD PTR _Rect$12911[ebp]
	mov	DWORD PTR _x0_Row$12908[ebp], eax
; Line 725
	movsx	eax, WORD PTR _Rect$12911[ebp+4]
	mov	DWORD PTR _x1_Row$12909[ebp], eax
; Line 726
	jmp	SHORT $LN10@OnTouch
$LN11@OnTouch:
; Line 727
	mov	eax, DWORD PTR _pItem$12893[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$12891[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	DWORD PTR _x0_Row$12908[ebp], ecx
; Line 728
	mov	eax, DWORD PTR _pObj$12891[ebp]
	mov	esi, DWORD PTR _x0_Row$12908[ebp]
	add	esi, DWORD PTR [eax+152]
	mov	ecx, DWORD PTR _pItem$12893[ebp]
	add	ecx, 29					; 0000001dH
	push	ecx
	call	_GUI_GetStringDistX
	add	esp, 4
	add	esi, eax
	mov	DWORD PTR _x1_Row$12909[ebp], esi
$LN10@OnTouch:
; Line 730
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _x0_Row$12908[ebp]
	jl	$LN9@OnTouch
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	cmp	ecx, DWORD PTR _x1_Row$12909[ebp]
	jg	$LN9@OnTouch
; Line 731
	mov	eax, DWORD PTR _pObj$12891[ebp]
	cmp	DWORD PTR [eax+176], 0
	je	SHORT $LN8@OnTouch
; Line 735
	mov	eax, DWORD PTR _pItem$12893[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Flags$12895[ebp], cx
; Line 736
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12893[ebp], 0
; Line 737
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
; Line 738
	movzx	eax, WORD PTR _Flags$12895[ebp]
	and	eax, 2
	je	SHORT $LN7@OnTouch
; Line 739
	mov	eax, DWORD PTR _hItem$12892[ebp]
	push	eax
	call	__CollapseItem
	add	esp, 4
; Line 740
	jmp	SHORT $LN6@OnTouch
$LN7@OnTouch:
; Line 741
	mov	eax, DWORD PTR _hItem$12892[ebp]
	push	eax
	call	__ExpandItem
	add	esp, 4
$LN6@OnTouch:
; Line 743
	jmp	SHORT $LN5@OnTouch
$LN8@OnTouch:
; Line 747
	mov	eax, DWORD PTR _pObj$12891[ebp]
	mov	ecx, DWORD PTR _hItem$12892[ebp]
	mov	DWORD PTR [eax+172], ecx
; Line 748
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 752
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12893[ebp], 0
; Line 753
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
; Line 754
	push	0
	push	300					; 0000012cH
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hTimer$12894[ebp], eax
; Line 755
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$12891[ebp], eax
; Line 756
	mov	eax, DWORD PTR _pObj$12891[ebp]
	mov	ecx, DWORD PTR _hTimer$12894[ebp]
	mov	DWORD PTR [eax+176], ecx
; Line 757
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
$LN5@OnTouch:
; Line 759
	jmp	SHORT $LN12@OnTouch
$LN9@OnTouch:
; Line 760
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$12893[ebp], 0
; Line 761
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
$LN12@OnTouch:
; Line 764
	jmp	SHORT $LN17@OnTouch
$LN16@OnTouch:
; Line 765
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$12891[ebp], 0
$LN17@OnTouch:
; Line 768
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 769
	jmp	SHORT $LN2@OnTouch
$LN18@OnTouch:
; Line 770
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN2@OnTouch:
; Line 772
	jmp	SHORT $LN20@OnTouch
$LN19@OnTouch:
; Line 773
	push	3
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN20@OnTouch:
; Line 775
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@OnTouch
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN24@OnTouch:
	DD	1
	DD	$LN23@OnTouch
$LN23@OnTouch:
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN22@OnTouch
$LN22@OnTouch:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__OnTouch ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemFromPos
_TEXT	SEGMENT
tv70 = -268						; size = 4
_ItemDistY$12856 = -68					; size = 4
_pfDrawItem$ = -56					; size = 4
_yPos$ = -44						; size = 4
_i$ = -32						; size = 4
_hItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_y$ = 12						; size = 4
__GetItemFromPos PROC					; COMDAT
; Line 599
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 605
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 606
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 607
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 608
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _i$[ebp], ecx
; Line 609
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN6@GetItemFro:
; Line 613
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN5@GetItemFro
; Line 614
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN4@GetItemFro
; Line 615
	jmp	SHORT $LN5@GetItemFro
$LN4@GetItemFro:
; Line 620
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 621
	jmp	SHORT $LN6@GetItemFro
$LN5@GetItemFro:
; Line 622
	mov	DWORD PTR _yPos$[ebp], 0
$LN3@GetItemFro:
; Line 623
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@GetItemFro
; Line 625
	push	25					; 00000019H
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfDrawItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__CallOwnerDraw
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ItemDistY$12856[ebp], eax
; Line 626
	mov	eax, DWORD PTR _yPos$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jg	SHORT $LN1@GetItemFro
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _ItemDistY$12856[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jl	SHORT $LN1@GetItemFro
; Line 627
	mov	eax, DWORD PTR _hItem$[ebp]
	jmp	SHORT $LN7@GetItemFro
$LN1@GetItemFro:
; Line 629
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _ItemDistY$12856[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 633
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 634
	jmp	SHORT $LN3@GetItemFro
$LN2@GetItemFro:
; Line 635
	xor	eax, eax
$LN7@GetItemFro:
; Line 636
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemFromPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ExpandItem
_TEXT	SEGMENT
_hParent$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__ExpandItem PROC					; COMDAT
; Line 642
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 645
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 646
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hParent$[ebp], ecx
; Line 647
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN3@ExpandItem
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN3@ExpandItem
; Line 648
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	or	ecx, 2
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [edx+24], cx
; Line 649
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 650
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN2@ExpandItem
; Line 651
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 652
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 653
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@ExpandItem:
; Line 655
	jmp	SHORT $LN4@ExpandItem
$LN3@ExpandItem:
; Line 656
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN4@ExpandItem:
; Line 658
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ExpandItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CollapseItem
_TEXT	SEGMENT
_hParent$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__CollapseItem PROC					; COMDAT
; Line 664
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 667
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 668
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hParent$[ebp], ecx
; Line 669
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN3@CollapseIt
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	je	SHORT $LN3@CollapseIt
; Line 670
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [edx+24], cx
; Line 671
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 672
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN2@CollapseIt
; Line 673
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 674
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 675
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@CollapseIt:
; Line 677
	jmp	SHORT $LN4@CollapseIt
$LN3@CollapseIt:
; Line 678
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN4@CollapseIt:
; Line 680
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CollapseItem ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_Collapse
PUBLIC	_TREEVIEW_ITEM_Expand
EXTRN	_WM_DefaultProc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnKey
_TEXT	SEGMENT
tv71 = -292						; size = 4
_Flags$ = -92						; size = 2
_Key$ = -80						; size = 4
_pInfo$ = -68						; size = 4
_hSel$ = -56						; size = 4
_hFirst$ = -44						; size = 4
_pItem$ = -32						; size = 4
_hItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnKey	PROC						; COMDAT
; Line 1522
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1531
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pInfo$[ebp], ecx
; Line 1532
	mov	eax, DWORD PTR _pInfo$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN23@OnKey
; Line 1533
	jmp	$LN24@OnKey
$LN23@OnKey:
; Line 1535
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Key$[ebp], ecx
; Line 1536
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1537
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hFirst$[ebp], ecx
; Line 1538
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _hSel$[ebp], ecx
; Line 1539
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1540
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 8
	ja	$LN1@OnKey
	mov	edx, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN26@OnKey[edx*4]
$LN20@OnKey:
; Line 1542
	mov	eax, DWORD PTR _hSel$[ebp]
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1543
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN19@OnKey
; Line 1544
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1545
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Flags$[ebp], cx
; Line 1546
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1547
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN19@OnKey
; Line 1548
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 2
	je	SHORT $LN17@OnKey
; Line 1549
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IncSel
	add	esp, 4
; Line 1550
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__UpdateScrollPos
	add	esp, 4
; Line 1551
	jmp	SHORT $LN19@OnKey
$LN17@OnKey:
; Line 1552
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_TREEVIEW_ITEM_Expand
	add	esp, 4
$LN19@OnKey:
; Line 1556
	jmp	$LN24@OnKey
$LN15@OnKey:
; Line 1558
	mov	eax, DWORD PTR _hSel$[ebp]
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1559
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN14@OnKey
; Line 1560
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1561
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Flags$[ebp], cx
; Line 1562
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1563
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN13@OnKey
; Line 1564
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 2
	je	SHORT $LN12@OnKey
; Line 1565
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_TREEVIEW_ITEM_Collapse
	add	esp, 4
; Line 1566
	jmp	SHORT $LN11@OnKey
$LN12@OnKey:
; Line 1567
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetPrevVisibleParent
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN11@OnKey:
; Line 1569
	jmp	SHORT $LN14@OnKey
$LN13@OnKey:
; Line 1570
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetPrevVisibleNode
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN14@OnKey:
; Line 1573
	jmp	$LN24@OnKey
$LN9@OnKey:
; Line 1575
	cmp	DWORD PTR _hSel$[ebp], 0
	je	SHORT $LN8@OnKey
; Line 1576
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetNextVisibleItem
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN8@OnKey:
; Line 1578
	jmp	SHORT $LN24@OnKey
$LN7@OnKey:
; Line 1580
	cmp	DWORD PTR _hSel$[ebp], 0
	je	SHORT $LN6@OnKey
; Line 1581
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetPrevVisibleItem
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN6@OnKey:
; Line 1583
	jmp	SHORT $LN24@OnKey
$LN5@OnKey:
; Line 1585
	cmp	DWORD PTR _hFirst$[ebp], 0
	je	SHORT $LN4@OnKey
; Line 1586
	mov	eax, DWORD PTR _hFirst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN4@OnKey:
; Line 1588
	jmp	SHORT $LN24@OnKey
$LN3@OnKey:
; Line 1590
	cmp	DWORD PTR _hSel$[ebp], 0
	je	SHORT $LN2@OnKey
; Line 1591
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetLastVisibleItem
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN2@OnKey:
; Line 1593
	jmp	SHORT $LN24@OnKey
$LN1@OnKey:
; Line 1595
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN24@OnKey:
; Line 1597
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN26@OnKey:
	DD	$LN15@OnKey
	DD	$LN7@OnKey
	DD	$LN20@OnKey
	DD	$LN9@OnKey
	DD	$LN1@OnKey
	DD	$LN1@OnKey
	DD	$LN1@OnKey
	DD	$LN5@OnKey
	DD	$LN3@OnKey
__OnKey	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IncSel
_TEXT	SEGMENT
_pItem$ = -32						; size = 4
_hItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__IncSel PROC						; COMDAT
; Line 1074
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1078
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1079
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1080
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1081
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@IncSel
; Line 1082
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+172], edx
; Line 1083
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@IncSel:
; Line 1085
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1086
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1087
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IncSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPrevVisibleItem
_TEXT	SEGMENT
tv90 = -244						; size = 4
_Level$ = -44						; size = 4
_hItemOld$ = -32					; size = 4
_hItemNew$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetPrevVisibleItem PROC				; COMDAT
; Line 1097
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1102
	mov	DWORD PTR _hItemNew$[ebp], 0
; Line 1103
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemOld$[ebp], eax
; Line 1104
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1105
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN8@GetPrevVis:
; Line 1107
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1108
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN7@GetPrevVis
; Line 1109
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1110
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1111
	cmp	DWORD PTR _hItemNew$[ebp], 0
	jne	SHORT $LN4@GetPrevVis
; Line 1112
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 1113
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN4@GetPrevVis:
; Line 1115
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN7@GetPrevVis
; Line 1116
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jge	SHORT $LN7@GetPrevVis
; Line 1117
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN1@GetPrevVis
; Line 1118
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemNew$[ebp], eax
$LN1@GetPrevVis:
; Line 1120
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN7@GetPrevVis:
; Line 1124
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN8@GetPrevVis
; Line 1125
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1126
	cmp	DWORD PTR _hItemNew$[ebp], 0
	je	SHORT $LN11@GetPrevVis
	mov	eax, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	jmp	SHORT $LN12@GetPrevVis
$LN11@GetPrevVis:
	mov	ecx, DWORD PTR _hItemOld$[ebp]
	mov	DWORD PTR tv90[ebp], ecx
$LN12@GetPrevVis:
	mov	eax, DWORD PTR tv90[ebp]
; Line 1127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevVisibleItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPrevVisibleNode
_TEXT	SEGMENT
_Flags$ = -32						; size = 2
_hItemNew$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetPrevVisibleNode PROC				; COMDAT
; Line 1138
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN4@GetPrevVis@2:
; Line 1143
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 1144
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetPrevVisibleItem
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1145
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1146
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Flags$[ebp], cx
; Line 1147
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1148
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN3@GetPrevVis@2
; Line 1149
	mov	eax, DWORD PTR _hItem$[ebp]
	jmp	SHORT $LN5@GetPrevVis@2
$LN3@GetPrevVis@2:
; Line 1151
	mov	eax, DWORD PTR _hItem$[ebp]
	cmp	eax, DWORD PTR _hItemNew$[ebp]
	jne	SHORT $LN4@GetPrevVis@2
; Line 1152
	mov	eax, DWORD PTR _hItem$[ebp]
$LN5@GetPrevVis@2:
; Line 1153
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevVisibleNode ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPrevVisibleParent
_TEXT	SEGMENT
_Level$ = -32						; size = 4
_r$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetPrevVisibleParent PROC				; COMDAT
; Line 1164
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1168
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 1169
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1170
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN4@GetPrevVis@3:
; Line 1172
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetPrevVisibleNode
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1173
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1174
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1175
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jge	SHORT $LN3@GetPrevVis@3
; Line 1176
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 1177
	jmp	SHORT $LN2@GetPrevVis@3
$LN3@GetPrevVis@3:
; Line 1179
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	jne	SHORT $LN4@GetPrevVis@3
$LN2@GetPrevVis@3:
; Line 1180
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1181
	mov	eax, DWORD PTR _r$[ebp]
; Line 1182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevVisibleParent ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNextVisibleItem
_TEXT	SEGMENT
tv80 = -232						; size = 4
_hItemOld$ = -32					; size = 4
_hItemNew$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetNextVisibleItem PROC				; COMDAT
; Line 1226
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1231
	mov	DWORD PTR _hItemNew$[ebp], 0
; Line 1232
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemOld$[ebp], eax
; Line 1233
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1234
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN7@GetNextVis
$LN6@GetNextVis:
; Line 1236
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1237
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN5@GetNextVis
; Line 1238
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1239
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1240
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__IsVisible
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GetNextVis
; Line 1241
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 1242
	jmp	SHORT $LN4@GetNextVis
$LN5@GetNextVis:
; Line 1245
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN6@GetNextVis
$LN4@GetNextVis:
; Line 1246
	jmp	SHORT $LN1@GetNextVis
$LN7@GetNextVis:
; Line 1247
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNew$[ebp], ecx
$LN1@GetNextVis:
; Line 1249
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1250
	cmp	DWORD PTR _hItemNew$[ebp], 0
	je	SHORT $LN10@GetNextVis
	mov	eax, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR tv80[ebp], eax
	jmp	SHORT $LN11@GetNextVis
$LN10@GetNextVis:
	mov	ecx, DWORD PTR _hItemOld$[ebp]
	mov	DWORD PTR tv80[ebp], ecx
$LN11@GetNextVis:
	mov	eax, DWORD PTR tv80[ebp]
; Line 1251
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetNextVisibleItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsVisible
_TEXT	SEGMENT
_Level$ = -32						; size = 4
_IsVisible$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__IsVisible PROC					; COMDAT
; Line 1193
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1196
	mov	DWORD PTR _IsVisible$[ebp], 1
; Line 1197
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1198
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN8@IsVisible:
; Line 1200
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1201
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN7@IsVisible
; Line 1202
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1203
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1204
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	DWORD PTR _Level$[ebp], ecx
	jle	SHORT $LN7@IsVisible
; Line 1205
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 1206
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN7@IsVisible
; Line 1207
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN7@IsVisible
; Line 1208
	mov	DWORD PTR _IsVisible$[ebp], 0
$LN7@IsVisible:
; Line 1213
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN6@IsVisible
	cmp	DWORD PTR _IsVisible$[ebp], 0
	je	SHORT $LN6@IsVisible
	cmp	DWORD PTR _Level$[ebp], 0
	jne	SHORT $LN8@IsVisible
$LN6@IsVisible:
; Line 1214
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1215
	mov	eax, DWORD PTR _IsVisible$[ebp]
; Line 1216
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsVisible ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetLastVisibleItem
_TEXT	SEGMENT
_hItemNew$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetLastVisibleItem PROC				; COMDAT
; Line 1293
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@GetLastVis:
; Line 1296
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 1297
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetNextVisibleItem
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1298
	mov	eax, DWORD PTR _hItem$[ebp]
	cmp	eax, DWORD PTR _hItemNew$[ebp]
	jne	SHORT $LN3@GetLastVis
; Line 1299
	mov	eax, DWORD PTR _hItem$[ebp]
; Line 1300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetLastVisibleItem ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __UpdateScrollPos
_TEXT	SEGMENT
tv74 = -288						; size = 4
_r$ = -88						; size = 4
_Visibility$ = -76					; size = 4
_hItem$ = -64						; size = 4
_pObj$ = -52						; size = 4
_ScrollStateH$ = -40					; size = 12
_ScrollStateV$ = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__UpdateScrollPos PROC					; COMDAT
; Line 1441
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1446
	mov	DWORD PTR _r$[ebp], 0
; Line 1448
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1449
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1450
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__IsParentPathOpen
	add	esp, 4
	test	eax, eax
	je	$LN10@UpdateScro
$LN9@UpdateScro:
; Line 1452
	push	0
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetVisibility
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Visibility$[ebp], eax
; Line 1453
	mov	eax, DWORD PTR _Visibility$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	cmp	DWORD PTR tv74[ebp], -1
	je	SHORT $LN4@UpdateScro
	cmp	DWORD PTR tv74[ebp], 0
	jle	SHORT $LN5@UpdateScro
	cmp	DWORD PTR tv74[ebp], 2
	jle	SHORT $LN3@UpdateScro
	jmp	SHORT $LN5@UpdateScro
$LN4@UpdateScro:
; Line 1455
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	sub	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 1456
	mov	DWORD PTR _r$[ebp], 1
; Line 1457
	jmp	SHORT $LN5@UpdateScro
$LN3@UpdateScro:
; Line 1460
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 1461
	mov	DWORD PTR _r$[ebp], 1
$LN5@UpdateScro:
; Line 1464
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [eax+64]
	cmp	edx, DWORD PTR [ecx+184]
	jl	SHORT $LN8@UpdateScro
; Line 1465
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	sub	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 1466
	jmp	SHORT $LN7@UpdateScro
$LN8@UpdateScro:
; Line 1468
	cmp	DWORD PTR _Visibility$[ebp], 0
	jne	$LN9@UpdateScro
$LN7@UpdateScro:
; Line 1469
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 1470
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$[ebp+8], eax
; Line 1471
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1472
	lea	eax, DWORD PTR _ScrollStateH$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateV$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET__SetScrollState
	add	esp, 12					; 0000000cH
; Line 1473
	jmp	SHORT $LN1@UpdateScro
$LN10@UpdateScro:
; Line 1474
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@UpdateScro:
; Line 1476
	mov	eax, DWORD PTR _r$[ebp]
; Line 1477
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@UpdateScro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@UpdateScro:
	DD	2
	DD	$LN15@UpdateScro
$LN15@UpdateScro:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN13@UpdateScro
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN14@UpdateScro
$LN14@UpdateScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
$LN13@UpdateScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
__UpdateScrollPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetVisibility
_TEXT	SEGMENT
tv73 = -284						; size = 4
_pfDrawItem$ = -84					; size = 4
_pObj$ = -72						; size = 4
_ItemDistY$ = -60					; size = 4
_yPos$ = -48						; size = 4
_i$ = -36						; size = 4
_RectInside$ = -24					; size = 8
_hItemI$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hItem$ = 12						; size = 4
_pRect$ = 16						; size = 4
__GetVisibility PROC					; COMDAT
; Line 1343
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1350
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 1351
	movsx	eax, WORD PTR _RectInside$[ebp+2]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 1352
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1353
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItemI$[ebp], ecx
; Line 1354
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 1355
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _i$[ebp], ecx
; Line 1356
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN11@GetVisibil:
; Line 1357
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	cmp	DWORD PTR tv73[ebp], 0
	je	SHORT $LN7@GetVisibil
; Line 1358
	cmp	DWORD PTR _hItemI$[ebp], 0
	jne	SHORT $LN9@GetVisibil
; Line 1359
	jmp	SHORT $LN7@GetVisibil
$LN9@GetVisibil:
; Line 1361
	mov	eax, DWORD PTR _hItemI$[ebp]
	cmp	eax, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN8@GetVisibil
; Line 1362
	or	eax, -1
	jmp	$LN12@GetVisibil
$LN8@GetVisibil:
; Line 1365
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItemI$[ebp], eax
; Line 1366
	jmp	SHORT $LN11@GetVisibil
$LN7@GetVisibil:
; Line 1368
	cmp	DWORD PTR _hItemI$[ebp], 0
	je	$LN6@GetVisibil
; Line 1369
	push	25					; 00000019H
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfDrawItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__CallOwnerDraw
	add	esp, 16					; 00000010H
	mov	DWORD PTR _ItemDistY$[ebp], eax
; Line 1370
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _ItemDistY$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 1371
	mov	eax, DWORD PTR _hItemI$[ebp]
	cmp	eax, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN5@GetVisibil
; Line 1372
	cmp	DWORD PTR _pRect$[ebp], 0
	je	SHORT $LN4@GetVisibil
; Line 1373
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _RectInside$[ebp]
	mov	WORD PTR [eax], cx
; Line 1374
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _RectInside$[ebp+4]
	mov	WORD PTR [eax+4], cx
; Line 1375
	mov	eax, DWORD PTR _yPos$[ebp]
	sub	eax, DWORD PTR _ItemDistY$[ebp]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 1376
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _ItemDistY$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+6], ax
$LN4@GetVisibil:
; Line 1378
	movsx	eax, WORD PTR _RectInside$[ebp+6]
	add	eax, 1
	cmp	DWORD PTR _yPos$[ebp], eax
	jle	SHORT $LN3@GetVisibil
; Line 1379
	mov	eax, 1
	jmp	SHORT $LN12@GetVisibil
; Line 1380
	jmp	SHORT $LN5@GetVisibil
$LN3@GetVisibil:
; Line 1381
	xor	eax, eax
	jmp	SHORT $LN12@GetVisibil
$LN5@GetVisibil:
; Line 1384
	movsx	eax, WORD PTR _RectInside$[ebp+6]
	cmp	DWORD PTR _yPos$[ebp], eax
	jle	SHORT $LN1@GetVisibil
; Line 1385
	jmp	SHORT $LN6@GetVisibil
$LN1@GetVisibil:
; Line 1387
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	call	__SkipClosedItems
	add	esp, 4
	mov	DWORD PTR _hItemI$[ebp], eax
; Line 1388
	jmp	$LN7@GetVisibil
$LN6@GetVisibil:
; Line 1390
	mov	eax, 2
$LN12@GetVisibil:
; Line 1391
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@GetVisibil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@GetVisibil:
	DD	1
	DD	$LN15@GetVisibil
$LN15@GetVisibil:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN14@GetVisibil
$LN14@GetVisibil:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__GetVisibility ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsParentPathOpen
_TEXT	SEGMENT
_r$ = -44						; size = 4
_Level$ = -32						; size = 4
_pItemI$ = -20						; size = 4
_hItemI$ = -8						; size = 4
_hItem$ = 8						; size = 4
__IsParentPathOpen PROC					; COMDAT
; Line 1405
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1409
	mov	DWORD PTR _r$[ebp], 1
; Line 1410
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemI$[ebp], eax
; Line 1411
	mov	eax, DWORD PTR _pItemI$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
$LN6@IsParentPa:
; Line 1413
	mov	eax, DWORD PTR _pItemI$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItemI$[ebp], ecx
; Line 1414
	cmp	DWORD PTR _hItemI$[ebp], 0
	je	SHORT $LN5@IsParentPa
; Line 1415
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemI$[ebp], 0
; Line 1416
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemI$[ebp], eax
; Line 1417
	mov	eax, DWORD PTR _pItemI$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	DWORD PTR _Level$[ebp], ecx
	jle	SHORT $LN5@IsParentPa
; Line 1418
	mov	eax, DWORD PTR _pItemI$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 1419
	mov	eax, DWORD PTR _pItemI$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	jne	SHORT $LN5@IsParentPa
; Line 1420
	mov	DWORD PTR _r$[ebp], 0
; Line 1421
	jmp	SHORT $LN4@IsParentPa
$LN5@IsParentPa:
; Line 1425
	cmp	DWORD PTR _hItemI$[ebp], 0
	jne	SHORT $LN6@IsParentPa
$LN4@IsParentPa:
; Line 1426
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemI$[ebp], 0
; Line 1427
	mov	eax, DWORD PTR _r$[ebp]
; Line 1428
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsParentPathOpen ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetSel
_TEXT	SEGMENT
_Visibility$13264 = -48					; size = 4
_Rect$13263 = -36					; size = 8
_hItemOld$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hItem$ = 12						; size = 4
__SetSel PROC						; COMDAT
; Line 1487
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1491
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1492
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _hItemOld$[ebp], ecx
; Line 1493
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR [eax+172], ecx
; Line 1494
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1495
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__UpdateScrollPos
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@SetSel
; Line 1499
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1500
	jmp	SHORT $LN5@SetSel
$LN6@SetSel:
; Line 1506
	lea	eax, DWORD PTR _Rect$13263[ebp]
	push	eax
	mov	ecx, DWORD PTR _hItemOld$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetVisibility
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Visibility$13264[ebp], eax
; Line 1507
	cmp	DWORD PTR _Visibility$13264[ebp], 0
	je	SHORT $LN3@SetSel
	cmp	DWORD PTR _Visibility$13264[ebp], 1
	jne	SHORT $LN4@SetSel
$LN3@SetSel:
; Line 1508
	lea	eax, DWORD PTR _Rect$13263[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN4@SetSel:
; Line 1510
	lea	eax, DWORD PTR _Rect$13263[ebp]
	push	eax
	mov	ecx, DWORD PTR _hItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetVisibility
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Visibility$13264[ebp], eax
; Line 1511
	cmp	DWORD PTR _Visibility$13264[ebp], 0
	je	SHORT $LN1@SetSel
	cmp	DWORD PTR _Visibility$13264[ebp], 1
	jne	SHORT $LN5@SetSel
$LN1@SetSel:
; Line 1512
	lea	eax, DWORD PTR _Rect$13263[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN5@SetSel:
; Line 1515
	push	4
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 1516
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SetSel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@SetSel:
	DD	1
	DD	$LN10@SetSel
$LN10@SetSel:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@SetSel
$LN9@SetSel:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__SetSel ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnDelete
_TEXT	SEGMENT
_pItem$ = -44						; size = 4
_hItem$ = -32						; size = 4
_hFree$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__OnDelete PROC						; COMDAT
; Line 1629
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1634
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1635
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1636
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@OnDelete:
; Line 1637
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN4@OnDelete
; Line 1638
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hFree$[ebp], eax
; Line 1639
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1640
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN1@OnDelete
; Line 1641
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN1@OnDelete:
; Line 1643
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1644
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1645
	mov	eax, DWORD PTR _hFree$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 1646
	jmp	SHORT $LN3@OnDelete
$LN4@OnDelete:
; Line 1647
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnDelete ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_OwnerDraw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_OwnerDraw
_TEXT	SEGMENT
tv65 = -196						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_TREEVIEW_OwnerDraw PROC				; COMDAT
; Line 1901
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1902
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 1
	je	SHORT $LN1@TREEVIEW_O
	cmp	DWORD PTR tv65[ebp], 24			; 00000018H
	je	SHORT $LN3@TREEVIEW_O
	cmp	DWORD PTR tv65[ebp], 25			; 00000019H
	je	SHORT $LN2@TREEVIEW_O
	jmp	SHORT $LN4@TREEVIEW_O
$LN3@TREEVIEW_O:
; Line 1904
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__OnOwnerdraw_GetXSize
	add	esp, 4
	jmp	SHORT $LN6@TREEVIEW_O
$LN2@TREEVIEW_O:
; Line 1906
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__OnOwnerdraw_GetYSize
	add	esp, 4
	jmp	SHORT $LN6@TREEVIEW_O
$LN1@TREEVIEW_O:
; Line 1908
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__OnOwnerdraw_Paint
	add	esp, 4
	jmp	SHORT $LN6@TREEVIEW_O
$LN4@TREEVIEW_O:
; Line 1910
	xor	eax, eax
$LN6@TREEVIEW_O:
; Line 1911
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_OwnerDraw ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnOwnerdraw_GetXSize
_TEXT	SEGMENT
_xSize$ = -20						; size = 4
_pItem$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__OnOwnerdraw_GetXSize PROC				; COMDAT
; Line 784
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 787
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 788
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+20]
	mov	DWORD PTR _xSize$[ebp], ecx
; Line 789
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 790
	mov	eax, DWORD PTR _xSize$[ebp]
; Line 791
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnOwnerdraw_GetXSize ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnOwnerdraw_GetYSize
_TEXT	SEGMENT
tv86 = -280						; size = 4
tv82 = -280						; size = 4
_SizeY$12953 = -80					; size = 4
_r$ = -68						; size = 4
_BitmapSizeY$ = -56					; size = 4
_FontSizeY$ = -44					; size = 4
_pItem$ = -32						; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__OnOwnerdraw_GetYSize PROC				; COMDAT
; Line 800
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 807
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 808
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 809
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 810
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+22]
	test	ecx, ecx
	je	SHORT $LN2@OnOwnerdra
; Line 811
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+22]
	mov	DWORD PTR _r$[ebp], ecx
; Line 812
	jmp	SHORT $LN1@OnOwnerdra
$LN2@OnOwnerdra:
; Line 818
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	movzx	edx, BYTE PTR [ecx+24]
	mov	DWORD PTR _FontSizeY$[ebp], edx
; Line 819
	mov	eax, DWORD PTR _pItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetItemBitmapSizeY
	add	esp, 8
	mov	DWORD PTR _BitmapSizeY$[ebp], eax
; Line 823
	mov	eax, DWORD PTR _BitmapSizeY$[ebp]
	cmp	eax, DWORD PTR _FontSizeY$[ebp]
	jle	SHORT $LN5@OnOwnerdra
	mov	ecx, DWORD PTR _BitmapSizeY$[ebp]
	mov	DWORD PTR tv82[ebp], ecx
	jmp	SHORT $LN6@OnOwnerdra
$LN5@OnOwnerdra:
	mov	edx, DWORD PTR _FontSizeY$[ebp]
	mov	DWORD PTR tv82[ebp], edx
$LN6@OnOwnerdra:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR _SizeY$12953[ebp], eax
; Line 824
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	cmp	ecx, DWORD PTR _SizeY$12953[ebp]
	jle	SHORT $LN7@OnOwnerdra
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+156]
	mov	DWORD PTR tv86[ebp], eax
	jmp	SHORT $LN8@OnOwnerdra
$LN7@OnOwnerdra:
	mov	ecx, DWORD PTR _SizeY$12953[ebp]
	mov	DWORD PTR tv86[ebp], ecx
$LN8@OnOwnerdra:
	mov	edx, DWORD PTR tv86[ebp]
	mov	DWORD PTR _r$[ebp], edx
$LN1@OnOwnerdra:
; Line 840
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 841
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 842
	mov	eax, DWORD PTR _r$[ebp]
; Line 843
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnOwnerdraw_GetYSize ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemBitmapSizeY
_TEXT	SEGMENT
tv88 = -256						; size = 4
_IndexItem$12664 = -56					; size = 4
_pBm$ = -44						; size = 4
_apBm$ = -32						; size = 4
_BitmapSizeButton$ = -20				; size = 4
_BitmapSizeItem$ = -8					; size = 4
_pObj$ = 8						; size = 4
_pItem$ = 12						; size = 4
__GetItemBitmapSizeY PROC				; COMDAT
; Line 220
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 225
	mov	eax, DWORD PTR _pItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetBitmapPointer
	add	esp, 8
	mov	DWORD PTR _apBm$[ebp], eax
; Line 226
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN4@GetItemBit
; Line 228
	mov	DWORD PTR _BitmapSizeItem$[ebp], 0
; Line 229
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	je	SHORT $LN3@GetItemBit
; Line 230
	mov	DWORD PTR _IndexItem$12664[ebp], 1
; Line 231
	jmp	SHORT $LN2@GetItemBit
$LN3@GetItemBit:
; Line 232
	mov	DWORD PTR _IndexItem$12664[ebp], 0
$LN2@GetItemBit:
; Line 234
	mov	eax, DWORD PTR _IndexItem$12664[ebp]
	push	eax
	mov	ecx, DWORD PTR _apBm$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetBitmap
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBm$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _BitmapSizeButton$[ebp], ecx
; Line 236
	jmp	SHORT $LN1@GetItemBit
$LN4@GetItemBit:
; Line 237
	mov	DWORD PTR _BitmapSizeButton$[ebp], 0
; Line 238
	push	2
	mov	eax, DWORD PTR _apBm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetBitmap
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBm$[ebp], eax
; Line 239
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _BitmapSizeItem$[ebp], ecx
$LN1@GetItemBit:
; Line 241
	mov	eax, DWORD PTR _BitmapSizeButton$[ebp]
	cmp	eax, DWORD PTR _BitmapSizeItem$[ebp]
	jle	SHORT $LN7@GetItemBit
	mov	ecx, DWORD PTR _BitmapSizeButton$[ebp]
	mov	DWORD PTR tv88[ebp], ecx
	jmp	SHORT $LN8@GetItemBit
$LN7@GetItemBit:
	mov	edx, DWORD PTR _BitmapSizeItem$[ebp]
	mov	DWORD PTR tv88[ebp], edx
$LN8@GetItemBit:
	mov	eax, DWORD PTR tv88[ebp]
; Line 242
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemBitmapSizeY ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetBitmapPointer
_TEXT	SEGMENT
_pItemData$12634 = -20					; size = 4
_apBm$ = -8						; size = 4
_pObj$ = 8						; size = 4
_pItem$ = 12						; size = 4
__GetBitmapPointer PROC					; COMDAT
; Line 189
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@GetBitmapP
; Line 193
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemData$12634[ebp], eax
; Line 194
	mov	eax, DWORD PTR _pItemData$12634[ebp]
	mov	DWORD PTR _apBm$[ebp], eax
; Line 195
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemData$12634[ebp], 0
; Line 196
	jmp	SHORT $LN1@GetBitmapP
$LN2@GetBitmapP:
; Line 197
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 128				; 00000080H
	mov	DWORD PTR _apBm$[ebp], eax
$LN1@GetBitmapP:
; Line 199
	mov	eax, DWORD PTR _apBm$[ebp]
; Line 200
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetBitmapPointer ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetBitmap
_TEXT	SEGMENT
_pBm$ = -8						; size = 4
_pObj$ = 8						; size = 4
_ppBm$ = 12						; size = 4
_Index$ = 16						; size = 4
__GetBitmap PROC					; COMDAT
; Line 206
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 208
	cmp	DWORD PTR _Index$[ebp], 3
	je	SHORT $LN2@GetBitmap
	cmp	DWORD PTR _Index$[ebp], 4
	je	SHORT $LN2@GetBitmap
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _ppBm$[ebp]
	cmp	DWORD PTR [ecx+eax*4], 0
	jne	SHORT $LN3@GetBitmap
$LN2@GetBitmap:
; Line 209
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	mov	DWORD PTR _pBm$[ebp], edx
; Line 210
	jmp	SHORT $LN1@GetBitmap
$LN3@GetBitmap:
; Line 211
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _ppBm$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pBm$[ebp], edx
$LN1@GetBitmap:
; Line 213
	mov	eax, DWORD PTR _pBm$[ebp]
; Line 214
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetBitmap ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_ClearRect:PROC
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetBkColor:PROC
EXTRN	_GUI_GetFontSizeY:PROC
EXTRN	_GUI_FillRectEx:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_WM__IsEnabled:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnOwnerdraw_Paint
_TEXT	SEGMENT
_pNext$13003 = -256					; size = 4
_Connectors$ = -244					; size = 2
_HasChild$ = -232					; size = 4
_FontHeight$ = -220					; size = 4
_Index1$ = -208						; size = 4
_Index0$ = -196						; size = 4
_Index$ = -184						; size = 4
_ySizeBm$ = -172					; size = 4
_xSizeBm$ = -160					; size = 4
_xEnd$ = -148						; size = 4
_yMid$ = -136						; size = 4
_xMid$ = -124						; size = 4
_xPos$ = -112						; size = 4
_rFill$ = -100						; size = 8
_rText$ = -84						; size = 8
_pBm$ = -68						; size = 4
_apBm$ = -56						; size = 4
_pItem$ = -44						; size = 4
_hItem$ = -32						; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__OnOwnerdraw_Paint PROC				; COMDAT
; Line 852
	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 866
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 867
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 868
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _hItem$[ebp], edx
; Line 869
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 873
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	$LN48@OnOwnerdra@2
; Line 874
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN47@OnOwnerdra@2
; Line 875
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN46@OnOwnerdra@2
; Line 876
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN45@OnOwnerdra@2
; Line 877
	mov	DWORD PTR _Index$[ebp], 1
; Line 878
	jmp	SHORT $LN44@OnOwnerdra@2
$LN45@OnOwnerdra@2:
; Line 879
	mov	DWORD PTR _Index$[ebp], 0
$LN44@OnOwnerdra@2:
; Line 881
	jmp	SHORT $LN43@OnOwnerdra@2
$LN46@OnOwnerdra@2:
; Line 882
	mov	DWORD PTR _Index$[ebp], 0
$LN43@OnOwnerdra@2:
; Line 884
	jmp	SHORT $LN42@OnOwnerdra@2
$LN47@OnOwnerdra@2:
; Line 885
	mov	DWORD PTR _Index$[ebp], 2
$LN42@OnOwnerdra@2:
; Line 887
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+12]
	mov	WORD PTR _rFill$[ebp], cx
; Line 888
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _rFill$[ebp+2], cx
; Line 889
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+12]
	add	edx, ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	lea	edx, DWORD PTR [edx+ecx-1]
	mov	WORD PTR _rFill$[ebp+4], dx
; Line 890
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _rFill$[ebp+6], cx
; Line 891
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	push	edx
	call	_GUI_SetColor
	add	esp, 4
; Line 892
	lea	eax, DWORD PTR _rFill$[ebp]
	push	eax
	call	_GUI_FillRectEx
	add	esp, 4
$LN48@OnOwnerdra@2:
; Line 897
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN41@OnOwnerdra@2
; Line 898
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN40@OnOwnerdra@2
; Line 899
	mov	DWORD PTR _Index$[ebp], 1
; Line 900
	jmp	SHORT $LN39@OnOwnerdra@2
$LN40@OnOwnerdra@2:
; Line 901
	mov	DWORD PTR _Index$[ebp], 0
$LN39@OnOwnerdra@2:
; Line 903
	jmp	SHORT $LN38@OnOwnerdra@2
$LN41@OnOwnerdra@2:
; Line 904
	mov	DWORD PTR _Index$[ebp], 2
$LN38@OnOwnerdra@2:
; Line 906
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 907
	call	_GUI_GetFontSizeY
	mov	DWORD PTR _FontHeight$[ebp], eax
; Line 908
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN37@OnOwnerdra@2
; Line 909
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+12]
	add	edx, ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	add	edx, DWORD PTR [eax+152]
	mov	WORD PTR _rFill$[ebp], dx
; Line 910
	jmp	SHORT $LN36@OnOwnerdra@2
$LN37@OnOwnerdra@2:
; Line 911
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+12]
	mov	WORD PTR _rFill$[ebp], cx
$LN36@OnOwnerdra@2:
; Line 913
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _rFill$[ebp+2], cx
; Line 914
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+20]
	mov	WORD PTR _rFill$[ebp+4], cx
; Line 915
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _rFill$[ebp+6], cx
; Line 916
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+12]
	add	edx, ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	add	edx, DWORD PTR [eax+152]
	mov	WORD PTR _rText$[ebp], dx
; Line 917
	movsx	esi, WORD PTR _rText$[ebp]
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	lea	ecx, DWORD PTR [esi+eax-1]
	mov	WORD PTR _rText$[ebp+4], cx
; Line 918
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	add	eax, 1
	sub	eax, DWORD PTR _FontHeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [edx+16]
	mov	WORD PTR _rText$[ebp+2], ax
; Line 919
	movsx	eax, WORD PTR _rText$[ebp+2]
	mov	ecx, DWORD PTR _FontHeight$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _rText$[ebp+6], dx
; Line 920
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+100]
	push	edx
	call	_GUI_SetColor
	add	esp, 4
; Line 921
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	push	edx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 922
	push	0
	lea	eax, DWORD PTR _rText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 29					; 0000001dH
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 926
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN35@OnOwnerdra@2
; Line 927
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN34@OnOwnerdra@2
; Line 928
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN33@OnOwnerdra@2
; Line 929
	mov	DWORD PTR _Index$[ebp], 1
; Line 930
	jmp	SHORT $LN32@OnOwnerdra@2
$LN33@OnOwnerdra@2:
; Line 931
	mov	DWORD PTR _Index$[ebp], 0
$LN32@OnOwnerdra@2:
; Line 933
	jmp	SHORT $LN31@OnOwnerdra@2
$LN34@OnOwnerdra@2:
; Line 934
	mov	DWORD PTR _Index$[ebp], 0
$LN31@OnOwnerdra@2:
; Line 936
	jmp	SHORT $LN30@OnOwnerdra@2
$LN35@OnOwnerdra@2:
; Line 937
	mov	DWORD PTR _Index$[ebp], 2
$LN30@OnOwnerdra@2:
; Line 939
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	push	edx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 940
	movsx	eax, WORD PTR _rText$[ebp+2]
	sub	eax, 1
	push	eax
	movsx	ecx, WORD PTR _rFill$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _rFill$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _rFill$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 941
	movsx	eax, WORD PTR _rText$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _rText$[ebp]
	sub	ecx, 1
	push	ecx
	movsx	edx, WORD PTR _rText$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _rFill$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 942
	movsx	eax, WORD PTR _rText$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _rFill$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _rText$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _rText$[ebp+4]
	add	eax, 1
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 943
	movsx	eax, WORD PTR _rFill$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _rFill$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _rText$[ebp+6]
	add	edx, 1
	push	edx
	movsx	eax, WORD PTR _rFill$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 947
	mov	DWORD PTR _HasChild$[ebp], 0
; Line 948
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN29@OnOwnerdra@2
; Line 949
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN29@OnOwnerdra@2
; Line 951
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pNext$13003[ebp], eax
; Line 952
	mov	eax, DWORD PTR _pNext$13003[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pItem$[ebp]
	movzx	eax, BYTE PTR [edx+28]
	cmp	ecx, eax
	jle	SHORT $LN27@OnOwnerdra@2
; Line 953
	mov	DWORD PTR _HasChild$[ebp], 1
$LN27@OnOwnerdra@2:
; Line 955
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pNext$13003[ebp], 0
$LN29@OnOwnerdra@2:
; Line 961
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 1
	jne	$LN26@OnOwnerdra@2
; Line 962
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN25@OnOwnerdra@2
; Line 963
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN24@OnOwnerdra@2
; Line 964
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN23@OnOwnerdra@2
; Line 965
	mov	DWORD PTR _Index$[ebp], 1
; Line 966
	jmp	SHORT $LN22@OnOwnerdra@2
$LN23@OnOwnerdra@2:
; Line 967
	mov	DWORD PTR _Index$[ebp], 0
$LN22@OnOwnerdra@2:
; Line 969
	jmp	SHORT $LN21@OnOwnerdra@2
$LN24@OnOwnerdra@2:
; Line 970
	mov	DWORD PTR _Index$[ebp], 0
$LN21@OnOwnerdra@2:
; Line 972
	jmp	SHORT $LN20@OnOwnerdra@2
$LN25@OnOwnerdra@2:
; Line 973
	mov	DWORD PTR _Index$[ebp], 2
$LN20@OnOwnerdra@2:
; Line 975
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+112]
	push	edx
	call	_GUI_SetColor
	add	esp, 4
; Line 976
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pObj$[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+12]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _xEnd$[ebp], eax
; Line 977
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _xEnd$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xMid$[ebp], ecx
; Line 978
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [ecx+16]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yMid$[ebp], eax
; Line 979
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, 1
	jl	$LN19@OnOwnerdra@2
; Line 981
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 4
	je	SHORT $LN18@OnOwnerdra@2
; Line 982
	mov	eax, DWORD PTR _yMid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _xMid$[ebp]
	push	eax
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 983
	jmp	SHORT $LN17@OnOwnerdra@2
$LN18@OnOwnerdra@2:
; Line 984
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _xMid$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN17@OnOwnerdra@2:
; Line 986
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN16@OnOwnerdra@2
; Line 987
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _xEnd$[ebp]
	mov	DWORD PTR _xEnd$[ebp], eax
; Line 988
	cmp	DWORD PTR _HasChild$[ebp], 0
	je	SHORT $LN15@OnOwnerdra@2
; Line 989
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	je	SHORT $LN14@OnOwnerdra@2
	cmp	DWORD PTR _HasChild$[ebp], 0
	je	SHORT $LN14@OnOwnerdra@2
; Line 990
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _yMid$[ebp]
	push	edx
	mov	eax, DWORD PTR _xEnd$[ebp]
	push	eax
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN14@OnOwnerdra@2:
; Line 992
	jmp	SHORT $LN13@OnOwnerdra@2
$LN15@OnOwnerdra@2:
; Line 993
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _xEnd$[ebp]
	mov	DWORD PTR _xEnd$[ebp], eax
$LN13@OnOwnerdra@2:
; Line 995
	jmp	SHORT $LN12@OnOwnerdra@2
$LN16@OnOwnerdra@2:
; Line 996
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [eax+148]
	sar	ecx, 1
	add	ecx, DWORD PTR _xEnd$[ebp]
	mov	DWORD PTR _xEnd$[ebp], ecx
$LN12@OnOwnerdra@2:
; Line 999
	mov	eax, DWORD PTR _xEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMid$[ebp]
	push	ecx
	mov	edx, DWORD PTR _yMid$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 1001
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR [eax+26]
	mov	WORD PTR _Connectors$[ebp], cx
; Line 1002
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	lea	eax, DWORD PTR [edx+eax-1]
	mov	DWORD PTR _xMid$[ebp], eax
$LN11@OnOwnerdra@2:
; Line 1003
	movzx	eax, WORD PTR _Connectors$[ebp]
	test	eax, eax
	je	SHORT $LN10@OnOwnerdra@2
; Line 1004
	movzx	eax, WORD PTR _Connectors$[ebp]
	and	eax, 1
	je	SHORT $LN9@OnOwnerdra@2
; Line 1005
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _xMid$[ebp]
	push	ecx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN9@OnOwnerdra@2:
; Line 1007
	mov	ax, WORD PTR _Connectors$[ebp]
	shr	ax, 1
	mov	WORD PTR _Connectors$[ebp], ax
; Line 1008
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xMid$[ebp]
	add	ecx, DWORD PTR [eax+148]
	mov	DWORD PTR _xMid$[ebp], ecx
; Line 1009
	jmp	SHORT $LN11@OnOwnerdra@2
$LN10@OnOwnerdra@2:
; Line 1010
	jmp	SHORT $LN26@OnOwnerdra@2
$LN19@OnOwnerdra@2:
; Line 1011
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN26@OnOwnerdra@2
; Line 1012
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _xEnd$[ebp]
	mov	DWORD PTR _xEnd$[ebp], eax
; Line 1013
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	je	SHORT $LN26@OnOwnerdra@2
	cmp	DWORD PTR _HasChild$[ebp], 0
	je	SHORT $LN26@OnOwnerdra@2
; Line 1014
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _yMid$[ebp]
	push	edx
	mov	eax, DWORD PTR _xEnd$[ebp]
	push	eax
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN26@OnOwnerdra@2:
; Line 1022
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pObj$[ebp]
	imul	ecx, DWORD PTR [edx+148]
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+12]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 1023
	mov	eax, DWORD PTR _pItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetBitmapPointer
	add	esp, 8
	mov	DWORD PTR _apBm$[ebp], eax
; Line 1024
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	$LN5@OnOwnerdra@2
; Line 1025
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	je	SHORT $LN4@OnOwnerdra@2
	cmp	DWORD PTR _HasChild$[ebp], 0
	je	SHORT $LN4@OnOwnerdra@2
; Line 1026
	mov	DWORD PTR _Index0$[ebp], 4
; Line 1027
	mov	DWORD PTR _Index1$[ebp], 1
; Line 1028
	jmp	SHORT $LN3@OnOwnerdra@2
$LN4@OnOwnerdra@2:
; Line 1029
	mov	DWORD PTR _Index0$[ebp], 3
; Line 1030
	mov	DWORD PTR _Index1$[ebp], 0
$LN3@OnOwnerdra@2:
; Line 1035
	cmp	DWORD PTR _HasChild$[ebp], 0
	je	SHORT $LN2@OnOwnerdra@2
; Line 1036
	mov	eax, DWORD PTR _Index0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _apBm$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetBitmap
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBm$[ebp], eax
; Line 1037
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _xSizeBm$[ebp], ecx
; Line 1038
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _ySizeBm$[ebp], ecx
; Line 1041
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR _ySizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+148]
	sub	eax, DWORD PTR _xSizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _xPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBm$[ebp]
	push	ecx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
$LN2@OnOwnerdra@2:
; Line 1046
	mov	eax, DWORD PTR _Index1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _apBm$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetBitmap
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBm$[ebp], eax
; Line 1047
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _xSizeBm$[ebp], ecx
; Line 1048
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _ySizeBm$[ebp], ecx
; Line 1051
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR _ySizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xPos$[ebp]
	add	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+148]
	sub	eax, DWORD PTR _xSizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	push	ecx
	mov	eax, DWORD PTR _pBm$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1052
	jmp	SHORT $LN1@OnOwnerdra@2
$LN5@OnOwnerdra@2:
; Line 1056
	push	2
	mov	eax, DWORD PTR _apBm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetBitmap
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pBm$[ebp], eax
; Line 1057
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _xSizeBm$[ebp], ecx
; Line 1058
	mov	eax, DWORD PTR _pBm$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _ySizeBm$[ebp], ecx
; Line 1061
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	sub	eax, DWORD PTR _ySizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [edx+16]
	push	eax
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xPos$[ebp]
	add	ecx, DWORD PTR [eax+148]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+148]
	sub	eax, DWORD PTR _xSizeBm$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	push	ecx
	mov	eax, DWORD PTR _pBm$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
$LN1@OnOwnerdra@2:
; Line 1063
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1064
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1065
	xor	eax, eax
; Line 1066
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN54@OnOwnerdra@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN54@OnOwnerdra@2:
	DD	2
	DD	$LN53@OnOwnerdra@2
$LN53@OnOwnerdra@2:
	DD	-84					; ffffffacH
	DD	8
	DD	$LN51@OnOwnerdra@2
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN52@OnOwnerdra@2
$LN52@OnOwnerdra@2:
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	0
$LN51@OnOwnerdra@2:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
__OnOwnerdraw_Paint ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_CreateEx
EXTRN	_WIDGET__Init:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_CreateEx
_TEXT	SEGMENT
_pObj$13510 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_TREEVIEW_CreateEx PROC					; COMDAT
; Line 1917
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1921
	push	152					; 00000098H
	push	OFFSET _TREEVIEW_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 1922
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@TREEVIEW_C@2
; Line 1923
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13510[ebp], eax
; Line 1925
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13510[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 1927
	mov	eax, DWORD PTR _pObj$13510[ebp]
	mov	DWORD PTR [eax+196], 1414677829		; 54524545H
; Line 1928
	mov	edi, DWORD PTR _pObj$13510[ebp]
	add	edi, 84					; 00000054H
	mov	ecx, 19					; 00000013H
	mov	esi, OFFSET _TREEVIEW__DefaultProps
	rep movsd
; Line 1929
	mov	eax, DWORD PTR _pObj$13510[ebp]
	mov	DWORD PTR [eax+56], OFFSET _TREEVIEW_OwnerDraw
; Line 1930
	mov	eax, DWORD PTR _pObj$13510[ebp]
	mov	cx, WORD PTR _ExFlags$[ebp]
	mov	WORD PTR [eax+160], cx
; Line 1931
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13510[ebp], 0
$LN1@TREEVIEW_C@2:
; Line 1934
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 1935
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_CreateEx ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_Create
EXTRN	_strcpy:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_Create
_TEXT	SEGMENT
_hItem$ = -20						; size = 4
_pItem$ = -8						; size = 4
_IsNode$ = 8						; size = 4
_s$ = 12						; size = 4
_UserData$ = 16						; size = 4
_TREEVIEW_ITEM_Create PROC				; COMDAT
; Line 1941
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1944
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 32					; 00000020H
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hItem$[ebp], eax
; Line 1945
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I
; Line 1946
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1947
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _UserData$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1948
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 29					; 0000001dH
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1949
	cmp	DWORD PTR _IsNode$[ebp], 0
	je	SHORT $LN1@TREEVIEW_I
; Line 1950
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	or	ecx, 1
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [edx+24], cx
$LN1@TREEVIEW_I:
; Line 1952
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN2@TREEVIEW_I:
; Line 1954
	mov	eax, DWORD PTR _hItem$[ebp]
; Line 1955
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_Create ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_AttachItem
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_AttachItem
_TEXT	SEGMENT
$T14118 = -329						; size = 1
$T14119 = -317						; size = 1
_r$ = -116						; size = 4
_LevelNew$ = -104					; size = 4
_LevelOld$ = -92					; size = 4
_hItemTemp$ = -80					; size = 4
_pItemLast$ = -68					; size = 4
_hItemLast$ = -56					; size = 4
_pItemNext$ = -44					; size = 4
_hItemNext$ = -32					; size = 4
_pItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hItem$ = 12						; size = 4
_hItemAt$ = 16						; size = 4
_Position$ = 20						; size = 4
_TREEVIEW_AttachItem PROC				; COMDAT
; Line 1961
	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T14119[ebp], 0
	mov	BYTE PTR $T14118[ebp], 0
; Line 1970
	mov	DWORD PTR _r$[ebp], 0
; Line 1971
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN10@TREEVIEW_A
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN10@TREEVIEW_A
; Line 1973
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1974
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemTemp$[ebp], ecx
; Line 1975
	cmp	DWORD PTR _hItemTemp$[ebp], 0
	je	SHORT $LN9@TREEVIEW_A
; Line 1976
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetLastNodeItem
	add	esp, 4
	mov	BYTE PTR $T14118[ebp], 1
	mov	DWORD PTR _hItemLast$[ebp], eax
; Line 1977
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	BYTE PTR $T14119[ebp], 1
	mov	DWORD PTR _LevelOld$[ebp], ecx
$LN9@TREEVIEW_A:
; Line 1979
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	$LN8@TREEVIEW_A
; Line 1980
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1981
	mov	eax, DWORD PTR _Position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hItemAt$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hItem$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__LinkItem
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1982
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1983
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1984
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _LevelNew$[ebp], ecx
; Line 1985
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 1988
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	esi, BYTE PTR [eax+28]
	add	esi, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	imul	esi, DWORD PTR [ecx+148]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	esi, DWORD PTR [edx+152]
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	add	esi, eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [ecx+20], si
; Line 1989
	cmp	DWORD PTR _hItemTemp$[ebp], 0
	je	$LN7@TREEVIEW_A
	cmp	DWORD PTR _r$[ebp], 0
	jne	$LN7@TREEVIEW_A
; Line 1990
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 1991
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _hItemTemp$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1992
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax], ecx
$LN6@TREEVIEW_A:
; Line 1994
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+180], ecx
; Line 1995
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1996
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN5@TREEVIEW_A
; Line 1997
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1998
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1999
	cmp	BYTE PTR $T14119[ebp], 0
	jne	SHORT $LN13@TREEVIEW_A
	push	OFFSET $LN14@TREEVIEW_A
	call	__RTC_UninitUse
	add	esp, 4
$LN13@TREEVIEW_A:
	mov	eax, DWORD PTR _LevelNew$[ebp]
	sub	eax, DWORD PTR _LevelOld$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	movzx	edx, BYTE PTR [ecx+28]
	add	edx, eax
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	BYTE PTR [eax+28], dl
; Line 2000
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax], ecx
$LN5@TREEVIEW_A:
; Line 2002
	cmp	BYTE PTR $T14118[ebp], 0
	jne	SHORT $LN15@TREEVIEW_A
	push	OFFSET $LN16@TREEVIEW_A
	call	__RTC_UninitUse
	add	esp, 4
$LN15@TREEVIEW_A:
	mov	eax, DWORD PTR _hItem$[ebp]
	cmp	eax, DWORD PTR _hItemLast$[ebp]
	jne	$LN6@TREEVIEW_A
; Line 2003
	cmp	BYTE PTR $T14118[ebp], 0
	jne	SHORT $LN17@TREEVIEW_A
	push	OFFSET $LN16@TREEVIEW_A
	call	__RTC_UninitUse
	add	esp, 4
$LN17@TREEVIEW_A:
	mov	eax, DWORD PTR _hItemLast$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemLast$[ebp], eax
; Line 2004
	mov	eax, DWORD PTR _pItemLast$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2005
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemLast$[ebp], 0
; Line 2006
	cmp	DWORD PTR _hItemNext$[ebp], 0
	je	SHORT $LN7@TREEVIEW_A
; Line 2007
	mov	eax, DWORD PTR _hItemNext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 2008
	cmp	BYTE PTR $T14118[ebp], 0
	jne	SHORT $LN18@TREEVIEW_A
	push	OFFSET $LN16@TREEVIEW_A
	call	__RTC_UninitUse
	add	esp, 4
$LN18@TREEVIEW_A:
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemLast$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2009
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
$LN7@TREEVIEW_A:
; Line 2012
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 2013
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2014
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 2015
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 2016
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 2017
	jmp	SHORT $LN10@TREEVIEW_A
$LN8@TREEVIEW_A:
; Line 2018
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2019
	push	OFFSET $SG13568
	call	_GUI_ErrorOut
	add	esp, 4
$LN10@TREEVIEW_A:
; Line 2023
	mov	eax, DWORD PTR _r$[ebp]
; Line 2024
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@TREEVIEW_A:
$LN16@TREEVIEW_A:
	DB	104					; 00000068H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN14@TREEVIEW_A:
	DB	76					; 0000004cH
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	0
_TREEVIEW_AttachItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetLastNodeItem
_TEXT	SEGMENT
_Level$ = -56						; size = 4
_r$ = -44						; size = 4
_pItemNode$ = -32					; size = 4
_hItemI$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
__GetLastNodeItem PROC					; COMDAT
; Line 1257
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1264
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNode$[ebp], eax
; Line 1265
	mov	eax, DWORD PTR _pItemNode$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 1266
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 1267
	mov	eax, DWORD PTR _pItemNode$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	$LN6@GetLastNod
; Line 1268
	mov	eax, DWORD PTR _pItemNode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemI$[ebp], ecx
; Line 1269
	cmp	DWORD PTR _hItemI$[ebp], 0
	je	SHORT $LN6@GetLastNod
; Line 1270
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
$LN4@GetLastNod:
; Line 1271
	cmp	DWORD PTR _hItemI$[ebp], 0
	je	SHORT $LN3@GetLastNod
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jle	SHORT $LN3@GetLastNod
; Line 1272
	mov	eax, DWORD PTR _hItemI$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 1273
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemI$[ebp], ecx
; Line 1274
	cmp	DWORD PTR _hItemI$[ebp], 0
	je	SHORT $LN2@GetLastNod
; Line 1275
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1276
	mov	eax, DWORD PTR _hItemI$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1277
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jle	SHORT $LN2@GetLastNod
; Line 1278
	mov	eax, DWORD PTR _hItemI$[ebp]
	mov	DWORD PTR _r$[ebp], eax
$LN2@GetLastNod:
; Line 1281
	jmp	SHORT $LN4@GetLastNod
$LN3@GetLastNod:
; Line 1282
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN6@GetLastNod:
; Line 1285
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNode$[ebp], 0
; Line 1286
	mov	eax, DWORD PTR _r$[ebp]
; Line 1287
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetLastNodeItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __LinkItem
_TEXT	SEGMENT
_r$ = -92						; size = 4
_Level$ = -80						; size = 4
_pItemNext$ = -68					; size = 4
_hItemNext$ = -56					; size = 4
_pItemPrev$ = -44					; size = 4
_hItemPrev$ = -32					; size = 4
_pItemNew$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hItemNew$ = 12						; size = 4
_hItemAt$ = 16						; size = 4
_Position$ = 20						; size = 4
__LinkItem PROC						; COMDAT
; Line 1653
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1661
	mov	DWORD PTR _r$[ebp], 0
; Line 1662
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1663
	mov	eax, DWORD PTR _hItemNew$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNew$[ebp], eax
; Line 1664
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+180], 0
	je	$LN23@LinkItem
; Line 1668
	cmp	DWORD PTR _hItemAt$[ebp], 0
	je	$LN22@LinkItem
; Line 1669
	cmp	DWORD PTR _Position$[ebp], 2
	jne	$LN21@LinkItem
; Line 1670
	mov	eax, DWORD PTR _hItemAt$[ebp]
	mov	DWORD PTR _hItemPrev$[ebp], eax
; Line 1671
	mov	eax, DWORD PTR _hItemPrev$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 1672
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN20@LinkItem
; Line 1673
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 1674
	cmp	DWORD PTR _hItemNext$[ebp], 0
	je	SHORT $LN19@LinkItem
; Line 1675
	mov	eax, DWORD PTR _hItemNext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 1676
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1677
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
; Line 1678
	jmp	SHORT $LN18@LinkItem
$LN19@LinkItem:
; Line 1679
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+168], ecx
$LN18@LinkItem:
; Line 1681
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1682
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1683
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemPrev$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1684
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	add	ecx, 1
	mov	edx, DWORD PTR _pItemNew$[ebp]
	mov	BYTE PTR [edx+28], cl
; Line 1685
	jmp	SHORT $LN17@LinkItem
$LN20@LinkItem:
; Line 1686
	push	OFFSET $SG13374
	call	_GUI_ErrorOut
	add	esp, 4
; Line 1687
	mov	DWORD PTR _r$[ebp], 1
$LN17@LinkItem:
; Line 1689
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
	jmp	$LN16@LinkItem
$LN21@LinkItem:
; Line 1690
	cmp	DWORD PTR _Position$[ebp], 0
	jne	$LN15@LinkItem
; Line 1694
	mov	eax, DWORD PTR _hItemAt$[ebp]
	mov	DWORD PTR _hItemNext$[ebp], eax
; Line 1695
	mov	eax, DWORD PTR _hItemNext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 1696
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItemPrev$[ebp], ecx
; Line 1697
	cmp	DWORD PTR _hItemPrev$[ebp], 0
	je	SHORT $LN14@LinkItem
; Line 1698
	mov	eax, DWORD PTR _hItemPrev$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 1699
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1700
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
; Line 1701
	jmp	SHORT $LN13@LinkItem
$LN14@LinkItem:
; Line 1702
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+164], ecx
$LN13@LinkItem:
; Line 1704
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1705
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1706
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemPrev$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1707
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItemNext$[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl
; Line 1708
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
	jmp	$LN16@LinkItem
$LN15@LinkItem:
; Line 1709
	cmp	DWORD PTR _Position$[ebp], 1
	jne	$LN16@LinkItem
; Line 1713
	mov	eax, DWORD PTR _hItemAt$[ebp]
	mov	DWORD PTR _hItemPrev$[ebp], eax
; Line 1714
	mov	eax, DWORD PTR _hItemPrev$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 1715
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 1716
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
; Line 1717
	mov	eax, DWORD PTR _hItemAt$[ebp]
	push	eax
	call	__GetLastNodeItem
	add	esp, 4
	mov	DWORD PTR _hItemPrev$[ebp], eax
; Line 1718
	cmp	DWORD PTR _hItemPrev$[ebp], 0
	je	SHORT $LN10@LinkItem
; Line 1719
	mov	eax, DWORD PTR _hItemPrev$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 1720
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 1721
	jmp	SHORT $LN9@LinkItem
$LN10@LinkItem:
; Line 1722
	mov	eax, DWORD PTR _hItemAt$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 1723
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
$LN9@LinkItem:
; Line 1725
	cmp	DWORD PTR _hItemNext$[ebp], 0
	je	SHORT $LN8@LinkItem
; Line 1726
	mov	eax, DWORD PTR _hItemNext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 1727
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1728
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
; Line 1729
	jmp	SHORT $LN7@LinkItem
$LN8@LinkItem:
; Line 1730
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+168], ecx
$LN7@LinkItem:
; Line 1732
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1733
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 1734
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hItemPrev$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1735
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	cl, BYTE PTR _Level$[ebp]
	mov	BYTE PTR [eax+28], cl
; Line 1736
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
$LN16@LinkItem:
; Line 1738
	jmp	SHORT $LN6@LinkItem
$LN22@LinkItem:
; Line 1739
	push	OFFSET $SG13398
	call	_GUI_ErrorOut
	add	esp, 4
; Line 1740
	mov	DWORD PTR _r$[ebp], 1
$LN6@LinkItem:
; Line 1742
	jmp	SHORT $LN5@LinkItem
$LN23@LinkItem:
; Line 1746
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+164], 0
	jne	SHORT $LN4@LinkItem
; Line 1747
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+172], ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [edx+168], eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [ecx+164], edx
; Line 1748
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 1749
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 1750
	jmp	SHORT $LN5@LinkItem
$LN4@LinkItem:
; Line 1751
	push	OFFSET $SG13402
	call	_GUI_ErrorOut
	add	esp, 4
; Line 1752
	mov	DWORD PTR _r$[ebp], 1
$LN5@LinkItem:
; Line 1755
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN2@LinkItem
; Line 1756
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	add	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+180], ecx
; Line 1757
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1758
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1759
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNew$[ebp], 0
; Line 1760
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 1761
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 1762
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1763
	jmp	SHORT $LN1@LinkItem
$LN2@LinkItem:
; Line 1764
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1765
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNew$[ebp], 0
$LN1@LinkItem:
; Line 1767
	mov	eax, DWORD PTR _r$[ebp]
; Line 1768
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__LinkItem ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_InsertItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_InsertItem
_TEXT	SEGMENT
_hItemNew$ = -8						; size = 4
_hObj$ = 8						; size = 4
_IsNode$ = 12						; size = 4
_hItemPrev$ = 16					; size = 4
_Position$ = 20						; size = 4
_s$ = 24						; size = 4
_TREEVIEW_InsertItem PROC				; COMDAT
; Line 2030
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2033
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _IsNode$[ebp]
	push	ecx
	call	_TREEVIEW_ITEM_Create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 2034
	cmp	DWORD PTR _hItemNew$[ebp], 0
	je	SHORT $LN3@TREEVIEW_I@2
; Line 2035
	mov	eax, DWORD PTR _Position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hItemPrev$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hItemNew$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_AttachItem
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@TREEVIEW_I@2
; Line 2036
	mov	eax, DWORD PTR _hItemNew$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN2@TREEVIEW_I@2:
; Line 2038
	jmp	SHORT $LN1@TREEVIEW_I@2
$LN3@TREEVIEW_I@2:
; Line 2039
	push	OFFSET $SG13584
	call	_GUI_ErrorOut
	add	esp, 4
$LN1@TREEVIEW_I@2:
; Line 2042
	mov	eax, DWORD PTR _hItemNew$[ebp]
; Line 2043
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_InsertItem ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetAutoScrollH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetAutoScrollH
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_TREEVIEW_SetAutoScrollH PROC				; COMDAT
; Line 2049
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2050
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@TREEVIEW_S
; Line 2052
	push	4
	mov	eax, DWORD PTR _State$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetAutoScroll
	add	esp, 12					; 0000000cH
$LN2@TREEVIEW_S:
; Line 2055
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetAutoScrollH ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetAutoScroll
_TEXT	SEGMENT
_OldFlags$ = -29					; size = 1
_NewFlags$ = -17					; size = 1
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_Mask$ = 16						; size = 4
__SetAutoScroll PROC					; COMDAT
; Line 1603
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1606
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1607
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+160]
	mov	BYTE PTR _OldFlags$[ebp], cl
; Line 1608
	movzx	eax, BYTE PTR _OldFlags$[ebp]
	mov	ecx, DWORD PTR _Mask$[ebp]
	not	ecx
	and	eax, ecx
	mov	BYTE PTR _NewFlags$[ebp], al
; Line 1609
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1610
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN3@SetAutoScr
; Line 1611
	movzx	eax, BYTE PTR _NewFlags$[ebp]
	or	eax, DWORD PTR _Mask$[ebp]
	mov	BYTE PTR _NewFlags$[ebp], al
; Line 1612
	jmp	SHORT $LN2@SetAutoScr
$LN3@SetAutoScr:
; Line 1613
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetScrollbarH
	add	esp, 8
$LN2@SetAutoScr:
; Line 1615
	movzx	eax, BYTE PTR _OldFlags$[ebp]
	movzx	ecx, BYTE PTR _NewFlags$[ebp]
	cmp	eax, ecx
	je	SHORT $LN4@SetAutoScr
; Line 1616
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1617
	movzx	ax, BYTE PTR _NewFlags$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [ecx+160], ax
; Line 1618
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1619
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 1620
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 1621
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN4@SetAutoScr:
; Line 1623
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetAutoScroll ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetAutoScrollV
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetAutoScrollV
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_TREEVIEW_SetAutoScrollV PROC				; COMDAT
; Line 2061
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2062
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@TREEVIEW_S@2
; Line 2064
	push	8
	mov	eax, DWORD PTR _State$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetAutoScroll
	add	esp, 12					; 0000000cH
$LN2@TREEVIEW_S@2:
; Line 2067
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetAutoScrollV ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetHasLines
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetHasLines
_TEXT	SEGMENT
_pObj$13603 = -8					; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_TREEVIEW_SetHasLines PROC				; COMDAT
; Line 2073
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2074
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN6@TREEVIEW_S@3
; Line 2077
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13603[ebp], eax
; Line 2078
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN4@TREEVIEW_S@3
; Line 2079
	mov	eax, DWORD PTR _pObj$13603[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 1
	je	SHORT $LN3@TREEVIEW_S@3
; Line 2080
	mov	eax, DWORD PTR _pObj$13603[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _pObj$13603[ebp]
	mov	WORD PTR [edx+160], cx
; Line 2081
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN3@TREEVIEW_S@3:
; Line 2083
	jmp	SHORT $LN2@TREEVIEW_S@3
$LN4@TREEVIEW_S@3:
; Line 2084
	mov	eax, DWORD PTR _pObj$13603[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 1
	jne	SHORT $LN2@TREEVIEW_S@3
; Line 2085
	mov	eax, DWORD PTR _pObj$13603[ebp]
	movzx	ecx, WORD PTR [eax+160]
	or	ecx, 1
	mov	edx, DWORD PTR _pObj$13603[ebp]
	mov	WORD PTR [edx+160], cx
; Line 2086
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@TREEVIEW_S@3:
; Line 2089
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13603[ebp], 0
$LN6@TREEVIEW_S@3:
; Line 2092
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetHasLines ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_GetItem
EXTRN	_GUI_Warn:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_GetItem
_TEXT	SEGMENT
tv74 = -256						; size = 4
_pItemTemp$ = -56					; size = 4
_hItemTemp$ = -44					; size = 4
_pItem$ = -32						; size = 4
_hItemNext$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hItem$ = 12						; size = 4
_Flags$ = 16						; size = 4
_TREEVIEW_GetItem PROC					; COMDAT
; Line 2098
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2101
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2104
	mov	DWORD PTR _hItemNext$[ebp], 0
; Line 2105
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN24@TREEVIEW_G
; Line 2106
	cmp	DWORD PTR _Flags$[ebp], 0
	je	SHORT $LN24@TREEVIEW_G
	cmp	DWORD PTR _Flags$[ebp], 1
	je	SHORT $LN24@TREEVIEW_G
; Line 2107
	push	OFFSET $SG13624
	call	_GUI_ErrorOut
	add	esp, 4
; Line 2108
	xor	eax, eax
	jmp	$LN25@TREEVIEW_G
$LN24@TREEVIEW_G:
; Line 2111
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN22@TREEVIEW_G
; Line 2113
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2114
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN21@TREEVIEW_G
; Line 2115
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
$LN21@TREEVIEW_G:
; Line 2117
	mov	eax, DWORD PTR _Flags$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	cmp	DWORD PTR tv74[ebp], 5
	ja	$LN19@TREEVIEW_G
	mov	ecx, DWORD PTR tv74[ebp]
	jmp	DWORD PTR $LN27@TREEVIEW_G[ecx*4]
$LN18@TREEVIEW_G:
; Line 2119
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 2120
	jmp	$LN19@TREEVIEW_G
$LN17@TREEVIEW_G:
; Line 2122
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 2123
	jmp	$LN19@TREEVIEW_G
$LN16@TREEVIEW_G:
; Line 2125
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN15@TREEVIEW_G
; Line 2126
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetLastNodeItem
	add	esp, 4
	mov	DWORD PTR _hItemTemp$[ebp], eax
; Line 2127
	cmp	DWORD PTR _hItemTemp$[ebp], 0
	je	SHORT $LN15@TREEVIEW_G
; Line 2128
	mov	eax, DWORD PTR _hItemTemp$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemTemp$[ebp], eax
; Line 2129
	mov	eax, DWORD PTR _pItemTemp$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemTemp$[ebp], ecx
; Line 2130
	cmp	DWORD PTR _hItemTemp$[ebp], 0
	je	SHORT $LN13@TREEVIEW_G
; Line 2131
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemTemp$[ebp], 0
; Line 2132
	mov	eax, DWORD PTR _hItemTemp$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemTemp$[ebp], eax
; Line 2133
	mov	eax, DWORD PTR _pItemTemp$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pItem$[ebp]
	movzx	eax, BYTE PTR [edx+28]
	cmp	ecx, eax
	jne	SHORT $LN13@TREEVIEW_G
; Line 2134
	mov	eax, DWORD PTR _hItemTemp$[ebp]
	mov	DWORD PTR _hItemNext$[ebp], eax
$LN13@TREEVIEW_G:
; Line 2137
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemTemp$[ebp], 0
$LN15@TREEVIEW_G:
; Line 2140
	jmp	$LN19@TREEVIEW_G
$LN11@TREEVIEW_G:
; Line 2142
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN10@TREEVIEW_G
; Line 2143
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	push	ecx
	mov	edx, DWORD PTR _hItem$[ebp]
	push	edx
	call	__GetPrevItem
	add	esp, 8
	mov	DWORD PTR _hItemNext$[ebp], eax
$LN10@TREEVIEW_G:
; Line 2145
	jmp	SHORT $LN19@TREEVIEW_G
$LN9@TREEVIEW_G:
; Line 2147
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN8@TREEVIEW_G
; Line 2148
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	je	SHORT $LN7@TREEVIEW_G
; Line 2149
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 2150
	jmp	SHORT $LN8@TREEVIEW_G
$LN7@TREEVIEW_G:
; Line 2151
	push	OFFSET $SG13649
	call	_GUI_Warn
	add	esp, 4
$LN8@TREEVIEW_G:
; Line 2154
	jmp	SHORT $LN19@TREEVIEW_G
$LN5@TREEVIEW_G:
; Line 2156
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN19@TREEVIEW_G
; Line 2157
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	test	ecx, ecx
	je	SHORT $LN3@TREEVIEW_G
; Line 2158
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _hItem$[ebp]
	push	edx
	call	__GetPrevItem
	add	esp, 8
	mov	DWORD PTR _hItemNext$[ebp], eax
; Line 2159
	jmp	SHORT $LN19@TREEVIEW_G
$LN3@TREEVIEW_G:
; Line 2160
	push	OFFSET $SG13654
	call	_GUI_Warn
	add	esp, 4
$LN19@TREEVIEW_G:
; Line 2165
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN1@TREEVIEW_G
; Line 2166
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN1@TREEVIEW_G:
; Line 2168
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN22@TREEVIEW_G:
; Line 2171
	mov	eax, DWORD PTR _hItemNext$[ebp]
$LN25@TREEVIEW_G:
; Line 2172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN27@TREEVIEW_G:
	DD	$LN18@TREEVIEW_G
	DD	$LN17@TREEVIEW_G
	DD	$LN16@TREEVIEW_G
	DD	$LN11@TREEVIEW_G
	DD	$LN9@TREEVIEW_G
	DD	$LN5@TREEVIEW_G
_TREEVIEW_GetItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPrevItem
_TEXT	SEGMENT
_IsLeaf$ = -32						; size = 4
_pItem$ = -20						; size = 4
_r$ = -8						; size = 4
_hItem$ = 8						; size = 4
_Level$ = 12						; size = 4
__GetPrevItem PROC					; COMDAT
; Line 1306
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1307
	mov	DWORD PTR _r$[ebp], 0
; Line 1310
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1311
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1312
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	DWORD PTR _IsLeaf$[ebp], ecx
$LN4@GetPrevIte:
; Line 1313
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN3@GetPrevIte
; Line 1314
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1315
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1316
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jne	SHORT $LN2@GetPrevIte
; Line 1317
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 1318
	jmp	SHORT $LN3@GetPrevIte
$LN2@GetPrevIte:
; Line 1320
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	cmp	ecx, DWORD PTR _Level$[ebp]
	jge	SHORT $LN1@GetPrevIte
	cmp	DWORD PTR _IsLeaf$[ebp], 0
	je	SHORT $LN1@GetPrevIte
; Line 1321
	jmp	SHORT $LN3@GetPrevIte
$LN1@GetPrevIte:
; Line 1323
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 1324
	jmp	SHORT $LN4@GetPrevIte
$LN3@GetPrevIte:
; Line 1325
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1326
	mov	eax, DWORD PTR _r$[ebp]
; Line 1327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevItem ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_GetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_GetSel
_TEXT	SEGMENT
_pObj$ = -20						; size = 4
_hItem$ = -8						; size = 4
_hObj$ = 8						; size = 4
_TREEVIEW_GetSel PROC					; COMDAT
; Line 2178
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2179
	mov	DWORD PTR _hItem$[ebp], 0
; Line 2181
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@TREEVIEW_G@2
; Line 2183
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2184
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 2185
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@TREEVIEW_G@2:
; Line 2188
	mov	eax, DWORD PTR _hItem$[ebp]
; Line 2189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_GetSel ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetImage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetImage
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_pBitmap$ = 16						; size = 4
_TREEVIEW_SetImage PROC					; COMDAT
; Line 2195
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2197
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@TREEVIEW_S@4
; Line 2199
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2200
	cmp	DWORD PTR _Index$[ebp], 5
	jae	SHORT $LN1@TREEVIEW_S@4
; Line 2201
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _pBitmap$[ebp]
	mov	DWORD PTR [ecx+eax*4+128], edx
; Line 2202
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@TREEVIEW_S@4:
; Line 2204
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@TREEVIEW_S@4:
; Line 2207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetImage ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetSelMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetSelMode
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Mode$ = 12						; size = 4
_TREEVIEW_SetSelMode PROC				; COMDAT
; Line 2213
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2215
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@TREEVIEW_S@5
; Line 2217
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2218
	cmp	DWORD PTR _Mode$[ebp], 1
	jne	SHORT $LN5@TREEVIEW_S@5
; Line 2219
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	jne	SHORT $LN4@TREEVIEW_S@5
; Line 2220
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	or	ecx, 2
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+160], cx
; Line 2221
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN4@TREEVIEW_S@5:
; Line 2222
	jmp	SHORT $LN3@TREEVIEW_S@5
$LN5@TREEVIEW_S@5:
; Line 2223
	cmp	DWORD PTR _Mode$[ebp], 0
	jne	SHORT $LN3@TREEVIEW_S@5
; Line 2224
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, 2
	je	SHORT $LN3@TREEVIEW_S@5
; Line 2225
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+160]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+160], cx
; Line 2226
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN3@TREEVIEW_S@5:
; Line 2229
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN7@TREEVIEW_S@5:
; Line 2232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetSelMode ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetBkColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetBkColor
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_TREEVIEW_SetBkColor PROC				; COMDAT
; Line 2238
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2239
	push	0
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__SetColor
	add	esp, 16					; 00000010H
; Line 2240
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetBkColor ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetColor
_TEXT	SEGMENT
tv68 = -208						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_ArrayIndex$ = 20					; size = 4
__SetColor PROC						; COMDAT
; Line 1774
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1776
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN8@SetColor
; Line 1778
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1779
	cmp	DWORD PTR _Index$[ebp], 3
	jae	SHORT $LN6@SetColor
; Line 1780
	mov	eax, DWORD PTR _ArrayIndex$[ebp]
	mov	DWORD PTR tv68[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN3@SetColor
	cmp	DWORD PTR tv68[ebp], 1
	je	SHORT $LN2@SetColor
	cmp	DWORD PTR tv68[ebp], 2
	je	SHORT $LN1@SetColor
	jmp	SHORT $LN6@SetColor
$LN3@SetColor:
; Line 1782
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+88], edx
; Line 1783
	jmp	SHORT $LN6@SetColor
$LN2@SetColor:
; Line 1785
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+100], edx
; Line 1786
	jmp	SHORT $LN6@SetColor
$LN1@SetColor:
; Line 1788
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+112], edx
$LN6@SetColor:
; Line 1792
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN8@SetColor:
; Line 1795
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetColor ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetTextColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetTextColor
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_TREEVIEW_SetTextColor PROC				; COMDAT
; Line 2246
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2247
	push	1
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__SetColor
	add	esp, 16					; 00000010H
; Line 2248
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetTextColor ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetLineColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetLineColor
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_TREEVIEW_SetLineColor PROC				; COMDAT
; Line 2254
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2255
	push	2
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__SetColor
	add	esp, 16					; 00000010H
; Line 2256
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetLineColor ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetFont
_TEXT	SEGMENT
_pItem$ = -32						; size = 4
_hItem$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pFont$ = 12						; size = 4
_TREEVIEW_SetFont PROC					; COMDAT
; Line 2262
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2266
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN6@TREEVIEW_S@6
	cmp	DWORD PTR _pFont$[ebp], 0
	je	$LN6@TREEVIEW_S@6
; Line 2268
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2269
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	ecx, DWORD PTR _pFont$[ebp]
	je	$LN4@TREEVIEW_S@6
; Line 2270
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 2271
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 2272
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	mov	DWORD PTR _hItem$[ebp], ecx
$LN3@TREEVIEW_S@6:
; Line 2273
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@TREEVIEW_S@6
; Line 2274
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2277
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	esi, BYTE PTR [eax+28]
	add	esi, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	imul	esi, DWORD PTR [ecx+148]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	esi, DWORD PTR [edx+152]
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	add	esi, eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [ecx+20], si
; Line 2278
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 2279
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2280
	jmp	SHORT $LN3@TREEVIEW_S@6
$LN2@TREEVIEW_S@6:
; Line 2281
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 2282
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 2283
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 2284
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 2285
	jmp	SHORT $LN6@TREEVIEW_S@6
$LN4@TREEVIEW_S@6:
; Line 2286
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN6@TREEVIEW_S@6:
; Line 2290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetFont ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_IncSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_IncSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_TREEVIEW_IncSel PROC					; COMDAT
; Line 2296
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2297
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
; Line 2298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_IncSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __MoveSel
_TEXT	SEGMENT
_hSel$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Off$ = 12						; size = 4
__MoveSel PROC						; COMDAT
; Line 1801
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1803
	cmp	DWORD PTR _Off$[ebp], 0
	je	SHORT $LN12@MoveSel
; Line 1805
	cmp	DWORD PTR _Off$[ebp], 0
	jge	SHORT $LN4@MoveSel
$LN9@MoveSel:
; Line 1807
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_GetSel
	add	esp, 4
	mov	DWORD PTR _hSel$[ebp], eax
; Line 1808
	cmp	DWORD PTR _hSel$[ebp], 0
	je	SHORT $LN8@MoveSel
; Line 1809
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetPrevVisibleItem
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN8@MoveSel:
; Line 1811
	mov	eax, DWORD PTR _Off$[ebp]
	add	eax, 1
	mov	DWORD PTR _Off$[ebp], eax
	jne	SHORT $LN9@MoveSel
; Line 1812
	jmp	SHORT $LN12@MoveSel
$LN4@MoveSel:
; Line 1814
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_GetSel
	add	esp, 4
	mov	DWORD PTR _hSel$[ebp], eax
; Line 1815
	cmp	DWORD PTR _hSel$[ebp], 0
	je	SHORT $LN3@MoveSel
; Line 1816
	mov	eax, DWORD PTR _hSel$[ebp]
	push	eax
	call	__GetNextVisibleItem
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN3@MoveSel:
; Line 1818
	mov	eax, DWORD PTR _Off$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Off$[ebp], eax
	jne	SHORT $LN4@MoveSel
$LN12@MoveSel:
; Line 1822
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__MoveSel ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_DecSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_DecSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_TREEVIEW_DecSel PROC					; COMDAT
; Line 2304
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2305
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
; Line 2306
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_DecSel ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_SetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_SetSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_hItem$ = 12						; size = 4
_TREEVIEW_SetSel PROC					; COMDAT
; Line 2312
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2313
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@TREEVIEW_S@7
; Line 2315
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN2@TREEVIEW_S@7:
; Line 2318
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_SetSel ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_Detach
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_Detach
_TEXT	SEGMENT
_Level$ = -128						; size = 4
_hItemNewSel$ = -116					; size = 4
_pItemLast$ = -104					; size = 4
_hItemLast$ = -92					; size = 4
_pItemNext$ = -80					; size = 4
_hItemNext$ = -68					; size = 4
_pItemPrev$ = -56					; size = 4
_hItemPrev$ = -44					; size = 4
_pItem$ = -32						; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_hItem$ = 8						; size = 4
_TREEVIEW_ITEM_Detach PROC				; COMDAT
; Line 2330
	push	ebp
	mov	ebp, esp
	sub	esp, 324				; 00000144H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-324]
	mov	ecx, 81					; 00000051H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2343
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN25@TREEVIEW_I@3
; Line 2345
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2346
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN23@TREEVIEW_I@3
; Line 2347
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 2348
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_TREEVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 2349
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetLastNodeItem
	add	esp, 4
	mov	DWORD PTR _hItemLast$[ebp], eax
; Line 2350
	cmp	DWORD PTR _hItemLast$[ebp], 0
	je	SHORT $LN22@TREEVIEW_I@3
; Line 2351
	mov	eax, DWORD PTR _hItemLast$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemLast$[ebp], eax
; Line 2352
	mov	eax, DWORD PTR _pItemLast$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
; Line 2353
	jmp	SHORT $LN21@TREEVIEW_I@3
$LN22@TREEVIEW_I@3:
; Line 2354
	mov	DWORD PTR _pItemLast$[ebp], 0
; Line 2355
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItemNext$[ebp], ecx
$LN21@TREEVIEW_I@3:
; Line 2357
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hItemPrev$[ebp], ecx
; Line 2358
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	DWORD PTR _Level$[ebp], ecx
; Line 2359
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItem$[ebp]
	cmp	ecx, DWORD PTR [eax+168]
	jne	SHORT $LN20@TREEVIEW_I@3
; Line 2360
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+168], edx
$LN20@TREEVIEW_I@3:
; Line 2362
	cmp	DWORD PTR _hItemPrev$[ebp], 0
	je	SHORT $LN19@TREEVIEW_I@3
; Line 2363
	mov	eax, DWORD PTR _hItemPrev$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 2364
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2365
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
; Line 2366
	jmp	SHORT $LN18@TREEVIEW_I@3
$LN19@TREEVIEW_I@3:
; Line 2367
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN17@TREEVIEW_I@3
; Line 2368
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNext$[ebp]
	mov	DWORD PTR [eax+164], ecx
; Line 2369
	jmp	SHORT $LN18@TREEVIEW_I@3
$LN17@TREEVIEW_I@3:
; Line 2370
	push	OFFSET $SG13768
	call	_GUI_ErrorOut
	add	esp, 4
$LN18@TREEVIEW_I@3:
; Line 2373
	cmp	DWORD PTR _hItemNext$[ebp], 0
	je	SHORT $LN15@TREEVIEW_I@3
; Line 2374
	mov	eax, DWORD PTR _hItemNext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 2375
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemPrev$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2376
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
$LN15@TREEVIEW_I@3:
; Line 2381
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+172]
	cmp	ecx, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN14@TREEVIEW_I@3
; Line 2382
	cmp	DWORD PTR _hItemLast$[ebp], 0
	je	SHORT $LN13@TREEVIEW_I@3
; Line 2383
	mov	eax, DWORD PTR _hItemLast$[ebp]
	push	eax
	call	__GetNextVisibleItem
	add	esp, 4
	mov	DWORD PTR _hItemNewSel$[ebp], eax
; Line 2384
	mov	eax, DWORD PTR _hItemNewSel$[ebp]
	cmp	eax, DWORD PTR _hItemLast$[ebp]
	jne	SHORT $LN12@TREEVIEW_I@3
; Line 2385
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetPrevVisibleItem
	add	esp, 4
	mov	DWORD PTR _hItemNewSel$[ebp], eax
; Line 2386
	mov	eax, DWORD PTR _hItemNewSel$[ebp]
	cmp	eax, DWORD PTR _hItem$[ebp]
	jne	SHORT $LN11@TREEVIEW_I@3
; Line 2387
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+172], 0
; Line 2388
	jmp	SHORT $LN10@TREEVIEW_I@3
$LN11@TREEVIEW_I@3:
; Line 2389
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNewSel$[ebp]
	mov	DWORD PTR [eax+172], ecx
$LN10@TREEVIEW_I@3:
; Line 2391
	jmp	SHORT $LN9@TREEVIEW_I@3
$LN12@TREEVIEW_I@3:
; Line 2392
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hItemNewSel$[ebp]
	mov	DWORD PTR [eax+172], ecx
$LN9@TREEVIEW_I@3:
; Line 2394
	jmp	SHORT $LN14@TREEVIEW_I@3
$LN13@TREEVIEW_I@3:
; Line 2395
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__GetPrevVisibleItem
	add	esp, 4
	mov	DWORD PTR _hItemNewSel$[ebp], eax
$LN14@TREEVIEW_I@3:
; Line 2401
	cmp	DWORD PTR _pItemLast$[ebp], 0
	je	SHORT $LN7@TREEVIEW_I@3
; Line 2402
	mov	eax, DWORD PTR _pItemLast$[ebp]
	mov	DWORD PTR [eax+4], 0
$LN7@TREEVIEW_I@3:
; Line 2404
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax+8], 0
; Line 2405
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	BYTE PTR [eax+28], 0
; Line 2406
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax], 0
$LN6@TREEVIEW_I@3:
; Line 2408
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	sub	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+180], ecx
; Line 2409
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 2410
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN5@TREEVIEW_I@3
; Line 2411
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2412
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2413
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2414
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	sub	ecx, DWORD PTR _Level$[ebp]
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	BYTE PTR [edx+28], cl
$LN5@TREEVIEW_I@3:
; Line 2416
	cmp	DWORD PTR _hItem$[ebp], 0
	jne	SHORT $LN6@TREEVIEW_I@3
; Line 2417
	cmp	DWORD PTR _pItemLast$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I@3
; Line 2418
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemLast$[ebp], 0
$LN2@TREEVIEW_I@3:
; Line 2420
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2421
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 2422
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 2423
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 2424
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 2425
	jmp	SHORT $LN25@TREEVIEW_I@3
$LN23@TREEVIEW_I@3:
; Line 2426
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN25@TREEVIEW_I@3:
; Line 2430
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 324				; 00000144H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_Detach ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_Delete
_TEXT	SEGMENT
_hItemFree$ = -32					; size = 4
_pItem$ = -20						; size = 4
_hObj$ = -8						; size = 4
_hItem$ = 8						; size = 4
_TREEVIEW_ITEM_Delete PROC				; COMDAT
; Line 2439
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2443
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN6@TREEVIEW_I@4
; Line 2444
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_TREEVIEW_ITEM_Detach
	add	esp, 4
; Line 2446
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2447
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hObj$[ebp], ecx
$LN4@TREEVIEW_I@4:
; Line 2448
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN3@TREEVIEW_I@4
; Line 2449
	mov	eax, DWORD PTR _hItem$[ebp]
	mov	DWORD PTR _hItemFree$[ebp], eax
; Line 2450
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2451
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2452
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hItem$[ebp], ecx
; Line 2453
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN2@TREEVIEW_I@4
; Line 2454
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN2@TREEVIEW_I@4:
; Line 2456
	mov	eax, DWORD PTR _hItemFree$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 2457
	jmp	SHORT $LN4@TREEVIEW_I@4
$LN3@TREEVIEW_I@4:
; Line 2458
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2459
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN6@TREEVIEW_I@4
; Line 2460
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 2461
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 2462
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN6@TREEVIEW_I@4:
; Line 2466
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_Delete ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _TREEVIEW_ITEM_Expand
_TEXT	SEGMENT
_hItem$ = 8						; size = 4
_TREEVIEW_ITEM_Expand PROC				; COMDAT
; Line 2472
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2473
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I@5
; Line 2475
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__ExpandItem
	add	esp, 4
$LN2@TREEVIEW_I@5:
; Line 2478
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_Expand ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _TREEVIEW_ITEM_Collapse
_TEXT	SEGMENT
_hItem$ = 8						; size = 4
_TREEVIEW_ITEM_Collapse PROC				; COMDAT
; Line 2484
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2485
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I@6
; Line 2487
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	__CollapseItem
	add	esp, 4
$LN2@TREEVIEW_I@6:
; Line 2490
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_Collapse ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_SetImage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_SetImage
_TEXT	SEGMENT
_hData$ = -32						; size = 4
_pData$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_Index$ = 12						; size = 4
_pBitmap$ = 16						; size = 4
_TREEVIEW_ITEM_SetImage PROC				; COMDAT
; Line 2496
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2500
	cmp	DWORD PTR _Index$[ebp], 3
	jae	$LN6@TREEVIEW_I@7
; Line 2502
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2503
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+16], 0
	jne	SHORT $LN4@TREEVIEW_I@7
; Line 2504
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2505
	push	12					; 0000000cH
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hData$[ebp], eax
; Line 2506
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2507
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _hData$[ebp]
	mov	DWORD PTR [eax+16], ecx
$LN4@TREEVIEW_I@7:
; Line 2509
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@TREEVIEW_I@7
; Line 2510
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
; Line 2511
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR _pBitmap$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 2512
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$[ebp], 0
; Line 2513
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@TREEVIEW_I@7
; Line 2514
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@TREEVIEW_I@7:
; Line 2516
	jmp	SHORT $LN1@TREEVIEW_I@7
$LN3@TREEVIEW_I@7:
; Line 2517
	push	OFFSET $SG13837
	call	_GUI_ErrorOut
	add	esp, 4
$LN1@TREEVIEW_I@7:
; Line 2519
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN6@TREEVIEW_I@7:
; Line 2522
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_SetImage ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_SetText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_SetText
_TEXT	SEGMENT
_hParent$ = -68						; size = 4
_pItemNext$ = -56					; size = 4
_pItemPrev$ = -44					; size = 4
_pItemNew$ = -32					; size = 4
_hItemNew$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_s$ = 12						; size = 4
_TREEVIEW_ITEM_SetText PROC				; COMDAT
; Line 2528
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2530
	mov	DWORD PTR _hItemNew$[ebp], 0
; Line 2535
	cmp	DWORD PTR _s$[ebp], 0
	je	$LN6@TREEVIEW_I@8
; Line 2537
	push	0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	push	0
	call	_TREEVIEW_ITEM_Create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hItemNew$[ebp], eax
; Line 2538
	cmp	DWORD PTR _hItemNew$[ebp], 0
	je	$LN5@TREEVIEW_I@8
; Line 2539
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2540
	mov	eax, DWORD PTR _hItemNew$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNew$[ebp], eax
; Line 2541
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 2542
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 2543
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 2544
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	dx, WORD PTR [ecx+24]
	mov	WORD PTR [eax+24], dx
; Line 2545
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
; Line 2546
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	dl, BYTE PTR [ecx+28]
	mov	BYTE PTR [eax+28], dl
; Line 2547
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 2548
	mov	eax, DWORD PTR _pItemNew$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN4@TREEVIEW_I@8
; Line 2549
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemPrev$[ebp], eax
; Line 2550
	mov	eax, DWORD PTR _pItemPrev$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 2551
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemPrev$[ebp], 0
$LN4@TREEVIEW_I@8:
; Line 2553
	mov	eax, DWORD PTR _pItemNew$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@TREEVIEW_I@8
; Line 2554
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItemNext$[ebp], eax
; Line 2555
	mov	eax, DWORD PTR _pItemNext$[ebp]
	mov	ecx, DWORD PTR _hItemNew$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 2556
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNext$[ebp], 0
$LN3@TREEVIEW_I@8:
; Line 2558
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 2559
	mov	eax, DWORD PTR _pItemNew$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hParent$[ebp], ecx
; Line 2560
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 2561
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItemNew$[ebp], 0
; Line 2562
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I@8
; Line 2563
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__CalcParams
	add	esp, 4
; Line 2564
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 2565
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@TREEVIEW_I@8:
; Line 2567
	jmp	SHORT $LN6@TREEVIEW_I@8
$LN5@TREEVIEW_I@8:
; Line 2568
	push	OFFSET $SG13864
	call	_GUI_ErrorOut
	add	esp, 4
$LN6@TREEVIEW_I@8:
; Line 2572
	mov	eax, DWORD PTR _hItemNew$[ebp]
; Line 2573
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_SetText ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_GetText
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_GetText
_TEXT	SEGMENT
_NumBytes$ = -20					; size = 4
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_pBuffer$ = 12						; size = 4
_MaxNumBytes$ = 16					; size = 4
_TREEVIEW_ITEM_GetText PROC				; COMDAT
; Line 2579
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2582
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN3@TREEVIEW_I@9
	cmp	DWORD PTR _pBuffer$[ebp], 0
	je	SHORT $LN3@TREEVIEW_I@9
	cmp	DWORD PTR _MaxNumBytes$[ebp], 0
	je	SHORT $LN3@TREEVIEW_I@9
; Line 2584
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2585
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 29					; 0000001dH
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 2586
	mov	eax, DWORD PTR _NumBytes$[ebp]
	cmp	eax, DWORD PTR _MaxNumBytes$[ebp]
	jle	SHORT $LN1@TREEVIEW_I@9
; Line 2587
	mov	eax, DWORD PTR _MaxNumBytes$[ebp]
	mov	DWORD PTR _NumBytes$[ebp], eax
$LN1@TREEVIEW_I@9:
; Line 2589
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 29					; 0000001dH
	push	ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2590
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, DWORD PTR _NumBytes$[ebp]
	mov	BYTE PTR [eax-1], 0
; Line 2591
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN3@TREEVIEW_I@9:
; Line 2594
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_GetText ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_GetInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_GetInfo
_TEXT	SEGMENT
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_pInfo$ = 12						; size = 4
_TREEVIEW_ITEM_GetInfo PROC				; COMDAT
; Line 2600
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2602
	cmp	DWORD PTR _hItem$[ebp], 0
	je	$LN2@TREEVIEW_I@10
; Line 2604
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2605
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 2606
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 2607
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	add	ecx, 1
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 2608
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+24]
	and	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 2609
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, BYTE PTR [eax+28]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 2610
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN2@TREEVIEW_I@10:
; Line 2613
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_GetInfo ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_SetUserData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_SetUserData
_TEXT	SEGMENT
_pItem$ = -8						; size = 4
_hItem$ = 8						; size = 4
_UserData$ = 12						; size = 4
_TREEVIEW_ITEM_SetUserData PROC				; COMDAT
; Line 2619
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2621
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN2@TREEVIEW_I@11
; Line 2623
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2624
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _UserData$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 2625
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN2@TREEVIEW_I@11:
; Line 2628
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_SetUserData ENDP
_TEXT	ENDS
PUBLIC	_TREEVIEW_ITEM_GetUserData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TREEVIEW_ITEM_GetUserData
_TEXT	SEGMENT
_pItem$ = -20						; size = 4
_UserData$ = -8						; size = 4
_hItem$ = 8						; size = 4
_TREEVIEW_ITEM_GetUserData PROC				; COMDAT
; Line 2634
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2637
	mov	DWORD PTR _UserData$[ebp], 0
; Line 2638
	cmp	DWORD PTR _hItem$[ebp], 0
	je	SHORT $LN1@TREEVIEW_I@12
; Line 2640
	mov	eax, DWORD PTR _hItem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$[ebp], eax
; Line 2641
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _UserData$[ebp], ecx
; Line 2642
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN1@TREEVIEW_I@12:
; Line 2645
	mov	eax, DWORD PTR _UserData$[ebp]
; Line 2646
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TREEVIEW_ITEM_GetUserData ENDP
_TEXT	ENDS
END
