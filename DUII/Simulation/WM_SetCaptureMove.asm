; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_SetCaptureMove.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_SetCaptureMove
EXTRN	_GUI_RectsIntersect:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	_WM_GetParent:PROC
EXTRN	_WM_GetWindowRectEx:PROC
EXTRN	_WM_MoveWindow:PROC
EXTRN	_WM_SetCapture:PROC
EXTRN	_WM_HasCaptured:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_WM__CapturePoint DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_setcapturemove.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetCaptureMove
_TEXT	SEGMENT
_RectParent$9448 = -52					; size = 8
_Rect$9447 = -36					; size = 8
_dy$9444 = -20						; size = 4
_dx$9443 = -8						; size = 4
_hWin$ = 8						; size = 4
_pState$ = 12						; size = 4
_MinVisibility$ = 16					; size = 4
_LimitTop$ = 20						; size = 4
_WM_SetCaptureMove PROC					; COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_HasCaptured
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@WM_SetCapt
; Line 47
	push	1
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetCapture
	add	esp, 8
; Line 48
	mov	eax, DWORD PTR _pState$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _WM__CapturePoint, cx
; Line 49
	mov	eax, DWORD PTR _pState$[ebp]
	mov	cx, WORD PTR [eax+4]
	mov	WORD PTR _WM__CapturePoint+2, cx
; Line 50
	jmp	$LN7@WM_SetCapt
$LN6@WM_SetCapt:
; Line 52
	movsx	eax, WORD PTR _WM__CapturePoint
	mov	ecx, DWORD PTR _pState$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, eax
	mov	DWORD PTR _dx$9443[ebp], edx
; Line 53
	movsx	eax, WORD PTR _WM__CapturePoint+2
	mov	ecx, DWORD PTR _pState$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, eax
	mov	DWORD PTR _dy$9444[ebp], edx
; Line 55
	cmp	DWORD PTR _MinVisibility$[ebp], 0
	jne	SHORT $LN4@WM_SetCapt
	cmp	DWORD PTR _LimitTop$[ebp], 0
	jne	SHORT $LN4@WM_SetCapt
; Line 56
	mov	eax, DWORD PTR _dy$9444[ebp]
	push	eax
	mov	ecx, DWORD PTR _dx$9443[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWin$[ebp]
	push	edx
	call	_WM_MoveWindow
	add	esp, 12					; 0000000cH
; Line 57
	jmp	$LN7@WM_SetCapt
$LN4@WM_SetCapt:
; Line 59
	lea	eax, DWORD PTR _Rect$9447[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 61
	cmp	DWORD PTR _LimitTop$[ebp], 0
	je	SHORT $LN2@WM_SetCapt
; Line 62
	movsx	eax, WORD PTR _Rect$9447[ebp+2]
	mov	ecx, DWORD PTR _LimitTop$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$9447[ebp+6], dx
$LN2@WM_SetCapt:
; Line 64
	lea	eax, DWORD PTR _RectParent$9448[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetParent
	add	esp, 4
	push	eax
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 65
	mov	eax, DWORD PTR _dy$9444[ebp]
	push	eax
	mov	ecx, DWORD PTR _dx$9443[ebp]
	push	ecx
	lea	edx, DWORD PTR _Rect$9447[ebp]
	push	edx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 66
	mov	eax, DWORD PTR _MinVisibility$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectParent$9448[ebp]
	push	ecx
	lea	edx, DWORD PTR _RectParent$9448[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 67
	lea	eax, DWORD PTR _RectParent$9448[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$9447[ebp]
	push	ecx
	call	_GUI_RectsIntersect
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@WM_SetCapt
; Line 68
	mov	eax, DWORD PTR _dy$9444[ebp]
	push	eax
	mov	ecx, DWORD PTR _dx$9443[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWin$[ebp]
	push	edx
	call	_WM_MoveWindow
	add	esp, 12					; 0000000cH
$LN7@WM_SetCapt:
; Line 72
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@WM_SetCapt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@WM_SetCapt:
	DD	2
	DD	$LN11@WM_SetCapt
$LN11@WM_SetCapt:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@WM_SetCapt
	DD	-52					; ffffffccH
	DD	8
	DD	$LN10@WM_SetCapt
$LN10@WM_SetCapt:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN9@WM_SetCapt:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_WM_SetCaptureMove ENDP
_TEXT	ENDS
END
