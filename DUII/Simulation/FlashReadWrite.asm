; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\FlashReadWrite.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_SOFTWARE_VERSION
PUBLIC	_SYSTEM_VERSION
PUBLIC	_VEHICLE_VERSION
PUBLIC	_DRIVER_VERSION
PUBLIC	_TRACK_VERSION
PUBLIC	_SYSTEM_FILE_NAME
PUBLIC	_BACKUP_SYSTEM_FILE_NAME
PUBLIC	_DEFAULT_DRIVER
PUBLIC	_DEFAULT_VEHICLE
PUBLIC	_DEFAULT_TRACK
PUBLIC	_SYSTEM_PATH
PUBLIC	_DRIVER_PATH
PUBLIC	_VEHICLE_PATH
PUBLIC	_TRACK_PATH
PUBLIC	_MY_SESSIONS_PATH
PUBLIC	_defaultVehicles
EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_BSS	SEGMENT
$SG119833 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_vehicleData:BYTE:01dcH
COMM	_sectors:QWORD:0514H
COMM	_unsavedSysData:BYTE:0e8H
COMM	_sysData:BYTE:0f4H
COMM	_trackData:BYTE:014a0H
COMM	_suData:BYTE:028H
COMM	_driverData:BYTE:010H
_DATA	ENDS
_BSS	SEGMENT
$SG120221 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
$SG119750 DB	'350Z', 00H
	ORG $+3
$SG119751 DB	'370Z', 00H
	ORG $+3
$SG119752 DB	'BMW 135i', 00H
	ORG $+3
$SG119753 DB	'BMW 1M', 00H
	ORG $+1
$SG119754 DB	'BMW 2002', 00H
	ORG $+3
$SG119755 DB	'BMW E30', 00H
$SG119756 DB	'BMW E30 M3', 00H
	ORG $+1
$SG119757 DB	'BMW E36 325', 00H
$SG119758 DB	'BMW E36 M3', 00H
	ORG $+1
$SG119759 DB	'BMW E39 M5', 00H
	ORG $+1
$SG119760 DB	'BMW E46 325', 00H
$SG119761 DB	'BMW E46 M3', 00H
	ORG $+1
$SG119762 DB	'BMW E60 M5', 00H
	ORG $+1
$SG119763 DB	'BMW E90 325', 00H
$SG119764 DB	'BMW E92 M3', 00H
	ORG $+1
$SG119765 DB	'BMW F10 M5', 00H
	ORG $+1
$SG119766 DB	'BMW Z4 3L', 00H
	ORG $+2
$SG119767 DB	'BMW Z4 M', 00H
	ORG $+3
$SG119768 DB	'Boxster 01', 00H
	ORG $+1
$SG119769 DB	'Boxster 03', 00H
	ORG $+1
$SG119770 DB	'Boxster 04', 00H
	ORG $+1
$SG119771 DB	'BoxsterS 00', 00H
$SG119772 DB	'BoxsterS 03', 00H
$SG119773 DB	'BoxsterS 04', 00H
$SG119774 DB	'BoxsterS DSG 14', 00H
$SG119775 DB	'BR-Z', 00H
	ORG $+3
$SG119776 DB	'CaymanS 04', 00H
	ORG $+1
$SG119777 DB	'CaymanS DSG 14', 00H
	ORG $+1
$SG119778 DB	'Civic 92-95', 00H
$SG119779 DB	'Elise', 00H
	ORG $+2
$SG119780 DB	'EVO 04', 00H
	ORG $+1
$SG119781 DB	'EVO MR 05', 00H
	ORG $+2
$SG119782 DB	'EVO TWIN 08', 00H
$SG119783 DB	'Evora', 00H
	ORG $+2
$SG119784 DB	'Exige', 00H
	ORG $+2
$SG119785 DB	'Ferrari 360', 00H
$SG119786 DB	'Ferrari 430', 00H
$SG119787 DB	'Ferrari 458', 00H
$SG119788 DB	'Fiat 500 Abarth', 00H
$SG119789 DB	'FR-S', 00H
	ORG $+3
$SG119790 DB	'Genesis Turbo', 00H
	ORG $+2
$SG119791 DB	'Genesis V6', 00H
	ORG $+1
$SG119792 DB	'GT3 996 03', 00H
	ORG $+1
$SG119793 DB	'GT3 996 99', 00H
	ORG $+1
$SG119794 DB	'GT3 997 06', 00H
	ORG $+1
$SG119795 DB	'GT3 RS 996 03', 00H
	ORG $+2
$SG119796 DB	'GT3 RS 997 10', 00H
	ORG $+2
$SG119797 DB	'GTR', 00H
$SG119798 DB	'Integra GSR 94', 00H
	ORG $+1
$SG119799 DB	'Integra LS 02', 00H
	ORG $+2
$SG119800 DB	'Integra R 99', 00H
	ORG $+3
$SG119801 DB	'Miata 90-93', 00H
$SG119802 DB	'Miata 94-97', 00H
$SG119803 DB	'Miata 99-05 5spd', 00H
	ORG $+3
$SG119804 DB	'Miata 99-05 6spd', 00H
	ORG $+3
$SG119805 DB	'Miata MX5 06+', 00H
	ORG $+2
$SG119806 DB	'Mini CooperS 03', 00H
$SG119807 DB	'MR2 Spyder 00', 00H
	ORG $+2
$SG119808 DB	'MR2 Turbo 94', 00H
	ORG $+3
$SG119809 DB	'Mustang GT 01', 00H
	ORG $+2
$SG119810 DB	'Mustang GT 11', 00H
	ORG $+2
$SG119811 DB	'NSX 02', 00H
	ORG $+1
$SG119812 DB	'NSX 94', 00H
	ORG $+1
$SG119813 DB	'RSX', 00H
$SG119814 DB	'RX7 78-85 4spd', 00H
	ORG $+1
$SG119815 DB	'RX7 78-85 5spd', 00H
	ORG $+1
$SG119816 DB	'RX7 84-85 GSL-SE', 00H
	ORG $+3
$SG119817 DB	'RX7 FC 86-91', 00H
	ORG $+3
$SG119818 DB	'RX7 FD 91-02', 00H
	ORG $+3
$SG119819 DB	'RX8', 00H
$SG119820 DB	'S2000 00-03', 00H
$SG119821 DB	'S2000 04-09', 00H
$SG119822 DB	'Spec Miata 90-93', 00H
	ORG $+3
$SG119823 DB	'Spec Miata 94-97', 00H
	ORG $+3
$SG119824 DB	'Spec Miata 99-05', 00H
	ORG $+3
$SG119825 DB	'Supra 98', 00H
	ORG $+3
$SG119826 DB	'Viper 05', 00H
	ORG $+3
$SG119827 DB	'Viper 12', 00H
	ORG $+3
$SG119828 DB	'WRX STI 04', 00H
	ORG $+1
$SG119829 DB	'WRX STI 08', 00H
	ORG $+1
$SG119830 DB	'WRX STI 11', 00H
	ORG $+1
$SG119831 DB	'Z06 C5', 00H
	ORG $+1
$SG119832 DB	'Z06 C6', 00H
	ORG $+1
_defaultVehicles DD FLAT:$SG119750
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	04072d0e5r			; 3.794
	DD	04014bc6ar			; 2.324
	DD	03fcfdf3br			; 1.624
	DD	03fa2b021r			; 1.271
	DD	03f800000r			; 1
	DD	03f4b4396r			; 0.794
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040628f5cr			; 3.54
	DD	042a7a45ar			; 83.821
	DD	0f5H
	DD	012H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0c99H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119751
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	04072d0e5r			; 3.794
	DD	04014bc6ar			; 2.324
	DD	03fcfdf3br			; 1.624
	DD	03fa2b021r			; 1.271
	DD	03f800000r			; 1
	DD	03f4b4396r			; 0.794
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0406c49bar			; 3.692
	DD	042a0322dr			; 80.098
	DD	0113H
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0ca0H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119752
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04081eb85r			; 4.06
	DD	04019999ar			; 2.4
	DD	03fca3d71r			; 1.58
	DD	03f9851ecr			; 1.19
	DD	03f800000r			; 1
	DD	03f5eb852r			; 0.87
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040451eb8r			; 3.08
	DD	0429b85a2r			; 77.761
	DD	0f5H
	DD	023H
	DD	012H
	DB	01H
	ORG $+3
	DD	0c80H
	DD	03ebd70a4r			; 0.37
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119753
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04083851fr			; 4.11
	DD	0401428f6r			; 2.315
	DD	03fc56042r			; 1.542
	DD	03f96e979r			; 1.179
	DD	03f8ccccdr			; 1.1
	DD	03f589375r			; 0.846
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04049db23r			; 3.154
	DD	042a54419r			; 82.633
	DD	0109H
	DD	023H
	DD	013H
	DB	01H
	ORG $+3
	DD	0ce4H
	DD	03ebd70a4r			; 0.37
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119754
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	0189cH
	DD	00H
	DD	00H
	DD	04070a3d7r			; 3.76
	DD	0400147aer			; 2.02
	DD	03fa8f5c3r			; 1.32
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04079999ar			; 3.9
	DD	04291bd71r			; 72.87
	DD	0b9H
	DD	0dH
	DD	046H
	DB	01H
	ORG $+3
	DD	08b1H
	DD	03ecccccdr			; 0.4
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119755
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	016a8H
	DD	01838H
	DD	00H
	DD	00H
	DD	040751eb8r			; 3.83
	DD	0400ccccdr			; 2.2
	DD	03fb33333r			; 1.4
	DD	03f800000r			; 1
	DD	03f4f5c29r			; 0.81
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0407a3d71r			; 3.91
	DD	04291d70ar			; 72.92
	DD	0c3H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	0af0H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119756
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	040751eb8r			; 3.83
	DD	0400ccccdr			; 2.2
	DD	03fb33333r			; 1.4
	DD	03f800000r			; 1
	DD	03f4f5c29r			; 0.81
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	04290f5c3r			; 72.48
	DD	0cdH
	DD	0fH
	DD	037H
	DB	01H
	ORG $+3
	DD	0af0H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119757
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01964H
	DD	00H
	DD	00H
	DD	040875c29r			; 4.23
	DD	0402147aer			; 2.52
	DD	03fd47ae1r			; 1.66
	DD	03f9c28f6r			; 1.22
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04049999ar			; 3.15
	DD	0429c4fdfr			; 78.156
	DD	0cdH
	DD	010H
	DD	037H
	DB	01H
	ORG $+3
	DD	0c80H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119758
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040866666r			; 4.2
	DD	0401f5c29r			; 2.49
	DD	03fd47ae1r			; 1.66
	DD	03f9eb852r			; 1.24
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0404eb852r			; 3.23
	DD	0429b4d50r			; 77.651
	DD	0f5H
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0c80H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119759
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	040874396r			; 4.227
	DD	04021cac1r			; 2.528
	DD	03fd5a1cbr			; 1.669
	DD	03f9ced91r			; 1.226
	DD	03f800000r			; 1
	DD	03f53b646r			; 0.827
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04049999ar			; 3.15
	DD	04299e979r			; 76.956
	DD	0113H
	DD	01eH
	DD	012H
	DB	01H
	ORG $+3
	DD	0f13H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119760
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01964H
	DD	00H
	DD	00H
	DD	040875c29r			; 4.23
	DD	0402147aer			; 2.52
	DD	03fd47ae1r			; 1.66
	DD	03f9c28f6r			; 1.22
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04049999ar			; 3.15
	DD	0429ce76dr			; 78.452
	DD	0e1H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0c80H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119761
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01edcH
	DD	00H
	DD	00H
	DD	040875c29r			; 4.23
	DD	04021eb85r			; 2.53
	DD	03fd5c28fr			; 1.67
	DD	03f9d70a4r			; 1.23
	DD	03f8ccccdr			; 1.1
	DD	03f547ae1r			; 0.83
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04068f5c3r			; 3.64
	DD	042a389bar			; 81.769
	DD	0ffH
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0d57H
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119762
	DB	0a8H
	DB	0aH
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01e14H
	DD	01f40H
	DD	00H
	DD	00H
	DD	0407f5c29r			; 3.99
	DD	04029999ar			; 2.65
	DD	03fe7ae14r			; 1.81
	DD	03fb1eb85r			; 1.39
	DD	03f947ae1r			; 1.16
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04067ae14r			; 3.62
	DD	042a9d70ar			; 84.92
	DD	0ffH
	DD	028H
	DD	013H
	DB	01H
	ORG $+3
	DD	0facH
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119763
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0408a3d71r			; 4.32
	DD	0401d70a4r			; 2.46
	DD	03fd47ae1r			; 1.66
	DD	03f9d70a4r			; 1.23
	DD	03f800000r			; 1
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0404eb852r			; 3.23
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	028H
	DD	011H
	DB	01H
	ORG $+3
	DD	0d48H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119764
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	02008H
	DD	00H
	DD	00H
	DD	04081eb85r			; 4.06
	DD	04019999ar			; 2.4
	DD	03fca3d71r			; 1.58
	DD	03f9851ecr			; 1.19
	DD	03f800000r			; 1
	DD	03f5eb852r			; 0.87
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040766666r			; 3.85
	DD	042a54419r			; 82.633
	DD	0109H
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0e41H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119765
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01a90H
	DD	00H
	DD	00H
	DD	01770H
	DD	01a90H
	DD	00H
	DD	00H
	DD	04099999ar			; 4.8
	DD	04025c28fr			; 2.59
	DD	03fd9999ar			; 1.7
	DD	03fa3d70ar			; 1.28
	DD	03f800000r			; 1
	DD	03f5eb852r			; 0.87
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04049999ar			; 3.15
	DD	042a973b6r			; 84.726
	DD	0127H
	DD	01eH
	DD	014H
	DB	01H
	ORG $+3
	DD	01123H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119766
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01964H
	DD	00H
	DD	00H
	DD	01838H
	DD	01964H
	DD	00H
	DD	00H
	DD	0408b3333r			; 4.35
	DD	040200000r			; 2.5
	DD	03fd47ae1r			; 1.66
	DD	03f9d70a4r			; 1.23
	DD	03f800000r			; 1
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040447ae1r			; 3.07
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	028H
	DD	011H
	DB	01H
	ORG $+3
	DD	0c1cH
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119767
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01f40H
	DD	00H
	DD	00H
	DD	0408b3333r			; 4.35
	DD	04021eb85r			; 2.53
	DD	03fd47ae1r			; 1.66
	DD	03f9d70a4r			; 1.23
	DD	03f800000r			; 1
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04067ae14r			; 3.62
	DD	042a38ed9r			; 81.779
	DD	0ffH
	DD	028H
	DD	012H
	DB	01H
	ORG $+3
	DD	0c4eH
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119768
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040600000r			; 3.5
	DD	04007ae14r			; 2.12
	DD	03fb70a3dr			; 1.43
	DD	03f8b851fr			; 1.09
	DD	03f570a3dr			; 0.84
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04063d70ar			; 3.56
	DD	0429c3021r			; 78.094
	DD	0e1H
	DD	010H
	DD	032H
	DB	01H
	ORG $+3
	DD	0adaH
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119769
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040600000r			; 3.5
	DD	04007ae14r			; 2.12
	DD	03fb70a3dr			; 1.43
	DD	03f8b851fr			; 1.09
	DD	03f570a3dr			; 0.84
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04063d70ar			; 3.56
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0afbH
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119770
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	0406ae148r			; 3.67
	DD	040033333r			; 2.05
	DD	03fb47ae1r			; 1.41
	DD	03f90a3d7r			; 1.13
	DD	03f7851ecr			; 0.97
	DD	03f51eb85r			; 0.82
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04077ae14r			; 3.87
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0b27H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119771
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	0400ccccdr			; 2.2
	DD	03fc28f5cr			; 1.52
	DD	03f9c28f6r			; 1.22
	DD	03f828f5cr			; 1.02
	DD	03f570a3dr			; 0.84
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	0429efbe7r			; 79.492
	DD	0109H
	DD	012H
	DD	023H
	DB	01H
	ORG $+3
	DD	0b27H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119772
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	0400ccccdr			; 2.2
	DD	03fc28f5cr			; 1.52
	DD	03f9c28f6r			; 1.22
	DD	03f828f5cr			; 1.02
	DD	03f570a3dr			; 0.84
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	0429efbe7r			; 79.492
	DD	0109H
	DD	012H
	DD	023H
	DB	01H
	ORG $+3
	DD	0b5eH
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119773
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	01a90H
	DD	01c20H
	DD	00H
	DD	00H
	DD	0406ae148r			; 3.67
	DD	040033333r			; 2.05
	DD	03fb47ae1r			; 1.41
	DD	03f90a3d7r			; 1.13
	DD	03f7851ecr			; 0.97
	DD	03f51eb85r			; 0.82
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04077ae14r			; 3.87
	DD	0429efbe7r			; 79.492
	DD	0109H
	DD	012H
	DD	023H
	DB	01H
	ORG $+3
	DD	0b95H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119774
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	0407a3d71r			; 3.91
	DD	040128f5cr			; 2.29
	DD	03fd33333r			; 1.65
	DD	03fa66666r			; 1.3
	DD	03f8a3d71r			; 1.08
	DD	03f6147aer			; 0.88
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040500000r			; 3.25
	DD	042ab8ccdr			; 85.775
	DD	0109H
	DD	014H
	DD	023H
	DB	01H
	ORG $+3
	DD	0bb8H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119775
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01ce8H
	DD	00H
	DD	00H
	DD	040681062r			; 3.626
	DD	0400c0831r			; 2.188
	DD	03fc53f7dr			; 1.541
	DD	03f9b4396r			; 1.213
	DD	03f800000r			; 1
	DD	03f445a1dr			; 0.767
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429aae14r			; 77.34
	DD	0d7H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0ab9H
	DD	03e8a3d71r			; 0.27
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119776
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01a90H
	DD	01c20H
	DD	00H
	DD	00H
	DD	0406ae148r			; 3.67
	DD	040033333r			; 2.05
	DD	03fb47ae1r			; 1.41
	DD	03f90a3d7r			; 1.13
	DD	03f7851ecr			; 0.97
	DD	03f51eb85r			; 0.82
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04077ae14r			; 3.87
	DD	0429efbe7r			; 79.492
	DD	0109H
	DD	012H
	DD	023H
	DB	01H
	ORG $+3
	DD	0bb3H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119777
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	0407a3d71r			; 3.91
	DD	040128f5cr			; 2.29
	DD	03fd33333r			; 1.65
	DD	03fa66666r			; 1.3
	DD	03f8a3d71r			; 1.08
	DD	03f6147aer			; 0.88
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040500000r			; 3.25
	DD	042ab8ccdr			; 85.775
	DD	0109H
	DD	014H
	DD	023H
	DB	01H
	ORG $+3
	DD	0bb8H
	DD	03e947ae1r			; 0.29
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119778
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	040500000r			; 3.25
	DD	03fe16873r			; 1.761
	DD	03f960419r			; 1.172
	DD	03f68b439r			; 0.909
	DD	03f33b646r			; 0.702
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04081db23r			; 4.058
	DD	0428ee148r			; 71.44
	DD	0b9H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	0898H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119779
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01f40H
	DD	00H
	DD	00H
	DD	0404ae148r			; 3.17
	DD	040033333r			; 2.05
	DD	03fbd70a4r			; 1.48
	DD	03f95c28fr			; 1.17
	DD	03f6b851fr			; 0.92
	DD	03f4f5c29r			; 0.81
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04090f5c3r			; 4.53
	DD	0429ce7f0r			; 78.453
	DD	0e1H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	07b7H
	DD	03ecccccdr			; 0.4
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119780
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	0403b645ar			; 2.928
	DD	03ff9999ar			; 1.95
	DD	03fb41893r			; 1.407
	DD	03f83f7cfr			; 1.031
	DD	03f3851ecr			; 0.72
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405a9fber			; 3.416
	DD	0429f224er			; 79.567
	DD	0ebH
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0c1cH
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119781
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	0403a2d0er			; 2.909
	DD	03ff8d4fer			; 1.944
	DD	03fb78d50r			; 1.434
	DD	03f8ccccdr			; 1.1
	DD	03f5e353fr			; 0.868
	DD	03f316873r			; 0.693
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040928f5cr			; 4.58
	DD	0429f224er			; 79.567
	DD	0ebH
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0cd5H
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119782
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	04069eb85r			; 3.655
	DD	040178d50r			; 2.368
	DD	03fe08312r			; 1.754
	DD	03fa9374cr			; 1.322
	DD	03f810625r			; 1.008
	DD	03f466666r			; 0.775
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040805a1dr			; 4.011
	DD	042a19581r			; 80.792
	DD	0f5H
	DD	012H
	DD	028H
	DB	01H
	ORG $+3
	DD	0dacH
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119783
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01a90H
	DD	00H
	DD	00H
	DD	040626e98r			; 3.538
	DD	03ff4dd2fr			; 1.913
	DD	03fb41893r			; 1.407
	DD	03f8ba5e3r			; 1.091
	DD	03f75c28fr			; 0.96
	DD	03f5c28f6r			; 0.86
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0407147aer			; 3.77
	DD	042a389bar			; 81.769
	DD	0ffH
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0bb8H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119784
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01f40H
	DD	00H
	DD	00H
	DD	0404ae148r			; 3.17
	DD	040033333r			; 2.05
	DD	03fbd70a4r			; 1.48
	DD	03f95c28fr			; 1.17
	DD	03f6b851fr			; 0.92
	DD	03f4f5c29r			; 0.81
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04090f5c3r			; 4.53
	DD	0429ce7f0r			; 78.453
	DD	0ffH
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0809H
	DD	03ee66666r			; 0.45
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119785
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01edcH
	DD	00H
	DD	00H
	DD	040528f5cr			; 3.29
	DD	0400a3d71r			; 2.16
	DD	03fce147br			; 1.61
	DD	03fa28f5cr			; 1.27
	DD	03f83d70ar			; 1.03
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408e147br			; 4.44
	DD	042a1ad91r			; 80.839
	DD	011dH
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0bf8H
	DD	03eae147br			; 0.34
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119786
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	020d0H
	DD	00H
	DD	00H
	DD	01e78H
	DD	02008H
	DD	00H
	DD	00H
	DD	040528f5cr			; 3.29
	DD	0400a3d71r			; 2.16
	DD	03fce147br			; 1.61
	DD	03fa28f5cr			; 1.27
	DD	03f83d70ar			; 1.03
	DD	03f51eb85r			; 0.82
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04089999ar			; 4.3
	DD	042a1ad91r			; 80.839
	DD	011dH
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0c7dH
	DD	03eae147br			; 0.34
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119787
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	02134H
	DD	02328H
	DD	00H
	DD	00H
	DD	040451eb8r			; 3.08
	DD	0400c28f6r			; 2.19
	DD	03fd0a3d7r			; 1.63
	DD	03fa51eb8r			; 1.29
	DD	03f83d70ar			; 1.03
	DD	03f570a3dr			; 0.84
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040a47ae1r			; 5.14
	DD	042b0befar			; 88.373
	DD	0127H
	DD	023H
	DD	014H
	DB	01H
	ORG $+3
	DD	0c80H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119788
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	0407a2d0er			; 3.909
	DD	0400f3b64r			; 2.238
	DD	03fc28f5cr			; 1.52
	DD	03f93f7cfr			; 1.156
	DD	03f58d4fer			; 0.847
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04056978dr			; 3.353
	DD	0429875c3r			; 76.23
	DD	0cdH
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	09c4H
	DD	03ea66666r			; 0.325
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119789
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01ce8H
	DD	00H
	DD	00H
	DD	040681062r			; 3.626
	DD	0400c0831r			; 2.188
	DD	03fc53f7dr			; 1.541
	DD	03f9b4396r			; 1.213
	DD	03f800000r			; 1
	DD	03f445a1dr			; 0.767
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429aae14r			; 77.34
	DD	0d7H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0ab9H
	DD	03e8a3d71r			; 0.27
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119790
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	016a8H
	DD	01770H
	DD	00H
	DD	00H
	DD	0408570a4r			; 4.17
	DD	0401e147br			; 2.47
	DD	03fc28f5cr			; 1.52
	DD	03f9d70a4r			; 1.23
	DD	03f5eb852r			; 0.87
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0406e872br			; 3.727
	DD	042a7de35r			; 83.934
	DD	0f5H
	DD	013H
	DD	028H
	DB	01H
	ORG $+3
	DD	0d16H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119791
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0157cH
	DD	01838H
	DD	00H
	DD	00H
	DD	0408570a4r			; 4.17
	DD	0401e147br			; 2.47
	DD	03fc28f5cr			; 1.52
	DD	03f9d70a4r			; 1.23
	DD	03f5eb852r			; 0.87
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0406eb852r			; 3.73
	DD	042a7de35r			; 83.934
	DD	0f5H
	DD	013H
	DD	028H
	DB	01H
	ORG $+3
	DD	0ddeH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119792
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01ce8H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	04009999ar			; 2.15
	DD	03fc7ae14r			; 1.56
	DD	03f9ae148r			; 1.21
	DD	03f8ccccdr			; 1.1
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	0429ce24er			; 78.442
	DD	0127H
	DD	012H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0be2H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119793
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01ce8H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	04009999ar			; 2.15
	DD	03fc7ae14r			; 1.56
	DD	03f9ae148r			; 1.21
	DD	03f7851ecr			; 0.97
	DD	03f51eb85r			; 0.82
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	0429b6560r			; 77.698
	DD	011dH
	DD	012H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0ba0H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119794
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	01f40H
	DD	020d0H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	04010a3d7r			; 2.26
	DD	03fd1eb85r			; 1.64
	DD	03fa51eb8r			; 1.29
	DD	03f87ae14r			; 1.06
	DD	03f6b851fr			; 0.92
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	0429ce24er			; 78.442
	DD	0127H
	DD	012H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0c03H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119795
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01ce8H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	04009999ar			; 2.15
	DD	03fc7ae14r			; 1.56
	DD	03f9ae148r			; 1.21
	DD	03f8ccccdr			; 1.1
	DD	03f59999ar			; 0.85
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405c28f6r			; 3.44
	DD	042a4a666r			; 82.325
	DD	0131H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0bb6H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119796
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	01f40H
	DD	02134H
	DD	00H
	DD	00H
	DD	040747ae1r			; 3.82
	DD	04010a3d7r			; 2.26
	DD	03fd1eb85r			; 1.64
	DD	03fa51eb8r			; 1.29
	DD	03f87ae14r			; 1.06
	DD	03f6147aer			; 0.88
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04078f5c3r			; 3.89
	DD	042a79db2r			; 83.808
	DD	0145H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0bcfH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119797
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01a90H
	DD	01c20H
	DD	00H
	DD	00H
	DD	04081cac1r			; 4.056
	DD	040134396r			; 2.301
	DD	03fcc28f6r			; 1.595
	DD	03f9fbe77r			; 1.248
	DD	03f8020c5r			; 1.001
	DD	03f4bc6a8r			; 0.796
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0406ccccdr			; 3.7
	DD	042a7f646r			; 83.981
	DD	011dH
	DD	014H
	DD	023H
	DB	01H
	ORG $+3
	DD	0ed8H
	DD	03e851eb8r			; 0.26
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119798
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01edcH
	DD	00H
	DD	00H
	DD	0404eb852r			; 3.23
	DD	03ff33333r			; 1.9
	DD	03fae147br			; 1.36
	DD	03f845a1dr			; 1.034
	DD	03f4978d5r			; 0.787
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408ccccdr			; 4.4
	DD	04291da1dr			; 72.926
	DD	0c3H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	0a53H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119799
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01644H
	DD	01770H
	DD	00H
	DD	00H
	DD	0404a9fber			; 3.166
	DD	03fedb22dr			; 1.857
	DD	03fa126e9r			; 1.259
	DD	03f6f5c29r			; 0.935
	DD	03f3df3b6r			; 0.742
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408ccccdr			; 4.4
	DD	04291da1dr			; 72.926
	DD	0c3H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	0a00H
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119800
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01edcH
	DD	00H
	DD	00H
	DD	0404eb852r			; 3.23
	DD	04006b852r			; 2.105
	DD	03fba9fber			; 1.458
	DD	03f8db22dr			; 1.107
	DD	03f591687r			; 0.848
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408ccccdr			; 4.4
	DD	0428e7be7r			; 71.242
	DD	0c3H
	DD	0fH
	DD	037H
	DB	01H
	ORG $+3
	DD	0a4fH
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119801
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04089999ar			; 4.3
	DD	0428ee148r			; 71.44
	DD	0b9H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	08fcH
	DD	03ec28f5cr			; 0.38
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119802
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0428ee148r			; 71.44
	DD	0b9H
	DD	0eH
	DD	03cH
	DB	01H
	ORG $+3
	DD	092eH
	DD	03ec28f5cr			; 0.38
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119803
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04089999ar			; 4.3
	DD	042922c08r			; 73.086
	DD	0cdH
	DD	010H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0960H
	DD	03ebd70a4r			; 0.37
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119804
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04070a3d7r			; 3.76
	DD	04011374cr			; 2.269
	DD	03fd28f5cr			; 1.645
	DD	03fa0e560r			; 1.257
	DD	03f800000r			; 1
	DD	03f57ced9r			; 0.843
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04079999ar			; 3.9
	DD	042922c08r			; 73.086
	DD	0cdH
	DD	010H
	DD	02dH
	DB	01H
	ORG $+3
	DD	092eH
	DD	03ebd70a4r			; 0.37
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119805
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0407428f6r			; 3.815
	DD	04010a3d7r			; 2.26
	DD	03fd1eb85r			; 1.64
	DD	03f96a7f0r			; 1.177
	DD	03f8ccccdr			; 1.1
	DD	03f54fdf4r			; 0.832
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429874bcr			; 76.228
	DD	0cdH
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	09c2H
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119806
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01838H
	DD	00H
	DD	00H
	DD	04053b646r			; 3.308
	DD	0400851ecr			; 2.13
	DD	03fbdd2f2r			; 1.483
	DD	03f91cac1r			; 1.139
	DD	03f72f1aar			; 0.949
	DD	03f50e560r			; 0.816
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04069999ar			; 3.65
	DD	0429875c3r			; 76.23
	DD	0cdH
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0a76H
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119807
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01a2cH
	DD	01b58H
	DD	00H
	DD	00H
	DD	0404a9fber			; 3.166
	DD	03ff33333r			; 1.9
	DD	03fb1eb85r			; 1.39
	DD	03f83f7cfr			; 1.031
	DD	03f50a3d7r			; 0.815
	DD	03f39999ar			; 0.725
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04090ed91r			; 4.529
	DD	04295e76dr			; 74.952
	DD	0cdH
	DD	0fH
	DD	032H
	DB	01H
	ORG $+3
	DD	0893H
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119808
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	016a8H
	DD	01838H
	DD	00H
	DD	00H
	DD	0404eb852r			; 3.23
	DD	03ff47ae1r			; 1.91
	DD	03fa8f5c3r			; 1.32
	DD	03f6b851fr			; 0.92
	DD	03f3ae148r			; 0.73
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408947aer			; 4.29
	DD	04295e76dr			; 74.952
	DD	0e1H
	DD	0fH
	DD	032H
	DB	01H
	ORG $+3
	DD	0a8cH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119809
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01450H
	DD	01644H
	DD	00H
	DD	00H
	DD	04057ae14r			; 3.37
	DD	03ffeb852r			; 1.99
	DD	03faa3d71r			; 1.33
	DD	03f8ccccdr			; 1.1
	DD	03f2b851fr			; 0.67
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405147aer			; 3.27
	DD	042a15ba6r			; 80.679
	DD	0f5H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0ccaH
	DD	03eb851ecr			; 0.36
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119810
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01a90H
	DD	00H
	DD	00H
	DD	0406a3d71r			; 3.66
	DD	0401b851fr			; 2.43
	DD	03fd851ecr			; 1.69
	DD	03fa8f5c3r			; 1.32
	DD	03f800000r			; 1
	DD	03f266666r			; 0.65
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0406eb852r			; 3.73
	DD	042ab3ae1r			; 85.615
	DD	0ebH
	DD	012H
	DD	032H
	DB	01H
	ORG $+3
	DD	0e10H
	DD	03ec28f5cr			; 0.38
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119811
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01db0H
	DD	00H
	DD	00H
	DD	040447ae1r			; 3.07
	DD	03ffae148r			; 1.96
	DD	03fb70a3dr			; 1.43
	DD	03f90a3d7r			; 1.13
	DD	03f68f5c3r			; 0.91
	DD	03f3851ecr			; 0.72
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04081eb85r			; 4.06
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0c51H
	DD	03e99999ar			; 0.3
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119812
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01db0H
	DD	00H
	DD	00H
	DD	040447ae1r			; 3.07
	DD	03fdd70a4r			; 1.73
	DD	03f9d70a4r			; 1.23
	DD	03f7851ecr			; 0.97
	DD	03f451eb8r			; 0.77
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04081eb85r			; 4.06
	DD	0429b4d50r			; 77.651
	DD	0f5H
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0c1cH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119813
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01e14H
	DD	00H
	DD	00H
	DD	040511687r			; 3.267
	DD	0400851ecr			; 2.13
	DD	03fc22d0er			; 1.517
	DD	03f92d0e5r			; 1.147
	DD	03f6bc6a8r			; 0.921
	DD	03f3ced91r			; 0.738
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408c72b0r			; 4.389
	DD	0429b199ar			; 77.55
	DD	0cdH
	DD	0fH
	DD	03cH
	DB	01H
	ORG $+3
	DD	0adaH
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119814
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	01b58H
	DD	01f40H
	DD	00H
	DD	00H
	DD	0406b22d1r			; 3.674
	DD	0400de354r			; 2.217
	DD	03fb74bc7r			; 1.432
	DD	03f800000r			; 1
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0407a2d0er			; 3.909
	DD	04291bd71r			; 72.87
	DD	0b9H
	DD	046H
	DD	0dH
	DB	01H
	ORG $+3
	DD	092eH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119815
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	01b58H
	DD	01f40H
	DD	00H
	DD	00H
	DD	0406b22d1r			; 3.674
	DD	0400de354r			; 2.217
	DD	03fb74bc7r			; 1.432
	DD	03f800000r			; 1
	DD	03f533333r			; 0.825
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0407a2d0er			; 3.909
	DD	04291bd71r			; 72.87
	DD	0b9H
	DD	046H
	DD	0dH
	DB	01H
	ORG $+3
	DD	0951H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119816
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	01b58H
	DD	01f40H
	DD	00H
	DD	00H
	DD	04067ced9r			; 3.622
	DD	0400be76dr			; 2.186
	DD	03fb5a1cbr			; 1.419
	DD	03f800000r			; 1
	DD	03f420c4ar			; 0.758
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0407a2d0er			; 3.909
	DD	04291bd71r			; 72.87
	DD	0b9H
	DD	046H
	DD	0dH
	DB	01H
	ORG $+3
	DD	0a1eH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119817
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	01b58H
	DD	01d4cH
	DD	00H
	DD	00H
	DD	0405ee979r			; 3.483
	DD	0400147aer			; 2.02
	DD	03fb20c4ar			; 1.391
	DD	03f800000r			; 1
	DD	03f428f5cr			; 0.76
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	042973d71r			; 75.62
	DD	0cdH
	DD	032H
	DD	010H
	DB	01H
	ORG $+3
	DD	08fcH
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119818
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	01e78H
	DD	00H
	DD	00H
	DD	01b58H
	DD	01e78H
	DD	00H
	DD	00H
	DD	0405ee979r			; 3.483
	DD	04000f5c3r			; 2.015
	DD	03fb20c4ar			; 1.391
	DD	03f800000r			; 1
	DD	03f381062r			; 0.719
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429c3021r			; 78.094
	DD	0e1H
	DD	032H
	DD	010H
	DB	01H
	ORG $+3
	DD	0af0H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119819
	DB	0a8H
	DB	02H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	01f40H
	DD	021fcH
	DD	00H
	DD	00H
	DD	04070a3d7r			; 3.76
	DD	04011374cr			; 2.269
	DD	03fd28f5cr			; 1.645
	DD	03f97ef9er			; 1.187
	DD	03f800000r			; 1
	DD	03f57ced9r			; 0.843
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0408ccccdr			; 4.4
	DD	042a32f9er			; 81.593
	DD	0e1H
	DD	012H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0bf4H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119820
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	02328H
	DD	00H
	DD	00H
	DD	02134H
	DD	022c4H
	DD	00H
	DD	00H
	DD	0404851ecr			; 3.13
	DD	040033333r			; 2.05
	DD	03fbd70a4r			; 1.48
	DD	03f947ae1r			; 1.16
	DD	03f7851ecr			; 0.97
	DD	03f4f5c29r			; 0.81
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429c3021r			; 78.094
	DD	0e1H
	DD	010H
	DD	032H
	DB	01H
	ORG $+3
	DD	0af9H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119821
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01f40H
	DD	00H
	DD	00H
	DD	01d4cH
	DD	01edcH
	DD	00H
	DD	00H
	DD	0404851ecr			; 3.13
	DD	040033333r			; 2.05
	DD	03fbd70a4r			; 1.48
	DD	03f947ae1r			; 1.16
	DD	03f716873r			; 0.943
	DD	03f4353f8r			; 0.763
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	0429ce76dr			; 78.452
	DD	0e1H
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0af9H
	DD	03e9eb852r			; 0.31
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119822
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04089999ar			; 4.3
	DD	04290f5c3r			; 72.48
	DD	0cdH
	DD	0fH
	DD	032H
	DB	01H
	ORG $+3
	DD	08fcH
	DD	03ec28f5cr			; 0.38
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119823
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040833333r			; 4.1
	DD	04290f5c3r			; 72.48
	DD	0cdH
	DD	0fH
	DD	032H
	DB	01H
	ORG $+3
	DD	092eH
	DD	03ec28f5cr			; 0.38
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119824
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01c84H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	04048b439r			; 3.136
	DD	03ff1a9fcr			; 1.888
	DD	03faa3d71r			; 1.33
	DD	03f800000r			; 1
	DD	03f50624er			; 0.814
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04089999ar			; 4.3
	DD	04290f5c3r			; 72.48
	DD	0cdH
	DD	0fH
	DD	032H
	DB	01H
	ORG $+3
	DD	0960H
	DD	03ebd70a4r			; 0.37
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119825
	DB	0a8H
	DB	06H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01964H
	DD	00H
	DD	00H
	DD	040751eb8r			; 3.83
	DD	040170a3dr			; 2.36
	DD	03fd851ecr			; 1.69
	DD	03fa7ae14r			; 1.31
	DD	03f8ccccdr			; 1.1
	DD	03f4a3d71r			; 0.79
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405147aer			; 3.27
	DD	0429d4625r			; 78.637
	DD	0ffH
	DD	011H
	DD	028H
	DB	01H
	ORG $+3
	DD	0d7aH
	DD	03ea3d70ar			; 0.32
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119826
	DB	0a8H
	DB	0aH
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0157cH
	DD	01770H
	DD	00H
	DD	00H
	DD	0402a3d71r			; 2.66
	DD	03fe3d70ar			; 1.78
	DD	03fa66666r			; 1.3
	DD	03f8ccccdr			; 1.1
	DD	03f3d70a4r			; 0.74
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040447ae1r			; 3.07
	DD	042aa9687r			; 85.294
	DD	0159H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0d34H
	DD	03eb33333r			; 0.35
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119827
	DB	0a8H
	DB	0aH
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0157cH
	DD	01770H
	DD	00H
	DD	00H
	DD	04010a3d7r			; 2.26
	DD	03fca3d71r			; 1.58
	DD	03f9851ecr			; 1.19
	DD	03f800000r			; 1
	DD	03f451eb8r			; 0.77
	DD	03f2147aer			; 0.63
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040633333r			; 3.55
	DD	042aa9687r			; 85.294
	DD	0159H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0ce1H
	DD	03eb851ecr			; 0.36
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119828
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01838H
	DD	01a90H
	DD	00H
	DD	00H
	DD	04068b439r			; 3.636
	DD	040180000r			; 2.375
	DD	03fe16873r			; 1.761
	DD	03fac49bar			; 1.346
	DD	03f789375r			; 0.971
	DD	03f418937r			; 0.756
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04079999ar			; 3.9
	DD	0429ce76dr			; 78.452
	DD	0e1H
	DD	011H
	DD	02dH
	DB	01H
	ORG $+3
	DD	0cbfH
	DD	03ea8f5c3r			; 0.33
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119829
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	0189cH
	DD	00H
	DD	00H
	DD	04068b439r			; 3.636
	DD	0400f0a3dr			; 2.235
	DD	03fc2b021r			; 1.521
	DD	03f918937r			; 1.137
	DD	03f789375r			; 0.971
	DD	03f418937r			; 0.756
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	04079999ar			; 3.9
	DD	042a19581r			; 80.792
	DD	0f5H
	DD	012H
	DD	028H
	DB	01H
	ORG $+3
	DD	0d43H
	DD	03eb851ecr			; 0.36
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119830
	DB	0a8H
	DB	04H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	0189cH
	DD	00H
	DD	00H
	DD	04068b439r			; 3.636
	DD	0400f0a3dr			; 2.235
	DD	03fc2b021r			; 1.521
	DD	03f918937r			; 1.137
	DD	03f789375r			; 0.971
	DD	03f418937r			; 0.756
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	040628f5cr			; 3.54
	DD	042a19581r			; 80.792
	DD	0f5H
	DD	012H
	DD	028H
	DB	01H
	ORG $+3
	DD	0d2dH
	DD	03eb851ecr			; 0.36
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119831
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01770H
	DD	01964H
	DD	00H
	DD	00H
	DD	0402a3d71r			; 2.66
	DD	03fe3d70ar			; 1.78
	DD	03fa66666r			; 1.3
	DD	03f800000r			; 1
	DD	03f3d70a4r			; 0.74
	DD	03f000000r			; 0.5
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405ae148r			; 3.42
	DD	042a32b02r			; 81.584
	DD	0127H
	DD	013H
	DD	023H
	DB	01H
	ORG $+3
	DD	0c2bH
	DD	03eae147br			; 0.34
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119832
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0403e147br			; 2.97
	DD	040047ae1r			; 2.07
	DD	03fb70a3dr			; 1.43
	DD	03f800000r			; 1
	DD	03f570a3dr			; 0.84
	DD	03f0f5c29r			; 0.56
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405ae148r			; 3.42
	DD	042a79db2r			; 83.808
	DD	0145H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0c6cH
	DD	03eae147br			; 0.34
	DD	03f000000r			; 0.5
	DD	FLAT:$SG119833
	DB	0a8H
	DB	08H
	ORG $+2
	DD	00H
	DD	01b58H
	DD	00H
	DD	00H
	DD	01964H
	DD	01b58H
	DD	00H
	DD	00H
	DD	0403e147br			; 2.97
	DD	040047ae1r			; 2.07
	DD	03fb70a3dr			; 1.43
	DD	03f800000r			; 1
	DD	03f570a3dr			; 0.84
	DD	03f0f5c29r			; 0.56
	DD	000000000r			; 0
	DD	000000000r			; 0
	DD	0405ae148r			; 3.42
	DD	042a79db2r			; 83.808
	DD	0145H
	DD	013H
	DD	01eH
	DB	01H
	ORG $+3
	DD	0c6cH
	DD	03eae147br			; 0.34
	DD	03f000000r			; 0.5
$SG119891 DB	'00.00', 00H
	ORG $+2
$SG119894 DB	'00.01', 00H
	ORG $+2
$SG119900 DB	'00.00', 00H
	ORG $+2
$SG119921 DB	'00.01', 00H
	ORG $+2
$SG119947 DB	'00.02', 00H
	ORG $+2
$SG120074 DB	'wb', 00H
	ORG $+1
$SG120083 DB	'ConfigFiles', 00H
$SG120084 DB	'USERPROFILE', 00H
$SG120085 DB	'My Documents', 00H
	ORG $+3
$SG120087 DB	'Traqmate Data', 00H
	ORG $+2
$SG120088 DB	'Traqmate Data', 00H
	ORG $+2
$SG120090 DB	'Traqdash PC', 00H
$SG120091 DB	'Traqdash PC', 00H
$SG120142 DB	'AEM AirFuel', 00H
$SG120143 DB	'Ratio', 00H
	ORG $+2
$SG120145 DB	'AEM MAP75', 00H
	ORG $+2
$SG120146 DB	'PSI', 00H
$SG120148 DB	'PLX Temp', 00H
	ORG $+3
$SG120149 DB	'DegF', 00H
	ORG $+3
$SG120151 DB	'Battery', 00H
$SG120152 DB	'Volts', 00H
	ORG $+2
$SG120162 DB	'Brake', 00H
	ORG $+2
$SG120163 DB	'Go', 00H
	ORG $+1
$SG120164 DB	'Stop', 00H
	ORG $+3
$SG120166 DB	'Digital %d', 00H
	ORG $+1
$SG120167 DB	'ON', 00H
	ORG $+1
$SG120168 DB	'OFF', 00H
$SG120191 DB	'\', 00H
	ORG $+2
$SG120199 DB	'.dat', 00H
	ORG $+3
$SG120248 DB	'rb', 00H
	ORG $+1
$SG120276 DB	'Driver B', 00H
	ORG $+3
$SG120277 DB	'Driver C', 00H
	ORG $+3
$SG120278 DB	'Driver D', 00H
	ORG $+3
$SG120279 DB	'Driver E', 00H
	ORG $+3
$SG120308 DB	'\', 00H
	ORG $+2
$SG120310 DB	'Check Your Settings', 00H
$SG120311 DB	'Vehicle data, including inputs,', 00H
$SG120312 DB	'updated to a new version.', 00H
	ORG $+2
$SG120313 DB	'Check your alarm settings.', 00H
	ORG $+1
$SG120314 DB	'OK', 00H
_DATA	ENDS
CONST	SEGMENT
_SOFTWARE_VERSION DB '00.00', 00H
_DEFAULT_TRACK DB 00H
	ORG $+1
_SYSTEM_VERSION DB '00.02', 00H
	ORG $+2
_VEHICLE_VERSION DB '00.01', 00H
	ORG $+2
_DRIVER_VERSION DB '00.00', 00H
	ORG $+2
_TRACK_VERSION DB '00.00', 00H
	ORG $+2
_SYSTEM_FILE_NAME DB 'SystemConfig', 00H
	ORG $+3
_BACKUP_SYSTEM_FILE_NAME DB 'BackupSystemConfig', 00H
	ORG $+1
_DEFAULT_DRIVER DB 'Driver A', 00H
	ORG $+3
_DEFAULT_VEHICLE DB 'Spec Miata 99-05', 00H
	ORG $+3
_SYSTEM_PATH DB	'ConfigFiles', 00H
_DRIVER_PATH DB	'ConfigFiles\Drivers', 00H
_VEHICLE_PATH DB 'ConfigFiles\Vehicles', 00H
	ORG $+3
_TRACK_PATH DB	'ConfigFiles\Tracks', 00H
	ORG $+1
_MY_SESSIONS_PATH DB 'MySessions', 00H
	ORG $+5
_UpdatedFileResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG120310
	DW	00H
	DW	01eH
	DW	014H
	DW	0190H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120311
	DW	00H
	DW	00H
	DW	0aH
	DW	0186H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120312
	DW	00H
	DW	00H
	DW	028H
	DW	0186H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120313
	DW	00H
	DW	00H
	DW	046H
	DW	0186H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120314
	DW	01H
	DW	091H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
CONST	ENDS
PUBLIC	_ReadSDCardData
PUBLIC	_ReadDataStructures
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\flashreadwrite.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ReadDataStructures
_TEXT	SEGMENT
_ReadDataStructures PROC				; COMDAT
; Line 2831
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2832
	call	_ReadSDCardData
; Line 2833
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ReadDataStructures ENDP
_TEXT	ENDS
PUBLIC	_ReloadData
EXTRN	_DisplaySplashScreen3:PROC
EXTRN	_ValidateCameraData:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ReadSDCardData
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_ReadSDCardData PROC					; COMDAT
; Line 2836
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2839
	mov	DWORD PTR _retval$[ebp], 0
; Line 2841
	push	0
	call	_ReloadData
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@ReadSDCard
; Line 2842
	mov	DWORD PTR _retval$[ebp], 1
$LN4@ReadSDCard:
; Line 2845
	push	2
	call	_ReloadData
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@ReadSDCard
; Line 2846
	mov	eax, DWORD PTR _retval$[ebp]
	or	eax, 2
	mov	DWORD PTR _retval$[ebp], eax
$LN3@ReadSDCard:
; Line 2849
	call	_ValidateCameraData
; Line 2852
	call	_DisplaySplashScreen3
; Line 2855
	push	1
	call	_ReloadData
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@ReadSDCard
; Line 2856
	mov	eax, DWORD PTR _retval$[ebp]
	or	eax, 4
	mov	DWORD PTR _retval$[ebp], eax
$LN2@ReadSDCard:
; Line 2859
	push	3
	call	_ReloadData
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@ReadSDCard
; Line 2860
	mov	eax, DWORD PTR _retval$[ebp]
	or	eax, 8
	mov	DWORD PTR _retval$[ebp], eax
$LN1@ReadSDCard:
; Line 2867
	mov	eax, DWORD PTR _retval$[ebp]
; Line 2868
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ReadSDCardData ENDP
_TEXT	ENDS
PUBLIC	_DisplayUpdatedVehicleDataPopup
PUBLIC	_UpgradeVehicleData00_01
PUBLIC	_WriteUserDataEvent
PUBLIC	_UpgradeSysData01_02
PUBLIC	_UpgradeSysData00_01
PUBLIC	_verifyData
EXTRN	_memcpy:PROC
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _verifyData
_TEXT	SEGMENT
tv80 = -268						; size = 4
tv64 = -268						; size = 4
_pData$119872 = -68					; size = 4
_i$119871 = -56						; size = 4
_checksum$119870 = -44					; size = 4
_size$ = -32						; size = 4
_originalChecksum$ = -20				; size = 4
_pVersion$ = -8						; size = 4
_data$ = 8						; size = 4
_pNewData$ = 12						; size = 4
_copyData$ = 16						; size = 4
_verifyData PROC					; COMDAT
; Line 2881
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2886
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN27@verifyData
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN36@verifyData[ecx*4]
$LN31@verifyData:
; Line 2889
	mov	DWORD PTR _pVersion$[ebp], OFFSET _SYSTEM_VERSION
; Line 2890
	mov	DWORD PTR _size$[ebp], 244		; 000000f4H
; Line 2891
	jmp	SHORT $LN32@verifyData
$LN30@verifyData:
; Line 2893
	mov	DWORD PTR _pVersion$[ebp], OFFSET _TRACK_VERSION
; Line 2894
	mov	DWORD PTR _size$[ebp], 5280		; 000014a0H
; Line 2895
	jmp	SHORT $LN32@verifyData
$LN29@verifyData:
; Line 2897
	mov	DWORD PTR _pVersion$[ebp], OFFSET _VEHICLE_VERSION
; Line 2898
	mov	DWORD PTR _size$[ebp], 476		; 000001dcH
; Line 2899
	jmp	SHORT $LN32@verifyData
$LN28@verifyData:
; Line 2901
	mov	DWORD PTR _pVersion$[ebp], OFFSET _DRIVER_VERSION
; Line 2902
	mov	DWORD PTR _size$[ebp], 16		; 00000010H
; Line 2903
	jmp	SHORT $LN32@verifyData
$LN27@verifyData:
; Line 2905
	xor	al, al
	jmp	$LN34@verifyData
$LN32@verifyData:
; Line 2909
	mov	eax, DWORD PTR _pNewData$[ebp]
	add	eax, DWORD PTR _size$[ebp]
	mov	ecx, DWORD PTR [eax-4]
	mov	DWORD PTR _originalChecksum$[ebp], ecx
; Line 2911
	mov	eax, DWORD PTR _pVersion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	$LN26@verifyData
; Line 2918
	mov	DWORD PTR _checksum$119870[ebp], 0
; Line 2919
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$119872[ebp], eax
; Line 2920
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 4
	mov	DWORD PTR _i$119871[ebp], eax
	jmp	SHORT $LN25@verifyData
$LN24@verifyData:
	mov	eax, DWORD PTR _i$119871[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$119871[ebp], eax
$LN25@verifyData:
	cmp	DWORD PTR _i$119871[ebp], 0
	jle	SHORT $LN23@verifyData
; Line 2921
	mov	eax, DWORD PTR _pData$119872[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$119870[ebp]
	mov	DWORD PTR _checksum$119870[ebp], ecx
	mov	edx, DWORD PTR _pData$119872[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$119872[ebp], edx
	jmp	SHORT $LN24@verifyData
$LN23@verifyData:
; Line 2923
	mov	eax, DWORD PTR _originalChecksum$[ebp]
	cmp	eax, DWORD PTR _checksum$119870[ebp]
	jne	$LN22@verifyData
; Line 2925
	cmp	DWORD PTR _copyData$[ebp], 0
	je	$LN21@verifyData
; Line 2930
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR tv80[ebp], eax
	cmp	DWORD PTR tv80[ebp], 3
	ja	SHORT $LN14@verifyData
	mov	ecx, DWORD PTR tv80[ebp]
	jmp	DWORD PTR $LN37@verifyData[ecx*4]
$LN18@verifyData:
; Line 2933
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	push	OFFSET _sysData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2934
	jmp	SHORT $LN21@verifyData
$LN17@verifyData:
; Line 2936
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	push	OFFSET _trackData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2937
	jmp	SHORT $LN21@verifyData
$LN16@verifyData:
; Line 2939
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	push	OFFSET _vehicleData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2940
	jmp	SHORT $LN21@verifyData
$LN15@verifyData:
; Line 2942
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	push	OFFSET _driverData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 2943
	jmp	SHORT $LN21@verifyData
$LN14@verifyData:
; Line 2945
	xor	al, al
	jmp	$LN34@verifyData
$LN21@verifyData:
; Line 2949
	mov	al, 1
	jmp	$LN34@verifyData
$LN22@verifyData:
; Line 2952
	jmp	$LN13@verifyData
$LN26@verifyData:
; Line 2955
	cmp	DWORD PTR _data$[ebp], 0
	jne	SHORT $LN12@verifyData
; Line 2957
	push	OFFSET $SG119891
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN11@verifyData
; Line 2958
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_UpgradeSysData00_01
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN11@verifyData
; Line 2959
	xor	al, al
	jmp	$LN34@verifyData
$LN11@verifyData:
; Line 2962
	push	OFFSET $SG119894
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN9@verifyData
; Line 2964
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_UpgradeSysData01_02
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN8@verifyData
; Line 2965
	xor	al, al
	jmp	SHORT $LN34@verifyData
; Line 2966
	jmp	SHORT $LN9@verifyData
$LN8@verifyData:
; Line 2969
	push	0
	call	_WriteUserDataEvent
	add	esp, 4
; Line 2970
	mov	al, 1
	jmp	SHORT $LN34@verifyData
$LN9@verifyData:
; Line 2972
	jmp	SHORT $LN13@verifyData
$LN12@verifyData:
; Line 2974
	cmp	DWORD PTR _data$[ebp], 2
	jne	SHORT $LN5@verifyData
; Line 2976
	push	OFFSET $SG119900
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@verifyData
; Line 2978
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_UpgradeVehicleData00_01
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@verifyData
; Line 2979
	xor	al, al
	jmp	SHORT $LN34@verifyData
; Line 2980
	jmp	SHORT $LN4@verifyData
$LN3@verifyData:
; Line 2983
	push	2
	call	_WriteUserDataEvent
	add	esp, 4
; Line 2984
	call	_DisplayUpdatedVehicleDataPopup
; Line 2985
	mov	al, 1
	jmp	SHORT $LN34@verifyData
$LN4@verifyData:
; Line 2987
	jmp	SHORT $LN13@verifyData
$LN5@verifyData:
; Line 2989
	xor	al, al
	jmp	SHORT $LN34@verifyData
$LN13@verifyData:
; Line 2991
	xor	al, al
$LN34@verifyData:
; Line 2992
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN36@verifyData:
	DD	$LN31@verifyData
	DD	$LN30@verifyData
	DD	$LN29@verifyData
	DD	$LN28@verifyData
$LN37@verifyData:
	DD	$LN18@verifyData
	DD	$LN17@verifyData
	DD	$LN16@verifyData
	DD	$LN15@verifyData
_verifyData ENDP
_TEXT	ENDS
EXTRN	_strcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpgradeSysData00_01
_TEXT	SEGMENT
_originalChecksum$ = -44				; size = 4
_pData$ = -32						; size = 4
_i$ = -20						; size = 4
_checksum$ = -8						; size = 4
_pNewData$ = 8						; size = 4
_UpgradeSysData00_01 PROC				; COMDAT
; Line 3002
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3009
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	mov	DWORD PTR _originalChecksum$[ebp], ecx
; Line 3012
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3013
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 3014
	mov	DWORD PTR _i$[ebp], 216			; 000000d8H
	jmp	SHORT $LN8@UpgradeSys
$LN7@UpgradeSys:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@UpgradeSys:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN6@UpgradeSys
; Line 3015
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN7@UpgradeSys
$LN6@UpgradeSys:
; Line 3017
	mov	eax, DWORD PTR _originalChecksum$[ebp]
	cmp	eax, DWORD PTR _checksum$[ebp]
	jne	$LN5@UpgradeSys
; Line 3021
	push	220					; 000000dcH
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	push	OFFSET _sysData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3025
	mov	BYTE PTR _sysData+214, 0
; Line 3026
	mov	BYTE PTR _sysData+215, 0
; Line 3027
	mov	DWORD PTR _sysData+240, 0
; Line 3028
	push	OFFSET $SG119921
	push	OFFSET _sysData
	call	_strcpy
	add	esp, 8
; Line 3031
	mov	DWORD PTR _pData$[ebp], OFFSET _sysData
; Line 3032
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3033
	mov	DWORD PTR _i$[ebp], 216			; 000000d8H
	jmp	SHORT $LN4@UpgradeSys
$LN3@UpgradeSys:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@UpgradeSys:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN2@UpgradeSys
; Line 3034
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN3@UpgradeSys
$LN2@UpgradeSys:
; Line 3037
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 3040
	push	220					; 000000dcH
	push	OFFSET _sysData
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3042
	mov	al, 1
	jmp	SHORT $LN9@UpgradeSys
	jmp	SHORT $LN9@UpgradeSys
$LN5@UpgradeSys:
; Line 3044
	xor	al, al
$LN9@UpgradeSys:
; Line 3045
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpgradeSysData00_01 ENDP
_TEXT	ENDS
PUBLIC	_SetDefaultTempCalData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpgradeSysData01_02
_TEXT	SEGMENT
_originalChecksum$ = -44				; size = 4
_pData$ = -32						; size = 4
_i$ = -20						; size = 4
_checksum$ = -8						; size = 4
_pNewData$ = 8						; size = 4
_UpgradeSysData01_02 PROC				; COMDAT
; Line 3055
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3062
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+216]
	mov	DWORD PTR _originalChecksum$[ebp], ecx
; Line 3065
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3066
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 3067
	mov	DWORD PTR _i$[ebp], 216			; 000000d8H
	jmp	SHORT $LN8@UpgradeSys@2
$LN7@UpgradeSys@2:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@UpgradeSys@2:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN6@UpgradeSys@2
; Line 3068
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN7@UpgradeSys@2
$LN6@UpgradeSys@2:
; Line 3070
	mov	eax, DWORD PTR _originalChecksum$[ebp]
	cmp	eax, DWORD PTR _checksum$[ebp]
	jne	$LN5@UpgradeSys@2
; Line 3074
	push	220					; 000000dcH
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	push	OFFSET _sysData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3077
	call	_SetDefaultTempCalData
; Line 3078
	mov	DWORD PTR _sysData+240, 0
; Line 3079
	push	OFFSET $SG119947
	push	OFFSET _sysData
	call	_strcpy
	add	esp, 8
; Line 3082
	mov	DWORD PTR _pData$[ebp], OFFSET _sysData
; Line 3083
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3084
	mov	DWORD PTR _i$[ebp], 240			; 000000f0H
	jmp	SHORT $LN4@UpgradeSys@2
$LN3@UpgradeSys@2:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@UpgradeSys@2:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN2@UpgradeSys@2
; Line 3085
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN3@UpgradeSys@2
$LN2@UpgradeSys@2:
; Line 3088
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 3091
	push	244					; 000000f4H
	push	OFFSET _sysData
	mov	eax, DWORD PTR _pNewData$[ebp]
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3093
	mov	al, 1
	jmp	SHORT $LN9@UpgradeSys@2
	jmp	SHORT $LN9@UpgradeSys@2
$LN5@UpgradeSys@2:
; Line 3095
	xor	al, al
$LN9@UpgradeSys@2:
; Line 3096
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpgradeSysData01_02 ENDP
_TEXT	ENDS
PUBLIC	_UpdateAnalogInputData
EXTRN	_memset:PROC
EXTRN	__fltused:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpgradeVehicleData00_01
_TEXT	SEGMENT
_originalChecksum$ = -44				; size = 4
_pData$ = -32						; size = 4
_i$ = -20						; size = 4
_checksum$ = -8						; size = 4
_pNewData$ = 8						; size = 4
_UpgradeVehicleData00_01 PROC				; COMDAT
; Line 3107
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3114
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+456]
	mov	DWORD PTR _originalChecksum$[ebp], ecx
; Line 3117
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3118
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 3119
	mov	DWORD PTR _i$[ebp], 456			; 000001c8H
	jmp	SHORT $LN8@UpgradeVeh
$LN7@UpgradeVeh:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@UpgradeVeh:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN6@UpgradeVeh
; Line 3120
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN7@UpgradeVeh
$LN6@UpgradeVeh:
; Line 3122
	mov	eax, DWORD PTR _originalChecksum$[ebp]
	cmp	eax, DWORD PTR _checksum$[ebp]
	jne	$LN5@UpgradeVeh
; Line 3125
	push	476					; 000001dcH
	push	0
	push	OFFSET _vehicleData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3127
	push	6
	push	OFFSET _VEHICLE_VERSION
	push	OFFSET _vehicleData
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3128
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	cl, BYTE PTR [eax+12]
	mov	BYTE PTR _vehicleData+12, cl
; Line 3129
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	cl, BYTE PTR [eax+13]
	mov	BYTE PTR _vehicleData+13, cl
; Line 3130
	mov	esi, DWORD PTR _pNewData$[ebp]
	add	esi, 16					; 00000010H
	mov	ecx, 8
	mov	edi, OFFSET _vehicleData+16
	rep movsd
; Line 3131
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+48]
	fstp	DWORD PTR _vehicleData+48
; Line 3132
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+52]
	fstp	DWORD PTR _vehicleData+52
; Line 3133
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+56]
	fstp	DWORD PTR _vehicleData+56
; Line 3134
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+60]
	fstp	DWORD PTR _vehicleData+60
; Line 3135
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+64]
	fstp	DWORD PTR _vehicleData+64
; Line 3136
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+68]
	fstp	DWORD PTR _vehicleData+68
; Line 3137
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+72]
	fstp	DWORD PTR _vehicleData+72
; Line 3138
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+76]
	fstp	DWORD PTR _vehicleData+76
; Line 3139
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+80]
	fstp	DWORD PTR _vehicleData+80
; Line 3140
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+84]
	fstp	DWORD PTR _vehicleData+84
; Line 3141
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _vehicleData+88, ecx
; Line 3142
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _vehicleData+92, ecx
; Line 3143
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _vehicleData+96, ecx
; Line 3144
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	cl, BYTE PTR [eax+100]
	mov	BYTE PTR _vehicleData+100, cl
; Line 3145
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _vehicleData+104, ecx
; Line 3146
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+108]
	fstp	DWORD PTR _vehicleData+108
; Line 3147
	mov	eax, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [eax+112]
	fstp	DWORD PTR _vehicleData+112
; Line 3148
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	cl, BYTE PTR [eax+116]
	mov	BYTE PTR _vehicleData+116, cl
; Line 3149
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@UpgradeVeh
$LN3@UpgradeVeh:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@UpgradeVeh:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN2@UpgradeVeh
; Line 3150
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNewData$[ebp]
	push	ecx
	call	_UpdateAnalogInputData
	add	esp, 8
	jmp	SHORT $LN3@UpgradeVeh
$LN2@UpgradeVeh:
; Line 3151
	mov	esi, DWORD PTR _pNewData$[ebp]
	add	esi, 360				; 00000168H
	mov	ecx, 11					; 0000000bH
	mov	edi, OFFSET _vehicleData+376
	rep movsd
	movsw
	movsb
; Line 3152
	mov	esi, DWORD PTR _pNewData$[ebp]
	add	esi, 407				; 00000197H
	mov	ecx, 11					; 0000000bH
	mov	edi, OFFSET _vehicleData+423
	rep movsd
	movsw
	movsb
; Line 3168
	mov	al, 1
	jmp	SHORT $LN1@UpgradeVeh
	jmp	SHORT $LN1@UpgradeVeh
$LN5@UpgradeVeh:
; Line 3170
	xor	al, al
$LN1@UpgradeVeh:
; Line 3171
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpgradeVehicleData00_01 ENDP
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	__real@40000000
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _UpdateAnalogInputData
_TEXT	SEGMENT
_pNewData$ = 8						; size = 4
_i$ = 12						; size = 4
_UpdateAnalogInputData PROC				; COMDAT
; Line 3174
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3175
	push	17					; 00000011H
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pNewData$[ebp]
	lea	edx, DWORD PTR [ecx+eax+120]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+120
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3176
	push	10					; 0000000aH
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pNewData$[ebp]
	lea	edx, DWORD PTR [ecx+eax+137]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3177
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+147]
	mov	BYTE PTR _vehicleData[ecx+147], al
; Line 3178
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [ecx+eax+152]
	fld	DWORD PTR __real@40000000
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN5@UpdateAnal
; Line 3180
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+152]
	fstp	DWORD PTR _vehicleData[ecx+152]
; Line 3181
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+148]
	mov	BYTE PTR _vehicleData[ecx+148], al
; Line 3182
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+149], 0
; Line 3183
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+156]
	jmp	$LN1@UpdateAnal
$LN5@UpdateAnal:
; Line 3185
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pNewData$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+148]
	cmp	edx, 1
	je	SHORT $LN2@UpdateAnal
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _pNewData$[ebp]
	movzx	edx, BYTE PTR [ecx+eax+148]
	cmp	edx, 3
	jne	SHORT $LN3@UpdateAnal
$LN2@UpdateAnal:
; Line 3187
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+152]
	fstp	DWORD PTR _vehicleData[ecx+156]
; Line 3188
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+148]
	mov	BYTE PTR _vehicleData[ecx+149], al
; Line 3189
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+148], 0
; Line 3190
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+152]
; Line 3192
	jmp	SHORT $LN1@UpdateAnal
$LN3@UpdateAnal:
; Line 3194
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+156]
; Line 3195
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+149], 0
; Line 3196
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+148], 0
; Line 3197
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+152]
$LN1@UpdateAnal:
; Line 3199
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+156]
	mov	BYTE PTR _vehicleData[ecx+160], al
; Line 3200
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+160]
	fstp	DWORD PTR _vehicleData[ecx+164]
; Line 3201
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+164]
	fstp	DWORD PTR _vehicleData[ecx+168]
; Line 3202
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+168]
	fstp	DWORD PTR _vehicleData[ecx+172]
; Line 3203
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	fld	DWORD PTR [edx+eax+172]
	fstp	DWORD PTR _vehicleData[ecx+176]
; Line 3204
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+176]
	mov	BYTE PTR _vehicleData[ecx+180], al
; Line 3205
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 60					; 0000003cH
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 6
	mov	edx, DWORD PTR _pNewData$[ebp]
	mov	al, BYTE PTR [edx+eax+177]
	mov	BYTE PTR _vehicleData[ecx+181], al
; Line 3206
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateAnalogInputData ENDP
_TEXT	ENDS
EXTRN	_CalculateTempCorrection:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDefaultTempCalData
_TEXT	SEGMENT
_SetDefaultTempCalData PROC				; COMDAT
; Line 3209
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3210
	mov	DWORD PTR _sysData+216, 24		; 00000018H
; Line 3212
	mov	DWORD PTR _sysData+220, 565		; 00000235H
; Line 3216
	call	_CalculateTempCorrection
	mov	DWORD PTR _sysData+224, eax
; Line 3217
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultTempCalData ENDP
_TEXT	ENDS
PUBLIC	_WriteDataStructures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WriteDataStructures
_TEXT	SEGMENT
_data$ = 8						; size = 4
_WriteDataStructures PROC				; COMDAT
; Line 3232
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3234
	mov	eax, DWORD PTR _data$[ebp]
	push	eax
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3240
	xor	eax, eax
; Line 3241
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WriteDataStructures ENDP
_TEXT	ENDS
PUBLIC	_FRWWriteFile
PUBLIC	_ConvertToFilename
PUBLIC	__$ArrayPad$
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WriteUserDataEvent
_TEXT	SEGMENT
tv64 = -812						; size = 4
_backupFileName$120055 = -612				; size = 256
_retval$120054 = -348					; size = 4
_fileName$ = -336					; size = 256
_pNewData$ = -72					; size = 4
_pData$ = -60						; size = 4
_i$ = -48						; size = 4
_checksumSave$ = -36					; size = 4
_checksum$ = -24					; size = 4
_size$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_data$ = 8						; size = 4
_WriteUserDataEvent PROC				; COMDAT
; Line 3245
	push	ebp
	mov	ebp, esp
	sub	esp, 812				; 0000032cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-812]
	mov	ecx, 203				; 000000cbH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3253
	mov	eax, DWORD PTR _data$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN10@WriteUserD
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN23@WriteUserD[ecx*4]
$LN14@WriteUserD:
; Line 3256
	mov	DWORD PTR _pNewData$[ebp], OFFSET _sysData
; Line 3257
	mov	DWORD PTR _size$[ebp], 244		; 000000f4H
; Line 3258
	push	0
	push	OFFSET _SYSTEM_FILE_NAME
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3259
	jmp	SHORT $LN15@WriteUserD
$LN13@WriteUserD:
; Line 3261
	mov	DWORD PTR _pNewData$[ebp], OFFSET _trackData
; Line 3262
	mov	DWORD PTR _size$[ebp], 5280		; 000014a0H
; Line 3263
	push	1
	push	OFFSET _sysData+160
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3264
	jmp	SHORT $LN15@WriteUserD
$LN12@WriteUserD:
; Line 3266
	mov	DWORD PTR _pNewData$[ebp], OFFSET _vehicleData
; Line 3267
	mov	DWORD PTR _size$[ebp], 476		; 000001dcH
; Line 3268
	push	2
	push	OFFSET _sysData+143
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3269
	jmp	SHORT $LN15@WriteUserD
$LN11@WriteUserD:
; Line 3271
	mov	DWORD PTR _pNewData$[ebp], OFFSET _driverData
; Line 3272
	mov	DWORD PTR _size$[ebp], 16		; 00000010H
; Line 3273
	push	3
	push	OFFSET _sysData+126
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3274
	jmp	SHORT $LN15@WriteUserD
$LN10@WriteUserD:
; Line 3276
	or	eax, -1
	jmp	$LN17@WriteUserD
$LN15@WriteUserD:
; Line 3280
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3281
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 3282
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 4
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN9@WriteUserD
$LN8@WriteUserD:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@WriteUserD:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN7@WriteUserD
; Line 3283
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN8@WriteUserD
$LN7@WriteUserD:
; Line 3284
	mov	eax, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksumSave$[ebp], eax
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	edx, DWORD PTR _checksumSave$[ebp]
	mov	DWORD PTR [ecx], edx
; Line 3286
	cmp	DWORD PTR _data$[ebp], 0
	jne	$LN6@WriteUserD
; Line 3291
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_FRWWriteFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$120054[ebp], eax
; Line 3292
	push	0
	push	OFFSET _BACKUP_SYSTEM_FILE_NAME
	lea	eax, DWORD PTR _backupFileName$120055[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3293
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _backupFileName$120055[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_FRWWriteFile
	add	esp, 12					; 0000000cH
; Line 3297
	mov	DWORD PTR _checksum$[ebp], 0
; Line 3298
	mov	eax, DWORD PTR _pNewData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 3299
	mov	eax, DWORD PTR _size$[ebp]
	sub	eax, 4
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN5@WriteUserD
$LN4@WriteUserD:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@WriteUserD:
	cmp	DWORD PTR _i$[ebp], 0
	jle	SHORT $LN3@WriteUserD
; Line 3300
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR _checksum$[ebp], ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, 1
	mov	DWORD PTR _pData$[ebp], edx
	jmp	SHORT $LN4@WriteUserD
$LN3@WriteUserD:
; Line 3301
	mov	eax, DWORD PTR _checksumSave$[ebp]
	cmp	eax, DWORD PTR _checksum$[ebp]
	je	SHORT $LN2@WriteUserD
; Line 3307
	mov	eax, DWORD PTR _pData$[ebp]
	mov	ecx, DWORD PTR _checksum$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 3308
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_FRWWriteFile
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _retval$120054[ebp], eax
; Line 3309
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _backupFileName$120055[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_FRWWriteFile
	add	esp, 12					; 0000000cH
$LN2@WriteUserD:
; Line 3312
	mov	eax, DWORD PTR _retval$120054[ebp]
	jmp	SHORT $LN17@WriteUserD
	jmp	SHORT $LN17@WriteUserD
$LN6@WriteUserD:
; Line 3314
	mov	eax, DWORD PTR _size$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_FRWWriteFile
	add	esp, 12					; 0000000cH
$LN17@WriteUserD:
; Line 3315
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@WriteUserD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 812				; 0000032cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@WriteUserD:
	DD	2
	DD	$LN21@WriteUserD
$LN21@WriteUserD:
	DD	-336					; fffffeb0H
	DD	256					; 00000100H
	DD	$LN19@WriteUserD
	DD	-612					; fffffd9cH
	DD	256					; 00000100H
	DD	$LN20@WriteUserD
$LN20@WriteUserD:
	DB	98					; 00000062H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN19@WriteUserD:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN23@WriteUserD:
	DD	$LN14@WriteUserD
	DD	$LN13@WriteUserD
	DD	$LN12@WriteUserD
	DD	$LN11@WriteUserD
_WriteUserDataEvent ENDP
_TEXT	ENDS
EXTRN	_fclose:PROC
EXTRN	_fwrite:PROC
EXTRN	_fopen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRWWriteFile
_TEXT	SEGMENT
_byteswritten$ = -20					; size = 4
_pFile$ = -8						; size = 4
_pNewData$ = 8						; size = 4
_fileName$ = 12						; size = 4
_size$ = 16						; size = 4
_FRWWriteFile PROC					; COMDAT
; Line 3318
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3324
	push	OFFSET $SG120074
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$[ebp], eax
	cmp	DWORD PTR _pFile$[ebp], 0
	je	SHORT $LN3@FRWWriteFi
; Line 3327
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pNewData$[ebp]
	push	edx
	call	_fwrite
	add	esp, 16					; 00000010H
	mov	DWORD PTR _byteswritten$[ebp], eax
; Line 3328
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 3329
	cmp	DWORD PTR _byteswritten$[ebp], 1
	je	SHORT $LN2@FRWWriteFi
; Line 3330
	or	eax, -1
	jmp	SHORT $LN4@FRWWriteFi
$LN2@FRWWriteFi:
; Line 3332
	jmp	SHORT $LN1@FRWWriteFi
$LN3@FRWWriteFi:
	or	eax, -1
	jmp	SHORT $LN4@FRWWriteFi
$LN1@FRWWriteFi:
; Line 3355
	xor	eax, eax
$LN4@FRWWriteFi:
; Line 3356
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRWWriteFile ENDP
_TEXT	ENDS
PUBLIC	_ConfigureHomeDirectory
EXTRN	__imp__CreateDirectoryA@8:PROC
EXTRN	_getenv:PROC
EXTRN	__imp__SetCurrentDirectoryA@4:PROC
EXTRN	__imp__GetDriveTypeA@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ConfigureHomeDirectory
_TEXT	SEGMENT
_pPathInit$ = -8					; size = 4
_ConfigureHomeDirectory PROC				; COMDAT
; Line 3367
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3371
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__GetDriveTypeA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 2
	jne	SHORT $LN2@ConfigureH
; Line 3372
	jmp	$LN3@ConfigureH
$LN2@ConfigureH:
; Line 3375
	mov	esi, esp
	push	OFFSET $SG120083
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN1@ConfigureH
; Line 3376
	jmp	$LN3@ConfigureH
$LN1@ConfigureH:
; Line 3380
	push	OFFSET $SG120084
	call	_getenv
	add	esp, 4
	mov	DWORD PTR _pPathInit$[ebp], eax
; Line 3381
	mov	esi, esp
	mov	eax, DWORD PTR _pPathInit$[ebp]
	push	eax
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3383
	mov	esi, esp
	push	OFFSET $SG120085
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3385
	mov	esi, esp
	push	0
	push	OFFSET $SG120087
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3386
	mov	esi, esp
	push	OFFSET $SG120088
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3388
	mov	esi, esp
	push	0
	push	OFFSET $SG120090
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 3389
	mov	esi, esp
	push	OFFSET $SG120091
	call	DWORD PTR __imp__SetCurrentDirectoryA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@ConfigureH:
; Line 3390
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ConfigureHomeDirectory ENDP
_TEXT	ENDS
PUBLIC	_InitializeDirectoryStructure
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InitializeDirectoryStructure
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_InitializeDirectoryStructure PROC			; COMDAT
; Line 3418
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3422
	mov	esi, esp
	push	0
	push	OFFSET _SYSTEM_PATH
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _retval$[ebp], eax
; Line 3423
	mov	esi, esp
	push	0
	push	OFFSET _DRIVER_PATH
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
; Line 3424
	mov	esi, esp
	push	0
	push	OFFSET _VEHICLE_PATH
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
; Line 3425
	mov	esi, esp
	push	0
	push	OFFSET _TRACK_PATH
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
; Line 3426
	mov	esi, esp
	push	0
	push	OFFSET _MY_SESSIONS_PATH
	call	DWORD PTR __imp__CreateDirectoryA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _retval$[ebp]
	mov	DWORD PTR _retval$[ebp], eax
; Line 3428
	mov	eax, DWORD PTR _retval$[ebp]
; Line 3442
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InitializeDirectoryStructure ENDP
_TEXT	ENDS
PUBLIC	_SetDefaultDriverData
PUBLIC	_SetDefaultTrackData
PUBLIC	_SetDefaultVehicleData
PUBLIC	_SetDefaultSystemData
PUBLIC	_InitializeData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InitializeData
_TEXT	SEGMENT
_InitializeData PROC					; COMDAT
; Line 3445
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3446
	push	0
	call	_SetDefaultSystemData
	add	esp, 4
; Line 3447
	push	0
	call	_SetDefaultVehicleData
	add	esp, 4
; Line 3448
	call	_SetDefaultTrackData
; Line 3449
	call	_SetDefaultDriverData
; Line 3450
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InitializeData ENDP
_TEXT	ENDS
PUBLIC	_SetMandatoryDefaultSelections
PUBLIC	_InitializeCriticalVariables
EXTRN	_SetConfigurableItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDefaultSystemData
_TEXT	SEGMENT
_full$ = 8						; size = 1
_SetDefaultSystemData PROC				; COMDAT
; Line 3453
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3454
	movzx	eax, BYTE PTR _full$[ebp]
	test	eax, eax
	je	SHORT $LN1@SetDefault
; Line 3456
	push	244					; 000000f4H
	push	0
	push	OFFSET _sysData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3457
	call	_InitializeCriticalVariables
$LN1@SetDefault:
; Line 3460
	push	OFFSET _SYSTEM_VERSION
	push	OFFSET _sysData
	call	_strcpy
	add	esp, 8
; Line 3461
	mov	BYTE PTR _sysData+178, 1
; Line 3462
	mov	DWORD PTR _sysData+28, 1
; Line 3463
	mov	DWORD PTR _sysData+36, 1
; Line 3464
	mov	DWORD PTR _sysData+32, 2
; Line 3465
	mov	BYTE PTR _sysData+120, 3
; Line 3466
	mov	BYTE PTR _sysData+121, 1
; Line 3467
	mov	BYTE PTR _sysData+122, -5		; fffffffbH
; Line 3468
	mov	BYTE PTR _sysData+123, 0
; Line 3469
	mov	BYTE PTR _sysData+124, 0
; Line 3470
	mov	BYTE PTR _sysData+125, 0
; Line 3471
	mov	DWORD PTR _sysData+180, 161		; 000000a1H
; Line 3472
	call	_SetMandatoryDefaultSelections
; Line 3473
	mov	BYTE PTR _sysData+208, 82		; 00000052H
; Line 3474
	push	37					; 00000025H
	call	_SetConfigurableItem
	add	esp, 4
; Line 3475
	call	_SetDefaultTempCalData
; Line 3476
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultSystemData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SetMandatoryDefaultSelections
_TEXT	SEGMENT
_SetMandatoryDefaultSelections PROC			; COMDAT
; Line 3482
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3483
	push	OFFSET _DEFAULT_DRIVER
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3484
	push	OFFSET _DEFAULT_VEHICLE
	push	OFFSET _sysData+143
	call	_strcpy
	add	esp, 8
; Line 3485
	push	OFFSET _DEFAULT_TRACK
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 3486
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetMandatoryDefaultSelections ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SetDefaultDriverData
_TEXT	SEGMENT
_SetDefaultDriverData PROC				; COMDAT
; Line 3489
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3490
	push	16					; 00000010H
	push	0
	push	OFFSET _driverData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3491
	push	OFFSET _DRIVER_VERSION
	push	OFFSET _driverData
	call	_strcpy
	add	esp, 8
; Line 3492
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultDriverData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SetDefaultTrackData
_TEXT	SEGMENT
_SetDefaultTrackData PROC				; COMDAT
; Line 3495
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3496
	push	5280					; 000014a0H
	push	0
	push	OFFSET _trackData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3497
	push	OFFSET _TRACK_VERSION
	push	OFFSET _trackData
	call	_strcpy
	add	esp, 8
; Line 3498
	mov	BYTE PTR _trackData+65, 60		; 0000003cH
; Line 3499
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultTrackData ENDP
_TEXT	ENDS
PUBLIC	_SetDefaultDigitalInputData
PUBLIC	_SetDefaultAnalogInputData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDefaultVehicleData
_TEXT	SEGMENT
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_how$ = 8						; size = 4
_SetDefaultVehicleData PROC				; COMDAT
; Line 3510
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3513
	push	476					; 000001dcH
	push	0
	push	OFFSET _vehicleData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3514
	push	OFFSET _VEHICLE_VERSION
	push	OFFSET _vehicleData
	call	_strcpy
	add	esp, 8
; Line 3515
	mov	BYTE PTR _vehicleData+116, 32		; 00000020H
; Line 3516
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@SetDefault@2
$LN14@SetDefault@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@SetDefault@2:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN13@SetDefault@2
; Line 3517
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_SetDefaultAnalogInputData
	add	esp, 4
	jmp	SHORT $LN14@SetDefault@2
$LN13@SetDefault@2:
; Line 3519
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@SetDefault@2
$LN11@SetDefault@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@SetDefault@2:
	cmp	DWORD PTR _i$[ebp], 2
	jge	SHORT $LN10@SetDefault@2
; Line 3520
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_SetDefaultDigitalInputData
	add	esp, 4
	jmp	SHORT $LN11@SetDefault@2
$LN10@SetDefault@2:
; Line 3522
	cmp	DWORD PTR _how$[ebp], 1
	jne	SHORT $LN9@SetDefault@2
; Line 3524
	mov	DWORD PTR _j$[ebp], 0
$LN8@SetDefault@2:
; Line 3526
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN9@SetDefault@2
; Line 3528
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	push	ecx
	push	OFFSET _sysData+143
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN6@SetDefault@2
; Line 3531
	push	104					; 00000068H
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	add	eax, OFFSET _defaultVehicles+4
	push	eax
	push	OFFSET _vehicleData+12
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3532
	jmp	$LN16@SetDefault@2
$LN6@SetDefault@2:
; Line 3534
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
; Line 3535
	jmp	SHORT $LN8@SetDefault@2
$LN9@SetDefault@2:
; Line 3541
	mov	DWORD PTR _j$[ebp], 0
$LN5@SetDefault@2:
; Line 3542
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN4@SetDefault@2
; Line 3544
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	push	ecx
	push	OFFSET _DEFAULT_VEHICLE
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN3@SetDefault@2
; Line 3545
	jmp	SHORT $LN4@SetDefault@2
	jmp	SHORT $LN2@SetDefault@2
$LN3@SetDefault@2:
; Line 3546
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN2@SetDefault@2:
; Line 3547
	jmp	SHORT $LN5@SetDefault@2
$LN4@SetDefault@2:
; Line 3548
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	jne	SHORT $LN1@SetDefault@2
; Line 3549
	mov	DWORD PTR _j$[ebp], 0
$LN1@SetDefault@2:
; Line 3551
	push	104					; 00000068H
	mov	eax, DWORD PTR _j$[ebp]
	imul	eax, 108				; 0000006cH
	add	eax, OFFSET _defaultVehicles+4
	push	eax
	push	OFFSET _vehicleData+12
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN16@SetDefault@2:
; Line 3552
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultVehicleData ENDP
_TEXT	ENDS
PUBLIC	__real@41380000
PUBLIC	__real@42000000
PUBLIC	__real@43970000
PUBLIC	__real@43520000
PUBLIC	__real@3f000000
PUBLIC	__real@40900000
PUBLIC	__real@c16b3333
PUBLIC	__real@420d3333
PUBLIC	__real@41a00000
PUBLIC	__real@40a00000
PUBLIC	__real@41080000
PUBLIC	__real@41900000
PUBLIC	__real@415b3333
;	COMDAT __real@41380000
CONST	SEGMENT
__real@41380000 DD 041380000r			; 11.5
CONST	ENDS
;	COMDAT __real@42000000
CONST	SEGMENT
__real@42000000 DD 042000000r			; 32
CONST	ENDS
;	COMDAT __real@43970000
CONST	SEGMENT
__real@43970000 DD 043970000r			; 302
CONST	ENDS
;	COMDAT __real@43520000
CONST	SEGMENT
__real@43520000 DD 043520000r			; 210
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@40900000
CONST	SEGMENT
__real@40900000 DD 040900000r			; 4.5
CONST	ENDS
;	COMDAT __real@c16b3333
CONST	SEGMENT
__real@c16b3333 DD 0c16b3333r			; -14.7
CONST	ENDS
;	COMDAT __real@420d3333
CONST	SEGMENT
__real@420d3333 DD 0420d3333r			; 35.3
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@41080000
CONST	SEGMENT
__real@41080000 DD 041080000r			; 8.5
CONST	ENDS
;	COMDAT __real@41900000
CONST	SEGMENT
__real@41900000 DD 041900000r			; 18
CONST	ENDS
;	COMDAT __real@415b3333
CONST	SEGMENT
__real@415b3333 DD 0415b3333r			; 13.7
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _SetDefaultAnalogInputData
_TEXT	SEGMENT
tv64 = -196						; size = 4
_i$ = 8							; size = 4
_SetDefaultAnalogInputData PROC				; COMDAT
; Line 3555
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3556
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN5@SetDefault@3
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN9@SetDefault@3[ecx*4]
$LN4@SetDefault@3:
; Line 3558
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+149], 1
; Line 3559
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@415b3333
	fstp	DWORD PTR _vehicleData[eax+156]
; Line 3560
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+147], 0
; Line 3561
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+180], 0
; Line 3562
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+181], 0
; Line 3563
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41900000
	fstp	DWORD PTR _vehicleData[eax+176]
; Line 3564
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41080000
	fstp	DWORD PTR _vehicleData[eax+172]
; Line 3565
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@40a00000
	fstp	DWORD PTR _vehicleData[eax+168]
; Line 3566
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+164]
; Line 3567
	push	OFFSET $SG120142
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+120
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3568
	push	OFFSET $SG120143
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3569
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+160], 5
; Line 3570
	jmp	$LN5@SetDefault@3
$LN3@SetDefault@3:
; Line 3572
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+149], 1
; Line 3573
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR _vehicleData[eax+156]
; Line 3574
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+147], 0
; Line 3575
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+180], 0
; Line 3576
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+181], 0
; Line 3577
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@420d3333
	fstp	DWORD PTR _vehicleData[eax+176]
; Line 3578
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@c16b3333
	fstp	DWORD PTR _vehicleData[eax+172]
; Line 3579
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@40900000
	fstp	DWORD PTR _vehicleData[eax+168]
; Line 3580
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@3f000000
	fstp	DWORD PTR _vehicleData[eax+164]
; Line 3581
	push	OFFSET $SG120145
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+120
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3582
	push	OFFSET $SG120146
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3583
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+160], 5
; Line 3584
	jmp	$LN5@SetDefault@3
$LN2@SetDefault@3:
; Line 3607
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+149], 1
; Line 3608
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@43520000
	fstp	DWORD PTR _vehicleData[eax+156]
; Line 3609
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+147], 0
; Line 3610
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+180], 0
; Line 3611
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+181], 0
; Line 3612
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@43970000
	fstp	DWORD PTR _vehicleData[eax+176]
; Line 3613
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@42000000
	fstp	DWORD PTR _vehicleData[eax+172]
; Line 3614
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@40a00000
	fstp	DWORD PTR _vehicleData[eax+168]
; Line 3615
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+164]
; Line 3616
	push	OFFSET $SG120148
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+120
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3617
	push	OFFSET $SG120149
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3618
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+160], 5
; Line 3619
	jmp	$LN5@SetDefault@3
$LN1@SetDefault@3:
; Line 3621
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+148], 2
; Line 3622
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41380000
	fstp	DWORD PTR _vehicleData[eax+152]
; Line 3623
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+147], 0
; Line 3624
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+180], 0
; Line 3625
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+181], 0
; Line 3626
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR _vehicleData[eax+176]
; Line 3627
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+172]
; Line 3628
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fld	DWORD PTR __real@41a00000
	fstp	DWORD PTR _vehicleData[eax+168]
; Line 3629
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	fldz
	fstp	DWORD PTR _vehicleData[eax+164]
; Line 3630
	push	OFFSET $SG120151
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+120
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3631
	push	OFFSET $SG120152
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3632
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	mov	BYTE PTR _vehicleData[eax+160], 20	; 00000014H
$LN5@SetDefault@3:
; Line 3635
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@SetDefault@3:
	DD	$LN4@SetDefault@3
	DD	$LN3@SetDefault@3
	DD	$LN2@SetDefault@3
	DD	$LN1@SetDefault@3
_SetDefaultAnalogInputData ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_sprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDefaultDigitalInputData
_TEXT	SEGMENT
tv64 = -220						; size = 4
_scratch$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_i$ = 8							; size = 4
_SetDefaultDigitalInputData PROC			; COMDAT
; Line 3638
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3641
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN2@SetDefault@4
	jmp	$LN1@SetDefault@4
$LN2@SetDefault@4:
; Line 3643
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+420], 0
; Line 3644
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+419], 0
; Line 3645
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+421], 0
; Line 3646
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+422], 0
; Line 3647
	push	OFFSET $SG120162
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	add	eax, OFFSET _vehicleData+376
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3648
	push	OFFSET $SG120163
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	add	eax, OFFSET _vehicleData+393
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3649
	push	OFFSET $SG120164
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	add	eax, OFFSET _vehicleData+406
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3650
	jmp	$LN5@SetDefault@4
$LN1@SetDefault@4:
; Line 3653
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+420], 1
; Line 3654
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+419], 0
; Line 3655
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+421], 0
; Line 3656
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	mov	BYTE PTR _vehicleData[eax+422], 0
; Line 3657
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 4
	push	eax
	push	OFFSET $SG120166
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3658
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 47					; 0000002fH
	add	ecx, OFFSET _vehicleData+376
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 3659
	push	OFFSET $SG120167
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	add	eax, OFFSET _vehicleData+393
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3660
	push	OFFSET $SG120168
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 47					; 0000002fH
	add	eax, OFFSET _vehicleData+406
	push	eax
	call	_strcpy
	add	esp, 8
$LN5@SetDefault@4:
; Line 3663
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@SetDefault@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@SetDefault@4:
	DD	1
	DD	$LN8@SetDefault@4
$LN8@SetDefault@4:
	DD	-20					; ffffffecH
	DD	10					; 0000000aH
	DD	$LN7@SetDefault@4
$LN7@SetDefault@4:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetDefaultDigitalInputData ENDP
_TEXT	ENDS
PUBLIC	_SetDefaultTach
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDefaultTach
_TEXT	SEGMENT
_SetDefaultTach PROC					; COMDAT
; Line 3666
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3667
	mov	DWORD PTR _vehicleData+36, 7000		; 00001b58H
; Line 3668
	mov	DWORD PTR _vehicleData+32, 5000		; 00001388H
; Line 3669
	mov	DWORD PTR _vehicleData+28, 5000		; 00001388H
; Line 3670
	mov	DWORD PTR _vehicleData+24, 4000		; 00000fa0H
; Line 3671
	mov	DWORD PTR _vehicleData+20, 7300		; 00001c84H
; Line 3672
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultTach ENDP
_TEXT	ENDS
PUBLIC	__real@3f4f5c29
PUBLIC	__real@3f800000
PUBLIC	__real@3faa3d71
PUBLIC	__real@3ff1eb85
PUBLIC	__real@4048f5c3
PUBLIC	_SetDefaultGears
;	COMDAT __real@3f4f5c29
CONST	SEGMENT
__real@3f4f5c29 DD 03f4f5c29r			; 0.81
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3faa3d71
CONST	SEGMENT
__real@3faa3d71 DD 03faa3d71r			; 1.33
CONST	ENDS
;	COMDAT __real@3ff1eb85
CONST	SEGMENT
__real@3ff1eb85 DD 03ff1eb85r			; 1.89
CONST	ENDS
;	COMDAT __real@4048f5c3
CONST	SEGMENT
__real@4048f5c3 DD 04048f5c3r			; 3.14
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _SetDefaultGears
_TEXT	SEGMENT
_SetDefaultGears PROC					; COMDAT
; Line 3675
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3676
	fld	DWORD PTR __real@4048f5c3
	fstp	DWORD PTR _vehicleData+48
; Line 3677
	fld	DWORD PTR __real@3ff1eb85
	fstp	DWORD PTR _vehicleData+52
; Line 3678
	fld	DWORD PTR __real@3faa3d71
	fstp	DWORD PTR _vehicleData+56
; Line 3679
	fld1
	fstp	DWORD PTR _vehicleData+60
; Line 3680
	fld	DWORD PTR __real@3f4f5c29
	fstp	DWORD PTR _vehicleData+64
; Line 3681
	fldz
	fstp	DWORD PTR _vehicleData+68
; Line 3682
	fldz
	fstp	DWORD PTR _vehicleData+72
; Line 3683
	fldz
	fstp	DWORD PTR _vehicleData+76
; Line 3684
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDefaultGears ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _InitializeCriticalVariables
_TEXT	SEGMENT
_InitializeCriticalVariables PROC			; COMDAT
; Line 3690
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3691
	mov	DWORD PTR _unsavedSysData+136, 0
; Line 3693
	mov	DWORD PTR _sysData+12, 40		; 00000028H
; Line 3694
	mov	DWORD PTR _sysData+16, 4
; Line 3695
	mov	DWORD PTR _sysData+20, 0
; Line 3696
	mov	DWORD PTR _sysData+24, -1
; Line 3697
	mov	DWORD PTR _sysData+28, -1
; Line 3698
	mov	DWORD PTR _sysData+96, 0
; Line 3699
	mov	DWORD PTR _sysData+100, 0
; Line 3700
	mov	DWORD PTR _sysData+104, 50		; 00000032H
; Line 3701
	mov	DWORD PTR _sysData+112, 50		; 00000032H
; Line 3702
	mov	DWORD PTR _sysData+116, 50		; 00000032H
; Line 3703
	mov	BYTE PTR _sysData+108, 1
; Line 3704
	mov	BYTE PTR _sysData+122, -5		; fffffffbH
; Line 3705
	mov	BYTE PTR _sysData+123, 0
; Line 3706
	mov	BYTE PTR _sysData+124, 0
; Line 3707
	mov	BYTE PTR _sysData+125, 0
; Line 3709
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_InitializeCriticalVariables ENDP
_TEXT	ENDS
PUBLIC	_AddPath
EXTRN	_strcat:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AddPath
_TEXT	SEGMENT
tv64 = -208						; size = 4
_pPath$ = -8						; size = 4
_pDest$ = 8						; size = 4
_pName$ = 12						; size = 4
_type$ = 16						; size = 4
_AddPath PROC						; COMDAT
; Line 3721
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3724
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN1@AddPath
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN2@AddPath
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN3@AddPath
; Line 3727
	mov	DWORD PTR _pPath$[ebp], OFFSET _SYSTEM_PATH
	jmp	SHORT $LN5@AddPath
$LN3@AddPath:
; Line 3728
	mov	DWORD PTR _pPath$[ebp], OFFSET _DRIVER_PATH
	jmp	SHORT $LN5@AddPath
$LN2@AddPath:
; Line 3729
	mov	DWORD PTR _pPath$[ebp], OFFSET _VEHICLE_PATH
	jmp	SHORT $LN5@AddPath
$LN1@AddPath:
; Line 3730
	mov	DWORD PTR _pPath$[ebp], OFFSET _TRACK_PATH
$LN5@AddPath:
; Line 3733
	mov	eax, DWORD PTR _pPath$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 3734
	push	OFFSET $SG120191
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 3735
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 3736
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_AddPath ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ConvertToFilename
_TEXT	SEGMENT
_pDest$ = 8						; size = 4
_pName$ = 12						; size = 4
_type$ = 16						; size = 4
_ConvertToFilename PROC					; COMDAT
; Line 3749
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3750
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDest$[ebp]
	push	edx
	call	_AddPath
	add	esp, 12					; 0000000cH
; Line 3751
	push	OFFSET $SG120199
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 3752
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ConvertToFilename ENDP
_TEXT	ENDS
PUBLIC	_CreateAllFiles
PUBLIC	_AnyFilesFound
PUBLIC	_FRWReadFile
PUBLIC	__$ArrayPad$
EXTRN	_SetTrackTableDefaultData:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ReloadData
_TEXT	SEGMENT
tv131 = -5748						; size = 4
tv64 = -5748						; size = 4
_dataunion$ = -5548					; size = 5280
_fileName$ = -260					; size = 150
_shortFileName$ = -100					; size = 80
_size$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_ReloadData PROC					; COMDAT
; Line 3762
	push	ebp
	mov	ebp, esp
	mov	eax, 5748				; 00001674H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-5748]
	mov	ecx, 1437				; 0000059dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3769
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	SHORT $LN14@ReloadData
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN28@ReloadData[ecx*4]
$LN18@ReloadData:
; Line 3772
	push	OFFSET _SYSTEM_FILE_NAME
	lea	eax, DWORD PTR _shortFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3773
	mov	DWORD PTR _size$[ebp], 244		; 000000f4H
; Line 3774
	jmp	SHORT $LN19@ReloadData
$LN17@ReloadData:
; Line 3776
	push	OFFSET _sysData+126
	lea	eax, DWORD PTR _shortFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3777
	mov	DWORD PTR _size$[ebp], 16		; 00000010H
; Line 3778
	jmp	SHORT $LN19@ReloadData
$LN16@ReloadData:
; Line 3780
	push	OFFSET _sysData+143
	lea	eax, DWORD PTR _shortFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3781
	mov	DWORD PTR _size$[ebp], 476		; 000001dcH
; Line 3782
	jmp	SHORT $LN19@ReloadData
$LN15@ReloadData:
; Line 3784
	push	OFFSET _sysData+160
	lea	eax, DWORD PTR _shortFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3785
	mov	DWORD PTR _size$[ebp], 5280		; 000014a0H
; Line 3786
	jmp	SHORT $LN19@ReloadData
$LN14@ReloadData:
; Line 3788
	xor	eax, eax
	jmp	$LN21@ReloadData
$LN19@ReloadData:
; Line 3794
	lea	eax, DWORD PTR _shortFileName$[ebp]
	push	eax
	push	OFFSET $SG120221
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	$LN13@ReloadData
; Line 3796
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	lea	ecx, DWORD PTR _shortFileName$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3798
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	lea	eax, DWORD PTR _dataunion$[ebp]
	push	eax
	call	_FRWReadFile
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN12@ReloadData
; Line 3799
	mov	eax, 1
	jmp	$LN21@ReloadData
	jmp	SHORT $LN13@ReloadData
$LN12@ReloadData:
; Line 3800
	cmp	DWORD PTR _type$[ebp], 0
	jne	SHORT $LN13@ReloadData
; Line 3802
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	push	OFFSET _BACKUP_SYSTEM_FILE_NAME
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3803
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fileName$[ebp]
	push	edx
	lea	eax, DWORD PTR _dataunion$[ebp]
	push	eax
	call	_FRWReadFile
	add	esp, 16					; 00000010H
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN13@ReloadData
; Line 3804
	mov	eax, 1
	jmp	$LN21@ReloadData
$LN13@ReloadData:
; Line 3809
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv131[ebp], eax
	cmp	DWORD PTR tv131[ebp], 3
	ja	SHORT $LN7@ReloadData
	mov	ecx, DWORD PTR tv131[ebp]
	jmp	DWORD PTR $LN29@ReloadData[ecx*4]
$LN6@ReloadData:
; Line 3812
	push	1
	call	_SetDefaultSystemData
	add	esp, 4
; Line 3813
	jmp	SHORT $LN7@ReloadData
$LN5@ReloadData:
; Line 3815
	call	_SetDefaultDriverData
; Line 3816
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_AnyFilesFound
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@ReloadData
; Line 3817
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_CreateAllFiles
	add	esp, 4
$LN4@ReloadData:
; Line 3818
	jmp	SHORT $LN7@ReloadData
$LN3@ReloadData:
; Line 3820
	push	1
	call	_SetDefaultVehicleData
	add	esp, 4
; Line 3821
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_AnyFilesFound
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@ReloadData
; Line 3822
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_CreateAllFiles
	add	esp, 4
$LN2@ReloadData:
; Line 3823
	jmp	SHORT $LN7@ReloadData
$LN1@ReloadData:
; Line 3825
	call	_SetDefaultTrackData
; Line 3826
	call	_SetTrackTableDefaultData
; Line 3830
	mov	eax, 1
	jmp	SHORT $LN21@ReloadData
$LN7@ReloadData:
; Line 3832
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3834
	xor	eax, eax
$LN21@ReloadData:
; Line 3835
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@ReloadData
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 5748				; 00001674H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN27@ReloadData:
	DD	3
	DD	$LN26@ReloadData
$LN26@ReloadData:
	DD	-100					; ffffff9cH
	DD	80					; 00000050H
	DD	$LN23@ReloadData
	DD	-260					; fffffefcH
	DD	150					; 00000096H
	DD	$LN24@ReloadData
	DD	-5548					; ffffea54H
	DD	5280					; 000014a0H
	DD	$LN25@ReloadData
$LN25@ReloadData:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	117					; 00000075H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN24@ReloadData:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN23@ReloadData:
	DB	115					; 00000073H
	DB	104					; 00000068H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
	npad	3
$LN28@ReloadData:
	DD	$LN18@ReloadData
	DD	$LN15@ReloadData
	DD	$LN16@ReloadData
	DD	$LN17@ReloadData
$LN29@ReloadData:
	DD	$LN6@ReloadData
	DD	$LN1@ReloadData
	DD	$LN3@ReloadData
	DD	$LN5@ReloadData
_ReloadData ENDP
_TEXT	ENDS
EXTRN	_fread:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FRWReadFile
_TEXT	SEGMENT
_pFile$ = -8						; size = 4
_dataunion$ = 8						; size = 4
_fileName$ = 12						; size = 4
_size$ = 16						; size = 4
_type$ = 20						; size = 4
_FRWReadFile PROC					; COMDAT
; Line 3838
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3842
	push	OFFSET $SG120248
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$[ebp], eax
	cmp	DWORD PTR _pFile$[ebp], 0
	je	SHORT $LN3@FRWReadFil
; Line 3846
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _dataunion$[ebp]
	push	edx
	call	_fread
	add	esp, 16					; 00000010H
; Line 3847
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 3875
	push	1
	mov	eax, DWORD PTR _dataunion$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	_verifyData
	add	esp, 12					; 0000000cH
	movzx	edx, al
	cmp	edx, 1
	jne	SHORT $LN2@FRWReadFil
; Line 3876
	mov	al, 1
	jmp	SHORT $LN4@FRWReadFil
	jmp	SHORT $LN3@FRWReadFil
$LN2@FRWReadFil:
; Line 3877
	xor	al, al
	jmp	SHORT $LN4@FRWReadFil
$LN3@FRWReadFil:
; Line 3879
	xor	al, al
$LN4@FRWReadFil:
; Line 3880
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FRWReadFile ENDP
_TEXT	ENDS
EXTRN	_closedir:PROC
EXTRN	_ValidFileName:PROC
EXTRN	_readdir:PROC
EXTRN	_opendir:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AnyFilesFound
_TEXT	SEGMENT
tv64 = -232						; size = 4
_ent$ = -32						; size = 4
_dir$ = -20						; size = 4
_pDirectory$ = -8					; size = 4
_type$ = 8						; size = 4
_AnyFilesFound PROC					; COMDAT
; Line 3888
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3898
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN6@AnyFilesFo
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN7@AnyFilesFo
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN8@AnyFilesFo
	jmp	SHORT $LN5@AnyFilesFo
$LN8@AnyFilesFo:
; Line 3900
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _DRIVER_PATH
	jmp	SHORT $LN9@AnyFilesFo
$LN7@AnyFilesFo:
; Line 3901
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _VEHICLE_PATH
	jmp	SHORT $LN9@AnyFilesFo
$LN6@AnyFilesFo:
; Line 3902
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _TRACK_PATH
	jmp	SHORT $LN9@AnyFilesFo
$LN5@AnyFilesFo:
; Line 3904
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _MY_SESSIONS_PATH
$LN9@AnyFilesFo:
; Line 3908
	mov	eax, DWORD PTR _pDirectory$[ebp]
	push	eax
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 3909
	cmp	DWORD PTR _dir$[ebp], 0
	je	SHORT $LN4@AnyFilesFo
$LN3@AnyFilesFo:
; Line 3911
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN2@AnyFilesFo
; Line 3912
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ValidFileName
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@AnyFilesFo
; Line 3914
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
; Line 3915
	mov	al, 1
	jmp	SHORT $LN11@AnyFilesFo
$LN1@AnyFilesFo:
; Line 3917
	jmp	SHORT $LN3@AnyFilesFo
$LN2@AnyFilesFo:
; Line 3918
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN4@AnyFilesFo:
; Line 3932
	xor	al, al
$LN11@AnyFilesFo:
; Line 3933
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_AnyFilesFound ENDP
_TEXT	ENDS
EXTRN	_ChangeVehicle:PROC
EXTRN	_vehicleSelectionChanged:BYTE
EXTRN	_tempVehicleName:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateAllFiles
_TEXT	SEGMENT
_i$120282 = -8						; size = 4
_type$ = 8						; size = 4
_CreateAllFiles PROC					; COMDAT
; Line 3941
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3942
	cmp	DWORD PTR _type$[ebp], 3
	jne	$LN5@CreateAllF
; Line 3944
	push	OFFSET $SG120276
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3945
	push	3
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3946
	push	OFFSET $SG120277
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3947
	push	3
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3948
	push	OFFSET $SG120278
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3949
	push	3
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3950
	push	OFFSET $SG120279
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3951
	push	3
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3952
	push	OFFSET _DEFAULT_DRIVER
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
	jmp	$LN6@CreateAllF
$LN5@CreateAllF:
; Line 3954
	cmp	DWORD PTR _type$[ebp], 2
	jne	$LN6@CreateAllF
; Line 3958
	mov	DWORD PTR _i$120282[ebp], 0
$LN2@CreateAllF:
; Line 3959
	mov	eax, DWORD PTR _i$120282[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN1@CreateAllF
; Line 3961
	mov	eax, DWORD PTR _i$120282[ebp]
	imul	eax, 108				; 0000006cH
	mov	ecx, DWORD PTR _defaultVehicles[eax]
	push	ecx
	push	OFFSET _sysData+143
	call	_strcpy
	add	esp, 8
; Line 3962
	push	104					; 00000068H
	mov	eax, DWORD PTR _i$120282[ebp]
	imul	eax, 108				; 0000006cH
	add	eax, OFFSET _defaultVehicles+4
	push	eax
	push	OFFSET _vehicleData+12
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 3963
	push	2
	call	_WriteUserDataEvent
	add	esp, 4
; Line 3965
	mov	eax, DWORD PTR _i$120282[ebp]
	add	eax, 1
	mov	DWORD PTR _i$120282[ebp], eax
; Line 3966
	jmp	SHORT $LN2@CreateAllF
$LN1@CreateAllF:
; Line 3972
	push	OFFSET _DEFAULT_VEHICLE
	push	OFFSET _tempVehicleName
	call	_strcpy
	add	esp, 8
; Line 3973
	mov	BYTE PTR _vehicleSelectionChanged, 1
; Line 3974
	call	_ChangeVehicle
$LN6@CreateAllF:
; Line 3976
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateAllFiles ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_DeleteAllFiles
EXTRN	_remove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeleteAllFiles
_TEXT	SEGMENT
tv64 = -396						; size = 4
_ent$ = -196						; size = 4
_dir$ = -184						; size = 4
_fullName$ = -172					; size = 150
_pDirectory$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_DeleteAllFiles PROC					; COMDAT
; Line 3983
	push	ebp
	mov	ebp, esp
	sub	esp, 396				; 0000018cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-396]
	mov	ecx, 99					; 00000063H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3994
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN6@DeleteAllF
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN7@DeleteAllF
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN8@DeleteAllF
	jmp	SHORT $LN5@DeleteAllF
$LN8@DeleteAllF:
; Line 3996
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _DRIVER_PATH
	jmp	SHORT $LN9@DeleteAllF
$LN7@DeleteAllF:
; Line 3997
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _VEHICLE_PATH
	jmp	SHORT $LN9@DeleteAllF
$LN6@DeleteAllF:
; Line 3998
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _TRACK_PATH
	jmp	SHORT $LN9@DeleteAllF
$LN5@DeleteAllF:
; Line 4000
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _MY_SESSIONS_PATH
$LN9@DeleteAllF:
; Line 4005
	mov	eax, DWORD PTR _pDirectory$[ebp]
	push	eax
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 4006
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN11@DeleteAllF
$LN3@DeleteAllF:
; Line 4008
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN2@DeleteAllF
; Line 4009
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ValidFileName
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN1@DeleteAllF
; Line 4011
	mov	eax, DWORD PTR _pDirectory$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullName$[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 4012
	push	OFFSET $SG120308
	lea	eax, DWORD PTR _fullName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 4013
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _fullName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 4014
	lea	eax, DWORD PTR _fullName$[ebp]
	push	eax
	call	_remove
	add	esp, 4
$LN1@DeleteAllF:
; Line 4016
	jmp	$LN3@DeleteAllF
$LN2@DeleteAllF:
; Line 4017
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN11@DeleteAllF:
; Line 4036
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DeleteAllF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@DeleteAllF:
	DD	1
	DD	$LN14@DeleteAllF
$LN14@DeleteAllF:
	DD	-172					; ffffff54H
	DD	150					; 00000096H
	DD	$LN13@DeleteAllF
$LN13@DeleteAllF:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_DeleteAllFiles ENDP
_TEXT	ENDS
EXTRN	_UnhideSprites:PROC
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_GUI_GetOrg:PROC
EXTRN	_systemSettingsPopupScreen:DWORD
EXTRN	_glbBlackoutFlag:DWORD
EXTRN	_SetPopupDefaults:PROC
EXTRN	_HideSprites:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayUpdatedVehicleDataPopup
_TEXT	SEGMENT
_y$ = -20						; size = 4
_x$ = -8						; size = 4
_DisplayUpdatedVehicleDataPopup PROC			; COMDAT
; Line 4088
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 4091
	call	_HideSprites
; Line 4093
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 4095
	mov	DWORD PTR _glbBlackoutFlag, 1
; Line 4097
	mov	DWORD PTR _systemSettingsPopupScreen, 0
; Line 4099
	lea	eax, DWORD PTR _y$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GUI_GetOrg
	add	esp, 8
; Line 4100
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 10					; 0000000aH
	push	eax
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _UpdatedFileResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 4102
	call	_UnhideSprites
; Line 4103
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DisplayUpd
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@DisplayUpd:
	DD	2
	DD	$LN5@DisplayUpd
$LN5@DisplayUpd:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@DisplayUpd
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@DisplayUpd
$LN4@DisplayUpd:
	DB	121					; 00000079H
	DB	0
$LN3@DisplayUpd:
	DB	120					; 00000078H
	DB	0
_DisplayUpdatedVehicleDataPopup ENDP
_TEXT	ENDS
END
