; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Arc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GL_DrawArc
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_arc.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_DrawArc
_TEXT	SEGMENT
tv152 = -208						; size = 4
tv137 = -208						; size = 4
tv88 = -208						; size = 4
tv73 = -208						; size = 4
_aEnd$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_a0$ = 24						; size = 4
_a1$ = 28						; size = 4
_GL_DrawArc PROC					; COMDAT
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	mov	eax, DWORD PTR _a0$[ebp]
	add	eax, 360				; 00000168H
	mov	DWORD PTR _a0$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _a1$[ebp]
	add	eax, 360				; 00000168H
	mov	DWORD PTR _a1$[ebp], eax
$LN14@GL_DrawArc:
; Line 177
	cmp	DWORD PTR _a0$[ebp], 360		; 00000168H
	jl	SHORT $DoFirst$8731
; Line 178
	mov	eax, DWORD PTR _a0$[ebp]
	sub	eax, 360				; 00000168H
	mov	DWORD PTR _a0$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, 360				; 00000168H
	mov	DWORD PTR _a1$[ebp], eax
; Line 180
	jmp	SHORT $LN14@GL_DrawArc
$DoFirst$8731:
; Line 183
	cmp	DWORD PTR _a1$[ebp], 0
	jg	SHORT $LN12@GL_DrawArc
; Line 184
	jmp	$LN15@GL_DrawArc
$LN12@GL_DrawArc:
; Line 186
	cmp	DWORD PTR _a0$[ebp], 90			; 0000005aH
	jge	SHORT $LN11@GL_DrawArc
; Line 187
	cmp	DWORD PTR _a0$[ebp], 0
	jge	SHORT $LN10@GL_DrawArc
; Line 188
	mov	DWORD PTR _a0$[ebp], 0
$LN10@GL_DrawArc:
; Line 190
	cmp	DWORD PTR _a1$[ebp], 90			; 0000005aH
	jge	SHORT $LN17@GL_DrawArc
	mov	eax, DWORD PTR _a1$[ebp]
	mov	DWORD PTR tv73[ebp], eax
	jmp	SHORT $LN18@GL_DrawArc
$LN17@GL_DrawArc:
	mov	DWORD PTR tv73[ebp], 90			; 0000005aH
$LN18@GL_DrawArc:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _aEnd$[ebp], ecx
; Line 191
	push	-1
	push	1
	mov	eax, DWORD PTR _aEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ry$[ebp]
	push	edx
	mov	eax, DWORD PTR _rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawArc
	add	esp, 32					; 00000020H
$LN11@GL_DrawArc:
; Line 193
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a1$[ebp], eax
; Line 194
	mov	eax, DWORD PTR _a0$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a0$[ebp], eax
; Line 196
	cmp	DWORD PTR _a1$[ebp], 0
	jg	SHORT $LN9@GL_DrawArc
; Line 197
	jmp	$LN15@GL_DrawArc
$LN9@GL_DrawArc:
; Line 199
	cmp	DWORD PTR _a0$[ebp], 90			; 0000005aH
	jge	SHORT $LN8@GL_DrawArc
; Line 200
	cmp	DWORD PTR _a0$[ebp], 0
	jge	SHORT $LN7@GL_DrawArc
; Line 201
	mov	DWORD PTR _a0$[ebp], 0
$LN7@GL_DrawArc:
; Line 203
	cmp	DWORD PTR _a1$[ebp], 90			; 0000005aH
	jge	SHORT $LN19@GL_DrawArc
	mov	eax, DWORD PTR _a1$[ebp]
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN20@GL_DrawArc
$LN19@GL_DrawArc:
	mov	DWORD PTR tv88[ebp], 90			; 0000005aH
$LN20@GL_DrawArc:
	mov	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR _aEnd$[ebp], ecx
; Line 204
	push	-1
	push	-1
	mov	eax, 90					; 0000005aH
	sub	eax, DWORD PTR _a0$[ebp]
	push	eax
	mov	ecx, 90					; 0000005aH
	sub	ecx, DWORD PTR _aEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ry$[ebp]
	push	edx
	mov	eax, DWORD PTR _rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawArc
	add	esp, 32					; 00000020H
$LN8@GL_DrawArc:
; Line 206
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a1$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _a0$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a0$[ebp], eax
; Line 209
	cmp	DWORD PTR _a1$[ebp], 0
	jg	SHORT $LN6@GL_DrawArc
; Line 210
	jmp	$LN15@GL_DrawArc
$LN6@GL_DrawArc:
; Line 212
	cmp	DWORD PTR _a0$[ebp], 90			; 0000005aH
	jge	SHORT $LN5@GL_DrawArc
; Line 213
	cmp	DWORD PTR _a0$[ebp], 0
	jge	SHORT $LN4@GL_DrawArc
; Line 214
	mov	DWORD PTR _a0$[ebp], 0
$LN4@GL_DrawArc:
; Line 216
	cmp	DWORD PTR _a1$[ebp], 90			; 0000005aH
	jge	SHORT $LN21@GL_DrawArc
	mov	eax, DWORD PTR _a1$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN22@GL_DrawArc
$LN21@GL_DrawArc:
	mov	DWORD PTR tv137[ebp], 90		; 0000005aH
$LN22@GL_DrawArc:
	mov	ecx, DWORD PTR tv137[ebp]
	mov	DWORD PTR _aEnd$[ebp], ecx
; Line 217
	push	1
	push	-1
	mov	eax, DWORD PTR _aEnd$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ry$[ebp]
	push	edx
	mov	eax, DWORD PTR _rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawArc
	add	esp, 32					; 00000020H
$LN5@GL_DrawArc:
; Line 219
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a1$[ebp], eax
; Line 220
	mov	eax, DWORD PTR _a0$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a0$[ebp], eax
; Line 222
	cmp	DWORD PTR _a1$[ebp], 0
	jg	SHORT $LN3@GL_DrawArc
; Line 223
	jmp	SHORT $LN15@GL_DrawArc
$LN3@GL_DrawArc:
; Line 225
	cmp	DWORD PTR _a0$[ebp], 90			; 0000005aH
	jge	SHORT $LN2@GL_DrawArc
; Line 226
	cmp	DWORD PTR _a0$[ebp], 0
	jge	SHORT $LN1@GL_DrawArc
; Line 227
	mov	DWORD PTR _a0$[ebp], 0
$LN1@GL_DrawArc:
; Line 229
	cmp	DWORD PTR _a1$[ebp], 90			; 0000005aH
	jge	SHORT $LN23@GL_DrawArc
	mov	eax, DWORD PTR _a1$[ebp]
	mov	DWORD PTR tv152[ebp], eax
	jmp	SHORT $LN24@GL_DrawArc
$LN23@GL_DrawArc:
	mov	DWORD PTR tv152[ebp], 90		; 0000005aH
$LN24@GL_DrawArc:
	mov	ecx, DWORD PTR tv152[ebp]
	mov	DWORD PTR _aEnd$[ebp], ecx
; Line 230
	push	1
	push	1
	mov	eax, 90					; 0000005aH
	sub	eax, DWORD PTR _a0$[ebp]
	push	eax
	mov	ecx, 90					; 0000005aH
	sub	ecx, DWORD PTR _aEnd$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ry$[ebp]
	push	edx
	mov	eax, DWORD PTR _rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawArc
	add	esp, 32					; 00000020H
$LN2@GL_DrawArc:
; Line 232
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a1$[ebp], eax
; Line 233
	mov	eax, DWORD PTR _a0$[ebp]
	sub	eax, 90					; 0000005aH
	mov	DWORD PTR _a0$[ebp], eax
; Line 234
	jmp	$DoFirst$8731
$LN15@GL_DrawArc:
; Line 235
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DrawArc ENDP
_TEXT	ENDS
PUBLIC	__real@40000000
PUBLIC	__$ArrayPad$
EXTRN	_floor:PROC
EXTRN	_ceil:PROC
EXTRN	_GUI__CosHQ:PROC
EXTRN	_GUI__SinHQ:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT __DrawArc
_TEXT	SEGMENT
tv331 = -440						; size = 8
tv323 = -440						; size = 8
tv329 = -432						; size = 4
tv321 = -432						; size = 4
tv380 = -428						; size = 4
tv374 = -428						; size = 4
tv368 = -428						; size = 4
tv362 = -428						; size = 4
tv356 = -428						; size = 4
tv350 = -428						; size = 4
tv344 = -428						; size = 4
tv338 = -428						; size = 4
tv307 = -428						; size = 4
tv305 = -428						; size = 4
tv326 = -426						; size = 2
tv318 = -426						; size = 2
_xMax$8700 = -228					; size = 4
_xMin$8699 = -216					; size = 4
_xMaxDisp$8698 = -204					; size = 4
_xMinDisp$8697 = -192					; size = 4
_yMin$ = -180						; size = 4
_yMax$ = -168						; size = 4
_y$ = -156						; size = 4
_ro2$ = -144						; size = 4
_ri2$ = -132						; size = 4
_Cos1_HQ$ = -120					; size = 4
_Cos0_HQ$ = -108					; size = 4
_Sin1_HQ$ = -96						; size = 4
_Sin0_HQ$ = -84						; size = 4
_ro$ = -72						; size = 4
_ri$ = -60						; size = 4
_afy$ = -48						; size = 16
_afx$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_Angle0$ = 24						; size = 4
_Angle1$ = 28						; size = 4
_xMul$ = 32						; size = 4
_yMul$ = 36						; size = 4
__DrawArc PROC						; COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 440				; 000001b8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 85
	fild	DWORD PTR _rx$[ebp]
	movzx	eax, BYTE PTR _GUI_Context+24
	mov	DWORD PTR tv305[ebp], eax
	fild	DWORD PTR tv305[ebp]
	fdiv	DWORD PTR __real@40000000
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _ri$[ebp]
; Line 86
	fild	DWORD PTR _rx$[ebp]
	movzx	eax, BYTE PTR _GUI_Context+24
	mov	DWORD PTR tv307[ebp], eax
	fild	DWORD PTR tv307[ebp]
	fdiv	DWORD PTR __real@40000000
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _ro$[ebp]
; Line 87
	mov	eax, DWORD PTR _Angle0$[ebp]
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
	mov	DWORD PTR _Sin0_HQ$[ebp], eax
; Line 88
	mov	eax, DWORD PTR _Angle1$[ebp]
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
	mov	DWORD PTR _Sin1_HQ$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _Angle0$[ebp]
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_GUI__CosHQ
	add	esp, 4
	mov	DWORD PTR _Cos0_HQ$[ebp], eax
; Line 90
	mov	eax, DWORD PTR _Angle1$[ebp]
	imul	eax, 1000				; 000003e8H
	push	eax
	call	_GUI__CosHQ
	add	esp, 4
	mov	DWORD PTR _Cos1_HQ$[ebp], eax
; Line 91
	fld	DWORD PTR _ri$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	fnstcw	WORD PTR tv318[ebp]
	movzx	eax, WORD PTR tv318[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv321[ebp], eax
	fldcw	WORD PTR tv321[ebp]
	fistp	QWORD PTR tv323[ebp]
	fldcw	WORD PTR tv318[ebp]
	mov	eax, DWORD PTR tv323[ebp]
	mov	DWORD PTR _ri2$[ebp], eax
; Line 92
	fld	DWORD PTR _ro$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	fnstcw	WORD PTR tv326[ebp]
	movzx	eax, WORD PTR tv326[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv329[ebp], eax
	fldcw	WORD PTR tv329[ebp]
	fistp	QWORD PTR tv331[ebp]
	fldcw	WORD PTR tv326[ebp]
	mov	eax, DWORD PTR tv331[ebp]
	mov	DWORD PTR _ro2$[ebp], eax
; Line 93
	fild	DWORD PTR _Sin0_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv338[ebp], eax
	fild	DWORD PTR tv338[ebp]
	fstp	DWORD PTR _afy$[ebp]
; Line 94
	fild	DWORD PTR _Sin0_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv344[ebp], eax
	fild	DWORD PTR tv344[ebp]
	fstp	DWORD PTR _afy$[ebp+4]
; Line 95
	fild	DWORD PTR _Sin1_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv350[ebp], eax
	fild	DWORD PTR tv350[ebp]
	fstp	DWORD PTR _afy$[ebp+8]
; Line 96
	fild	DWORD PTR _Sin1_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv356[ebp], eax
	fild	DWORD PTR tv356[ebp]
	fstp	DWORD PTR _afy$[ebp+12]
; Line 97
	fild	DWORD PTR _Cos0_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv362[ebp], eax
	fild	DWORD PTR tv362[ebp]
	fstp	DWORD PTR _afx$[ebp]
; Line 98
	fild	DWORD PTR _Cos0_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv368[ebp], eax
	fild	DWORD PTR tv368[ebp]
	fstp	DWORD PTR _afx$[ebp+4]
; Line 99
	fild	DWORD PTR _Cos1_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv374[ebp], eax
	fild	DWORD PTR tv374[ebp]
	fstp	DWORD PTR _afx$[ebp+8]
; Line 100
	fild	DWORD PTR _Cos1_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv380[ebp], eax
	fild	DWORD PTR tv380[ebp]
	fstp	DWORD PTR _afx$[ebp+12]
; Line 101
	fld	DWORD PTR _afy$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_ceil
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _yMin$[ebp], eax
; Line 102
	fld	DWORD PTR _afy$[ebp+12]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_floor
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _yMax$[ebp], eax
; Line 106
	cmp	DWORD PTR _GUI_Context+20, 0
	je	$LN10@DrawArc
; Line 107
	cmp	DWORD PTR _yMul$[ebp], 1
	jne	SHORT $LN13@DrawArc
; Line 108
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jle	SHORT $LN14@DrawArc
; Line 109
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN14@DrawArc:
; Line 111
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jge	SHORT $LN13@DrawArc
; Line 112
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN13@DrawArc:
; Line 115
	cmp	DWORD PTR _yMul$[ebp], -1
	jne	SHORT $LN10@DrawArc
; Line 116
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jle	SHORT $LN11@DrawArc
; Line 117
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN11@DrawArc:
; Line 119
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jge	SHORT $LN10@DrawArc
; Line 120
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN10@DrawArc:
; Line 128
	mov	DWORD PTR _xMin$8699[ebp], 0
	mov	DWORD PTR _xMax$8700[ebp], 0
; Line 129
	mov	eax, DWORD PTR _yMax$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN9@DrawArc
$LN8@DrawArc:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN9@DrawArc:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMin$[ebp]
	jl	$LN7@DrawArc
; Line 130
	mov	eax, DWORD PTR _ri2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _xMin$8699[ebp]
	push	edx
	call	__CalcX
	add	esp, 12					; 0000000cH
; Line 131
	mov	eax, DWORD PTR _ro2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _xMax$8700[ebp]
	push	edx
	call	__CalcX
	add	esp, 12					; 0000000cH
; Line 132
	fild	DWORD PTR _y$[ebp]
	fcomp	DWORD PTR _afy$[ebp+4]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN6@DrawArc
; Line 133
	push	ecx
	fld	DWORD PTR _afx$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afx$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp]
	fstp	DWORD PTR [esp]
	fild	DWORD PTR _y$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	__CalcInterSectLin
	add	esp, 20					; 00000014H
	call	__ftol2_sse
	mov	DWORD PTR _xMaxDisp$8698[ebp], eax
; Line 134
	jmp	SHORT $LN5@DrawArc
$LN6@DrawArc:
; Line 135
	mov	eax, DWORD PTR _xMax$8700[ebp]
	mov	DWORD PTR _xMaxDisp$8698[ebp], eax
$LN5@DrawArc:
; Line 137
	fild	DWORD PTR _y$[ebp]
	fcomp	DWORD PTR _afy$[ebp+8]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@DrawArc
; Line 138
	push	ecx
	fld	DWORD PTR _afx$[ebp+12]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afx$[ebp+8]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+12]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+8]
	fstp	DWORD PTR [esp]
	fild	DWORD PTR _y$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	__CalcInterSectLin
	add	esp, 20					; 00000014H
	call	__ftol2_sse
	mov	DWORD PTR _xMinDisp$8697[ebp], eax
; Line 139
	jmp	SHORT $LN3@DrawArc
$LN4@DrawArc:
; Line 140
	mov	eax, DWORD PTR _xMin$8699[ebp]
	mov	DWORD PTR _xMinDisp$8697[ebp], eax
$LN3@DrawArc:
; Line 142
	cmp	DWORD PTR _xMul$[ebp], 0
	jle	SHORT $LN2@DrawArc
; Line 143
	mov	eax, DWORD PTR _xMaxDisp$8698[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _yMul$[ebp]
	imul	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xMinDisp$8697[ebp]
	add	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	jmp	SHORT $LN1@DrawArc
$LN2@DrawArc:
; Line 145
	mov	eax, DWORD PTR _xMinDisp$8697[ebp]
	neg	eax
	add	eax, DWORD PTR _x0$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _yMul$[ebp]
	imul	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xMaxDisp$8698[ebp]
	neg	edx
	add	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DrawArc:
; Line 147
	jmp	$LN8@DrawArc
$LN7@DrawArc:
; Line 160
	mov	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ry$[ebp], eax
; Line 161
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@DrawArc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN24@DrawArc:
	DD	4
	DD	$LN23@DrawArc
$LN23@DrawArc:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN19@DrawArc
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN20@DrawArc
	DD	-216					; ffffff28H
	DD	4
	DD	$LN21@DrawArc
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN22@DrawArc
$LN22@DrawArc:
	DB	120					; 00000078H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
$LN21@DrawArc:
	DB	120					; 00000078H
	DB	77					; 0000004dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN20@DrawArc:
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	121					; 00000079H
	DB	0
$LN19@DrawArc:
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	120					; 00000078H
	DB	0
__DrawArc ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcX
_TEXT	SEGMENT
_x2$ = -44						; size = 4
_r2y2$ = -32						; size = 4
_y2$ = -20						; size = 4
_x$ = -8						; size = 4
_px$ = 8						; size = 4
_y$ = 12						; size = 4
_r2$ = 16						; size = 4
__CalcX	PROC						; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _px$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x$[ebp], ecx
; Line 43
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y2$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _r2$[ebp]
	sub	eax, DWORD PTR _y2$[ebp]
	mov	DWORD PTR _r2y2$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _y2$[ebp]
	cmp	eax, DWORD PTR _r2$[ebp]
	jb	SHORT $LN3@CalcX
; Line 46
	mov	eax, DWORD PTR _px$[ebp]
	mov	DWORD PTR [eax], 0
; Line 47
	jmp	SHORT $LN5@CalcX
$LN3@CalcX:
; Line 53
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x2$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _x2$[ebp]
	cmp	eax, DWORD PTR _r2y2$[ebp]
	jb	SHORT $LN3@CalcX
; Line 56
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _px$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@CalcX:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcX	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcInterSectLin
_TEXT	SEGMENT
_r$ = -20						; size = 4
_Slope$ = -8						; size = 4
_y$ = 8							; size = 4
_y0$ = 12						; size = 4
_y1$ = 16						; size = 4
_x0$ = 20						; size = 4
_x1$ = 24						; size = 4
__CalcInterSectLin PROC					; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	fld	DWORD PTR _y1$[ebp]
	fld	DWORD PTR _y0$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@CalcInterS
; Line 67
	fld	DWORD PTR _y0$[ebp]
	fstp	DWORD PTR _r$[ebp]
; Line 68
	jmp	SHORT $LN1@CalcInterS
$LN2@CalcInterS:
; Line 69
	fld	DWORD PTR _x1$[ebp]
	fsub	DWORD PTR _x0$[ebp]
	fld	DWORD PTR _y1$[ebp]
	fsub	DWORD PTR _y0$[ebp]
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR _Slope$[ebp]
; Line 70
	fld	DWORD PTR _y$[ebp]
	fsub	DWORD PTR _y0$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	fadd	DWORD PTR _x0$[ebp]
	fstp	DWORD PTR _r$[ebp]
$LN1@CalcInterS:
; Line 72
	fld	DWORD PTR _r$[ebp]
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcInterSectLin ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawArc
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawArc
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_a0$ = 24						; size = 4
_a1$ = 28						; size = 4
_GUI_DrawArc PROC					; COMDAT
; Line 241
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 244
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 245
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawAr
$LN3@GUI_DrawAr:
; Line 247
	mov	eax, DWORD PTR _a1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ry$[ebp]
	push	edx
	mov	eax, DWORD PTR _rx$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_DrawArc
	add	esp, 24					; 00000018H
; Line 249
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawAr
$LN5@GUI_DrawAr:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawArc ENDP
_TEXT	ENDS
END
