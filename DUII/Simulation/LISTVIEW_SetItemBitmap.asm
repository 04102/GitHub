; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTVIEW_SetItemBitmap.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTVIEW_SetItemBitmap
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_LISTVIEW__InvalidateRow:PROC
EXTRN	_LISTVIEW_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listview_setitembitmap.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTVIEW_SetItemBitmap
_TEXT	SEGMENT
_pCellInfo$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Column$ = 12						; size = 4
_Row$ = 16						; size = 4
_xOff$ = 20						; size = 4
_yOff$ = 24						; size = 4
_pBitmap$ = 28						; size = 4
_LISTVIEW_SetItemBitmap PROC				; COMDAT
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN4@LISTVIEW_S
; Line 129
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Column$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetpCellInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCellInfo$[ebp], eax
; Line 130
	cmp	DWORD PTR _pCellInfo$[ebp], 0
	je	SHORT $LN2@LISTVIEW_S
; Line 131
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	ecx, DWORD PTR _pBitmap$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 133
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	DWORD PTR [eax], OFFSET __Draw
; Line 134
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+44]
	or	ecx, 2
	mov	edx, DWORD PTR _pCellInfo$[ebp]
	mov	BYTE PTR [edx+44], cl
; Line 135
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	cx, WORD PTR _xOff$[ebp]
	mov	WORD PTR [eax+40], cx
; Line 136
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	cx, WORD PTR _yOff$[ebp]
	mov	WORD PTR [eax+42], cx
; Line 137
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
; Line 138
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN2@LISTVIEW_S:
; Line 140
	cmp	DWORD PTR _pCellInfo$[ebp], 0
	je	SHORT $LN4@LISTVIEW_S
; Line 141
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCellInfo$[ebp], 0
$LN4@LISTVIEW_S:
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_SetItemBitmap ENDP
_TEXT	ENDS
EXTRN	_GUI__memset:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_LISTVIEW__GetNumRows:PROC
EXTRN	_LISTVIEW__GetNumColumns:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetpCellInfo
_TEXT	SEGMENT
_hCellInfo$15534 = -104					; size = 4
_pCell$15533 = -92					; size = 4
_pRow$15532 = -80					; size = 4
_pObj$15531 = -68					; size = 4
_NumRows$15530 = -56					; size = 4
_NumColumns$15529 = -44					; size = 4
_CellArray$15528 = -32					; size = 4
_RowArray$15527 = -20					; size = 4
_pCellInfo$ = -8					; size = 4
_hObj$ = 8						; size = 4
_Column$ = 12						; size = 4
_Row$ = 16						; size = 4
__GetpCellInfo PROC					; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	mov	DWORD PTR _pCellInfo$[ebp], 0
; Line 45
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@GetpCellIn
; Line 54
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$15531[ebp], eax
; Line 55
	mov	eax, DWORD PTR _pObj$15531[ebp]
	push	eax
	call	_LISTVIEW__GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$15529[ebp], eax
; Line 56
	mov	eax, DWORD PTR _pObj$15531[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$15530[ebp], eax
; Line 57
	mov	eax, DWORD PTR _pObj$15531[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$15527[ebp], ecx
; Line 58
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$15531[ebp], 0
; Line 59
	mov	eax, DWORD PTR _Column$[ebp]
	cmp	eax, DWORD PTR _NumColumns$15529[ebp]
	jae	$LN7@GetpCellIn
	mov	eax, DWORD PTR _Row$[ebp]
	cmp	eax, DWORD PTR _NumRows$15530[ebp]
	jae	$LN7@GetpCellIn
; Line 60
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RowArray$15527[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$15532[ebp], eax
; Line 61
	cmp	DWORD PTR _pRow$15532[ebp], 0
	je	$LN7@GetpCellIn
; Line 62
	mov	eax, DWORD PTR _pRow$15532[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _CellArray$15528[ebp], ecx
; Line 63
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$15532[ebp], 0
; Line 64
	mov	eax, DWORD PTR _Column$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$15528[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$15533[ebp], eax
; Line 65
	cmp	DWORD PTR _pCell$15533[ebp], 0
	je	$LN7@GetpCellIn
; Line 66
	mov	eax, DWORD PTR _pCell$15533[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hCellInfo$15534[ebp], ecx
; Line 67
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$15533[ebp], 0
; Line 68
	cmp	DWORD PTR _hCellInfo$15534[ebp], 0
	jne	SHORT $LN3@GetpCellIn
; Line 69
	push	48					; 00000030H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hCellInfo$15534[ebp], eax
; Line 70
	cmp	DWORD PTR _hCellInfo$15534[ebp], 0
	je	SHORT $LN2@GetpCellIn
; Line 71
	mov	eax, DWORD PTR _Column$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$15528[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$15533[ebp], eax
; Line 72
	mov	eax, DWORD PTR _pCell$15533[ebp]
	mov	ecx, DWORD PTR _hCellInfo$15534[ebp]
	mov	DWORD PTR [eax], ecx
; Line 73
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$15533[ebp], 0
; Line 74
	mov	eax, DWORD PTR _hCellInfo$15534[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pCellInfo$[ebp], eax
; Line 75
	push	48					; 00000030H
	push	0
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	push	eax
	call	_GUI__memset
	add	esp, 12					; 0000000cH
$LN2@GetpCellIn:
; Line 77
	jmp	SHORT $LN7@GetpCellIn
$LN3@GetpCellIn:
; Line 78
	mov	eax, DWORD PTR _hCellInfo$15534[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pCellInfo$[ebp], eax
$LN7@GetpCellIn:
; Line 84
	mov	eax, DWORD PTR _pCellInfo$[ebp]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetpCellInfo ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_WM_SetUserClipRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Draw
_TEXT	SEGMENT
_pBitmap$ = -32						; size = 4
_pCellInfo$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Column$ = 12						; size = 4
_Row$ = 16						; size = 4
_pRect$ = 20						; size = 4
__Draw	PROC						; COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN4@Draw
; Line 97
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Column$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetpCellInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCellInfo$[ebp], eax
; Line 98
	cmp	DWORD PTR _pCellInfo$[ebp], 0
	je	$LN4@Draw
; Line 99
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@Draw
; Line 100
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _pBitmap$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 102
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _pCellInfo$[ebp]
	movsx	eax, WORD PTR [edx+42]
	add	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _pRect$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	movsx	ecx, WORD PTR [eax+40]
	add	edx, ecx
	push	edx
	mov	edx, DWORD PTR _pBitmap$[ebp]
	push	edx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 103
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
$LN1@Draw:
; Line 105
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCellInfo$[ebp], 0
; Line 106
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
; Line 108
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN4@Draw:
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Draw	ENDP
_TEXT	ENDS
END
