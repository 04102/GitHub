; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_SIF_Prop.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_SIF_APIList_Prop
CONST	SEGMENT
_GUI_SIF_APIList_Prop DD FLAT:__DispChar
	DD	FLAT:__GetCharDistX
	DD	FLAT:__GetFontInfo
	DD	FLAT:__IsInFont
	ORG $+8
CONST	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_LCD_FillRect:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_GetBkColor:PROC
EXTRN	_GUI_GetColor:PROC
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_LCD_pBkColorIndex:DWORD
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	_GUI__Read32:PROC
EXTRN	_GUI__Read16:PROC
EXTRN	_GUI_SIF__GetpCharInfo:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_sif_prop.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DispChar
_TEXT	SEGMENT
_OldColor$8352 = -116					; size = 4
_YSize$8350 = -104					; size = 4
_YDist$8349 = -92					; size = 4
_YMag$8348 = -80					; size = 4
_CharInfo$8345 = -68					; size = 12
_OldDrawMode$8344 = -48					; size = 4
_DrawMode$8343 = -36					; size = 4
_pData$ = -24						; size = 4
_pCharInfo$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_c$ = 8							; size = 2
__DispChar PROC						; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 37
	push	12					; 0000000cH
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 38
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	je	$LN4@DispChar
; Line 41
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8345[ebp], ax
; Line 42
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8345[ebp+2], ax
; Line 43
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8345[ebp+4], ax
; Line 44
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
; Line 45
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read32
	add	esp, 4
	mov	DWORD PTR _CharInfo$8345[ebp+8], eax
; Line 46
	mov	eax, DWORD PTR _GUI_Context+28
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, DWORD PTR _CharInfo$8345[ebp+8]
	mov	DWORD PTR _pData$[ebp], ecx
; Line 47
	movsx	eax, WORD PTR _GUI_Context+42
	mov	DWORD PTR _DrawMode$8343[ebp], eax
; Line 48
	mov	eax, DWORD PTR _DrawMode$8343[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _OldDrawMode$8344[ebp], eax
; Line 57
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	movzx	edx, WORD PTR _CharInfo$8345[ebp+4]
	push	edx
	push	1
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+26]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [ecx+24]
	push	edx
	movzx	eax, WORD PTR _CharInfo$8345[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+36
	push	ecx
	movsx	edx, WORD PTR _GUI_Context+34
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 59
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+25]
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+24]
	cmp	ecx, eax
	jle	$LN2@DispChar
; Line 60
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	mov	DWORD PTR _YMag$8348[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+25]
	imul	ecx, DWORD PTR _YMag$8348[ebp]
	mov	DWORD PTR _YDist$8349[ebp], ecx
; Line 62
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+24]
	imul	ecx, DWORD PTR _YMag$8348[ebp]
	mov	DWORD PTR _YSize$8350[ebp], ecx
; Line 63
	cmp	DWORD PTR _DrawMode$8343[ebp], 2
	je	SHORT $LN2@DispChar
; Line 64
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$8352[ebp], eax
; Line 65
	call	_GUI_GetBkColor
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 69
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _YDist$8349[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+34
	movzx	edx, WORD PTR _CharInfo$8345[ebp]
	add	ecx, edx
	push	ecx
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _YSize$8350[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+34
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 70
	mov	eax, DWORD PTR _OldColor$8352[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
$LN2@DispChar:
; Line 73
	mov	eax, DWORD PTR _OldDrawMode$8344[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 74
	movzx	eax, WORD PTR _CharInfo$8345[ebp+2]
	movsx	ecx, WORD PTR _GUI_Context+34
	add	ecx, eax
	mov	WORD PTR _GUI_Context+34, cx
$LN4@DispChar:
; Line 76
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@DispChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@DispChar:
	DD	2
	DD	$LN8@DispChar
$LN8@DispChar:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN6@DispChar
	DD	-68					; ffffffbcH
	DD	12					; 0000000cH
	DD	$LN7@DispChar
$LN7@DispChar:
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN6@DispChar:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__DispChar ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetCharDistX
_TEXT	SEGMENT
_DistX$ = -20						; size = 2
_pCharInfo$ = -8					; size = 4
_c$ = 8							; size = 2
__GetCharDistX PROC					; COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 84
	xor	eax, eax
	mov	WORD PTR _DistX$[ebp], ax
; Line 85
	push	12					; 0000000cH
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 86
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	je	SHORT $LN1@GetCharDis
; Line 87
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	add	eax, 2
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 88
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _DistX$[ebp], ax
$LN1@GetCharDis:
; Line 90
	movzx	eax, WORD PTR _DistX$[ebp]
; Line 91
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetCharDis
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@GetCharDis:
	DD	1
	DD	$LN5@GetCharDis
$LN5@GetCharDis:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GetCharDis
$LN4@GetCharDis:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__GetCharDistX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetFontInfo
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_pFont$ = 8						; size = 4
_pfi$ = 12						; size = 4
__GetFontInfo PROC					; COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 99
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 4
	mov	DWORD PTR _pData$[ebp], ecx
; Line 100
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 101
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+3], al
; Line 102
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 103
	mov	eax, 1
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	WORD PTR [ecx], ax
; Line 104
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetFontInf
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetFontInf:
	DD	1
	DD	$LN4@GetFontInf
$LN4@GetFontInf:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@GetFontInf
$LN3@GetFontInf:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__GetFontInfo ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsInFont
_TEXT	SEGMENT
_pCharInfo$ = -8					; size = 4
_pFont$ = 8						; size = 4
_c$ = 12						; size = 2
__IsInFont PROC						; COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR _pFont$[ebp], eax
; Line 113
	push	12					; 0000000cH
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 114
	xor	eax, eax
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	setne	al
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsInFont ENDP
_TEXT	ENDS
END
