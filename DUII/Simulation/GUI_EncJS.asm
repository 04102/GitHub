; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_EncJS.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_ENC_APIList_SJIS
CONST	SEGMENT
_GUI_ENC_APIList_SJIS DD FLAT:__GetLineDistX_SJIS
	DD	FLAT:__GetLineLen_SJIS
	DD	FLAT:__DispLine_SJIS
CONST	ENDS
EXTRN	_GUI_GetCharDistX:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_encjs.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __GetLineDistX_SJIS
_TEXT	SEGMENT
_c1$8356 = -29						; size = 1
_c0$8350 = -17						; size = 1
_Dist$ = -8						; size = 4
_s$ = 8							; size = 4
_Len$ = 12						; size = 4
__GetLineDistX_SJIS PROC				; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	DWORD PTR _Dist$[ebp], 0
; Line 49
	cmp	DWORD PTR _s$[ebp], 0
	je	$LN5@GetLineDis
$LN4@GetLineDis:
; Line 51
	mov	eax, DWORD PTR _s$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c0$8350[ebp], cl
	movzx	edx, BYTE PTR _c0$8350[ebp]
	test	edx, edx
	je	SHORT $LN5@GetLineDis
	cmp	DWORD PTR _Len$[ebp], 0
	jl	SHORT $LN5@GetLineDis
; Line 52
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
	mov	eax, DWORD PTR _Len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
; Line 53
	movzx	eax, BYTE PTR _c0$8350[ebp]
	cmp	eax, 127				; 0000007fH
	jle	SHORT $LN2@GetLineDis
; Line 54
	mov	eax, DWORD PTR _s$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c1$8356[ebp], cl
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 55
	mov	eax, DWORD PTR _Len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
; Line 56
	movzx	eax, BYTE PTR _c1$8356[ebp]
	push	eax
	movzx	ecx, BYTE PTR _c0$8350[ebp]
	push	ecx
	call	_DB2SJIS
	add	esp, 8
	movzx	edx, ax
	push	edx
	call	_GUI_GetCharDistX
	add	esp, 4
	add	eax, DWORD PTR _Dist$[ebp]
	mov	DWORD PTR _Dist$[ebp], eax
; Line 57
	jmp	SHORT $LN1@GetLineDis
$LN2@GetLineDis:
; Line 58
	movzx	ax, BYTE PTR _c0$8350[ebp]
	movzx	ecx, ax
	push	ecx
	call	_GUI_GetCharDistX
	add	esp, 4
	add	eax, DWORD PTR _Dist$[ebp]
	mov	DWORD PTR _Dist$[ebp], eax
$LN1@GetLineDis:
; Line 60
	jmp	$LN4@GetLineDis
$LN5@GetLineDis:
; Line 62
	mov	eax, DWORD PTR _Dist$[ebp]
; Line 63
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetLineDistX_SJIS ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DB2SJIS
_TEXT	SEGMENT
_Byte0$ = 8						; size = 1
_Byte1$ = 12						; size = 1
_DB2SJIS PROC						; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	movzx	eax, BYTE PTR _Byte1$[ebp]
	movzx	ecx, BYTE PTR _Byte0$[ebp]
	shl	ecx, 8
	or	eax, ecx
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_DB2SJIS ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetLineLen_SJIS
_TEXT	SEGMENT
tv73 = -220						; size = 4
_c0$ = -17						; size = 1
_Len$ = -8						; size = 4
_s$ = 8							; size = 4
_MaxLen$ = 12						; size = 4
__GetLineLen_SJIS PROC					; COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	mov	DWORD PTR _Len$[ebp], 0
$LN7@GetLineLen:
; Line 78
	mov	eax, DWORD PTR _s$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c0$[ebp], cl
	movzx	edx, BYTE PTR _c0$[ebp]
	test	edx, edx
	je	SHORT $LN6@GetLineLen
	mov	eax, DWORD PTR _Len$[ebp]
	cmp	eax, DWORD PTR _MaxLen$[ebp]
	jge	SHORT $LN6@GetLineLen
; Line 79
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 80
	movzx	eax, BYTE PTR _c0$[ebp]
	cmp	eax, 127				; 0000007fH
	jle	SHORT $LN5@GetLineLen
; Line 81
	mov	eax, DWORD PTR _Len$[ebp]
	add	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
; Line 82
	jmp	SHORT $LN4@GetLineLen
$LN5@GetLineLen:
; Line 83
	mov	al, BYTE PTR _c0$[ebp]
	mov	BYTE PTR tv73[ebp], al
	cmp	BYTE PTR tv73[ebp], 10			; 0000000aH
	je	SHORT $LN1@GetLineLen
	jmp	SHORT $LN4@GetLineLen
$LN1@GetLineLen:
; Line 84
	mov	eax, DWORD PTR _Len$[ebp]
	jmp	SHORT $LN8@GetLineLen
$LN4@GetLineLen:
; Line 87
	mov	eax, DWORD PTR _Len$[ebp]
	add	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
; Line 88
	jmp	SHORT $LN7@GetLineLen
$LN6@GetLineLen:
; Line 89
	mov	eax, DWORD PTR _Len$[ebp]
$LN8@GetLineLen:
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetLineLen_SJIS ENDP
_TEXT	ENDS
EXTRN	_GL_DispChar:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DispLine_SJIS
_TEXT	SEGMENT
_c1$8390 = -17						; size = 1
_c0$ = -5						; size = 1
_s$ = 8							; size = 4
_Len$ = 12						; size = 4
__DispLine_SJIS PROC					; COMDAT
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN4@DispLine_S:
; Line 98
	mov	eax, DWORD PTR _Len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
	js	SHORT $LN5@DispLine_S
; Line 99
	mov	eax, DWORD PTR _s$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c0$[ebp], cl
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 100
	movzx	eax, BYTE PTR _c0$[ebp]
	cmp	eax, 127				; 0000007fH
	jle	SHORT $LN2@DispLine_S
; Line 101
	mov	eax, DWORD PTR _s$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c1$8390[ebp], cl
	mov	edx, DWORD PTR _s$[ebp]
	add	edx, 1
	mov	DWORD PTR _s$[ebp], edx
; Line 102
	mov	eax, DWORD PTR _Len$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Len$[ebp], eax
; Line 103
	movzx	eax, BYTE PTR _c1$8390[ebp]
	push	eax
	movzx	ecx, BYTE PTR _c0$[ebp]
	push	ecx
	call	_DB2SJIS
	add	esp, 8
	movzx	edx, ax
	push	edx
	call	_GL_DispChar
	add	esp, 4
; Line 104
	jmp	SHORT $LN1@DispLine_S
$LN2@DispLine_S:
; Line 105
	movzx	ax, BYTE PTR _c0$[ebp]
	movzx	ecx, ax
	push	ecx
	call	_GL_DispChar
	add	esp, 4
$LN1@DispLine_S:
; Line 107
	jmp	SHORT $LN4@DispLine_S
$LN5@DispLine_S:
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DispLine_SJIS ENDP
_TEXT	ENDS
END
