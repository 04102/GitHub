; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\MULTIPAGE.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_MULTIPAGE__aEffectColor
PUBLIC	_MULTIPAGE__DefaultProps
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_MULTIPAGE__aEffectColor DD 0ffffffH
	DD	0555555H
_MULTIPAGE__DefaultProps DD FLAT:_GUI_Font13_1
	DD	00H
	DD	0d0d0d0H
	DD	0c0c0c0H
	DD	0808080H
	DD	00H
$SG17350 DB	'MULTIPAGE.c: Wrong handle type or Object not init''ed', 00H
	ORG $+3
$SG17414 DB	'MULTIPAGE_Create failed', 00H
_DATA	ENDS
PUBLIC	_MULTIPAGE__DrawTextItemH
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_WIDGET__FillRectEx:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\multipage.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _MULTIPAGE__DrawTextItemH
_TEXT	SEGMENT
_r$ = -12						; size = 8
_pObj$ = 8						; size = 4
_pText$ = 12						; size = 4
_Index$ = 16						; size = 4
_pRect$ = 20						; size = 4
_x0$ = 24						; size = 4
_w$ = 28						; size = 4
_ColorIndex$ = 32					; size = 4
_MULTIPAGE__DrawTextItemH PROC				; COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 729
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r$[ebp], ecx
	mov	DWORD PTR _r$[ebp+4], edx
; Line 730
	movsx	eax, WORD PTR _r$[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 731
	movsx	eax, WORD PTR _r$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 732
	mov	esi, esp
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 733
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 734
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	cmp	ecx, DWORD PTR _Index$[ebp]
	jne	$LN5@MULTIPAGE_
; Line 735
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 4
	je	SHORT $LN4@MULTIPAGE_
; Line 736
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	add	edx, 1
	movsx	eax, WORD PTR _r$[ebp+2]
	sub	eax, edx
	mov	WORD PTR _r$[ebp+2], ax
; Line 737
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	cmp	DWORD PTR [ecx], 1
	jle	SHORT $LN3@MULTIPAGE_
; Line 738
	mov	eax, DWORD PTR _MULTIPAGE__aEffectColor
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 739
	movsx	eax, WORD PTR _r$[ebp+2]
	add	eax, 1
	push	eax
	movsx	ecx, WORD PTR _r$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _r$[ebp]
	sub	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 740
	mov	eax, DWORD PTR _MULTIPAGE__aEffectColor+4
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 741
	movsx	eax, WORD PTR _r$[ebp+2]
	add	eax, 1
	push	eax
	movsx	ecx, WORD PTR _r$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _r$[ebp+4]
	add	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN3@MULTIPAGE_:
; Line 743
	jmp	SHORT $LN5@MULTIPAGE_
$LN4@MULTIPAGE_:
; Line 744
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	movsx	eax, WORD PTR _r$[ebp+6]
	lea	ecx, DWORD PTR [eax+edx+1]
	mov	WORD PTR _r$[ebp+6], cx
; Line 745
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	cmp	DWORD PTR [ecx], 1
	jle	SHORT $LN5@MULTIPAGE_
; Line 746
	mov	eax, DWORD PTR _MULTIPAGE__aEffectColor
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 747
	movsx	eax, WORD PTR _r$[ebp+6]
	sub	eax, 1
	push	eax
	movsx	ecx, WORD PTR _r$[ebp+6]
	sub	ecx, 2
	push	ecx
	movsx	edx, WORD PTR _r$[ebp]
	sub	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 748
	mov	eax, DWORD PTR _MULTIPAGE__aEffectColor+4
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 749
	movsx	eax, WORD PTR _r$[ebp+6]
	sub	eax, 1
	push	eax
	movsx	ecx, WORD PTR _r$[ebp+6]
	sub	ecx, 2
	push	ecx
	movsx	edx, WORD PTR _r$[ebp+4]
	add	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN5@MULTIPAGE_:
; Line 753
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+80]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 754
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__FillRectEx
	add	esp, 8
; Line 755
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+80]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 756
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 757
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, 3
	push	ecx
	movsx	edx, WORD PTR _r$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 758
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@MULTIPAGE_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN10@MULTIPAGE_:
	DD	1
	DD	$LN9@MULTIPAGE_
$LN9@MULTIPAGE_:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN8@MULTIPAGE_
$LN8@MULTIPAGE_:
	DB	114					; 00000072H
	DB	0
_MULTIPAGE__DrawTextItemH ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE__CalcClientRect
PUBLIC	_MULTIPAGE__DeleteScrollbar
PUBLIC	_MULTIPAGE_LockH
PUBLIC	_MULTIPAGE__UpdatePositions
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_SetSize:PROC
EXTRN	_WM_MoveChildTo:PROC
EXTRN	_GUI_GetYSizeOfFont:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE__UpdatePositions
_TEXT	SEGMENT
tv235 = -412						; size = 4
tv231 = -412						; size = 4
tv181 = -412						; size = 4
tv174 = -412						; size = 4
tv152 = -412						; size = 4
tv148 = -412						; size = 4
tv130 = -412						; size = 4
tv91 = -412						; size = 4
_NumItems$17326 = -212					; size = 4
_y0$17325 = -200					; size = 4
_x0$17324 = -188					; size = 4
_Size$17323 = -176					; size = 4
_rText$17322 = -164					; size = 8
_NumItems$17315 = -148					; size = 4
_y0$17314 = -136					; size = 4
_x0$17313 = -124					; size = 4
_Size$17312 = -112					; size = 4
_rText$17311 = -100					; size = 8
_hClient$ = -84						; size = 4
_Align$ = -72						; size = 4
_pFont$ = -60						; size = 4
_State$ = -48						; size = 2
_Width$ = -36						; size = 4
_rBorder$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_MULTIPAGE__UpdatePositions PROC			; COMDAT
; Line 764
	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 772
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 773
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetTextWidth
	add	esp, 4
	mov	DWORD PTR _Width$[ebp], eax
; Line 774
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _State$[ebp], cx
; Line 775
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 776
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _Align$[ebp], ecx
; Line 777
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hClient$[ebp], ecx
; Line 778
	lea	eax, DWORD PTR _rBorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__CalcBorderRect
	add	esp, 8
; Line 779
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 781
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 8
	je	$LN10@MULTIPAGE_@2
; Line 782
	movsx	eax, WORD PTR _rBorder$[ebp+6]
	cmp	DWORD PTR _Width$[ebp], eax
	jle	$LN9@MULTIPAGE_@2
; Line 784
	mov	DWORD PTR _NumItems$17315[ebp], 0
; Line 785
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 6
	imul	eax, 3
	sar	eax, 2
	mov	DWORD PTR _Size$17312[ebp], eax
; Line 786
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 1
	je	SHORT $LN13@MULTIPAGE_@2
	movsx	ecx, WORD PTR _rBorder$[ebp+2]
	mov	DWORD PTR tv91[ebp], ecx
	jmp	SHORT $LN14@MULTIPAGE_@2
$LN13@MULTIPAGE_@2:
	movsx	edx, WORD PTR _rBorder$[ebp+6]
	mov	eax, DWORD PTR _Size$17312[ebp]
	shl	eax, 1
	sub	edx, eax
	add	edx, 1
	mov	DWORD PTR tv91[ebp], edx
$LN14@MULTIPAGE_@2:
	mov	ecx, DWORD PTR tv91[ebp]
	mov	DWORD PTR _y0$17314[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 4
	je	SHORT $LN15@MULTIPAGE_@2
	movsx	ecx, WORD PTR _rBorder$[ebp]
	sub	ecx, DWORD PTR _Size$17312[ebp]
	add	ecx, 1
	mov	DWORD PTR tv130[ebp], ecx
	jmp	SHORT $LN16@MULTIPAGE_@2
$LN15@MULTIPAGE_@2:
	movsx	edx, WORD PTR _rBorder$[ebp+4]
	mov	DWORD PTR tv130[ebp], edx
$LN16@MULTIPAGE_@2:
	mov	eax, DWORD PTR tv130[ebp]
	mov	DWORD PTR _x0$17313[ebp], eax
; Line 789
	mov	eax, DWORD PTR _Size$17312[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _Size$17312[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$17314[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$17313[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__AddScrollbar
	add	esp, 20					; 00000014H
; Line 790
	lea	eax, DWORD PTR _rText$17311[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTextRect
	add	esp, 8
$LN8@MULTIPAGE_@2:
; Line 791
	movsx	eax, WORD PTR _rText$17311[ebp+6]
	movsx	ecx, WORD PTR _rText$17311[ebp+2]
	sub	eax, ecx
	add	eax, 1
	cmp	eax, 1
	jle	SHORT $LN17@MULTIPAGE_@2
	movsx	edx, WORD PTR _rText$17311[ebp+6]
	movsx	eax, WORD PTR _rText$17311[ebp+2]
	sub	edx, eax
	add	edx, 1
	mov	DWORD PTR tv148[ebp], edx
	jmp	SHORT $LN18@MULTIPAGE_@2
$LN17@MULTIPAGE_@2:
	mov	DWORD PTR tv148[ebp], 1
$LN18@MULTIPAGE_@2:
	mov	ecx, DWORD PTR _Width$[ebp]
	cmp	ecx, DWORD PTR tv148[ebp]
	jl	SHORT $LN7@MULTIPAGE_@2
; Line 792
	mov	eax, DWORD PTR _NumItems$17315[ebp]
	mov	DWORD PTR tv152[ebp], eax
	mov	ecx, DWORD PTR _NumItems$17315[ebp]
	add	ecx, 1
	mov	DWORD PTR _NumItems$17315[ebp], ecx
	mov	edx, DWORD PTR tv152[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetPageSizeX
	add	esp, 8
	mov	ecx, DWORD PTR _Width$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Width$[ebp], ecx
; Line 793
	jmp	SHORT $LN8@MULTIPAGE_@2
$LN7@MULTIPAGE_@2:
; Line 794
	mov	eax, DWORD PTR _NumItems$17315[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetScrollbar
	add	esp, 8
; Line 795
	jmp	SHORT $LN6@MULTIPAGE_@2
$LN9@MULTIPAGE_@2:
; Line 797
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__DeleteScrollbar
	add	esp, 4
$LN6@MULTIPAGE_@2:
; Line 799
	jmp	$LN5@MULTIPAGE_@2
$LN10@MULTIPAGE_@2:
; Line 800
	movsx	eax, WORD PTR _rBorder$[ebp+4]
	cmp	DWORD PTR _Width$[ebp], eax
	jle	$LN4@MULTIPAGE_@2
; Line 802
	mov	DWORD PTR _NumItems$17326[ebp], 0
; Line 803
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 6
	imul	eax, 3
	sar	eax, 2
	mov	DWORD PTR _Size$17323[ebp], eax
; Line 804
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 1
	je	SHORT $LN19@MULTIPAGE_@2
	movsx	ecx, WORD PTR _rBorder$[ebp]
	mov	DWORD PTR tv174[ebp], ecx
	jmp	SHORT $LN20@MULTIPAGE_@2
$LN19@MULTIPAGE_@2:
	movsx	edx, WORD PTR _rBorder$[ebp+4]
	mov	eax, DWORD PTR _Size$17323[ebp]
	shl	eax, 1
	sub	edx, eax
	add	edx, 1
	mov	DWORD PTR tv174[ebp], edx
$LN20@MULTIPAGE_@2:
	mov	ecx, DWORD PTR tv174[ebp]
	mov	DWORD PTR _x0$17324[ebp], ecx
; Line 805
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 4
	je	SHORT $LN21@MULTIPAGE_@2
	movsx	ecx, WORD PTR _rBorder$[ebp+6]
	mov	DWORD PTR tv181[ebp], ecx
	jmp	SHORT $LN22@MULTIPAGE_@2
$LN21@MULTIPAGE_@2:
	movsx	edx, WORD PTR _rBorder$[ebp+2]
	sub	edx, DWORD PTR _Size$17323[ebp]
	add	edx, 1
	mov	DWORD PTR tv181[ebp], edx
$LN22@MULTIPAGE_@2:
	mov	eax, DWORD PTR tv181[ebp]
	mov	DWORD PTR _y0$17325[ebp], eax
; Line 807
	mov	eax, DWORD PTR _Size$17323[ebp]
	push	eax
	mov	ecx, DWORD PTR _Size$17323[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y0$17325[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$17324[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__AddScrollbar
	add	esp, 20					; 00000014H
; Line 808
	lea	eax, DWORD PTR _rText$17322[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTextRect
	add	esp, 8
$LN3@MULTIPAGE_@2:
; Line 809
	movsx	eax, WORD PTR _rText$17322[ebp+4]
	movsx	ecx, WORD PTR _rText$17322[ebp]
	sub	eax, ecx
	add	eax, 1
	cmp	eax, 1
	jle	SHORT $LN23@MULTIPAGE_@2
	movsx	edx, WORD PTR _rText$17322[ebp+4]
	movsx	eax, WORD PTR _rText$17322[ebp]
	sub	edx, eax
	add	edx, 1
	mov	DWORD PTR tv231[ebp], edx
	jmp	SHORT $LN24@MULTIPAGE_@2
$LN23@MULTIPAGE_@2:
	mov	DWORD PTR tv231[ebp], 1
$LN24@MULTIPAGE_@2:
	mov	ecx, DWORD PTR _Width$[ebp]
	cmp	ecx, DWORD PTR tv231[ebp]
	jl	SHORT $LN2@MULTIPAGE_@2
; Line 810
	mov	eax, DWORD PTR _NumItems$17326[ebp]
	mov	DWORD PTR tv235[ebp], eax
	mov	ecx, DWORD PTR _NumItems$17326[ebp]
	add	ecx, 1
	mov	DWORD PTR _NumItems$17326[ebp], ecx
	mov	edx, DWORD PTR tv235[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetPageSizeX
	add	esp, 8
	mov	ecx, DWORD PTR _Width$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Width$[ebp], ecx
; Line 811
	jmp	SHORT $LN3@MULTIPAGE_@2
$LN2@MULTIPAGE_@2:
; Line 812
	mov	eax, DWORD PTR _NumItems$17326[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetScrollbar
	add	esp, 8
; Line 813
	jmp	SHORT $LN5@MULTIPAGE_@2
$LN4@MULTIPAGE_@2:
; Line 815
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__DeleteScrollbar
	add	esp, 4
$LN5@MULTIPAGE_@2:
; Line 819
	lea	eax, DWORD PTR _rBorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE__CalcClientRect
	add	esp, 8
; Line 820
	movsx	eax, WORD PTR _rBorder$[ebp+2]
	push	eax
	movsx	ecx, WORD PTR _rBorder$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hClient$[ebp]
	push	edx
	call	_WM_MoveChildTo
	add	esp, 12					; 0000000cH
; Line 821
	movsx	eax, WORD PTR _rBorder$[ebp+6]
	movsx	ecx, WORD PTR _rBorder$[ebp+2]
	sub	eax, ecx
	add	eax, 1
	push	eax
	movsx	edx, WORD PTR _rBorder$[ebp+4]
	movsx	eax, WORD PTR _rBorder$[ebp]
	sub	edx, eax
	add	edx, 1
	push	edx
	mov	ecx, DWORD PTR _hClient$[ebp]
	push	ecx
	call	_WM_SetSize
	add	esp, 12					; 0000000cH
; Line 822
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 823
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@MULTIPAGE_@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN29@MULTIPAGE_@2:
	DD	3
	DD	$LN28@MULTIPAGE_@2
$LN28@MULTIPAGE_@2:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN25@MULTIPAGE_@2
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN26@MULTIPAGE_@2
	DD	-164					; ffffff5cH
	DD	8
	DD	$LN27@MULTIPAGE_@2
$LN27@MULTIPAGE_@2:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN26@MULTIPAGE_@2:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN25@MULTIPAGE_@2:
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_MULTIPAGE__UpdatePositions ENDP
_TEXT	ENDS
EXTRN	_WIDGET_SetEffect:PROC
EXTRN	_SCROLLBAR_Create:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __AddScrollbar
_TEXT	SEGMENT
_State$ = -44						; size = 2
_pEffect$ = -32						; size = 4
_hScroll$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_w$ = 20						; size = 4
_h$ = 24						; size = 4
__AddScrollbar PROC					; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 129
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 130
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	DWORD PTR _pEffect$[ebp], ecx
; Line 131
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _State$[ebp], cx
; Line 132
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 133
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetScrollbarH
	add	esp, 4
	mov	DWORD PTR _hScroll$[ebp], eax
	cmp	DWORD PTR _hScroll$[ebp], 0
	jne	SHORT $LN4@AddScrollb
; Line 134
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 8
	je	SHORT $LN3@AddScrollb
; Line 135
	push	8
	push	2
	push	255					; 000000ffH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _h$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_SCROLLBAR_Create
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 136
	jmp	SHORT $LN2@AddScrollb
$LN3@AddScrollb:
; Line 137
	push	0
	push	2
	push	255					; 000000ffH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _h$[ebp]
	push	ecx
	mov	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_SCROLLBAR_Create
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hScroll$[ebp], eax
$LN2@AddScrollb:
; Line 139
	mov	eax, DWORD PTR _pEffect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_WIDGET_SetEffect
	add	esp, 8
; Line 140
	jmp	SHORT $LN1@AddScrollb
$LN4@AddScrollb:
; Line 141
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hScroll$[ebp]
	push	edx
	call	_WM_MoveChildTo
	add	esp, 12					; 0000000cH
; Line 142
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hScroll$[ebp]
	push	edx
	call	_WM_SetSize
	add	esp, 12					; 0000000cH
$LN1@AddScrollb:
; Line 144
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 145
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	or	ecx, 256				; 00000100H
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+54], cx
; Line 146
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__AddScrollbar ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetScrollbarH
_TEXT	SEGMENT
_pWin$ = -32						; size = 4
_r$ = -20						; size = 4
_hi$ = -8						; size = 4
_hWin$ = 8						; size = 4
__GetScrollbarH PROC					; COMDAT
; Line 103
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 106
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _hi$[ebp], ecx
; Line 108
	mov	DWORD PTR _r$[ebp], 0
$LN3@GetScrollb:
; Line 109
	cmp	DWORD PTR _hi$[ebp], 0
	je	SHORT $LN2@GetScrollb
; Line 110
	mov	eax, DWORD PTR _hi$[ebp]
	push	eax
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN1@GetScrollb
; Line 111
	mov	eax, DWORD PTR _hi$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 112
	jmp	SHORT $LN2@GetScrollb
$LN1@GetScrollb:
; Line 114
	mov	eax, DWORD PTR _hi$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hi$[ebp], ecx
; Line 115
	jmp	SHORT $LN3@GetScrollb
$LN2@GetScrollb:
; Line 116
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWin$[ebp], 0
; Line 117
	mov	eax, DWORD PTR _r$[ebp]
; Line 118
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetScrollbarH ENDP
_TEXT	ENDS
EXTRN	_SCROLLBAR_SetValue:PROC
EXTRN	_SCROLLBAR_SetPageSize:PROC
EXTRN	_SCROLLBAR_SetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetScrollbar
_TEXT	SEGMENT
_hScroll$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_NumItems$ = 12						; size = 4
__SetScrollbar PROC					; COMDAT
; Line 153
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 156
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetScrollbarH
	add	esp, 4
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _NumItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_SCROLLBAR_SetNumItems
	add	esp, 8
; Line 158
	push	1
	mov	eax, DWORD PTR _hScroll$[ebp]
	push	eax
	call	_SCROLLBAR_SetPageSize
	add	esp, 8
; Line 159
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 160
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	cmp	ecx, DWORD PTR _NumItems$[ebp]
	jl	SHORT $LN1@SetScrollb
; Line 161
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+68], 0
$LN1@SetScrollb:
; Line 163
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _hScroll$[ebp]
	push	edx
	call	_SCROLLBAR_SetValue
	add	esp, 8
; Line 164
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetScrollbar ENDP
_TEXT	ENDS
EXTRN	_WM__GetClientRectWin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcBorderRect
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
__CalcBorderRect PROC					; COMDAT
; Line 272
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 273
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WM__GetClientRectWin
	add	esp, 8
; Line 274
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__AdjustRect
	add	esp, 8
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcBorderRect ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __AdjustRect
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
__AdjustRect PROC					; COMDAT
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 251
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN6@AdjustRect
; Line 252
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 4
	je	SHORT $LN5@AdjustRect
; Line 253
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [edx]
	lea	edx, DWORD PTR [ecx+eax+6]
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [eax], dx
; Line 254
	jmp	SHORT $LN4@AdjustRect
$LN5@AdjustRect:
; Line 255
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 6
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [edx+4]
	sub	ecx, eax
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+4], cx
$LN4@AdjustRect:
; Line 257
	jmp	SHORT $LN7@AdjustRect
$LN6@AdjustRect:
; Line 258
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 4
	je	SHORT $LN2@AdjustRect
; Line 259
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 6
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [edx+6]
	sub	ecx, eax
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+6], cx
; Line 260
	jmp	SHORT $LN7@AdjustRect
$LN2@AdjustRect:
; Line 261
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [edx+2]
	lea	edx, DWORD PTR [ecx+eax+6]
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [eax+2], dx
$LN7@AdjustRect:
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__AdjustRect ENDP
_TEXT	ENDS
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetPageSizeX
_TEXT	SEGMENT
_pPage$17084 = -44					; size = 4
_NumItems$ = -32					; size = 4
_r$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetPageSizeX PROC					; COMDAT
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 285
	mov	DWORD PTR _r$[ebp], 0
; Line 287
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 288
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 289
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN1@GetPageSiz
; Line 291
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 292
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17084[ebp], eax
; Line 293
	mov	eax, DWORD PTR _pPage$17084[ebp]
	add	eax, 5
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _r$[ebp], eax
; Line 294
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17084[ebp], 0
$LN1@GetPageSiz:
; Line 296
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 297
	mov	eax, DWORD PTR _r$[ebp]
; Line 298
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPageSizeX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetTextWidth
_TEXT	SEGMENT
_NumItems$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetTextWidth PROC					; COMDAT
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 323
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 324
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 325
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 326
	mov	eax, DWORD PTR _NumItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPagePosX
	add	esp, 8
; Line 327
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetTextWidth ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPagePosX
_TEXT	SEGMENT
_r$ = -20						; size = 4
_i$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetPagePosX PROC					; COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 307
	mov	DWORD PTR _r$[ebp], 0
; Line 308
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@GetPagePos
$LN2@GetPagePos:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@GetPagePos:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _Index$[ebp]
	jae	SHORT $LN1@GetPagePos
; Line 309
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPageSizeX
	add	esp, 8
	add	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 310
	jmp	SHORT $LN2@GetPagePos
$LN1@GetPagePos:
; Line 311
	mov	eax, DWORD PTR _r$[ebp]
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPagePosX ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetTextRect
_TEXT	SEGMENT
_Height$ = -48						; size = 4
_Width$ = -36						; size = 4
_rBorder$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
__GetTextRect PROC					; COMDAT
; Line 333
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 337
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 338
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_GetYSizeOfFont
	add	esp, 4
	add	eax, 6
	mov	DWORD PTR _Height$[ebp], eax
; Line 339
	lea	eax, DWORD PTR _rBorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__CalcBorderRect
	add	esp, 8
; Line 340
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	$LN14@GetTextRec
; Line 342
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 4
	je	SHORT $LN13@GetTextRec
; Line 343
	xor	eax, eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 344
	jmp	SHORT $LN12@GetTextRec
$LN13@GetTextRec:
; Line 345
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _rBorder$[ebp+4]
	mov	WORD PTR [eax], cx
$LN12@GetTextRec:
; Line 347
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _Height$[ebp]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 349
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 256				; 00000100H
	je	SHORT $LN11@GetTextRec
; Line 350
	movsx	eax, WORD PTR _rBorder$[ebp+6]
	mov	ecx, DWORD PTR _Height$[ebp]
	imul	ecx, 3
	sar	ecx, 1
	sub	eax, ecx
	sub	eax, 3
	mov	DWORD PTR _Width$[ebp], eax
; Line 351
	jmp	SHORT $LN10@GetTextRec
$LN11@GetTextRec:
; Line 352
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetTextWidth
	add	esp, 4
	mov	DWORD PTR _Width$[ebp], eax
$LN10@GetTextRec:
; Line 355
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 1
	je	SHORT $LN9@GetTextRec
; Line 356
	movsx	eax, WORD PTR _rBorder$[ebp+6]
	sub	eax, DWORD PTR _Width$[ebp]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 357
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _rBorder$[ebp+6]
	mov	WORD PTR [eax+6], cx
; Line 358
	jmp	SHORT $LN8@GetTextRec
$LN9@GetTextRec:
; Line 359
	xor	eax, eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 360
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Width$[ebp]
	mov	WORD PTR [eax+6], cx
$LN8@GetTextRec:
; Line 362
	jmp	$LN7@GetTextRec
$LN14@GetTextRec:
; Line 364
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 4
	je	SHORT $LN6@GetTextRec
; Line 365
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _rBorder$[ebp+6]
	mov	WORD PTR [eax+2], cx
; Line 366
	jmp	SHORT $LN5@GetTextRec
$LN6@GetTextRec:
; Line 367
	xor	eax, eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
$LN5@GetTextRec:
; Line 369
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, DWORD PTR _Height$[ebp]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+6], cx
; Line 371
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 256				; 00000100H
	je	SHORT $LN4@GetTextRec
; Line 372
	movsx	eax, WORD PTR _rBorder$[ebp+4]
	mov	ecx, DWORD PTR _Height$[ebp]
	imul	ecx, 3
	sar	ecx, 1
	sub	eax, ecx
	sub	eax, 3
	mov	DWORD PTR _Width$[ebp], eax
; Line 373
	jmp	SHORT $LN3@GetTextRec
$LN4@GetTextRec:
; Line 374
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetTextWidth
	add	esp, 4
	mov	DWORD PTR _Width$[ebp], eax
$LN3@GetTextRec:
; Line 377
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 1
	je	SHORT $LN2@GetTextRec
; Line 378
	movsx	eax, WORD PTR _rBorder$[ebp+4]
	sub	eax, DWORD PTR _Width$[ebp]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 379
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _rBorder$[ebp+4]
	mov	WORD PTR [eax+4], cx
; Line 380
	jmp	SHORT $LN7@GetTextRec
$LN2@GetTextRec:
; Line 381
	xor	eax, eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 382
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Width$[ebp]
	mov	WORD PTR [eax+4], cx
$LN7@GetTextRec:
; Line 385
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 386
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@GetTextRec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@GetTextRec:
	DD	1
	DD	$LN18@GetTextRec
$LN18@GetTextRec:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN17@GetTextRec
$LN17@GetTextRec:
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
__GetTextRect ENDP
_TEXT	ENDS
EXTRN	_WIDGET__GetInsideRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE__CalcClientRect
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
_MULTIPAGE__CalcClientRect PROC				; COMDAT
; Line 831
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 833
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 834
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__GetInsideRect
	add	esp, 8
; Line 835
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__AdjustRect
	add	esp, 8
; Line 836
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 837
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE__CalcClientRect ENDP
_TEXT	ENDS
EXTRN	_WM_DeleteWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE__DeleteScrollbar
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_MULTIPAGE__DeleteScrollbar PROC			; COMDAT
; Line 843
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 845
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetScrollbarH
	add	esp, 4
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 846
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 847
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, -257				; fffffeffH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [edx+54], cx
; Line 848
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 849
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE__DeleteScrollbar ENDP
_TEXT	ENDS
EXTRN	_GUI_ErrorOut:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_MULTIPAGE_LockH PROC					; COMDAT
; Line 856
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 857
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 858
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@3
; Line 859
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+100], 1297435728		; 4d554c50H
	je	SHORT $LN2@MULTIPAGE_@3
; Line 860
	push	OFFSET $SG17350
	call	_GUI_ErrorOut
	add	esp, 4
; Line 861
	xor	eax, eax
	jmp	SHORT $LN3@MULTIPAGE_@3
$LN2@MULTIPAGE_@3:
; Line 864
	mov	eax, DWORD PTR _p$[ebp]
$LN3@MULTIPAGE_@3:
; Line 865
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_LockH ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_GUI_ARRAY_Delete:PROC
EXTRN	_SCROLLBAR_GetValue:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_Callback
_TEXT	SEGMENT
tv68 = -232						; size = 4
_Handled$ = -32						; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_MULTIPAGE_Callback PROC				; COMDAT
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 879
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 883
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	mov	DWORD PTR _Handled$[ebp], eax
; Line 884
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 20			; 00000014H
	jg	SHORT $LN17@MULTIPAGE_@4
	cmp	DWORD PTR tv68[ebp], 20			; 00000014H
	je	$LN6@MULTIPAGE_@4
	mov	edx, DWORD PTR tv68[ebp]
	sub	edx, 5
	mov	DWORD PTR tv68[ebp], edx
	cmp	DWORD PTR tv68[ebp], 10			; 0000000aH
	ja	$LN2@MULTIPAGE_@4
	mov	eax, DWORD PTR tv68[ebp]
	movzx	ecx, BYTE PTR $LN18@MULTIPAGE_@4[eax]
	jmp	DWORD PTR $LN19@MULTIPAGE_@4[ecx*4]
$LN17@MULTIPAGE_@4:
	cmp	DWORD PTR tv68[ebp], 23			; 00000017H
	je	$LN7@MULTIPAGE_@4
	cmp	DWORD PTR tv68[ebp], 38			; 00000026H
	je	SHORT $LN10@MULTIPAGE_@4
	cmp	DWORD PTR tv68[ebp], 768		; 00000300H
	je	$LN5@MULTIPAGE_@4
	jmp	$LN2@MULTIPAGE_@4
$LN12@MULTIPAGE_@4:
; Line 886
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Paint
	add	esp, 4
; Line 887
	jmp	$LN15@MULTIPAGE_@4
$LN11@MULTIPAGE_@4:
; Line 889
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 890
	jmp	$LN15@MULTIPAGE_@4
$LN10@MULTIPAGE_@4:
; Line 892
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 5
	jne	SHORT $LN9@MULTIPAGE_@4
; Line 893
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 255				; 000000ffH
	jne	SHORT $LN9@MULTIPAGE_@4
; Line 894
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 895
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_SCROLLBAR_GetValue
	add	esp, 4
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+68], eax
; Line 896
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 897
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN9@MULTIPAGE_@4:
; Line 900
	jmp	$LN15@MULTIPAGE_@4
$LN7@MULTIPAGE_@4:
; Line 902
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 903
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	mov	DWORD PTR [eax+12], edx
; Line 904
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 905
	jmp	SHORT $LN15@MULTIPAGE_@4
$LN6@MULTIPAGE_@4:
; Line 907
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_MULTIPAGE__CalcClientRect
	add	esp, 8
; Line 908
	jmp	SHORT $LN15@MULTIPAGE_@4
$LN5@MULTIPAGE_@4:
; Line 910
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetScrollbarH
	add	esp, 4
	push	eax
	call	_WIDGET_SetEffect
	add	esp, 8
$LN4@MULTIPAGE_@4:
; Line 912
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
; Line 913
	jmp	SHORT $LN15@MULTIPAGE_@4
$LN3@MULTIPAGE_@4:
; Line 915
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 916
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 917
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN2@MULTIPAGE_@4:
; Line 921
	cmp	DWORD PTR _Handled$[ebp], 0
	je	SHORT $LN15@MULTIPAGE_@4
; Line 922
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN15@MULTIPAGE_@4:
; Line 926
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@MULTIPAGE_@4:
	DD	$LN4@MULTIPAGE_@4
	DD	$LN3@MULTIPAGE_@4
	DD	$LN11@MULTIPAGE_@4
	DD	$LN12@MULTIPAGE_@4
	DD	$LN2@MULTIPAGE_@4
$LN18@MULTIPAGE_@4:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	3
_MULTIPAGE_Callback ENDP
_TEXT	ENDS
EXTRN	_WM_SetUserClipRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Paint
_TEXT	SEGMENT
_TextPos$17144 = -116					; size = 4
_w$17143 = -104						; size = 4
_i$17142 = -92						; size = 4
_rClip$17141 = -80					; size = 8
_pPage$17140 = -64					; size = 4
_NumItems$ = -52					; size = 4
_rText$ = -40						; size = 8
_rBorder$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 398
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 406
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 408
	lea	eax, DWORD PTR _rText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTextRect
	add	esp, 8
; Line 435
	lea	eax, DWORD PTR _rBorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__CalcBorderRect
	add	esp, 8
; Line 436
	mov	esi, esp
	lea	eax, DWORD PTR _rBorder$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 438
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 439
	cmp	DWORD PTR _NumItems$[ebp], 0
	jle	$LN9@Paint
; Line 442
	mov	DWORD PTR _w$17143[ebp], 0
	mov	DWORD PTR _TextPos$17144[ebp], 0
; Line 443
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 256				; 00000100H
	je	SHORT $LN8@Paint
; Line 444
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, 1
	je	SHORT $LN7@Paint
; Line 445
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetPagePosX
	add	esp, 8
	neg	eax
	mov	DWORD PTR _TextPos$17144[ebp], eax
; Line 446
	jmp	SHORT $LN8@Paint
$LN7@Paint:
; Line 447
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetPagePosX
	add	esp, 8
	neg	eax
	mov	DWORD PTR _TextPos$17144[ebp], eax
$LN8@Paint:
; Line 467
	mov	eax, DWORD PTR _rText$[ebp]
	mov	DWORD PTR _rClip$17141[ebp], eax
	mov	ecx, DWORD PTR _rText$[ebp+4]
	mov	DWORD PTR _rClip$17141[ebp+4], ecx
; Line 468
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN5@Paint
; Line 469
	movsx	eax, WORD PTR _rText$[ebp]
	sub	eax, 1
	mov	WORD PTR _rClip$17141[ebp], ax
; Line 470
	movsx	eax, WORD PTR _rText$[ebp+4]
	add	eax, 1
	mov	WORD PTR _rClip$17141[ebp+4], ax
; Line 471
	jmp	SHORT $LN4@Paint
$LN5@Paint:
; Line 472
	movsx	eax, WORD PTR _rText$[ebp+2]
	sub	eax, 1
	mov	WORD PTR _rClip$17141[ebp+2], ax
; Line 473
	movsx	eax, WORD PTR _rText$[ebp+6]
	add	eax, 1
	mov	WORD PTR _rClip$17141[ebp+6], ax
$LN4@Paint:
; Line 475
	lea	eax, DWORD PTR _rClip$17141[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 476
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 477
	mov	DWORD PTR _i$17142[ebp], 0
	jmp	SHORT $LN3@Paint
$LN2@Paint:
	mov	eax, DWORD PTR _i$17142[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17142[ebp], eax
$LN3@Paint:
	mov	eax, DWORD PTR _i$17142[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	$LN1@Paint
; Line 478
	mov	eax, DWORD PTR _i$17142[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17140[ebp], eax
; Line 479
	mov	eax, DWORD PTR _TextPos$17144[ebp]
	add	eax, DWORD PTR _w$17143[ebp]
	mov	DWORD PTR _TextPos$17144[ebp], eax
; Line 480
	mov	eax, DWORD PTR _pPage$17140[ebp]
	add	eax, 5
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	add	eax, 10					; 0000000aH
	mov	DWORD PTR _w$17143[ebp], eax
; Line 481
	mov	eax, DWORD PTR _pPage$17140[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _w$17143[ebp]
	push	edx
	mov	eax, DWORD PTR _TextPos$17144[ebp]
	push	eax
	lea	ecx, DWORD PTR _rText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$17142[ebp]
	push	edx
	mov	eax, DWORD PTR _pPage$17140[ebp]
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+96]
	call	eax
	add	esp, 28					; 0000001cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 482
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17140[ebp], 0
; Line 483
	jmp	$LN2@Paint
$LN1@Paint:
; Line 493
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
$LN9@Paint:
; Line 505
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 506
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@Paint:
	DD	3
	DD	$LN15@Paint
$LN15@Paint:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN12@Paint
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN13@Paint
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN14@Paint
$LN14@Paint:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	0
$LN13@Paint:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN12@Paint:
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_WM_NotifyParent:PROC
EXTRN	_WM_BringToTop:PROC
EXTRN	_WM_Screen2hWinEx:PROC
EXTRN	_WM_GetWindowOrgY:PROC
EXTRN	_WM_GetWindowOrgX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnTouch
_TEXT	SEGMENT
_cb$17211 = -80						; size = 4
_pBelow$17210 = -68					; size = 4
_hBelow$17208 = -56					; size = 4
_y$17206 = -44						; size = 4
_x$17205 = -32						; size = 4
_Notification$ = -20					; size = 4
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 573
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 576
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN7@OnTouch
; Line 577
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 578
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	$LN6@OnTouch
; Line 579
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x$17205[ebp], ecx
; Line 580
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _y$17206[ebp], ecx
; Line 581
	mov	eax, DWORD PTR _y$17206[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$17205[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__ClickedOnMultipage
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN5@OnTouch
; Line 583
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	add	eax, DWORD PTR _x$17205[ebp]
	mov	DWORD PTR _x$17205[ebp], eax
; Line 584
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	add	eax, DWORD PTR _y$17206[ebp]
	mov	DWORD PTR _y$17206[ebp], eax
; Line 585
	mov	eax, DWORD PTR _y$17206[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$17205[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WM_Screen2hWinEx
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hBelow$17208[ebp], eax
; Line 586
	cmp	DWORD PTR _hBelow$17208[ebp], 0
	je	SHORT $LN4@OnTouch
	mov	eax, DWORD PTR _hBelow$17208[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	SHORT $LN4@OnTouch
; Line 589
	mov	eax, DWORD PTR _hBelow$17208[ebp]
	push	eax
	call	_WM_GetWindowOrgX
	add	esp, 4
	mov	ecx, DWORD PTR _x$17205[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _pState$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 590
	mov	eax, DWORD PTR _hBelow$17208[ebp]
	push	eax
	call	_WM_GetWindowOrgY
	add	esp, 4
	mov	ecx, DWORD PTR _y$17206[ebp]
	sub	ecx, eax
	mov	edx, DWORD PTR _pState$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 591
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hBelow$17208[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 592
	mov	eax, DWORD PTR _hBelow$17208[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pBelow$17210[ebp], eax
; Line 593
	mov	eax, DWORD PTR _pBelow$17210[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _cb$17211[ebp], ecx
; Line 594
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pBelow$17210[ebp], 0
; Line 595
	mov	esi, esp
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	DWORD PTR _cb$17211[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@OnTouch:
; Line 597
	jmp	SHORT $LN3@OnTouch
$LN5@OnTouch:
; Line 598
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_BringToTop
	add	esp, 4
$LN3@OnTouch:
; Line 600
	mov	DWORD PTR _Notification$[ebp], 1
; Line 601
	jmp	SHORT $LN2@OnTouch
$LN6@OnTouch:
; Line 602
	mov	DWORD PTR _Notification$[ebp], 2
$LN2@OnTouch:
; Line 604
	jmp	SHORT $LN1@OnTouch
$LN7@OnTouch:
; Line 605
	mov	DWORD PTR _Notification$[ebp], 3
$LN1@OnTouch:
; Line 607
	mov	eax, DWORD PTR _Notification$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_NotifyParent
	add	esp, 8
; Line 608
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SelectPage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ClickedOnMultipage
_TEXT	SEGMENT
_x0$17188 = -144					; size = 4
_w$17187 = -132						; size = 4
_i$17186 = -120						; size = 4
_y0$17177 = -108					; size = 4
_w$17176 = -96						; size = 4
_i$17175 = -84						; size = 4
_State$ = -72						; size = 2
_ScrollState$ = -60					; size = 4
_r$ = -48						; size = 4
_NumItems$ = -36					; size = 4
_rText$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__ClickedOnMultipage PROC				; COMDAT
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 516
	mov	DWORD PTR _r$[ebp], 1
; Line 519
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 520
	lea	eax, DWORD PTR _rText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetTextRect
	add	esp, 8
; Line 521
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 522
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollState$[ebp], ecx
; Line 523
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+54]
	mov	WORD PTR _State$[ebp], cx
; Line 524
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 525
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 8
	je	$LN16@ClickedOnM
; Line 526
	movsx	eax, WORD PTR _rText$[ebp]
	cmp	DWORD PTR _x$[ebp], eax
	jl	$LN15@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jg	$LN15@ClickedOnM
; Line 527
	cmp	DWORD PTR _NumItems$[ebp], 0
	jle	$LN14@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp+2]
	cmp	DWORD PTR _y$[ebp], eax
	jl	$LN14@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jg	$LN14@ClickedOnM
; Line 528
	mov	DWORD PTR _w$17176[ebp], 0
	movsx	eax, WORD PTR _rText$[ebp+2]
	mov	DWORD PTR _y0$17177[ebp], eax
; Line 530
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 256				; 00000100H
	je	SHORT $LN13@ClickedOnM
; Line 531
	mov	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPagePosX
	add	esp, 8
	mov	edx, DWORD PTR _y0$17177[ebp]
	sub	edx, eax
	mov	DWORD PTR _y0$17177[ebp], edx
$LN13@ClickedOnM:
; Line 533
	mov	DWORD PTR _i$17175[ebp], 0
	jmp	SHORT $LN12@ClickedOnM
$LN11@ClickedOnM:
	mov	eax, DWORD PTR _i$17175[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17175[ebp], eax
$LN12@ClickedOnM:
	mov	eax, DWORD PTR _i$17175[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN14@ClickedOnM
; Line 534
	mov	eax, DWORD PTR _y0$17177[ebp]
	add	eax, DWORD PTR _w$17176[ebp]
	mov	DWORD PTR _y0$17177[ebp], eax
; Line 535
	mov	eax, DWORD PTR _i$17175[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPageSizeX
	add	esp, 8
	mov	DWORD PTR _w$17176[ebp], eax
; Line 536
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _y0$17177[ebp]
	jl	SHORT $LN9@ClickedOnM
	mov	eax, DWORD PTR _w$17176[ebp]
	mov	ecx, DWORD PTR _y0$17177[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	cmp	DWORD PTR _y$[ebp], edx
	jg	SHORT $LN9@ClickedOnM
; Line 537
	mov	eax, DWORD PTR _i$17175[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE_SelectPage
	add	esp, 8
; Line 538
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 539
	mov	eax, 1
	jmp	$LN17@ClickedOnM
$LN9@ClickedOnM:
; Line 541
	jmp	SHORT $LN11@ClickedOnM
$LN14@ClickedOnM:
; Line 543
	mov	DWORD PTR _r$[ebp], 0
$LN15@ClickedOnM:
; Line 545
	jmp	$LN8@ClickedOnM
$LN16@ClickedOnM:
; Line 546
	movsx	eax, WORD PTR _rText$[ebp+2]
	cmp	DWORD PTR _y$[ebp], eax
	jl	$LN8@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jg	$LN8@ClickedOnM
; Line 547
	cmp	DWORD PTR _NumItems$[ebp], 0
	jle	$LN6@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp]
	cmp	DWORD PTR _x$[ebp], eax
	jl	$LN6@ClickedOnM
	movsx	eax, WORD PTR _rText$[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jg	$LN6@ClickedOnM
; Line 548
	mov	DWORD PTR _w$17187[ebp], 0
	movsx	eax, WORD PTR _rText$[ebp]
	mov	DWORD PTR _x0$17188[ebp], eax
; Line 550
	movzx	eax, WORD PTR _State$[ebp]
	and	eax, 256				; 00000100H
	je	SHORT $LN5@ClickedOnM
; Line 551
	mov	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPagePosX
	add	esp, 8
	mov	edx, DWORD PTR _x0$17188[ebp]
	sub	edx, eax
	mov	DWORD PTR _x0$17188[ebp], edx
$LN5@ClickedOnM:
; Line 553
	mov	DWORD PTR _i$17186[ebp], 0
	jmp	SHORT $LN4@ClickedOnM
$LN3@ClickedOnM:
	mov	eax, DWORD PTR _i$17186[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17186[ebp], eax
$LN4@ClickedOnM:
	mov	eax, DWORD PTR _i$17186[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN6@ClickedOnM
; Line 554
	mov	eax, DWORD PTR _x0$17188[ebp]
	add	eax, DWORD PTR _w$17187[ebp]
	mov	DWORD PTR _x0$17188[ebp], eax
; Line 555
	mov	eax, DWORD PTR _i$17186[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPageSizeX
	add	esp, 8
	mov	DWORD PTR _w$17187[ebp], eax
; Line 556
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _x0$17188[ebp]
	jl	SHORT $LN1@ClickedOnM
	mov	eax, DWORD PTR _w$17187[ebp]
	mov	ecx, DWORD PTR _x0$17188[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	cmp	DWORD PTR _x$[ebp], edx
	jg	SHORT $LN1@ClickedOnM
; Line 557
	mov	eax, DWORD PTR _i$17186[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE_SelectPage
	add	esp, 8
; Line 558
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 559
	mov	eax, 1
	jmp	SHORT $LN17@ClickedOnM
$LN1@ClickedOnM:
; Line 561
	jmp	SHORT $LN3@ClickedOnM
$LN6@ClickedOnM:
; Line 563
	mov	DWORD PTR _r$[ebp], 0
$LN8@ClickedOnM:
; Line 566
	mov	eax, DWORD PTR _r$[ebp]
$LN17@ClickedOnM:
; Line 567
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@ClickedOnM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@ClickedOnM:
	DD	1
	DD	$LN20@ClickedOnM
$LN20@ClickedOnM:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN19@ClickedOnM
$LN19@ClickedOnM:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
__ClickedOnMultipage ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_CreateEx
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_CreateEx
_TEXT	SEGMENT
_hClient$17405 = -84					; size = 4
_Handles$17404 = -72					; size = 4
_Flags$17403 = -60					; size = 4
_rClient$17402 = -48					; size = 8
_pObj$17401 = -32					; size = 4
_InitState$17400 = -20					; size = 2
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_MULTIPAGE_CreateEx PROC				; COMDAT
; Line 944
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 948
	mov	eax, DWORD PTR _WinFlags$[ebp]
	or	eax, 1
	mov	DWORD PTR _WinFlags$[ebp], eax
; Line 951
	push	56					; 00000038H
	push	OFFSET _MULTIPAGE_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 952
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN6@MULTIPAGE_@5
; Line 959
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _Handles$17404[ebp], eax
; Line 960
	cmp	DWORD PTR _Handles$17404[ebp], 0
	je	$LN5@MULTIPAGE_@5
; Line 962
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17401[ebp], eax
; Line 964
	xor	eax, eax
	mov	WORD PTR _InitState$17400[ebp], ax
; Line 965
	mov	eax, DWORD PTR _ExFlags$[ebp]
	and	eax, 8
	je	SHORT $LN4@MULTIPAGE_@5
; Line 966
	movzx	eax, WORD PTR _InitState$17400[ebp]
	or	eax, 8
	mov	WORD PTR _InitState$17400[ebp], ax
$LN4@MULTIPAGE_@5:
; Line 969
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	ecx, DWORD PTR _Handles$17404[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 971
	movzx	eax, WORD PTR _InitState$17400[ebp]
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$17401[ebp]
	push	edx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 973
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	DWORD PTR [eax+100], 1297435728		; 4d554c50H
; Line 974
	mov	eax, DWORD PTR _pObj$17401[ebp]
	add	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _MULTIPAGE__DefaultProps
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _MULTIPAGE__DefaultProps+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _MULTIPAGE__DefaultProps+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _MULTIPAGE__DefaultProps+12
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _MULTIPAGE__DefaultProps+16
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _MULTIPAGE__DefaultProps+20
	mov	DWORD PTR [eax+20], edx
; Line 975
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	DWORD PTR [eax+64], 65535		; 0000ffffH
; Line 976
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	DWORD PTR [eax+68], 0
; Line 977
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	DWORD PTR [eax+96], OFFSET _MULTIPAGE__DrawTextItemH
; Line 978
	lea	eax, DWORD PTR _rClient$17402[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE__CalcClientRect
	add	esp, 8
; Line 979
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17401[ebp], 0
; Line 980
	mov	DWORD PTR _Flags$17403[ebp], 1922	; 00000782H
; Line 984
	push	0
	push	OFFSET __ClientCallback
	mov	eax, DWORD PTR _Flags$17403[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	movsx	edx, WORD PTR _rClient$17402[ebp+6]
	movsx	eax, WORD PTR _rClient$17402[ebp+2]
	sub	edx, eax
	add	edx, 1
	push	edx
	movsx	ecx, WORD PTR _rClient$17402[ebp+4]
	movsx	edx, WORD PTR _rClient$17402[ebp]
	sub	ecx, edx
	add	ecx, 1
	push	ecx
	movsx	eax, WORD PTR _rClient$17402[ebp+2]
	push	eax
	movsx	ecx, WORD PTR _rClient$17402[ebp]
	push	ecx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hClient$17405[ebp], eax
; Line 985
	cmp	DWORD PTR _hClient$17405[ebp], 0
	je	SHORT $LN3@MULTIPAGE_@5
; Line 986
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17401[ebp], eax
; Line 987
	mov	eax, DWORD PTR _pObj$17401[ebp]
	mov	ecx, DWORD PTR _hClient$17405[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 988
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17401[ebp], 0
$LN3@MULTIPAGE_@5:
; Line 990
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
$LN5@MULTIPAGE_@5:
; Line 993
	jmp	SHORT $LN2@MULTIPAGE_@5
$LN6@MULTIPAGE_@5:
; Line 994
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@MULTIPAGE_@5
	push	OFFSET $SG17414
	call	_GUI_ErrorOut
	add	esp, 4
$LN2@MULTIPAGE_@5:
; Line 996
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 997
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@MULTIPAGE_@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@MULTIPAGE_@5:
	DD	1
	DD	$LN10@MULTIPAGE_@5
$LN10@MULTIPAGE_@5:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN9@MULTIPAGE_@5
$LN9@MULTIPAGE_@5:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_MULTIPAGE_CreateEx ENDP
_TEXT	ENDS
EXTRN	_WM_SetFocus:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ClientCallback
_TEXT	SEGMENT
tv67 = -244						; size = 4
_Key$17273 = -44					; size = 4
_pParent$ = -32						; size = 4
_hParent$ = -20						; size = 4
_hObj$ = -8						; size = 4
_pMsg$ = 8						; size = 4
__ClientCallback PROC					; COMDAT
; Line 680
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 684
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 685
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hParent$[ebp], eax
; Line 687
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv67[ebp], ecx
	mov	edx, DWORD PTR tv67[ebp]
	sub	edx, 12					; 0000000cH
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 11			; 0000000bH
	ja	$LN1@ClientCall
	mov	eax, DWORD PTR tv67[ebp]
	movzx	ecx, BYTE PTR $LN12@ClientCall[eax]
	jmp	DWORD PTR $LN13@ClientCall[ecx*4]
$LN7@ClientCall:
; Line 689
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pParent$[ebp], eax
; Line 690
	mov	eax, DWORD PTR _pParent$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 691
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pParent$[ebp], 0
; Line 692
	call	_GUI_Clear
; Line 693
	jmp	SHORT $LN10@ClientCall
$LN6@ClientCall:
; Line 695
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 696
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_BringToTop
	add	esp, 4
; Line 697
	jmp	SHORT $LN10@ClientCall
$LN5@ClientCall:
; Line 699
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 700
	jmp	SHORT $LN10@ClientCall
$LN4@ClientCall:
; Line 702
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN1@ClientCall
; Line 704
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Key$17273[ebp], edx
; Line 705
	mov	eax, DWORD PTR _Key$17273[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	call	__AddKey
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@ClientCall
; Line 706
	jmp	SHORT $LN10@ClientCall
$LN1@ClientCall:
; Line 711
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN10@ClientCall:
; Line 714
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@ClientCall:
	DD	$LN6@ClientCall
	DD	$LN4@ClientCall
	DD	$LN7@ClientCall
	DD	$LN5@ClientCall
	DD	$LN1@ClientCall
$LN12@ClientCall:
	DB	0
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
__ClientCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __AddKey
_TEXT	SEGMENT
tv64 = -208						; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
__AddKey PROC						; COMDAT
; Line 660
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 662
	mov	DWORD PTR _r$[ebp], 0
; Line 663
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 33			; 00000021H
	je	SHORT $LN2@AddKey
	cmp	DWORD PTR tv64[ebp], 34			; 00000022H
	je	SHORT $LN1@AddKey
	jmp	SHORT $LN3@AddKey
$LN2@AddKey:
; Line 665
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
; Line 666
	mov	DWORD PTR _r$[ebp], 1
; Line 667
	jmp	SHORT $LN3@AddKey
$LN1@AddKey:
; Line 669
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
; Line 670
	mov	DWORD PTR _r$[ebp], 1
$LN3@AddKey:
; Line 673
	mov	eax, DWORD PTR _r$[ebp]
; Line 674
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__AddKey ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __MoveSel
_TEXT	SEGMENT
_hScroll$ = -92						; size = 4
_ScrollState$ = -80					; size = 4
_Selection$ = -68					; size = 4
_NumItems$ = -56					; size = 4
_ScrollPos$ = -44					; size = 4
_NewSel$ = -32						; size = 4
_Sel$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Dir$ = 12						; size = 4
__MoveSel PROC						; COMDAT
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 628
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 629
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetScrollbarH
	add	esp, 4
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 630
	mov	DWORD PTR _ScrollPos$[ebp], -1
	mov	eax, DWORD PTR _ScrollPos$[ebp]
	mov	DWORD PTR _NewSel$[ebp], eax
; Line 631
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 632
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _Selection$[ebp], ecx
; Line 633
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollState$[ebp], ecx
; Line 634
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 635
	mov	eax, DWORD PTR _Selection$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _Sel$[ebp], eax
	jmp	SHORT $LN8@MoveSel
$LN7@MoveSel:
	mov	eax, DWORD PTR _Sel$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _Sel$[ebp], eax
$LN8@MoveSel:
	cmp	DWORD PTR _Sel$[ebp], 0
	jl	SHORT $LN6@MoveSel
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN6@MoveSel
	cmp	DWORD PTR _NewSel$[ebp], -1
	jne	SHORT $LN6@MoveSel
; Line 636
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetEnable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@MoveSel
; Line 637
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	DWORD PTR _NewSel$[ebp], eax
$LN5@MoveSel:
; Line 639
	jmp	SHORT $LN7@MoveSel
$LN6@MoveSel:
; Line 640
	cmp	DWORD PTR _NewSel$[ebp], 0
	jl	SHORT $LN4@MoveSel
; Line 641
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE_SelectPage
	add	esp, 8
; Line 642
	mov	eax, DWORD PTR _NewSel$[ebp]
	mov	DWORD PTR _ScrollPos$[ebp], eax
; Line 643
	jmp	SHORT $LN3@MoveSel
$LN4@MoveSel:
; Line 644
	mov	eax, DWORD PTR _ScrollState$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _ScrollPos$[ebp], eax
$LN3@MoveSel:
; Line 646
	cmp	DWORD PTR _hScroll$[ebp], 0
	je	SHORT $LN9@MoveSel
; Line 647
	cmp	DWORD PTR _ScrollPos$[ebp], 0
	jl	SHORT $LN9@MoveSel
	mov	eax, DWORD PTR _ScrollPos$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN9@MoveSel
; Line 648
	mov	eax, DWORD PTR _ScrollPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_SCROLLBAR_SetValue
	add	esp, 8
$LN9@MoveSel:
; Line 651
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__MoveSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetEnable
_TEXT	SEGMENT
_pPage$17052 = -44					; size = 4
_NumItems$ = -32					; size = 4
_r$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetEnable PROC					; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	DWORD PTR _r$[ebp], 0
; Line 234
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 235
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 236
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN1@GetEnable
; Line 238
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17052[ebp], eax
; Line 239
	mov	eax, DWORD PTR _pPage$17052[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _r$[ebp], ecx
; Line 240
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17052[ebp], 0
$LN1@GetEnable:
; Line 242
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 243
	mov	eax, DWORD PTR _r$[ebp]
; Line 244
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetEnable ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_AddPage
EXTRN	_memcpy:PROC
EXTRN	_GUI_ARRAY_AddItem:PROC
EXTRN	_strlen:PROC
EXTRN	_WM_AttachWindowAt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_AddPage
_TEXT	SEGMENT
_pPage$17455 = -156					; size = 4
_NullByte$17451 = -141					; size = 1
_Page$17450 = -132					; size = 8
_hPageWin$17442 = -116					; size = 4
_i$17433 = -104						; size = 4
_pClient$17432 = -92					; size = 4
_pChild$17431 = -80					; size = 4
_hChild$17430 = -68					; size = 4
_pPage$17429 = -56					; size = 4
_hClient$ = -44						; size = 4
_Handles$ = -32						; size = 4
_NumItems$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hWin$ = 12						; size = 4
_pText$ = 16						; size = 4
_MULTIPAGE_AddPage PROC					; COMDAT
; Line 1009
	push	ebp
	mov	ebp, esp
	sub	esp, 352				; 00000160H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-352]
	mov	ecx, 88					; 00000058H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1014
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN13@MULTIPAGE_@6
; Line 1016
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1017
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _Handles$[ebp], ecx
; Line 1018
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hClient$[ebp], ecx
; Line 1019
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1020
	cmp	DWORD PTR _hWin$[ebp], 0
	jne	$LN11@MULTIPAGE_@6
; Line 1028
	mov	eax, DWORD PTR _hClient$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pClient$17432[ebp], eax
; Line 1029
	mov	eax, DWORD PTR _pClient$17432[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _hChild$17430[ebp], ecx
; Line 1030
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pClient$17432[ebp], 0
$LN10@MULTIPAGE_@6:
; Line 1031
	cmp	DWORD PTR _hChild$17430[ebp], 0
	je	$LN9@MULTIPAGE_@6
	cmp	DWORD PTR _hWin$[ebp], 0
	jne	$LN9@MULTIPAGE_@6
; Line 1032
	mov	eax, DWORD PTR _hChild$17430[ebp]
	mov	DWORD PTR _hWin$[ebp], eax
; Line 1033
	mov	eax, DWORD PTR _Handles$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1034
	mov	DWORD PTR _i$17433[ebp], 0
	jmp	SHORT $LN8@MULTIPAGE_@6
$LN7@MULTIPAGE_@6:
	mov	eax, DWORD PTR _i$17433[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17433[ebp], eax
$LN8@MULTIPAGE_@6:
	mov	eax, DWORD PTR _i$17433[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN6@MULTIPAGE_@6
; Line 1036
	mov	eax, DWORD PTR _i$17433[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17429[ebp], eax
; Line 1037
	mov	eax, DWORD PTR _pPage$17429[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hPageWin$17442[ebp], ecx
; Line 1038
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17429[ebp], 0
; Line 1039
	mov	eax, DWORD PTR _hPageWin$17442[ebp]
	cmp	eax, DWORD PTR _hChild$17430[ebp]
	jne	SHORT $LN5@MULTIPAGE_@6
; Line 1040
	mov	DWORD PTR _hWin$[ebp], 0
; Line 1041
	jmp	SHORT $LN6@MULTIPAGE_@6
$LN5@MULTIPAGE_@6:
; Line 1043
	jmp	SHORT $LN7@MULTIPAGE_@6
$LN6@MULTIPAGE_@6:
; Line 1044
	mov	eax, DWORD PTR _hChild$17430[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pChild$17431[ebp], eax
; Line 1045
	mov	eax, DWORD PTR _pChild$17431[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hChild$17430[ebp], ecx
; Line 1046
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pChild$17431[ebp], 0
; Line 1047
	jmp	$LN10@MULTIPAGE_@6
$LN9@MULTIPAGE_@6:
; Line 1048
	jmp	SHORT $LN4@MULTIPAGE_@6
$LN11@MULTIPAGE_@6:
; Line 1050
	push	0
	push	0
	mov	eax, DWORD PTR _hClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_AttachWindowAt
	add	esp, 16					; 00000010H
$LN4@MULTIPAGE_@6:
; Line 1052
	cmp	DWORD PTR _hWin$[ebp], 0
	je	$LN13@MULTIPAGE_@6
; Line 1054
	mov	BYTE PTR _NullByte$17451[ebp], 0
; Line 1055
	cmp	DWORD PTR _pText$[ebp], 0
	jne	SHORT $LN2@MULTIPAGE_@6
; Line 1056
	lea	eax, DWORD PTR _NullByte$17451[ebp]
	mov	DWORD PTR _pText$[ebp], eax
$LN2@MULTIPAGE_@6:
; Line 1058
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _Page$17450[ebp], eax
; Line 1059
	mov	BYTE PTR _Page$17450[ebp+4], 1
; Line 1060
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _Page$17450[ebp]
	push	ecx
	mov	edx, DWORD PTR _Handles$[ebp]
	push	edx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@MULTIPAGE_@6
; Line 1062
	mov	eax, DWORD PTR _Handles$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1063
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _Handles$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17455[ebp], eax
; Line 1064
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPage$17455[ebp]
	add	edx, 5
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1065
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17455[ebp], 0
$LN1@MULTIPAGE_@6:
; Line 1067
	mov	eax, DWORD PTR _Handles$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1068
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE_SelectPage
	add	esp, 8
$LN13@MULTIPAGE_@6:
; Line 1072
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@MULTIPAGE_@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 352				; 00000160H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@MULTIPAGE_@6:
	DD	2
	DD	$LN17@MULTIPAGE_@6
$LN17@MULTIPAGE_@6:
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN15@MULTIPAGE_@6
	DD	-141					; ffffff73H
	DD	1
	DD	$LN16@MULTIPAGE_@6
$LN16@MULTIPAGE_@6:
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	66					; 00000042H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN15@MULTIPAGE_@6:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
_MULTIPAGE_AddPage ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_DeletePage
EXTRN	_GUI_ARRAY_DeleteItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_DeletePage
_TEXT	SEGMENT
_pPage$17475 = -80					; size = 4
_hWin$17474 = -68					; size = 4
_Add$17473 = -56					; size = 4
_Handles$17469 = -44					; size = 4
_Selection$17468 = -32					; size = 4
_NumItems$17467 = -20					; size = 4
_pObj$17466 = -8					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Delete$ = 16						; size = 4
_MULTIPAGE_DeletePage PROC				; COMDAT
; Line 1078
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1079
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN10@MULTIPAGE_@7
; Line 1084
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN10@MULTIPAGE_@7
; Line 1086
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17466[ebp], eax
; Line 1087
	mov	eax, DWORD PTR _pObj$17466[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _Selection$17468[ebp], ecx
; Line 1088
	mov	eax, DWORD PTR _pObj$17466[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _Handles$17469[ebp], ecx
; Line 1089
	mov	eax, DWORD PTR _pObj$17466[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$17467[ebp], eax
; Line 1090
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17466[ebp], 0
; Line 1091
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$17467[ebp]
	jae	$LN10@MULTIPAGE_@7
; Line 1092
	mov	DWORD PTR _Add$17473[ebp], 0
; Line 1095
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$17469[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17475[ebp], eax
; Line 1096
	mov	eax, DWORD PTR _pPage$17475[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hWin$17474[ebp], ecx
; Line 1097
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17475[ebp], 0
; Line 1099
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Selection$17468[ebp]
	jne	SHORT $LN6@MULTIPAGE_@7
; Line 1100
	mov	eax, DWORD PTR _NumItems$17467[ebp]
	sub	eax, 1
	cmp	DWORD PTR _Index$[ebp], eax
	jne	SHORT $LN5@MULTIPAGE_@7
; Line 1101
	mov	eax, DWORD PTR _Index$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ShowPage
	add	esp, 8
; Line 1102
	mov	DWORD PTR _Add$17473[ebp], -1
; Line 1103
	jmp	SHORT $LN4@MULTIPAGE_@7
$LN5@MULTIPAGE_@7:
; Line 1104
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ShowPage
	add	esp, 8
$LN4@MULTIPAGE_@7:
; Line 1106
	jmp	SHORT $LN3@MULTIPAGE_@7
$LN6@MULTIPAGE_@7:
; Line 1107
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Selection$17468[ebp]
	jae	SHORT $LN3@MULTIPAGE_@7
; Line 1108
	mov	DWORD PTR _Add$17473[ebp], -1
$LN3@MULTIPAGE_@7:
; Line 1111
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17466[ebp], eax
; Line 1112
	mov	eax, DWORD PTR _pObj$17466[ebp]
	mov	ecx, DWORD PTR [eax+64]
	add	ecx, DWORD PTR _Add$17473[ebp]
	mov	edx, DWORD PTR _pObj$17466[ebp]
	mov	DWORD PTR [edx+64], ecx
; Line 1113
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17466[ebp], 0
; Line 1114
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$17469[ebp]
	push	ecx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 1115
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
; Line 1117
	cmp	DWORD PTR _Delete$[ebp], 0
	je	SHORT $LN10@MULTIPAGE_@7
; Line 1118
	mov	eax, DWORD PTR _hWin$17474[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN10@MULTIPAGE_@7:
; Line 1124
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_DeletePage ENDP
_TEXT	ENDS
EXTRN	_WM_HideWindow:PROC
EXTRN	_WM_ShowWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ShowPage
_TEXT	SEGMENT
_pPage$17016 = -104					; size = 4
_Handles$ = -92						; size = 4
_NumItems$ = -80					; size = 4
_pClient$ = -68						; size = 4
_pChild$ = -56						; size = 4
_hClient$ = -44						; size = 4
_hChild$ = -32						; size = 4
_hWin$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__ShowPage PROC						; COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 173
	mov	DWORD PTR _hWin$[ebp], 0
; Line 180
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hClient$[ebp], ecx
; Line 182
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _Handles$[ebp], ecx
; Line 183
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 184
	mov	eax, DWORD PTR _hClient$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pClient$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _Handles$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 186
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN5@ShowPage
; Line 188
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17016[ebp], eax
; Line 189
	mov	eax, DWORD PTR _pPage$17016[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hWin$[ebp], ecx
; Line 190
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17016[ebp], 0
$LN5@ShowPage:
; Line 192
	mov	eax, DWORD PTR _pClient$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _hChild$[ebp], ecx
; Line 193
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pClient$[ebp], 0
$LN4@ShowPage:
; Line 194
	cmp	DWORD PTR _hChild$[ebp], 0
	je	SHORT $LN6@ShowPage
; Line 195
	mov	eax, DWORD PTR _hChild$[ebp]
	cmp	eax, DWORD PTR _hWin$[ebp]
	jne	SHORT $LN2@ShowPage
; Line 196
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM_ShowWindow
	add	esp, 4
; Line 197
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 198
	jmp	SHORT $LN1@ShowPage
$LN2@ShowPage:
; Line 199
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM_HideWindow
	add	esp, 4
$LN1@ShowPage:
; Line 201
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pChild$[ebp], eax
; Line 202
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hChild$[ebp], ecx
; Line 203
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pChild$[ebp], 0
; Line 204
	jmp	SHORT $LN4@ShowPage
$LN6@ShowPage:
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ShowPage ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _MULTIPAGE_SelectPage
_TEXT	SEGMENT
_hPageWin$17503 = -68					; size = 4
_pPage$17502 = -56					; size = 4
_Handles$17494 = -44					; size = 4
_Selection$17493 = -32					; size = 4
_NumItems$17492 = -20					; size = 4
_pObj$17491 = -8					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MULTIPAGE_SelectPage PROC				; COMDAT
; Line 1130
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1131
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@MULTIPAGE_@8
; Line 1136
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@MULTIPAGE_@8
; Line 1138
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17491[ebp], eax
; Line 1139
	mov	eax, DWORD PTR _pObj$17491[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _Selection$17493[ebp], ecx
; Line 1140
	mov	eax, DWORD PTR _pObj$17491[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _Handles$17494[ebp], ecx
; Line 1141
	mov	eax, DWORD PTR _pObj$17491[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$17492[ebp], eax
; Line 1142
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17491[ebp], 0
; Line 1143
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$17492[ebp]
	jae	$LN7@MULTIPAGE_@8
; Line 1144
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetEnable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN7@MULTIPAGE_@8
; Line 1145
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Selection$17493[ebp]
	je	SHORT $LN2@MULTIPAGE_@8
; Line 1147
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ShowPage
	add	esp, 8
; Line 1148
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17491[ebp], eax
; Line 1149
	mov	eax, DWORD PTR _pObj$17491[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 1150
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17491[ebp], 0
; Line 1151
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
; Line 1152
	jmp	SHORT $LN7@MULTIPAGE_@8
$LN2@MULTIPAGE_@8:
; Line 1156
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$17494[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17502[ebp], eax
; Line 1157
	mov	eax, DWORD PTR _pPage$17502[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hPageWin$17503[ebp], ecx
; Line 1158
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17502[ebp], 0
; Line 1159
	mov	eax, DWORD PTR _hPageWin$17503[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
$LN7@MULTIPAGE_@8:
; Line 1166
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_SelectPage ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_DisablePage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_DisablePage
_TEXT	SEGMENT
_pObj$17512 = -8					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MULTIPAGE_DisablePage PROC				; COMDAT
; Line 1172
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1173
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@MULTIPAGE_@9
; Line 1176
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17512[ebp], eax
; Line 1177
	cmp	DWORD PTR _pObj$17512[ebp], 0
	je	SHORT $LN1@MULTIPAGE_@9
; Line 1178
	push	0
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$17512[ebp]
	push	ecx
	call	__SetEnable
	add	esp, 12					; 0000000cH
; Line 1179
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@MULTIPAGE_@9:
; Line 1181
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17512[ebp], 0
$LN3@MULTIPAGE_@9:
; Line 1184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_DisablePage ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetEnable
_TEXT	SEGMENT
_pPage$17037 = -20					; size = 4
_NumItems$ = -8						; size = 4
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_State$ = 16						; size = 4
__SetEnable PROC					; COMDAT
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 214
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN4@SetEnable
; Line 216
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17037[ebp], eax
; Line 217
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN2@SetEnable
; Line 218
	mov	eax, DWORD PTR _pPage$17037[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	or	ecx, 1
	mov	edx, DWORD PTR _pPage$17037[ebp]
	mov	BYTE PTR [edx+4], cl
; Line 219
	jmp	SHORT $LN1@SetEnable
$LN2@SetEnable:
; Line 220
	mov	eax, DWORD PTR _pPage$17037[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _pPage$17037[ebp]
	mov	BYTE PTR [edx+4], cl
$LN1@SetEnable:
; Line 222
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17037[ebp], 0
$LN4@SetEnable:
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetEnable ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_EnablePage
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_EnablePage
_TEXT	SEGMENT
_pObj$17521 = -8					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MULTIPAGE_EnablePage PROC				; COMDAT
; Line 1190
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1191
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@MULTIPAGE_@10
; Line 1194
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17521[ebp], eax
; Line 1195
	cmp	DWORD PTR _pObj$17521[ebp], 0
	je	SHORT $LN1@MULTIPAGE_@10
; Line 1196
	push	1
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$17521[ebp]
	push	ecx
	call	__SetEnable
	add	esp, 12					; 0000000cH
; Line 1197
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@MULTIPAGE_@10:
; Line 1199
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17521[ebp], 0
$LN3@MULTIPAGE_@10:
; Line 1202
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_EnablePage ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetText
EXTRN	_GUI_ARRAY_SetItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetText
_TEXT	SEGMENT
_Page$17538 = -60					; size = 8
_pPage$17537 = -44					; size = 4
_Handles$ = -32						; size = 4
_NumItems$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pText$ = 12						; size = 4
_Index$ = 16						; size = 4
_MULTIPAGE_SetText PROC					; COMDAT
; Line 1214
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1218
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN4@MULTIPAGE_@11
	cmp	DWORD PTR _pText$[ebp], 0
	je	$LN4@MULTIPAGE_@11
; Line 1220
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1221
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _Handles$[ebp], ecx
; Line 1222
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1223
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1224
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN4@MULTIPAGE_@11
; Line 1227
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17537[ebp], eax
; Line 1228
	mov	eax, DWORD PTR _pPage$17537[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Page$17538[ebp], ecx
; Line 1229
	mov	eax, DWORD PTR _pPage$17537[ebp]
	mov	cl, BYTE PTR [eax+4]
	mov	BYTE PTR _Page$17538[ebp+4], cl
; Line 1230
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17537[ebp], 0
; Line 1231
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 8
	push	eax
	lea	ecx, DWORD PTR _Page$17538[ebp]
	push	ecx
	mov	edx, DWORD PTR _Index$[ebp]
	push	edx
	mov	eax, DWORD PTR _Handles$[ebp]
	push	eax
	call	_GUI_ARRAY_SetItem
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@MULTIPAGE_@11
; Line 1232
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Handles$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17537[ebp], eax
; Line 1233
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPage$17537[ebp]
	add	edx, 5
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 1234
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17537[ebp], 0
; Line 1235
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
$LN4@MULTIPAGE_@11:
; Line 1240
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@MULTIPAGE_@11
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@MULTIPAGE_@11:
	DD	1
	DD	$LN7@MULTIPAGE_@11
$LN7@MULTIPAGE_@11:
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN6@MULTIPAGE_@11
$LN6@MULTIPAGE_@11:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
_MULTIPAGE_SetText ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetBkColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetBkColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Color$ = 12						; size = 4
_Index$ = 16						; size = 4
_MULTIPAGE_SetBkColor PROC				; COMDAT
; Line 1246
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1248
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@12
	cmp	DWORD PTR _Index$[ebp], 2
	jge	SHORT $LN2@MULTIPAGE_@12
; Line 1250
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1251
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+80], edx
; Line 1252
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1253
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN2@MULTIPAGE_@12:
; Line 1256
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_SetBkColor ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetTextColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetTextColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Color$ = 12						; size = 4
_Index$ = 16						; size = 4
_MULTIPAGE_SetTextColor PROC				; COMDAT
; Line 1262
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1264
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@13
	cmp	DWORD PTR _Index$[ebp], 2
	jge	SHORT $LN2@MULTIPAGE_@13
; Line 1266
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1267
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+88], edx
; Line 1268
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1269
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN2@MULTIPAGE_@13:
; Line 1272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_SetTextColor ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetFont
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pFont$ = 12						; size = 4
_MULTIPAGE_SetFont PROC					; COMDAT
; Line 1278
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1280
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@14
	cmp	DWORD PTR _pFont$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@14
; Line 1282
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1283
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 1284
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1285
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
$LN2@MULTIPAGE_@14:
; Line 1288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_SetFont ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetAlign
EXTRN	_WM_MoveTo:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetAlign
_TEXT	SEGMENT
_rClient$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Align$ = 12						; size = 4
_MULTIPAGE_SetAlign PROC				; COMDAT
; Line 1294
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1297
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@15
; Line 1299
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1300
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Align$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 1301
	lea	eax, DWORD PTR _rClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_MULTIPAGE__CalcClientRect
	add	esp, 8
; Line 1303
	movsx	eax, WORD PTR _rClient$[ebp+2]
	mov	ecx, DWORD PTR _pObj$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	add	eax, edx
	push	eax
	movsx	eax, WORD PTR _rClient$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	movsx	edx, WORD PTR [ecx]
	add	eax, edx
	push	eax
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_WM_MoveTo
	add	esp, 12					; 0000000cH
; Line 1304
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1305
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE__UpdatePositions
	add	esp, 4
$LN2@MULTIPAGE_@15:
; Line 1308
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@MULTIPAGE_@15
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@MULTIPAGE_@15:
	DD	1
	DD	$LN5@MULTIPAGE_@15
$LN5@MULTIPAGE_@15:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN4@MULTIPAGE_@15
$LN4@MULTIPAGE_@15:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_MULTIPAGE_SetAlign ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_GetSelection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_GetSelection
_TEXT	SEGMENT
_pObj$17589 = -20					; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_MULTIPAGE_GetSelection PROC				; COMDAT
; Line 1314
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1315
	mov	DWORD PTR _r$[ebp], 0
; Line 1316
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@MULTIPAGE_@16
; Line 1319
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17589[ebp], eax
; Line 1320
	mov	eax, DWORD PTR _pObj$17589[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1321
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17589[ebp], 0
$LN1@MULTIPAGE_@16:
; Line 1324
	mov	eax, DWORD PTR _r$[ebp]
; Line 1325
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_GetSelection ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_GetWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_GetWindow
_TEXT	SEGMENT
_pPage$17601 = -44					; size = 4
_pObj$17599 = -32					; size = 4
_NumItems$ = -20					; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MULTIPAGE_GetWindow PROC				; COMDAT
; Line 1331
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1332
	mov	DWORD PTR _r$[ebp], 0
; Line 1334
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@MULTIPAGE_@17
; Line 1337
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_MULTIPAGE_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17599[ebp], eax
; Line 1338
	mov	eax, DWORD PTR _pObj$17599[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1339
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	SHORT $LN1@MULTIPAGE_@17
; Line 1341
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$17599[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pPage$17601[ebp], eax
; Line 1342
	mov	eax, DWORD PTR _pPage$17601[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1343
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPage$17601[ebp], 0
$LN1@MULTIPAGE_@17:
; Line 1345
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17599[ebp], 0
$LN2@MULTIPAGE_@17:
; Line 1348
	mov	eax, DWORD PTR _r$[ebp]
; Line 1349
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_GetWindow ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_IsPageEnabled
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_IsPageEnabled
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_MULTIPAGE_IsPageEnabled PROC				; COMDAT
; Line 1355
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1356
	mov	DWORD PTR _r$[ebp], 0
; Line 1357
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@MULTIPAGE_@18
; Line 1359
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetEnable
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
$LN1@MULTIPAGE_@18:
; Line 1362
	mov	eax, DWORD PTR _r$[ebp]
; Line 1363
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_IsPageEnabled ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_SetEffectColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_SetEffectColor
_TEXT	SEGMENT
_Index$ = 8						; size = 4
_Color$ = 12						; size = 4
_MULTIPAGE_SetEffectColor PROC				; COMDAT
; Line 1369
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1370
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN2@MULTIPAGE_@19
; Line 1371
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR _MULTIPAGE__aEffectColor[eax*4], ecx
$LN2@MULTIPAGE_@19:
; Line 1373
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_SetEffectColor ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_GetEffectColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_GetEffectColor
_TEXT	SEGMENT
_Color$ = -8						; size = 4
_Index$ = 8						; size = 4
_MULTIPAGE_GetEffectColor PROC				; COMDAT
; Line 1379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1381
	mov	DWORD PTR _Color$[ebp], 0
; Line 1382
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN1@MULTIPAGE_@20
; Line 1383
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _MULTIPAGE__aEffectColor[eax*4]
	mov	DWORD PTR _Color$[ebp], ecx
$LN1@MULTIPAGE_@20:
; Line 1385
	mov	eax, DWORD PTR _Color$[ebp]
; Line 1386
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_GetEffectColor ENDP
_TEXT	ENDS
PUBLIC	_MULTIPAGE_GetNumEffectColors
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _MULTIPAGE_GetNumEffectColors
_TEXT	SEGMENT
_MULTIPAGE_GetNumEffectColors PROC			; COMDAT
; Line 1392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1393
	mov	eax, 2
; Line 1394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_MULTIPAGE_GetNumEffectColors ENDP
_TEXT	ENDS
END
