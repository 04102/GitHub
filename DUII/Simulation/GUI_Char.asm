; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Char.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_GetFontDistY
PUBLIC	_GUI_DispNextLine
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_char.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispNextLine
_TEXT	SEGMENT
_GUI_DispNextLine PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	call	_GUI_GetFontDistY
	movsx	ecx, WORD PTR _GUI_Context+36
	add	ecx, eax
	mov	WORD PTR _GUI_Context+36, cx
; Line 38
	mov	ax, WORD PTR _GUI_Context+32
	mov	WORD PTR _GUI_Context+34, ax
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispNextLine ENDP
_TEXT	ENDS
PUBLIC	_GL_DispChar
EXTRN	_GUI_pfDispCharStyle:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DispChar
_TEXT	SEGMENT
_c$ = 8							; size = 2
_GL_DispChar PROC					; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN4@GL_DispCha
; Line 49
	call	_GUI_DispNextLine
; Line 50
	jmp	SHORT $LN5@GL_DispCha
$LN4@GL_DispCha:
; Line 51
	movzx	eax, WORD PTR _c$[ebp]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN5@GL_DispCha
; Line 53
	mov	esi, esp
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 54
	cmp	DWORD PTR _GUI_pfDispCharStyle, 0
	je	SHORT $LN5@GL_DispCha
; Line 55
	mov	esi, esp
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	call	DWORD PTR _GUI_pfDispCharStyle
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@GL_DispCha:
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DispChar ENDP
_TEXT	ENDS
PUBLIC	_GUI_GetYAdjust
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GetYAdjust
_TEXT	SEGMENT
tv66 = -208						; size = 4
_r$ = -8						; size = 4
_GUI_GetYAdjust PROC					; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	mov	DWORD PTR _r$[ebp], 0
; Line 74
	movsx	eax, WORD PTR _GUI_Context+44
	and	eax, 12					; 0000000cH
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 4
	je	SHORT $LN3@GUI_GetYAd
	cmp	DWORD PTR tv66[ebp], 8
	je	SHORT $LN1@GUI_GetYAd
	cmp	DWORD PTR tv66[ebp], 12			; 0000000cH
	je	SHORT $LN2@GUI_GetYAd
	jmp	SHORT $LN4@GUI_GetYAd
$LN3@GUI_GetYAd:
; Line 76
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+24]
	sub	ecx, 1
	mov	DWORD PTR _r$[ebp], ecx
; Line 77
	jmp	SHORT $LN4@GUI_GetYAd
$LN2@GUI_GetYAd:
; Line 79
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [eax+24]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 80
	jmp	SHORT $LN4@GUI_GetYAd
$LN1@GUI_GetYAd:
; Line 82
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [eax+24]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _r$[ebp], eax
$LN4@GUI_GetYAd:
; Line 85
	mov	eax, DWORD PTR _r$[ebp]
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetYAdjust ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GUI_GetFontDistY
_TEXT	SEGMENT
_r$ = -8						; size = 4
_GUI_GetFontDistY PROC					; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+25]
	mov	DWORD PTR _r$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _r$[ebp]
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetFontDistY ENDP
_TEXT	ENDS
PUBLIC	_GUI_GetCharDistX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GetCharDistX
_TEXT	SEGMENT
_r$ = -8						; size = 4
_c$ = 8							; size = 2
_GUI_GetCharDistX PROC					; COMDAT
; Line 104
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	esi, esp
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
; Line 109
	mov	eax, DWORD PTR _r$[ebp]
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetCharDistX ENDP
_TEXT	ENDS
END
