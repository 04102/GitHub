; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\RADIO_SetGroupId.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_RADIO_SetGroupId
EXTRN	_RADIO__SetValue:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_RADIO__pfHandleSetValue:DWORD
EXTRN	_WM__GetFirstSibling:PROC
EXTRN	_RADIO_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\radio_setgroupid.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _RADIO_SetGroupId
_TEXT	SEGMENT
_hWin$11848 = -44					; size = 4
_hFirst$11844 = -32					; size = 4
_OldGroupId$11842 = -17					; size = 1
_pObj$11841 = -8					; size = 4
_hObj$ = 8						; size = 4
_NewGroupId$ = 12					; size = 1
_RADIO_SetGroupId PROC					; COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN10@RADIO_SetG
; Line 151
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11841[ebp], eax
; Line 152
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	cl, BYTE PTR [eax+106]
	mov	BYTE PTR _OldGroupId$11842[ebp], cl
; Line 153
	movzx	eax, BYTE PTR _NewGroupId$[ebp]
	movzx	ecx, BYTE PTR _OldGroupId$11842[ebp]
	cmp	eax, ecx
	je	$LN8@RADIO_SetG
; Line 155
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__GetFirstSibling
	add	esp, 4
	mov	DWORD PTR _hFirst$11844[ebp], eax
; Line 157
	movzx	eax, BYTE PTR _NewGroupId$[ebp]
	test	eax, eax
	je	SHORT $LN7@RADIO_SetG
	cmp	DWORD PTR _RADIO__pfHandleSetValue, 0
	jne	SHORT $LN7@RADIO_SetG
; Line 158
	mov	DWORD PTR _RADIO__pfHandleSetValue, OFFSET __HandleSetValue
$LN7@RADIO_SetG:
; Line 162
	movzx	eax, BYTE PTR _OldGroupId$11842[ebp]
	test	eax, eax
	je	SHORT $LN6@RADIO_SetG
	mov	eax, DWORD PTR _pObj$11841[ebp]
	movsx	ecx, WORD PTR [eax+100]
	test	ecx, ecx
	jl	SHORT $LN6@RADIO_SetG
; Line 164
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	BYTE PTR [eax+106], 0
; Line 166
	movzx	eax, BYTE PTR _OldGroupId$11842[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFirst$11844[ebp]
	push	ecx
	call	__GetNextInGroup
	add	esp, 8
	mov	DWORD PTR _hWin$11848[ebp], eax
; Line 167
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
; Line 168
	cmp	DWORD PTR _hWin$11848[ebp], 0
	je	SHORT $LN5@RADIO_SetG
; Line 169
	push	0
	mov	eax, DWORD PTR _hWin$11848[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
$LN5@RADIO_SetG:
; Line 171
	jmp	SHORT $LN4@RADIO_SetG
$LN6@RADIO_SetG:
; Line 172
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
$LN4@RADIO_SetG:
; Line 175
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11841[ebp], eax
; Line 176
	movzx	eax, BYTE PTR _NewGroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFirst$11844[ebp]
	push	ecx
	call	__GetNextInGroup
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@RADIO_SetG
; Line 178
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
; Line 179
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
; Line 180
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11841[ebp], eax
	jmp	SHORT $LN2@RADIO_SetG
$LN3@RADIO_SetG:
; Line 181
	mov	eax, DWORD PTR _pObj$11841[ebp]
	movsx	ecx, WORD PTR [eax+100]
	test	ecx, ecx
	jge	SHORT $LN2@RADIO_SetG
; Line 183
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
; Line 184
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
; Line 185
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11841[ebp], eax
$LN2@RADIO_SetG:
; Line 188
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	cl, BYTE PTR _NewGroupId$[ebp]
	mov	BYTE PTR [eax+106], cl
$LN8@RADIO_SetG:
; Line 190
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
$LN10@RADIO_SetG:
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RADIO_SetGroupId ENDP
_TEXT	ENDS
EXTRN	_WM_IsEnabled:PROC
EXTRN	_WM_GetNextSibling:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetNextInGroup
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_GroupId$ = 12						; size = 1
__GetNextInGroup PROC					; COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 69
	jmp	SHORT $LN5@GetNextInG
$LN4@GetNextInG:
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetNextSibling
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
$LN5@GetNextInG:
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@GetNextInG
; Line 70
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__IsInGroup
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@GetNextInG
; Line 71
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@GetNextInG
; Line 72
	mov	eax, DWORD PTR _hWin$[ebp]
	jmp	SHORT $LN6@GetNextInG
$LN2@GetNextInG:
; Line 75
	jmp	SHORT $LN4@GetNextInG
$LN3@GetNextInG:
; Line 76
	xor	eax, eax
$LN6@GetNextInG:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetNextInGroup ENDP
_TEXT	ENDS
EXTRN	_WM__SendMessage:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __IsInGroup
_TEXT	SEGMENT
_Msg$11776 = -20					; size = 16
_hWin$ = 8						; size = 4
_GroupId$ = 12						; size = 1
__IsInGroup PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	movzx	eax, BYTE PTR _GroupId$[ebp]
	test	eax, eax
	je	SHORT $LN1@IsInGroup
; Line 42
	mov	DWORD PTR _Msg$11776[ebp], 43		; 0000002bH
; Line 43
	lea	eax, DWORD PTR _Msg$11776[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 44
	movzx	eax, BYTE PTR _GroupId$[ebp]
	xor	ecx, ecx
	cmp	DWORD PTR _Msg$11776[ebp+12], eax
	sete	cl
	mov	eax, ecx
	jmp	SHORT $LN2@IsInGroup
$LN1@IsInGroup:
; Line 46
	xor	eax, eax
$LN2@IsInGroup:
; Line 47
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@IsInGroup
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@IsInGroup:
	DD	1
	DD	$LN5@IsInGroup
$LN5@IsInGroup:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN4@IsInGroup
$LN4@IsInGroup:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
__IsInGroup ENDP
_TEXT	ENDS
EXTRN	_WM_SetFocus:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __HandleSetValue
_TEXT	SEGMENT
_hWin$11831 = -80					; size = 4
_hWin$11827 = -68					; size = 4
_Sel$ = -56						; size = 2
_GroupId$ = -41						; size = 1
_NumItems$ = -32					; size = 2
_hNext$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_v$ = 12						; size = 4
__HandleSetValue PROC					; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 109
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hNext$[ebp], ecx
; Line 110
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+106]
	mov	BYTE PTR _GroupId$[ebp], cl
; Line 111
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+100]
	mov	WORD PTR _Sel$[ebp], cx
; Line 112
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+104]
	mov	WORD PTR _NumItems$[ebp], cx
; Line 113
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 114
	cmp	DWORD PTR _v$[ebp], 0
	jge	SHORT $LN7@HandleSetV
; Line 115
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetPrevInGroup
	add	esp, 8
	mov	DWORD PTR _hWin$11827[ebp], eax
; Line 116
	cmp	DWORD PTR _hWin$11827[ebp], 0
	je	SHORT $LN6@HandleSetV
; Line 117
	mov	eax, DWORD PTR _hWin$11827[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 118
	push	32767					; 00007fffH
	mov	eax, DWORD PTR _hWin$11827[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
; Line 119
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
$LN6@HandleSetV:
; Line 120
	jmp	SHORT $LN8@HandleSetV
$LN7@HandleSetV:
; Line 121
	movzx	eax, WORD PTR _NumItems$[ebp]
	cmp	DWORD PTR _v$[ebp], eax
	jl	SHORT $LN4@HandleSetV
; Line 122
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hNext$[ebp]
	push	ecx
	call	__GetNextInGroup
	add	esp, 8
	mov	DWORD PTR _hWin$11831[ebp], eax
; Line 123
	cmp	DWORD PTR _hWin$11831[ebp], 0
	je	SHORT $LN3@HandleSetV
; Line 124
	mov	eax, DWORD PTR _hWin$11831[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 125
	push	0
	mov	eax, DWORD PTR _hWin$11831[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
; Line 126
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
$LN3@HandleSetV:
; Line 128
	jmp	SHORT $LN8@HandleSetV
$LN4@HandleSetV:
; Line 129
	movsx	eax, WORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _v$[ebp]
	je	SHORT $LN8@HandleSetV
; Line 130
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ClearSelection
	add	esp, 8
; Line 131
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_RADIO__SetValue
	add	esp, 8
$LN8@HandleSetV:
; Line 134
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__HandleSetValue ENDP
_TEXT	ENDS
EXTRN	_WM__GetPrevSibling:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetPrevInGroup
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_GroupId$ = 12						; size = 1
__GetPrevInGroup PROC					; COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM__GetPrevSibling
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
	jmp	SHORT $LN5@GetPrevInG
$LN4@GetPrevInG:
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM__GetPrevSibling
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
$LN5@GetPrevInG:
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@GetPrevInG
; Line 55
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__IsInGroup
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@GetPrevInG
; Line 56
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@GetPrevInG
; Line 57
	mov	eax, DWORD PTR _hWin$[ebp]
	jmp	SHORT $LN6@GetPrevInG
$LN2@GetPrevInG:
; Line 60
	jmp	SHORT $LN4@GetPrevInG
$LN3@GetPrevInG:
; Line 61
	xor	eax, eax
$LN6@GetPrevInG:
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevInGroup ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ClearSelection
_TEXT	SEGMENT
_pWin$ = -20						; size = 4
_hWin$ = -8						; size = 4
_hObj$ = 8						; size = 4
_GroupId$ = 12						; size = 1
__ClearSelection PROC					; COMDAT
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 86
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__GetFirstSibling
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
$LN4@ClearSelec:
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN5@ClearSelec
; Line 87
	mov	eax, DWORD PTR _hWin$[ebp]
	cmp	eax, DWORD PTR _hObj$[ebp]
	je	SHORT $LN2@ClearSelec
; Line 88
	movzx	eax, BYTE PTR _GroupId$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__IsInGroup
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@ClearSelec
; Line 89
	push	-1
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_RADIO__SetValue
	add	esp, 8
$LN2@ClearSelec:
; Line 92
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 93
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hWin$[ebp], ecx
; Line 94
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWin$[ebp], 0
; Line 95
	jmp	SHORT $LN4@ClearSelec
$LN5@ClearSelec:
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ClearSelection ENDP
_TEXT	ENDS
END
