; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\ConvertColor\GUICC_84444.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_API_ColorConv_84444
CONST	SEGMENT
_LCD_API_ColorConv_84444 DD FLAT:__Color2Index_84444
	DD	FLAT:__Index2Color_84444
	DD	FLAT:__GetIndexMask_84444
CONST	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\convertcolor\guicc_84444.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Color2Index_84444
_TEXT	SEGMENT
_Alpha$ = -41						; size = 1
_b$ = -29						; size = 1
_g$ = -17						; size = 1
_r$ = -5						; size = 1
_Color$ = 8						; size = 4
__Color2Index_84444 PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 255				; 000000ffH
	mov	BYTE PTR _r$[ebp], al
; Line 40
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	mov	BYTE PTR _g$[ebp], al
; Line 41
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16					; 00000010H
	mov	BYTE PTR _b$[ebp], al
; Line 43
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, -16777216				; ff000000H
	shr	eax, 24					; 00000018H
	shr	eax, 6
	mov	ecx, 3
	sub	ecx, eax
	mov	BYTE PTR _Alpha$[ebp], cl
; Line 44
	movzx	eax, BYTE PTR _Alpha$[ebp]
	test	eax, eax
	jne	SHORT $LN2@Color2Inde
; Line 45
	xor	eax, eax
	jmp	SHORT $LN3@Color2Inde
$LN2@Color2Inde:
; Line 47
	movzx	eax, BYTE PTR _r$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@Color2Inde
	movzx	eax, BYTE PTR _g$[ebp]
	movzx	ecx, BYTE PTR _b$[ebp]
	cmp	eax, ecx
	jne	SHORT $LN1@Color2Inde
; Line 49
	movzx	eax, BYTE PTR _Alpha$[ebp]
	shl	eax, 4
	movzx	ecx, BYTE PTR _r$[ebp]
	sar	ecx, 4
	add	eax, ecx
	jmp	SHORT $LN3@Color2Inde
$LN1@Color2Inde:
; Line 52
	movzx	eax, BYTE PTR _r$[ebp]
	cdq
	and	edx, 63					; 0000003fH
	add	eax, edx
	sar	eax, 6
	mov	BYTE PTR _r$[ebp], al
; Line 53
	movzx	eax, BYTE PTR _g$[ebp]
	cdq
	and	edx, 63					; 0000003fH
	add	eax, edx
	sar	eax, 6
	mov	BYTE PTR _g$[ebp], al
; Line 54
	movzx	eax, BYTE PTR _b$[ebp]
	cdq
	and	edx, 63					; 0000003fH
	add	eax, edx
	sar	eax, 6
	mov	BYTE PTR _b$[ebp], al
; Line 56
	movzx	eax, BYTE PTR _r$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 2
	or	eax, ecx
	movzx	edx, BYTE PTR _b$[ebp]
	shl	edx, 4
	or	eax, edx
	movzx	ecx, BYTE PTR _Alpha$[ebp]
	shl	ecx, 6
	or	eax, ecx
$LN3@Color2Inde:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Color2Index_84444 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Index2Color_84444
_TEXT	SEGMENT
_Alpha$ = -41						; size = 1
_b$ = -29						; size = 1
_g$ = -17						; size = 1
_r$ = -5						; size = 1
_Index$ = 8						; size = 4
__Index2Color_84444 PROC				; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	cmp	DWORD PTR _Index$[ebp], 64		; 00000040H
	jae	SHORT $LN2@Index2Colo
; Line 68
	cmp	DWORD PTR _Index$[ebp], 16		; 00000010H
	jae	SHORT $LN1@Index2Colo
; Line 69
	mov	eax, -16777216				; ff000000H
	jmp	$LN3@Index2Colo
$LN1@Index2Colo:
; Line 72
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 48					; 00000030H
	shr	eax, 4
	mov	ecx, 3
	sub	ecx, eax
	imul	ecx, 85					; 00000055H
	mov	BYTE PTR _Alpha$[ebp], cl
; Line 73
	movzx	eax, BYTE PTR _Alpha$[ebp]
	shl	eax, 24					; 00000018H
	mov	ecx, DWORD PTR _Index$[ebp]
	and	ecx, 15					; 0000000fH
	imul	ecx, 1118481				; 00111111H
	or	eax, ecx
	jmp	SHORT $LN3@Index2Colo
$LN2@Index2Colo:
; Line 76
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 6
	mov	ecx, 3
	sub	ecx, eax
	imul	ecx, 85					; 00000055H
	mov	BYTE PTR _Alpha$[ebp], cl
; Line 78
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 3
	imul	eax, 85					; 00000055H
	mov	BYTE PTR _r$[ebp], al
; Line 79
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 12					; 0000000cH
	shr	eax, 2
	imul	eax, 85					; 00000055H
	mov	BYTE PTR _g$[ebp], al
; Line 80
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 48					; 00000030H
	shr	eax, 4
	imul	eax, 85					; 00000055H
	mov	BYTE PTR _b$[ebp], al
; Line 82
	movzx	eax, BYTE PTR _r$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	movzx	ecx, BYTE PTR _Alpha$[ebp]
	shl	ecx, 24					; 00000018H
	or	eax, ecx
$LN3@Index2Colo:
; Line 83
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Index2Color_84444 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetIndexMask_84444
_TEXT	SEGMENT
__GetIndexMask_84444 PROC				; COMDAT
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 90
	mov	eax, 255				; 000000ffH
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetIndexMask_84444 ENDP
_TEXT	ENDS
END
