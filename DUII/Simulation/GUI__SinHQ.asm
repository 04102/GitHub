; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__SinHQ.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
__aSin	DD	00H
	DD	0478H
	DD	08efH
	DD	0d66H
	DD	011dcH
	DD	01650H
	DD	01ac2H
	DD	01f33H
	DD	023a1H
	DD	0280cH
	DD	02c74H
	DD	030d9H
	DD	0353aH
	DD	03996H
	DD	03defH
	DD	04242H
	DD	04690H
	DD	04ad9H
	DD	04f1cH
	DD	05358H
	DD	0578fH
	DD	05bbeH
	DD	05fe6H
	DD	06407H
	DD	06820H
	DD	06c31H
	DD	07039H
	DD	07439H
	DD	0782fH
	DD	07c1cH
	DD	08000H
	DD	083daH
	DD	087a9H
	DD	08b6dH
	DD	08f27H
	DD	092d6H
	DD	09679H
	DD	09a11H
	DD	09d9cH
	DD	0a11bH
	DD	0a48eH
	DD	0a7f3H
	DD	0ab4cH
	DD	0ae97H
	DD	0b1d5H
	DD	0b505H
	DD	0b827H
	DD	0bb3aH
	DD	0be3fH
	DD	0c135H
	DD	0c41bH
	DD	0c6f3H
	DD	0c9bbH
	DD	0cc73H
	DD	0cf1cH
	DD	0d1b4H
	DD	0d43cH
	DD	0d6b3H
	DD	0d91aH
	DD	0db6fH
	DD	0ddb4H
	DD	0dfe7H
	DD	0e209H
	DD	0e419H
	DD	0e617H
	DD	0e804H
	DD	0e9deH
	DD	0eba6H
	DD	0ed5cH
	DD	0eeffH
	DD	0f090H
	DD	0f20eH
	DD	0f378H
	DD	0f4d0H
	DD	0f615H
	DD	0f747H
	DD	0f865H
	DD	0f970H
	DD	0fa68H
	DD	0fb4cH
	DD	0fc1cH
	DD	0fcd9H
	DD	0fd82H
	DD	0fe18H
	DD	0fe99H
	DD	0ff07H
	DD	0ff60H
	DD	0ffa6H
	DD	0ffd8H
	DD	0fff6H
	DD	010000H
CONST	ENDS
PUBLIC	_GUI__SinHQ
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__sinhq.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__SinHQ
_TEXT	SEGMENT
tv89 = -244						; size = 4
_Remain$ = -44						; size = 4
_Mul$ = -32						; size = 4
_Index$ = -20						; size = 4
_r$ = -8						; size = 4
_Ang1000$ = 8						; size = 4
_GUI__SinHQ PROC					; COMDAT
; Line 86
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 92
	cmp	DWORD PTR _Ang1000$[ebp], 0
	jge	SHORT $LN4@GUI__SinHQ
; Line 93
	mov	DWORD PTR _Mul$[ebp], -1
; Line 94
	mov	eax, DWORD PTR _Ang1000$[ebp]
	neg	eax
	mov	DWORD PTR _Ang1000$[ebp], eax
; Line 95
	jmp	SHORT $LN3@GUI__SinHQ
$LN4@GUI__SinHQ:
; Line 96
	mov	DWORD PTR _Mul$[ebp], 1
$LN3@GUI__SinHQ:
; Line 98
	mov	eax, DWORD PTR _Ang1000$[ebp]
	cdq
	mov	ecx, 360000				; 00057e40H
	idiv	ecx
	mov	DWORD PTR _Ang1000$[ebp], edx
; Line 99
	cmp	DWORD PTR _Ang1000$[ebp], 180000	; 0002bf20H
	jle	SHORT $LN2@GUI__SinHQ
; Line 100
	mov	eax, DWORD PTR _Mul$[ebp]
	neg	eax
	mov	DWORD PTR _Mul$[ebp], eax
; Line 101
	mov	eax, DWORD PTR _Ang1000$[ebp]
	sub	eax, 180000				; 0002bf20H
	mov	DWORD PTR _Ang1000$[ebp], eax
$LN2@GUI__SinHQ:
; Line 103
	cmp	DWORD PTR _Ang1000$[ebp], 90000		; 00015f90H
	jle	SHORT $LN1@GUI__SinHQ
; Line 104
	mov	eax, DWORD PTR _Ang1000$[ebp]
	sub	eax, 90000				; 00015f90H
	mov	ecx, 90000				; 00015f90H
	sub	ecx, eax
	mov	DWORD PTR _Ang1000$[ebp], ecx
$LN1@GUI__SinHQ:
; Line 106
	mov	eax, DWORD PTR _Ang1000$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _Index$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _Index$[ebp]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _Ang1000$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Remain$[ebp], ecx
; Line 108
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _Index$[ebp]
	mov	eax, DWORD PTR __aSin[eax*4+4]
	sub	eax, DWORD PTR __aSin[ecx*4]
	imul	eax, DWORD PTR _Remain$[ebp]
	xor	edx, edx
	mov	ecx, 1000				; 000003e8H
	div	ecx
	mov	edx, DWORD PTR _Index$[ebp]
	add	eax, DWORD PTR __aSin[edx*4]
	mov	DWORD PTR _r$[ebp], eax
; Line 109
	cmp	DWORD PTR _Mul$[ebp], 0
	jle	SHORT $LN7@GUI__SinHQ
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN8@GUI__SinHQ
$LN7@GUI__SinHQ:
	mov	ecx, DWORD PTR _r$[ebp]
	neg	ecx
	mov	DWORD PTR tv89[ebp], ecx
$LN8@GUI__SinHQ:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR _r$[ebp], edx
; Line 110
	mov	eax, DWORD PTR _r$[ebp]
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__SinHQ ENDP
_TEXT	ENDS
PUBLIC	_GUI__CosHQ
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__CosHQ
_TEXT	SEGMENT
_Ang1000$ = 8						; size = 4
_GUI__CosHQ PROC					; COMDAT
; Line 126
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	mov	eax, DWORD PTR _Ang1000$[ebp]
	add	eax, 90000				; 00015f90H
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
; Line 128
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__CosHQ ENDP
_TEXT	ENDS
END
