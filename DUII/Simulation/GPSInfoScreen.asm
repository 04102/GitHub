; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\GPSInfoScreen.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG19445 DB	'GPS Lat: %0.6f   ', 00H
	ORG $+2
$SG19447 DB	'GPS Lon: %0.6f   ', 00H
	ORG $+2
$SG19448 DB	'meters', 00H
	ORG $+1
$SG19449 DB	'feet', 00H
	ORG $+3
$SG19450 DB	'Altitude: %0.0f %s   ', 00H
	ORG $+2
$SG19451 DB	'GPS DOP: %0.2f   ', 00H
	ORG $+2
$SG19452 DB	'Num Sats: %d   ', 00H
$SG19453 DB	'kph', 00H
$SG19454 DB	'mph', 00H
$SG19455 DB	'Velocity: %0.1f %s   ', 00H
	ORG $+2
$SG19457 DB	'Heading: ---   ', 00H
$SG19459 DB	'Heading: %0.0f   ', 00H
	ORG $+2
$SG19460 DB	'Xg: %+0.2f   ', 00H
	ORG $+2
$SG19461 DB	'Yg: %+0.2f   ', 00H
	ORG $+2
$SG19463 DB	'C', 00H
	ORG $+2
$SG19464 DB	'F', 00H
	ORG $+2
$SG19465 DB	'Temp: %0.1f %s   ', 00H
	ORG $+2
$SG19467 DB	'Zg: %+0.2f   ', 00H
	ORG $+2
$SG19470 DB	'                                       ', 00H
$SG19493 DB	'Test Information', 00H
	ORG $+3
$SG19494 DB	'Light Level: N/A', 00H
	ORG $+3
$SG19495 DB	'LED Temp: N/A', 00H
_DATA	ENDS
PUBLIC	__real@3fb999999999999a
PUBLIC	__$ArrayPad$
PUBLIC	_GPSInfoCallback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_GUI_MEMDEV_Delete:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_SlideOutVisible:PROC
EXTRN	_GUI_SelectLCD:PROC
EXTRN	_GUI_MEMDEV_CopyToLCD:PROC
EXTRN	_CheckWarningPopups:PROC
EXTRN	_bmthreewayarrow:BYTE
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_strcpy:PROC
EXTRN	_GetTimeString:PROC
EXTRN	_HaveSatelliteReception:PROC
EXTRN	_suData:BYTE
EXTRN	_sysData:BYTE
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_sprintf:PROC
EXTRN	_GetValue:PROC
EXTRN	_bmGPSInfoText:BYTE
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmDarkAsphalt:BYTE
EXTRN	_GUI_MEMDEV_Select:PROC
EXTRN	_lockupSemaphore:BYTE
EXTRN	_CS_IsVisible:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_RestartTimer:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_memGPS	DD	01H DUP (?)
_firsttimethrough DB 01H DUP (?)
	ALIGN	4

_hGPSInfo DD	01H DUP (?)
_hScreenTimer DD 01H DUP (?)
_BSS	ENDS
;	COMDAT __real@3fb999999999999a
; File c:\duii\duii\gpsinfoscreen.c
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GPSInfoCallback
_TEXT	SEGMENT
tv308 = -448						; size = 4
tv297 = -448						; size = 4
tv215 = -448						; size = 4
tv172 = -448						; size = 4
tv141 = -448						; size = 4
tv64 = -448						; size = 4
$T19513 = -440						; size = 8
$T19514 = -424						; size = 8
$T19517 = -408						; size = 8
$T19518 = -392						; size = 8
$T19519 = -376						; size = 8
$T19520 = -360						; size = 8
$T19523 = -344						; size = 8
$T19524 = -328						; size = 8
$T19525 = -312						; size = 8
$T19528 = -296						; size = 8
$T19529 = -280						; size = 8
_speed$19441 = -72					; size = 4
_scratch$19440 = -60					; size = 50
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_GPSInfoCallback PROC					; COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 86
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	$LN2@GPSInfoCal
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN14@GPSInfoCal
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN16@GPSInfoCal
	jmp	$LN1@GPSInfoCal
$LN16@GPSInfoCal:
; Line 89
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN15@GPSInfoCal
; Line 91
	push	25					; 00000019H
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 92
	mov	eax, DWORD PTR _hGPSInfo
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN15@GPSInfoCal:
; Line 94
	jmp	$LN17@GPSInfoCal
$LN14@GPSInfoCal:
; Line 97
	push	8
	call	_CS_IsVisible
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@GPSInfoCal
	movzx	eax, BYTE PTR _firsttimethrough
	test	eax, eax
	je	$LN13@GPSInfoCal
$LN12@GPSInfoCal:
; Line 102
	movzx	eax, BYTE PTR _lockupSemaphore
	test	eax, eax
	je	SHORT $LN11@GPSInfoCal
; Line 103
	jmp	$LN17@GPSInfoCal
	jmp	SHORT $LN10@GPSInfoCal
$LN11@GPSInfoCal:
; Line 104
	mov	BYTE PTR _lockupSemaphore, 1
$LN10@GPSInfoCal:
; Line 106
	mov	BYTE PTR _firsttimethrough, 0
; Line 108
	mov	eax, DWORD PTR _memGPS
	push	eax
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 109
	push	0
	push	0
	push	OFFSET _bmDarkAsphalt
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 111
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 112
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 113
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 116
	push	0
	push	0
	push	OFFSET _bmGPSInfoText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 120
	push	12					; 0000000cH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19513[ebp], eax
	mov	DWORD PTR $T19513[ebp+4], edx
	fld	QWORD PTR $T19513[ebp]
	fstp	DWORD PTR tv297[ebp]
	fld	DWORD PTR tv297[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19445
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 121
	push	40					; 00000028H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 124
	push	13					; 0000000dH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19514[ebp], eax
	mov	DWORD PTR $T19514[ebp+4], edx
	fld	QWORD PTR $T19514[ebp]
	fstp	DWORD PTR tv308[ebp]
	fld	DWORD PTR tv308[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19447
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 125
	push	80					; 00000050H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 128
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN21@GPSInfoCal
	mov	DWORD PTR tv141[ebp], OFFSET $SG19448
	jmp	SHORT $LN22@GPSInfoCal
$LN21@GPSInfoCal:
	mov	DWORD PTR tv141[ebp], OFFSET $SG19449
$LN22@GPSInfoCal:
	push	19					; 00000013H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19517[ebp], eax
	mov	DWORD PTR $T19517[ebp+4], edx
	mov	eax, DWORD PTR tv141[ebp]
	push	eax
	fld	DWORD PTR $T19517[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19450
	lea	ecx, DWORD PTR _scratch$19440[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H
; Line 129
	push	120					; 00000078H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 132
	push	20					; 00000014H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19518[ebp], eax
	mov	DWORD PTR $T19518[ebp+4], edx
	fld	DWORD PTR $T19518[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19451
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 133
	push	160					; 000000a0H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 136
	push	21					; 00000015H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19519[ebp], eax
	mov	DWORD PTR $T19519[ebp+4], edx
	mov	eax, DWORD PTR $T19519[ebp]
	push	eax
	push	OFFSET $SG19452
	lea	ecx, DWORD PTR _scratch$19440[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 137
	push	200					; 000000c8H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 141
	push	14					; 0000000eH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19520[ebp], eax
	mov	DWORD PTR $T19520[ebp+4], edx
	fld	DWORD PTR $T19520[ebp]
	fstp	DWORD PTR _speed$19441[ebp]
; Line 142
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN23@GPSInfoCal
	mov	DWORD PTR tv172[ebp], OFFSET $SG19453
	jmp	SHORT $LN24@GPSInfoCal
$LN23@GPSInfoCal:
	mov	DWORD PTR tv172[ebp], OFFSET $SG19454
$LN24@GPSInfoCal:
	mov	eax, DWORD PTR tv172[ebp]
	push	eax
	fld	DWORD PTR _speed$19441[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19455
	lea	ecx, DWORD PTR _scratch$19440[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H
; Line 143
	push	40					; 00000028H
	push	275					; 00000113H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 146
	fld	DWORD PTR _speed$19441[ebp]
	fcomp	QWORD PTR __real@3fb999999999999a
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@GPSInfoCal
; Line 147
	push	OFFSET $SG19457
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 8
; Line 148
	jmp	SHORT $LN8@GPSInfoCal
$LN9@GPSInfoCal:
; Line 149
	push	15					; 0000000fH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19523[ebp], eax
	mov	DWORD PTR $T19523[ebp+4], edx
	fld	DWORD PTR $T19523[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19459
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN8@GPSInfoCal:
; Line 150
	push	80					; 00000050H
	push	275					; 00000113H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 153
	push	9
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19524[ebp], eax
	mov	DWORD PTR $T19524[ebp+4], edx
	fld	DWORD PTR $T19524[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19460
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 154
	push	120					; 00000078H
	push	275					; 00000113H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 157
	push	10					; 0000000aH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19525[ebp], eax
	mov	DWORD PTR $T19525[ebp+4], edx
	fld	DWORD PTR $T19525[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19461
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 158
	push	160					; 000000a0H
	push	275					; 00000113H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 162
	movzx	eax, BYTE PTR _suData+24
	cmp	eax, 200				; 000000c8H
	jge	SHORT $LN7@GPSInfoCal
; Line 163
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN25@GPSInfoCal
	mov	DWORD PTR tv215[ebp], OFFSET $SG19463
	jmp	SHORT $LN26@GPSInfoCal
$LN25@GPSInfoCal:
	mov	DWORD PTR tv215[ebp], OFFSET $SG19464
$LN26@GPSInfoCal:
	push	77					; 0000004dH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19528[ebp], eax
	mov	DWORD PTR $T19528[ebp+4], edx
	mov	eax, DWORD PTR tv215[ebp]
	push	eax
	fld	DWORD PTR $T19528[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19465
	lea	ecx, DWORD PTR _scratch$19440[ebp]
	push	ecx
	call	_sprintf
	add	esp, 20					; 00000014H
	jmp	SHORT $LN6@GPSInfoCal
$LN7@GPSInfoCal:
; Line 164
	push	2
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T19529[ebp], eax
	mov	DWORD PTR $T19529[ebp+4], edx
	fld	DWORD PTR $T19529[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19467
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN6@GPSInfoCal:
; Line 165
	push	200					; 000000c8H
	push	275					; 00000113H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 168
	call	_HaveSatelliteReception
	test	eax, eax
	je	SHORT $LN5@GPSInfoCal
; Line 171
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	push	1
	call	_GetTimeString
	add	esp, 8
	jmp	SHORT $LN4@GPSInfoCal
$LN5@GPSInfoCal:
; Line 176
	push	OFFSET $SG19470
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN4@GPSInfoCal:
; Line 178
	push	240					; 000000f0H
	push	240					; 000000f0H
	lea	eax, DWORD PTR _scratch$19440[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 181
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmthreewayarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 189
	call	_CheckWarningPopups
; Line 190
	mov	eax, DWORD PTR _memGPS
	push	eax
	call	_GUI_MEMDEV_CopyToLCD
	add	esp, 4
; Line 191
	call	_GUI_SelectLCD
$LN13@GPSInfoCal:
; Line 193
	call	_SlideOutVisible
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@GPSInfoCal
; Line 194
	call	_DrawSignalStrength
$LN3@GPSInfoCal:
; Line 195
	jmp	SHORT $LN17@GPSInfoCal
$LN2@GPSInfoCal:
; Line 198
	mov	eax, DWORD PTR _memGPS
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 199
	jmp	SHORT $LN17@GPSInfoCal
$LN1@GPSInfoCal:
; Line 202
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN17@GPSInfoCal:
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@GPSInfoCal
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN29@GPSInfoCal:
	DD	1
	DD	$LN28@GPSInfoCal
$LN28@GPSInfoCal:
	DD	-60					; ffffffc4H
	DD	50					; 00000032H
	DD	$LN27@GPSInfoCal
$LN27@GPSInfoCal:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_GPSInfoCallback ENDP
_TEXT	ENDS
PUBLIC	_DisplayGPSInfo
EXTRN	_WM_CreateTimer:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
EXTRN	_GUI_MEMDEV_Create:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayGPSInfo
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayGPSInfo PROC					; COMDAT
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 212
	mov	BYTE PTR _firsttimethrough, 1
; Line 215
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	DWORD PTR _memGPS, eax
; Line 217
	push	0
	push	OFFSET _GPSInfoCallback
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hGPSInfo, eax
	cmp	DWORD PTR _hGPSInfo, 0
	jg	SHORT $LN1@DisplayGPS
; Line 218
	call	_SystemError
$LN1@DisplayGPS:
; Line 220
	mov	eax, DWORD PTR _hGPSInfo
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 222
	push	0
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _hGPSInfo
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 224
	mov	eax, DWORD PTR _hGPSInfo
; Line 225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayGPSInfo ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_TestInfoCallback
EXTRN	_GUI_Clear:PROC
_BSS	SEGMENT
_memTest DD	01H DUP (?)
_testfirsttimethrough DB 01H DUP (?)
	ALIGN	4

_hTestInfo DD	01H DUP (?)
_hTestScreenTimer DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _TestInfoCallback
_TEXT	SEGMENT
tv64 = -248						; size = 4
_scratch$19490 = -48					; size = 40
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_TestInfoCallback PROC					; COMDAT
; Line 232
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 233
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	$LN2@TestInfoCa
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN7@TestInfoCa
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN9@TestInfoCa
	jmp	$LN1@TestInfoCa
$LN9@TestInfoCa:
; Line 236
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hTestScreenTimer
	jne	SHORT $LN8@TestInfoCa
; Line 238
	push	25					; 00000019H
	mov	eax, DWORD PTR _hTestScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 239
	mov	eax, DWORD PTR _hTestInfo
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN8@TestInfoCa:
; Line 241
	jmp	$LN12@TestInfoCa
$LN7@TestInfoCa:
; Line 244
	push	9
	call	_CS_IsVisible
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@TestInfoCa
	movzx	eax, BYTE PTR _testfirsttimethrough
	test	eax, eax
	je	$LN6@TestInfoCa
$LN5@TestInfoCa:
; Line 248
	movzx	eax, BYTE PTR _lockupSemaphore
	test	eax, eax
	je	SHORT $LN4@TestInfoCa
; Line 249
	jmp	$LN12@TestInfoCa
	jmp	SHORT $LN3@TestInfoCa
$LN4@TestInfoCa:
; Line 250
	mov	BYTE PTR _lockupSemaphore, 1
$LN3@TestInfoCa:
; Line 252
	mov	BYTE PTR _testfirsttimethrough, 0
; Line 254
	mov	eax, DWORD PTR _memTest
	push	eax
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 255
	call	_GUI_Clear
; Line 256
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 257
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 260
	push	5
	push	240					; 000000f0H
	push	OFFSET $SG19493
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 264
	push	OFFSET $SG19494
	lea	eax, DWORD PTR _scratch$19490[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 268
	push	40					; 00000028H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19490[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 272
	push	OFFSET $SG19495
	lea	eax, DWORD PTR _scratch$19490[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 276
	push	80					; 00000050H
	push	25					; 00000019H
	lea	eax, DWORD PTR _scratch$19490[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 344
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmthreewayarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 345
	call	_CheckWarningPopups
; Line 346
	mov	eax, DWORD PTR _memTest
	push	eax
	call	_GUI_MEMDEV_CopyToLCD
	add	esp, 4
; Line 347
	call	_GUI_SelectLCD
$LN6@TestInfoCa:
; Line 349
	jmp	SHORT $LN12@TestInfoCa
$LN2@TestInfoCa:
; Line 352
	mov	eax, DWORD PTR _memTest
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 353
	jmp	SHORT $LN12@TestInfoCa
$LN1@TestInfoCa:
; Line 356
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN12@TestInfoCa:
; Line 358
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@TestInfoCa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN16@TestInfoCa:
	DD	1
	DD	$LN15@TestInfoCa
$LN15@TestInfoCa:
	DD	-48					; ffffffd0H
	DD	40					; 00000028H
	DD	$LN14@TestInfoCa
$LN14@TestInfoCa:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_TestInfoCallback ENDP
_TEXT	ENDS
PUBLIC	_DisplayTestInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTestInfo
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayTestInfo PROC					; COMDAT
; Line 365
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 366
	mov	BYTE PTR _testfirsttimethrough, 1
; Line 369
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	DWORD PTR _memTest, eax
; Line 371
	push	0
	push	OFFSET _TestInfoCallback
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hTestInfo, eax
	cmp	DWORD PTR _hTestInfo, 0
	jg	SHORT $LN1@DisplayTes
; Line 372
	call	_SystemError
$LN1@DisplayTes:
; Line 374
	mov	eax, DWORD PTR _hTestInfo
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 376
	push	0
	push	25					; 00000019H
	push	0
	mov	eax, DWORD PTR _hTestInfo
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hTestScreenTimer, eax
; Line 378
	mov	eax, DWORD PTR _hTestInfo
; Line 379
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTestInfo ENDP
_TEXT	ENDS
END
