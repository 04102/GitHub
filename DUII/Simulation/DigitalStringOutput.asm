; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\DigitalStringOutput.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG15446 DB	00H
$SG15447 DB	00H
	ORG $+2
$SG15448 DB	' ', 00H
	ORG $+2
$SG15461 DB	'%.0f', 00H
	ORG $+3
$SG15462 DB	'%%%d.%df %%s', 00H
CONST	ENDS
PUBLIC	??0DigitalStringOutput@@QAE@HHHHW4DigitalOptions@@JUGUI_FONT@@K@Z ; DigitalStringOutput::DigitalStringOutput
EXTRN	_GUI_MEMDEV_Create:PROC
EXTRN	_strcpy:PROC
EXTRN	??0ControlBase@@QAE@HHPAD0PAVAlarm@@@Z:PROC	; ControlBase::ControlBase
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\digitalstringoutput.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0DigitalStringOutput@@QAE@HHHHW4DigitalOptions@@JUGUI_FONT@@K@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_Options$ = 24						; size = 4
__hParent$ = 28						; size = 4
_font$ = 32						; size = 36
_cColor$ = 68						; size = 4
??0DigitalStringOutput@@QAE@HHHHW4DigitalOptions@@JUGUI_FONT@@K@Z PROC ; DigitalStringOutput::DigitalStringOutput, COMDAT
; _this$ = ecx
; Line 12
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	push	0
	push	OFFSET $SG15446
	push	OFFSET $SG15447
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ControlBase@@QAE@HHPAD0PAVAlarm@@@Z	; ControlBase::ControlBase
; Line 13
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR [eax+176], ecx
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR [eax+180], ecx
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Options$[ebp]
	mov	DWORD PTR [eax+212], ecx
; Line 18
	push	OFFSET $SG15448
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 68					; 00000044H
	push	eax
	call	_strcpy
	add	esp, 8
; Line 20
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+180]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+176]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+232], eax
; Line 21
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	lea	esi, DWORD PTR _font$[ebp]
	rep movsd
; Line 22
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _cColor$[ebp]
	mov	DWORD PTR [eax+272], ecx
; Line 24
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _x$[ebp]
	mov	WORD PTR [eax+276], cx
; Line 25
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _y$[ebp]
	mov	WORD PTR [eax+278], cx
; Line 26
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR [eax+176]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+280], cx
; Line 27
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR [eax+180]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+282], cx
; Line 29
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0DigitalStringOutput@@QAE@HHHHW4DigitalOptions@@JUGUI_FONT@@K@Z ENDP ; DigitalStringOutput::DigitalStringOutput
_TEXT	ENDS
PUBLIC	??1DigitalStringOutput@@QAE@XZ			; DigitalStringOutput::~DigitalStringOutput
EXTRN	_GUI_MEMDEV_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1DigitalStringOutput@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1DigitalStringOutput@@QAE@XZ PROC			; DigitalStringOutput::~DigitalStringOutput, COMDAT
; _this$ = ecx
; Line 32
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 34
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1DigitalStringOutput@@QAE@XZ ENDP			; DigitalStringOutput::~DigitalStringOutput
_TEXT	ENDS
PUBLIC	?DrawControl@DigitalStringOutput@@QAEXXZ	; DigitalStringOutput::DrawControl
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_GetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawControl@DigitalStringOutput@@QAEXXZ
_TEXT	SEGMENT
_OldColor$ = -20					; size = 4
_this$ = -8						; size = 4
?DrawControl@DigitalStringOutput@@QAEXXZ PROC		; DigitalStringOutput::DrawControl, COMDAT
; _this$ = ecx
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 40
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$[ebp], eax
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 43
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 236				; 000000ecH
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 47
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 276				; 00000114H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 49
	mov	eax, DWORD PTR _OldColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawControl@DigitalStringOutput@@QAEXXZ ENDP		; DigitalStringOutput::DrawControl
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?GetDisplayText@DigitalStringOutput@@AAEPADXZ	; DigitalStringOutput::GetDisplayText
EXTRN	_strlen:PROC
EXTRN	_sprintf:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetDisplayText@DigitalStringOutput@@AAEPADXZ
_TEXT	SEGMENT
_strFormat$ = -76					; size = 20
_str$ = -48						; size = 25
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?GetDisplayText@DigitalStringOutput@@AAEPADXZ PROC	; DigitalStringOutput::GetDisplayText, COMDAT
; _this$ = ecx
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 58
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+172]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15461
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+184]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_strlen
	add	esp, 4
	push	eax
	push	OFFSET $SG15462
	lea	eax, DWORD PTR _strFormat$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 37					; 00000025H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	lea	edx, DWORD PTR _strFormat$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 188				; 000000bcH
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 188				; 000000bcH
; Line 64
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GetDisplay
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GetDisplay:
	DD	2
	DD	$LN5@GetDisplay
$LN5@GetDisplay:
	DD	-48					; ffffffd0H
	DD	25					; 00000019H
	DD	$LN3@GetDisplay
	DD	-76					; ffffffb4H
	DD	20					; 00000014H
	DD	$LN4@GetDisplay
$LN4@GetDisplay:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN3@GetDisplay:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?GetDisplayText@DigitalStringOutput@@AAEPADXZ ENDP	; DigitalStringOutput::GetDisplayText
_TEXT	ENDS
PUBLIC	?SetValue@DigitalStringOutput@@QAEXPAD@Z	; DigitalStringOutput::SetValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetValue@DigitalStringOutput@@QAEXPAD@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_sValue$ = 8						; size = 4
?SetValue@DigitalStringOutput@@QAEXPAD@Z PROC		; DigitalStringOutput::SetValue, COMDAT
; _this$ = ecx
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 74
	mov	eax, DWORD PTR _sValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?SetValue@DigitalStringOutput@@QAEXPAD@Z ENDP		; DigitalStringOutput::SetValue
_TEXT	ENDS
PUBLIC	?PickFont@DigitalStringOutput@@AAEXXZ		; DigitalStringOutput::PickFont
EXTRN	_GUI_Font13_ASCII:BYTE
EXTRN	_GUI_Font16_ASCII:BYTE
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_GUI_GetYDistOfFont:PROC
EXTRN	_GUI_Font32B_ASCII:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?PickFont@DigitalStringOutput@@AAEXXZ
_TEXT	SEGMENT
_txt_height$ = -20					; size = 4
_this$ = -8						; size = 4
?PickFont@DigitalStringOutput@@AAEXXZ PROC		; DigitalStringOutput::PickFont, COMDAT
; _this$ = ecx
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 82
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font32B_ASCII
	rep movsd
; Line 84
	push	OFFSET _GUI_Font32B_ASCII
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _txt_height$[ebp]
	cmp	ecx, DWORD PTR [eax+180]
	jge	SHORT $LN4@PickFont
; Line 88
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font32B_ASCII
	rep movsd
; Line 89
	jmp	$LN5@PickFont
$LN4@PickFont:
; Line 92
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font24B_ASCII
	rep movsd
; Line 93
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _txt_height$[ebp]
	cmp	ecx, DWORD PTR [eax+180]
	jge	SHORT $LN3@PickFont
; Line 97
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font24B_ASCII
	rep movsd
; Line 98
	jmp	$LN5@PickFont
$LN3@PickFont:
; Line 101
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font16_ASCII
	rep movsd
; Line 102
	push	OFFSET _GUI_Font16_ASCII
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 104
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _txt_height$[ebp]
	cmp	ecx, DWORD PTR [eax+180]
	jge	SHORT $LN2@PickFont
; Line 106
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font16_ASCII
	rep movsd
; Line 107
	jmp	SHORT $LN5@PickFont
$LN2@PickFont:
; Line 110
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font13_ASCII
	rep movsd
; Line 111
	push	OFFSET _GUI_Font13_ASCII
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _txt_height$[ebp]
	cmp	ecx, DWORD PTR [eax+180]
	jge	SHORT $LN1@PickFont
; Line 115
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font13_ASCII
	rep movsd
; Line 116
	jmp	SHORT $LN5@PickFont
$LN1@PickFont:
; Line 119
	mov	edi, DWORD PTR _this$[ebp]
	add	edi, 236				; 000000ecH
	mov	ecx, 9
	mov	esi, OFFSET _GUI_Font24B_ASCII
	rep movsd
$LN5@PickFont:
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?PickFont@DigitalStringOutput@@AAEXXZ ENDP		; DigitalStringOutput::PickFont
_TEXT	ENDS
PUBLIC	?DrawToMemArea@DigitalStringOutput@@QAEJXZ	; DigitalStringOutput::DrawToMemArea
EXTRN	_GUI_SelectLCD:PROC
EXTRN	_GUI_ClearRect:PROC
EXTRN	_GUI_MEMDEV_Select:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawToMemArea@DigitalStringOutput@@QAEJXZ
_TEXT	SEGMENT
_OldColor$ = -20					; size = 4
_this$ = -8						; size = 4
?DrawToMemArea@DigitalStringOutput@@QAEJXZ PROC		; DigitalStringOutput::DrawToMemArea, COMDAT
; _this$ = ecx
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 126
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+272]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+232]
	push	ecx
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+282]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+280]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+278]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+276]
	push	ecx
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 132
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 236				; 000000ecH
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 136
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 276				; 00000114H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 68					; 00000044H
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 138
	mov	eax, DWORD PTR _OldColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 140
	call	_GUI_SelectLCD
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+232]
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawToMemArea@DigitalStringOutput@@QAEJXZ ENDP		; DigitalStringOutput::DrawToMemArea
_TEXT	ENDS
END
