; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__CompactPixelIndices.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__CompactPixelIndices
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__compactpixelindices.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__CompactPixelIndices
_TEXT	SEGMENT
tv72 = -244						; size = 4
tv67 = -244						; size = 4
_Byte$8360 = -41					; size = 1
_pDest$8359 = -32					; size = 4
_pDest$8353 = -20					; size = 4
_BytesPerPixel$ = -8					; size = 4
_pBuffer$ = 8						; size = 4
_NumPixels$ = 12					; size = 4
_BitsPerPixel$ = 16					; size = 4
_GUI__CompactPixelIndices PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jg	SHORT $LN30@GUI__Compa
; Line 38
	mov	DWORD PTR _BytesPerPixel$[ebp], 1
	jmp	SHORT $LN29@GUI__Compa
$LN30@GUI__Compa:
; Line 39
	cmp	DWORD PTR _BitsPerPixel$[ebp], 16	; 00000010H
	jg	SHORT $LN28@GUI__Compa
; Line 40
	mov	DWORD PTR _BytesPerPixel$[ebp], 2
; Line 41
	jmp	SHORT $LN29@GUI__Compa
$LN28@GUI__Compa:
; Line 42
	mov	DWORD PTR _BytesPerPixel$[ebp], 4
$LN29@GUI__Compa:
; Line 44
	cmp	DWORD PTR _BytesPerPixel$[ebp], 4
	jge	$LN31@GUI__Compa
; Line 46
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN19@GUI__Compa
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN23@GUI__Compa
	jmp	$LN31@GUI__Compa
$LN23@GUI__Compa:
; Line 49
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$8353[ebp], eax
$LN22@GUI__Compa:
; Line 51
	mov	eax, DWORD PTR _pDest$8353[ebp]
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _pDest$8353[ebp]
	add	eax, 2
	mov	DWORD PTR _pDest$8353[ebp], eax
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pBuffer$[ebp], ecx
; Line 52
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN22@GUI__Compa
; Line 54
	jmp	$LN31@GUI__Compa
$LN19@GUI__Compa:
; Line 58
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$8359[ebp], eax
; Line 59
	mov	eax, DWORD PTR _BitsPerPixel$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	cmp	DWORD PTR tv72[ebp], 1
	je	SHORT $LN15@GUI__Compa
	cmp	DWORD PTR tv72[ebp], 2
	je	$LN11@GUI__Compa
	cmp	DWORD PTR tv72[ebp], 4
	je	$LN7@GUI__Compa
	jmp	$LN3@GUI__Compa
$LN15@GUI__Compa:
; Line 62
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 7
	mov	BYTE PTR _Byte$8360[ebp], cl
	mov	edx, DWORD PTR _pBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pBuffer$[ebp], edx
; Line 63
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 6
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 5
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 4
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 3
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 2
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	shl	ecx, 1
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 1
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _pDest$8359[ebp]
	mov	cl, BYTE PTR _Byte$8360[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$8359[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$8359[ebp], edx
; Line 71
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	$LN15@GUI__Compa
$LN11@GUI__Compa:
; Line 74
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 3
	shl	ecx, 6
	mov	BYTE PTR _Byte$8360[ebp], cl
	mov	edx, DWORD PTR _pBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pBuffer$[ebp], edx
; Line 75
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 3
	shl	ecx, 4
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 76
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 3
	shl	ecx, 2
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 77
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 3
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 78
	mov	eax, DWORD PTR _pDest$8359[ebp]
	mov	cl, BYTE PTR _Byte$8360[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$8359[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$8359[ebp], edx
; Line 79
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	$LN11@GUI__Compa
$LN7@GUI__Compa:
; Line 82
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 15					; 0000000fH
	shl	ecx, 4
	mov	BYTE PTR _Byte$8360[ebp], cl
	mov	edx, DWORD PTR _pBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pBuffer$[ebp], edx
; Line 83
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 15					; 0000000fH
	movzx	edx, BYTE PTR _Byte$8360[ebp]
	or	edx, ecx
	mov	BYTE PTR _Byte$8360[ebp], dl
	mov	eax, DWORD PTR _pBuffer$[ebp]
	add	eax, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 84
	mov	eax, DWORD PTR _pDest$8359[ebp]
	mov	cl, BYTE PTR _Byte$8360[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$8359[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$8359[ebp], edx
; Line 85
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN7@GUI__Compa
; Line 86
	jmp	SHORT $LN31@GUI__Compa
$LN3@GUI__Compa:
; Line 89
	mov	eax, DWORD PTR _pDest$8359[ebp]
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _pDest$8359[ebp]
	add	eax, 1
	mov	DWORD PTR _pDest$8359[ebp], eax
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pBuffer$[ebp], ecx
; Line 90
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN3@GUI__Compa
$LN31@GUI__Compa:
; Line 106
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__CompactPixelIndices ENDP
_TEXT	ENDS
PUBLIC	_GUI__CompactPixelIndicesEx
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__CompactPixelIndicesEx
_TEXT	SEGMENT
tv79 = -232						; size = 4
tv71 = -232						; size = 4
tv67 = -232						; size = 4
_pDest$8408 = -32					; size = 4
_pDest$8402 = -20					; size = 4
_BytesPerPixel$ = -8					; size = 4
_pBuffer$ = 8						; size = 4
_NumPixels$ = 12					; size = 4
_BitsPerPixel$ = 16					; size = 4
_pfColor2Index$ = 20					; size = 4
_GUI__CompactPixelIndicesEx PROC			; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 114
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jg	SHORT $LN15@GUI__Compa@2
; Line 115
	mov	DWORD PTR _BytesPerPixel$[ebp], 1
	jmp	SHORT $LN14@GUI__Compa@2
$LN15@GUI__Compa@2:
; Line 116
	cmp	DWORD PTR _BitsPerPixel$[ebp], 16	; 00000010H
	jg	SHORT $LN13@GUI__Compa@2
; Line 117
	mov	DWORD PTR _BytesPerPixel$[ebp], 2
; Line 118
	jmp	SHORT $LN14@GUI__Compa@2
$LN13@GUI__Compa@2:
; Line 119
	mov	DWORD PTR _BytesPerPixel$[ebp], 4
$LN14@GUI__Compa@2:
; Line 121
	cmp	DWORD PTR _BytesPerPixel$[ebp], 4
	jge	$LN16@GUI__Compa@2
; Line 123
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN4@GUI__Compa@2
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN8@GUI__Compa@2
	jmp	$LN16@GUI__Compa@2
$LN8@GUI__Compa@2:
; Line 126
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$8402[ebp], eax
$LN7@GUI__Compa@2:
; Line 128
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pBuffer$[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv71[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pDest$8402[ebp]
	mov	WORD PTR [ecx], ax
	mov	edx, DWORD PTR _pDest$8402[ebp]
	add	edx, 2
	mov	DWORD PTR _pDest$8402[ebp], edx
; Line 129
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN7@GUI__Compa@2
; Line 131
	jmp	SHORT $LN16@GUI__Compa@2
$LN4@GUI__Compa@2:
; Line 134
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$8408[ebp], eax
$LN3@GUI__Compa@2:
; Line 136
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv79[ebp], ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	add	edx, 4
	mov	DWORD PTR _pBuffer$[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR tv79[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pDest$8408[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _pDest$8408[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$8408[ebp], edx
; Line 137
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN3@GUI__Compa@2
$LN16@GUI__Compa@2:
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__CompactPixelIndicesEx ENDP
_TEXT	ENDS
END
