; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_JPEG_DrawScaled.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_JPEG_DrawScaledEx
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_jpeg_drawscaled.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_JPEG_DrawScaledEx
_TEXT	SEGMENT
_r$ = -8						; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
_GUI_JPEG_DrawScaledEx PROC				; COMDAT
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 345
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfGetData$[ebp]
	push	edx
	call	__Draw
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 347
	mov	eax, DWORD PTR _r$[ebp]
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_JPEG_DrawScaledEx ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_LCD_Index2Color:PROC
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_GUI_JPEG__Free:PROC
EXTRN	_GUI_JPEG__GetColorRGB:PROC
EXTRN	_GUI_JPEG__GetColorGray:PROC
EXTRN	_GUI_JPEG__InitDraw:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_JPEG__GetInfoEx:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_LCD_GetColorIndex:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Draw
_TEXT	SEGMENT
_OldIndex$ = -88					; size = 4
_r$ = -76						; size = 4
_pfGetColor$ = -64					; size = 4
_Info$ = -52						; size = 8
_pContext$ = -36					; size = 4
_hContext$ = -24					; size = 4
_Rect$ = -12						; size = 8
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
__Draw	PROC						; COMDAT
; Line 271
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 279
	mov	DWORD PTR _r$[ebp], 1
; Line 282
	push	33984					; 000084c0H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 283
	cmp	DWORD PTR _hContext$[ebp], 0
	je	$LN11@Draw
; Line 284
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 285
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 286
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 288
	call	_LCD_GetColorIndex
	mov	DWORD PTR _OldIndex$[ebp], eax
; Line 289
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pContext$[ebp], 0
; Line 291
	lea	eax, DWORD PTR _Info$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hContext$[ebp]
	push	ecx
	call	_GUI_JPEG__GetInfoEx
	add	esp, 8
	test	eax, eax
	je	SHORT $LN10@Draw
; Line 292
	mov	eax, 1
	jmp	$LN12@Draw
$LN10@Draw:
; Line 296
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 297
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
	movsx	ecx, WORD PTR _Rect$[ebp]
	mov	eax, DWORD PTR _Info$[ebp]
	imul	eax, DWORD PTR _Num$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denom$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+4], dx
; Line 298
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	mov	eax, DWORD PTR _Info$[ebp+4]
	imul	eax, DWORD PTR _Num$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denom$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 299
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	$LN9@Draw
$LN8@Draw:
; Line 302
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_JPEG__InitDraw
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 303
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 304
	mov	eax, DWORD PTR _pContext$[ebp]
	movzx	ecx, BYTE PTR [eax+29714]
	test	ecx, ecx
	jne	SHORT $LN5@Draw
; Line 305
	mov	DWORD PTR _pfGetColor$[ebp], OFFSET _GUI_JPEG__GetColorGray
; Line 306
	jmp	SHORT $LN4@Draw
$LN5@Draw:
; Line 307
	mov	DWORD PTR _pfGetColor$[ebp], OFFSET _GUI_JPEG__GetColorRGB
$LN4@Draw:
; Line 310
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN3@Draw
; Line 311
	mov	eax, DWORD PTR _pContext$[ebp]
	movzx	ecx, BYTE PTR [eax+33952]
	test	ecx, ecx
	jne	SHORT $LN2@Draw
; Line 312
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfGetColor$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__DrawScanlinesScaledAtOnce
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 313
	jmp	SHORT $LN3@Draw
$LN2@Draw:
; Line 314
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pContext$[ebp], 0
; Line 315
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfGetColor$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hContext$[ebp]
	push	edx
	call	__DrawScanlinesScaledBanding
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 316
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
$LN3@Draw:
; Line 320
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__Free
	add	esp, 4
; Line 321
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pContext$[ebp], 0
; Line 323
	call	_WM__GetNextIVR
	test	eax, eax
	jne	$LN8@Draw
$LN9@Draw:
; Line 326
	mov	eax, DWORD PTR _OldIndex$[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 327
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN11@Draw:
; Line 329
	mov	eax, DWORD PTR _r$[ebp]
$LN12@Draw:
; Line 330
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@Draw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@Draw:
	DD	2
	DD	$LN16@Draw
$LN16@Draw:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN14@Draw
	DD	-52					; ffffffccH
	DD	8
	DD	$LN15@Draw
$LN15@Draw:
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN14@Draw:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__Draw	ENDP
_TEXT	ENDS
EXTRN	_GUI_JPEG__SkipLine:PROC
EXTRN	_GUI_JPEG__DecodeLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawScanlinesScaledAtOnce
_TEXT	SEGMENT
_pfFunc$ = -56						; size = 4
_NumReps$ = -44						; size = 4
_SkipCnt$ = -32						; size = 4
_Current$ = -20						; size = 4
_Compare$ = -8						; size = 4
_pContext$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_pfGetColor$ = 20					; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
__DrawScanlinesScaledAtOnce PROC			; COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 115
	mov	eax, DWORD PTR _Denom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _Current$[ebp], eax
; Line 116
	mov	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$[ebp], eax
$LN21@DrawScanli:
; Line 121
	mov	DWORD PTR _SkipCnt$[ebp], 0
$LN18@DrawScanli:
; Line 125
	mov	eax, DWORD PTR _Current$[ebp]
	add	eax, DWORD PTR _Num$[ebp]
	mov	DWORD PTR _Current$[ebp], eax
	mov	ecx, DWORD PTR _Current$[ebp]
	cmp	ecx, DWORD PTR _Compare$[ebp]
	jae	SHORT $LN16@DrawScanli
; Line 126
	mov	eax, DWORD PTR _SkipCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _SkipCnt$[ebp], eax
; Line 127
	jmp	SHORT $LN18@DrawScanli
$LN16@DrawScanli:
; Line 132
	cmp	DWORD PTR _SkipCnt$[ebp], 0
	jne	SHORT $LN13@DrawScanli
; Line 133
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__DecodeLine
	add	esp, 4
	test	eax, eax
	je	SHORT $LN12@DrawScanli
; Line 134
	mov	eax, 1
	jmp	$LN22@DrawScanli
$LN12@DrawScanli:
; Line 136
	jmp	SHORT $LN11@DrawScanli
$LN13@DrawScanli:
; Line 137
	mov	eax, DWORD PTR _pContext$[ebp]
	movzx	ecx, BYTE PTR [eax+29713]
	test	ecx, ecx
	je	SHORT $LN10@DrawScanli
; Line 138
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__DecodeLine
	add	esp, 4
	test	eax, eax
	je	SHORT $LN9@DrawScanli
; Line 139
	mov	eax, 1
	jmp	$LN22@DrawScanli
$LN9@DrawScanli:
; Line 141
	jmp	SHORT $LN11@DrawScanli
$LN10@DrawScanli:
; Line 142
	cmp	DWORD PTR _SkipCnt$[ebp], 1
	jne	SHORT $LN7@DrawScanli
; Line 143
	mov	DWORD PTR _pfFunc$[ebp], OFFSET _GUI_JPEG__DecodeLine
; Line 144
	jmp	SHORT $LN6@DrawScanli
$LN7@DrawScanli:
; Line 145
	mov	DWORD PTR _pfFunc$[ebp], OFFSET _GUI_JPEG__SkipLine
$LN6@DrawScanli:
; Line 147
	mov	esi, esp
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	DWORD PTR _pfFunc$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN11@DrawScanli
; Line 148
	mov	eax, 1
	jmp	$LN22@DrawScanli
$LN11@DrawScanli:
; Line 152
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	SHORT $LN15@DrawScanli
; Line 153
	jmp	SHORT $LN14@DrawScanli
$LN15@DrawScanli:
; Line 155
	mov	eax, DWORD PTR _SkipCnt$[ebp]
	sub	eax, 1
	mov	DWORD PTR _SkipCnt$[ebp], eax
	jns	$LN16@DrawScanli
$LN14@DrawScanli:
; Line 156
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	SHORT $LN3@DrawScanli
; Line 157
	jmp	SHORT $LN19@DrawScanli
$LN3@DrawScanli:
; Line 162
	mov	DWORD PTR _NumReps$[ebp], 1
$LN2@DrawScanli:
; Line 163
	mov	eax, DWORD PTR _Compare$[ebp]
	add	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$[ebp], eax
	mov	ecx, DWORD PTR _Current$[ebp]
	cmp	ecx, DWORD PTR _Compare$[ebp]
	jb	SHORT $LN1@DrawScanli
; Line 164
	mov	eax, DWORD PTR _NumReps$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumReps$[ebp], eax
; Line 165
	jmp	SHORT $LN2@DrawScanli
$LN1@DrawScanli:
; Line 169
	mov	eax, DWORD PTR _NumReps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Denom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Num$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfGetColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__DrawScanlineScaled
	add	esp, 32					; 00000020H
; Line 170
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _NumReps$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 171
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	$LN21@DrawScanli
$LN19@DrawScanli:
; Line 172
	xor	eax, eax
$LN22@DrawScanli:
; Line 173
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawScanlinesScaledAtOnce ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_DrawPixel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawScanlineScaled
_TEXT	SEGMENT
tv135 = -268						; size = 4
tv79 = -268						; size = 4
_Color$9896 = -68					; size = 4
_NumReps$ = -56						; size = 4
_SkipCnt$ = -44						; size = 4
_Current$ = -32						; size = 4
_Compare$ = -20						; size = 4
_p$ = -8						; size = 4
_pContext$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_xSize$ = 20						; size = 4
_pfGetColor$ = 24					; size = 4
_Num$ = 28						; size = 4
_Denom$ = 32						; size = 4
_NumLines$ = 36						; size = 4
__DrawScanlineScaled PROC				; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	mov	eax, DWORD PTR _Denom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _Current$[ebp], eax
; Line 52
	mov	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$[ebp], eax
; Line 53
	mov	eax, DWORD PTR _pContext$[ebp]
	movzx	ecx, BYTE PTR [eax+29852]
	test	ecx, ecx
	jne	SHORT $LN12@DrawScanli@2
; Line 54
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+29844]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 55
	jmp	SHORT $LN10@DrawScanli@2
$LN12@DrawScanli@2:
; Line 56
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+29848]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
$LN10@DrawScanli@2:
; Line 63
	mov	DWORD PTR _SkipCnt$[ebp], 0
$LN7@DrawScanli@2:
; Line 67
	mov	eax, DWORD PTR _Current$[ebp]
	add	eax, DWORD PTR _Num$[ebp]
	mov	DWORD PTR _Current$[ebp], eax
	mov	ecx, DWORD PTR _Current$[ebp]
	cmp	ecx, DWORD PTR _Compare$[ebp]
	jae	SHORT $LN6@DrawScanli@2
; Line 68
	mov	eax, DWORD PTR _SkipCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _SkipCnt$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _xSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _xSize$[ebp], ecx
	test	eax, eax
	jne	SHORT $LN15@DrawScanli@2
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN16@DrawScanli@2
$LN15@DrawScanli@2:
	mov	DWORD PTR tv79[ebp], 0
$LN16@DrawScanli@2:
	cmp	DWORD PTR tv79[ebp], 0
	je	SHORT $LN5@DrawScanli@2
; Line 70
	jmp	$_DrawScanlineScaled_Skip$9901
$LN5@DrawScanli@2:
; Line 72
	jmp	SHORT $LN7@DrawScanli@2
$LN6@DrawScanli@2:
; Line 76
	mov	eax, DWORD PTR _SkipCnt$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _pfGetColor$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Color$9896[ebp], eax
; Line 77
	mov	eax, DWORD PTR _Color$9896[ebp]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 81
	mov	DWORD PTR _NumReps$[ebp], 1
$LN4@DrawScanli@2:
; Line 82
	mov	eax, DWORD PTR _Compare$[ebp]
	add	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$[ebp], eax
	mov	ecx, DWORD PTR _Current$[ebp]
	cmp	ecx, DWORD PTR _Compare$[ebp]
	jb	SHORT $LN3@DrawScanli@2
; Line 83
	mov	eax, DWORD PTR _NumReps$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumReps$[ebp], eax
; Line 84
	jmp	SHORT $LN4@DrawScanli@2
$LN3@DrawScanli@2:
; Line 88
	cmp	DWORD PTR _NumReps$[ebp], 1
	jne	SHORT $LN2@DrawScanli@2
	cmp	DWORD PTR _NumLines$[ebp], 1
	jne	SHORT $LN2@DrawScanli@2
; Line 89
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_LCD_DrawPixel
	add	esp, 8
; Line 90
	jmp	SHORT $LN1@DrawScanli@2
$LN2@DrawScanli@2:
; Line 91
	mov	eax, DWORD PTR _NumLines$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _NumReps$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN1@DrawScanli@2:
; Line 93
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _NumReps$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
; Line 94
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _xSize$[ebp], ecx
	cmp	DWORD PTR tv135[ebp], 0
	jne	$LN10@DrawScanli@2
$_DrawScanlineScaled_Skip$9901:
; Line 96
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _p$[ebp], 0
; Line 97
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@DrawScanli@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN19@DrawScanli@2:
	DD	1
	DD	$LN18@DrawScanli@2
$LN18@DrawScanli@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN17@DrawScanli@2
$LN17@DrawScanli@2:
	DB	112					; 00000070H
	DB	0
__DrawScanlineScaled ENDP
_TEXT	ENDS
EXTRN	_GUI_JPEG__SetNextBand:PROC
EXTRN	_GUI_JPEG__DecodeProgressiveBanding:PROC
EXTRN	_GUI_JPEG__ReadUntilSOF:PROC
EXTRN	_GUI_JPEG__AllocBandingCoeffBuffer:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawScanlinesScaledBanding
_TEXT	SEGMENT
tv81 = -304						; size = 4
_BlockY$9987 = -104					; size = 4
_NumReps$9986 = -92					; size = 4
_SkipCnt$9985 = -80					; size = 4
_Current$9984 = -68					; size = 4
_Compare$9983 = -56					; size = 4
_yPos$ = -44						; size = 4
_r$ = -32						; size = 4
_Band$ = -20						; size = 4
_pContext$ = -8						; size = 4
_hContext$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_pfGetColor$ = 20					; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
__DrawScanlinesScaledBanding PROC			; COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 189
	mov	DWORD PTR _r$[ebp], 0
; Line 195
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_JPEG__AllocBandingCoeffBuffer
	add	esp, 4
	test	eax, eax
	je	SHORT $LN18@DrawScanli@3
; Line 196
	mov	eax, 1
	jmp	$LN19@DrawScanli@3
$LN18@DrawScanli@3:
; Line 198
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 199
	mov	DWORD PTR _Band$[ebp], 0
	jmp	SHORT $LN17@DrawScanli@3
$LN16@DrawScanli@3:
	mov	eax, DWORD PTR _Band$[ebp]
	add	eax, 1
	mov	DWORD PTR _Band$[ebp], eax
$LN17@DrawScanli@3:
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Band$[ebp]
	cmp	ecx, DWORD PTR [eax+33956]
	jae	$LN15@DrawScanli@3
; Line 203
	mov	eax, DWORD PTR _Denom$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _Current$9984[ebp], eax
; Line 204
	mov	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$9983[ebp], eax
; Line 208
	cmp	DWORD PTR _Band$[ebp], 0
	je	SHORT $LN14@DrawScanli@3
; Line 209
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_JPEG__ReadUntilSOF
	add	esp, 4
$LN14@DrawScanli@3:
; Line 214
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__DecodeProgressiveBanding
	add	esp, 4
; Line 218
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
$LN13@DrawScanli@3:
; Line 220
	mov	DWORD PTR _SkipCnt$9985[ebp], 0
$LN10@DrawScanli@3:
; Line 224
	mov	eax, DWORD PTR _Current$9984[ebp]
	add	eax, DWORD PTR _Num$[ebp]
	mov	DWORD PTR _Current$9984[ebp], eax
	mov	ecx, DWORD PTR _Current$9984[ebp]
	cmp	ecx, DWORD PTR _Compare$9983[ebp]
	jae	SHORT $LN8@DrawScanli@3
; Line 225
	mov	eax, DWORD PTR _SkipCnt$9985[ebp]
	add	eax, 1
	mov	DWORD PTR _SkipCnt$9985[ebp], eax
; Line 226
	jmp	SHORT $LN10@DrawScanli@3
$LN8@DrawScanli@3:
; Line 230
	mov	eax, DWORD PTR _SkipCnt$9985[ebp]
	mov	ecx, DWORD PTR _SkipCnt$9985[ebp]
	sub	ecx, 1
	mov	DWORD PTR _SkipCnt$9985[ebp], ecx
	test	eax, eax
	jl	SHORT $LN21@DrawScanli@3
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN22@DrawScanli@3
$LN21@DrawScanli@3:
	mov	DWORD PTR tv81[ebp], 0
$LN22@DrawScanli@3:
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN7@DrawScanli@3
; Line 231
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__DecodeLine
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@DrawScanli@3
; Line 232
	mov	eax, 1
	jmp	$LN19@DrawScanli@3
$LN6@DrawScanli@3:
; Line 234
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	SHORT $LN5@DrawScanli@3
; Line 235
	jmp	SHORT $LN7@DrawScanli@3
$LN5@DrawScanli@3:
; Line 237
	jmp	SHORT $LN8@DrawScanli@3
$LN7@DrawScanli@3:
; Line 238
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	SHORT $LN4@DrawScanli@3
; Line 239
	jmp	$LN11@DrawScanli@3
$LN4@DrawScanli@3:
; Line 244
	mov	DWORD PTR _NumReps$9986[ebp], 1
$LN3@DrawScanli@3:
; Line 245
	mov	eax, DWORD PTR _Compare$9983[ebp]
	add	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Compare$9983[ebp], eax
	mov	ecx, DWORD PTR _Current$9984[ebp]
	cmp	ecx, DWORD PTR _Compare$9983[ebp]
	jb	SHORT $LN2@DrawScanli@3
; Line 246
	mov	eax, DWORD PTR _NumReps$9986[ebp]
	add	eax, 1
	mov	DWORD PTR _NumReps$9986[ebp], eax
; Line 247
	jmp	SHORT $LN3@DrawScanli@3
$LN2@DrawScanli@3:
; Line 248
	mov	eax, DWORD PTR _Current$9984[ebp]
	shr	eax, 3
	mov	DWORD PTR _BlockY$9987[ebp], eax
; Line 249
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _BlockY$9987[ebp]
	cmp	ecx, DWORD PTR [eax+33964]
	jl	SHORT $LN1@DrawScanli@3
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+33964]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [edx+33960]
	lea	ecx, DWORD PTR [ecx+eax-1]
	cmp	DWORD PTR _BlockY$9987[ebp], ecx
	jg	SHORT $LN1@DrawScanli@3
; Line 253
	mov	eax, DWORD PTR _NumReps$9986[ebp]
	push	eax
	mov	ecx, DWORD PTR _Denom$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Num$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfGetColor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	movzx	edx, WORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__DrawScanlineScaled
	add	esp, 32					; 00000020H
$LN1@DrawScanli@3:
; Line 255
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _NumReps$9986[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 256
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+29836], 0
	jne	$LN13@DrawScanli@3
$LN11@DrawScanli@3:
; Line 257
	mov	eax, DWORD PTR _yPos$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 261
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_JPEG__SetNextBand
	add	esp, 4
; Line 262
	jmp	$LN16@DrawScanli@3
$LN15@DrawScanli@3:
; Line 263
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pContext$[ebp], 0
; Line 264
	mov	eax, DWORD PTR _r$[ebp]
$LN19@DrawScanli@3:
; Line 265
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawScanlinesScaledBanding ENDP
_TEXT	ENDS
PUBLIC	_GUI_JPEG_DrawScaled
EXTRN	_GUI_JPEG__GetData:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_JPEG_DrawScaled
_TEXT	SEGMENT
_Param$ = -24						; size = 8
_r$ = -8						; size = 4
_pFileData$ = 8						; size = 4
_DataSize$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
_GUI_JPEG_DrawScaled PROC				; COMDAT
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	eax, DWORD PTR _DataSize$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 359
	mov	eax, DWORD PTR _pFileData$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 360
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Param$[ebp]
	push	ecx
	push	OFFSET _GUI_JPEG__GetData
	call	_GUI_JPEG_DrawScaledEx
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 362
	mov	eax, DWORD PTR _r$[ebp]
; Line 363
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_JPEG_D
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GUI_JPEG_D:
	DD	1
	DD	$LN4@GUI_JPEG_D
$LN4@GUI_JPEG_D:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@GUI_JPEG_D
$LN3@GUI_JPEG_D:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_JPEG_DrawScaled ENDP
_TEXT	ENDS
END
