; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawFocusRect.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawFocusRect
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI__ReduceRect:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawfocusrect.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawFocusRect
_TEXT	SEGMENT
_r$ = -12						; size = 8
_pRect$ = 8						; size = 4
_Dist$ = 12						; size = 4
_GUI_DrawFocusRect PROC					; COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 58
	mov	eax, DWORD PTR _Dist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 61
	movsx	eax, WORD PTR _r$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	WORD PTR _r$[ebp], ax
	movsx	eax, WORD PTR _r$[ebp+2]
	add	eax, DWORD PTR _GUI_Context+68
	mov	WORD PTR _r$[ebp+2], ax
; Line 62
	movsx	eax, WORD PTR _r$[ebp+4]
	add	eax, DWORD PTR _GUI_Context+64
	mov	WORD PTR _r$[ebp+4], ax
	movsx	eax, WORD PTR _r$[ebp+6]
	add	eax, DWORD PTR _GUI_Context+68
	mov	WORD PTR _r$[ebp+6], ax
; Line 63
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawFo
$LN3@GUI_DrawFo:
; Line 65
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	__DrawFocusRect
	add	esp, 4
; Line 67
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawFo
$LN5@GUI_DrawFo:
; Line 70
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawFo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GUI_DrawFo:
	DD	1
	DD	$LN8@GUI_DrawFo
$LN8@GUI_DrawFo:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI_DrawFo
$LN7@GUI_DrawFo:
	DB	114					; 00000072H
	DB	0
_GUI_DrawFocusRect ENDP
_TEXT	ENDS
EXTRN	_LCD_DrawPixel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawFocusRect
_TEXT	SEGMENT
_i$ = -8						; size = 4
_pr$ = 8						; size = 4
__DrawFocusRect PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN6@DrawFocusR
$LN5@DrawFocusR:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 2
	mov	DWORD PTR _i$[ebp], eax
$LN6@DrawFocusR:
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	cmp	DWORD PTR _i$[ebp], ecx
	jg	SHORT $LN4@DrawFocusR
; Line 38
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	call	_LCD_DrawPixel
	add	esp, 8
; Line 39
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	call	_LCD_DrawPixel
	add	esp, 8
; Line 40
	jmp	SHORT $LN5@DrawFocusR
$LN4@DrawFocusR:
; Line 41
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@DrawFocusR
$LN2@DrawFocusR:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 2
	mov	DWORD PTR _i$[ebp], eax
$LN3@DrawFocusR:
	mov	eax, DWORD PTR _pr$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	cmp	DWORD PTR _i$[ebp], ecx
	jg	SHORT $LN7@DrawFocusR
; Line 42
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pr$[ebp]
	movsx	edx, WORD PTR [ecx]
	push	edx
	call	_LCD_DrawPixel
	add	esp, 8
; Line 43
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pr$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	push	edx
	call	_LCD_DrawPixel
	add	esp, 8
; Line 44
	jmp	SHORT $LN2@DrawFocusR
$LN7@DrawFocusR:
; Line 45
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawFocusRect ENDP
_TEXT	ENDS
END
