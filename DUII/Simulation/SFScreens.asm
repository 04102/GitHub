; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\SFScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_DATA	SEGMENT
COMM	_raceMode:DWORD
COMM	_hWaitingForCamera:DWORD
COMM	_h1000ft:DWORD
COMM	_hStageButton:DWORD
COMM	_hSFScreen:DWORD
COMM	_typeSave:DWORD
COMM	_WorkString:BYTE:014H
COMM	_hSweepTachButton:DWORD
COMM	_hAnalogGaugeButton:DWORD
COMM	_h1_4Mile:DWORD
COMM	_hLaunchButton:DWORD
COMM	_hDigitalGaugeButton:DWORD
COMM	_parentSave:DWORD
COMM	_h1_8thMile:DWORD
_DATA	ENDS
_BSS	SEGMENT
_pSFKeyboard DD	01H DUP (?)
_hWaitForSatelliteTimer DD 01H DUP (?)
_hWaitForCameraTimer DD 01H DUP (?)
_hWaitForLaunchTimer DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_InvalidSFResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG19944
	DW	00H
	DW	028H
	DW	014H
	DW	017cH
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19945
	DW	00H
	DW	00H
	DW	0aH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19946
	DW	00H
	DW	00H
	DW	028H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19947
	DW	00H
	DW	00H
	DW	046H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19948
	DW	01H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19949
	DW	02H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
CONST	ENDS
_DATA	SEGMENT
$SG19857 DB	'Enter S/F Longitude', 00H
$SG19859 DB	'Enter S/F Latitude', 00H
	ORG $+1
$SG19861 DB	'Enter S/F Heading', 00H
	ORG $+2
$SG19863 DB	'Enter Start Line Longitude', 00H
	ORG $+1
$SG19865 DB	'Enter Start Line Latitude', 00H
	ORG $+2
$SG19867 DB	'Enter Start Line Heading', 00H
	ORG $+3
$SG19869 DB	'Enter Finish Line Longitude', 00H
$SG19871 DB	'Enter Finish Line Latitude', 00H
	ORG $+1
$SG19873 DB	'Enter Finish Line Heading', 00H
	ORG $+2
$SG19874 DB	'%f', 00H
	ORG $+1
$SG19944 DB	'Settings Error', 00H
	ORG $+1
$SG19945 DB	'The values you entered are not', 00H
	ORG $+1
$SG19946 DB	'valid start/finish coordinates.', 00H
$SG19947 DB	'Would you like to auto-fix or go back?', 00H
	ORG $+1
$SG19948 DB	'Auto-fix', 00H
	ORG $+3
$SG19949 DB	'Go Back', 00H
$SG19958 DB	'Run Without', 00H
$SG20100 DB	'Cancel', 00H
	ORG $+1
$SG20110 DB	'Waiting for', 00H
$SG20111 DB	'satellite signal', 00H
_DATA	ENDS
PUBLIC	_SFScreensCallback
PUBLIC	_DisplaySFKeyboard
EXTRN	_CreateKeyboard:PROC
EXTRN	_trim:PROC
EXTRN	_sprintf:PROC
EXTRN	_trackData:BYTE
EXTRN	_WM_CreateWindow:PROC
EXTRN	_SetLastScreen:PROC
EXTRN	_DestroyKeyboard:PROC
EXTRN	_WM_DeleteWindow:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\sfscreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _DisplaySFKeyboard
_TEXT	SEGMENT
tv78 = -244						; size = 4
_id$ = -44						; size = 4
_size$ = -32						; size = 4
_pTitle$ = -20						; size = 4
_fData$ = -8						; size = 4
_screenID$ = 8						; size = 4
_hPrev$ = 12						; size = 4
_DisplaySFKeyboard PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 165
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN13@DisplaySFK
; Line 166
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN13@DisplaySFK:
; Line 168
	cmp	DWORD PTR _pSFKeyboard, 0
	je	SHORT $LN12@DisplaySFK
; Line 169
	mov	eax, DWORD PTR _pSFKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
$LN12@DisplaySFK:
; Line 171
	mov	eax, DWORD PTR _screenID$[ebp]
	push	eax
	push	21					; 00000015H
	call	_SetLastScreen
	add	esp, 8
; Line 172
	push	0
	push	OFFSET _SFScreensCallback
	push	2
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hSFScreen, eax
; Line 174
	mov	eax, DWORD PTR _screenID$[ebp]
	mov	DWORD PTR tv78[ebp], eax
	mov	ecx, DWORD PTR tv78[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv78[ebp], ecx
	cmp	DWORD PTR tv78[ebp], 7
	ja	SHORT $LN9@DisplaySFK
	mov	edx, DWORD PTR tv78[ebp]
	jmp	DWORD PTR $LN16@DisplaySFK[edx*4]
$LN9@DisplaySFK:
; Line 178
	fld	QWORD PTR _trackData+24
	fstp	DWORD PTR _fData$[ebp]
; Line 179
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19857
; Line 180
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 181
	mov	DWORD PTR _id$[ebp], 0
; Line 182
	jmp	$LN10@DisplaySFK
$LN8@DisplaySFK:
; Line 184
	fld	QWORD PTR _trackData+16
	fstp	DWORD PTR _fData$[ebp]
; Line 185
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19859
; Line 186
	mov	DWORD PTR _size$[ebp], 11		; 0000000bH
; Line 187
	mov	DWORD PTR _id$[ebp], 1
; Line 188
	jmp	$LN10@DisplaySFK
$LN7@DisplaySFK:
; Line 190
	fld	DWORD PTR _trackData+36
	fstp	DWORD PTR _fData$[ebp]
; Line 191
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19861
; Line 192
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 193
	mov	DWORD PTR _id$[ebp], 2
; Line 194
	jmp	$LN10@DisplaySFK
$LN6@DisplaySFK:
; Line 196
	fld	QWORD PTR _trackData+24
	fstp	DWORD PTR _fData$[ebp]
; Line 197
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19863
; Line 198
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 199
	mov	DWORD PTR _id$[ebp], 3
; Line 200
	jmp	$LN10@DisplaySFK
$LN5@DisplaySFK:
; Line 202
	fld	QWORD PTR _trackData+16
	fstp	DWORD PTR _fData$[ebp]
; Line 203
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19865
; Line 204
	mov	DWORD PTR _size$[ebp], 11		; 0000000bH
; Line 205
	mov	DWORD PTR _id$[ebp], 4
; Line 206
	jmp	SHORT $LN10@DisplaySFK
$LN4@DisplaySFK:
; Line 208
	fld	DWORD PTR _trackData+36
	fstp	DWORD PTR _fData$[ebp]
; Line 209
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19867
; Line 210
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 211
	mov	DWORD PTR _id$[ebp], 5
; Line 212
	jmp	SHORT $LN10@DisplaySFK
$LN3@DisplaySFK:
; Line 214
	fld	QWORD PTR _trackData+48
	fstp	DWORD PTR _fData$[ebp]
; Line 215
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19869
; Line 216
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 217
	mov	DWORD PTR _id$[ebp], 6
; Line 218
	jmp	SHORT $LN10@DisplaySFK
$LN2@DisplaySFK:
; Line 220
	fld	QWORD PTR _trackData+40
	fstp	DWORD PTR _fData$[ebp]
; Line 221
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19871
; Line 222
	mov	DWORD PTR _size$[ebp], 11		; 0000000bH
; Line 223
	mov	DWORD PTR _id$[ebp], 7
; Line 224
	jmp	SHORT $LN10@DisplaySFK
$LN1@DisplaySFK:
; Line 226
	fld	DWORD PTR _trackData+60
	fstp	DWORD PTR _fData$[ebp]
; Line 227
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19873
; Line 228
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 229
	mov	DWORD PTR _id$[ebp], 8
$LN10@DisplaySFK:
; Line 233
	fld	DWORD PTR _fData$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG19874
	push	OFFSET _WorkString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 234
	push	OFFSET _WorkString
	call	_trim
	add	esp, 4
; Line 235
	push	1
	mov	eax, DWORD PTR _hSFScreen
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	push	1
	push	2
	push	OFFSET _WorkString
	mov	eax, DWORD PTR _pTitle$[ebp]
	push	eax
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pSFKeyboard, eax
; Line 236
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@DisplaySFK:
	DD	$LN8@DisplaySFK
	DD	$LN7@DisplaySFK
	DD	$LN6@DisplaySFK
	DD	$LN5@DisplaySFK
	DD	$LN4@DisplaySFK
	DD	$LN3@DisplaySFK
	DD	$LN2@DisplaySFK
	DD	$LN1@DisplaySFK
_DisplaySFKeyboard ENDP
_TEXT	ENDS
PUBLIC	_SFScreensSaveData
EXTRN	_alteredTrackData:BYTE
EXTRN	_atof:PROC
EXTRN	_GetLastScreen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SFScreensSaveData
_TEXT	SEGMENT
tv66 = -196						; size = 4
_SFScreensSaveData PROC					; COMDAT
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 240
	push	21					; 00000015H
	call	_GetLastScreen
	add	esp, 4
	mov	DWORD PTR tv66[ebp], eax
	cmp	DWORD PTR tv66[ebp], 8
	ja	$LN7@SFScreensS
	mov	eax, DWORD PTR tv66[ebp]
	jmp	DWORD PTR $LN11@SFScreensS[eax*4]
$LN6@SFScreensS:
; Line 244
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	QWORD PTR _trackData+24
; Line 245
	jmp	SHORT $LN7@SFScreensS
$LN5@SFScreensS:
; Line 249
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	QWORD PTR _trackData+16
; Line 250
	jmp	SHORT $LN7@SFScreensS
$LN4@SFScreensS:
; Line 254
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	DWORD PTR _trackData+36
; Line 255
	jmp	SHORT $LN7@SFScreensS
$LN3@SFScreensS:
; Line 258
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	QWORD PTR _trackData+48
; Line 259
	jmp	SHORT $LN7@SFScreensS
$LN2@SFScreensS:
; Line 262
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	QWORD PTR _trackData+40
; Line 263
	jmp	SHORT $LN7@SFScreensS
$LN1@SFScreensS:
; Line 266
	push	OFFSET _WorkString
	call	_atof
	add	esp, 4
	fstp	DWORD PTR _trackData+60
$LN7@SFScreensS:
; Line 270
	mov	BYTE PTR _alteredTrackData, 1
; Line 271
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@SFScreensS:
	DD	$LN6@SFScreensS
	DD	$LN5@SFScreensS
	DD	$LN4@SFScreensS
	DD	$LN6@SFScreensS
	DD	$LN5@SFScreensS
	DD	$LN4@SFScreensS
	DD	$LN3@SFScreensS
	DD	$LN2@SFScreensS
	DD	$LN1@SFScreensS
_SFScreensSaveData ENDP
_TEXT	ENDS
PUBLIC	_SFScreensIgnoreNextKeyRelease
PUBLIC	_DeleteSFScreensKeyboards
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_DisplayNewScreenList:PROC
_BSS	SEGMENT
_hSFScreens DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _SFScreensCallback
_TEXT	SEGMENT
tv64 = -196						; size = 4
_pMsg$ = 8						; size = 4
_SFScreensCallback PROC					; COMDAT
; Line 274
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 275
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	jg	SHORT $LN13@SFScreensC
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	je	SHORT $LN8@SFScreensC
	cmp	DWORD PTR tv64[ebp], 1
	je	$LN3@SFScreensC
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	$LN2@SFScreensC
	cmp	DWORD PTR tv64[ebp], 26			; 0000001aH
	je	SHORT $LN7@SFScreensC
	jmp	$LN1@SFScreensC
$LN13@SFScreensC:
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	SHORT $LN6@SFScreensC
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN5@SFScreensC
	jmp	$LN1@SFScreensC
$LN8@SFScreensC:
; Line 278
	call	_DeleteSFScreensKeyboards
; Line 279
	mov	eax, DWORD PTR _hSFScreens
	push	eax
	push	13					; 0000000dH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 280
	jmp	SHORT $LN11@SFScreensC
$LN7@SFScreensC:
; Line 283
	call	_SFScreensSaveData
; Line 284
	jmp	SHORT $LN11@SFScreensC
$LN6@SFScreensC:
; Line 287
	call	_SFScreensSaveData
; Line 288
	call	_DeleteSFScreensKeyboards
; Line 289
	mov	eax, DWORD PTR _hSFScreens
	push	eax
	push	13					; 0000000dH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	13					; 0000000dH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 290
	jmp	SHORT $LN11@SFScreensC
$LN5@SFScreensC:
; Line 293
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN4@SFScreensC
; Line 295
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 296
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN4@SFScreensC:
; Line 298
	jmp	SHORT $LN11@SFScreensC
$LN3@SFScreensC:
; Line 301
	call	_SFScreensIgnoreNextKeyRelease
; Line 302
	jmp	SHORT $LN11@SFScreensC
$LN2@SFScreensC:
; Line 305
	call	_DeleteSFScreensKeyboards
; Line 306
	jmp	SHORT $LN11@SFScreensC
$LN1@SFScreensC:
; Line 309
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN11@SFScreensC:
; Line 311
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SFScreensCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SFScreensIgnoreNextKeyRelease
_TEXT	SEGMENT
_SFScreensIgnoreNextKeyRelease PROC			; COMDAT
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 316
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SFScreensIgnoreNextKeyRelease ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DeleteSFScreensKeyboards
_TEXT	SEGMENT
_DeleteSFScreensKeyboards PROC				; COMDAT
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 320
	cmp	DWORD PTR _pSFKeyboard, 0
	je	SHORT $LN2@DeleteSFSc
; Line 322
	mov	eax, DWORD PTR _pSFKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 323
	mov	DWORD PTR _pSFKeyboard, 0
$LN2@DeleteSFSc:
; Line 325
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DeleteSFScreensKeyboards ENDP
_TEXT	ENDS
PUBLIC	__real@43b40000
PUBLIC	__real@00000000
PUBLIC	_InvalidSFDataPopUp
PUBLIC	__real@4056800000000000
PUBLIC	__real@c056800000000000
PUBLIC	__real@4066800000000000
PUBLIC	__real@c066800000000000
PUBLIC	__real@4076800000000000
PUBLIC	__real@0000000000000000
PUBLIC	_ValidateSFCoordinates
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@4056800000000000
CONST	SEGMENT
__real@4056800000000000 DQ 04056800000000000r	; 90
CONST	ENDS
;	COMDAT __real@c056800000000000
CONST	SEGMENT
__real@c056800000000000 DQ 0c056800000000000r	; -90
CONST	ENDS
;	COMDAT __real@4066800000000000
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@c066800000000000
CONST	SEGMENT
__real@c066800000000000 DQ 0c066800000000000r	; -180
CONST	ENDS
;	COMDAT __real@4076800000000000
CONST	SEGMENT
__real@4076800000000000 DQ 04076800000000000r	; 360
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ValidateSFCoordinates
_TEXT	SEGMENT
_results$ = -5						; size = 1
_ValidateSFCoordinates PROC				; COMDAT
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 329
	mov	BYTE PTR _results$[ebp], 1
; Line 331
	fld	DWORD PTR _trackData+36
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN32@ValidateSF
	fld	DWORD PTR _trackData+36
	fcomp	QWORD PTR __real@4076800000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN33@ValidateSF
$LN32@ValidateSF:
; Line 332
	mov	BYTE PTR _results$[ebp], 0
$LN33@ValidateSF:
; Line 333
	fld	QWORD PTR __real@c066800000000000
	fcomp	QWORD PTR _trackData+24
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN30@ValidateSF
	fld	QWORD PTR __real@4066800000000000
	fcomp	QWORD PTR _trackData+24
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN31@ValidateSF
$LN30@ValidateSF:
; Line 334
	mov	BYTE PTR _results$[ebp], 0
$LN31@ValidateSF:
; Line 335
	fld	QWORD PTR __real@c056800000000000
	fcomp	QWORD PTR _trackData+16
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN28@ValidateSF
	fld	QWORD PTR __real@4056800000000000
	fcomp	QWORD PTR _trackData+16
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN29@ValidateSF
$LN28@ValidateSF:
; Line 336
	mov	BYTE PTR _results$[ebp], 0
$LN29@ValidateSF:
; Line 337
	fld	DWORD PTR _trackData+60
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN26@ValidateSF
	fld	DWORD PTR _trackData+60
	fcomp	QWORD PTR __real@4076800000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN27@ValidateSF
$LN26@ValidateSF:
; Line 338
	mov	BYTE PTR _results$[ebp], 0
$LN27@ValidateSF:
; Line 339
	fld	QWORD PTR __real@c066800000000000
	fcomp	QWORD PTR _trackData+48
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN24@ValidateSF
	fld	QWORD PTR __real@4066800000000000
	fcomp	QWORD PTR _trackData+48
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN25@ValidateSF
$LN24@ValidateSF:
; Line 340
	mov	BYTE PTR _results$[ebp], 0
$LN25@ValidateSF:
; Line 341
	fld	QWORD PTR __real@c056800000000000
	fcomp	QWORD PTR _trackData+40
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN22@ValidateSF
	fld	QWORD PTR __real@4056800000000000
	fcomp	QWORD PTR _trackData+40
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN23@ValidateSF
$LN22@ValidateSF:
; Line 342
	mov	BYTE PTR _results$[ebp], 0
$LN23@ValidateSF:
; Line 344
	movzx	eax, BYTE PTR _results$[ebp]
	test	eax, eax
	jne	$LN19@ValidateSF
; Line 346
	call	_InvalidSFDataPopUp
	cmp	eax, 2
	jne	SHORT $LN20@ValidateSF
; Line 347
	xor	al, al
	jmp	$LN34@ValidateSF
; Line 348
	jmp	$LN19@ValidateSF
$LN20@ValidateSF:
; Line 351
	fld	DWORD PTR _trackData+36
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN18@ValidateSF
; Line 352
	fldz
	fstp	DWORD PTR _trackData+36
	jmp	SHORT $LN16@ValidateSF
$LN18@ValidateSF:
; Line 353
	fld	DWORD PTR _trackData+36
	fcomp	QWORD PTR __real@4076800000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN16@ValidateSF
; Line 354
	fld	DWORD PTR __real@43b40000
	fstp	DWORD PTR _trackData+36
$LN16@ValidateSF:
; Line 356
	fld	QWORD PTR __real@c066800000000000
	fcomp	QWORD PTR _trackData+24
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN15@ValidateSF
; Line 357
	fld	QWORD PTR __real@c066800000000000
	fstp	QWORD PTR _trackData+24
	jmp	SHORT $LN13@ValidateSF
$LN15@ValidateSF:
; Line 358
	fld	QWORD PTR __real@4066800000000000
	fcomp	QWORD PTR _trackData+24
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN13@ValidateSF
; Line 359
	fld	QWORD PTR __real@4066800000000000
	fstp	QWORD PTR _trackData+24
$LN13@ValidateSF:
; Line 361
	fld	QWORD PTR __real@c056800000000000
	fcomp	QWORD PTR _trackData+16
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN12@ValidateSF
; Line 362
	fld	QWORD PTR __real@c056800000000000
	fstp	QWORD PTR _trackData+16
	jmp	SHORT $LN10@ValidateSF
$LN12@ValidateSF:
; Line 363
	fld	QWORD PTR __real@4056800000000000
	fcomp	QWORD PTR _trackData+16
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN10@ValidateSF
; Line 364
	fld	QWORD PTR __real@4056800000000000
	fstp	QWORD PTR _trackData+16
$LN10@ValidateSF:
; Line 366
	fld	DWORD PTR _trackData+60
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@ValidateSF
; Line 367
	fldz
	fstp	DWORD PTR _trackData+60
	jmp	SHORT $LN7@ValidateSF
$LN9@ValidateSF:
; Line 368
	fld	DWORD PTR _trackData+60
	fcomp	QWORD PTR __real@4076800000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN7@ValidateSF
; Line 369
	fld	DWORD PTR __real@43b40000
	fstp	DWORD PTR _trackData+60
$LN7@ValidateSF:
; Line 371
	fld	QWORD PTR __real@c066800000000000
	fcomp	QWORD PTR _trackData+48
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN6@ValidateSF
; Line 372
	fld	QWORD PTR __real@c066800000000000
	fstp	QWORD PTR _trackData+48
	jmp	SHORT $LN4@ValidateSF
$LN6@ValidateSF:
; Line 373
	fld	QWORD PTR __real@4066800000000000
	fcomp	QWORD PTR _trackData+48
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@ValidateSF
; Line 374
	fld	QWORD PTR __real@4066800000000000
	fstp	QWORD PTR _trackData+48
$LN4@ValidateSF:
; Line 376
	fld	QWORD PTR __real@c056800000000000
	fcomp	QWORD PTR _trackData+40
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN3@ValidateSF
; Line 377
	fld	QWORD PTR __real@c056800000000000
	fstp	QWORD PTR _trackData+40
	jmp	SHORT $LN1@ValidateSF
$LN3@ValidateSF:
; Line 378
	fld	QWORD PTR __real@4056800000000000
	fcomp	QWORD PTR _trackData+40
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@ValidateSF
; Line 379
	fld	QWORD PTR __real@4056800000000000
	fstp	QWORD PTR _trackData+40
$LN1@ValidateSF:
; Line 381
	mov	al, 1
	jmp	SHORT $LN34@ValidateSF
$LN19@ValidateSF:
; Line 384
	mov	al, 1
$LN34@ValidateSF:
; Line 385
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateSFCoordinates ENDP
_TEXT	ENDS
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_SetPopupDefaults:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InvalidSFDataPopUp
_TEXT	SEGMENT
_InvalidSFDataPopUp PROC				; COMDAT
; Line 403
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 404
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 405
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _InvalidSFResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 406
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InvalidSFDataPopUp ENDP
_TEXT	ENDS
PUBLIC	_DisplayWaitingForCameraScreen
EXTRN	_WM_CreateTimer:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_BUTTON_SetTextColor:PROC
EXTRN	_BUTTON_SetText:PROC
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_bmBlueButton:BYTE
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_SystemError:PROC
_BSS	SEGMENT
_totalWaitForCameraTime DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayWaitingForCameraScreen
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hPrev$ = 8						; size = 4
_DisplayWaitingForCameraScreen PROC			; COMDAT
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 417
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@DisplayWai
; Line 418
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@DisplayWai:
; Line 420
	push	0
	push	OFFSET _WaitingForCameraCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hWaitingForCamera, eax
	cmp	DWORD PTR _hWaitingForCamera, 0
	jg	SHORT $LN1@DisplayWai
; Line 421
	call	_SystemError
$LN1@DisplayWai:
; Line 423
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hWaitingForCamera
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	200					; 000000c8H
	push	139					; 0000008bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 424
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 425
	push	OFFSET $SG19958
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 426
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 428
	push	25					; 00000019H
	call	_SetScreenType
	add	esp, 4
; Line 429
	push	0
	push	500					; 000001f4H
	push	0
	mov	eax, DWORD PTR _hWaitingForCamera
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hWaitForCameraTimer, eax
; Line 430
	mov	DWORD PTR _totalWaitForCameraTime, 0
; Line 431
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayWaitingForCameraScreen ENDP
_TEXT	ENDS
EXTRN	_GetValue:PROC
EXTRN	_bmleftarrow:BYTE
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmWaitingForCamera:BYTE
EXTRN	_GUI_Clear:PROC
EXTRN	_GoRacingStateMachine:PROC
EXTRN	_raceModeState:DWORD
EXTRN	_GaugeScreensIgnoreNextKeyRelease:PROC
EXTRN	_WM_GetId:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WaitingForCameraCallback
_TEXT	SEGMENT
$T20227 = -204						; size = 8
_pMsg$ = 8						; size = 4
_WaitingForCameraCallback PROC				; COMDAT
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 435
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 38			; 00000026H
	jne	SHORT $LN13@WaitingFor
; Line 437
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN12@WaitingFor
; Line 438
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 2051				; 00000803H
	jne	SHORT $LN12@WaitingFor
; Line 440
	call	_GaugeScreensIgnoreNextKeyRelease
; Line 441
	mov	DWORD PTR _raceModeState, 7
; Line 442
	mov	eax, DWORD PTR _hWaitingForCamera
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
$LN12@WaitingFor:
; Line 443
	jmp	$LN14@WaitingFor
$LN13@WaitingFor:
; Line 445
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN9@WaitingFor
; Line 447
	call	_GUI_Clear
; Line 448
	push	10					; 0000000aH
	push	18					; 00000012H
	push	OFFSET _bmWaitingForCamera
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 449
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	$LN14@WaitingFor
$LN9@WaitingFor:
; Line 451
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 275			; 00000113H
	jne	$LN7@WaitingFor
; Line 453
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hWaitForCameraTimer
	jne	$LN6@WaitingFor
; Line 455
	push	75					; 0000004bH
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T20227[ebp], eax
	mov	DWORD PTR $T20227[ebp+4], edx
	cmp	DWORD PTR $T20227[ebp], 3
	jne	SHORT $LN5@WaitingFor
; Line 457
	mov	DWORD PTR _raceModeState, 7
; Line 458
	mov	eax, DWORD PTR _hWaitingForCamera
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 460
	jmp	SHORT $LN6@WaitingFor
$LN5@WaitingFor:
; Line 464
	mov	eax, DWORD PTR _totalWaitForCameraTime
	add	eax, 500				; 000001f4H
	mov	DWORD PTR _totalWaitForCameraTime, eax
; Line 465
	cmp	DWORD PTR _totalWaitForCameraTime, 10000 ; 00002710H
	jle	SHORT $LN3@WaitingFor
; Line 467
	mov	DWORD PTR _raceModeState, 7
; Line 468
	mov	eax, DWORD PTR _hWaitingForCamera
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 470
	jmp	SHORT $LN6@WaitingFor
$LN3@WaitingFor:
; Line 472
	push	500					; 000001f4H
	mov	eax, DWORD PTR _hWaitForCameraTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 473
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN6@WaitingFor:
; Line 476
	jmp	SHORT $LN14@WaitingFor
$LN7@WaitingFor:
; Line 478
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN14@WaitingFor:
; Line 479
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WaitingForCameraCallback ENDP
_TEXT	ENDS
PUBLIC	_SetGaugeButtonGraphics
PUBLIC	_DisplayAutoXStageScreen
EXTRN	_bmAutocrossTouchToStage:BYTE
EXTRN	_screen_scrolling:DWORD
_BSS	SEGMENT
_hStageScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayAutoXStageScreen
_TEXT	SEGMENT
_hPrev$ = 8						; size = 4
_DisplayAutoXStageScreen PROC				; COMDAT
; Line 482
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 484
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@DisplayAut
; Line 485
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@DisplayAut:
; Line 487
	mov	DWORD PTR _screen_scrolling, 2
; Line 488
	push	29					; 0000001dH
	call	_SetScreenType
	add	esp, 4
; Line 490
	push	0
	push	OFFSET _StageScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hStageScreen, eax
	cmp	DWORD PTR _hStageScreen, 0
	jg	SHORT $LN1@DisplayAut
; Line 491
	call	_SystemError
$LN1@DisplayAut:
; Line 493
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	272					; 00000110H
	push	270					; 0000010eH
	push	0
	push	210					; 000000d2H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStageButton, eax
; Line 494
	push	OFFSET _bmAutocrossTouchToStage
	push	0
	mov	eax, DWORD PTR _hStageButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 495
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	29					; 0000001dH
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hSweepTachButton, eax
; Line 496
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	97					; 00000061H
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalogGaugeButton, eax
; Line 497
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	164					; 000000a4H
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hDigitalGaugeButton, eax
; Line 499
	call	_SetGaugeButtonGraphics
; Line 500
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayAutoXStageScreen ENDP
_TEXT	ENDS
PUBLIC	_SetDistanceButtonGraphics
EXTRN	_bmDragStageBackground:BYTE
EXTRN	_bmAutocrossStageBackground:BYTE
EXTRN	_sysData:BYTE
EXTRN	_selectedRaceMode:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _StageScreenCallback
_TEXT	SEGMENT
tv70 = -196						; size = 4
_pMsg$ = 8						; size = 4
_StageScreenCallback PROC				; COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 505
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 38			; 00000026H
	jne	$LN22@StageScree
; Line 507
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	$LN21@StageScree
; Line 509
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR tv70[ebp], eax
	mov	edx, DWORD PTR tv70[ebp]
	sub	edx, 2052				; 00000804H
	mov	DWORD PTR tv70[ebp], edx
	cmp	DWORD PTR tv70[ebp], 7
	ja	$LN21@StageScree
	mov	eax, DWORD PTR tv70[ebp]
	jmp	DWORD PTR $LN25@StageScree[eax*4]
$LN18@StageScree:
; Line 513
	call	_GaugeScreensIgnoreNextKeyRelease
; Line 516
	mov	DWORD PTR _raceModeState, 9
; Line 517
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 518
	jmp	$LN21@StageScree
$LN17@StageScree:
; Line 520
	cmp	DWORD PTR _selectedRaceMode, 4
	jne	SHORT $LN16@StageScree
; Line 521
	mov	BYTE PTR _sysData+210, 0
	jmp	SHORT $LN15@StageScree
$LN16@StageScree:
; Line 522
	mov	BYTE PTR _sysData+212, 0
$LN15@StageScree:
; Line 523
	call	_SetGaugeButtonGraphics
; Line 524
	jmp	SHORT $LN21@StageScree
$LN14@StageScree:
; Line 526
	cmp	DWORD PTR _selectedRaceMode, 4
	jne	SHORT $LN13@StageScree
; Line 527
	mov	BYTE PTR _sysData+210, 1
	jmp	SHORT $LN12@StageScree
$LN13@StageScree:
; Line 528
	mov	BYTE PTR _sysData+212, 1
$LN12@StageScree:
; Line 529
	call	_SetGaugeButtonGraphics
; Line 530
	jmp	SHORT $LN21@StageScree
$LN11@StageScree:
; Line 532
	cmp	DWORD PTR _selectedRaceMode, 4
	jne	SHORT $LN10@StageScree
; Line 533
	mov	BYTE PTR _sysData+210, 2
	jmp	SHORT $LN9@StageScree
$LN10@StageScree:
; Line 534
	mov	BYTE PTR _sysData+212, 2
$LN9@StageScree:
; Line 535
	call	_SetGaugeButtonGraphics
; Line 536
	jmp	SHORT $LN21@StageScree
$LN8@StageScree:
; Line 538
	mov	BYTE PTR _sysData+214, 2
; Line 539
	call	_SetDistanceButtonGraphics
; Line 540
	jmp	SHORT $LN21@StageScree
$LN7@StageScree:
; Line 543
	mov	BYTE PTR _sysData+214, 1
; Line 544
	call	_SetDistanceButtonGraphics
; Line 545
	jmp	SHORT $LN21@StageScree
$LN6@StageScree:
; Line 548
	mov	BYTE PTR _sysData+214, 0
; Line 549
	call	_SetDistanceButtonGraphics
$LN21@StageScree:
; Line 552
	jmp	SHORT $LN23@StageScree
$LN22@StageScree:
; Line 554
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN4@StageScree
; Line 556
	call	_GUI_Clear
; Line 557
	cmp	DWORD PTR _selectedRaceMode, 1
	jne	SHORT $LN3@StageScree
; Line 558
	push	0
	push	0
	push	OFFSET _bmAutocrossStageBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN2@StageScree
$LN3@StageScree:
; Line 559
	push	0
	push	0
	push	OFFSET _bmDragStageBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
$LN2@StageScree:
; Line 560
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN23@StageScree
$LN4@StageScree:
; Line 562
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN23@StageScree:
; Line 563
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@StageScree:
	DD	$LN17@StageScree
	DD	$LN14@StageScree
	DD	$LN11@StageScree
	DD	$LN18@StageScree
	DD	$LN21@StageScree
	DD	$LN8@StageScree
	DD	$LN7@StageScree
	DD	$LN6@StageScree
_StageScreenCallback ENDP
_TEXT	ENDS
PUBLIC	_DisplayDragStageScreen
EXTRN	_bmDragTouchToStage:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayDragStageScreen
_TEXT	SEGMENT
_hPrev$ = 8						; size = 4
_DisplayDragStageScreen PROC				; COMDAT
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 568
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@DisplayDra
; Line 569
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@DisplayDra:
; Line 571
	mov	DWORD PTR _screen_scrolling, 2
; Line 572
	push	29					; 0000001dH
	call	_SetScreenType
	add	esp, 4
; Line 574
	push	0
	push	OFFSET _StageScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hStageScreen, eax
	cmp	DWORD PTR _hStageScreen, 0
	jg	SHORT $LN1@DisplayDra
; Line 575
	call	_SystemError
$LN1@DisplayDra:
; Line 577
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	272					; 00000110H
	push	270					; 0000010eH
	push	0
	push	210					; 000000d2H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hStageButton, eax
; Line 578
	push	OFFSET _bmDragTouchToStage
	push	0
	mov	eax, DWORD PTR _hStageButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 579
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	29					; 0000001dH
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hSweepTachButton, eax
; Line 580
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	97					; 00000061H
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalogGaugeButton, eax
; Line 581
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	66					; 00000042H
	push	103					; 00000067H
	push	164					; 000000a4H
	push	24					; 00000018H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hDigitalGaugeButton, eax
; Line 582
	call	_SetGaugeButtonGraphics
; Line 584
	push	2057					; 00000809H
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	65					; 00000041H
	push	72					; 00000048H
	push	29					; 0000001dH
	push	131					; 00000083H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _h1_8thMile, eax
; Line 585
	push	2059					; 0000080bH
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	65					; 00000041H
	push	72					; 00000048H
	push	97					; 00000061H
	push	131					; 00000083H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _h1_4Mile, eax
; Line 586
	push	2058					; 0000080aH
	push	0
	push	2
	mov	eax, DWORD PTR _hStageScreen
	push	eax
	push	65					; 00000041H
	push	72					; 00000048H
	push	164					; 000000a4H
	push	131					; 00000083H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _h1000ft, eax
; Line 587
	call	_SetDistanceButtonGraphics
; Line 588
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayDragStageScreen ENDP
_TEXT	ENDS
EXTRN	_bmOneQuarterOn:BYTE
EXTRN	_bmOneEighthOff:BYTE
EXTRN	_bmOneThousandOn:BYTE
EXTRN	_bmOneEighthOn:BYTE
EXTRN	_bmOneThousandOff:BYTE
EXTRN	_bmOneQuarterOff:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDistanceButtonGraphics
_TEXT	SEGMENT
_SetDistanceButtonGraphics PROC				; COMDAT
; Line 592
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 593
	movzx	eax, BYTE PTR _sysData+214
	cmp	eax, 2
	jne	SHORT $LN4@SetDistanc
; Line 595
	push	OFFSET _bmOneQuarterOff
	push	0
	mov	eax, DWORD PTR _h1_4Mile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 596
	push	OFFSET _bmOneThousandOff
	push	0
	mov	eax, DWORD PTR _h1000ft
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 597
	push	OFFSET _bmOneEighthOn
	push	0
	mov	eax, DWORD PTR _h1_8thMile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	$LN5@SetDistanc
$LN4@SetDistanc:
; Line 599
	movzx	eax, BYTE PTR _sysData+214
	cmp	eax, 1
	jne	SHORT $LN2@SetDistanc
; Line 601
	push	OFFSET _bmOneQuarterOff
	push	0
	mov	eax, DWORD PTR _h1_4Mile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 602
	push	OFFSET _bmOneThousandOn
	push	0
	mov	eax, DWORD PTR _h1000ft
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 603
	push	OFFSET _bmOneEighthOff
	push	0
	mov	eax, DWORD PTR _h1_8thMile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 605
	jmp	SHORT $LN5@SetDistanc
$LN2@SetDistanc:
; Line 607
	push	OFFSET _bmOneQuarterOn
	push	0
	mov	eax, DWORD PTR _h1_4Mile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 608
	push	OFFSET _bmOneThousandOff
	push	0
	mov	eax, DWORD PTR _h1000ft
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 609
	push	OFFSET _bmOneEighthOff
	push	0
	mov	eax, DWORD PTR _h1_8thMile
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN5@SetDistanc:
; Line 611
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDistanceButtonGraphics ENDP
_TEXT	ENDS
EXTRN	_bmAutoXDigitalGaugeButtonOn:BYTE
EXTRN	_bmAutoXAnalogGaugeButtonOn:BYTE
EXTRN	_bmAutoXSweepTachButtonOn:BYTE
EXTRN	_bmDigitalGaugeButtonOff:BYTE
EXTRN	_bmDragDigitalGaugeButtonOn:BYTE
EXTRN	_bmAnalogGaugeButtonOff:BYTE
EXTRN	_bmDragAnalogGaugeButtonOn:BYTE
EXTRN	_bmSweepTachButtonOff:BYTE
EXTRN	_bmDragSweepTachButtonOn:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetGaugeButtonGraphics
_TEXT	SEGMENT
_selectedGauge$ = -8					; size = 4
_SetGaugeButtonGraphics PROC				; COMDAT
; Line 614
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 617
	cmp	DWORD PTR _selectedRaceMode, 4
	jne	$LN14@SetGaugeBu
; Line 619
	movzx	eax, BYTE PTR _sysData+210
	mov	DWORD PTR _selectedGauge$[ebp], eax
; Line 621
	cmp	DWORD PTR _selectedGauge$[ebp], 0
	jne	SHORT $LN13@SetGaugeBu
; Line 622
	push	OFFSET _bmDragSweepTachButtonOn
	push	0
	mov	eax, DWORD PTR _hSweepTachButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN12@SetGaugeBu
$LN13@SetGaugeBu:
; Line 623
	push	OFFSET _bmSweepTachButtonOff
	push	0
	mov	eax, DWORD PTR _hSweepTachButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN12@SetGaugeBu:
; Line 624
	cmp	DWORD PTR _selectedGauge$[ebp], 1
	jne	SHORT $LN11@SetGaugeBu
; Line 625
	push	OFFSET _bmDragAnalogGaugeButtonOn
	push	0
	mov	eax, DWORD PTR _hAnalogGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN10@SetGaugeBu
$LN11@SetGaugeBu:
; Line 626
	push	OFFSET _bmAnalogGaugeButtonOff
	push	0
	mov	eax, DWORD PTR _hAnalogGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN10@SetGaugeBu:
; Line 627
	cmp	DWORD PTR _selectedGauge$[ebp], 2
	jne	SHORT $LN9@SetGaugeBu
; Line 628
	push	OFFSET _bmDragDigitalGaugeButtonOn
	push	0
	mov	eax, DWORD PTR _hDigitalGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN8@SetGaugeBu
$LN9@SetGaugeBu:
; Line 629
	push	OFFSET _bmDigitalGaugeButtonOff
	push	0
	mov	eax, DWORD PTR _hDigitalGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN8@SetGaugeBu:
; Line 631
	jmp	$LN15@SetGaugeBu
$LN14@SetGaugeBu:
; Line 633
	movzx	eax, BYTE PTR _sysData+212
	mov	DWORD PTR _selectedGauge$[ebp], eax
; Line 635
	cmp	DWORD PTR _selectedGauge$[ebp], 0
	jne	SHORT $LN6@SetGaugeBu
; Line 636
	push	OFFSET _bmAutoXSweepTachButtonOn
	push	0
	mov	eax, DWORD PTR _hSweepTachButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@SetGaugeBu
$LN6@SetGaugeBu:
; Line 637
	push	OFFSET _bmSweepTachButtonOff
	push	0
	mov	eax, DWORD PTR _hSweepTachButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN5@SetGaugeBu:
; Line 638
	cmp	DWORD PTR _selectedGauge$[ebp], 1
	jne	SHORT $LN4@SetGaugeBu
; Line 639
	push	OFFSET _bmAutoXAnalogGaugeButtonOn
	push	0
	mov	eax, DWORD PTR _hAnalogGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN3@SetGaugeBu
$LN4@SetGaugeBu:
; Line 640
	push	OFFSET _bmAnalogGaugeButtonOff
	push	0
	mov	eax, DWORD PTR _hAnalogGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN3@SetGaugeBu:
; Line 641
	cmp	DWORD PTR _selectedGauge$[ebp], 2
	jne	SHORT $LN2@SetGaugeBu
; Line 642
	push	OFFSET _bmAutoXDigitalGaugeButtonOn
	push	0
	mov	eax, DWORD PTR _hDigitalGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN15@SetGaugeBu
$LN2@SetGaugeBu:
; Line 643
	push	OFFSET _bmDigitalGaugeButtonOff
	push	0
	mov	eax, DWORD PTR _hDigitalGaugeButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN15@SetGaugeBu:
; Line 645
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetGaugeButtonGraphics ENDP
_TEXT	ENDS
PUBLIC	_DisplayLaunchScreen
EXTRN	_bmReadytoLaunchBurnout:BYTE
EXTRN	_bmReadyToLaunchCorvette:BYTE
_BSS	SEGMENT
_hLaunchScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayLaunchScreen
_TEXT	SEGMENT
_hPrev$ = 8						; size = 4
_DisplayLaunchScreen PROC				; COMDAT
; Line 652
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 653
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN4@DisplayLau
; Line 654
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN4@DisplayLau:
; Line 656
	mov	DWORD PTR _screen_scrolling, 2
; Line 657
	push	30					; 0000001eH
	call	_SetScreenType
	add	esp, 4
; Line 659
	push	0
	push	OFFSET _LaunchScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hLaunchScreen, eax
	cmp	DWORD PTR _hLaunchScreen, 0
	jg	SHORT $LN3@DisplayLau
; Line 660
	call	_SystemError
$LN3@DisplayLau:
; Line 663
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _hLaunchScreen
	push	eax
	push	167					; 000000a7H
	push	415					; 0000019fH
	push	40					; 00000028H
	push	20					; 00000014H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hLaunchButton, eax
; Line 664
	cmp	DWORD PTR _selectedRaceMode, 1
	jne	SHORT $LN2@DisplayLau
; Line 665
	push	OFFSET _bmReadyToLaunchCorvette
	push	0
	mov	eax, DWORD PTR _hLaunchButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@DisplayLau
$LN2@DisplayLau:
; Line 666
	push	OFFSET _bmReadytoLaunchBurnout
	push	0
	mov	eax, DWORD PTR _hLaunchButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN1@DisplayLau:
; Line 669
	push	0
	push	50					; 00000032H
	push	0
	mov	eax, DWORD PTR _hLaunchScreen
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hWaitForLaunchTimer, eax
; Line 670
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayLaunchScreen ENDP
_TEXT	ENDS
PUBLIC	_LaunchDetected
EXTRN	_unsavedSysData:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LaunchScreenCallback
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_LaunchScreenCallback PROC				; COMDAT
; Line 673
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 674
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN11@LaunchScre
; Line 676
	call	_GUI_Clear
; Line 682
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	$LN12@LaunchScre
$LN11@LaunchScre:
; Line 684
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 275			; 00000113H
	jne	SHORT $LN9@LaunchScre
; Line 686
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hWaitForLaunchTimer
	jne	SHORT $LN8@LaunchScre
; Line 688
	call	_LaunchDetected
	test	eax, eax
	je	SHORT $LN7@LaunchScre
; Line 691
	call	_GaugeScreensIgnoreNextKeyRelease
; Line 694
	mov	DWORD PTR _raceModeState, 10		; 0000000aH
; Line 695
	mov	eax, DWORD PTR _hLaunchScreen
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
	jmp	SHORT $LN8@LaunchScre
$LN7@LaunchScre:
; Line 697
	push	50					; 00000032H
	mov	eax, DWORD PTR _hWaitForLaunchTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
$LN8@LaunchScre:
; Line 698
	jmp	SHORT $LN12@LaunchScre
$LN9@LaunchScre:
; Line 701
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 38			; 00000026H
	jne	SHORT $LN4@LaunchScre
; Line 703
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN3@LaunchScre
; Line 705
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 2056				; 00000808H
	jne	SHORT $LN3@LaunchScre
; Line 707
	call	_GaugeScreensIgnoreNextKeyRelease
; Line 708
	mov	DWORD PTR _raceModeState, 10		; 0000000aH
; Line 709
	mov	eax, DWORD PTR _hLaunchScreen
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 710
	mov	DWORD PTR _unsavedSysData+136, 17	; 00000011H
$LN3@LaunchScre:
; Line 712
	jmp	SHORT $LN12@LaunchScre
$LN4@LaunchScre:
; Line 715
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN12@LaunchScre:
; Line 716
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LaunchScreenCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LaunchDetected
_TEXT	SEGMENT
_LaunchDetected PROC					; COMDAT
; Line 719
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 720
	cmp	DWORD PTR _unsavedSysData+136, 12	; 0000000cH
	je	SHORT $LN2@LaunchDete
	cmp	DWORD PTR _unsavedSysData+136, 17	; 00000011H
	je	SHORT $LN2@LaunchDete
	cmp	DWORD PTR _unsavedSysData+136, 13	; 0000000dH
	jne	SHORT $LN3@LaunchDete
$LN2@LaunchDete:
; Line 721
	mov	eax, 1
	jmp	SHORT $LN4@LaunchDete
	jmp	SHORT $LN4@LaunchDete
$LN3@LaunchDete:
; Line 722
	xor	eax, eax
$LN4@LaunchDete:
; Line 723
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_LaunchDetected ENDP
_TEXT	ENDS
PUBLIC	_DisplayTapAtSFScreen
EXTRN	_bmTapScreenAtSF:BYTE
_BSS	SEGMENT
_hTapAtSFScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayTapAtSFScreen
_TEXT	SEGMENT
_hButton$ = -8						; size = 4
_hPrev$ = 8						; size = 4
_DisplayTapAtSFScreen PROC				; COMDAT
; Line 727
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 730
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@DisplayTap
; Line 731
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@DisplayTap:
; Line 733
	mov	DWORD PTR _screen_scrolling, 2
; Line 734
	push	26					; 0000001aH
	call	_SetScreenType
	add	esp, 4
; Line 736
	push	0
	push	OFFSET _TapAtSFScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hTapAtSFScreen, eax
	cmp	DWORD PTR _hTapAtSFScreen, 0
	jg	SHORT $LN1@DisplayTap
; Line 737
	call	_SystemError
$LN1@DisplayTap:
; Line 741
	push	2049					; 00000801H
	push	0
	push	2
	mov	eax, DWORD PTR _hTapAtSFScreen
	push	eax
	push	272					; 00000110H
	push	440					; 000001b8H
	push	0
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 742
	push	OFFSET _bmTapScreenAtSF
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 743
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTapAtSFScreen ENDP
_TEXT	ENDS
PUBLIC	_GetSFWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSFWindowHandle
_TEXT	SEGMENT
_GetSFWindowHandle PROC					; COMDAT
; Line 746
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 747
	mov	eax, DWORD PTR _hTapAtSFScreen
; Line 748
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSFWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetLaunchScreenWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetLaunchScreenWindowHandle
_TEXT	SEGMENT
_GetLaunchScreenWindowHandle PROC			; COMDAT
; Line 752
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 753
	mov	eax, DWORD PTR _hLaunchScreen
; Line 754
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetLaunchScreenWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetStageWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetStageWindowHandle
_TEXT	SEGMENT
_GetStageWindowHandle PROC				; COMDAT
; Line 757
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 758
	mov	eax, DWORD PTR _hStageScreen
; Line 759
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetStageWindowHandle ENDP
_TEXT	ENDS
EXTRN	_StartPressed:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TapAtSFScreenCallback
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_TapAtSFScreenCallback PROC				; COMDAT
; Line 762
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 763
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 38			; 00000026H
	jne	SHORT $LN6@TapAtSFScr
; Line 765
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN5@TapAtSFScr
; Line 766
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 2049				; 00000801H
	jne	SHORT $LN5@TapAtSFScr
; Line 767
	mov	eax, DWORD PTR _hTapAtSFScreen
	push	eax
	call	_StartPressed
	add	esp, 4
$LN5@TapAtSFScr:
; Line 769
	jmp	SHORT $LN7@TapAtSFScr
$LN6@TapAtSFScr:
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN2@TapAtSFScr
; Line 771
	call	_GUI_Clear
; Line 772
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@TapAtSFScr
$LN2@TapAtSFScr:
; Line 774
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN7@TapAtSFScr:
; Line 775
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TapAtSFScreenCallback ENDP
_TEXT	ENDS
PUBLIC	_DisplayWaitingForSatellites
EXTRN	_BUTTON_SetFont:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
_BSS	SEGMENT
_hWaitingForSatellites DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayWaitingForSatellites
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_type$ = 8						; size = 4
_mode$ = 12						; size = 4
_hPrev$ = 16						; size = 4
_DisplayWaitingForSatellites PROC			; COMDAT
; Line 781
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 784
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR _typeSave, eax
	cmp	DWORD PTR _typeSave, 1
	jne	SHORT $LN4@DisplayWai@2
; Line 786
	mov	eax, DWORD PTR _hPrev$[ebp]
	mov	DWORD PTR _parentSave, eax
; Line 788
	jmp	SHORT $LN3@DisplayWai@2
$LN4@DisplayWai@2:
; Line 790
	mov	eax, DWORD PTR _mode$[ebp]
	mov	DWORD PTR _raceMode, eax
; Line 791
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN3@DisplayWai@2
; Line 792
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN3@DisplayWai@2:
; Line 795
	push	23					; 00000017H
	call	_SetScreenType
	add	esp, 4
; Line 797
	mov	DWORD PTR _screen_scrolling, 2
; Line 800
	push	0
	push	OFFSET _WaitingForSatellitesCallback
	push	2
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hWaitingForSatellites, eax
	cmp	DWORD PTR _hWaitingForSatellites, 0
	jg	SHORT $LN1@DisplayWai@2
; Line 801
	call	_SystemError
$LN1@DisplayWai@2:
; Line 803
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hWaitingForSatellites
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	200					; 000000c8H
	push	139					; 0000008bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 804
	push	OFFSET _GUI_Font24_ASCII
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 805
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 806
	push	OFFSET $SG20100
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 807
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 809
	push	0
	push	500					; 000001f4H
	push	0
	mov	eax, DWORD PTR _hWaitingForSatellites
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hWaitForSatelliteTimer, eax
; Line 810
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayWaitingForSatellites ENDP
_TEXT	ENDS
PUBLIC	_HaveSatelliteReception
PUBLIC	_KillWaitingForSatelliteScreen
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_bmGPSsignal:BYTE
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_SetFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WaitingForSatellitesCallback
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
_WaitingForSatellitesCallback PROC			; COMDAT
; Line 813
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 814
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 38			; 00000026H
	jne	SHORT $LN12@WaitingFor@2
; Line 816
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN11@WaitingFor@2
; Line 817
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	cmp	eax, 2050				; 00000802H
	jne	SHORT $LN11@WaitingFor@2
; Line 819
	cmp	DWORD PTR _typeSave, 1
	jne	SHORT $LN9@WaitingFor@2
; Line 820
	mov	DWORD PTR _sysData+180, 50000		; 0000c350H
$LN9@WaitingFor@2:
; Line 821
	push	0
	call	_KillWaitingForSatelliteScreen
	add	esp, 4
$LN11@WaitingFor@2:
; Line 822
	jmp	$LN13@WaitingFor@2
$LN12@WaitingFor@2:
; Line 824
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 15			; 0000000fH
	jne	SHORT $LN7@WaitingFor@2
; Line 826
	call	_GUI_Clear
; Line 827
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 828
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 829
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 830
	push	10					; 0000000aH
	push	18					; 00000012H
	push	OFFSET _bmGPSsignal
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 831
	push	60					; 0000003cH
	push	68					; 00000044H
	push	OFFSET $SG20110
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 832
	push	85					; 00000055H
	push	68					; 00000044H
	push	OFFSET $SG20111
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 834
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN13@WaitingFor@2
$LN7@WaitingFor@2:
; Line 836
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 275			; 00000113H
	jne	SHORT $LN5@WaitingFor@2
; Line 838
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hWaitForSatelliteTimer
	jne	SHORT $LN4@WaitingFor@2
; Line 840
	call	_HaveSatelliteReception
	test	eax, eax
	je	SHORT $LN3@WaitingFor@2
; Line 841
	push	1
	call	_KillWaitingForSatelliteScreen
	add	esp, 4
; Line 842
	jmp	SHORT $LN4@WaitingFor@2
$LN3@WaitingFor@2:
; Line 844
	push	500					; 000001f4H
	mov	eax, DWORD PTR _hWaitForSatelliteTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 845
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN4@WaitingFor@2:
; Line 847
	jmp	SHORT $LN13@WaitingFor@2
$LN5@WaitingFor@2:
; Line 849
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN13@WaitingFor@2:
; Line 850
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WaitingForSatellitesCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _HaveSatelliteReception
_TEXT	SEGMENT
$T20261 = -204						; size = 8
_HaveSatelliteReception PROC				; COMDAT
; Line 853
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 854
	push	21					; 00000015H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T20261[ebp], eax
	mov	DWORD PTR $T20261[ebp+4], edx
	cmp	DWORD PTR $T20261[ebp], 4
	jae	SHORT $LN2@HaveSatell
; Line 855
	xor	eax, eax
	jmp	SHORT $LN3@HaveSatell
	jmp	SHORT $LN3@HaveSatell
$LN2@HaveSatell:
; Line 856
	mov	eax, 1
$LN3@HaveSatell:
; Line 857
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HaveSatelliteReception ENDP
_TEXT	ENDS
EXTRN	_FinishDisplayTrackSelection:PROC
EXTRN	_SetWorkingTrackName:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _KillWaitingForSatelliteScreen
_TEXT	SEGMENT
_foundSatellites$ = 8					; size = 1
_KillWaitingForSatelliteScreen PROC			; COMDAT
; Line 860
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 861
	cmp	DWORD PTR _typeSave, 0
	jne	SHORT $LN4@KillWaitin
; Line 863
	movzx	eax, BYTE PTR _foundSatellites$[ebp]
	test	eax, eax
	je	SHORT $LN3@KillWaitin
; Line 864
	mov	DWORD PTR _raceModeState, 1
	jmp	SHORT $LN2@KillWaitin
$LN3@KillWaitin:
; Line 865
	mov	DWORD PTR _raceModeState, 2
$LN2@KillWaitin:
; Line 866
	mov	eax, DWORD PTR _hWaitingForSatellites
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 868
	jmp	SHORT $LN5@KillWaitin
$LN4@KillWaitin:
; Line 870
	mov	DWORD PTR _screen_scrolling, 1
; Line 871
	mov	eax, DWORD PTR _hWaitingForSatellites
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 872
	push	5
	call	_SetScreenType
	add	esp, 4
; Line 873
	call	_SetWorkingTrackName
; Line 874
	mov	eax, DWORD PTR _parentSave
	push	eax
	call	_FinishDisplayTrackSelection
	add	esp, 4
; Line 875
	call	_GUI_Clear
$LN5@KillWaitin:
; Line 877
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_KillWaitingForSatelliteScreen ENDP
_TEXT	ENDS
PUBLIC	_GetDragAutoXGaugesWindowHandle
_BSS	SEGMENT
_hDragAutoXGauges DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GetDragAutoXGaugesWindowHandle
_TEXT	SEGMENT
_GetDragAutoXGaugesWindowHandle PROC			; COMDAT
; Line 884
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 885
	mov	eax, DWORD PTR _hDragAutoXGauges
; Line 886
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetDragAutoXGaugesWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_DragAutoXGauges
EXTRN	_Display_DAXDigitalGaugeScreen:PROC
EXTRN	_Display_DAXGaugeScreen:PROC
EXTRN	_Display_DAXRPMSweepScreen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DragAutoXGauges
_TEXT	SEGMENT
tv70 = -208						; size = 4
_screen$ = -8						; size = 4
_hPrev$ = 8						; size = 4
_DragAutoXGauges PROC					; COMDAT
; Line 893
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 896
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN8@DragAutoXG
; Line 897
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN8@DragAutoXG:
; Line 899
	push	31					; 0000001fH
	call	_SetScreenType
	add	esp, 4
; Line 901
	call	_GUI_Clear
; Line 903
	cmp	DWORD PTR _selectedRaceMode, 4
	jne	SHORT $LN7@DragAutoXG
; Line 904
	movzx	eax, BYTE PTR _sysData+210
	mov	DWORD PTR _screen$[ebp], eax
	jmp	SHORT $LN6@DragAutoXG
$LN7@DragAutoXG:
; Line 905
	movzx	eax, BYTE PTR _sysData+212
	mov	DWORD PTR _screen$[ebp], eax
$LN6@DragAutoXG:
; Line 907
	mov	eax, DWORD PTR _screen$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN3@DragAutoXG
	cmp	DWORD PTR tv70[ebp], 1
	je	SHORT $LN2@DragAutoXG
	cmp	DWORD PTR tv70[ebp], 2
	je	SHORT $LN1@DragAutoXG
	jmp	SHORT $LN9@DragAutoXG
$LN3@DragAutoXG:
; Line 910
	call	_Display_DAXRPMSweepScreen
	mov	DWORD PTR _hDragAutoXGauges, eax
; Line 911
	jmp	SHORT $LN9@DragAutoXG
$LN2@DragAutoXG:
; Line 913
	call	_Display_DAXGaugeScreen
	mov	DWORD PTR _hDragAutoXGauges, eax
; Line 914
	jmp	SHORT $LN9@DragAutoXG
$LN1@DragAutoXG:
; Line 916
	call	_Display_DAXDigitalGaugeScreen
	mov	DWORD PTR _hDragAutoXGauges, eax
$LN9@DragAutoXG:
; Line 919
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DragAutoXGauges ENDP
_TEXT	ENDS
END
