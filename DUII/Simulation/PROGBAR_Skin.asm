; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\PROGBAR_Skin.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EXTRN	_PROGBAR__DefaultProps:BYTE
_DATA	SEGMENT
__Skin	DD	FLAT:__Paint
	DD	FLAT:__Create
	DD	FLAT:_PROGBAR__DefaultProps+20
_DATA	ENDS
EXTRN	_PROGBAR__GetTextRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_PROGBAR__GetTextLocked:PROC
EXTRN	_WM_GetClientRectEx:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_PROGBAR_LockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\progbar_skin.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
_Pos$ = -132						; size = 4
_pFont$ = -120						; size = 4
_pText$ = -108						; size = 4
_SkinInfo$ = -96					; size = 12
_ItemInfo$ = -76					; size = 32
_pfDrawSkin$ = -36					; size = 4
_Rect$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 81
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 82
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _pfDrawSkin$[ebp], ecx
; Line 83
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _SkinInfo$[ebp], ecx
; Line 85
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 86
	lea	eax, DWORD PTR _SkinInfo$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 87
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetClientRectEx
	add	esp, 8
; Line 91
	mov	DWORD PTR _ItemInfo$[ebp+4], 9
; Line 92
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 93
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 94
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 95
	movsx	eax, WORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 96
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 97
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 101
	mov	eax, DWORD PTR _SkinInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ItemInfo$[ebp]
	push	ecx
	call	__GetPos
	add	esp, 8
	mov	DWORD PTR _Pos$[ebp], eax
; Line 102
	mov	DWORD PTR _ItemInfo$[ebp+4], 3
; Line 103
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 104
	cmp	DWORD PTR _SkinInfo$[ebp], 0
	je	SHORT $LN6@Paint
; Line 105
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 106
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 107
	movsx	eax, WORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 108
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _Pos$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 109
	jmp	SHORT $LN5@Paint
$LN6@Paint:
; Line 110
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 111
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 112
	movsx	eax, WORD PTR _Rect$[ebp]
	add	eax, DWORD PTR _Pos$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 113
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
$LN5@Paint:
; Line 115
	mov	DWORD PTR _SkinInfo$[ebp+4], 0
; Line 116
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 120
	cmp	DWORD PTR _SkinInfo$[ebp], 0
	je	SHORT $LN4@Paint
; Line 121
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 122
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	ecx, DWORD PTR _Pos$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _ItemInfo$[ebp+16], edx
; Line 123
	movsx	eax, WORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 124
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 125
	jmp	SHORT $LN3@Paint
$LN4@Paint:
; Line 126
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	ecx, DWORD PTR _Pos$[ebp]
	lea	edx, DWORD PTR [eax+ecx+1]
	mov	DWORD PTR _ItemInfo$[ebp+12], edx
; Line 127
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 128
	movsx	eax, WORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 129
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
$LN3@Paint:
; Line 131
	mov	DWORD PTR _SkinInfo$[ebp+4], 1
; Line 132
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 136
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 137
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_PROGBAR__GetTextLocked
	add	esp, 4
	mov	DWORD PTR _pText$[ebp], eax
; Line 138
	cmp	DWORD PTR _pText$[ebp], 0
	je	SHORT $LN2@Paint
; Line 139
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 140
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
; Line 141
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 142
	mov	eax, DWORD PTR _pText$[ebp]
	mov	DWORD PTR _SkinInfo$[ebp+8], eax
; Line 143
	mov	DWORD PTR _ItemInfo$[ebp+4], 16		; 00000010H
; Line 144
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 145
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 146
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 147
	movsx	eax, WORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 148
	movsx	eax, WORD PTR _Rect$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 149
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 150
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$[ebp], 0
; Line 151
	jmp	SHORT $LN7@Paint
$LN2@Paint:
; Line 152
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN7@Paint:
; Line 154
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@Paint:
	DD	3
	DD	$LN12@Paint
$LN12@Paint:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN9@Paint
	DD	-76					; ffffffb4H
	DD	32					; 00000020H
	DD	$LN10@Paint
	DD	-96					; ffffffa0H
	DD	12					; 0000000cH
	DD	$LN11@Paint
$LN11@Paint:
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN10@Paint:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN9@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__Paint	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPos
_TEXT	SEGMENT
tv84 = -256						; size = 4
tv78 = -256						; size = 4
_v$ = -56						; size = 4
_Max$ = -44						; size = 4
_Min$ = -32						; size = 4
_Size$ = -20						; size = 4
_pObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_IsVertical$ = 12					; size = 4
__GetPos PROC						; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 47
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _Min$[ebp], ecx
; Line 48
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _Max$[ebp], ecx
; Line 49
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _v$[ebp], ecx
; Line 50
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 54
	cmp	DWORD PTR _IsVertical$[ebp], 0
	je	SHORT $LN5@GetPos
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	sub	edx, 1
	mov	DWORD PTR tv78[ebp], edx
	jmp	SHORT $LN6@GetPos
$LN5@GetPos:
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+20]
	sub	edx, DWORD PTR [ecx+12]
	sub	edx, 1
	mov	DWORD PTR tv78[ebp], edx
$LN6@GetPos:
	mov	eax, DWORD PTR tv78[ebp]
	mov	DWORD PTR _Size$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _Min$[ebp]
	jge	SHORT $LN2@GetPos
; Line 56
	mov	eax, DWORD PTR _Min$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN2@GetPos:
; Line 58
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _Max$[ebp]
	jle	SHORT $LN1@GetPos
; Line 59
	mov	eax, DWORD PTR _Max$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@GetPos:
; Line 61
	cmp	DWORD PTR _IsVertical$[ebp], 0
	je	SHORT $LN7@GetPos
	mov	eax, DWORD PTR _Max$[ebp]
	sub	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv84[ebp], eax
	jmp	SHORT $LN8@GetPos
$LN7@GetPos:
	mov	ecx, DWORD PTR _v$[ebp]
	sub	ecx, DWORD PTR _Min$[ebp]
	mov	DWORD PTR tv84[ebp], ecx
$LN8@GetPos:
	mov	eax, DWORD PTR _Size$[ebp]
	imul	eax, DWORD PTR tv84[ebp]
	mov	ecx, DWORD PTR _Max$[ebp]
	sub	ecx, DWORD PTR _Min$[ebp]
	cdq
	idiv	ecx
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_ItemInfo$ = -60					; size = 32
_pSkinPrivate$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 169
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pSkinPrivate$[ebp], edx
; Line 170
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 174
	mov	DWORD PTR _ItemInfo$[ebp+4], 0
; Line 175
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 176
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSkinPrivate$[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 177
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Create
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@Create:
	DD	1
	DD	$LN4@Create
$LN4@Create:
	DD	-60					; ffffffc4H
	DD	32					; 00000020H
	DD	$LN3@Create
$LN3@Create:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__Create ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_SetSkin
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_SetHasTrans:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_SetSkin
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pfDrawSkin$ = 12					; size = 4
_PROGBAR_SetSkin PROC					; COMDAT
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 209
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 213
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+108], OFFSET __Skin
; Line 217
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pfDrawSkin$[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 218
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 222
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetHasTrans
	add	esp, 4
; Line 223
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 225
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_SetSkin ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_SetDefaultSkin
EXTRN	_PROGBAR__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_SetDefaultSkin
_TEXT	SEGMENT
_pfDrawSkin$ = 8					; size = 4
_PROGBAR_SetDefaultSkin PROC				; COMDAT
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	DWORD PTR _PROGBAR__pSkinDefault, OFFSET __Skin
; Line 233
	mov	eax, DWORD PTR _pfDrawSkin$[ebp]
	mov	DWORD PTR _PROGBAR__DefaultProps+20, eax
; Line 234
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_SetDefaultSkin ENDP
_TEXT	ENDS
END
