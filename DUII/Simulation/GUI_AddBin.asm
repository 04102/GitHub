; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_AddBin.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG8344	DB	'Can not display more than 32 bin. digits', 00H
_DATA	ENDS
PUBLIC	_GUI_AddBin
EXTRN	_GUI_Warn:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_addbin.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_AddBin
_TEXT	SEGMENT
tv71 = -205						; size = 1
_s$ = -8						; size = 4
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_ps$ = 16						; size = 4
_GUI_AddBin PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 36
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _s$[ebp], ecx
; Line 38
	movzx	eax, BYTE PTR _Len$[ebp]
	cmp	eax, 32					; 00000020H
	jle	SHORT $LN3@GUI_AddBin
; Line 39
	push	OFFSET $SG8344
	call	_GUI_Warn
	add	esp, 4
; Line 40
	mov	BYTE PTR _Len$[ebp], 32			; 00000020H
$LN3@GUI_AddBin:
; Line 43
	movzx	eax, BYTE PTR _Len$[ebp]
	mov	ecx, DWORD PTR _ps$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _ps$[ebp]
	mov	DWORD PTR [edx], eax
; Line 44
	mov	eax, DWORD PTR _ps$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	BYTE PTR [ecx], 0
$LN2@GUI_AddBin:
; Line 45
	mov	al, BYTE PTR _Len$[ebp]
	mov	BYTE PTR tv71[ebp], al
	mov	cl, BYTE PTR _Len$[ebp]
	sub	cl, 1
	mov	BYTE PTR _Len$[ebp], cl
	movzx	edx, BYTE PTR tv71[ebp]
	test	edx, edx
	je	SHORT $LN4@GUI_AddBin
; Line 46
	mov	eax, DWORD PTR _v$[ebp]
	and	eax, 1
	add	eax, 48					; 00000030H
	movzx	ecx, BYTE PTR _Len$[ebp]
	mov	edx, DWORD PTR _s$[ebp]
	mov	BYTE PTR [edx+ecx], al
; Line 47
	mov	eax, DWORD PTR _v$[ebp]
	shr	eax, 1
	mov	DWORD PTR _v$[ebp], eax
; Line 48
	jmp	SHORT $LN2@GUI_AddBin
$LN4@GUI_AddBin:
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_AddBin ENDP
_TEXT	ENDS
END
