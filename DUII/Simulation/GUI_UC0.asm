; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_UC0.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_UC2DB
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_uc0.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_UC2DB
_TEXT	SEGMENT
_Code$ = 8						; size = 2
_pOut$ = 12						; size = 4
_GUI_UC2DB PROC						; COMDAT
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	movzx	eax, WORD PTR _Code$[ebp]
	cmp	eax, 256				; 00000100H
	jge	SHORT $LN4@GUI_UC2DB
; Line 45
	movzx	eax, WORD PTR _Code$[ebp]
	test	eax, eax
	je	SHORT $LN3@GUI_UC2DB
; Line 46
	movzx	eax, WORD PTR _Code$[ebp]
	add	eax, 57344				; 0000e000H
	mov	WORD PTR _Code$[ebp], ax
$LN3@GUI_UC2DB:
; Line 47
	jmp	SHORT $LN2@GUI_UC2DB
$LN4@GUI_UC2DB:
; Line 49
	movzx	eax, WORD PTR _Code$[ebp]
	and	eax, 255				; 000000ffH
	jne	SHORT $LN2@GUI_UC2DB
; Line 50
	movzx	eax, WORD PTR _Code$[ebp]
	sar	eax, 8
	add	eax, 57600				; 0000e100H
	mov	WORD PTR _Code$[ebp], ax
$LN2@GUI_UC2DB:
; Line 54
	movzx	eax, WORD PTR _Code$[ebp]
	sar	eax, 8
	mov	ecx, DWORD PTR _pOut$[ebp]
	mov	BYTE PTR [ecx], al
	mov	edx, DWORD PTR _pOut$[ebp]
	add	edx, 1
	mov	DWORD PTR _pOut$[ebp], edx
; Line 55
	movzx	eax, WORD PTR _Code$[ebp]
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _pOut$[ebp]
	mov	BYTE PTR [ecx], al
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_UC2DB ENDP
_TEXT	ENDS
PUBLIC	_GUI_DB2UC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DB2UC
_TEXT	SEGMENT
_Byte0$ = 8						; size = 1
_Byte1$ = 12						; size = 1
_GUI_DB2UC PROC						; COMDAT
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 68
	movzx	eax, BYTE PTR _Byte0$[ebp]
	test	eax, eax
	jne	SHORT $LN3@GUI_DB2UC
; Line 69
	xor	eax, eax
	jmp	SHORT $LN4@GUI_DB2UC
$LN3@GUI_DB2UC:
; Line 70
	movzx	eax, BYTE PTR _Byte0$[ebp]
	and	eax, 254				; 000000feH
	cmp	eax, 224				; 000000e0H
	jne	SHORT $LN2@GUI_DB2UC
; Line 71
	movzx	eax, BYTE PTR _Byte0$[ebp]
	cmp	eax, 224				; 000000e0H
	jne	SHORT $LN1@GUI_DB2UC
; Line 72
	movzx	ax, BYTE PTR _Byte1$[ebp]
	jmp	SHORT $LN4@GUI_DB2UC
$LN1@GUI_DB2UC:
; Line 73
	movzx	eax, BYTE PTR _Byte1$[ebp]
	shl	eax, 8
	jmp	SHORT $LN4@GUI_DB2UC
$LN2@GUI_DB2UC:
; Line 75
	movzx	eax, BYTE PTR _Byte1$[ebp]
	movzx	ecx, BYTE PTR _Byte0$[ebp]
	shl	ecx, 8
	or	eax, ecx
$LN4@GUI_DB2UC:
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DB2UC ENDP
_TEXT	ENDS
END
