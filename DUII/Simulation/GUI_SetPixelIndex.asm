; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_SetPixelIndex.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_SetPixelIndex
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_setpixelindex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LCD_SetPixelIndex
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_ColorIndex$ = 16					; size = 4
_LCD_SetPixelIndex PROC					; COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN4@LCD_SetPix
	jmp	SHORT $LN5@LCD_SetPix
$LN4@LCD_SetPix:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN3@LCD_SetPix
	jmp	SHORT $LN5@LCD_SetPix
$LN3@LCD_SetPix:
; Line 55
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN2@LCD_SetPix
	jmp	SHORT $LN5@LCD_SetPix
$LN2@LCD_SetPix:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN1@LCD_SetPix
	jmp	SHORT $LN5@LCD_SetPix
$LN1@LCD_SetPix:
; Line 56
	mov	esi, esp
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@LCD_SetPix:
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetPixelIndex ENDP
_TEXT	ENDS
END
