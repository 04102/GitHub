; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawLine.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_aTan
CONST	SEGMENT
_aSin	DW	00H
	DW	064H
	DW	0c8H
	DW	0129H
	DW	0188H
	DW	01e3H
	DW	0239H
	DW	028aH
	DW	02d4H
	DW	0318H
	DW	0353H
	DW	0387H
	DW	03b2H
	DW	03d4H
	DW	03ecH
	DW	03fbH
	DW	0400H
	ORG $+2
_aTan	DW	00H
	DW	029H
	DW	051H
	DW	079H
	DW	0a0H
	DW	0c5H
	DW	0eaH
	DW	010dH
	DW	012eH
	DW	014eH
	DW	016cH
	DW	0189H
	DW	01a3H
	DW	01bdH
	DW	01d5H
	DW	01ebH
	DW	0200H
CONST	ENDS
PUBLIC	_GUI_sin
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawline.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_sin
_TEXT	SEGMENT
tv93 = -244						; size = 4
_t$ = -44						; size = 4
_Faktor$ = -32						; size = 2
_i$ = -20						; size = 4
_IsNeg$ = -5						; size = 1
_angle$ = 8						; size = 4
_GUI_sin PROC						; COMDAT
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	mov	BYTE PTR _IsNeg$[ebp], 0
; Line 112
	mov	eax, DWORD PTR _angle$[ebp]
	and	eax, 4095				; 00000fffH
	mov	DWORD PTR _angle$[ebp], eax
; Line 113
	cmp	DWORD PTR _angle$[ebp], 2048		; 00000800H
	jle	SHORT $LN3@GUI_sin
; Line 114
	mov	eax, DWORD PTR _angle$[ebp]
	sub	eax, 2048				; 00000800H
	mov	DWORD PTR _angle$[ebp], eax
; Line 115
	mov	BYTE PTR _IsNeg$[ebp], 1
$LN3@GUI_sin:
; Line 117
	cmp	DWORD PTR _angle$[ebp], 1024		; 00000400H
	jle	SHORT $LN2@GUI_sin
; Line 118
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _angle$[ebp]
	mov	DWORD PTR _angle$[ebp], eax
$LN2@GUI_sin:
; Line 121
	mov	eax, DWORD PTR _angle$[ebp]
	sar	eax, 6
	mov	DWORD PTR _i$[ebp], eax
; Line 123
	mov	eax, DWORD PTR _angle$[ebp]
	and	eax, 63					; 0000003fH
	mov	ecx, 64					; 00000040H
	sub	ecx, eax
	mov	WORD PTR _Faktor$[ebp], cx
; Line 124
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, WORD PTR _aSin[eax*2]
	movzx	edx, WORD PTR _Faktor$[ebp]
	imul	ecx, edx
	mov	DWORD PTR _t$[ebp], ecx
; Line 125
	movzx	eax, WORD PTR _Faktor$[ebp]
	cmp	eax, 64					; 00000040H
	je	SHORT $LN1@GUI_sin
; Line 126
	mov	eax, DWORD PTR _i$[ebp]
	movzx	ecx, WORD PTR _aSin[eax*2+2]
	movzx	edx, WORD PTR _Faktor$[ebp]
	mov	eax, 64					; 00000040H
	sub	eax, edx
	imul	ecx, eax
	add	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR _t$[ebp], ecx
$LN1@GUI_sin:
; Line 129
	mov	eax, DWORD PTR _t$[ebp]
	add	eax, 32					; 00000020H
	shr	eax, 6
	mov	DWORD PTR _t$[ebp], eax
; Line 130
	movzx	eax, BYTE PTR _IsNeg$[ebp]
	test	eax, eax
	je	SHORT $LN6@GUI_sin
	xor	ecx, ecx
	sub	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR tv93[ebp], ecx
	jmp	SHORT $LN7@GUI_sin
$LN6@GUI_sin:
	mov	edx, DWORD PTR _t$[ebp]
	mov	DWORD PTR tv93[ebp], edx
$LN7@GUI_sin:
	mov	eax, DWORD PTR tv93[ebp]
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_sin ENDP
_TEXT	ENDS
PUBLIC	_GUI_cos
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_cos
_TEXT	SEGMENT
_angle$ = 8						; size = 4
_GUI_cos PROC						; COMDAT
; Line 137
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 138
	mov	eax, DWORD PTR _angle$[ebp]
	add	eax, 1024				; 00000400H
	push	eax
	call	_GUI_sin
	add	esp, 4
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_cos ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawLine1Ex
EXTRN	_LCD_DrawVLine:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GL_DrawPoint:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLine1Ex
_TEXT	SEGMENT
tv201 = -332						; size = 4
tv176 = -332						; size = 4
tv195 = -328						; size = 4
tv170 = -328						; size = 4
tv151 = -328						; size = 4
tv134 = -328						; size = 4
_y$8492 = -128						; size = 4
_l$8490 = -116						; size = 4
_y$8481 = -104						; size = 4
_l$8479 = -92						; size = 4
_PixelCnt$ = -80					; size = 4
_Dir$ = -68						; size = 4
_XYSwapped$ = -53					; size = 1
_i$ = -44						; size = 4
_xdiffby2$ = -32					; size = 4
_ydiff$ = -20						; size = 4
_xdiff$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_pPixelCnt$ = 24					; size = 4
_GL_DrawLine1Ex PROC					; COMDAT
; Line 301
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 302
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _xdiff$[ebp], eax
; Line 303
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _ydiff$[ebp], eax
; Line 306
	mov	BYTE PTR _XYSwapped$[ebp], 0
; Line 308
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _PixelCnt$[ebp], ecx
; Line 310
	mov	eax, DWORD PTR _xdiff$[ebp]
	or	eax, DWORD PTR _ydiff$[ebp]
	jne	SHORT $LN35@GL_DrawLin
; Line 311
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawPoint
	add	esp, 8
; Line 312
	jmp	$LN36@GL_DrawLin
$LN35@GL_DrawLin:
; Line 315
	mov	eax, DWORD PTR _xdiff$[ebp]
	push	eax
	call	_Abs
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _ydiff$[ebp]
	push	ecx
	call	_Abs
	add	esp, 4
	cmp	esi, eax
	jge	SHORT $LN34@GL_DrawLin
; Line 316
	lea	eax, DWORD PTR _ydiff$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xdiff$[ebp]
	push	ecx
	call	__SwapInt
	add	esp, 8
; Line 317
	lea	eax, DWORD PTR _y0$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	__SwapInt
	add	esp, 8
; Line 318
	lea	eax, DWORD PTR _y1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	call	__SwapInt
	add	esp, 8
; Line 319
	mov	BYTE PTR _XYSwapped$[ebp], 1
$LN34@GL_DrawLin:
; Line 322
	mov	eax, DWORD PTR _xdiff$[ebp]
	push	eax
	call	_Abs
	add	esp, 4
	cmp	DWORD PTR _xdiff$[ebp], eax
	je	SHORT $LN33@GL_DrawLin
; Line 323
	mov	eax, DWORD PTR _xdiff$[ebp]
	neg	eax
	mov	DWORD PTR _xdiff$[ebp], eax
; Line 324
	mov	eax, DWORD PTR _ydiff$[ebp]
	neg	eax
	mov	DWORD PTR _ydiff$[ebp], eax
; Line 325
	lea	eax, DWORD PTR _x1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	__SwapInt
	add	esp, 8
; Line 326
	lea	eax, DWORD PTR _y1$[ebp]
	push	eax
	lea	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	call	__SwapInt
	add	esp, 8
; Line 327
	mov	DWORD PTR _Dir$[ebp], -1
; Line 328
	jmp	SHORT $LN32@GL_DrawLin
$LN33@GL_DrawLin:
; Line 329
	mov	DWORD PTR _Dir$[ebp], 1
$LN32@GL_DrawLin:
; Line 332
	cmp	DWORD PTR _ydiff$[ebp], 0
	jne	$LN31@GL_DrawLin
; Line 333
	movzx	eax, BYTE PTR _XYSwapped$[ebp]
	test	eax, eax
	je	$LN30@GL_DrawLin
; Line 334
	movzx	eax, BYTE PTR _GUI_Context+26
	test	eax, eax
	jne	SHORT $LN29@GL_DrawLin
; Line 335
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 336
	jmp	SHORT $LN28@GL_DrawLin
$LN29@GL_DrawLin:
; Line 337
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN27@GL_DrawLin
$LN26@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN27@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _xdiff$[ebp]
	jg	SHORT $LN25@GL_DrawLin
; Line 338
	mov	eax, DWORD PTR _PixelCnt$[ebp]
	mov	DWORD PTR tv134[ebp], eax
	mov	ecx, DWORD PTR _PixelCnt$[ebp]
	add	ecx, 1
	mov	DWORD PTR _PixelCnt$[ebp], ecx
	mov	edx, DWORD PTR tv134[ebp]
	push	edx
	call	__SetLineColor
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN24@GL_DrawLin
; Line 339
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN24@GL_DrawLin:
; Line 341
	jmp	SHORT $LN26@GL_DrawLin
$LN25@GL_DrawLin:
; Line 342
	mov	eax, DWORD PTR _PixelCnt$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [ecx], eax
$LN28@GL_DrawLin:
; Line 344
	jmp	$LN23@GL_DrawLin
$LN30@GL_DrawLin:
; Line 345
	movzx	eax, BYTE PTR _GUI_Context+26
	test	eax, eax
	jne	SHORT $LN22@GL_DrawLin
; Line 346
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 347
	jmp	SHORT $LN23@GL_DrawLin
$LN22@GL_DrawLin:
; Line 348
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN20@GL_DrawLin
$LN19@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN20@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _xdiff$[ebp]
	jg	SHORT $LN18@GL_DrawLin
; Line 349
	mov	eax, DWORD PTR _PixelCnt$[ebp]
	mov	DWORD PTR tv151[ebp], eax
	mov	ecx, DWORD PTR _PixelCnt$[ebp]
	add	ecx, 1
	mov	DWORD PTR _PixelCnt$[ebp], ecx
	mov	edx, DWORD PTR tv151[ebp]
	push	edx
	call	__SetLineColor
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN17@GL_DrawLin
; Line 350
	mov	esi, esp
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@GL_DrawLin:
; Line 352
	jmp	SHORT $LN19@GL_DrawLin
$LN18@GL_DrawLin:
; Line 353
	mov	eax, DWORD PTR _PixelCnt$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [ecx], eax
$LN23@GL_DrawLin:
; Line 356
	jmp	$LN36@GL_DrawLin
$LN31@GL_DrawLin:
; Line 358
	mov	eax, DWORD PTR _xdiff$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xdiffby2$[ebp], eax
; Line 359
	cmp	DWORD PTR _ydiff$[ebp], 0
	jge	SHORT $LN16@GL_DrawLin
; Line 360
	mov	eax, DWORD PTR _xdiffby2$[ebp]
	neg	eax
	mov	DWORD PTR _xdiffby2$[ebp], eax
$LN16@GL_DrawLin:
; Line 363
	movzx	eax, BYTE PTR _GUI_Context+26
	test	eax, eax
	jne	$LN15@GL_DrawLin
; Line 364
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@GL_DrawLin
$LN13@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN14@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _xdiff$[ebp]
	jg	$LN12@GL_DrawLin
; Line 365
	mov	eax, DWORD PTR _ydiff$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _xdiffby2$[ebp]
	mov	DWORD PTR _l$8479[ebp], eax
; Line 366
	cmp	DWORD PTR _l$8479[ebp], 0
	jle	SHORT $LN38@GL_DrawLin
	mov	eax, DWORD PTR _l$8479[ebp]
	mov	DWORD PTR tv170[ebp], eax
	jmp	SHORT $LN39@GL_DrawLin
$LN38@GL_DrawLin:
	mov	ecx, DWORD PTR _l$8479[ebp]
	neg	ecx
	mov	DWORD PTR tv170[ebp], ecx
$LN39@GL_DrawLin:
	cmp	DWORD PTR tv170[ebp], 32767		; 00007fffH
	jge	SHORT $LN40@GL_DrawLin
	mov	eax, DWORD PTR _l$8479[ebp]
	cdq
	idiv	DWORD PTR _xdiff$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN41@GL_DrawLin
$LN40@GL_DrawLin:
	mov	eax, DWORD PTR _l$8479[ebp]
	cdq
	idiv	DWORD PTR _xdiff$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR tv176[ebp], eax
$LN41@GL_DrawLin:
	mov	edx, DWORD PTR tv176[ebp]
	mov	DWORD PTR _y$8481[ebp], edx
; Line 367
	movzx	eax, BYTE PTR _XYSwapped$[ebp]
	test	eax, eax
	jne	SHORT $LN11@GL_DrawLin
; Line 368
	mov	esi, esp
	mov	eax, DWORD PTR _y$8481[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 369
	jmp	SHORT $LN10@GL_DrawLin
$LN11@GL_DrawLin:
; Line 370
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$8481[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@GL_DrawLin:
; Line 372
	jmp	$LN13@GL_DrawLin
$LN12@GL_DrawLin:
; Line 374
	jmp	$LN36@GL_DrawLin
$LN15@GL_DrawLin:
; Line 375
	cmp	DWORD PTR _Dir$[ebp], 0
	jge	SHORT $LN8@GL_DrawLin
; Line 376
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _xdiff$[ebp]
	mov	edx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [edx], ecx
$LN8@GL_DrawLin:
; Line 378
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@GL_DrawLin
$LN6@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@GL_DrawLin:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _xdiff$[ebp]
	jg	$LN5@GL_DrawLin
; Line 379
	mov	eax, DWORD PTR _ydiff$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _xdiffby2$[ebp]
	mov	DWORD PTR _l$8490[ebp], eax
; Line 380
	cmp	DWORD PTR _l$8490[ebp], 0
	jle	SHORT $LN42@GL_DrawLin
	mov	eax, DWORD PTR _l$8490[ebp]
	mov	DWORD PTR tv195[ebp], eax
	jmp	SHORT $LN43@GL_DrawLin
$LN42@GL_DrawLin:
	mov	ecx, DWORD PTR _l$8490[ebp]
	neg	ecx
	mov	DWORD PTR tv195[ebp], ecx
$LN43@GL_DrawLin:
	cmp	DWORD PTR tv195[ebp], 32767		; 00007fffH
	jge	SHORT $LN44@GL_DrawLin
	mov	eax, DWORD PTR _l$8490[ebp]
	cdq
	idiv	DWORD PTR _xdiff$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR tv201[ebp], eax
	jmp	SHORT $LN45@GL_DrawLin
$LN44@GL_DrawLin:
	mov	eax, DWORD PTR _l$8490[ebp]
	cdq
	idiv	DWORD PTR _xdiff$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR tv201[ebp], eax
$LN45@GL_DrawLin:
	mov	edx, DWORD PTR tv201[ebp]
	mov	DWORD PTR _y$8492[ebp], edx
; Line 381
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _Dir$[ebp]
	mov	edx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	__SetLineColor
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN4@GL_DrawLin
; Line 382
	movzx	eax, BYTE PTR _XYSwapped$[ebp]
	test	eax, eax
	jne	SHORT $LN3@GL_DrawLin
; Line 383
	mov	esi, esp
	mov	eax, DWORD PTR _y$8492[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 384
	jmp	SHORT $LN4@GL_DrawLin
$LN3@GL_DrawLin:
; Line 385
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$8492[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@GL_DrawLin:
; Line 388
	jmp	$LN6@GL_DrawLin
$LN5@GL_DrawLin:
; Line 389
	cmp	DWORD PTR _Dir$[ebp], 0
	jge	SHORT $LN1@GL_DrawLin
; Line 390
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _xdiff$[ebp]
	mov	edx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@GL_DrawLin:
; Line 392
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR _Dir$[ebp]
	mov	edx, DWORD PTR _pPixelCnt$[ebp]
	mov	DWORD PTR [edx], ecx
$LN36@GL_DrawLin:
; Line 394
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN49@GL_DrawLin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN49@GL_DrawLin:
	DD	2
	DD	$LN48@GL_DrawLin
$LN48@GL_DrawLin:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN46@GL_DrawLin
	DD	-20					; ffffffecH
	DD	4
	DD	$LN47@GL_DrawLin
$LN47@GL_DrawLin:
	DB	121					; 00000079H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN46@GL_DrawLin:
	DB	120					; 00000078H
	DB	100					; 00000064H
	DB	105					; 00000069H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
_GL_DrawLine1Ex ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SwapInt
_TEXT	SEGMENT
_t$ = -8						; size = 4
_pa$ = 8						; size = 4
_pb$ = 12						; size = 4
__SwapInt PROC						; COMDAT
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	eax, DWORD PTR _pa$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _t$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _pa$[ebp]
	mov	ecx, DWORD PTR _pb$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 48
	mov	eax, DWORD PTR _pb$[ebp]
	mov	ecx, DWORD PTR _t$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SwapInt ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _Abs
_TEXT	SEGMENT
tv66 = -196						; size = 4
_v$ = 8							; size = 4
_Abs	PROC						; COMDAT
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 56
	cmp	DWORD PTR _v$[ebp], 0
	jle	SHORT $LN3@Abs
	mov	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	jmp	SHORT $LN4@Abs
$LN3@Abs:
	mov	ecx, DWORD PTR _v$[ebp]
	neg	ecx
	mov	DWORD PTR tv66[ebp], ecx
$LN4@Abs:
	mov	eax, DWORD PTR tv66[ebp]
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Abs	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetLineColor
_TEXT	SEGMENT
tv65 = -196						; size = 4
_i$ = 8							; size = 4
__SetLineColor PROC					; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 231
	movzx	eax, BYTE PTR _GUI_Context+26
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 3
	ja	$LN14@SetLineCol
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN20@SetLineCol[edx*4]
$LN13@SetLineCol:
; Line 233
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 6
	and	eax, -2147483633			; 8000000fH
	jns	SHORT $LN18@SetLineCol
	dec	eax
	or	eax, -16				; fffffff0H
	inc	eax
$LN18@SetLineCol:
	mov	DWORD PTR _i$[ebp], eax
; Line 234
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 12			; 0000000cH
	setl	al
	jmp	$LN16@SetLineCol
$LN12@SetLineCol:
; Line 236
	mov	eax, DWORD PTR _i$[ebp]
	and	eax, -2147483645			; 80000003H
	jns	SHORT $LN19@SetLineCol
	dec	eax
	or	eax, -4					; fffffffcH
	inc	eax
$LN19@SetLineCol:
	mov	DWORD PTR _i$[ebp], eax
; Line 237
	xor	eax, eax
	cmp	DWORD PTR _i$[ebp], 2
	setl	al
	jmp	$LN16@SetLineCol
$LN11@SetLineCol:
; Line 239
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _i$[ebp], edx
; Line 240
	cmp	DWORD PTR _i$[ebp], 12			; 0000000cH
	jge	SHORT $LN10@SetLineCol
; Line 241
	mov	eax, 1
	jmp	SHORT $LN16@SetLineCol
	jmp	SHORT $LN9@SetLineCol
$LN10@SetLineCol:
; Line 242
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jl	SHORT $LN9@SetLineCol
	cmp	DWORD PTR _i$[ebp], 18			; 00000012H
	jge	SHORT $LN9@SetLineCol
; Line 243
	mov	eax, 1
	jmp	SHORT $LN16@SetLineCol
$LN9@SetLineCol:
; Line 245
	xor	eax, eax
	jmp	SHORT $LN16@SetLineCol
$LN7@SetLineCol:
; Line 247
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	mov	ecx, 24					; 00000018H
	idiv	ecx
	mov	DWORD PTR _i$[ebp], edx
; Line 248
	cmp	DWORD PTR _i$[ebp], 12			; 0000000cH
	jge	SHORT $LN6@SetLineCol
; Line 249
	mov	eax, 1
	jmp	SHORT $LN16@SetLineCol
	jmp	SHORT $LN14@SetLineCol
$LN6@SetLineCol:
; Line 250
	cmp	DWORD PTR _i$[ebp], 16			; 00000010H
	jl	SHORT $LN4@SetLineCol
	cmp	DWORD PTR _i$[ebp], 18			; 00000012H
	jge	SHORT $LN4@SetLineCol
; Line 251
	mov	eax, 1
	jmp	SHORT $LN16@SetLineCol
	jmp	SHORT $LN14@SetLineCol
$LN4@SetLineCol:
; Line 252
	cmp	DWORD PTR _i$[ebp], 20			; 00000014H
	jl	SHORT $LN2@SetLineCol
	cmp	DWORD PTR _i$[ebp], 22			; 00000016H
	jge	SHORT $LN2@SetLineCol
; Line 253
	mov	eax, 1
	jmp	SHORT $LN16@SetLineCol
; Line 254
	jmp	SHORT $LN14@SetLineCol
$LN2@SetLineCol:
; Line 255
	xor	eax, eax
	jmp	SHORT $LN16@SetLineCol
$LN14@SetLineCol:
; Line 258
	xor	eax, eax
$LN16@SetLineCol:
; Line 259
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@SetLineCol:
	DD	$LN13@SetLineCol
	DD	$LN12@SetLineCol
	DD	$LN11@SetLineCol
	DD	$LN7@SetLineCol
__SetLineColor ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawLine1
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLine1
_TEXT	SEGMENT
_PixelCnt$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_GL_DrawLine1 PROC					; COMDAT
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 402
	mov	DWORD PTR _PixelCnt$[ebp], 0
; Line 403
	lea	eax, DWORD PTR _PixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawLine1Ex
	add	esp, 20					; 00000014H
; Line 404
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GL_DrawLin@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GL_DrawLin@2:
	DD	1
	DD	$LN4@GL_DrawLin@2
$LN4@GL_DrawLin@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@GL_DrawLin@2
$LN3@GL_DrawLin@2:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_GL_DrawLine1 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GL_DrawLineEx
EXTRN	_GL_FillPolygon:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLineEx
_TEXT	SEGMENT
_yOffM$8530 = -120					; size = 4
_xOffM$8529 = -108					; size = 4
_yOffP$8528 = -96					; size = 4
_xOffP$8527 = -84					; size = 4
_yOff$8526 = -72					; size = 4
_xOff$8525 = -60					; size = 4
_Poly$8524 = -48					; size = 16
_ydiff$8522 = -24					; size = 4
_xdiff$8521 = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_pPixelCnt$ = 24					; size = 4
_GL_DrawLineEx PROC					; COMDAT
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 411
	movzx	eax, BYTE PTR _GUI_Context+24
	cmp	eax, 1
	jne	SHORT $LN7@GL_DrawLin@3
; Line 412
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawLine1Ex
	add	esp, 20					; 00000014H
; Line 413
	jmp	$LN8@GL_DrawLin@3
$LN7@GL_DrawLin@3:
; Line 415
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _x1$[ebp]
	mov	DWORD PTR _xdiff$8521[ebp], eax
; Line 416
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _ydiff$8522[ebp], eax
; Line 417
	mov	eax, DWORD PTR _xdiff$8521[ebp]
	or	eax, DWORD PTR _ydiff$8522[ebp]
	je	$LN8@GL_DrawLin@3
; Line 421
	lea	eax, DWORD PTR _yOff$8526[ebp]
	push	eax
	lea	ecx, DWORD PTR _xOff$8525[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+24
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	call	__CalcOrto
	add	esp, 20					; 00000014H
; Line 423
	cmp	DWORD PTR _xOff$8525[ebp], 0
	jle	SHORT $LN4@GL_DrawLin@3
; Line 424
	mov	eax, DWORD PTR _xOff$8525[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOffP$8527[ebp], eax
; Line 425
	mov	eax, DWORD PTR _xOff$8525[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOffM$8529[ebp], eax
; Line 426
	jmp	SHORT $LN3@GL_DrawLin@3
$LN4@GL_DrawLin@3:
; Line 427
	mov	eax, DWORD PTR _xOff$8525[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOffP$8527[ebp], eax
; Line 428
	mov	eax, DWORD PTR _xOff$8525[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOffM$8529[ebp], eax
$LN3@GL_DrawLin@3:
; Line 430
	cmp	DWORD PTR _yOff$8526[ebp], 0
	jle	SHORT $LN2@GL_DrawLin@3
; Line 431
	mov	eax, DWORD PTR _yOff$8526[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOffP$8528[ebp], eax
; Line 432
	mov	eax, DWORD PTR _yOff$8526[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOffM$8530[ebp], eax
; Line 433
	jmp	SHORT $LN1@GL_DrawLin@3
$LN2@GL_DrawLin@3:
; Line 434
	mov	eax, DWORD PTR _yOff$8526[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOffP$8528[ebp], eax
; Line 435
	mov	eax, DWORD PTR _yOff$8526[ebp]
	sub	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOffM$8530[ebp], eax
$LN1@GL_DrawLin@3:
; Line 437
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _xOffP$8527[ebp]
	mov	WORD PTR _Poly$8524[ebp], ax
; Line 438
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _yOffP$8528[ebp]
	mov	WORD PTR _Poly$8524[ebp+2], ax
; Line 439
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _xOffM$8529[ebp]
	mov	WORD PTR _Poly$8524[ebp+4], ax
; Line 440
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _yOffM$8530[ebp]
	mov	WORD PTR _Poly$8524[ebp+6], ax
; Line 441
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _xOffM$8529[ebp]
	mov	WORD PTR _Poly$8524[ebp+8], ax
; Line 442
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _yOffM$8530[ebp]
	mov	WORD PTR _Poly$8524[ebp+10], ax
; Line 443
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _xOffP$8527[ebp]
	mov	WORD PTR _Poly$8524[ebp+12], ax
; Line 444
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _yOffP$8528[ebp]
	mov	WORD PTR _Poly$8524[ebp+14], ax
; Line 445
	push	0
	push	0
	push	4
	lea	eax, DWORD PTR _Poly$8524[ebp]
	push	eax
	call	_GL_FillPolygon
	add	esp, 16					; 00000010H
; Line 446
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	__DrawLineEnd
	add	esp, 8
; Line 447
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	call	__DrawLineEnd
	add	esp, 8
$LN8@GL_DrawLin@3:
; Line 450
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@GL_DrawLin@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN14@GL_DrawLin@3:
	DD	3
	DD	$LN13@GL_DrawLin@3
$LN13@GL_DrawLin@3:
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN10@GL_DrawLin@3
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN11@GL_DrawLin@3
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN12@GL_DrawLin@3
$LN12@GL_DrawLin@3:
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN11@GL_DrawLin@3:
	DB	120					; 00000078H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN10@GL_DrawLin@3:
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	0
_GL_DrawLineEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcOrto
_TEXT	SEGMENT
tv89 = -232						; size = 4
tv81 = -232						; size = 4
_Angle$ = -32						; size = 4
_y$ = -20						; size = 4
_x$ = -8						; size = 4
_xDiff$ = 8						; size = 4
_yDiff$ = 12						; size = 4
_r$ = 16						; size = 4
_px$ = 20						; size = 4
_py$ = 24						; size = 4
__CalcOrto PROC						; COMDAT
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 267
	mov	eax, DWORD PTR _yDiff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xDiff$[ebp]
	push	ecx
	call	__atan2
	add	esp, 8
	mov	DWORD PTR _Angle$[ebp], eax
; Line 268
	mov	eax, DWORD PTR _Angle$[ebp]
	add	eax, 1024				; 00000400H
	mov	DWORD PTR _Angle$[ebp], eax
; Line 269
	mov	eax, DWORD PTR _Angle$[ebp]
	push	eax
	call	_GUI_cos
	add	esp, 4
	imul	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 270
	mov	eax, DWORD PTR _Angle$[ebp]
	push	eax
	call	_GUI_sin
	add	esp, 4
	imul	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 271
	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN3@CalcOrto
	mov	eax, DWORD PTR _x$[ebp]
	neg	eax
	add	eax, 512				; 00000200H
	sar	eax, 10					; 0000000aH
	neg	eax
	mov	DWORD PTR tv81[ebp], eax
	jmp	SHORT $LN4@CalcOrto
$LN3@CalcOrto:
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 512				; 00000200H
	sar	ecx, 10					; 0000000aH
	mov	DWORD PTR tv81[ebp], ecx
$LN4@CalcOrto:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _x$[ebp], edx
; Line 272
	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN5@CalcOrto
	mov	eax, DWORD PTR _y$[ebp]
	neg	eax
	add	eax, 512				; 00000200H
	sar	eax, 10					; 0000000aH
	neg	eax
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN6@CalcOrto
$LN5@CalcOrto:
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, 512				; 00000200H
	sar	ecx, 10					; 0000000aH
	mov	DWORD PTR tv89[ebp], ecx
$LN6@CalcOrto:
	mov	edx, DWORD PTR tv89[ebp]
	mov	DWORD PTR _y$[ebp], edx
; Line 273
	mov	eax, DWORD PTR _px$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 274
	mov	eax, DWORD PTR _py$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 275
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcOrto ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __atan2
_TEXT	SEGMENT
_t$8383 = -32						; size = 4
_angle$ = -20						; size = 4
_q$ = -5						; size = 1
_x$ = 8							; size = 4
_y$ = 12						; size = 4
__atan2	PROC						; COMDAT
; Line 192
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 193
	mov	BYTE PTR _q$[ebp], 0
; Line 196
	cmp	DWORD PTR _x$[ebp], 0
	jge	SHORT $LN6@atan2
; Line 197
	mov	BYTE PTR _q$[ebp], 1
; Line 198
	mov	eax, DWORD PTR _x$[ebp]
	neg	eax
	mov	DWORD PTR _x$[ebp], eax
$LN6@atan2:
; Line 200
	cmp	DWORD PTR _y$[ebp], 0
	jge	SHORT $LN5@atan2
; Line 201
	movzx	eax, BYTE PTR _q$[ebp]
	or	eax, 2
	mov	BYTE PTR _q$[ebp], al
; Line 202
	mov	eax, DWORD PTR _y$[ebp]
	neg	eax
	mov	DWORD PTR _y$[ebp], eax
$LN5@atan2:
; Line 204
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _x$[ebp]
	jle	SHORT $LN4@atan2
; Line 205
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _t$8383[ebp], eax
; Line 206
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _t$8383[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 208
	movzx	eax, BYTE PTR _q$[ebp]
	or	eax, 4
	mov	BYTE PTR _q$[ebp], al
$LN4@atan2:
; Line 210
	mov	eax, DWORD PTR _y$[ebp]
	shl	eax, 10					; 0000000aH
	mov	DWORD PTR _y$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _x$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 212
	mov	eax, DWORD PTR _y$[ebp]
	cdq
	idiv	DWORD PTR _x$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 213
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	call	__atan0_45
	add	esp, 4
	mov	DWORD PTR _angle$[ebp], eax
; Line 214
	movzx	eax, BYTE PTR _q$[ebp]
	and	eax, 4
	je	SHORT $LN3@atan2
; Line 215
	mov	eax, 1024				; 00000400H
	sub	eax, DWORD PTR _angle$[ebp]
	mov	DWORD PTR _angle$[ebp], eax
$LN3@atan2:
; Line 217
	movzx	eax, BYTE PTR _q$[ebp]
	and	eax, 1
	je	SHORT $LN2@atan2
; Line 218
	mov	eax, 2048				; 00000800H
	sub	eax, DWORD PTR _angle$[ebp]
	mov	DWORD PTR _angle$[ebp], eax
$LN2@atan2:
; Line 220
	movzx	eax, BYTE PTR _q$[ebp]
	and	eax, 2
	je	SHORT $LN1@atan2
; Line 221
	mov	eax, 4096				; 00001000H
	sub	eax, DWORD PTR _angle$[ebp]
	mov	DWORD PTR _angle$[ebp], eax
$LN1@atan2:
; Line 223
	mov	eax, DWORD PTR _angle$[ebp]
; Line 224
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__atan2	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __atan0_45
_TEXT	SEGMENT
_Faktor$ = -32						; size = 4
_i$ = -20						; size = 4
_r$ = -8						; size = 4
_q$ = 8							; size = 4
__atan0_45 PROC						; COMDAT
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 177
	mov	eax, DWORD PTR _q$[ebp]
	sar	eax, 2
	mov	DWORD PTR _q$[ebp], eax
; Line 178
	mov	eax, DWORD PTR _q$[ebp]
	sar	eax, 4
	mov	DWORD PTR _i$[ebp], eax
; Line 179
	mov	eax, DWORD PTR _q$[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, 16					; 00000010H
	sub	ecx, eax
	mov	DWORD PTR _Faktor$[ebp], ecx
; Line 180
	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, WORD PTR _aTan[eax*2]
	imul	ecx, DWORD PTR _Faktor$[ebp]
	mov	DWORD PTR _r$[ebp], ecx
; Line 181
	cmp	DWORD PTR _Faktor$[ebp], 16		; 00000010H
	je	SHORT $LN1@atan0_45
; Line 182
	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, WORD PTR _aTan[eax*2+2]
	mov	edx, 16					; 00000010H
	sub	edx, DWORD PTR _Faktor$[ebp]
	imul	ecx, edx
	add	ecx, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], ecx
$LN1@atan0_45:
; Line 184
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 8
	cdq
	and	edx, 15					; 0000000fH
	add	eax, edx
	sar	eax, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _r$[ebp]
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__atan0_45 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawLineEnd
_TEXT	SEGMENT
tv65 = -196						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
__DrawLineEnd PROC					; COMDAT
; Line 281
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 282
	mov	al, BYTE PTR _GUI_Context+25
	mov	BYTE PTR tv65[ebp], al
	cmp	BYTE PTR tv65[ebp], 0
	je	SHORT $LN2@DrawLineEn
	jmp	SHORT $LN5@DrawLineEn
$LN2@DrawLineEn:
; Line 284
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawPoint
	add	esp, 8
$LN5@DrawLineEn:
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawLineEnd ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawLine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLine
_TEXT	SEGMENT
_PixelCnt$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_GL_DrawLine PROC					; COMDAT
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 458
	mov	DWORD PTR _PixelCnt$[ebp], 0
; Line 459
	lea	eax, DWORD PTR _PixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawLineEx
	add	esp, 20					; 00000014H
; Line 460
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GL_DrawLin@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GL_DrawLin@4:
	DD	1
	DD	$LN4@GL_DrawLin@4
$LN4@GL_DrawLin@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@GL_DrawLin@4
$LN3@GL_DrawLin@4:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_GL_DrawLine ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawLine
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawLine
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_GUI_DrawLine PROC					; COMDAT
; Line 466
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 469
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 470
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 471
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawLi
$LN3@GUI_DrawLi:
; Line 473
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_DrawLine
	add	esp, 16					; 00000010H
; Line 475
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawLi
$LN5@GUI_DrawLi:
; Line 478
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawLine ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawLineRel
EXTRN	_GUI_MoveRel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawLineRel
_TEXT	SEGMENT
_dx$ = 8						; size = 4
_dy$ = 12						; size = 4
_GUI_DrawLineRel PROC					; COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 493
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@GUI_DrawLi@2
$LN3@GUI_DrawLi@2:
; Line 496
	movsx	eax, WORD PTR _GUI_Context+40
	add	eax, DWORD PTR _dy$[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+38
	add	ecx, DWORD PTR _dx$[ebp]
	push	ecx
	movsx	edx, WORD PTR _GUI_Context+40
	push	edx
	movsx	eax, WORD PTR _GUI_Context+38
	push	eax
	call	_GL_DrawLine
	add	esp, 16					; 00000010H
; Line 498
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawLi@2
$LN4@GUI_DrawLi@2:
; Line 500
	mov	eax, DWORD PTR _dy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dx$[ebp]
	push	ecx
	call	_GUI_MoveRel
	add	esp, 8
; Line 502
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawLineRel ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawLineToEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLineToEx
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_pPixelCnt$ = 16					; size = 4
_GL_DrawLineToEx PROC					; COMDAT
; Line 508
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 509
	mov	eax, DWORD PTR _pPixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movsx	eax, WORD PTR _GUI_Context+40
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+38
	push	ecx
	call	_GL_DrawLineEx
	add	esp, 20					; 00000014H
; Line 510
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _GUI_Context+38, ax
; Line 511
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _GUI_Context+40, ax
; Line 512
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DrawLineToEx ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawLineTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawLineTo
_TEXT	SEGMENT
_PixelCnt$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GL_DrawLineTo PROC					; COMDAT
; Line 518
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 520
	mov	DWORD PTR _PixelCnt$[ebp], 0
; Line 521
	lea	eax, DWORD PTR _PixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GL_DrawLineToEx
	add	esp, 12					; 0000000cH
; Line 522
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GL_DrawLin@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GL_DrawLin@5:
	DD	1
	DD	$LN4@GL_DrawLin@5
$LN4@GL_DrawLin@5:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@GL_DrawLin@5
$LN3@GL_DrawLin@5:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
_GL_DrawLineTo ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawLineTo
EXTRN	_GL_MoveTo:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawLineTo
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GUI_DrawLineTo PROC					; COMDAT
; Line 528
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 531
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y$[ebp], eax
; Line 532
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@GUI_DrawLi@3
$LN3@GUI_DrawLi@3:
; Line 534
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	movsx	edx, WORD PTR _GUI_Context+40
	push	edx
	movsx	eax, WORD PTR _GUI_Context+38
	push	eax
	call	_GL_DrawLine
	add	esp, 16					; 00000010H
; Line 536
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawLi@3
$LN4@GUI_DrawLi@3:
; Line 538
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GL_MoveTo
	add	esp, 8
; Line 540
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawLineTo ENDP
_TEXT	ENDS
END
