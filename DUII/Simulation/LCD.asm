; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD__pSetColorAPI
_DATA	SEGMENT
_LCD__pSetColorAPI DD FLAT:__SetColorAPI
_DATA	ENDS
CONST	SEGMENT
__SetColorAPI DD FLAT:__SetColor
	DD	FLAT:__SetBkColor
	DD	FLAT:__SetDrawMode
CONST	ENDS
PUBLIC	_LCD_SetBkColorIndex
PUBLIC	_LCD_Color2Index
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __SetBkColor
_TEXT	SEGMENT
_color$ = 8						; size = 4
__SetBkColor PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 60
	mov	eax, DWORD PTR _GUI_Context+52
	cmp	eax, DWORD PTR _color$[ebp]
	je	SHORT $LN2@SetBkColor
; Line 61
	mov	eax, DWORD PTR _color$[ebp]
	mov	DWORD PTR _GUI_Context+52, eax
; Line 62
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	push	eax
	call	_LCD_SetBkColorIndex
	add	esp, 4
$LN2@SetBkColor:
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetBkColor ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetColorIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetColor
_TEXT	SEGMENT
_color$ = 8						; size = 4
__SetColor PROC						; COMDAT
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 71
	mov	eax, DWORD PTR _GUI_Context+48
	cmp	eax, DWORD PTR _color$[ebp]
	je	SHORT $LN2@SetColor
; Line 72
	mov	eax, DWORD PTR _color$[ebp]
	mov	DWORD PTR _GUI_Context+48, eax
; Line 73
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
$LN2@SetColor:
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetColor ENDP
_TEXT	ENDS
EXTRN	_LCD_pColorIndex:DWORD
EXTRN	_LCD_pBkColorIndex:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetDrawMode
_TEXT	SEGMENT
_OldDM$ = -20						; size = 4
_temp$ = -8						; size = 4
_dm$ = 8						; size = 4
__SetDrawMode PROC					; COMDAT
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 85
	movzx	eax, BYTE PTR _GUI_Context+16
	mov	DWORD PTR _OldDM$[ebp], eax
; Line 86
	movzx	eax, BYTE PTR _GUI_Context+16
	xor	eax, DWORD PTR _dm$[ebp]
	and	eax, 4
	je	SHORT $LN1@SetDrawMod
; Line 87
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _temp$[ebp], ecx
; Line 88
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR _LCD_pColorIndex
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 89
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@SetDrawMod:
; Line 91
	mov	al, BYTE PTR _dm$[ebp]
	mov	BYTE PTR _GUI_Context+16, al
; Line 92
	mov	eax, DWORD PTR _OldDM$[ebp]
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetDrawMode ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetDrawMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetDrawMode
_TEXT	SEGMENT
_dm$ = 8						; size = 4
_LCD_SetDrawMode PROC					; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 126
	mov	esi, esp
	mov	eax, DWORD PTR _dm$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LCD__pSetColorAPI
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetDrawMode ENDP
_TEXT	ENDS
PUBLIC	_LCD_DrawPixel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_DrawPixel
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_LCD_DrawPixel PROC					; COMDAT
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN6@LCD_DrawPi
	jmp	$LN7@LCD_DrawPi
$LN6@LCD_DrawPi:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN5@LCD_DrawPi
	jmp	$LN7@LCD_DrawPi
$LN5@LCD_DrawPi:
; Line 135
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN4@LCD_DrawPi
	jmp	$LN7@LCD_DrawPi
$LN4@LCD_DrawPi:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN3@LCD_DrawPi
	jmp	$LN7@LCD_DrawPi
$LN3@LCD_DrawPi:
; Line 136
	movzx	eax, BYTE PTR _GUI_Context+16
	and	eax, 1
	je	SHORT $LN2@LCD_DrawPi
; Line 137
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+28]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 138
	jmp	SHORT $LN7@LCD_DrawPi
$LN2@LCD_DrawPi:
; Line 139
	mov	esi, esp
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@LCD_DrawPi:
; Line 141
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_DrawPixel ENDP
_TEXT	ENDS
PUBLIC	_LCD_DrawHLine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_DrawHLine
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y$ = 12						; size = 4
_x1$ = 16						; size = 4
_LCD_DrawHLine PROC					; COMDAT
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 149
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN5@LCD_DrawHL
	jmp	$LN6@LCD_DrawHL
$LN5@LCD_DrawHL:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN4@LCD_DrawHL
	jmp	SHORT $LN6@LCD_DrawHL
$LN4@LCD_DrawHL:
; Line 150
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN3@LCD_DrawHL
	movsx	eax, WORD PTR _GUI_Context+8
	mov	DWORD PTR _x0$[ebp], eax
$LN3@LCD_DrawHL:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x1$[ebp], eax
	jle	SHORT $LN2@LCD_DrawHL
	movsx	eax, WORD PTR _GUI_Context+12
	mov	DWORD PTR _x1$[ebp], eax
$LN2@LCD_DrawHL:
; Line 151
	mov	eax, DWORD PTR _x1$[ebp]
	cmp	eax, DWORD PTR _x0$[ebp]
	jge	SHORT $LN1@LCD_DrawHL
; Line 152
	jmp	SHORT $LN6@LCD_DrawHL
$LN1@LCD_DrawHL:
; Line 154
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+8]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@LCD_DrawHL:
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_DrawHLine ENDP
_TEXT	ENDS
PUBLIC	_LCD_DrawVLine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_DrawVLine
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y0$ = 12						; size = 4
_y1$ = 16						; size = 4
_LCD_DrawVLine PROC					; COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 163
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN5@LCD_DrawVL
	jmp	$LN6@LCD_DrawVL
$LN5@LCD_DrawVL:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN4@LCD_DrawVL
	jmp	SHORT $LN6@LCD_DrawVL
$LN4@LCD_DrawVL:
; Line 164
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y0$[ebp], eax
	jge	SHORT $LN3@LCD_DrawVL
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
$LN3@LCD_DrawVL:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y1$[ebp], eax
	jle	SHORT $LN2@LCD_DrawVL
	movsx	eax, WORD PTR _GUI_Context+14
	mov	DWORD PTR _y1$[ebp], eax
$LN2@LCD_DrawVL:
; Line 165
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y0$[ebp]
	jge	SHORT $LN1@LCD_DrawVL
; Line 166
	jmp	SHORT $LN6@LCD_DrawVL
$LN1@LCD_DrawVL:
; Line 168
	mov	esi, esp
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+12]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@LCD_DrawVL:
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_DrawVLine ENDP
_TEXT	ENDS
PUBLIC	_LCD_FillRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_FillRect
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_LCD_FillRect PROC					; COMDAT
; Line 175
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 177
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN6@LCD_FillRe
	movsx	eax, WORD PTR _GUI_Context+8
	mov	DWORD PTR _x0$[ebp], eax
$LN6@LCD_FillRe:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x1$[ebp], eax
	jle	SHORT $LN5@LCD_FillRe
	movsx	eax, WORD PTR _GUI_Context+12
	mov	DWORD PTR _x1$[ebp], eax
$LN5@LCD_FillRe:
; Line 178
	mov	eax, DWORD PTR _x1$[ebp]
	cmp	eax, DWORD PTR _x0$[ebp]
	jge	SHORT $LN4@LCD_FillRe
; Line 179
	jmp	SHORT $LN7@LCD_FillRe
$LN4@LCD_FillRe:
; Line 181
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y0$[ebp], eax
	jge	SHORT $LN3@LCD_FillRe
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
$LN3@LCD_FillRe:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y1$[ebp], eax
	jle	SHORT $LN2@LCD_FillRe
	movsx	eax, WORD PTR _GUI_Context+14
	mov	DWORD PTR _y1$[ebp], eax
$LN2@LCD_FillRe:
; Line 182
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y0$[ebp]
	jge	SHORT $LN1@LCD_FillRe
; Line 183
	jmp	SHORT $LN7@LCD_FillRe
$LN1@LCD_FillRe:
; Line 185
	mov	esi, esp
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@LCD_FillRe:
; Line 186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_FillRect ENDP
_TEXT	ENDS
PUBLIC	_LCD_DrawBitmap
EXTRN	_GUI_pLCD_APIList:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_DrawBitmap
_TEXT	SEGMENT
tv135 = -364						; size = 4
_OldColor$8476 = -164					; size = 4
_Index$8472 = -149					; size = 1
_pDataLine$8468 = -140					; size = 4
_xi$8467 = -128						; size = 4
_BitsLeft$8466 = -116					; size = 4
_yMax$8464 = -104					; size = 4
_Shift$8460 = -92					; size = 4
_yi$8459 = -80						; size = 4
_y$8458 = -68						; size = 4
_x$8457 = -56						; size = 4
_Diff$8436 = -44					; size = 4
_y1$ = -32						; size = 4
_x1$ = -20						; size = 4
_Data$ = -5						; size = 1
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_xMul$ = 24						; size = 4
_yMul$ = 28						; size = 4
_BitsPerPixel$ = 32					; size = 4
_BytesPerLine$ = 36					; size = 4
_pPixel$ = 40						; size = 4
_pTrans$ = 44						; size = 4
_LCD_DrawBitmap PROC					; COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 196
	mov	BYTE PTR _Data$[ebp], 0
; Line 200
	cmp	DWORD PTR _GUI_pLCD_APIList, 0
	je	SHORT $LN30@LCD_DrawBi
; Line 201
	mov	esi, esp
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPixel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yMul$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xMul$[ebp]
	push	edx
	mov	eax, DWORD PTR _ysize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xsize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pLCD_APIList
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 202
	jmp	$LN31@LCD_DrawBi
$LN30@LCD_DrawBi:
; Line 205
	mov	eax, DWORD PTR _ysize$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _y1$[ebp], edx
; Line 206
	mov	eax, DWORD PTR _xsize$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _x1$[ebp], edx
; Line 207
	mov	eax, DWORD PTR _xMul$[ebp]
	or	eax, DWORD PTR _yMul$[ebp]
	cmp	eax, 1
	jne	$LN29@LCD_DrawBi
; Line 211
	movsx	eax, WORD PTR _GUI_Context+10
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _Diff$8436[ebp], eax
; Line 212
	cmp	DWORD PTR _Diff$8436[ebp], 0
	jle	SHORT $LN28@LCD_DrawBi
; Line 213
	mov	eax, DWORD PTR _ysize$[ebp]
	sub	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _ysize$[ebp], eax
; Line 214
	cmp	DWORD PTR _ysize$[ebp], 0
	jg	SHORT $LN27@LCD_DrawBi
; Line 215
	jmp	$LN31@LCD_DrawBi
$LN27@LCD_DrawBi:
; Line 217
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
; Line 219
	mov	eax, DWORD PTR _Diff$8436[ebp]
	imul	eax, DWORD PTR _BytesPerLine$[ebp]
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
$LN28@LCD_DrawBi:
; Line 225
	movsx	eax, WORD PTR _GUI_Context+14
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8436[ebp], ecx
; Line 226
	cmp	DWORD PTR _Diff$8436[ebp], 0
	jle	SHORT $LN26@LCD_DrawBi
; Line 227
	mov	eax, DWORD PTR _ysize$[ebp]
	sub	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _ysize$[ebp], eax
; Line 228
	cmp	DWORD PTR _ysize$[ebp], 0
	jg	SHORT $LN26@LCD_DrawBi
; Line 229
	jmp	$LN31@LCD_DrawBi
$LN26@LCD_DrawBi:
; Line 233
	movsx	eax, WORD PTR _GUI_Context+12
	mov	ecx, DWORD PTR _x1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8436[ebp], ecx
; Line 234
	cmp	DWORD PTR _Diff$8436[ebp], 0
	jle	SHORT $LN24@LCD_DrawBi
; Line 235
	mov	eax, DWORD PTR _xsize$[ebp]
	sub	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _xsize$[ebp], eax
$LN24@LCD_DrawBi:
; Line 238
	mov	DWORD PTR _Diff$8436[ebp], 0
; Line 239
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	$LN23@LCD_DrawBi
; Line 240
	movsx	eax, WORD PTR _GUI_Context+8
	sub	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _Diff$8436[ebp], eax
; Line 241
	mov	eax, DWORD PTR _xsize$[ebp]
	sub	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _xsize$[ebp], eax
; Line 242
	mov	eax, DWORD PTR _BitsPerPixel$[ebp]
	mov	DWORD PTR tv135[ebp], eax
	mov	ecx, DWORD PTR tv135[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv135[ebp], ecx
	cmp	DWORD PTR tv135[ebp], 31		; 0000001fH
	ja	$LN23@LCD_DrawBi
	mov	edx, DWORD PTR tv135[ebp]
	movzx	eax, BYTE PTR $LN33@LCD_DrawBi[edx]
	jmp	DWORD PTR $LN34@LCD_DrawBi[eax*4]
$LN20@LCD_DrawBi:
; Line 244
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 3
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 3
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _x0$[ebp], edx
	mov	eax, DWORD PTR _Diff$8436[ebp]
	and	eax, 7
	mov	DWORD PTR _Diff$8436[ebp], eax
; Line 245
	jmp	$LN23@LCD_DrawBi
$LN19@LCD_DrawBi:
; Line 247
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 2
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 2
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _x0$[ebp], edx
	mov	eax, DWORD PTR _Diff$8436[ebp]
	and	eax, 3
	mov	DWORD PTR _Diff$8436[ebp], eax
; Line 248
	jmp	SHORT $LN23@LCD_DrawBi
$LN18@LCD_DrawBi:
; Line 250
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 1
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
	mov	eax, DWORD PTR _Diff$8436[ebp]
	sar	eax, 1
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _x0$[ebp], edx
	mov	eax, DWORD PTR _Diff$8436[ebp]
	and	eax, 1
	mov	DWORD PTR _Diff$8436[ebp], eax
; Line 251
	jmp	SHORT $LN23@LCD_DrawBi
$LN17@LCD_DrawBi:
; Line 253
	mov	eax, DWORD PTR _pPixel$[ebp]
	add	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _x0$[ebp], eax
	mov	DWORD PTR _Diff$8436[ebp], 0
; Line 254
	jmp	SHORT $LN23@LCD_DrawBi
$LN16@LCD_DrawBi:
; Line 256
	mov	eax, DWORD PTR _Diff$8436[ebp]
	mov	ecx, DWORD PTR _pPixel$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pPixel$[ebp], edx
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _x0$[ebp], eax
	mov	DWORD PTR _Diff$8436[ebp], 0
; Line 257
	jmp	SHORT $LN23@LCD_DrawBi
$LN15@LCD_DrawBi:
; Line 260
	mov	eax, DWORD PTR _Diff$8436[ebp]
	mov	ecx, DWORD PTR _pPixel$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pPixel$[ebp], edx
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8436[ebp]
	mov	DWORD PTR _x0$[ebp], eax
	mov	DWORD PTR _Diff$8436[ebp], 0
$LN23@LCD_DrawBi:
; Line 264
	cmp	DWORD PTR _xsize$[ebp], 0
	jg	SHORT $LN14@LCD_DrawBi
; Line 265
	jmp	$LN31@LCD_DrawBi
$LN14@LCD_DrawBi:
; Line 271
	mov	esi, esp
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Diff$8436[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	push	edx
	mov	eax, DWORD PTR _BytesPerLine$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BitsPerPixel$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 272
	jmp	$LN31@LCD_DrawBi
$LN29@LCD_DrawBi:
; Line 277
	mov	eax, 8
	sub	eax, DWORD PTR _BitsPerPixel$[ebp]
	mov	DWORD PTR _Shift$8460[ebp], eax
; Line 278
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y$8458[ebp], eax
	mov	DWORD PTR _yi$8459[ebp], 0
	jmp	SHORT $LN12@LCD_DrawBi
$LN11@LCD_DrawBi:
	mov	eax, DWORD PTR _yi$8459[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$8459[ebp], eax
	mov	ecx, DWORD PTR _y$8458[ebp]
	add	ecx, DWORD PTR _yMul$[ebp]
	mov	DWORD PTR _y$8458[ebp], ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], edx
$LN12@LCD_DrawBi:
	mov	eax, DWORD PTR _yi$8459[ebp]
	cmp	eax, DWORD PTR _ysize$[ebp]
	jge	$LN31@LCD_DrawBi
; Line 280
	mov	eax, DWORD PTR _yMul$[ebp]
	mov	ecx, DWORD PTR _y$8458[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yMax$8464[ebp], edx
; Line 282
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _yMax$8464[ebp], eax
	jl	$LN9@LCD_DrawBi
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$8458[ebp], eax
	jg	$LN9@LCD_DrawBi
; Line 283
	mov	DWORD PTR _BitsLeft$8466[ebp], 0
; Line 285
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pDataLine$8468[ebp], eax
; Line 286
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x$8457[ebp], eax
	mov	DWORD PTR _xi$8467[ebp], 0
	jmp	SHORT $LN8@LCD_DrawBi
$LN7@LCD_DrawBi:
	mov	eax, DWORD PTR _xi$8467[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$8467[ebp], eax
	mov	ecx, DWORD PTR _x$8457[ebp]
	add	ecx, DWORD PTR _xMul$[ebp]
	mov	DWORD PTR _x$8457[ebp], ecx
$LN8@LCD_DrawBi:
	mov	eax, DWORD PTR _xi$8467[ebp]
	cmp	eax, DWORD PTR _xsize$[ebp]
	jge	$LN9@LCD_DrawBi
; Line 288
	cmp	DWORD PTR _BitsLeft$8466[ebp], 0
	jne	SHORT $LN5@LCD_DrawBi
; Line 289
	mov	eax, DWORD PTR _pDataLine$8468[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Data$[ebp], cl
	mov	edx, DWORD PTR _pDataLine$8468[ebp]
	add	edx, 1
	mov	DWORD PTR _pDataLine$8468[ebp], edx
; Line 290
	mov	DWORD PTR _BitsLeft$8466[ebp], 8
$LN5@LCD_DrawBi:
; Line 292
	movzx	eax, BYTE PTR _Data$[ebp]
	mov	ecx, DWORD PTR _Shift$8460[ebp]
	sar	eax, cl
	mov	BYTE PTR _Index$8472[ebp], al
; Line 293
	mov	al, BYTE PTR _Data$[ebp]
	mov	cl, BYTE PTR _BitsPerPixel$[ebp]
	shl	al, cl
	mov	BYTE PTR _Data$[ebp], al
; Line 294
	mov	eax, DWORD PTR _BitsLeft$8466[ebp]
	sub	eax, DWORD PTR _BitsPerPixel$[ebp]
	mov	DWORD PTR _BitsLeft$8466[ebp], eax
; Line 295
	movzx	eax, BYTE PTR _Index$8472[ebp]
	test	eax, eax
	jne	SHORT $LN3@LCD_DrawBi
	movzx	eax, BYTE PTR _GUI_Context+16
	and	eax, 2
	jne	SHORT $LN4@LCD_DrawBi
$LN3@LCD_DrawBi:
; Line 296
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OldColor$8476[ebp], ecx
; Line 297
	cmp	DWORD PTR _pTrans$[ebp], 0
	je	SHORT $LN2@LCD_DrawBi
; Line 298
	movzx	eax, BYTE PTR _Index$8472[ebp]
	mov	ecx, DWORD PTR _LCD_pColorIndex
	mov	edx, DWORD PTR _pTrans$[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
	mov	DWORD PTR [ecx], eax
; Line 299
	jmp	SHORT $LN1@LCD_DrawBi
$LN2@LCD_DrawBi:
; Line 300
	movzx	eax, BYTE PTR _Index$8472[ebp]
	mov	ecx, DWORD PTR _LCD_pColorIndex
	mov	DWORD PTR [ecx], eax
$LN1@LCD_DrawBi:
; Line 302
	mov	eax, DWORD PTR _yMax$8464[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMul$[ebp]
	mov	edx, DWORD PTR _x$8457[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _y$8458[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$8457[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 303
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _OldColor$8476[ebp]
	mov	DWORD PTR [eax], ecx
$LN4@LCD_DrawBi:
; Line 305
	jmp	$LN7@LCD_DrawBi
$LN9@LCD_DrawBi:
; Line 307
	jmp	$LN11@LCD_DrawBi
$LN31@LCD_DrawBi:
; Line 309
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN34@LCD_DrawBi:
	DD	$LN20@LCD_DrawBi
	DD	$LN19@LCD_DrawBi
	DD	$LN18@LCD_DrawBi
	DD	$LN17@LCD_DrawBi
	DD	$LN16@LCD_DrawBi
	DD	$LN15@LCD_DrawBi
	DD	$LN23@LCD_DrawBi
$LN33@LCD_DrawBi:
	DB	0
	DB	1
	DB	6
	DB	2
	DB	6
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_LCD_DrawBitmap ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetClipRectMax
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetClipRectMax
_TEXT	SEGMENT
_LCD_SetClipRectMax PROC				; COMDAT
; Line 315
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 316
	mov	esi, esp
	push	OFFSET _GUI_Context+8
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+48]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 317
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetClipRectMax ENDP
_TEXT	ENDS
PUBLIC	_LCD_Init
EXTRN	_GUI_SelectLayer:PROC
EXTRN	_LCD_InitLUT:PROC
EXTRN	_GUI_DEVICE__GetpDriver:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_Init
_TEXT	SEGMENT
_i$ = -56						; size = 4
_r$ = -44						; size = 4
_pfOn$ = -32						; size = 4
_pfInit$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LCD_Init PROC						; COMDAT
; Line 323
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 330
	call	_LCD_SetClipRectMax
; Line 331
	mov	DWORD PTR _r$[ebp], 0
; Line 332
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@LCD_Init
$LN10@LCD_Init:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@LCD_Init:
	cmp	DWORD PTR _i$[ebp], 1
	jge	SHORT $LN9@LCD_Init
; Line 333
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 334
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN8@LCD_Init
; Line 335
	mov	esi, esp
	push	12					; 0000000cH
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pfInit$[ebp], eax
; Line 336
	cmp	DWORD PTR _pfInit$[ebp], 0
	je	SHORT $LN7@LCD_Init
; Line 337
	mov	esi, esp
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	DWORD PTR _pfInit$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	or	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 338
	jmp	SHORT $LN8@LCD_Init
$LN7@LCD_Init:
; Line 339
	mov	eax, 1
	jmp	$LN12@LCD_Init
$LN8@LCD_Init:
; Line 342
	jmp	SHORT $LN10@LCD_Init
$LN9@LCD_Init:
; Line 343
	call	_LCD_InitLUT
; Line 345
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@LCD_Init
$LN4@LCD_Init:
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@LCD_Init:
	cmp	DWORD PTR _i$[ebp], 0
	jl	$LN3@LCD_Init
; Line 346
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 347
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_Init
; Line 351
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_GUI_SelectLayer
	add	esp, 4
; Line 352
	push	4
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 353
	push	4095					; 00000fffH
	push	4095					; 00000fffH
	push	0
	push	0
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 354
	push	0
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 358
	mov	esi, esp
	push	14					; 0000000eH
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pfOn$[ebp], eax
; Line 359
	cmp	DWORD PTR _pfOn$[ebp], 0
	je	SHORT $LN2@LCD_Init
; Line 360
	mov	esi, esp
	mov	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	call	DWORD PTR _pfOn$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@LCD_Init:
; Line 363
	jmp	$LN4@LCD_Init
$LN3@LCD_Init:
; Line 365
	mov	eax, DWORD PTR _r$[ebp]
$LN12@LCD_Init:
; Line 366
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@LCD_Init
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@LCD_Init:
	DD	1
	DD	$LN15@LCD_Init
$LN15@LCD_Init:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN14@LCD_Init
$LN14@LCD_Init:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_Init ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LCD_Color2Index
_TEXT	SEGMENT
_Color$ = 8						; size = 4
_LCD_Color2Index PROC					; COMDAT
; Line 372
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 373
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 374
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_Color2Index ENDP
_TEXT	ENDS
PUBLIC	_LCD_Index2Color
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_Index2Color
_TEXT	SEGMENT
_Index$ = 8						; size = 4
_LCD_Index2Color PROC					; COMDAT
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 381
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	mov	eax, DWORD PTR [edx+16]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_Index2Color ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LCD_SetColorIndex
_TEXT	SEGMENT
_PixelIndex$ = 8					; size = 4
_LCD_SetColorIndex PROC					; COMDAT
; Line 388
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 389
	movzx	eax, BYTE PTR _GUI_Context+16
	and	eax, 4
	je	SHORT $LN2@LCD_SetCol
; Line 390
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR _PixelIndex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 391
	jmp	SHORT $LN3@LCD_SetCol
$LN2@LCD_SetCol:
; Line 392
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _PixelIndex$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@LCD_SetCol:
; Line 394
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetColorIndex ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LCD_SetBkColorIndex
_TEXT	SEGMENT
_PixelIndex$ = 8					; size = 4
_LCD_SetBkColorIndex PROC				; COMDAT
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 401
	movzx	eax, BYTE PTR _GUI_Context+16
	and	eax, 4
	je	SHORT $LN2@LCD_SetBkC
; Line 402
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _PixelIndex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 403
	jmp	SHORT $LN3@LCD_SetBkC
$LN2@LCD_SetBkC:
; Line 404
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR _PixelIndex$[ebp]
	mov	DWORD PTR [eax], ecx
$LN3@LCD_SetBkC:
; Line 406
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetBkColorIndex ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetBkColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetBkColor
_TEXT	SEGMENT
_color$ = 8						; size = 4
_LCD_SetBkColor PROC					; COMDAT
; Line 412
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 413
	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LCD__pSetColorAPI
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 414
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetBkColor ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetColor
_TEXT	SEGMENT
_color$ = 8						; size = 4
_LCD_SetColor PROC					; COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 421
	mov	esi, esp
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LCD__pSetColorAPI
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 422
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetColor ENDP
_TEXT	ENDS
END
