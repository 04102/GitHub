; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\GRAPH_DATA_XY.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GRAPH_DATA_XY_Create
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\graph_data_xy.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GRAPH_DATA_XY_Create
_TEXT	SEGMENT
_p$11525 = -56						; size = 4
_BufferSize$11522 = -44					; size = 4
_hData$11521 = -32					; size = 4
_pDataXYObj$11520 = -20					; size = 4
_hDataObj$ = -8						; size = 4
_Color$ = 8						; size = 4
_MaxNumItems$ = 12					; size = 4
_pItems$ = 16						; size = 4
_NumItems$ = 20						; size = 4
_GRAPH_DATA_XY_Create PROC				; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	push	48					; 00000030H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hDataObj$[ebp], eax
; Line 192
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	$LN2@GRAPH_DATA
; Line 196
	mov	eax, DWORD PTR _MaxNumItems$[ebp]
	shl	eax, 2
	mov	DWORD PTR _BufferSize$11522[ebp], eax
; Line 197
	mov	eax, DWORD PTR _BufferSize$11522[ebp]
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hData$11521[ebp], eax
; Line 198
	cmp	DWORD PTR _hData$11521[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
	cmp	DWORD PTR _pItems$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
	cmp	DWORD PTR _NumItems$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA
; Line 200
	mov	eax, DWORD PTR _hData$11521[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$11525[ebp], eax
; Line 201
	mov	eax, DWORD PTR _NumItems$[ebp]
	shl	eax, 2
	push	eax
	mov	ecx, DWORD PTR _pItems$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$11525[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 202
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _p$11525[ebp], 0
$LN1@GRAPH_DATA:
; Line 204
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$11520[ebp], eax
; Line 205
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	ecx, DWORD PTR _hData$11521[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 206
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	BYTE PTR [eax+41], 1
; Line 207
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	DWORD PTR [eax+36], 5
; Line 208
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	BYTE PTR [eax+40], 1
; Line 209
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 210
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	ecx, DWORD PTR _MaxNumItems$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 211
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	ecx, DWORD PTR _NumItems$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 212
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	DWORD PTR [eax], OFFSET __OnPaint
; Line 213
	mov	eax, DWORD PTR _pDataXYObj$11520[ebp]
	mov	DWORD PTR [eax+4], OFFSET __OnDelete
; Line 214
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$11520[ebp], 0
$LN2@GRAPH_DATA:
; Line 217
	mov	eax, DWORD PTR _hDataObj$[ebp]
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_Create ENDP
_TEXT	ENDS
EXTRN	_GUI_SetLineStyle:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	_GRAPH_LockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_BorderB$11493 = -120					; size = 4
_BorderR$11492 = -108					; size = 4
_BorderT$11491 = -96					; size = 4
_BorderL$11490 = -84					; size = 4
_yPos$11489 = -72					; size = 4
_xPos$11488 = -60					; size = 4
_pObj$11487 = -48					; size = 4
_Rect$11486 = -36					; size = 8
_pDataXYObj$ = -20					; size = 4
_pData$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
__OnPaint PROC						; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 128
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
; Line 129
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 130
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	$LN3@OnPaint
; Line 135
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
; Line 136
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11487[ebp], eax
; Line 137
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _BorderL$11490[ebp], ecx
; Line 138
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _BorderT$11491[ebp], ecx
; Line 139
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _BorderR$11492[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _BorderB$11493[ebp], ecx
; Line 141
	lea	eax, DWORD PTR _Rect$11486[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDataXYObj$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 142
	movsx	eax, WORD PTR _Rect$11486[ebp]
	add	eax, DWORD PTR _BorderL$11490[ebp]
	mov	WORD PTR _Rect$11486[ebp], ax
; Line 143
	movsx	eax, WORD PTR _Rect$11486[ebp+2]
	add	eax, DWORD PTR _BorderT$11491[ebp]
	mov	WORD PTR _Rect$11486[ebp+2], ax
; Line 144
	movsx	eax, WORD PTR _Rect$11486[ebp+4]
	sub	eax, DWORD PTR _BorderR$11492[ebp]
	mov	WORD PTR _Rect$11486[ebp+4], ax
; Line 145
	movsx	eax, WORD PTR _Rect$11486[ebp+6]
	sub	eax, DWORD PTR _BorderB$11493[ebp]
	mov	WORD PTR _Rect$11486[ebp+6], ax
; Line 146
	movsx	eax, WORD PTR _Rect$11486[ebp]
	mov	ecx, DWORD PTR _pDataXYObj$[ebp]
	add	eax, DWORD PTR [ecx+24]
	mov	DWORD PTR _xPos$11488[ebp], eax
; Line 147
	movsx	eax, WORD PTR _Rect$11486[ebp+6]
	mov	ecx, DWORD PTR _pDataXYObj$[ebp]
	sub	eax, DWORD PTR [ecx+28]
	mov	DWORD PTR _yPos$11489[ebp], eax
; Line 148
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 149
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+41]
	push	ecx
	call	_GUI_SetPenSize
	add	esp, 4
; Line 150
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+42]
	push	ecx
	call	_GUI_SetLineStyle
	add	esp, 4
; Line 151
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 2
	je	SHORT $LN2@OnPaint
; Line 152
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR _yPos$11489[ebp]
	add	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _pObj$11487[ebp]
	mov	eax, DWORD PTR _xPos$11488[ebp]
	add	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _hDataObj$[ebp]
	push	ecx
	call	__DrawPolyPoints
	add	esp, 12					; 0000000cH
$LN2@OnPaint:
; Line 154
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 1
	je	SHORT $LN1@OnPaint
; Line 155
	mov	eax, DWORD PTR _pObj$11487[ebp]
	mov	ecx, DWORD PTR _yPos$11489[ebp]
	add	ecx, DWORD PTR [eax+132]
	push	ecx
	mov	edx, DWORD PTR _pObj$11487[ebp]
	mov	eax, DWORD PTR _xPos$11488[ebp]
	add	eax, DWORD PTR [edx+144]
	push	eax
	mov	ecx, DWORD PTR _pDataXYObj$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	__DrawPolyLine
	add	esp, 16					; 00000010H
$LN1@OnPaint:
; Line 157
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11487[ebp], 0
; Line 158
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$[ebp], 0
$LN3@OnPaint:
; Line 160
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
; Line 161
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@OnPaint:
	DD	1
	DD	$LN7@OnPaint
$LN7@OnPaint:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN6@OnPaint
$LN6@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__OnPaint ENDP
_TEXT	ENDS
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_GL_DrawLine:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawPolyPoints
_TEXT	SEGMENT
_ItemInfo$ = -108					; size = 32
_Off$ = -68						; size = 4
_y$ = -56						; size = 4
_x$ = -44						; size = 4
_NumPoints$ = -32					; size = 4
_pPoints$ = -20						; size = 4
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
__DrawPolyPoints PROC					; COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 75
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 76
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pPoints$[ebp], eax
; Line 77
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NumPoints$[ebp], ecx
; Line 78
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	sub	ecx, 1
	shr	ecx, 1
	mov	DWORD PTR _Off$[ebp], ecx
; Line 79
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN12@DrawPolyPo
; Line 80
	mov	DWORD PTR _ItemInfo$[ebp+4], 1
; Line 81
	lea	eax, DWORD PTR _hDataObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
$LN11@DrawPolyPo:
; Line 83
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], ecx
; Line 84
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _y0$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _ItemInfo$[ebp+16], edx
; Line 85
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDataXYObj$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 86
	mov	eax, DWORD PTR _pPoints$[ebp]
	add	eax, 4
	mov	DWORD PTR _pPoints$[ebp], eax
; Line 87
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPoints$[ebp], eax
	cmp	DWORD PTR _NumPoints$[ebp], 0
	jg	SHORT $LN11@DrawPolyPo
; Line 88
	jmp	$LN8@DrawPolyPo
$LN12@DrawPolyPo:
; Line 89
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 90
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	$LN8@DrawPolyPo
$LN3@DrawPolyPo:
; Line 92
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _y0$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _y$[ebp], edx
; Line 94
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR _Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, DWORD PTR _Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _Off$[ebp]
	push	eax
	call	_GL_DrawLine
	add	esp, 16					; 00000010H
; Line 95
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR _Off$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _Off$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _Off$[ebp]
	push	eax
	call	_GL_DrawLine
	add	esp, 16					; 00000010H
; Line 96
	mov	eax, DWORD PTR _pPoints$[ebp]
	add	eax, 4
	mov	DWORD PTR _pPoints$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPoints$[ebp], eax
	cmp	DWORD PTR _NumPoints$[ebp], 0
	jg	SHORT $LN3@DrawPolyPo
; Line 98
	call	_WM__GetNextIVR
	test	eax, eax
	jne	$LN3@DrawPolyPo
$LN8@DrawPolyPo:
; Line 100
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPoints$[ebp], 0
; Line 101
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
; Line 102
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@DrawPolyPo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN17@DrawPolyPo:
	DD	1
	DD	$LN16@DrawPolyPo
$LN16@DrawPolyPo:
	DD	-108					; ffffff94H
	DD	32					; 00000020H
	DD	$LN15@DrawPolyPo
$LN15@DrawPolyPo:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__DrawPolyPoints ENDP
_TEXT	ENDS
EXTRN	_GL_DrawLineToEx:PROC
EXTRN	_GL_MoveTo:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawPolyLine
_TEXT	SEGMENT
_PixelCnt$ = -8						; size = 4
_pPoints$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
__DrawPolyLine PROC					; COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 110
	mov	DWORD PTR _PixelCnt$[ebp], 0
; Line 111
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 112
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@DrawPolyLi
$LN5@DrawPolyLi:
; Line 113
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _y0$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_MoveTo
	add	esp, 8
$LN2@DrawPolyLi:
; Line 114
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPoints$[ebp], eax
	cmp	DWORD PTR _NumPoints$[ebp], 0
	jle	SHORT $LN4@DrawPolyLi
; Line 115
	mov	eax, DWORD PTR _pPoints$[ebp]
	add	eax, 4
	mov	DWORD PTR _pPoints$[ebp], eax
; Line 116
	lea	eax, DWORD PTR _PixelCnt$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pPoints$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, edx
	push	eax
	mov	ecx, DWORD PTR _pPoints$[ebp]
	movsx	edx, WORD PTR [ecx]
	add	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_DrawLineToEx
	add	esp, 12					; 0000000cH
; Line 117
	jmp	SHORT $LN2@DrawPolyLi
$LN4@DrawPolyLi:
; Line 118
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN5@DrawPolyLi
$LN7@DrawPolyLi:
; Line 119
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@DrawPolyLi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@DrawPolyLi:
	DD	1
	DD	$LN10@DrawPolyLi
$LN10@DrawPolyLi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@DrawPolyLi
$LN9@DrawPolyLi:
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	67					; 00000043H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
__DrawPolyLine ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnDelete
_TEXT	SEGMENT
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
__OnDelete PROC						; COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 169
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 170
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN1@OnDelete
; Line 171
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 172
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	DWORD PTR [eax+32], 0
$LN1@OnDelete:
; Line 174
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
; Line 175
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnDelete ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_Delete
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_Delete
_TEXT	SEGMENT
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_XY_Delete PROC				; COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 226
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	__OnDelete
	add	esp, 4
; Line 228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_Delete ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_AddPoint
EXTRN	_GRAPH__AddValue:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_AddPoint
_TEXT	SEGMENT
_pData$11540 = -20					; size = 4
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_pPoint$ = 12						; size = 4
_GRAPH_DATA_XY_AddPoint PROC				; COMDAT
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 236
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@2
; Line 239
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 240
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$11540[ebp], eax
; Line 241
	push	4
	mov	eax, DWORD PTR _pPoint$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$11540[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDataXYObj$[ebp]
	push	edx
	call	_GRAPH__AddValue
	add	esp, 16					; 00000010H
; Line 242
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$11540[ebp], 0
; Line 243
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN2@GRAPH_DATA@2:
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_AddPoint ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetOffX
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetOffX
_TEXT	SEGMENT
_pDataObj$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_Off$ = 12						; size = 4
_GRAPH_DATA_XY_SetOffX PROC				; COMDAT
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 254
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN3@GRAPH_DATA@3
; Line 256
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	cmp	ecx, DWORD PTR _Off$[ebp]
	je	SHORT $LN1@GRAPH_DATA@3
; Line 258
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [eax+24], ecx
; Line 259
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_DATA@3:
; Line 261
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$[ebp], 0
$LN3@GRAPH_DATA@3:
; Line 264
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetOffX ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetOffY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetOffY
_TEXT	SEGMENT
_pDataObj$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_Off$ = 12						; size = 4
_GRAPH_DATA_XY_SetOffY PROC				; COMDAT
; Line 270
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 272
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN3@GRAPH_DATA@4
; Line 274
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$[ebp], eax
; Line 275
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	cmp	ecx, DWORD PTR _Off$[ebp]
	je	SHORT $LN1@GRAPH_DATA@4
; Line 276
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 277
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_DATA@4:
; Line 279
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$[ebp], 0
$LN3@GRAPH_DATA@4:
; Line 282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetOffY ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetPenSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetPenSize
_TEXT	SEGMENT
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_PenSize$ = 12						; size = 1
_GRAPH_DATA_XY_SetPenSize PROC				; COMDAT
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 290
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN3@GRAPH_DATA@5
; Line 292
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 293
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+41]
	movzx	edx, BYTE PTR _PenSize$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@GRAPH_DATA@5
; Line 294
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	cl, BYTE PTR _PenSize$[ebp]
	mov	BYTE PTR [eax+41], cl
; Line 295
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_DATA@5:
; Line 297
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN3@GRAPH_DATA@5:
; Line 300
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetPenSize ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetLineStyle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetLineStyle
_TEXT	SEGMENT
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_LineStyle$ = 12					; size = 1
_GRAPH_DATA_XY_SetLineStyle PROC			; COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 308
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN3@GRAPH_DATA@6
; Line 310
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 311
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+42]
	movzx	edx, BYTE PTR _LineStyle$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@GRAPH_DATA@6
; Line 312
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	cl, BYTE PTR _LineStyle$[ebp]
	mov	BYTE PTR [eax+42], cl
; Line 313
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_DATA@6:
; Line 315
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN3@GRAPH_DATA@6:
; Line 318
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetLineStyle ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_GetLineVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_GetLineVis
_TEXT	SEGMENT
_pDataXYObj$ = -20					; size = 4
_Old$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_XY_GetLineVis PROC				; COMDAT
; Line 324
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 325
	mov	DWORD PTR _Old$[ebp], 0
; Line 327
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA@7
; Line 329
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 330
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _Old$[ebp], ecx
; Line 331
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN1@GRAPH_DATA@7:
; Line 334
	mov	eax, DWORD PTR _Old$[ebp]
; Line 335
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_GetLineVis ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_GetPointVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_GetPointVis
_TEXT	SEGMENT
_pDataXYObj$ = -20					; size = 4
_Old$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_XY_GetPointVis PROC				; COMDAT
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 342
	mov	DWORD PTR _Old$[ebp], 0
; Line 344
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN1@GRAPH_DATA@8
; Line 346
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 347
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _Old$[ebp], ecx
; Line 348
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN1@GRAPH_DATA@8:
; Line 351
	mov	eax, DWORD PTR _Old$[ebp]
; Line 352
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_GetPointVis ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetLineVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetLineVis
_TEXT	SEGMENT
_pDataXYObj$ = -20					; size = 4
_Old$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_OnOff$ = 12						; size = 4
_GRAPH_DATA_XY_SetLineVis PROC				; COMDAT
; Line 358
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 359
	mov	DWORD PTR _Old$[ebp], 0
; Line 361
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	$LN4@GRAPH_DATA@9
; Line 363
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 364
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _Old$[ebp], ecx
; Line 365
	cmp	DWORD PTR _OnOff$[ebp], 1
	jne	SHORT $LN3@GRAPH_DATA@9
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 1
	jne	SHORT $LN3@GRAPH_DATA@9
; Line 366
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	or	ecx, 1
	mov	edx, DWORD PTR _pDataXYObj$[ebp]
	mov	BYTE PTR [edx+40], cl
; Line 367
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN2@GRAPH_DATA@9
$LN3@GRAPH_DATA@9:
; Line 368
	cmp	DWORD PTR _OnOff$[ebp], 0
	jne	SHORT $LN2@GRAPH_DATA@9
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 1
	je	SHORT $LN2@GRAPH_DATA@9
; Line 369
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _pDataXYObj$[ebp]
	mov	BYTE PTR [edx+40], cl
; Line 370
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_DATA@9:
; Line 372
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN4@GRAPH_DATA@9:
; Line 375
	mov	eax, DWORD PTR _Old$[ebp]
; Line 376
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetLineVis ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetPointVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetPointVis
_TEXT	SEGMENT
_pDataXYObj$ = -20					; size = 4
_Old$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_OnOff$ = 12						; size = 4
_GRAPH_DATA_XY_SetPointVis PROC				; COMDAT
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 383
	mov	DWORD PTR _Old$[ebp], 0
; Line 385
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	$LN4@GRAPH_DATA@10
; Line 387
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 388
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _Old$[ebp], ecx
; Line 389
	cmp	DWORD PTR _OnOff$[ebp], 1
	jne	SHORT $LN3@GRAPH_DATA@10
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 2
	jne	SHORT $LN3@GRAPH_DATA@10
; Line 390
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	or	ecx, 2
	mov	edx, DWORD PTR _pDataXYObj$[ebp]
	mov	BYTE PTR [edx+40], cl
; Line 391
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN2@GRAPH_DATA@10
$LN3@GRAPH_DATA@10:
; Line 392
	cmp	DWORD PTR _OnOff$[ebp], 0
	jne	SHORT $LN2@GRAPH_DATA@10
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, 2
	je	SHORT $LN2@GRAPH_DATA@10
; Line 393
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	movzx	ecx, BYTE PTR [eax+40]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _pDataXYObj$[ebp]
	mov	BYTE PTR [edx+40], cl
; Line 394
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_DATA@10:
; Line 396
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN4@GRAPH_DATA@10:
; Line 399
	mov	eax, DWORD PTR _Old$[ebp]
; Line 400
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetPointVis ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_Clear
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_Clear
_TEXT	SEGMENT
_pDataObj$ = -8						; size = 4
_hDataObj$ = 8						; size = 4
_GRAPH_DATA_XY_Clear PROC				; COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 408
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@11
; Line 410
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$[ebp], eax
; Line 411
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 412
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 413
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$[ebp], 0
$LN2@GRAPH_DATA@11:
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_Clear ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetOwnerDraw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetOwnerDraw
_TEXT	SEGMENT
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_pfOwnerDraw$ = 12					; size = 4
_GRAPH_DATA_XY_SetOwnerDraw PROC			; COMDAT
; Line 422
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 424
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@12
; Line 426
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 427
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR _pfOwnerDraw$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 428
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 429
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN2@GRAPH_DATA@12:
; Line 432
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetOwnerDraw ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DATA_XY_SetPointSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DATA_XY_SetPointSize
_TEXT	SEGMENT
_pDataXYObj$ = -8					; size = 4
_hDataObj$ = 8						; size = 4
_PointSize$ = 12					; size = 4
_GRAPH_DATA_XY_SetPointSize PROC			; COMDAT
; Line 438
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	cmp	DWORD PTR _hDataObj$[ebp], 0
	je	SHORT $LN2@GRAPH_DATA@13
; Line 442
	mov	eax, DWORD PTR _hDataObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataXYObj$[ebp], eax
; Line 443
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR _PointSize$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 444
	mov	eax, DWORD PTR _pDataXYObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 445
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataXYObj$[ebp], 0
$LN2@GRAPH_DATA@13:
; Line 448
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DATA_XY_SetPointSize ENDP
_TEXT	ENDS
END
