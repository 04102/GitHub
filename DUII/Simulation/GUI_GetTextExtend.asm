; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_GetTextExtend.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_GetTextExtend
EXTRN	_GUI__GetFontSizeY:PROC
EXTRN	_GUI_GetCharDistX:PROC
EXTRN	_GUI_UC__GetCharCodeInc:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_gettextextend.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_GetTextExtend
_TEXT	SEGMENT
tv70 = -244						; size = 4
_Char$ = -44						; size = 2
_LineSizeX$ = -32					; size = 4
_NumLines$ = -20					; size = 4
_xMax$ = -8						; size = 4
_pRect$ = 8						; size = 4
_s$ = 12						; size = 4
_MaxNumChars$ = 16					; size = 4
_GUI_GetTextExtend PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	mov	DWORD PTR _LineSizeX$[ebp], 0
	mov	eax, DWORD PTR _LineSizeX$[ebp]
	mov	DWORD PTR _NumLines$[ebp], eax
	mov	ecx, DWORD PTR _NumLines$[ebp]
	mov	DWORD PTR _xMax$[ebp], ecx
; Line 39
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _GUI_Context+34
	mov	WORD PTR [eax], cx
; Line 40
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _GUI_Context+36
	mov	WORD PTR [eax+2], cx
; Line 41
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN11@GUI_GetTex
; Line 42
	jmp	$LN12@GUI_GetTex
$LN11@GUI_GetTex:
; Line 44
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN10@GUI_GetTex
; Line 45
	mov	eax, DWORD PTR _NumLines$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumLines$[ebp], eax
$LN9@GUI_GetTex:
; Line 46
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	mov	DWORD PTR tv70[ebp], eax
	mov	ecx, DWORD PTR _MaxNumChars$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _MaxNumChars$[ebp], ecx
	cmp	DWORD PTR tv70[ebp], 0
	je	SHORT $LN10@GUI_GetTex
; Line 47
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_UC__GetCharCodeInc
	add	esp, 4
	mov	WORD PTR _Char$[ebp], ax
; Line 48
	movzx	eax, WORD PTR _Char$[ebp]
	cmp	eax, 10					; 0000000aH
	je	SHORT $LN6@GUI_GetTex
	movzx	eax, WORD PTR _Char$[ebp]
	test	eax, eax
	jne	SHORT $LN7@GUI_GetTex
$LN6@GUI_GetTex:
; Line 49
	mov	eax, DWORD PTR _LineSizeX$[ebp]
	cmp	eax, DWORD PTR _xMax$[ebp]
	jle	SHORT $LN5@GUI_GetTex
; Line 50
	mov	eax, DWORD PTR _LineSizeX$[ebp]
	mov	DWORD PTR _xMax$[ebp], eax
$LN5@GUI_GetTex:
; Line 52
	mov	DWORD PTR _LineSizeX$[ebp], 0
; Line 53
	movzx	eax, WORD PTR _Char$[ebp]
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN4@GUI_GetTex
; Line 54
	mov	eax, DWORD PTR _NumLines$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumLines$[ebp], eax
$LN4@GUI_GetTex:
; Line 56
	movzx	eax, WORD PTR _Char$[ebp]
	test	eax, eax
	jne	SHORT $LN3@GUI_GetTex
; Line 57
	jmp	SHORT $LN10@GUI_GetTex
$LN3@GUI_GetTex:
; Line 59
	jmp	SHORT $LN2@GUI_GetTex
$LN7@GUI_GetTex:
; Line 60
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	call	_GUI_GetCharDistX
	add	esp, 4
	add	eax, DWORD PTR _LineSizeX$[ebp]
	mov	DWORD PTR _LineSizeX$[ebp], eax
$LN2@GUI_GetTex:
; Line 62
	jmp	$LN9@GUI_GetTex
$LN10@GUI_GetTex:
; Line 64
	mov	eax, DWORD PTR _LineSizeX$[ebp]
	cmp	eax, DWORD PTR _xMax$[ebp]
	jle	SHORT $LN1@GUI_GetTex
; Line 65
	mov	eax, DWORD PTR _LineSizeX$[ebp]
	mov	DWORD PTR _xMax$[ebp], eax
$LN1@GUI_GetTex:
; Line 67
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _xMax$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 68
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	esi, WORD PTR [eax+2]
	call	_GUI__GetFontSizeY
	imul	eax, DWORD PTR _NumLines$[ebp]
	lea	ecx, DWORD PTR [esi+eax-1]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+6], cx
$LN12@GUI_GetTex:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetTextExtend ENDP
_TEXT	ENDS
END
