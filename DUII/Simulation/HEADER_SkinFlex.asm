; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\HEADER_SkinFlex.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
__pProps DD	FLAT:__Props
CONST	ENDS
_DATA	SEGMENT
__Props	DD	0707070H
	DD	0fcfcfcH
	DD	0f3f3f3H
	DD	0ecececH
	DD	0dfdfdfH
	DD	0d0d0d0H
	DD	0404040H
_DATA	ENDS
PUBLIC	_HEADER_DrawSkinFlex
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\header_skinflex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _HEADER_DrawSkinFlex
_TEXT	SEGMENT
tv65 = -196						; size = 4
_pDrawItemInfo$ = 8					; size = 4
_HEADER_DrawSkinFlex PROC				; COMDAT
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 252
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR tv65[ebp]
	sub	edx, 2
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 14			; 0000000eH
	ja	SHORT $LN6@HEADER_Dra
	mov	eax, DWORD PTR tv65[ebp]
	movzx	ecx, BYTE PTR $LN10@HEADER_Dra[eax]
	jmp	DWORD PTR $LN11@HEADER_Dra[ecx*4]
$LN5@HEADER_Dra:
; Line 254
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__DrawBackground
	add	esp, 4
; Line 255
	jmp	SHORT $LN6@HEADER_Dra
$LN4@HEADER_Dra:
; Line 257
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__DrawBitmap
	add	esp, 4
; Line 258
	jmp	SHORT $LN6@HEADER_Dra
$LN3@HEADER_Dra:
; Line 260
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__DrawText
	add	esp, 4
; Line 261
	jmp	SHORT $LN6@HEADER_Dra
$LN2@HEADER_Dra:
; Line 263
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__DrawArrow
	add	esp, 4
; Line 264
	jmp	SHORT $LN6@HEADER_Dra
$LN1@HEADER_Dra:
; Line 266
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	push	eax
	call	__DrawOverlap
	add	esp, 4
$LN6@HEADER_Dra:
; Line 269
	xor	eax, eax
; Line 270
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@HEADER_Dra:
	DD	$LN2@HEADER_Dra
	DD	$LN5@HEADER_Dra
	DD	$LN4@HEADER_Dra
	DD	$LN1@HEADER_Dra
	DD	$LN3@HEADER_Dra
	DD	$LN6@HEADER_Dra
$LN10@HEADER_Dra:
	DB	0
	DB	1
	DB	2
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
_HEADER_DrawSkinFlex ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawGradientV:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_SetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawBackground
_TEXT	SEGMENT
_ym$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__DrawBackground PROC					; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+16]
	sar	ecx, 1
	mov	DWORD PTR _ym$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 68
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 69
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 70
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 71
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 72
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR __pProps
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ym$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 73
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __pProps
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _ym$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 74
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBackground ENDP
_TEXT	ENDS
EXTRN	_GUI_DRAW__Draw:PROC
EXTRN	_GUI_DRAW__GetYSize:PROC
EXTRN	_GUI_DRAW__GetXSize:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_HEADER_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawBitmap
_TEXT	SEGMENT
tv86 = -316						; size = 4
tv79 = -316						; size = 4
_ySize$ = -116						; size = 4
_xSize$ = -104						; size = 4
_Width$ = -92						; size = 4
_Align$ = -80						; size = 4
_yOff$ = -68						; size = 4
_xOff$ = -56						; size = 4
_hDrawObj$ = -44					; size = 4
_Columns$ = -32						; size = 4
_pColumn$ = -20						; size = 4
_pObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__DrawBitmap PROC					; COMDAT
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 90
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 91
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _Columns$[ebp], ecx
; Line 92
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 96
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _Columns$[ebp]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _pColumn$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _Align$[ebp], ecx
; Line 98
	mov	eax, DWORD PTR _pColumn$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Width$[ebp], ecx
; Line 99
	mov	eax, DWORD PTR _pColumn$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hDrawObj$[ebp], ecx
; Line 100
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
; Line 104
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_DRAW__GetXSize
	add	esp, 4
	mov	DWORD PTR _xSize$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_DRAW__GetYSize
	add	esp, 4
	mov	DWORD PTR _ySize$[ebp], eax
; Line 109
	mov	DWORD PTR _yOff$[ebp], 0
	mov	eax, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _xOff$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 3
	mov	DWORD PTR tv79[ebp], eax
	cmp	DWORD PTR tv79[ebp], 1
	je	SHORT $LN6@DrawBitmap
	cmp	DWORD PTR tv79[ebp], 2
	je	SHORT $LN5@DrawBitmap
	jmp	SHORT $LN7@DrawBitmap
$LN6@DrawBitmap:
; Line 112
	mov	eax, DWORD PTR _Width$[ebp]
	sub	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR _xOff$[ebp], eax
; Line 113
	jmp	SHORT $LN7@DrawBitmap
$LN5@DrawBitmap:
; Line 115
	mov	eax, DWORD PTR _Width$[ebp]
	sub	eax, DWORD PTR _xSize$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOff$[ebp], eax
$LN7@DrawBitmap:
; Line 118
	mov	eax, DWORD PTR _Align$[ebp]
	and	eax, 12					; 0000000cH
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 4
	je	SHORT $LN2@DrawBitmap
	cmp	DWORD PTR tv86[ebp], 12			; 0000000cH
	je	SHORT $LN1@DrawBitmap
	jmp	SHORT $LN3@DrawBitmap
$LN2@DrawBitmap:
; Line 120
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	add	edx, 1
	sub	edx, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR _yOff$[ebp], edx
; Line 121
	jmp	SHORT $LN3@DrawBitmap
$LN1@DrawBitmap:
; Line 123
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	add	eax, 1
	sub	eax, DWORD PTR _ySize$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOff$[ebp], eax
$LN3@DrawBitmap:
; Line 129
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _yOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, DWORD PTR _xOff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_DRAW__Draw
	add	esp, 16					; 00000010H
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawText
_TEXT	SEGMENT
_pText$ = -132						; size = 4
_pFont$ = -120						; size = 4
_TextColor$ = -108					; size = 4
_Rect$ = -96						; size = 8
_ArrowPos$ = -80					; size = 4
_ArrowSize$ = -68					; size = 4
_DirIndicatorColumn$ = -56				; size = 4
_Align$ = -44						; size = 4
_Columns$ = -32						; size = 4
_pColumn$ = -20						; size = 4
_pObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__DrawText PROC						; COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 158
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 159
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _Columns$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _TextColor$[ebp], ecx
; Line 161
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 162
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	mov	DWORD PTR _DirIndicatorColumn$[ebp], ecx
; Line 163
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 167
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _Columns$[ebp]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 168
	mov	eax, DWORD PTR _pColumn$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _Align$[ebp], ecx
; Line 169
	mov	eax, DWORD PTR _pColumn$[ebp]
	add	eax, 12					; 0000000cH
	mov	DWORD PTR _pText$[ebp], eax
; Line 170
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
; Line 174
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+12]
	mov	WORD PTR _Rect$[ebp], cx
; Line 175
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _Rect$[ebp+2], cx
; Line 176
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+20]
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 177
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+24]
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 178
	push	2
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 179
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _DirIndicatorColumn$[ebp]
	cmp	ecx, DWORD PTR [eax+8]
	jne	SHORT $LN1@DrawText
; Line 180
	lea	eax, DWORD PTR _ArrowPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ArrowSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	push	edx
	call	__GetArrowPara
	add	esp, 12					; 0000000cH
; Line 181
	mov	eax, DWORD PTR _ArrowSize$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	movsx	edx, WORD PTR _Rect$[ebp+4]
	sub	edx, ecx
	mov	WORD PTR _Rect$[ebp+4], dx
$LN1@DrawText:
; Line 183
	mov	eax, DWORD PTR _TextColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 184
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 185
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 186
	mov	eax, DWORD PTR _Align$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$[ebp]
	push	edx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@DrawText
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN8@DrawText:
	DD	3
	DD	$LN7@DrawText
$LN7@DrawText:
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN4@DrawText
	DD	-80					; ffffffb0H
	DD	4
	DD	$LN5@DrawText
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN6@DrawText
$LN6@DrawText:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN5@DrawText:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN4@DrawText:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
__DrawText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetArrowPara
_TEXT	SEGMENT
_pDrawItemInfo$ = 8					; size = 4
_pArrowSize$ = 12					; size = 4
_pArrowPos$ = 16					; size = 4
__GetArrowPara PROC					; COMDAT
; Line 136
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 137
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [eax+24]
	sub	eax, DWORD PTR [ecx+16]
	sub	eax, 4
	cdq
	mov	ecx, 3
	idiv	ecx
	sub	eax, 1
	mov	edx, DWORD PTR _pArrowSize$[ebp]
	mov	DWORD PTR [edx], eax
; Line 138
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 4
	mov	edx, DWORD PTR _pArrowSize$[ebp]
	sub	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _pArrowPos$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetArrowPara ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawArrow
_TEXT	SEGMENT
_ArrowPos$ = -44					; size = 4
_ArrowSize$ = -32					; size = 4
_DirIndicatorReverse$ = -20				; size = 4
_pObj$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__DrawArrow PROC					; COMDAT
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 211
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 212
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _DirIndicatorReverse$[ebp], ecx
; Line 213
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 217
	lea	eax, DWORD PTR _ArrowPos$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ArrowSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	push	edx
	call	__GetArrowPara
	add	esp, 12					; 0000000cH
; Line 221
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 222
	mov	eax, DWORD PTR _DirIndicatorReverse$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _DirIndicatorReverse$[ebp]
	imul	ecx, 3
	sub	eax, ecx
	push	eax
	mov	edx, DWORD PTR _ArrowSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [eax+24]
	sub	edx, DWORD PTR [ecx+16]
	sar	edx, 1
	push	edx
	mov	eax, DWORD PTR _ArrowPos$[ebp]
	push	eax
	call	__DrawTriangle
	add	esp, 16					; 00000010H
; Line 223
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@DrawArrow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@DrawArrow:
	DD	2
	DD	$LN5@DrawArrow
$LN5@DrawArrow:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN3@DrawArrow
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN4@DrawArrow
$LN4@DrawArrow:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN3@DrawArrow:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
__DrawArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawTriangle
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Size$ = 16						; size = 4
_Inc$ = 20						; size = 4
__DrawTriangle PROC					; COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 194
	mov	eax, DWORD PTR _Inc$[ebp]
	neg	eax
	mov	ecx, DWORD PTR _Size$[ebp]
	sar	ecx, 1
	imul	eax, ecx
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN3@DrawTriang
$LN2@DrawTriang:
; Line 195
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Size$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _Inc$[ebp]
	mov	DWORD PTR _y$[ebp], ecx
$LN3@DrawTriang:
	cmp	DWORD PTR _Size$[ebp], 0
	jl	SHORT $LN4@DrawTriang
; Line 196
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 197
	jmp	SHORT $LN2@DrawTriang
$LN4@DrawTriang:
; Line 198
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawTriangle ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawOverlap
_TEXT	SEGMENT
_ym$ = -8						; size = 4
_pDrawItemInfo$ = 8					; size = 4
__DrawOverlap PROC					; COMDAT
; Line 229
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+16]
	sar	ecx, 1
	mov	DWORD PTR _ym$[ebp], ecx
; Line 233
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 234
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 235
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 236
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 237
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR __pProps
	mov	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _ym$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 238
	mov	eax, DWORD PTR __pProps
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR __pProps
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	edx, DWORD PTR _ym$[ebp]
	push	edx
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 239
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawOverlap ENDP
_TEXT	ENDS
PUBLIC	_HEADER_SetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HEADER_SetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_HEADER_SetSkinFlexProps PROC				; COMDAT
; Line 276
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 277
	cmp	DWORD PTR _Index$[ebp], 0
	jne	SHORT $LN2@HEADER_Set
; Line 278
	mov	esi, DWORD PTR _pProps$[ebp]
	mov	ecx, 7
	mov	edi, DWORD PTR __pProps
	rep movsd
$LN2@HEADER_Set:
; Line 280
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_HEADER_SetSkinFlexProps ENDP
_TEXT	ENDS
PUBLIC	_HEADER_GetSkinFlexProps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HEADER_GetSkinFlexProps
_TEXT	SEGMENT
_pProps$ = 8						; size = 4
_Index$ = 12						; size = 4
_HEADER_GetSkinFlexProps PROC				; COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	cmp	DWORD PTR _Index$[ebp], 0
	jne	SHORT $LN2@HEADER_Get
; Line 288
	mov	esi, DWORD PTR __pProps
	mov	ecx, 7
	mov	edi, DWORD PTR _pProps$[ebp]
	rep movsd
$LN2@HEADER_Get:
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_HEADER_GetSkinFlexProps ENDP
_TEXT	ENDS
END
