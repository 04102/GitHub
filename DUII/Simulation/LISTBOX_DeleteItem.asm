; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTBOX_DeleteItem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTBOX_DeleteItem
EXTRN	_LISTBOX__InvalidateItemAndBelow:PROC
EXTRN	_LISTBOX__InvalidateInsideArea:PROC
EXTRN	_LISTBOX_UpdateScrollers:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ARRAY_DeleteItem:PROC
EXTRN	_LISTBOX__GetNumItems:PROC
EXTRN	_LISTBOX_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listbox_deleteitem.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTBOX_DeleteItem
_TEXT	SEGMENT
_NumItems$11424 = -32					; size = 4
_pObj$11423 = -20					; size = 4
_Sel$11422 = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_LISTBOX_DeleteItem PROC				; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN10@LISTBOX_De
; Line 46
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11423[ebp], eax
; Line 47
	mov	eax, DWORD PTR _pObj$11423[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$11424[ebp], eax
; Line 48
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$11424[ebp]
	jae	$LN8@LISTBOX_De
; Line 49
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11423[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 53
	mov	eax, DWORD PTR _pObj$11423[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	DWORD PTR _Sel$11422[ebp], ecx
; Line 54
	cmp	DWORD PTR _Sel$11422[ebp], 0
	jl	SHORT $LN7@LISTBOX_De
; Line 55
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Sel$11422[ebp]
	jne	SHORT $LN6@LISTBOX_De
; Line 56
	or	eax, -1
	mov	ecx, DWORD PTR _pObj$11423[ebp]
	mov	WORD PTR [ecx+152], ax
	jmp	SHORT $LN7@LISTBOX_De
$LN6@LISTBOX_De:
; Line 57
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _Sel$11422[ebp]
	jge	SHORT $LN7@LISTBOX_De
; Line 58
	mov	eax, DWORD PTR _pObj$11423[ebp]
	mov	cx, WORD PTR [eax+152]
	sub	cx, 1
	mov	edx, DWORD PTR _pObj$11423[ebp]
	mov	WORD PTR [edx+152], cx
$LN7@LISTBOX_De:
; Line 61
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11423[ebp], 0
; Line 62
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@LISTBOX_De
; Line 63
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
; Line 64
	jmp	SHORT $LN2@LISTBOX_De
$LN3@LISTBOX_De:
; Line 65
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemAndBelow
	add	esp, 8
$LN2@LISTBOX_De:
; Line 67
	jmp	SHORT $LN10@LISTBOX_De
$LN8@LISTBOX_De:
; Line 68
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11423[ebp], 0
$LN10@LISTBOX_De:
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_DeleteItem ENDP
_TEXT	ENDS
END
