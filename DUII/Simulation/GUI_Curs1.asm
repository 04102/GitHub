; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Curs1.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_CURSOR_SelectEx
EXTRN	_GUI_SPRITE__CreateEx:PROC
EXTRN	_GUI_SPRITE_Delete:PROC
EXTRN	_GUI_SetLayerSizeEx:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GUI_SetBkColor:PROC
EXTRN	_GUI_SelectLayer:PROC
EXTRN	_GUI_GetCursorLayer:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
__aCursorContext DB 014H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_curs1.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_CURSOR_SelectEx
_TEXT	SEGMENT
_OldLayer$8368 = -32					; size = 4
_pOldCursor$ = -20					; size = 4
_CursorLayer$ = -8					; size = 4
_pCursor$ = 8						; size = 4
_Layer$ = 12						; size = 4
_GUI_CURSOR_SelectEx PROC				; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	_GUI_GetCursorLayer
	add	esp, 4
	mov	DWORD PTR _CursorLayer$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax]
	mov	DWORD PTR _pOldCursor$[ebp], ecx
; Line 109
	cmp	DWORD PTR _CursorLayer$[ebp], 0
	je	$LN4@GUI_CURSOR
; Line 112
	mov	eax, DWORD PTR _CursorLayer$[ebp]
	push	eax
	call	_GUI_SelectLayer
	add	esp, 4
	mov	DWORD PTR _OldLayer$8368[ebp], eax
; Line 113
	push	-16777216				; ff000000H
	call	_GUI_SetBkColor
	add	esp, 4
; Line 114
	call	_GUI_Clear
; Line 115
	push	0
	push	0
	mov	eax, DWORD PTR _pCursor$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 116
	mov	eax, DWORD PTR _pCursor$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _pCursor$[ebp]
	mov	ecx, DWORD PTR [eax]
	movzx	edx, WORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _CursorLayer$[ebp]
	push	eax
	call	_GUI_SetLayerSizeEx
	add	esp, 12					; 0000000cH
; Line 117
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _pCursor$[ebp]
	mov	DWORD PTR __aCursorContext[eax], ecx
; Line 118
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+5], 1
; Line 119
	mov	eax, DWORD PTR _OldLayer$8368[ebp]
	push	eax
	call	_GUI_SelectLayer
	add	esp, 4
; Line 120
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	__Show
	add	esp, 4
; Line 121
	jmp	$LN3@GUI_CURSOR
$LN4@GUI_CURSOR:
; Line 123
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _pCursor$[ebp]
	mov	DWORD PTR __aCursorContext[eax], ecx
; Line 124
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+5], 1
; Line 125
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	cmp	DWORD PTR __aCursorContext[eax+16], 0
	je	SHORT $LN2@GUI_CURSOR
; Line 126
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+16]
	push	ecx
	call	_GUI_SPRITE_Delete
	add	esp, 4
; Line 127
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	DWORD PTR __aCursorContext[eax+16], 0
$LN2@GUI_CURSOR:
; Line 129
	cmp	DWORD PTR _pCursor$[ebp], 0
	je	SHORT $LN3@GUI_CURSOR
; Line 130
	push	1
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Layer$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _pCursor$[ebp]
	mov	eax, DWORD PTR __aCursorContext[ecx+12]
	sub	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _Layer$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _pCursor$[ebp]
	mov	eax, DWORD PTR __aCursorContext[ecx+8]
	sub	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pCursor$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GUI_SPRITE__CreateEx
	add	esp, 20					; 00000014H
	mov	ecx, DWORD PTR _Layer$[ebp]
	imul	ecx, 20					; 00000014H
	mov	DWORD PTR __aCursorContext[ecx+16], eax
; Line 131
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	__Show
	add	esp, 4
$LN3@GUI_CURSOR:
; Line 135
	mov	eax, DWORD PTR _pOldCursor$[ebp]
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_SelectEx ENDP
_TEXT	ENDS
EXTRN	_GUI_SPRITE_Show:PROC
EXTRN	_GUI_SetLayerVisEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Show
_TEXT	SEGMENT
_CursorLayer$ = -8					; size = 4
_Layer$ = 8						; size = 4
__Show	PROC						; COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 63
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	_GUI_GetCursorLayer
	add	esp, 4
	mov	DWORD PTR _CursorLayer$[ebp], eax
; Line 64
	cmp	DWORD PTR _CursorLayer$[ebp], 0
	je	SHORT $LN3@Show
; Line 65
	push	1
	mov	eax, DWORD PTR _CursorLayer$[ebp]
	push	eax
	call	_GUI_SetLayerVisEx
	add	esp, 8
; Line 66
	jmp	SHORT $LN4@Show
$LN3@Show:
; Line 67
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	movzx	ecx, BYTE PTR __aCursorContext[eax+5]
	test	ecx, ecx
	je	SHORT $LN4@Show
; Line 68
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+4], 1
; Line 69
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+16]
	push	ecx
	call	_GUI_SPRITE_Show
	add	esp, 4
$LN4@Show:
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Show	ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_HideEx
EXTRN	_GUI_SPRITE_SetPosition:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_HideEx
_TEXT	SEGMENT
_Layer$ = 8						; size = 4
_GUI_CURSOR_HideEx PROC					; COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 145
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+5], 0
; Line 146
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	cmp	DWORD PTR __aCursorContext[eax+16], 0
	je	SHORT $LN1@GUI_CURSOR@2
; Line 147
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _Layer$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR __aCursorContext[ecx]
	mov	eax, DWORD PTR __aCursorContext[eax+12]
	sub	eax, DWORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _Layer$[ebp]
	imul	ecx, 20					; 00000014H
	mov	edx, DWORD PTR _Layer$[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR __aCursorContext[edx]
	mov	ecx, DWORD PTR __aCursorContext[ecx+8]
	sub	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _Layer$[ebp]
	imul	edx, 20					; 00000014H
	mov	eax, DWORD PTR __aCursorContext[edx+16]
	push	eax
	call	_GUI_SPRITE_SetPosition
	add	esp, 12					; 0000000cH
$LN1@GUI_CURSOR@2:
; Line 149
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	__Hide
	add	esp, 4
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_HideEx ENDP
_TEXT	ENDS
EXTRN	_GUI_SPRITE_Hide:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Hide
_TEXT	SEGMENT
_CursorLayer$ = -8					; size = 4
_Layer$ = 8						; size = 4
__Hide	PROC						; COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 80
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	_GUI_GetCursorLayer
	add	esp, 4
	mov	DWORD PTR _CursorLayer$[ebp], eax
; Line 81
	cmp	DWORD PTR _CursorLayer$[ebp], 0
	je	SHORT $LN3@Hide
; Line 82
	push	0
	mov	eax, DWORD PTR _CursorLayer$[ebp]
	push	eax
	call	_GUI_SetLayerVisEx
	add	esp, 8
; Line 83
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+4], 0
; Line 84
	jmp	SHORT $LN4@Hide
$LN3@Hide:
; Line 85
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	movzx	ecx, BYTE PTR __aCursorContext[eax+4]
	test	ecx, ecx
	je	SHORT $LN4@Hide
; Line 86
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+16]
	push	ecx
	call	_GUI_SPRITE_Hide
	add	esp, 4
; Line 87
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+4], 0
$LN4@Hide:
; Line 90
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Hide	ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_ShowEx
EXTRN	_GUI_CursorArrowM:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_ShowEx
_TEXT	SEGMENT
_Layer$ = 8						; size = 4
_GUI_CURSOR_ShowEx PROC					; COMDAT
; Line 157
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 160
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	BYTE PTR __aCursorContext[eax+5], 1
; Line 161
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	cmp	DWORD PTR __aCursorContext[eax], 0
	jne	SHORT $LN2@GUI_CURSOR@3
; Line 162
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	push	OFFSET _GUI_CursorArrowM
	call	_GUI_CURSOR_SelectEx
	add	esp, 8
; Line 163
	jmp	SHORT $LN3@GUI_CURSOR@3
$LN2@GUI_CURSOR@3:
; Line 164
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	__Show
	add	esp, 4
$LN3@GUI_CURSOR@3:
; Line 167
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_ShowEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_GetStateEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_GetStateEx
_TEXT	SEGMENT
_r$ = -8						; size = 4
_Layer$ = 8						; size = 4
_GUI_CURSOR_GetStateEx PROC				; COMDAT
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 177
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	movzx	ecx, BYTE PTR __aCursorContext[eax+5]
	mov	DWORD PTR _r$[ebp], ecx
; Line 179
	mov	eax, DWORD PTR _r$[ebp]
; Line 180
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_GetStateEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_SetPositionEx
EXTRN	_GUI_SetLayerPosEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_SetPositionEx
_TEXT	SEGMENT
_CursorLayer$ = -8					; size = 4
_xNewPos$ = 8						; size = 4
_yNewPos$ = 12						; size = 4
_Layer$ = 16						; size = 4
_GUI_CURSOR_SetPositionEx PROC				; COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 190
	mov	eax, DWORD PTR _Layer$[ebp]
	push	eax
	call	_GUI_GetCursorLayer
	add	esp, 4
	mov	DWORD PTR _CursorLayer$[ebp], eax
; Line 191
	cmp	DWORD PTR _CursorLayer$[ebp], 0
	je	SHORT $LN4@GUI_CURSOR@4
; Line 192
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax]
	mov	edx, DWORD PTR _xNewPos$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _xNewPos$[ebp], edx
; Line 193
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax]
	mov	edx, DWORD PTR _yNewPos$[ebp]
	sub	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _yNewPos$[ebp], edx
; Line 194
	mov	eax, DWORD PTR _yNewPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xNewPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _CursorLayer$[ebp]
	push	edx
	call	_GUI_SetLayerPosEx
	add	esp, 12					; 0000000cH
; Line 195
	jmp	$LN5@GUI_CURSOR@4
$LN4@GUI_CURSOR@4:
; Line 196
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+8]
	xor	edx, edx
	cmp	ecx, DWORD PTR _xNewPos$[ebp]
	setne	dl
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+12]
	xor	eax, eax
	cmp	ecx, DWORD PTR _yNewPos$[ebp]
	setne	al
	or	edx, eax
	je	SHORT $LN5@GUI_CURSOR@4
; Line 197
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	cmp	DWORD PTR __aCursorContext[eax+16], 0
	je	SHORT $LN1@GUI_CURSOR@4
; Line 198
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax]
	mov	edx, DWORD PTR _yNewPos$[ebp]
	sub	edx, DWORD PTR [ecx+8]
	push	edx
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax]
	mov	edx, DWORD PTR _xNewPos$[ebp]
	sub	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR __aCursorContext[eax+16]
	push	ecx
	call	_GUI_SPRITE_SetPosition
	add	esp, 12					; 0000000cH
$LN1@GUI_CURSOR@4:
; Line 200
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _xNewPos$[ebp]
	mov	DWORD PTR __aCursorContext[eax+8], ecx
; Line 201
	mov	eax, DWORD PTR _Layer$[ebp]
	imul	eax, 20					; 00000014H
	mov	ecx, DWORD PTR _yNewPos$[ebp]
	mov	DWORD PTR __aCursorContext[eax+12], ecx
$LN5@GUI_CURSOR@4:
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_SetPositionEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_Select
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_Select
_TEXT	SEGMENT
_pCursor$ = 8						; size = 4
_GUI_CURSOR_Select PROC					; COMDAT
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 212
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	mov	ecx, DWORD PTR _pCursor$[ebp]
	push	ecx
	call	_GUI_CURSOR_SelectEx
	add	esp, 8
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_Select ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_Hide
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_Hide
_TEXT	SEGMENT
_GUI_CURSOR_Hide PROC					; COMDAT
; Line 219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_CURSOR_HideEx
	add	esp, 4
; Line 221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_Hide ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_Show
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_Show
_TEXT	SEGMENT
_GUI_CURSOR_Show PROC					; COMDAT
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 228
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_CURSOR_ShowEx
	add	esp, 4
; Line 229
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_Show ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_GetState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_GetState
_TEXT	SEGMENT
_GUI_CURSOR_GetState PROC				; COMDAT
; Line 235
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 236
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_CURSOR_GetStateEx
	add	esp, 4
; Line 237
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_GetState ENDP
_TEXT	ENDS
PUBLIC	_GUI_CURSOR_SetPosition
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_CURSOR_SetPosition
_TEXT	SEGMENT
_xNewPos$ = 8						; size = 4
_yNewPos$ = 12						; size = 4
_GUI_CURSOR_SetPosition PROC				; COMDAT
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 244
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	mov	ecx, DWORD PTR _yNewPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xNewPos$[ebp]
	push	edx
	call	_GUI_CURSOR_SetPositionEx
	add	esp, 12					; 0000000cH
; Line 245
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_CURSOR_SetPosition ENDP
_TEXT	ENDS
END
