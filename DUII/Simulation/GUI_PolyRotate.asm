; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_PolyRotate.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__real@40490fda
PUBLIC	__real@482fc800
PUBLIC	_GUI_RotatePolygon
EXTRN	_GUI__SinHQ:PROC
EXTRN	_GUI__CosHQ:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@40490fda
; File c:\duii\simulation\gui\core\gui_polyrotate.c
CONST	SEGMENT
__real@40490fda DD 040490fdar			; 3.14159
CONST	ENDS
;	COMDAT __real@482fc800
CONST	SEGMENT
__real@482fc800 DD 0482fc800r			; 180000
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_RotatePolygon
_TEXT	SEGMENT
_CosHQ$ = -68						; size = 4
_SinHQ$ = -56						; size = 4
_AngDEG_1000$ = -44					; size = 4
_j$ = -32						; size = 4
_y$ = -20						; size = 4
_x$ = -8						; size = 4
_pDest$ = 8						; size = 4
_pSrc$ = 12						; size = 4
_NumPoints$ = 16					; size = 4
_Angle$ = 20						; size = 4
_GUI_RotatePolygon PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	fld	DWORD PTR _Angle$[ebp]
	fmul	DWORD PTR __real@482fc800
	fdiv	DWORD PTR __real@40490fda
	call	__ftol2_sse
	mov	DWORD PTR _AngDEG_1000$[ebp], eax
; Line 40
	mov	eax, DWORD PTR _AngDEG_1000$[ebp]
	push	eax
	call	_GUI__CosHQ
	add	esp, 4
	mov	DWORD PTR _CosHQ$[ebp], eax
; Line 41
	mov	eax, DWORD PTR _AngDEG_1000$[ebp]
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
	mov	DWORD PTR _SinHQ$[ebp], eax
; Line 42
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN3@GUI_Rotate
$LN2@GUI_Rotate:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN3@GUI_Rotate:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	SHORT $LN1@GUI_Rotate
; Line 43
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _pSrc$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4]
	mov	DWORD PTR _x$[ebp], edx
; Line 44
	mov	eax, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _pSrc$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4+2]
	mov	DWORD PTR _y$[ebp], edx
; Line 45
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, DWORD PTR _CosHQ$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	imul	ecx, DWORD PTR _SinHQ$[ebp]
	add	eax, ecx
	sar	eax, 16					; 00000010H
	mov	edx, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	WORD PTR [ecx+edx*4], ax
; Line 46
	mov	eax, DWORD PTR _x$[ebp]
	neg	eax
	imul	eax, DWORD PTR _SinHQ$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	imul	ecx, DWORD PTR _CosHQ$[ebp]
	add	eax, ecx
	sar	eax, 16					; 00000010H
	mov	edx, DWORD PTR _j$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	WORD PTR [ecx+edx*4+2], ax
; Line 47
	jmp	SHORT $LN2@GUI_Rotate
$LN1@GUI_Rotate:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_RotatePolygon ENDP
_TEXT	ENDS
END
