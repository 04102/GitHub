; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_CharP.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUIPROP__FindChar
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_charp.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUIPROP__FindChar
_TEXT	SEGMENT
_pProp$ = 8						; size = 4
_c$ = 12						; size = 2
_GUIPROP__FindChar PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	jmp	SHORT $LN4@GUIPROP__F
$LN3@GUIPROP__F:
	mov	eax, DWORD PTR _pProp$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pProp$[ebp], ecx
$LN4@GUIPROP__F:
	cmp	DWORD PTR _pProp$[ebp], 0
	je	SHORT $LN2@GUIPROP__F
; Line 39
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pProp$[ebp]
	movzx	edx, WORD PTR [ecx]
	cmp	eax, edx
	jl	SHORT $LN1@GUIPROP__F
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pProp$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	cmp	eax, edx
	jg	SHORT $LN1@GUIPROP__F
; Line 40
	jmp	SHORT $LN2@GUIPROP__F
$LN1@GUIPROP__F:
; Line 41
	jmp	SHORT $LN3@GUIPROP__F
$LN2@GUIPROP__F:
; Line 42
	mov	eax, DWORD PTR _pProp$[ebp]
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP__FindChar ENDP
_TEXT	ENDS
PUBLIC	_GUIPROP_DispChar
EXTRN	_LCD_FillRect:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_GetBkColor:PROC
EXTRN	_GUI_GetColor:PROC
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_LCD_pBkColorIndex:DWORD
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUIPROP_DispChar
_TEXT	SEGMENT
_OldColor$8359 = -104					; size = 4
_YSize$8357 = -92					; size = 4
_YDist$8356 = -80					; size = 4
_YMag$8355 = -68					; size = 4
_pCharInfo$ = -56					; size = 4
_pProp$ = -44						; size = 4
_OldDrawMode$ = -32					; size = 4
_DrawMode$ = -20					; size = 4
_BytesPerLine$ = -8					; size = 4
_c$ = 8							; size = 2
_GUIPROP_DispChar PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	movsx	eax, WORD PTR _GUI_Context+42
	mov	DWORD PTR _DrawMode$[ebp], eax
; Line 66
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_GUIPROP__FindChar
	add	esp, 8
	mov	DWORD PTR _pProp$[ebp], eax
; Line 67
	cmp	DWORD PTR _pProp$[ebp], 0
	je	$LN4@GUIPROP_Di
; Line 68
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pProp$[ebp]
	movzx	edx, WORD PTR [ecx]
	sub	eax, edx
	mov	ecx, DWORD PTR _pProp$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	lea	eax, DWORD PTR [edx+eax*8]
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	mov	DWORD PTR _BytesPerLine$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _DrawMode$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _OldDrawMode$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	mov	ecx, DWORD PTR _pCharInfo$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _BytesPerLine$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [ecx+27]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+26]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+24]
	push	eax
	mov	ecx, DWORD PTR _pCharInfo$[ebp]
	movzx	edx, BYTE PTR [ecx]
	push	edx
	movsx	eax, WORD PTR _GUI_Context+36
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+34
	push	ecx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 82
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+25]
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+24]
	cmp	ecx, eax
	jle	$LN2@GUIPROP_Di
; Line 83
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	mov	DWORD PTR _YMag$8355[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+25]
	imul	ecx, DWORD PTR _YMag$8355[ebp]
	mov	DWORD PTR _YDist$8356[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+24]
	imul	ecx, DWORD PTR _YMag$8355[ebp]
	mov	DWORD PTR _YSize$8357[ebp], ecx
; Line 86
	cmp	DWORD PTR _DrawMode$[ebp], 2
	je	SHORT $LN2@GUIPROP_Di
; Line 87
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$8359[ebp], eax
; Line 88
	call	_GUI_GetBkColor
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 92
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _YDist$8356[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+34
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [edx+27]
	imul	eax, edx
	add	ecx, eax
	push	ecx
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _YSize$8357[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+34
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 93
	mov	eax, DWORD PTR _OldColor$8359[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
$LN2@GUIPROP_Di:
; Line 96
	mov	eax, DWORD PTR _OldDrawMode$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 97
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+26]
	imul	ecx, eax
	movsx	edx, WORD PTR _GUI_Context+34
	add	edx, ecx
	mov	WORD PTR _GUI_Context+34, dx
$LN4@GUIPROP_Di:
; Line 99
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP_DispChar ENDP
_TEXT	ENDS
PUBLIC	_GUIPROP_GetCharDistX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUIPROP_GetCharDistX
_TEXT	SEGMENT
tv79 = -208						; size = 4
_pProp$ = -8						; size = 4
_c$ = 8							; size = 2
_GUIPROP_GetCharDistX PROC				; COMDAT
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_GUIPROP__FindChar
	add	esp, 8
	mov	DWORD PTR _pProp$[ebp], eax
; Line 109
	cmp	DWORD PTR _pProp$[ebp], 0
	je	SHORT $LN3@GUIPROP_Ge
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pProp$[ebp]
	movzx	edx, WORD PTR [ecx]
	sub	eax, edx
	mov	ecx, DWORD PTR _pProp$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	movzx	eax, BYTE PTR [edx+eax*8]
	mov	ecx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [ecx+26]
	imul	eax, edx
	mov	DWORD PTR tv79[ebp], eax
	jmp	SHORT $LN4@GUIPROP_Ge
$LN3@GUIPROP_Ge:
	mov	DWORD PTR tv79[ebp], 0
$LN4@GUIPROP_Ge:
	mov	eax, DWORD PTR tv79[ebp]
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP_GetCharDistX ENDP
_TEXT	ENDS
PUBLIC	_GUIPROP_GetFontInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUIPROP_GetFontInfo
_TEXT	SEGMENT
_pFont$ = 8						; size = 4
_pfi$ = 12						; size = 4
_GUIPROP_GetFontInfo PROC				; COMDAT
; Line 116
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 117
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR _pFont$[ebp], eax
; Line 118
	mov	eax, 1
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	WORD PTR [ecx], ax
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP_GetFontInfo ENDP
_TEXT	ENDS
PUBLIC	_GUIPROP_IsInFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUIPROP_IsInFont
_TEXT	SEGMENT
_pProp$ = -8						; size = 4
_pFont$ = 8						; size = 4
_c$ = 12						; size = 2
_GUIPROP_IsInFont PROC					; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 128
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_GUIPROP__FindChar
	add	esp, 8
	mov	DWORD PTR _pProp$[ebp], eax
; Line 129
	xor	eax, eax
	cmp	DWORD PTR _pProp$[ebp], 0
	setne	al
; Line 130
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP_IsInFont ENDP
_TEXT	ENDS
END
