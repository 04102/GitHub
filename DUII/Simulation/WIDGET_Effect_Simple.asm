; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\WIDGET_Effect_Simple.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WIDGET_Effect_Simple
_BSS	SEGMENT
__aColor DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_WIDGET_Effect_Simple DD 01H
	DD	FLAT:__DrawUp
	DD	FLAT:__DrawUpRect
	DD	FLAT:__DrawDown
	DD	FLAT:__DrawDownRect
	ORG $+8
CONST	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_GUI_RestoreContext:PROC
EXTRN	_GUI_DrawRect:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI_SaveContext_W:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\widget_effect_simple.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DrawUpRect
_TEXT	SEGMENT
_Context$ = -104					; size = 96
__$ArrayPad$ = -4					; size = 4
_pRect$ = 8						; size = 4
__DrawUpRect PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 61
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_SaveContext_W
	add	esp, 4
; Line 62
	mov	eax, DWORD PTR __aColor
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 63
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 64
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_RestoreContext
	add	esp, 4
; Line 65
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawUpRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DrawUpRect:
	DD	1
	DD	$LN4@DrawUpRect
$LN4@DrawUpRect:
	DD	-104					; ffffff98H
	DD	96					; 00000060H
	DD	$LN3@DrawUpRect
$LN3@DrawUpRect:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
__DrawUpRect ENDP
_TEXT	ENDS
EXTRN	_WM_GetClientRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawUp
_TEXT	SEGMENT
_r$ = -12						; size = 8
__DrawUp PROC						; COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 77
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 78
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	__DrawUpRect
	add	esp, 4
; Line 79
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawUp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@DrawUp:
	DD	1
	DD	$LN4@DrawUp
$LN4@DrawUp:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@DrawUp
$LN3@DrawUp:
	DB	114					; 00000072H
	DB	0
__DrawUp ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawDownRect
_TEXT	SEGMENT
_Context$ = -104					; size = 96
__$ArrayPad$ = -4					; size = 4
_pRect$ = 8						; size = 4
__DrawDownRect PROC					; COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 92
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_SaveContext_W
	add	esp, 4
; Line 93
	mov	eax, DWORD PTR __aColor
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 94
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	push	edx
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	push	ecx
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 95
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_RestoreContext
	add	esp, 4
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawDownRe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@DrawDownRe:
	DD	1
	DD	$LN4@DrawDownRe
$LN4@DrawDownRe:
	DD	-104					; ffffff98H
	DD	96					; 00000060H
	DD	$LN3@DrawDownRe
$LN3@DrawDownRe:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
__DrawDownRect ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawDown
_TEXT	SEGMENT
_r$ = -12						; size = 8
__DrawDown PROC						; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 109
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	__DrawDownRect
	add	esp, 4
; Line 110
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DrawDown
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@DrawDown:
	DD	1
	DD	$LN4@DrawDown
$LN4@DrawDown:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@DrawDown
$LN3@DrawDown:
	DB	114					; 00000072H
	DB	0
__DrawDown ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_EFFECT_Simple_SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_EFFECT_Simple_SetColor
_TEXT	SEGMENT
_Index$ = 8						; size = 4
_Color$ = 12						; size = 4
_WIDGET_EFFECT_Simple_SetColor PROC			; COMDAT
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 123
	cmp	DWORD PTR _Index$[ebp], 1
	jae	SHORT $LN2@WIDGET_EFF
; Line 124
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR __aColor[eax*4], ecx
$LN2@WIDGET_EFF:
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_EFFECT_Simple_SetColor ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_EFFECT_Simple_GetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_EFFECT_Simple_GetColor
_TEXT	SEGMENT
_r$ = -8						; size = 4
_Index$ = 8						; size = 4
_WIDGET_EFFECT_Simple_GetColor PROC			; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	mov	DWORD PTR _r$[ebp], 0
; Line 135
	cmp	DWORD PTR _Index$[ebp], 1
	jae	SHORT $LN1@WIDGET_EFF@2
; Line 136
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR __aColor[eax*4]
	mov	DWORD PTR _r$[ebp], ecx
$LN1@WIDGET_EFF@2:
; Line 138
	mov	eax, DWORD PTR _r$[ebp]
; Line 139
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_EFFECT_Simple_GetColor ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_EFFECT_Simple_GetNumColors
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_EFFECT_Simple_GetNumColors
_TEXT	SEGMENT
_WIDGET_EFFECT_Simple_GetNumColors PROC			; COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	mov	eax, 1
; Line 147
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_EFFECT_Simple_GetNumColors ENDP
_TEXT	ENDS
END
