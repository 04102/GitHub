; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawGradient.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawGradientV
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawgradient.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawGradientV
_TEXT	SEGMENT
_r$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_Color0$ = 24						; size = 4
_Color1$ = 28						; size = 4
_GUI_DrawGradientV PROC					; COMDAT
; Line 120
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 126
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 128
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 129
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 130
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 131
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 132
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawGr
$LN3@GUI_DrawGr:
; Line 134
	push	1
	push	OFFSET _LCD_DrawHLine
	mov	eax, DWORD PTR _Color1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Color0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawGradient
	add	esp, 32					; 00000020H
; Line 136
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawGr
$LN5@GUI_DrawGr:
; Line 139
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawGr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GUI_DrawGr:
	DD	1
	DD	$LN8@GUI_DrawGr
$LN8@GUI_DrawGr:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI_DrawGr
$LN7@GUI_DrawGr:
	DB	114					; 00000072H
	DB	0
_GUI_DrawGradientV ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI_GetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawGradient
_TEXT	SEGMENT
tv81 = -436						; size = 4
_ColorSic$ = -236					; size = 4
_ColorOld$ = -224					; size = 4
_ColorNew$ = -212					; size = 4
_NumLines$ = -200					; size = 4
_ySize1$ = -188						; size = 4
_ySize$ = -176						; size = 4
_d$ = -164						; size = 4
_y$ = -152						; size = 4
_b1$ = -140						; size = 4
_g1$ = -128						; size = 4
_r1$ = -116						; size = 4
_a1$ = -104						; size = 4
_b0$ = -92						; size = 4
_g0$ = -80						; size = 4
_r0$ = -68						; size = 4
_a0$ = -56						; size = 4
_b$ = -44						; size = 4
_g$ = -32						; size = 4
_r$ = -20						; size = 4
_a$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_Color0$ = 24						; size = 4
_Color1$ = 28						; size = 4
_pFunc$ = 32						; size = 4
_v$ = 36						; size = 4
__DrawGradient PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 436				; 000001b4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-436]
	mov	ecx, 109				; 0000006dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	call	_GUI_GetColor
	mov	DWORD PTR _ColorSic$[ebp], eax
; Line 41
	mov	eax, DWORD PTR _Color0$[ebp]
	cmp	eax, DWORD PTR _Color1$[ebp]
	jne	SHORT $LN22@DrawGradie
; Line 42
	mov	eax, DWORD PTR _Color0$[ebp]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 43
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN21@DrawGradie
; Line 44
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 45
	jmp	SHORT $LN20@DrawGradie
$LN21@DrawGradie:
; Line 46
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN20@DrawGradie:
; Line 48
	jmp	$LN19@DrawGradie
$LN22@DrawGradie:
; Line 49
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	mov	DWORD PTR _ySize$[ebp], eax
; Line 50
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, 1
	je	SHORT $LN25@DrawGradie
	mov	ecx, DWORD PTR _ySize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv81[ebp], ecx
	jmp	SHORT $LN26@DrawGradie
$LN25@DrawGradie:
	mov	DWORD PTR tv81[ebp], 1
$LN26@DrawGradie:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _ySize1$[ebp], edx
; Line 51
	mov	eax, DWORD PTR _Color0$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _r0$[ebp], eax
; Line 52
	mov	eax, DWORD PTR _Color0$[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _g0$[ebp], eax
; Line 53
	mov	eax, DWORD PTR _Color0$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _b0$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _Color0$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _a0$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _Color1$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _r1$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _Color1$[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _g1$[ebp], eax
; Line 57
	mov	eax, DWORD PTR _Color1$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _b1$[ebp], eax
; Line 58
	mov	eax, DWORD PTR _Color1$[ebp]
	shr	eax, 24					; 00000018H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _a1$[ebp], eax
; Line 59
	mov	DWORD PTR _NumLines$[ebp], 1
; Line 60
	mov	eax, DWORD PTR _Color0$[ebp]
	mov	DWORD PTR _ColorOld$[ebp], eax
; Line 61
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN18@DrawGradie
$LN17@DrawGradie:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN18@DrawGradie:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _y1$[ebp]
	jg	$LN16@DrawGradie
; Line 62
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _r1$[ebp]
	sub	eax, DWORD PTR _r0$[ebp]
	imul	eax, DWORD PTR _d$[ebp]
	cdq
	idiv	DWORD PTR _ySize1$[ebp]
	add	eax, DWORD PTR _r0$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _r$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _g1$[ebp]
	sub	eax, DWORD PTR _g0$[ebp]
	imul	eax, DWORD PTR _d$[ebp]
	cdq
	idiv	DWORD PTR _ySize1$[ebp]
	add	eax, DWORD PTR _g0$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _g$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _b1$[ebp]
	sub	eax, DWORD PTR _b0$[ebp]
	imul	eax, DWORD PTR _d$[ebp]
	cdq
	idiv	DWORD PTR _ySize1$[ebp]
	add	eax, DWORD PTR _b0$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _b$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _a1$[ebp]
	sub	eax, DWORD PTR _a0$[ebp]
	imul	eax, DWORD PTR _d$[ebp]
	cdq
	idiv	DWORD PTR _ySize1$[ebp]
	add	eax, DWORD PTR _a0$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _a$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _g$[ebp]
	shl	eax, 8
	or	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _a$[ebp]
	shl	edx, 24					; 00000018H
	or	eax, edx
	mov	DWORD PTR _ColorNew$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _y0$[ebp]
	jle	$LN15@DrawGradie
; Line 69
	mov	eax, DWORD PTR _ColorNew$[ebp]
	cmp	eax, DWORD PTR _ColorOld$[ebp]
	jne	SHORT $LN14@DrawGradie
; Line 70
	mov	eax, DWORD PTR _NumLines$[ebp]
	add	eax, 1
	mov	DWORD PTR _NumLines$[ebp], eax
; Line 71
	jmp	$LN15@DrawGradie
$LN14@DrawGradie:
; Line 72
	mov	eax, DWORD PTR _ColorOld$[ebp]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 73
	cmp	DWORD PTR _NumLines$[ebp], 1
	jle	SHORT $LN12@DrawGradie
; Line 74
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN11@DrawGradie
; Line 75
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, DWORD PTR _NumLines$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 76
	jmp	SHORT $LN10@DrawGradie
$LN11@DrawGradie:
; Line 77
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _NumLines$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN10@DrawGradie:
; Line 79
	jmp	SHORT $LN9@DrawGradie
$LN12@DrawGradie:
; Line 80
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN8@DrawGradie
; Line 81
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 82
	jmp	SHORT $LN9@DrawGradie
$LN8@DrawGradie:
; Line 83
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, 1
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@DrawGradie:
; Line 86
	mov	DWORD PTR _NumLines$[ebp], 1
$LN15@DrawGradie:
; Line 89
	mov	eax, DWORD PTR _ColorNew$[ebp]
	mov	DWORD PTR _ColorOld$[ebp], eax
; Line 90
	jmp	$LN17@DrawGradie
$LN16@DrawGradie:
; Line 91
	mov	eax, DWORD PTR _ColorOld$[ebp]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 92
	mov	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 93
	cmp	DWORD PTR _NumLines$[ebp], 1
	jle	SHORT $LN6@DrawGradie
; Line 94
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN5@DrawGradie
; Line 95
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, DWORD PTR _NumLines$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 96
	jmp	SHORT $LN4@DrawGradie
$LN5@DrawGradie:
; Line 97
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _NumLines$[ebp]
	add	eax, 1
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN4@DrawGradie:
; Line 99
	jmp	SHORT $LN19@DrawGradie
$LN6@DrawGradie:
; Line 100
	cmp	DWORD PTR _v$[ebp], 0
	je	SHORT $LN2@DrawGradie
; Line 101
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 102
	jmp	SHORT $LN19@DrawGradie
$LN2@DrawGradie:
; Line 103
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN19@DrawGradie:
; Line 107
	mov	eax, DWORD PTR _ColorSic$[ebp]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 436				; 000001b4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawGradient ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawGradientH
EXTRN	_LCD_DrawVLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawGradientH
_TEXT	SEGMENT
_r$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_Color0$ = 24						; size = 4
_Color1$ = 28						; size = 4
_GUI_DrawGradientH PROC					; COMDAT
; Line 145
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 151
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 152
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 153
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 154
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 155
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 156
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 157
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawGr@2
$LN3@GUI_DrawGr@2:
; Line 159
	push	0
	push	OFFSET _LCD_DrawVLine
	mov	eax, DWORD PTR _Color1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Color0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	call	__DrawGradient
	add	esp, 32					; 00000020H
; Line 161
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawGr@2
$LN5@GUI_DrawGr@2:
; Line 164
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawGr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GUI_DrawGr@2:
	DD	1
	DD	$LN8@GUI_DrawGr@2
$LN8@GUI_DrawGr@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI_DrawGr@2
$LN7@GUI_DrawGr@2:
	DB	114					; 00000072H
	DB	0
_GUI_DrawGradientH ENDP
_TEXT	ENDS
END
