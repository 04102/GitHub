; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispString.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DispString
EXTRN	_GUI_UC__NumChars2NumBytes:PROC
EXTRN	_GUI__DispLine:PROC
EXTRN	_GUI__GetLineDistX:PROC
EXTRN	_GUI__GetLineNumChars:PROC
EXTRN	_GUI_GetYAdjust:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_dispstring.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispString
_TEXT	SEGMENT
tv142 = -284						; size = 4
tv82 = -284						; size = 4
_xLineSize$8348 = -84					; size = 4
_LineNumChars$8347 = -72				; size = 4
_r$8346 = -60						; size = 8
_FontSizeY$ = -44					; size = 4
_xOrg$ = -32						; size = 4
_yAdjust$ = -20						; size = 4
_xAdjust$ = -8						; size = 4
_s$ = 8							; size = 4
_GUI_DispString PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN18@GUI_DispSt
; Line 39
	jmp	$LN19@GUI_DispSt
$LN18@GUI_DispSt:
; Line 42
	call	_GUI_GetFontDistY
	mov	DWORD PTR _FontSizeY$[ebp], eax
; Line 43
	movsx	eax, WORD PTR _GUI_Context+34
	mov	DWORD PTR _xOrg$[ebp], eax
; Line 45
	call	_GUI_GetYAdjust
	mov	DWORD PTR _yAdjust$[ebp], eax
; Line 46
	movsx	eax, WORD PTR _GUI_Context+36
	sub	eax, DWORD PTR _yAdjust$[ebp]
	mov	WORD PTR _GUI_Context+36, ax
	jmp	SHORT $LN17@GUI_DispSt
$LN16@GUI_DispSt:
; Line 47
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, 1
	mov	DWORD PTR _s$[ebp], eax
$LN17@GUI_DispSt:
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN15@GUI_DispSt
; Line 50
	push	32767					; 00007fffH
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__GetLineNumChars
	add	esp, 8
	mov	DWORD PTR _LineNumChars$8347[ebp], eax
; Line 51
	mov	eax, DWORD PTR _LineNumChars$8347[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI__GetLineDistX
	add	esp, 8
	mov	DWORD PTR _xLineSize$8348[ebp], eax
; Line 53
	movsx	eax, WORD PTR _GUI_Context+44
	and	eax, 3
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 1
	je	SHORT $LN11@GUI_DispSt
	cmp	DWORD PTR tv82[ebp], 2
	je	SHORT $LN12@GUI_DispSt
	jmp	SHORT $LN10@GUI_DispSt
$LN12@GUI_DispSt:
; Line 54
	mov	eax, DWORD PTR _xLineSize$8348[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xAdjust$[ebp], eax
	jmp	SHORT $LN13@GUI_DispSt
$LN11@GUI_DispSt:
; Line 55
	mov	eax, DWORD PTR _xLineSize$8348[ebp]
	mov	DWORD PTR _xAdjust$[ebp], eax
	jmp	SHORT $LN13@GUI_DispSt
$LN10@GUI_DispSt:
; Line 56
	mov	DWORD PTR _xAdjust$[ebp], 0
$LN13@GUI_DispSt:
; Line 58
	movsx	eax, WORD PTR _GUI_Context+34
	sub	eax, DWORD PTR _xAdjust$[ebp]
	mov	WORD PTR _GUI_Context+34, ax
	mov	cx, WORD PTR _GUI_Context+34
	mov	WORD PTR _r$8346[ebp], cx
; Line 59
	movsx	eax, WORD PTR _r$8346[ebp]
	mov	ecx, DWORD PTR _xLineSize$8348[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _r$8346[ebp+4], dx
; Line 60
	mov	ax, WORD PTR _GUI_Context+36
	mov	WORD PTR _r$8346[ebp+2], ax
; Line 61
	movsx	eax, WORD PTR _r$8346[ebp+2]
	mov	ecx, DWORD PTR _FontSizeY$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _r$8346[ebp+6], dx
; Line 62
	lea	eax, DWORD PTR _r$8346[ebp]
	push	eax
	mov	ecx, DWORD PTR _LineNumChars$8347[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	_GUI__DispLine
	add	esp, 12					; 0000000cH
; Line 63
	mov	ax, WORD PTR _r$8346[ebp+2]
	mov	WORD PTR _GUI_Context+36, ax
; Line 64
	mov	eax, DWORD PTR _LineNumChars$8347[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	je	SHORT $LN8@GUI_DispSt
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 13					; 0000000dH
	jne	SHORT $LN9@GUI_DispSt
$LN8@GUI_DispSt:
; Line 66
	movsx	eax, WORD PTR _GUI_Context+44
	and	eax, 3
	mov	DWORD PTR tv142[ebp], eax
	jle	SHORT $LN4@GUI_DispSt
	cmp	DWORD PTR tv142[ebp], 2
	jle	SHORT $LN5@GUI_DispSt
	jmp	SHORT $LN4@GUI_DispSt
$LN5@GUI_DispSt:
; Line 69
	mov	ax, WORD PTR _xOrg$[ebp]
	mov	WORD PTR _GUI_Context+34, ax
; Line 70
	jmp	SHORT $LN6@GUI_DispSt
$LN4@GUI_DispSt:
; Line 72
	mov	ax, WORD PTR _GUI_Context+32
	mov	WORD PTR _GUI_Context+34, ax
$LN6@GUI_DispSt:
; Line 75
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN3@GUI_DispSt
; Line 76
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _FontSizeY$[ebp]
	mov	WORD PTR _GUI_Context+36, ax
$LN3@GUI_DispSt:
; Line 78
	jmp	SHORT $LN2@GUI_DispSt
$LN9@GUI_DispSt:
; Line 79
	movsx	eax, WORD PTR _r$8346[ebp]
	add	eax, DWORD PTR _xLineSize$8348[ebp]
	mov	WORD PTR _GUI_Context+34, ax
$LN2@GUI_DispSt:
; Line 81
	mov	eax, DWORD PTR _s$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN1@GUI_DispSt
; Line 82
	jmp	SHORT $LN15@GUI_DispSt
$LN1@GUI_DispSt:
; Line 84
	jmp	$LN16@GUI_DispSt
$LN15@GUI_DispSt:
; Line 85
	movsx	eax, WORD PTR _GUI_Context+36
	add	eax, DWORD PTR _yAdjust$[ebp]
	mov	WORD PTR _GUI_Context+36, ax
; Line 86
	movsx	eax, WORD PTR _GUI_Context+44
	and	eax, -4					; fffffffcH
	mov	WORD PTR _GUI_Context+44, ax
$LN19@GUI_DispSt:
; Line 88
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@GUI_DispSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN23@GUI_DispSt:
	DD	1
	DD	$LN22@GUI_DispSt
$LN22@GUI_DispSt:
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN21@GUI_DispSt
$LN21@GUI_DispSt:
	DB	114					; 00000072H
	DB	0
_GUI_DispString ENDP
_TEXT	ENDS
END
