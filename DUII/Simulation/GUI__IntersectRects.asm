; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__IntersectRects.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__IntersectRects
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__intersectrects.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__IntersectRects
_TEXT	SEGMENT
tv137 = -196						; size = 4
tv93 = -196						; size = 4
tv81 = -196						; size = 4
tv69 = -196						; size = 4
_pDest$ = 8						; size = 4
_pr0$ = 12						; size = 4
_pr1$ = 16						; size = 4
_GUI__IntersectRects PROC				; COMDAT
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	eax, DWORD PTR _pr0$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pr1$[ebp]
	movsx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jle	SHORT $LN5@GUI__Inter
	mov	ecx, DWORD PTR _pr0$[ebp]
	movsx	edx, WORD PTR [ecx]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN6@GUI__Inter
$LN5@GUI__Inter:
	mov	eax, DWORD PTR _pr1$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
$LN6@GUI__Inter:
	mov	edx, DWORD PTR _pDest$[ebp]
	mov	ax, WORD PTR tv69[ebp]
	mov	WORD PTR [edx], ax
; Line 50
	mov	eax, DWORD PTR _pr0$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _pr1$[ebp]
	movsx	eax, WORD PTR [edx+2]
	cmp	ecx, eax
	jle	SHORT $LN7@GUI__Inter
	mov	ecx, DWORD PTR _pr0$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR tv81[ebp], edx
	jmp	SHORT $LN8@GUI__Inter
$LN7@GUI__Inter:
	mov	eax, DWORD PTR _pr1$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR tv81[ebp], ecx
$LN8@GUI__Inter:
	mov	edx, DWORD PTR _pDest$[ebp]
	mov	ax, WORD PTR tv81[ebp]
	mov	WORD PTR [edx+2], ax
; Line 51
	mov	eax, DWORD PTR _pr0$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pr1$[ebp]
	movsx	eax, WORD PTR [edx+4]
	cmp	ecx, eax
	jge	SHORT $LN9@GUI__Inter
	mov	ecx, DWORD PTR _pr0$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	mov	DWORD PTR tv93[ebp], edx
	jmp	SHORT $LN10@GUI__Inter
$LN9@GUI__Inter:
	mov	eax, DWORD PTR _pr1$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR tv93[ebp], ecx
$LN10@GUI__Inter:
	mov	edx, DWORD PTR _pDest$[ebp]
	mov	ax, WORD PTR tv93[ebp]
	mov	WORD PTR [edx+4], ax
; Line 52
	mov	eax, DWORD PTR _pr0$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pr1$[ebp]
	movsx	eax, WORD PTR [edx+6]
	cmp	ecx, eax
	jge	SHORT $LN11@GUI__Inter
	mov	ecx, DWORD PTR _pr0$[ebp]
	movsx	edx, WORD PTR [ecx+6]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN12@GUI__Inter
$LN11@GUI__Inter:
	mov	eax, DWORD PTR _pr1$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR tv137[ebp], ecx
$LN12@GUI__Inter:
	mov	edx, DWORD PTR _pDest$[ebp]
	mov	ax, WORD PTR tv137[ebp]
	mov	WORD PTR [edx+6], ax
; Line 53
	mov	eax, DWORD PTR _pDest$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pDest$[ebp]
	movsx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jge	SHORT $LN2@GUI__Inter
; Line 54
	xor	eax, eax
	jmp	SHORT $LN3@GUI__Inter
$LN2@GUI__Inter:
; Line 56
	mov	eax, DWORD PTR _pDest$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pDest$[ebp]
	movsx	eax, WORD PTR [edx+2]
	cmp	ecx, eax
	jge	SHORT $LN1@GUI__Inter
; Line 57
	xor	eax, eax
	jmp	SHORT $LN3@GUI__Inter
$LN1@GUI__Inter:
; Line 59
	mov	eax, 1
$LN3@GUI__Inter:
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__IntersectRects ENDP
_TEXT	ENDS
END
