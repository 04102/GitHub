; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\ConvertColor\GUICC_111.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_API_ColorConv_111
PUBLIC	_LCD_API_ColorConv_M111
CONST	SEGMENT
_LCD_API_ColorConv_111 DD FLAT:__Color2Index_111
	DD	FLAT:__Index2Color_111
	DD	FLAT:__GetIndexMask_111
_LCD_API_ColorConv_M111 DD FLAT:__Color2Index_M111
	DD	FLAT:__Index2Color_M111
	DD	FLAT:__GetIndexMask_M111
CONST	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\convertcolor\guicc_111.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Color2Index_111
_TEXT	SEGMENT
_b$ = -32						; size = 4
_g$ = -20						; size = 4
_r$ = -8						; size = 4
_Color$ = 8						; size = 4
__Color2Index_111 PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 37
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 7
	and	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 38
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 15					; 0000000fH
	and	eax, 1
	mov	DWORD PTR _g$[ebp], eax
; Line 39
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 23					; 00000017H
	and	eax, 1
	mov	DWORD PTR _b$[ebp], eax
; Line 40
	mov	eax, DWORD PTR _g$[ebp]
	mov	ecx, DWORD PTR _r$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _b$[ebp]
	lea	eax, DWORD PTR [edx+eax*4]
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Color2Index_111 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Index2Color_111
_TEXT	SEGMENT
_b$ = -32						; size = 2
_g$ = -20						; size = 2
_r$ = -8						; size = 2
_Index$ = 8						; size = 4
__Index2Color_111 PROC					; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 1
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _r$[ebp], ax
; Line 50
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 1
	and	eax, 1
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _g$[ebp], ax
; Line 51
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 2
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _b$[ebp], ax
; Line 52
	movzx	eax, WORD PTR _r$[ebp]
	movzx	ecx, WORD PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, WORD PTR _b$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
; Line 53
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Index2Color_111 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetIndexMask_111
_TEXT	SEGMENT
__GetIndexMask_111 PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 60
	mov	eax, 7
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetIndexMask_111 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Color2Index_M111
_TEXT	SEGMENT
_b$ = -32						; size = 4
_g$ = -20						; size = 4
_r$ = -8						; size = 4
_Color$ = 8						; size = 4
__Color2Index_M111 PROC					; COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 7
	and	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 96
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 15					; 0000000fH
	and	eax, 1
	mov	DWORD PTR _g$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _Color$[ebp]
	shr	eax, 23					; 00000017H
	and	eax, 1
	mov	DWORD PTR _b$[ebp], eax
; Line 98
	mov	eax, DWORD PTR _g$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _r$[ebp]
	lea	eax, DWORD PTR [edx+eax*4]
; Line 99
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Color2Index_M111 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Index2Color_M111
_TEXT	SEGMENT
_b$ = -32						; size = 2
_g$ = -20						; size = 2
_r$ = -8						; size = 2
_Index$ = 8						; size = 4
__Index2Color_M111 PROC					; COMDAT
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 1
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _r$[ebp], ax
; Line 108
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 1
	and	eax, 1
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _g$[ebp], ax
; Line 109
	mov	eax, DWORD PTR _Index$[ebp]
	shr	eax, 2
	imul	eax, 255				; 000000ffH
	mov	WORD PTR _b$[ebp], ax
; Line 110
	movzx	eax, WORD PTR _b$[ebp]
	movzx	ecx, WORD PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, WORD PTR _r$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Index2Color_M111 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetIndexMask_M111
_TEXT	SEGMENT
__GetIndexMask_M111 PROC				; COMDAT
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 118
	mov	eax, 7
; Line 119
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetIndexMask_M111 ENDP
_TEXT	ENDS
END
