; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_GetWindowSize.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM__GetWindowSizeX
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_getwindowsize.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM__GetWindowSizeX
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
_WM__GetWindowSizeX PROC				; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 58
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	eax, WORD PTR [eax+4]
	mov	ecx, DWORD PTR _pWin$[ebp]
	movsx	edx, WORD PTR [ecx]
	sub	eax, edx
	add	eax, 1
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__GetWindowSizeX ENDP
_TEXT	ENDS
PUBLIC	_WM__GetWindowSizeY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM__GetWindowSizeY
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
_WM__GetWindowSizeY PROC				; COMDAT
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 68
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	eax, WORD PTR [eax+6]
	mov	ecx, DWORD PTR _pWin$[ebp]
	movsx	edx, WORD PTR [ecx+2]
	sub	eax, edx
	add	eax, 1
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__GetWindowSizeY ENDP
_TEXT	ENDS
PUBLIC	_WM_GetWindowSizeX
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_GetWindowSizeX
_TEXT	SEGMENT
_pWin$ = -20						; size = 4
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_WM_GetWindowSizeX PROC					; COMDAT
; Line 83
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 87
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	__GetDefaultWin
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 88
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _pWin$[ebp]
	push	eax
	call	_WM__GetWindowSizeX
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 91
	mov	eax, DWORD PTR _r$[ebp]
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_GetWindowSizeX ENDP
_TEXT	ENDS
EXTRN	_WM_GetActiveWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetDefaultWin
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
__GetDefaultWin PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	cmp	DWORD PTR _hWin$[ebp], 0
	jne	SHORT $LN1@GetDefault
; Line 41
	call	_WM_GetActiveWindow
	mov	DWORD PTR _hWin$[ebp], eax
$LN1@GetDefault:
; Line 42
	mov	eax, DWORD PTR _hWin$[ebp]
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetDefaultWin ENDP
_TEXT	ENDS
PUBLIC	_WM_GetWindowSizeY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_GetWindowSizeY
_TEXT	SEGMENT
_pWin$ = -20						; size = 4
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_WM_GetWindowSizeY PROC					; COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 104
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	__GetDefaultWin
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _pWin$[ebp]
	push	eax
	call	_WM__GetWindowSizeY
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 108
	mov	eax, DWORD PTR _r$[ebp]
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_GetWindowSizeY ENDP
_TEXT	ENDS
END
