; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTVIEW_DisableRow.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTVIEW_DisableRow
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listview_disablerow.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTVIEW_DisableRow
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Row$ = 12						; size = 4
_LISTVIEW_DisableRow PROC				; COMDAT
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	push	1
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetRowDisabled
	add	esp, 12					; 0000000cH
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_DisableRow ENDP
_TEXT	ENDS
EXTRN	_LISTVIEW__InvalidateRow:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_LISTVIEW__GetNumRows:PROC
EXTRN	_LISTVIEW_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetRowDisabled
_TEXT	SEGMENT
_pRow$15528 = -20					; size = 4
_pObj$15526 = -8					; size = 4
_hObj$ = 8						; size = 4
_Row$ = 12						; size = 4
_OnOff$ = 16						; size = 4
__SetRowDisabled PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@SetRowDisa
; Line 43
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$15526[ebp], eax
; Line 44
	mov	eax, DWORD PTR _pObj$15526[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	cmp	DWORD PTR _Row$[ebp], eax
	jae	SHORT $LN1@SetRowDisa
; Line 46
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$15526[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$15528[ebp], eax
; Line 47
	mov	eax, DWORD PTR _pRow$15528[ebp]
	mov	cl, BYTE PTR _OnOff$[ebp]
	mov	BYTE PTR [eax+4], cl
; Line 48
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$15528[ebp], 0
; Line 49
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$15526[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
$LN1@SetRowDisa:
; Line 51
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$15526[ebp], 0
$LN3@SetRowDisa:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetRowDisabled ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_EnableRow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_EnableRow
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Row$ = 12						; size = 4
_LISTVIEW_EnableRow PROC				; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 74
	push	0
	mov	eax, DWORD PTR _Row$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetRowDisabled
	add	esp, 12					; 0000000cH
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_EnableRow ENDP
_TEXT	ENDS
END
