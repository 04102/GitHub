; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawBitmap_888.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_BitmapMethods888
PUBLIC	_GUI_BitmapMethodsM888
EXTRN	_LCD_Index2Color_M888:PROC
EXTRN	_LCD_Index2Color_888:PROC
CONST	SEGMENT
_GUI_BitmapMethods888 DD FLAT:__DrawBitmap_888
	DD	FLAT:_LCD_Index2Color_888
	ORG $+4
_GUI_BitmapMethodsM888 DD FLAT:__DrawBitmap_M888
	DD	FLAT:_LCD_Index2Color_M888
	ORG $+4
CONST	ENDS
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawbitmap_888.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DrawBitmap_888
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_pLogPal$ = 28						; size = 4
_xMag$ = 32						; size = 4
_yMag$ = 36						; size = 4
__DrawBitmap_888 PROC					; COMDAT
; Line 152
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 153
	mov	eax, DWORD PTR _pLogPal$[ebp]
	mov	DWORD PTR _pLogPal$[ebp], eax
; Line 154
	push	0
	mov	eax, DWORD PTR _yMag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	push	edx
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawBitmap
	add	esp, 32					; 00000020H
; Line 155
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap_888 ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_SetColorIndex:PROC
EXTRN	_LCD_GetNextPixelAPI:PROC
EXTRN	_GUI_GetpfColor2IndexEx:PROC
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawBitmap
_TEXT	SEGMENT
tv138 = -388						; size = 4
_xi$8392 = -188						; size = 4
_yMax$8389 = -176					; size = 4
_yi$8385 = -164						; size = 4
_y$8384 = -152						; size = 4
_x$8383 = -140						; size = 4
_PrevColor$8382 = -128					; size = 4
_pNextPixel_API$8363 = -116				; size = 4
_x$8362 = -104						; size = 4
_Diff$8361 = -92					; size = 4
_y1$8360 = -80						; size = 4
_x1$8359 = -68						; size = 4
_pfColor2Index$ = -56					; size = 4
_BytesPerLine$ = -44					; size = 4
_Index$ = -32						; size = 4
_Color$ = -20						; size = 4
_pSrc$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_xMag$ = 28						; size = 4
_yMag$ = 32						; size = 4
_Swap$ = 36						; size = 4
__DrawBitmap PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetpfColor2IndexEx
	add	esp, 4
	mov	DWORD PTR _pfColor2Index$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _xSize$[ebp]
	shl	eax, 2
	mov	DWORD PTR _BytesPerLine$[ebp], eax
; Line 46
	mov	eax, DWORD PTR _xMag$[ebp]
	or	eax, DWORD PTR _yMag$[ebp]
	cmp	eax, 1
	jne	$LN24@DrawBitmap
; Line 50
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _y1$8360[ebp], edx
; Line 51
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _x1$8359[ebp], edx
; Line 55
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y0$[ebp], eax
	jge	SHORT $LN23@DrawBitmap
; Line 56
	movsx	eax, WORD PTR _GUI_Context+10
	sub	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _Diff$8361[ebp], eax
; Line 57
	movsx	eax, WORD PTR _GUI_Context+10
	mov	DWORD PTR _y0$[ebp], eax
; Line 59
	mov	eax, DWORD PTR _Diff$8361[ebp]
	imul	eax, DWORD PTR _BytesPerLine$[ebp]
	add	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8361[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN23@DrawBitmap:
; Line 65
	movsx	eax, WORD PTR _GUI_Context+14
	mov	ecx, DWORD PTR _y1$8360[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8361[ebp], ecx
; Line 66
	cmp	DWORD PTR _Diff$8361[ebp], 0
	jle	SHORT $LN22@DrawBitmap
; Line 67
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _Diff$8361[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
$LN22@DrawBitmap:
; Line 69
	cmp	DWORD PTR _ySize$[ebp], 0
	jg	SHORT $LN21@DrawBitmap
; Line 70
	jmp	$LN25@DrawBitmap
$LN21@DrawBitmap:
; Line 75
	movsx	eax, WORD PTR _GUI_Context+12
	mov	ecx, DWORD PTR _x1$8359[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Diff$8361[ebp], ecx
; Line 76
	cmp	DWORD PTR _Diff$8361[ebp], 0
	jle	SHORT $LN20@DrawBitmap
; Line 77
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8361[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
$LN20@DrawBitmap:
; Line 82
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x0$[ebp], eax
	jge	SHORT $LN19@DrawBitmap
; Line 83
	movsx	eax, WORD PTR _GUI_Context+8
	sub	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _Diff$8361[ebp], eax
; Line 84
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _Diff$8361[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
; Line 85
	mov	eax, DWORD PTR _Diff$8361[ebp]
	mov	ecx, DWORD PTR _pPixel$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pPixel$[ebp], edx
; Line 86
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _Diff$8361[ebp]
	mov	DWORD PTR _x0$[ebp], eax
$LN19@DrawBitmap:
; Line 88
	cmp	DWORD PTR _xSize$[ebp], 0
	jg	SHORT $LN18@DrawBitmap
; Line 89
	jmp	$LN25@DrawBitmap
$LN18@DrawBitmap:
; Line 94
	call	_LCD_GetNextPixelAPI
	mov	DWORD PTR _pNextPixel_API$8363[ebp], eax
; Line 95
	mov	esi, esp
	mov	eax, DWORD PTR _y1$8360[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$8359[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$8363[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@DrawBitmap:
; Line 96
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR tv138[ebp], eax
	mov	ecx, DWORD PTR _ySize$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _ySize$[ebp], ecx
	cmp	DWORD PTR tv138[ebp], 0
	je	$LN16@DrawBitmap
; Line 97
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 98
	mov	DWORD PTR _x$8362[ebp], 0
	jmp	SHORT $LN15@DrawBitmap
$LN14@DrawBitmap:
	mov	eax, DWORD PTR _x$8362[ebp]
	add	eax, 1
	mov	DWORD PTR _x$8362[ebp], eax
$LN15@DrawBitmap:
	mov	eax, DWORD PTR _x$8362[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN13@DrawBitmap
; Line 102
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Color$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$[ebp]
	add	edx, 4
	mov	DWORD PTR _pSrc$[ebp], edx
; Line 103
	cmp	DWORD PTR _Swap$[ebp], 0
	je	SHORT $LN12@DrawBitmap
; Line 104
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _Color$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _Color$[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _Color$[ebp], eax
$LN12@DrawBitmap:
; Line 106
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Index$[ebp], eax
; Line 107
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pNextPixel_API$8363[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 108
	jmp	SHORT $LN14@DrawBitmap
$LN13@DrawBitmap:
; Line 109
	cmp	DWORD PTR _ySize$[ebp], 0
	je	SHORT $LN11@DrawBitmap
; Line 110
	mov	eax, DWORD PTR _pNextPixel_API$8363[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 111
	mov	eax, DWORD PTR _pPixel$[ebp]
	add	eax, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], eax
$LN11@DrawBitmap:
; Line 113
	jmp	$LN17@DrawBitmap
$LN16@DrawBitmap:
; Line 114
	mov	eax, DWORD PTR _pNextPixel_API$8363[ebp]
	mov	esi, esp
	mov	ecx, DWORD PTR [eax+12]
	call	ecx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	jmp	$LN25@DrawBitmap
$LN24@DrawBitmap:
; Line 121
	mov	DWORD PTR _PrevColor$8382[ebp], 268435455 ; 0fffffffH
; Line 122
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y$8384[ebp], eax
	mov	DWORD PTR _yi$8385[ebp], 0
	jmp	SHORT $LN9@DrawBitmap
$LN8@DrawBitmap:
	mov	eax, DWORD PTR _yi$8385[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$8385[ebp], eax
	mov	ecx, DWORD PTR _y$8384[ebp]
	add	ecx, DWORD PTR _yMag$[ebp]
	mov	DWORD PTR _y$8384[ebp], ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, DWORD PTR _BytesPerLine$[ebp]
	mov	DWORD PTR _pPixel$[ebp], edx
$LN9@DrawBitmap:
	mov	eax, DWORD PTR _yi$8385[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jge	$LN25@DrawBitmap
; Line 124
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _y$8384[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yMax$8389[ebp], edx
; Line 125
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 127
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _yMax$8389[ebp], eax
	jl	$LN6@DrawBitmap
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$8384[ebp], eax
	jg	$LN6@DrawBitmap
; Line 129
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x$8383[ebp], eax
	mov	DWORD PTR _xi$8392[ebp], 0
	jmp	SHORT $LN5@DrawBitmap
$LN4@DrawBitmap:
	mov	eax, DWORD PTR _xi$8392[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$8392[ebp], eax
	mov	ecx, DWORD PTR _x$8383[ebp]
	add	ecx, DWORD PTR _xMag$[ebp]
	mov	DWORD PTR _x$8383[ebp], ecx
$LN5@DrawBitmap:
	mov	eax, DWORD PTR _xi$8392[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	$LN6@DrawBitmap
; Line 133
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Color$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$[ebp]
	add	edx, 4
	mov	DWORD PTR _pSrc$[ebp], edx
; Line 134
	cmp	DWORD PTR _Swap$[ebp], 0
	je	SHORT $LN2@DrawBitmap
; Line 135
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 65280				; 0000ff00H
	mov	ecx, DWORD PTR _Color$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, DWORD PTR _Color$[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _Color$[ebp], eax
$LN2@DrawBitmap:
; Line 137
	mov	eax, DWORD PTR _Color$[ebp]
	cmp	eax, DWORD PTR _PrevColor$8382[ebp]
	je	SHORT $LN1@DrawBitmap
; Line 138
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 139
	mov	eax, DWORD PTR _Color$[ebp]
	mov	DWORD PTR _PrevColor$8382[ebp], eax
$LN1@DrawBitmap:
; Line 141
	mov	eax, DWORD PTR _yMax$8389[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMag$[ebp]
	mov	edx, DWORD PTR _x$8383[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _y$8384[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$8383[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 142
	jmp	$LN4@DrawBitmap
$LN6@DrawBitmap:
; Line 144
	jmp	$LN8@DrawBitmap
$LN25@DrawBitmap:
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawBitmap_M888
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_pLogPal$ = 28						; size = 4
_xMag$ = 32						; size = 4
_yMag$ = 36						; size = 4
__DrawBitmap_M888 PROC					; COMDAT
; Line 161
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 162
	mov	eax, DWORD PTR _pLogPal$[ebp]
	mov	DWORD PTR _pLogPal$[ebp], eax
; Line 163
	push	1
	mov	eax, DWORD PTR _yMag$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xMag$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPixel$[ebp]
	push	edx
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawBitmap
	add	esp, 32					; 00000020H
; Line 164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawBitmap_M888 ENDP
_TEXT	ENDS
END
