; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM__UpdateChildPositions.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM__UpdateChildPositions
EXTRN	_WM_ResizeWindow:PROC
EXTRN	_WM_MoveWindow:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm__updatechildpositions.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM__UpdateChildPositions
_TEXT	SEGMENT
tv95 = -312						; size = 4
tv72 = -312						; size = 4
_rNew$9454 = -112					; size = 8
_rOld$9453 = -96					; size = 8
_Status$9452 = -80					; size = 4
_dh$ = -68						; size = 4
_dw$ = -56						; size = 4
_dy$ = -44						; size = 4
_dx$ = -32						; size = 4
_pChild$ = -20						; size = 4
_hChild$ = -8						; size = 4
_pObj$ = 8						; size = 4
_dx0$ = 12						; size = 4
_dy0$ = 16						; size = 4
_dx1$ = 20						; size = 4
_dy1$ = 24						; size = 4
_WM__UpdateChildPositions PROC				; COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _hChild$[ebp], ecx
	jmp	SHORT $LN17@WM__Update
$LN16@WM__Update:
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hChild$[ebp], ecx
$LN17@WM__Update:
	cmp	DWORD PTR _hChild$[ebp], 0
	je	$LN18@WM__Update
; Line 52
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pChild$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _rOld$9453[ebp], ecx
	mov	DWORD PTR _rOld$9453[ebp+4], edx
; Line 55
	mov	eax, DWORD PTR _rOld$9453[ebp]
	mov	DWORD PTR _rNew$9454[ebp], eax
	mov	ecx, DWORD PTR _rOld$9453[ebp+4]
	mov	DWORD PTR _rNew$9454[ebp+4], ecx
; Line 56
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 640				; 00000280H
	mov	DWORD PTR _Status$9452[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _Status$9452[ebp]
	mov	DWORD PTR tv72[ebp], eax
	cmp	DWORD PTR tv72[ebp], 128		; 00000080H
	je	SHORT $LN12@WM__Update
	cmp	DWORD PTR tv72[ebp], 640		; 00000280H
	je	SHORT $LN11@WM__Update
	jmp	SHORT $LN10@WM__Update
$LN12@WM__Update:
; Line 59
	movsx	eax, WORD PTR _rNew$9454[ebp]
	add	eax, DWORD PTR _dx1$[ebp]
	mov	WORD PTR _rNew$9454[ebp], ax
; Line 60
	movsx	eax, WORD PTR _rNew$9454[ebp+4]
	add	eax, DWORD PTR _dx1$[ebp]
	mov	WORD PTR _rNew$9454[ebp+4], ax
; Line 61
	jmp	SHORT $LN13@WM__Update
$LN11@WM__Update:
; Line 63
	movsx	eax, WORD PTR _rNew$9454[ebp]
	add	eax, DWORD PTR _dx0$[ebp]
	mov	WORD PTR _rNew$9454[ebp], ax
; Line 64
	movsx	eax, WORD PTR _rNew$9454[ebp+4]
	add	eax, DWORD PTR _dx1$[ebp]
	mov	WORD PTR _rNew$9454[ebp+4], ax
; Line 65
	jmp	SHORT $LN13@WM__Update
$LN10@WM__Update:
; Line 67
	movsx	eax, WORD PTR _rNew$9454[ebp]
	add	eax, DWORD PTR _dx0$[ebp]
	mov	WORD PTR _rNew$9454[ebp], ax
; Line 68
	movsx	eax, WORD PTR _rNew$9454[ebp+4]
	add	eax, DWORD PTR _dx0$[ebp]
	mov	WORD PTR _rNew$9454[ebp+4], ax
$LN13@WM__Update:
; Line 70
	mov	eax, DWORD PTR _pChild$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 1280				; 00000500H
	mov	DWORD PTR _Status$9452[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _Status$9452[ebp]
	mov	DWORD PTR tv95[ebp], eax
	cmp	DWORD PTR tv95[ebp], 256		; 00000100H
	je	SHORT $LN7@WM__Update
	cmp	DWORD PTR tv95[ebp], 1280		; 00000500H
	je	SHORT $LN6@WM__Update
	jmp	SHORT $LN5@WM__Update
$LN7@WM__Update:
; Line 73
	movsx	eax, WORD PTR _rNew$9454[ebp+2]
	add	eax, DWORD PTR _dy1$[ebp]
	mov	WORD PTR _rNew$9454[ebp+2], ax
; Line 74
	movsx	eax, WORD PTR _rNew$9454[ebp+6]
	add	eax, DWORD PTR _dy1$[ebp]
	mov	WORD PTR _rNew$9454[ebp+6], ax
; Line 75
	jmp	SHORT $LN8@WM__Update
$LN6@WM__Update:
; Line 77
	movsx	eax, WORD PTR _rNew$9454[ebp+2]
	add	eax, DWORD PTR _dy0$[ebp]
	mov	WORD PTR _rNew$9454[ebp+2], ax
; Line 78
	movsx	eax, WORD PTR _rNew$9454[ebp+6]
	add	eax, DWORD PTR _dy1$[ebp]
	mov	WORD PTR _rNew$9454[ebp+6], ax
; Line 79
	jmp	SHORT $LN8@WM__Update
$LN5@WM__Update:
; Line 81
	movsx	eax, WORD PTR _rNew$9454[ebp+2]
	add	eax, DWORD PTR _dy0$[ebp]
	mov	WORD PTR _rNew$9454[ebp+2], ax
; Line 82
	movsx	eax, WORD PTR _rNew$9454[ebp+6]
	add	eax, DWORD PTR _dy0$[ebp]
	mov	WORD PTR _rNew$9454[ebp+6], ax
$LN8@WM__Update:
; Line 85
	movsx	eax, WORD PTR _rNew$9454[ebp]
	movsx	ecx, WORD PTR _rOld$9453[ebp]
	sub	eax, ecx
	mov	DWORD PTR _dx$[ebp], eax
; Line 86
	movsx	eax, WORD PTR _rNew$9454[ebp+2]
	movsx	ecx, WORD PTR _rOld$9453[ebp+2]
	sub	eax, ecx
	mov	DWORD PTR _dy$[ebp], eax
; Line 87
	cmp	DWORD PTR _dx$[ebp], 0
	jne	SHORT $LN3@WM__Update
	cmp	DWORD PTR _dy$[ebp], 0
	je	SHORT $LN4@WM__Update
$LN3@WM__Update:
; Line 88
	mov	eax, DWORD PTR _dy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hChild$[ebp]
	push	edx
	call	_WM_MoveWindow
	add	esp, 12					; 0000000cH
$LN4@WM__Update:
; Line 90
	movsx	eax, WORD PTR _rNew$9454[ebp+4]
	movsx	ecx, WORD PTR _rNew$9454[ebp]
	sub	eax, ecx
	movsx	edx, WORD PTR _rOld$9453[ebp+4]
	movsx	ecx, WORD PTR _rOld$9453[ebp]
	sub	edx, ecx
	sub	eax, edx
	mov	DWORD PTR _dw$[ebp], eax
; Line 91
	movsx	eax, WORD PTR _rNew$9454[ebp+6]
	movsx	ecx, WORD PTR _rNew$9454[ebp+2]
	sub	eax, ecx
	movsx	edx, WORD PTR _rOld$9453[ebp+6]
	movsx	ecx, WORD PTR _rOld$9453[ebp+2]
	sub	edx, ecx
	sub	eax, edx
	mov	DWORD PTR _dh$[ebp], eax
; Line 92
	cmp	DWORD PTR _dw$[ebp], 0
	jne	SHORT $LN1@WM__Update
	cmp	DWORD PTR _dh$[ebp], 0
	je	SHORT $LN2@WM__Update
$LN1@WM__Update:
; Line 93
	mov	eax, DWORD PTR _dh$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dw$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hChild$[ebp]
	push	edx
	call	_WM_ResizeWindow
	add	esp, 12					; 0000000cH
$LN2@WM__Update:
; Line 95
	jmp	$LN16@WM__Update
$LN18@WM__Update:
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@WM__Update
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@WM__Update:
	DD	2
	DD	$LN22@WM__Update
$LN22@WM__Update:
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN20@WM__Update
	DD	-112					; ffffff90H
	DD	8
	DD	$LN21@WM__Update
$LN21@WM__Update:
	DB	114					; 00000072H
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	0
$LN20@WM__Update:
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	0
_WM__UpdateChildPositions ENDP
_TEXT	ENDS
END
