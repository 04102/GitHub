; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\PersonalizeScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_DATA	SEGMENT
COMM	_workString:BYTE:033H
_DATA	ENDS
_BSS	SEGMENT
_pDataEntryKeyboard DD 01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_PasswordTooSmall DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG19975
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19976
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19977
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG19978
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19979
	DW	01H
	DW	01eH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG19980
	DW	02H
	DW	0aaH
	DW	073H
	DW	096H
	DW	03cH
	ORG $+6
CONST	ENDS
_DATA	SEGMENT
$SG19929 DB	'w', 00H
	ORG $+2
$SG19930 DB	'personalize', 00H
$SG19936 DB	'r', 00H
	ORG $+2
$SG19937 DB	'personalize', 00H
$SG19967 DB	'traqmate', 00H
	ORG $+3
$SG19975 DB	'Settings Error', 00H
	ORG $+1
$SG19976 DB	'The WiFi Password must be at least', 00H
	ORG $+1
$SG19977 DB	'8 characters long. Please enter a', 00H
	ORG $+2
$SG19978 DB	'longer password or select default.', 00H
	ORG $+1
$SG19979 DB	'EDIT', 00H
	ORG $+3
$SG19980 DB	'USE DEFAULT', 00H
$SG19999 DB	'Enter Owner Name', 00H
	ORG $+3
$SG20001 DB	'Enter Contact Info', 00H
	ORG $+1
$SG20003 DB	'Enter Wifi Name', 00H
$SG20005 DB	'Enter Wifi Password', 00H
$SG20007 DB	'Enter Serial Number', 00H
$SG20008 DB	'%u', 00H
	ORG $+1
$SG20010 DB	'Enter Build Date wwyy', 00H
	ORG $+2
$SG20011 DB	'%02d%02d', 00H
	ORG $+3
$SG20015 DB	'Enter current temp in C (integer only)', 00H
	ORG $+1
$SG20017 DB	'Enter current temp in F (integer only)', 00H
	ORG $+1
$SG20020 DB	'%d', 00H
_DATA	ENDS
PUBLIC	_GetPersonalizeEntryWindowHandle
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
_hPersonalizeEntryScreen DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\personalizescreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GetPersonalizeEntryWindowHandle
_TEXT	SEGMENT
_GetPersonalizeEntryWindowHandle PROC			; COMDAT
; Line 85
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 86
	mov	eax, DWORD PTR _hPersonalizeEntryScreen
; Line 87
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetPersonalizeEntryWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetPersonalizeEntryWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetPersonalizeEntryWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetPersonalizeEntryWindowHandle PROC			; COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 91
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hPersonalizeEntryScreen, eax
; Line 92
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetPersonalizeEntryWindowHandle ENDP
_TEXT	ENDS
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@0000000000000000
PUBLIC	_PersonalizeSaveData
EXTRN	_fclose:PROC
EXTRN	_fputc:PROC
EXTRN	_fputs:PROC
EXTRN	_fopen:PROC
EXTRN	_f_to_c:PROC
EXTRN	_sysData:BYTE
EXTRN	_unsavedSysData:BYTE
EXTRN	_strlen:PROC
EXTRN	_atoi:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_screenID DD	01H DUP (?)
_BSS	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _PersonalizeSaveData
_TEXT	SEGMENT
tv64 = -268						; size = 4
_pFile$19926 = -68					; size = 4
_tempF$19921 = -56					; size = 4
_temp$19919 = -44					; size = 4
_size$19916 = -29					; size = 1
_ch$19915 = -17						; size = 1
_tempi$19913 = -8					; size = 4
_pData$ = 8						; size = 4
_PersonalizeSaveData PROC				; COMDAT
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	mov	eax, DWORD PTR _screenID
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 4
	je	SHORT $LN8@Personaliz
	cmp	DWORD PTR tv64[ebp], 5
	je	$LN6@Personaliz
	cmp	DWORD PTR tv64[ebp], 6
	je	$LN5@Personaliz
	jmp	$LN12@Personaliz
; Line 101
	jmp	$LN12@Personaliz
; Line 107
	jmp	$LN12@Personaliz
; Line 113
	jmp	$LN12@Personaliz
$LN8@Personaliz:
; Line 119
	push	OFFSET _workString
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _tempi$19913[ebp], eax
	cmp	DWORD PTR _tempi$19913[ebp], 2147483647	; 7fffffffH
	jne	SHORT $LN7@Personaliz
; Line 123
	push	OFFSET _workString
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _size$19916[ebp], al
; Line 124
	movzx	eax, BYTE PTR _size$19916[ebp]
	mov	cl, BYTE PTR _workString[eax-1]
	mov	BYTE PTR _ch$19915[ebp], cl
; Line 125
	movzx	eax, BYTE PTR _size$19916[ebp]
	mov	BYTE PTR _workString[eax-1], 0
; Line 126
	push	OFFSET _workString
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _tempi$19913[ebp], eax
; Line 127
	mov	eax, DWORD PTR _tempi$19913[ebp]
	imul	eax, 10					; 0000000aH
	movzx	ecx, BYTE PTR _ch$19915[ebp]
	lea	edx, DWORD PTR [eax+ecx-48]
	mov	DWORD PTR _tempi$19913[ebp], edx
$LN7@Personaliz:
; Line 129
	mov	eax, DWORD PTR _tempi$19913[ebp]
	mov	DWORD PTR _unsavedSysData+96, eax
; Line 131
	jmp	$LN12@Personaliz
$LN6@Personaliz:
; Line 133
	push	OFFSET _workString
	call	_atoi
	add	esp, 4
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _unsavedSysData+100, eax
; Line 134
	push	OFFSET _workString
	call	_atoi
	add	esp, 4
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _unsavedSysData+104, edx
; Line 135
	jmp	SHORT $LN12@Personaliz
$LN5@Personaliz:
; Line 140
	push	OFFSET _workString
	call	_atoi
	add	esp, 4
	mov	DWORD PTR _temp$19919[ebp], eax
; Line 141
	cmp	DWORD PTR _sysData+100, 0
	jne	SHORT $LN4@Personaliz
; Line 143
	fild	DWORD PTR _temp$19919[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_f_to_c
	add	esp, 4
	fstp	DWORD PTR _tempF$19921[ebp]
; Line 144
	fld	DWORD PTR _tempF$19921[ebp]
	fcomp	QWORD PTR __real@0000000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN3@Personaliz
; Line 145
	fld	DWORD PTR _tempF$19921[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	fstp	DWORD PTR _tempF$19921[ebp]
	jmp	SHORT $LN2@Personaliz
$LN3@Personaliz:
; Line 146
	fld	DWORD PTR _tempF$19921[ebp]
	fsub	QWORD PTR __real@3fe0000000000000
	fstp	DWORD PTR _tempF$19921[ebp]
$LN2@Personaliz:
; Line 147
	fld	DWORD PTR _tempF$19921[ebp]
	call	__ftol2_sse
	mov	DWORD PTR _temp$19919[ebp], eax
$LN4@Personaliz:
; Line 149
	mov	eax, DWORD PTR _temp$19919[ebp]
	mov	DWORD PTR _sysData+216, eax
$LN12@Personaliz:
; Line 160
	push	OFFSET $SG19929
	push	OFFSET $SG19930
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$19926[ebp], eax
	cmp	DWORD PTR _pFile$19926[ebp], 0
	je	$LN1@Personaliz
; Line 162
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	OFFSET _unsavedSysData+8
	call	_fputs
	add	esp, 8
; Line 163
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	10					; 0000000aH
	call	_fputc
	add	esp, 8
; Line 164
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	OFFSET _unsavedSysData+28
	call	_fputs
	add	esp, 8
; Line 165
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	10					; 0000000aH
	call	_fputc
	add	esp, 8
; Line 166
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	OFFSET _unsavedSysData+48
	call	_fputs
	add	esp, 8
; Line 167
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	10					; 0000000aH
	call	_fputc
	add	esp, 8
; Line 168
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	OFFSET _unsavedSysData+68
	call	_fputs
	add	esp, 8
; Line 169
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	push	10					; 0000000aH
	call	_fputc
	add	esp, 8
; Line 170
	mov	eax, DWORD PTR _pFile$19926[ebp]
	push	eax
	call	_fclose
	add	esp, 4
$LN1@Personaliz:
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PersonalizeSaveData ENDP
_TEXT	ENDS
PUBLIC	_trimCR
PUBLIC	_LoadPersonalizationData
EXTRN	_isalnum:PROC
EXTRN	_fgets:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LoadPersonalizationData
_TEXT	SEGMENT
_pTestFile$ = -8					; size = 4
_LoadPersonalizationData PROC				; COMDAT
; Line 181
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 185
	push	OFFSET $SG19936
	push	OFFSET $SG19937
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pTestFile$[ebp], eax
	cmp	DWORD PTR _pTestFile$[ebp], 0
	je	$LN8@LoadPerson
; Line 187
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	push	20					; 00000014H
	push	OFFSET _unsavedSysData+8
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN6@LoadPerson
; Line 188
	push	OFFSET _unsavedSysData+8
	call	_trimCR
	add	esp, 4
$LN6@LoadPerson:
; Line 189
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	push	20					; 00000014H
	push	OFFSET _unsavedSysData+28
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN5@LoadPerson
; Line 190
	push	OFFSET _unsavedSysData+28
	call	_trimCR
	add	esp, 4
$LN5@LoadPerson:
; Line 191
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	push	20					; 00000014H
	push	OFFSET _unsavedSysData+48
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN4@LoadPerson
; Line 192
	push	OFFSET _unsavedSysData+48
	call	_trimCR
	add	esp, 4
$LN4@LoadPerson:
; Line 193
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	push	20					; 00000014H
	push	OFFSET _unsavedSysData+68
	call	_fgets
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN3@LoadPerson
; Line 194
	push	OFFSET _unsavedSysData+68
	call	_trimCR
	add	esp, 4
$LN3@LoadPerson:
; Line 195
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 199
	movzx	eax, BYTE PTR _unsavedSysData+48
	push	eax
	call	_isalnum
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@LoadPerson
; Line 200
	mov	BYTE PTR _unsavedSysData+48, 0
$LN2@LoadPerson:
; Line 201
	movzx	eax, BYTE PTR _unsavedSysData+68
	push	eax
	call	_isalnum
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN8@LoadPerson
; Line 202
	mov	BYTE PTR _unsavedSysData+68, 0
$LN8@LoadPerson:
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LoadPersonalizationData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _trimCR
_TEXT	SEGMENT
_len$ = -8						; size = 4
_pStr$ = 8						; size = 4
_trimCR	PROC						; COMDAT
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 210
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _len$[ebp], eax
; Line 211
	cmp	DWORD PTR _len$[ebp], 0
	je	SHORT $LN3@trimCR
; Line 213
	mov	eax, DWORD PTR _len$[ebp]
	mov	ecx, DWORD PTR _pStr$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _pStr$[ebp], edx
; Line 214
	mov	eax, DWORD PTR _pStr$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN3@trimCR
; Line 215
	mov	eax, DWORD PTR _pStr$[ebp]
	mov	BYTE PTR [eax], 0
$LN3@trimCR:
; Line 217
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_trimCR	ENDP
_TEXT	ENDS
PUBLIC	_PersonalizeIgnoreNextKeyRelease
PUBLIC	_DisplayNewKeyboardScreen
PUBLIC	_PasswordTooSmallPopUp
PUBLIC	_PersonalizeEntryCB
EXTRN	_WM_DefaultProc:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_strcpy:PROC
EXTRN	_hPersonalizationScreen:DWORD
EXTRN	_ReturnToPersonalizationScreen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PersonalizeEntryCB
_TEXT	SEGMENT
tv64 = -196						; size = 4
_pMsg$ = 8						; size = 4
_PersonalizeEntryCB PROC				; COMDAT
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	jg	SHORT $LN17@Personaliz@2
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	je	SHORT $LN12@Personaliz@2
	cmp	DWORD PTR tv64[ebp], 1
	je	$LN4@Personaliz@2
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN3@Personaliz@2
	cmp	DWORD PTR tv64[ebp], 26			; 0000001aH
	je	SHORT $LN11@Personaliz@2
	jmp	$LN1@Personaliz@2
$LN17@Personaliz@2:
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	SHORT $LN11@Personaliz@2
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	$LN6@Personaliz@2
	jmp	$LN1@Personaliz@2
$LN12@Personaliz@2:
; Line 227
	mov	eax, DWORD PTR _hPersonalizeEntryScreen
	push	eax
	call	_ReturnToPersonalizationScreen
	add	esp, 4
; Line 228
	jmp	$LN15@Personaliz@2
$LN11@Personaliz@2:
; Line 232
	cmp	DWORD PTR _screenID, 3
	jne	SHORT $LN10@Personaliz@2
; Line 234
	push	OFFSET _unsavedSysData+68
	call	_strlen
	add	esp, 4
	cmp	eax, 8
	jae	SHORT $LN10@Personaliz@2
; Line 237
	call	_PasswordTooSmallPopUp
	cmp	eax, 1
	jne	SHORT $LN8@Personaliz@2
; Line 240
	mov	eax, DWORD PTR _hPersonalizationScreen
	push	eax
	push	3
	call	_DisplayNewKeyboardScreen
	add	esp, 8
; Line 241
	jmp	$LN15@Personaliz@2
	jmp	SHORT $LN10@Personaliz@2
$LN8@Personaliz@2:
; Line 243
	push	OFFSET $SG19967
	push	OFFSET _unsavedSysData+68
	call	_strcpy
	add	esp, 8
$LN10@Personaliz@2:
; Line 246
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_PersonalizeSaveData
	add	esp, 4
; Line 247
	mov	eax, DWORD PTR _hPersonalizeEntryScreen
	push	eax
	call	_ReturnToPersonalizationScreen
	add	esp, 4
; Line 248
	jmp	SHORT $LN15@Personaliz@2
$LN6@Personaliz@2:
; Line 251
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN5@Personaliz@2
; Line 253
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 254
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN5@Personaliz@2:
; Line 256
	jmp	SHORT $LN15@Personaliz@2
$LN4@Personaliz@2:
; Line 259
	call	_PersonalizeIgnoreNextKeyRelease
; Line 260
	jmp	SHORT $LN15@Personaliz@2
$LN3@Personaliz@2:
; Line 263
	call	_GetScreenType
	cmp	eax, 19					; 00000013H
	jne	SHORT $LN2@Personaliz@2
; Line 265
	call	_DrawSignalStrength
$LN2@Personaliz@2:
; Line 267
	jmp	SHORT $LN15@Personaliz@2
$LN1@Personaliz@2:
; Line 270
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN15@Personaliz@2:
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PersonalizeEntryCB ENDP
_TEXT	ENDS
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_SetPopupDefaults:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PasswordTooSmallPopUp
_TEXT	SEGMENT
_PasswordTooSmallPopUp PROC				; COMDAT
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 291
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 292
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hPersonalizationScreen
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _PasswordTooSmall
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 293
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PasswordTooSmallPopUp ENDP
_TEXT	ENDS
EXTRN	_CreateKeyboard:PROC
EXTRN	_c_to_f:PROC
EXTRN	_trim:PROC
EXTRN	_sprintf:PROC
EXTRN	_DestroyKeyboard:PROC
EXTRN	_WM_CreateWindow:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_WM_DeleteWindow:PROC
_BSS	SEGMENT
_pDest	DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayNewKeyboardScreen
_TEXT	SEGMENT
tv77 = -256						; size = 4
_temp$20013 = -56					; size = 4
_type$ = -44						; size = 4
_lock$ = -32						; size = 4
_size$ = -20						; size = 4
_pTitle$ = -8						; size = 4
_id$ = 8						; size = 4
_hPrev$ = 12						; size = 4
_DisplayNewKeyboardScreen PROC				; COMDAT
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 302
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN13@DisplayNew
; Line 303
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN13@DisplayNew:
; Line 305
	push	28					; 0000001cH
	call	_SetScreenType
	add	esp, 4
; Line 307
	push	0
	push	OFFSET _PersonalizeEntryCB
	push	2
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hPersonalizeEntryScreen, eax
; Line 309
	cmp	DWORD PTR _pDataEntryKeyboard, 0
	je	SHORT $LN12@DisplayNew
; Line 310
	mov	eax, DWORD PTR _pDataEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
$LN12@DisplayNew:
; Line 312
	mov	eax, DWORD PTR _id$[ebp]
	mov	DWORD PTR _screenID, eax
	mov	ecx, DWORD PTR _screenID
	mov	DWORD PTR tv77[ebp], ecx
	mov	edx, DWORD PTR tv77[ebp]
	sub	edx, 1
	mov	DWORD PTR tv77[ebp], edx
	cmp	DWORD PTR tv77[ebp], 5
	ja	SHORT $LN9@DisplayNew
	mov	eax, DWORD PTR tv77[ebp]
	jmp	DWORD PTR $LN16@DisplayNew[eax*4]
$LN9@DisplayNew:
; Line 316
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG19999
; Line 317
	mov	DWORD PTR _pDest, OFFSET _unsavedSysData+8
; Line 318
	mov	DWORD PTR _size$[ebp], 19		; 00000013H
; Line 319
	mov	DWORD PTR _type$[ebp], 1
; Line 320
	mov	DWORD PTR _lock$[ebp], 0
; Line 321
	jmp	$LN10@DisplayNew
$LN8@DisplayNew:
; Line 323
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20001
; Line 324
	mov	DWORD PTR _pDest, OFFSET _unsavedSysData+28
; Line 325
	mov	DWORD PTR _size$[ebp], 19		; 00000013H
; Line 326
	mov	DWORD PTR _type$[ebp], 2
; Line 327
	mov	DWORD PTR _lock$[ebp], 0
; Line 328
	jmp	$LN10@DisplayNew
$LN7@DisplayNew:
; Line 330
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20003
; Line 331
	mov	DWORD PTR _pDest, OFFSET _unsavedSysData+48
; Line 332
	mov	DWORD PTR _size$[ebp], 19		; 00000013H
; Line 333
	mov	DWORD PTR _type$[ebp], 1
; Line 334
	mov	DWORD PTR _lock$[ebp], 0
; Line 335
	jmp	$LN10@DisplayNew
$LN6@DisplayNew:
; Line 337
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20005
; Line 338
	mov	DWORD PTR _pDest, OFFSET _unsavedSysData+68
; Line 339
	mov	DWORD PTR _size$[ebp], 19		; 00000013H
; Line 340
	mov	DWORD PTR _type$[ebp], 1
; Line 341
	mov	DWORD PTR _lock$[ebp], 0
; Line 342
	jmp	$LN10@DisplayNew
$LN5@DisplayNew:
; Line 344
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20007
; Line 345
	mov	DWORD PTR _pDest, OFFSET _workString
; Line 346
	mov	eax, DWORD PTR _unsavedSysData+96
	push	eax
	push	OFFSET $SG20008
	push	OFFSET _workString
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 347
	mov	DWORD PTR _size$[ebp], 10		; 0000000aH
; Line 348
	mov	DWORD PTR _type$[ebp], 2
; Line 349
	mov	DWORD PTR _lock$[ebp], 1
; Line 350
	jmp	$LN10@DisplayNew
$LN4@DisplayNew:
; Line 352
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20010
; Line 353
	mov	DWORD PTR _pDest, OFFSET _workString
; Line 354
	mov	eax, DWORD PTR _unsavedSysData+104
	push	eax
	mov	ecx, DWORD PTR _unsavedSysData+100
	push	ecx
	push	OFFSET $SG20011
	push	OFFSET _workString
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 355
	push	OFFSET _workString
	call	_trim
	add	esp, 4
; Line 356
	mov	DWORD PTR _size$[ebp], 4
; Line 357
	mov	DWORD PTR _type$[ebp], 2
; Line 358
	mov	DWORD PTR _lock$[ebp], 1
; Line 359
	jmp	SHORT $LN10@DisplayNew
$LN3@DisplayNew:
; Line 364
	mov	eax, DWORD PTR _sysData+216
	mov	DWORD PTR _temp$20013[ebp], eax
; Line 365
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN2@DisplayNew
; Line 367
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20015
; Line 369
	jmp	SHORT $LN1@DisplayNew
$LN2@DisplayNew:
; Line 371
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG20017
; Line 372
	fild	DWORD PTR _temp$20013[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	_c_to_f
	add	esp, 4
	call	__ftol2_sse
	mov	DWORD PTR _temp$20013[ebp], eax
$LN1@DisplayNew:
; Line 374
	mov	eax, DWORD PTR _temp$20013[ebp]
	push	eax
	push	OFFSET $SG20020
	push	OFFSET _workString
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 375
	mov	DWORD PTR _pDest, OFFSET _workString
; Line 378
	mov	DWORD PTR _size$[ebp], 3
; Line 379
	mov	DWORD PTR _type$[ebp], 2
; Line 380
	mov	DWORD PTR _lock$[ebp], 1
$LN10@DisplayNew:
; Line 385
	push	1
	mov	eax, DWORD PTR _hPersonalizeEntryScreen
	push	eax
	mov	ecx, DWORD PTR _id$[ebp]
	push	ecx
	mov	edx, DWORD PTR _size$[ebp]
	push	edx
	movzx	eax, BYTE PTR _lock$[ebp]
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDest
	push	edx
	mov	eax, DWORD PTR _pTitle$[ebp]
	push	eax
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pDataEntryKeyboard, eax
; Line 387
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN16@DisplayNew:
	DD	$LN8@DisplayNew
	DD	$LN7@DisplayNew
	DD	$LN6@DisplayNew
	DD	$LN5@DisplayNew
	DD	$LN4@DisplayNew
	DD	$LN3@DisplayNew
_DisplayNewKeyboardScreen ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _PersonalizeIgnoreNextKeyRelease
_TEXT	SEGMENT
_PersonalizeIgnoreNextKeyRelease PROC			; COMDAT
; Line 392
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 393
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PersonalizeIgnoreNextKeyRelease ENDP
_TEXT	ENDS
PUBLIC	_DeletePersonalizeKeyboards
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeletePersonalizeKeyboards
_TEXT	SEGMENT
_DeletePersonalizeKeyboards PROC			; COMDAT
; Line 396
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 397
	cmp	DWORD PTR _pDataEntryKeyboard, 0
	je	SHORT $LN2@DeletePers
; Line 399
	mov	eax, DWORD PTR _pDataEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 400
	mov	DWORD PTR _pDataEntryKeyboard, 0
$LN2@DeletePers:
; Line 402
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DeletePersonalizeKeyboards ENDP
_TEXT	ENDS
END
