; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\BUTTON_SkinClassic.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_BUTTON__SkinClassic
CONST	SEGMENT
_BUTTON__SkinClassic DD FLAT:__Paint
	DD	FLAT:__Create
	ORG $+4
CONST	ENDS
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	_GUI_DRAW__Draw:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_GUI_DrawRect:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI_GetClientRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_WM__IsEnabled:PROC
EXTRN	_BUTTON_LockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\button_skinclassic.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
tv149 = -340						; size = 4
tv74 = -340						; size = 4
_hDrawObj$ = -140					; size = 4
_RectText$ = -128					; size = 8
_RectInside$ = -112					; size = 8
_RectClient$ = -96					; size = 8
_ColorIndex$ = -80					; size = 4
_PressedState$ = -68					; size = 4
_State$ = -56						; size = 4
_Index$ = -44						; size = 4
_s$ = -32						; size = 4
_EffectSize$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_BUTTON_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 49
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	mov	DWORD PTR _State$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _State$[ebp]
	and	eax, 256				; 00000100H
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	DWORD PTR _PressedState$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN11@Paint
	mov	ecx, DWORD PTR _PressedState$[ebp]
	mov	DWORD PTR tv74[ebp], ecx
	jmp	SHORT $LN12@Paint
$LN11@Paint:
	mov	DWORD PTR tv74[ebp], 2
$LN12@Paint:
	mov	edx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _ColorIndex$[ebp], edx
; Line 52
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 54
	lea	eax, DWORD PTR _RectClient$[ebp]
	push	eax
	call	_GUI_GetClientRect
	add	esp, 4
; Line 58
	mov	eax, DWORD PTR _RectClient$[ebp]
	mov	DWORD PTR _RectInside$[ebp], eax
	mov	ecx, DWORD PTR _RectClient$[ebp+4]
	mov	DWORD PTR _RectInside$[ebp+4], ecx
; Line 62
	cmp	DWORD PTR _PressedState$[ebp], 0
	jne	SHORT $LN8@Paint
; Line 63
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 64
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 65
	jmp	SHORT $LN7@Paint
$LN8@Paint:
; Line 66
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	cmp	DWORD PTR [ecx+20], 0
	je	SHORT $LN6@Paint
; Line 67
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 68
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 69
	jmp	SHORT $LN7@Paint
$LN6@Paint:
; Line 70
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 71
	movsx	eax, WORD PTR _RectClient$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _RectClient$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _RectClient$[ebp]
	push	edx
	movsx	eax, WORD PTR _RectClient$[ebp+2]
	push	eax
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 72
	mov	DWORD PTR _EffectSize$[ebp], 1
$LN7@Paint:
; Line 75
	mov	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectInside$[ebp]
	push	ecx
	lea	edx, DWORD PTR _RectInside$[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 79
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+56]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 80
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+68]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 81
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 82
	call	_GUI_Clear
; Line 88
	cmp	DWORD PTR _ColorIndex$[ebp], 2
	jge	SHORT $LN4@Paint
; Line 89
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+112], 0
	je	SHORT $LN13@Paint
	cmp	DWORD PTR _PressedState$[ebp], 0
	je	SHORT $LN13@Paint
	mov	DWORD PTR tv149[ebp], 1
	jmp	SHORT $LN14@Paint
$LN13@Paint:
	mov	DWORD PTR tv149[ebp], 0
$LN14@Paint:
	mov	ecx, DWORD PTR tv149[ebp]
	mov	DWORD PTR _Index$[ebp], ecx
; Line 90
	jmp	SHORT $LN3@Paint
$LN4@Paint:
; Line 91
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, 2
	mov	DWORD PTR _Index$[ebp], ecx
$LN3@Paint:
; Line 93
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+108]
	mov	DWORD PTR _hDrawObj$[ebp], edx
; Line 94
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 95
	push	0
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDrawObj$[ebp]
	push	ecx
	call	_GUI_DRAW__Draw
	add	esp, 16					; 00000010H
; Line 96
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_BUTTON_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 100
	mov	eax, DWORD PTR _RectInside$[ebp]
	mov	DWORD PTR _RectText$[ebp], eax
	mov	ecx, DWORD PTR _RectInside$[ebp+4]
	mov	DWORD PTR _RectText$[ebp+4], ecx
; Line 101
	cmp	DWORD PTR _PressedState$[ebp], 0
	je	SHORT $LN2@Paint
; Line 102
	push	0
	push	0
	lea	eax, DWORD PTR _RectText$[ebp]
	push	eax
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
$LN2@Paint:
; Line 104
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+104], 0
	je	SHORT $LN1@Paint
; Line 105
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 106
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _s$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+96]
	push	ecx
	lea	edx, DWORD PTR _RectText$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 108
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$[ebp], 0
$LN1@Paint:
; Line 120
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 121
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 122
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@Paint:
	DD	3
	DD	$LN18@Paint
$LN18@Paint:
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN15@Paint
	DD	-112					; ffffff90H
	DD	8
	DD	$LN16@Paint
	DD	-128					; ffffff80H
	DD	8
	DD	$LN17@Paint
$LN17@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN16@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN15@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
__Paint	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 130
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _hObj$[ebp], eax
; Line 131
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Create ENDP
_TEXT	ENDS
PUBLIC	_BUTTON_SetSkinClassic
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _BUTTON_SetSkinClassic
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_BUTTON_SetSkinClassic PROC				; COMDAT
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 157
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_BUTTON_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 158
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+100], OFFSET _BUTTON__SkinClassic
; Line 159
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 160
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 161
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_BUTTON_SetSkinClassic ENDP
_TEXT	ENDS
PUBLIC	_BUTTON_SetDefaultSkinClassic
EXTRN	_BUTTON__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _BUTTON_SetDefaultSkinClassic
_TEXT	SEGMENT
_BUTTON_SetDefaultSkinClassic PROC			; COMDAT
; Line 167
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	DWORD PTR _BUTTON__pSkinDefault, OFFSET _BUTTON__SkinClassic
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_BUTTON_SetDefaultSkinClassic ENDP
_TEXT	ENDS
END
