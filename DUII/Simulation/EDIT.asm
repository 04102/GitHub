; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\EDIT.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_EDIT__DefaultProps
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_EDIT__DefaultProps DD 0cH
	DD	01H
	DD	FLAT:_GUI_Font13_1
	DD	00H
	DD	00H
	DD	0c0c0c0H
	DD	0ffffffH
$SG12925 DB	'EDIT.c: Wrong handle type or Object not init''ed', 00H
$SG13013 DB	'EDIT_Create failed to alloc buffer', 00H
_DATA	ENDS
PUBLIC	_EDIT_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\edit.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _EDIT_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_EDIT_LockH PROC					; COMDAT
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 473
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 474
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@EDIT_LockH
; Line 475
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+132], 1162103124		; 45444954H
	je	SHORT $LN2@EDIT_LockH
; Line 476
	push	OFFSET $SG12925
	call	_GUI_ErrorOut
	add	esp, 4
; Line 477
	xor	eax, eax
	jmp	SHORT $LN3@EDIT_LockH
$LN2@EDIT_LockH:
; Line 480
	mov	eax, DWORD PTR _p$[ebp]
$LN3@EDIT_LockH:
; Line 481
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_LockH ENDP
_TEXT	ENDS
PUBLIC	_EDIT__GetCurrentChar
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_UC_GetCharCode:PROC
EXTRN	_GUI_UC__NumChars2NumBytes:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT__GetCurrentChar
_TEXT	SEGMENT
_pText$12931 = -20					; size = 4
_Char$ = -8						; size = 2
_pObj$ = 8						; size = 4
_EDIT__GetCurrentChar PROC				; COMDAT
; Line 488
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 489
	xor	eax, eax
	mov	WORD PTR _Char$[ebp], ax
; Line 490
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN1@EDIT__GetC
; Line 492
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12931[ebp], eax
; Line 493
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _pText$12931[ebp]
	push	edx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _pText$12931[ebp]
	mov	DWORD PTR _pText$12931[ebp], eax
; Line 494
	mov	eax, DWORD PTR _pText$12931[ebp]
	push	eax
	call	_GUI_UC_GetCharCode
	add	esp, 4
	mov	WORD PTR _Char$[ebp], ax
; Line 495
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12931[ebp], 0
$LN1@EDIT__GetC:
; Line 497
	mov	ax, WORD PTR _Char$[ebp]
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT__GetCurrentChar ENDP
_TEXT	ENDS
PUBLIC	_EDIT__SetCursorPos
EXTRN	_GUI__GetNumChars:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT__SetCursorPos
_TEXT	SEGMENT
_Offset$12943 = -44					; size = 4
_NumChars$12942 = -32					; size = 4
_pText$12941 = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_CursorPos$ = 12					; size = 4
_EDIT__SetCursorPos PROC				; COMDAT
; Line 506
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 508
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 509
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	$LN5@EDIT__SetC
; Line 512
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12941[ebp], eax
; Line 513
	mov	eax, DWORD PTR _pText$12941[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$12942[ebp], eax
; Line 514
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+88]
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _Offset$12943[ebp], ecx
; Line 515
	cmp	DWORD PTR _CursorPos$[ebp], 0
	jge	SHORT $LN4@EDIT__SetC
; Line 516
	mov	DWORD PTR _CursorPos$[ebp], 0
$LN4@EDIT__SetC:
; Line 518
	mov	eax, DWORD PTR _CursorPos$[ebp]
	cmp	eax, DWORD PTR _NumChars$12942[ebp]
	jle	SHORT $LN3@EDIT__SetC
; Line 519
	mov	eax, DWORD PTR _NumChars$12942[ebp]
	mov	DWORD PTR _CursorPos$[ebp], eax
$LN3@EDIT__SetC:
; Line 521
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+60]
	sub	ecx, DWORD PTR _Offset$12943[ebp]
	cmp	DWORD PTR _CursorPos$[ebp], ecx
	jle	SHORT $LN2@EDIT__SetC
; Line 522
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+60]
	sub	ecx, DWORD PTR _Offset$12943[ebp]
	mov	DWORD PTR _CursorPos$[ebp], ecx
$LN2@EDIT__SetC:
; Line 524
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	cmp	ecx, DWORD PTR _CursorPos$[ebp]
	je	SHORT $LN1@EDIT__SetC
; Line 525
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _CursorPos$[ebp]
	mov	DWORD PTR [eax+80], ecx
$LN1@EDIT__SetC:
; Line 527
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+84], 0
; Line 528
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12941[ebp], 0
$LN5@EDIT__SetC:
; Line 530
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 531
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT__SetCursorPos ENDP
_TEXT	ENDS
PUBLIC	_EDIT__SetValueUnsigned
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT__SetValueUnsigned
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_EDIT__SetValueUnsigned PROC				; COMDAT
; Line 537
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 538
	push	1
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetValue
	add	esp, 12					; 0000000cH
; Line 539
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT__SetValueUnsigned ENDP
_TEXT	ENDS
EXTRN	_WM_NotifyParent:PROC
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetValue
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_Unsigned$ = 16						; size = 4
__SetValue PROC						; COMDAT
; Line 408
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 410
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN11@SetValue
; Line 412
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 414
	cmp	DWORD PTR _Unsigned$[ebp], 0
	je	SHORT $LN9@SetValue
; Line 415
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	cmp	ecx, DWORD PTR [eax+64]
	jae	SHORT $LN8@SetValue
; Line 416
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _Value$[ebp], ecx
$LN8@SetValue:
; Line 418
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	cmp	ecx, DWORD PTR [eax+68]
	jbe	SHORT $LN7@SetValue
; Line 419
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _Value$[ebp], ecx
$LN7@SetValue:
; Line 421
	jmp	SHORT $LN6@SetValue
$LN9@SetValue:
; Line 422
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	cmp	ecx, DWORD PTR [eax+64]
	jge	SHORT $LN5@SetValue
; Line 423
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _Value$[ebp], ecx
$LN5@SetValue:
; Line 425
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	cmp	ecx, DWORD PTR [eax+68]
	jle	SHORT $LN6@SetValue
; Line 426
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _Value$[ebp], ecx
$LN6@SetValue:
; Line 429
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN3@SetValue
; Line 430
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 431
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+96], 0
	je	SHORT $LN2@SetValue
; Line 432
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@SetValue:
; Line 434
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 435
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 436
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 437
	jmp	SHORT $LN11@SetValue
$LN3@SetValue:
; Line 438
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN11@SetValue:
; Line 442
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetValue ENDP
_TEXT	ENDS
PUBLIC	_EDIT_AddKey
PUBLIC	_EDIT_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WM_RestartTimer:PROC
EXTRN	_WM_SelectWindow:PROC
EXTRN	_WIDGET_HandleActive:PROC
EXTRN	_WM__IsEnabled:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_Callback
_TEXT	SEGMENT
tv90 = -244						; size = 4
tv71 = -244						; size = 4
_Key$12977 = -44					; size = 4
_pObj$ = -32						; size = 4
_hObj$ = -20						; size = 4
_IsEnabled$ = -8					; size = 4
_pMsg$ = 8						; size = 4
_EDIT_Callback PROC					; COMDAT
; Line 551
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 555
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 556
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	mov	DWORD PTR _IsEnabled$[ebp], eax
; Line 558
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN14@EDIT_Callb
; Line 559
	jmp	$LN15@EDIT_Callb
$LN14@EDIT_Callb:
; Line 561
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 275		; 00000113H
	jg	SHORT $LN17@EDIT_Callb
	cmp	DWORD PTR tv71[ebp], 275		; 00000113H
	je	SHORT $LN11@EDIT_Callb
	mov	edx, DWORD PTR tv71[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 4
	ja	$LN12@EDIT_Callb
	mov	eax, DWORD PTR tv71[ebp]
	jmp	DWORD PTR $LN19@EDIT_Callb[eax*4]
$LN17@EDIT_Callb:
	jmp	$LN12@EDIT_Callb
$LN11@EDIT_Callb:
; Line 563
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SelectWindow
	add	esp, 4
; Line 564
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__InvertCursor
	add	esp, 4
; Line 565
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 566
	push	0
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_WM_RestartTimer
	add	esp, 8
; Line 567
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 568
	jmp	$LN12@EDIT_Callb
$LN10@EDIT_Callb:
; Line 570
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 571
	jmp	$LN12@EDIT_Callb
$LN9@EDIT_Callb:
; Line 574
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Paint
	add	esp, 8
; Line 575
	jmp	$LN15@EDIT_Callb
$LN8@EDIT_Callb:
; Line 578
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Delete
	add	esp, 4
; Line 579
	jmp	SHORT $LN12@EDIT_Callb
$LN7@EDIT_Callb:
; Line 581
	cmp	DWORD PTR _IsEnabled$[ebp], 0
	je	SHORT $LN12@EDIT_Callb
; Line 582
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN12@EDIT_Callb
; Line 583
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Key$12977[ebp], edx
; Line 584
	mov	eax, DWORD PTR _Key$12977[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	sub	ecx, 9
	mov	DWORD PTR tv90[ebp], ecx
	cmp	DWORD PTR tv90[ebp], 18			; 00000012H
	ja	SHORT $LN1@EDIT_Callb
	mov	edx, DWORD PTR tv90[ebp]
	movzx	eax, BYTE PTR $LN18@EDIT_Callb[edx]
	jmp	DWORD PTR $LN20@EDIT_Callb[eax*4]
$LN2@EDIT_Callb:
; Line 589
	jmp	SHORT $LN12@EDIT_Callb
$LN1@EDIT_Callb:
; Line 591
	mov	eax, DWORD PTR _Key$12977[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT_AddKey
	add	esp, 8
; Line 592
	jmp	SHORT $LN15@EDIT_Callb
$LN12@EDIT_Callb:
; Line 598
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN15@EDIT_Callb:
; Line 599
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@EDIT_Callb:
	DD	$LN8@EDIT_Callb
	DD	$LN10@EDIT_Callb
	DD	$LN12@EDIT_Callb
	DD	$LN7@EDIT_Callb
	DD	$LN9@EDIT_Callb
$LN20@EDIT_Callb:
	DD	$LN2@EDIT_Callb
	DD	$LN1@EDIT_Callb
$LN18@EDIT_Callb:
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
_EDIT_Callback ENDP
_TEXT	ENDS
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WIDGET__EFFECT_DrawDown:PROC
EXTRN	_GUI_InvertRect:PROC
EXTRN	_WIDGET__FillStringInRect:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Paint
_TEXT	SEGMENT
_rInvert$ = -96						; size = 8
_rText$ = -80						; size = 8
_rInside$ = -64						; size = 8
_rFillRect$ = -48					; size = 8
_pText$ = -32						; size = 4
_CursorWidth$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Complete$ = 12						; size = 4
__Paint	PROC						; COMDAT
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 173
	mov	DWORD PTR _pText$[ebp], 0
; Line 176
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 177
	mov	eax, DWORD PTR _Complete$[ebp]
	push	eax
	lea	ecx, DWORD PTR _CursorWidth$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rInvert$[ebp]
	push	edx
	lea	eax, DWORD PTR _rText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rInside$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rFillRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CalcSizes
	add	esp, 32					; 00000020H
; Line 178
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN9@Paint
; Line 179
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$[ebp], eax
$LN9@Paint:
; Line 182
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN8@Paint
$LN7@Paint:
; Line 184
	lea	eax, DWORD PTR _rFillRect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 185
	cmp	DWORD PTR _Complete$[ebp], 0
	je	SHORT $LN4@Paint
; Line 187
	lea	eax, DWORD PTR _rText$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rInside$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rFillRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_WIDGET__FillStringInRect
	add	esp, 16					; 00000010H
$LN4@Paint:
; Line 190
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	je	SHORT $LN3@Paint
; Line 191
	movsx	eax, WORD PTR _rInvert$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _rInvert$[ebp]
	mov	edx, DWORD PTR _CursorWidth$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	push	eax
	movsx	ecx, WORD PTR _rInvert$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _rInvert$[ebp]
	push	edx
	call	_GUI_InvertRect
	add	esp, 16					; 00000010H
$LN3@Paint:
; Line 193
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 195
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WIDGET__EFFECT_DrawDown
	add	esp, 4
; Line 196
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN7@Paint
$LN8@Paint:
; Line 197
	cmp	DWORD PTR _Complete$[ebp], 0
	je	SHORT $LN2@Paint
; Line 198
	push	0
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_WM_RestartTimer
	add	esp, 8
$LN2@Paint:
; Line 200
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 201
	cmp	DWORD PTR _pText$[ebp], 0
	je	SHORT $LN10@Paint
; Line 202
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$[ebp], 0
$LN10@Paint:
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN18@Paint:
	DD	5
	DD	$LN17@Paint
$LN17@Paint:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@Paint
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN13@Paint
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN14@Paint
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN15@Paint
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN16@Paint
$LN16@Paint:
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	0
$LN15@Paint:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN14@Paint:
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN13@Paint:
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN12@Paint:
	DB	67					; 00000043H
	DB	117					; 00000075H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI__GetCursorPosX:PROC
EXTRN	__pfGUI__BIDI_GetCharDir:DWORD
EXTRN	_GUI__BIDI_Enabled:DWORD
EXTRN	_GUI_GetCharDistX:PROC
EXTRN	_GUI__GetCursorCharacter:PROC
EXTRN	_GUI__CalcTextRect:PROC
EXTRN	_WIDGET__GetInsideRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_LCD_SetBkColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcSizes
_TEXT	SEGMENT
tv142 = -268						; size = 4
_IsRTL$12732 = -68					; size = 4
_i$12731 = -56						; size = 4
_Char$12730 = -44					; size = 2
_NumChars$12728 = -32					; size = 4
_IsEnabled$ = -20					; size = 4
_pText$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_pFillRect$ = 16					; size = 4
_pInsideRect$ = 20					; size = 4
_pTextRect$ = 24					; size = 4
_pInvertRect$ = 28					; size = 4
_pCursorWidth$ = 32					; size = 4
_ManageSelection$ = 36					; size = 4
__CalcSizes PROC					; COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 109
	mov	DWORD PTR _pText$[ebp], 0
; Line 111
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	mov	DWORD PTR _IsEnabled$[ebp], eax
; Line 113
	mov	eax, DWORD PTR _IsEnabled$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+120]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 114
	mov	eax, DWORD PTR _IsEnabled$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+112]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 115
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 117
	mov	eax, DWORD PTR _pFillRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__GetInsideRect
	add	esp, 8
; Line 118
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN16@CalcSizes
; Line 119
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$[ebp], eax
$LN16@CalcSizes:
; Line 121
	mov	eax, DWORD PTR _pFillRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pInsideRect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 122
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	edx, DWORD PTR _pInsideRect$[ebp]
	movsx	eax, WORD PTR [edx]
	lea	ecx, DWORD PTR [eax+ecx+1]
	mov	edx, DWORD PTR _pInsideRect$[ebp]
	mov	WORD PTR [edx], cx
; Line 123
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	add	ecx, 1
	mov	edx, DWORD PTR _pInsideRect$[ebp]
	movsx	eax, WORD PTR [edx+4]
	sub	eax, ecx
	mov	ecx, DWORD PTR _pInsideRect$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	mov	edx, DWORD PTR _pTextRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pInsideRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$[ebp]
	push	ecx
	call	_GUI__CalcTextRect
	add	esp, 16					; 00000010H
; Line 126
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	je	$LN15@CalcSizes
; Line 128
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+89]
	test	ecx, ecx
	jle	SHORT $LN19@CalcSizes
	mov	edx, DWORD PTR _pObj$[ebp]
	movzx	eax, BYTE PTR [edx+89]
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN20@CalcSizes
$LN19@CalcSizes:
	mov	DWORD PTR tv142[ebp], 1
$LN20@CalcSizes:
	mov	ecx, DWORD PTR _pCursorWidth$[ebp]
	mov	edx, DWORD PTR tv142[ebp]
	mov	DWORD PTR [ecx], edx
; Line 129
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$12728[ebp], eax
; Line 130
	cmp	DWORD PTR _pText$[ebp], 0
	je	$LN15@CalcSizes
; Line 132
	mov	DWORD PTR _IsRTL$12732[ebp], 0
; Line 133
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+88]
	test	ecx, ecx
	jne	SHORT $LN12@CalcSizes
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	$LN13@CalcSizes
	cmp	DWORD PTR _ManageSelection$[ebp], 0
	je	$LN13@CalcSizes
$LN12@CalcSizes:
; Line 134
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	cmp	ecx, DWORD PTR _NumChars$12728[ebp]
	jge	$LN11@CalcSizes
; Line 135
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN10@CalcSizes
	cmp	DWORD PTR _ManageSelection$[ebp], 0
	je	SHORT $LN10@CalcSizes
; Line 136
	mov	eax, DWORD PTR _pCursorWidth$[ebp]
	mov	DWORD PTR [eax], 0
; Line 137
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _i$12731[ebp], ecx
	jmp	SHORT $LN9@CalcSizes
$LN8@CalcSizes:
	mov	eax, DWORD PTR _i$12731[ebp]
	add	eax, 1
	mov	DWORD PTR _i$12731[ebp], eax
$LN9@CalcSizes:
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+84]
	cmp	DWORD PTR _i$12731[ebp], ecx
	jge	SHORT $LN7@CalcSizes
; Line 138
	push	0
	mov	eax, DWORD PTR _NumChars$12728[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$12731[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$[ebp]
	push	edx
	call	_GUI__GetCursorCharacter
	add	esp, 16					; 00000010H
	mov	WORD PTR _Char$12730[ebp], ax
; Line 139
	movzx	eax, WORD PTR _Char$12730[ebp]
	push	eax
	call	_GUI_GetCharDistX
	add	esp, 4
	mov	ecx, DWORD PTR _pCursorWidth$[ebp]
	add	eax, DWORD PTR [ecx]
	mov	edx, DWORD PTR _pCursorWidth$[ebp]
	mov	DWORD PTR [edx], eax
; Line 140
	jmp	SHORT $LN8@CalcSizes
$LN7@CalcSizes:
; Line 141
	mov	eax, DWORD PTR _pCursorWidth$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	SHORT $LN6@CalcSizes
; Line 142
	mov	eax, DWORD PTR _pCursorWidth$[ebp]
	mov	DWORD PTR [eax], 1
$LN6@CalcSizes:
; Line 144
	jmp	SHORT $LN11@CalcSizes
$LN10@CalcSizes:
; Line 145
	lea	eax, DWORD PTR _IsRTL$12732[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumChars$12728[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+80]
	push	eax
	mov	ecx, DWORD PTR _pText$[ebp]
	push	ecx
	call	_GUI__GetCursorCharacter
	add	esp, 16					; 00000010H
	mov	WORD PTR _Char$12730[ebp], ax
; Line 146
	movzx	eax, WORD PTR _Char$12730[ebp]
	push	eax
	call	_GUI_GetCharDistX
	add	esp, 4
	mov	ecx, DWORD PTR _pCursorWidth$[ebp]
	mov	DWORD PTR [ecx], eax
$LN11@CalcSizes:
; Line 149
	jmp	SHORT $LN4@CalcSizes
$LN13@CalcSizes:
; Line 150
	cmp	DWORD PTR _GUI__BIDI_Enabled, 1
	jne	SHORT $LN4@CalcSizes
; Line 151
	mov	esi, esp
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	mov	edx, DWORD PTR _NumChars$12728[ebp]
	push	edx
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	DWORD PTR __pfGUI__BIDI_GetCharDir
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _IsRTL$12732[ebp], eax
$LN4@CalcSizes:
; Line 154
	mov	eax, DWORD PTR _pTextRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pInvertRect$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	DWORD PTR [eax+4], edx
; Line 155
	cmp	DWORD PTR _IsRTL$12732[ebp], 0
	je	SHORT $LN2@CalcSizes
; Line 156
	mov	eax, DWORD PTR _pInvertRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pCursorWidth$[ebp]
	sub	ecx, DWORD PTR [edx]
	mov	eax, DWORD PTR _pInvertRect$[ebp]
	mov	WORD PTR [eax], cx
$LN2@CalcSizes:
; Line 158
	mov	eax, DWORD PTR _NumChars$12728[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI__GetCursorPosX
	add	esp, 12					; 0000000cH
	mov	ecx, DWORD PTR _pInvertRect$[ebp]
	movsx	edx, WORD PTR [ecx]
	add	edx, eax
	mov	eax, DWORD PTR _pInvertRect$[ebp]
	mov	WORD PTR [eax], dx
$LN15@CalcSizes:
; Line 161
	cmp	DWORD PTR _pText$[ebp], 0
	je	SHORT $LN17@CalcSizes
; Line 162
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$[ebp], 0
$LN17@CalcSizes:
; Line 164
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@CalcSizes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@CalcSizes:
	DD	1
	DD	$LN22@CalcSizes
$LN22@CalcSizes:
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN21@CalcSizes
$LN21@CalcSizes:
	DB	73					; 00000049H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	84					; 00000054H
	DB	76					; 0000004cH
	DB	0
__CalcSizes ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __InvertCursor
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
__InvertCursor PROC					; COMDAT
; Line 210
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 211
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Paint
	add	esp, 8
; Line 212
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__InvertCursor ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_FreePtr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Delete
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Delete PROC						; COMDAT
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 220
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 221
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 222
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 223
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Delete ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetCursorAtPixel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnTouch
_TEXT	SEGMENT
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 386
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 388
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 389
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@OnTouch
; Line 390
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN3@OnTouch
; Line 392
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_EDIT_SetCursorAtPixel
	add	esp, 8
; Line 393
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 394
	jmp	SHORT $LN2@OnTouch
$LN3@OnTouch:
; Line 396
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN2@OnTouch:
; Line 398
	jmp	SHORT $LN5@OnTouch
$LN4@OnTouch:
; Line 400
	push	3
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN5@OnTouch:
; Line 402
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
PUBLIC	_EDIT_CreateEx
EXTRN	_WM_DeleteWindow:PROC
EXTRN	_WIDGET__Init:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_CreateEx
_TEXT	SEGMENT
tv85 = -232						; size = 4
_pObj$13009 = -32					; size = 4
_BufferSize$13008 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_MaxLen$ = 40						; size = 4
_EDIT_CreateEx PROC					; COMDAT
; Line 613
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 615
	mov	eax, DWORD PTR _ExFlags$[ebp]
	mov	DWORD PTR _ExFlags$[ebp], eax
; Line 618
	mov	eax, DWORD PTR _WinFlags$[ebp]
	or	eax, 4096				; 00001000H
	mov	DWORD PTR _WinFlags$[ebp], eax
; Line 620
	push	88					; 00000058H
	push	OFFSET _EDIT_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 621
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN2@EDIT_Creat
; Line 624
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13009[ebp], eax
; Line 626
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13009[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 628
	mov	eax, DWORD PTR _pObj$13009[ebp]
	mov	DWORD PTR [eax+132], 1162103124		; 45444954H
; Line 629
	mov	edi, DWORD PTR _pObj$13009[ebp]
	add	edi, 100				; 00000064H
	mov	ecx, 7
	mov	esi, OFFSET _EDIT__DefaultProps
	rep movsd
; Line 630
	mov	eax, DWORD PTR _pObj$13009[ebp]
	mov	BYTE PTR [eax+89], 1
; Line 631
	cmp	DWORD PTR _MaxLen$[ebp], 0
	jne	SHORT $LN5@EDIT_Creat
	mov	DWORD PTR tv85[ebp], 8
	jmp	SHORT $LN6@EDIT_Creat
$LN5@EDIT_Creat:
	mov	eax, DWORD PTR _MaxLen$[ebp]
	mov	DWORD PTR tv85[ebp], eax
$LN6@EDIT_Creat:
	mov	ecx, DWORD PTR _pObj$13009[ebp]
	mov	dx, WORD PTR tv85[ebp]
	mov	WORD PTR [ecx+60], dx
; Line 632
	xor	eax, eax
	mov	ecx, DWORD PTR _pObj$13009[ebp]
	mov	WORD PTR [ecx+62], ax
; Line 633
	mov	eax, DWORD PTR _pObj$13009[ebp]
	mov	DWORD PTR [eax+56], 0
; Line 634
	mov	eax, DWORD PTR _pObj$13009[ebp]
	movsx	ecx, WORD PTR [eax+60]
	add	ecx, 1
	mov	DWORD PTR _BufferSize$13008[ebp], ecx
; Line 635
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13009[ebp], 0
; Line 636
	mov	eax, DWORD PTR _BufferSize$13008[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__IncrementBuffer
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@EDIT_Creat
; Line 637
	push	OFFSET $SG13013
	call	_GUI_ErrorOut
	add	esp, 4
; Line 638
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 639
	mov	DWORD PTR _hObj$[ebp], 0
$LN2@EDIT_Creat:
; Line 643
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 644
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_CreateEx ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Realloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __IncrementBuffer
_TEXT	SEGMENT
_pText$12799 = -56					; size = 4
_NewSize$ = -44						; size = 4
_hpText$ = -32						; size = 4
_hNew$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_AddBytes$ = 12						; size = 4
__IncrementBuffer PROC					; COMDAT
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 236
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 237
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hpText$[ebp], ecx
; Line 238
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+62]
	add	ecx, DWORD PTR _AddBytes$[ebp]
	mov	DWORD PTR _NewSize$[ebp], ecx
; Line 239
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 240
	mov	eax, DWORD PTR _NewSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hpText$[ebp]
	push	ecx
	call	_GUI_ALLOC_Realloc
	add	esp, 8
	mov	DWORD PTR _hNew$[ebp], eax
; Line 241
	cmp	DWORD PTR _hNew$[ebp], 0
	je	SHORT $LN2@IncrementB
; Line 242
	cmp	DWORD PTR _hpText$[ebp], 0
	jne	SHORT $LN1@IncrementB
; Line 244
	mov	eax, DWORD PTR _hNew$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12799[ebp], eax
; Line 245
	mov	eax, DWORD PTR _pText$12799[ebp]
	mov	BYTE PTR [eax], 0
; Line 246
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12799[ebp], 0
$LN1@IncrementB:
; Line 248
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 249
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR _NewSize$[ebp]
	mov	WORD PTR [eax+62], cx
; Line 250
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 251
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 252
	mov	eax, 1
	jmp	SHORT $LN3@IncrementB
$LN2@IncrementB:
; Line 254
	xor	eax, eax
$LN3@IncrementB:
; Line 255
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IncrementBuffer ENDP
_TEXT	ENDS
EXTRN	_GUI__GetCursorPosChar:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_WM_GetWindowSizeX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetCursorAtPixel
_TEXT	SEGMENT
tv81 = -268						; size = 4
_pText$13026 = -68					; size = 4
_NumChars$13025 = -56					; size = 4
_TextWidth$13024 = -44					; size = 4
_xSize$13023 = -32					; size = 4
_pOldFont$13022 = -20					; size = 4
_pObj$13020 = -8					; size = 4
_hObj$ = 8						; size = 4
_xPos$ = 12						; size = 4
_EDIT_SetCursorAtPixel PROC				; COMDAT
; Line 656
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 657
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN12@EDIT_SetCu
; Line 660
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13020[ebp], eax
; Line 661
	mov	eax, DWORD PTR _pObj$13020[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	$LN10@EDIT_SetCu
; Line 665
	mov	eax, DWORD PTR _pObj$13020[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13026[ebp], eax
; Line 666
	mov	eax, DWORD PTR _pObj$13020[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$13022[ebp], eax
; Line 667
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowSizeX
	add	esp, 4
	mov	DWORD PTR _xSize$13023[ebp], eax
; Line 668
	mov	eax, DWORD PTR _pText$13026[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _TextWidth$13024[ebp], eax
; Line 669
	mov	eax, DWORD PTR _pObj$13020[ebp]
	mov	ecx, DWORD PTR [eax+100]
	and	ecx, 3
	mov	DWORD PTR tv81[ebp], ecx
	cmp	DWORD PTR tv81[ebp], 1
	je	SHORT $LN6@EDIT_SetCu
	cmp	DWORD PTR tv81[ebp], 2
	je	SHORT $LN7@EDIT_SetCu
	jmp	SHORT $LN5@EDIT_SetCu
$LN7@EDIT_SetCu:
; Line 671
	mov	eax, DWORD PTR _xSize$13023[ebp]
	sub	eax, DWORD PTR _TextWidth$13024[ebp]
	add	eax, 1
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 672
	jmp	SHORT $LN8@EDIT_SetCu
$LN6@EDIT_SetCu:
; Line 674
	mov	eax, DWORD PTR _xSize$13023[ebp]
	sub	eax, DWORD PTR _TextWidth$13024[ebp]
	mov	ecx, DWORD PTR _pObj$13020[ebp]
	mov	edx, DWORD PTR [ecx+104]
	add	edx, 1
	sub	eax, edx
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 675
	jmp	SHORT $LN8@EDIT_SetCu
$LN5@EDIT_SetCu:
; Line 677
	mov	eax, DWORD PTR _pObj$13020[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	edx, DWORD PTR _pObj$13020[ebp]
	mov	eax, DWORD PTR [edx+48]
	mov	edx, DWORD PTR [eax]
	lea	eax, DWORD PTR [ecx+edx+1]
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xPos$[ebp], ecx
$LN8@EDIT_SetCu:
; Line 679
	mov	eax, DWORD PTR _pText$13026[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$13025[ebp], eax
; Line 680
	cmp	DWORD PTR _xPos$[ebp], 0
	jge	SHORT $LN4@EDIT_SetCu
; Line 681
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT__SetCursorPos
	add	esp, 8
	jmp	SHORT $LN3@EDIT_SetCu
$LN4@EDIT_SetCu:
; Line 682
	mov	eax, DWORD PTR _xPos$[ebp]
	cmp	eax, DWORD PTR _TextWidth$13024[ebp]
	jle	SHORT $LN2@EDIT_SetCu
; Line 683
	mov	eax, DWORD PTR _NumChars$13025[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
; Line 684
	jmp	SHORT $LN3@EDIT_SetCu
$LN2@EDIT_SetCu:
; Line 685
	mov	eax, DWORD PTR _NumChars$13025[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$13026[ebp]
	push	edx
	call	_GUI__GetCursorPosChar
	add	esp, 12					; 0000000cH
	push	eax
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT__SetCursorPos
	add	esp, 8
$LN3@EDIT_SetCu:
; Line 687
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13026[ebp], 0
; Line 688
	mov	eax, DWORD PTR _pOldFont$13022[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 689
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN10@EDIT_SetCu:
; Line 691
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13020[ebp], 0
$LN12@EDIT_SetCu:
; Line 694
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetCursorAtPixel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _EDIT_AddKey
_TEXT	SEGMENT
tv74 = -304						; size = 4
_Char$13068 = -104					; size = 2
_pText$13067 = -92					; size = 4
_Char$13062 = -80					; size = 2
_pText$13061 = -68					; size = 4
_CursorPos$13051 = -56					; size = 4
_hpText$13050 = -44					; size = 4
_EditMode$13049 = -29					; size = 1
_pfAddKeyEx$13048 = -20					; size = 4
_pObj$13047 = -8					; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
_EDIT_AddKey PROC					; COMDAT
; Line 700
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 701
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN22@EDIT_AddKe
; Line 709
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13047[ebp], eax
; Line 710
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _pfAddKeyEx$13048[ebp], ecx
; Line 711
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	cl, BYTE PTR [eax+88]
	mov	BYTE PTR _EditMode$13049[ebp], cl
; Line 712
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hpText$13050[ebp], ecx
; Line 713
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _CursorPos$13051[ebp], ecx
; Line 714
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13047[ebp], 0
; Line 715
	cmp	DWORD PTR _pfAddKeyEx$13048[ebp], 0
	je	SHORT $LN20@EDIT_AddKe
; Line 716
	mov	esi, esp
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	DWORD PTR _pfAddKeyEx$13048[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 717
	jmp	$LN19@EDIT_AddKe
$LN20@EDIT_AddKe:
; Line 718
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv74[ebp], eax
	mov	ecx, DWORD PTR tv74[ebp]
	sub	ecx, 8
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 22			; 00000016H
	ja	$LN4@EDIT_AddKe
	mov	edx, DWORD PTR tv74[ebp]
	movzx	eax, BYTE PTR $LN24@EDIT_AddKe[edx]
	jmp	DWORD PTR $LN25@EDIT_AddKe[eax*4]
$LN16@EDIT_AddKe:
; Line 720
	cmp	DWORD PTR _hpText$13050[ebp], 0
	je	SHORT $LN15@EDIT_AddKe
; Line 723
	mov	eax, DWORD PTR _hpText$13050[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13061[ebp], eax
; Line 724
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$13061[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _pText$13061[ebp]
	mov	DWORD PTR _pText$13061[ebp], eax
; Line 725
	mov	eax, DWORD PTR _pText$13061[ebp]
	push	eax
	call	_GUI_UC_GetCharCode
	add	esp, 4
	mov	WORD PTR _Char$13062[ebp], ax
; Line 726
	mov	eax, DWORD PTR _pText$13061[ebp]
	push	eax
	push	1
	movzx	ecx, WORD PTR _Char$13062[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__ChangeCharacter
	add	esp, 16					; 00000010H
; Line 727
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13061[ebp], 0
$LN15@EDIT_AddKe:
; Line 729
	jmp	$LN19@EDIT_AddKe
$LN14@EDIT_AddKe:
; Line 731
	cmp	DWORD PTR _hpText$13050[ebp], 0
	je	SHORT $LN13@EDIT_AddKe
; Line 734
	mov	eax, DWORD PTR _hpText$13050[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13067[ebp], eax
; Line 735
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$13067[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, DWORD PTR _pText$13067[ebp]
	mov	DWORD PTR _pText$13067[ebp], eax
; Line 736
	mov	eax, DWORD PTR _pText$13067[ebp]
	push	eax
	call	_GUI_UC_GetCharCode
	add	esp, 4
	mov	WORD PTR _Char$13068[ebp], ax
; Line 737
	mov	eax, DWORD PTR _pText$13067[ebp]
	push	eax
	push	-1
	movzx	ecx, WORD PTR _Char$13068[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__ChangeCharacter
	add	esp, 16					; 00000010H
; Line 738
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13067[ebp], 0
$LN13@EDIT_AddKe:
; Line 740
	jmp	$LN19@EDIT_AddKe
$LN12@EDIT_AddKe:
; Line 742
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
; Line 743
	jmp	$LN19@EDIT_AddKe
$LN11@EDIT_AddKe:
; Line 745
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
; Line 746
	jmp	$LN19@EDIT_AddKe
$LN10@EDIT_AddKe:
; Line 748
	cmp	DWORD PTR _CursorPos$13051[ebp], 0
	je	SHORT $LN9@EDIT_AddKe
; Line 749
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
; Line 750
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeleteChar
	add	esp, 4
$LN9@EDIT_AddKe:
; Line 752
	jmp	$LN19@EDIT_AddKe
$LN8@EDIT_AddKe:
; Line 754
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeleteChar
	add	esp, 4
; Line 755
	jmp	$LN19@EDIT_AddKe
$LN7@EDIT_AddKe:
; Line 757
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13047[ebp], eax
; Line 758
	movzx	eax, BYTE PTR _EditMode$13049[ebp]
	cmp	eax, 1
	jne	SHORT $LN6@EDIT_AddKe
; Line 759
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	BYTE PTR [eax+88], 0
; Line 760
	jmp	SHORT $LN5@EDIT_AddKe
$LN6@EDIT_AddKe:
; Line 761
	mov	eax, DWORD PTR _pObj$13047[ebp]
	mov	BYTE PTR [eax+88], 1
; Line 762
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
$LN5@EDIT_AddKe:
; Line 764
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13047[ebp], 0
; Line 765
	jmp	SHORT $LN19@EDIT_AddKe
$LN4@EDIT_AddKe:
; Line 767
	cmp	DWORD PTR _Key$[ebp], 32		; 00000020H
	jl	SHORT $LN19@EDIT_AddKe
; Line 768
	movzx	eax, BYTE PTR _EditMode$13049[ebp]
	test	eax, eax
	je	SHORT $LN2@EDIT_AddKe
; Line 769
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__DeleteChar
	add	esp, 4
$LN2@EDIT_AddKe:
; Line 771
	movzx	eax, WORD PTR _Key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__InsertChar
	add	esp, 8
	test	eax, eax
	je	SHORT $LN19@EDIT_AddKe
; Line 772
	mov	eax, DWORD PTR _CursorPos$13051[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_EDIT__SetCursorPos
	add	esp, 8
$LN19@EDIT_AddKe:
; Line 777
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN22@EDIT_AddKe:
; Line 780
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN25@EDIT_AddKe:
	DD	$LN10@EDIT_AddKe
	DD	$LN11@EDIT_AddKe
	DD	$LN16@EDIT_AddKe
	DD	$LN12@EDIT_AddKe
	DD	$LN14@EDIT_AddKe
	DD	$LN7@EDIT_AddKe
	DD	$LN8@EDIT_AddKe
	DD	$LN4@EDIT_AddKe
$LN24@EDIT_AddKe:
	DB	0
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	1
	DB	2
	DB	3
	DB	4
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	5
	DB	6
_EDIT_AddKey ENDP
_TEXT	ENDS
EXTRN	_strcpy:PROC
EXTRN	_GUI_UC_GetCharSize:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DeleteChar
_TEXT	SEGMENT
_NumBytes$12844 = -68					; size = 4
_pText$12841 = -56					; size = 4
_CursorOffset$12840 = -44				; size = 4
_CursorPos$ = -32					; size = 4
_hpText$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__DeleteChar PROC					; COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 325
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 326
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hpText$[ebp], ecx
; Line 327
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _CursorPos$[ebp], ecx
; Line 328
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 329
	cmp	DWORD PTR _hpText$[ebp], 0
	je	$LN4@DeleteChar
; Line 332
	mov	eax, DWORD PTR _hpText$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12841[ebp], eax
; Line 333
	mov	eax, DWORD PTR _CursorPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$12841[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	mov	DWORD PTR _CursorOffset$12840[ebp], eax
; Line 334
	mov	eax, DWORD PTR _pText$12841[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	cmp	DWORD PTR _CursorOffset$12840[ebp], eax
	jae	SHORT $LN2@DeleteChar
; Line 336
	mov	eax, DWORD PTR _pText$12841[ebp]
	add	eax, DWORD PTR _CursorOffset$12840[ebp]
	mov	DWORD PTR _pText$12841[ebp], eax
; Line 337
	mov	eax, DWORD PTR _pText$12841[ebp]
	push	eax
	call	_GUI_UC_GetCharSize
	add	esp, 4
	mov	DWORD PTR _NumBytes$12844[ebp], eax
; Line 338
	mov	eax, DWORD PTR _pText$12841[ebp]
	add	eax, DWORD PTR _NumBytes$12844[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$12841[ebp]
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 339
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12841[ebp], 0
; Line 340
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 341
	jmp	SHORT $LN4@DeleteChar
$LN2@DeleteChar:
; Line 342
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12841[ebp], 0
$LN4@DeleteChar:
; Line 345
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DeleteChar ENDP
_TEXT	ENDS
EXTRN	_GUI_UC_Encode:PROC
EXTRN	_memmove:PROC
EXTRN	_GUI_UC__CalcSizeOfChar:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __InsertChar
_TEXT	SEGMENT
_pText$12863 = -80					; size = 4
_CursorOffset$12862 = -68				; size = 4
_BytesNeeded$12860 = -56				; size = 4
_hpText$ = -44						; size = 4
_CursorPos$ = -32					; size = 4
_CharsAreAvailable$ = -20				; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Char$ = 12						; size = 2
__InsertChar PROC					; COMDAT
; Line 353
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 358
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 359
	push	1
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__CharsAreAvailable
	add	esp, 8
	mov	DWORD PTR _CharsAreAvailable$[ebp], eax
; Line 360
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hpText$[ebp], ecx
; Line 361
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _CursorPos$[ebp], ecx
; Line 362
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 363
	cmp	DWORD PTR _CharsAreAvailable$[ebp], 0
	je	$LN2@InsertChar
; Line 365
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	call	_GUI_UC__CalcSizeOfChar
	add	esp, 4
	mov	DWORD PTR _BytesNeeded$12860[ebp], eax
; Line 366
	mov	eax, DWORD PTR _BytesNeeded$12860[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__IsSpaceInBuffer
	add	esp, 8
	test	eax, eax
	je	$LN2@InsertChar
; Line 369
	mov	eax, DWORD PTR _hpText$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12863[ebp], eax
; Line 370
	mov	eax, DWORD PTR _CursorPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$12863[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	mov	DWORD PTR _CursorOffset$12862[ebp], eax
; Line 371
	mov	eax, DWORD PTR _pText$12863[ebp]
	add	eax, DWORD PTR _CursorOffset$12862[ebp]
	mov	DWORD PTR _pText$12863[ebp], eax
; Line 372
	mov	eax, DWORD PTR _pText$12863[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _pText$12863[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$12863[ebp]
	add	edx, DWORD PTR _BytesNeeded$12860[ebp]
	push	edx
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 373
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$12863[ebp]
	push	ecx
	call	_GUI_UC_Encode
	add	esp, 8
; Line 374
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12863[ebp], 0
; Line 375
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 376
	mov	eax, 1
	jmp	SHORT $LN3@InsertChar
$LN2@InsertChar:
; Line 379
	xor	eax, eax
$LN3@InsertChar:
; Line 380
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__InsertChar ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsSpaceInBuffer
_TEXT	SEGMENT
_pText$12812 = -32					; size = 4
_pObj$ = -20						; size = 4
_NumBytes$ = -8						; size = 4
_hObj$ = 8						; size = 4
_BytesNeeded$ = 12					; size = 4
__IsSpaceInBuffer PROC					; COMDAT
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 269
	mov	DWORD PTR _NumBytes$[ebp], 0
; Line 271
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 272
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN3@IsSpaceInB
; Line 274
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12812[ebp], eax
; Line 275
	mov	eax, DWORD PTR _pText$12812[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 276
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12812[ebp], 0
$LN3@IsSpaceInB:
; Line 278
	mov	eax, DWORD PTR _NumBytes$[ebp]
	mov	ecx, DWORD PTR _BytesNeeded$[ebp]
	lea	edx, DWORD PTR [ecx+eax+1]
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+62]
	sub	edx, ecx
	mov	DWORD PTR _BytesNeeded$[ebp], edx
; Line 279
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 280
	cmp	DWORD PTR _BytesNeeded$[ebp], 0
	jle	SHORT $LN2@IsSpaceInB
; Line 281
	mov	eax, DWORD PTR _BytesNeeded$[ebp]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__IncrementBuffer
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN2@IsSpaceInB
; Line 282
	xor	eax, eax
	jmp	SHORT $LN4@IsSpaceInB
$LN2@IsSpaceInB:
; Line 285
	mov	eax, 1
$LN4@IsSpaceInB:
; Line 286
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsSpaceInBuffer ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CharsAreAvailable
_TEXT	SEGMENT
_pText$12827 = -20					; size = 4
_NumChars$12825 = -8					; size = 4
_pObj$ = 8						; size = 4
_CharsNeeded$ = 12					; size = 4
__CharsAreAvailable PROC				; COMDAT
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 299
	cmp	DWORD PTR _CharsNeeded$[ebp], 0
	jle	SHORT $LN3@CharsAreAv
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+60]
	test	ecx, ecx
	jle	SHORT $LN3@CharsAreAv
; Line 300
	mov	DWORD PTR _NumChars$12825[ebp], 0
; Line 301
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN2@CharsAreAv
; Line 303
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$12827[ebp], eax
; Line 304
	mov	eax, DWORD PTR _pText$12827[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$12825[ebp], eax
; Line 305
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$12827[ebp], 0
$LN2@CharsAreAv:
; Line 307
	mov	eax, DWORD PTR _CharsNeeded$[ebp]
	add	eax, DWORD PTR _NumChars$12825[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	movsx	edx, WORD PTR [ecx+60]
	cmp	eax, edx
	jle	SHORT $LN3@CharsAreAv
; Line 308
	xor	eax, eax
	jmp	SHORT $LN4@CharsAreAv
$LN3@CharsAreAv:
; Line 311
	mov	eax, 1
$LN4@CharsAreAv:
; Line 312
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CharsAreAvailable ENDP
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ChangeCharacter
_TEXT	SEGMENT
_SizeOld$ = -32						; size = 4
_SizeNew$ = -20						; size = 4
_acBuffer$ = -8						; size = 3
_hObj$ = 8						; size = 4
_Char$ = 12						; size = 2
_Index$ = 16						; size = 4
_pText$ = 20						; size = 4
__ChangeCharacter PROC					; COMDAT
; Line 448
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 449
	mov	BYTE PTR _acBuffer$[ebp], 0
	xor	eax, eax
	mov	WORD PTR _acBuffer$[ebp+1], ax
; Line 451
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	call	_GUI_UC__CalcSizeOfChar
	add	esp, 4
	mov	DWORD PTR _SizeOld$[ebp], eax
; Line 452
	movzx	eax, WORD PTR _Char$[ebp]
	add	eax, DWORD PTR _Index$[ebp]
	mov	WORD PTR _Char$[ebp], ax
; Line 453
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	call	_GUI_UC__CalcSizeOfChar
	add	esp, 4
	mov	DWORD PTR _SizeNew$[ebp], eax
; Line 454
	mov	eax, DWORD PTR _SizeOld$[ebp]
	cmp	eax, DWORD PTR _SizeNew$[ebp]
	jne	SHORT $LN2@ChangeChar
; Line 455
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	lea	ecx, DWORD PTR _acBuffer$[ebp]
	push	ecx
	call	_GUI_UC_Encode
	add	esp, 8
; Line 456
	mov	eax, DWORD PTR _SizeNew$[ebp]
	push	eax
	lea	ecx, DWORD PTR _acBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 457
	push	5
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN2@ChangeChar:
; Line 459
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ChangeChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@ChangeChar:
	DD	1
	DD	$LN5@ChangeChar
$LN5@ChangeChar:
	DD	-8					; fffffff8H
	DD	3
	DD	$LN4@ChangeChar
$LN4@ChangeChar:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
__ChangeCharacter ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetFont
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pfont$ = 12						; size = 4
_EDIT_SetFont PROC					; COMDAT
; Line 786
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 788
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@EDIT_SetFo
; Line 789
	jmp	SHORT $LN3@EDIT_SetFo
$LN2@EDIT_SetFo:
; Line 792
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 793
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN1@EDIT_SetFo
; Line 794
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pfont$[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 795
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@EDIT_SetFo:
; Line 797
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@EDIT_SetFo:
; Line 799
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetFont ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetBkColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetBkColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_color$ = 16						; size = 4
_EDIT_SetBkColor PROC					; COMDAT
; Line 805
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 807
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN3@EDIT_SetBk
; Line 808
	jmp	SHORT $LN4@EDIT_SetBk
$LN3@EDIT_SetBk:
; Line 811
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 812
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN2@EDIT_SetBk
; Line 813
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN2@EDIT_SetBk
; Line 814
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [ecx+eax*4+120], edx
; Line 815
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@EDIT_SetBk:
; Line 818
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN4@EDIT_SetBk:
; Line 820
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetBkColor ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetTextColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetTextColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_color$ = 16						; size = 4
_EDIT_SetTextColor PROC					; COMDAT
; Line 826
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 828
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN3@EDIT_SetTe
; Line 829
	jmp	SHORT $LN4@EDIT_SetTe
$LN3@EDIT_SetTe:
; Line 832
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 833
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN2@EDIT_SetTe
; Line 834
	cmp	DWORD PTR _Index$[ebp], 2
	jae	SHORT $LN2@EDIT_SetTe
; Line 835
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _color$[ebp]
	mov	DWORD PTR [ecx+eax*4+112], edx
; Line 836
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@EDIT_SetTe:
; Line 839
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN4@EDIT_SetTe:
; Line 841
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetTextColor ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetText
_TEXT	SEGMENT
_pText$13137 = -92					; size = 4
_pText$13132 = -80					; size = 4
_NumCharsNew$13130 = -68				; size = 4
_NumBytesOld$13129 = -56				; size = 4
_NumBytesNew$13128 = -44				; size = 4
_MaxLen$13125 = -32					; size = 2
_hpText$13124 = -20					; size = 4
_pObj$13123 = -8					; size = 4
_hObj$ = 8						; size = 4
_s$ = 12						; size = 4
_EDIT_SetText PROC					; COMDAT
; Line 847
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 848
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN9@EDIT_SetTe@2
; Line 854
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13123[ebp], eax
; Line 855
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hpText$13124[ebp], ecx
; Line 856
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	cx, WORD PTR [eax+60]
	mov	WORD PTR _MaxLen$13125[ebp], cx
; Line 857
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13123[ebp], 0
; Line 858
	cmp	DWORD PTR _s$[ebp], 0
	je	$LN7@EDIT_SetTe@2
; Line 859
	mov	DWORD PTR _NumBytesOld$13129[ebp], 0
; Line 861
	cmp	DWORD PTR _hpText$13124[ebp], 0
	je	SHORT $LN6@EDIT_SetTe@2
; Line 863
	mov	eax, DWORD PTR _hpText$13124[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13132[ebp], eax
; Line 864
	mov	eax, DWORD PTR _pText$13132[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _NumBytesOld$13129[ebp], eax
; Line 865
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13132[ebp], 0
$LN6@EDIT_SetTe@2:
; Line 867
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumCharsNew$13130[ebp], eax
; Line 868
	movsx	eax, WORD PTR _MaxLen$13125[ebp]
	cmp	DWORD PTR _NumCharsNew$13130[ebp], eax
	jle	SHORT $LN5@EDIT_SetTe@2
; Line 869
	movsx	eax, WORD PTR _MaxLen$13125[ebp]
	mov	DWORD PTR _NumCharsNew$13130[ebp], eax
$LN5@EDIT_SetTe@2:
; Line 871
	mov	eax, DWORD PTR _NumCharsNew$13130[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	add	eax, 1
	mov	DWORD PTR _NumBytesNew$13128[ebp], eax
; Line 872
	mov	eax, DWORD PTR _NumBytesNew$13128[ebp]
	sub	eax, DWORD PTR _NumBytesOld$13129[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__IsSpaceInBuffer
	add	esp, 8
	test	eax, eax
	je	$LN4@EDIT_SetTe@2
; Line 874
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13123[ebp], eax
; Line 875
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13137[ebp], eax
; Line 876
	mov	eax, DWORD PTR _NumBytesNew$13128[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pText$13137[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 877
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	ecx, DWORD PTR _NumCharsNew$13130[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 878
	mov	eax, DWORD PTR _pObj$13123[ebp]
	movsx	ecx, WORD PTR [eax+60]
	mov	edx, DWORD PTR _pObj$13123[ebp]
	cmp	DWORD PTR [edx+80], ecx
	jne	SHORT $LN3@EDIT_SetTe@2
; Line 879
	mov	eax, DWORD PTR _pObj$13123[ebp]
	movzx	ecx, BYTE PTR [eax+88]
	cmp	ecx, 1
	jne	SHORT $LN3@EDIT_SetTe@2
; Line 880
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	ecx, DWORD PTR [eax+80]
	sub	ecx, 1
	mov	edx, DWORD PTR _pObj$13123[ebp]
	mov	DWORD PTR [edx+80], ecx
$LN3@EDIT_SetTe@2:
; Line 883
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13123[ebp], 0
; Line 884
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13137[ebp], 0
$LN4@EDIT_SetTe@2:
; Line 886
	jmp	SHORT $LN1@EDIT_SetTe@2
$LN7@EDIT_SetTe@2:
; Line 887
	mov	eax, DWORD PTR _pObj$13123[ebp]
	add	eax, 56					; 00000038H
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 888
	xor	eax, eax
	mov	ecx, DWORD PTR _pObj$13123[ebp]
	mov	WORD PTR [ecx+62], ax
; Line 889
	mov	eax, DWORD PTR _pObj$13123[ebp]
	mov	DWORD PTR [eax+80], 0
$LN1@EDIT_SetTe@2:
; Line 891
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN9@EDIT_SetTe@2:
; Line 894
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetText ENDP
_TEXT	ENDS
PUBLIC	_EDIT_GetText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_GetText
_TEXT	SEGMENT
_NumBytes$13158 = -44					; size = 4
_NumChars$13157 = -32					; size = 4
_pText$13156 = -20					; size = 4
_pObj$13154 = -8					; size = 4
_hObj$ = 8						; size = 4
_sDest$ = 12						; size = 4
_MaxLen$ = 16						; size = 4
_EDIT_GetText PROC					; COMDAT
; Line 900
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 901
	cmp	DWORD PTR _sDest$[ebp], 0
	je	$LN5@EDIT_GetTe
; Line 902
	mov	eax, DWORD PTR _sDest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 903
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN5@EDIT_GetTe
; Line 906
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13154[ebp], eax
; Line 907
	mov	eax, DWORD PTR _pObj$13154[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN2@EDIT_GetTe
; Line 910
	mov	eax, DWORD PTR _pObj$13154[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13156[ebp], eax
; Line 911
	mov	eax, DWORD PTR _pText$13156[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$13157[ebp], eax
; Line 912
	mov	eax, DWORD PTR _NumChars$13157[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$13156[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	mov	DWORD PTR _NumBytes$13158[ebp], eax
; Line 913
	mov	eax, DWORD PTR _MaxLen$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _NumBytes$13158[ebp], eax
	jle	SHORT $LN1@EDIT_GetTe
; Line 914
	mov	eax, DWORD PTR _MaxLen$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumBytes$13158[ebp], eax
$LN1@EDIT_GetTe:
; Line 916
	mov	eax, DWORD PTR _NumBytes$13158[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$13156[ebp]
	push	ecx
	mov	edx, DWORD PTR _sDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 917
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13156[ebp], 0
; Line 918
	mov	eax, DWORD PTR _sDest$[ebp]
	add	eax, DWORD PTR _NumBytes$13158[ebp]
	mov	BYTE PTR [eax], 0
$LN2@EDIT_GetTe:
; Line 920
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13154[ebp], 0
$LN5@EDIT_GetTe:
; Line 924
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_GetText ENDP
_TEXT	ENDS
PUBLIC	_EDIT_GetValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_GetValue
_TEXT	SEGMENT
_r$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_EDIT_GetValue PROC					; COMDAT
; Line 930
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 932
	mov	DWORD PTR _r$[ebp], 0
; Line 933
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@EDIT_GetVa
; Line 935
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 936
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _r$[ebp], ecx
; Line 937
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@EDIT_GetVa:
; Line 940
	mov	eax, DWORD PTR _r$[ebp]
; Line 941
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_GetValue ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetValue
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_EDIT_SetValue PROC					; COMDAT
; Line 947
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 948
	push	0
	mov	eax, DWORD PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetValue
	add	esp, 12					; 0000000cH
; Line 949
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetValue ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetMaxLen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetMaxLen
_TEXT	SEGMENT
_NumBytes$13190 = -56					; size = 4
_NumChars$13187 = -44					; size = 4
_pText$13186 = -32					; size = 4
_BufferSize$13182 = -20					; size = 2
_pObj$13181 = -8					; size = 4
_hObj$ = 8						; size = 4
_MaxLen$ = 12						; size = 4
_EDIT_SetMaxLen PROC					; COMDAT
; Line 955
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 956
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN6@EDIT_SetMa
; Line 960
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13181[ebp], eax
; Line 961
	mov	eax, DWORD PTR _pObj$13181[ebp]
	mov	cx, WORD PTR [eax+62]
	mov	WORD PTR _BufferSize$13182[ebp], cx
; Line 962
	mov	eax, DWORD PTR _pObj$13181[ebp]
	movsx	ecx, WORD PTR [eax+60]
	cmp	DWORD PTR _MaxLen$[ebp], ecx
	je	$LN4@EDIT_SetMa
; Line 963
	mov	eax, DWORD PTR _pObj$13181[ebp]
	movsx	ecx, WORD PTR [eax+60]
	cmp	DWORD PTR _MaxLen$[ebp], ecx
	jge	SHORT $LN3@EDIT_SetMa
; Line 964
	mov	eax, DWORD PTR _pObj$13181[ebp]
	cmp	DWORD PTR [eax+56], 0
	je	SHORT $LN3@EDIT_SetMa
; Line 967
	mov	eax, DWORD PTR _pObj$13181[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$13186[ebp], eax
; Line 968
	mov	eax, DWORD PTR _pText$13186[ebp]
	push	eax
	call	_GUI__GetNumChars
	add	esp, 4
	mov	DWORD PTR _NumChars$13187[ebp], eax
; Line 969
	mov	eax, DWORD PTR _NumChars$13187[ebp]
	cmp	eax, DWORD PTR _MaxLen$[ebp]
	jle	SHORT $LN1@EDIT_SetMa
; Line 971
	mov	eax, DWORD PTR _MaxLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$13186[ebp]
	push	ecx
	call	_GUI_UC__NumChars2NumBytes
	add	esp, 8
	mov	DWORD PTR _NumBytes$13190[ebp], eax
; Line 972
	mov	eax, DWORD PTR _pText$13186[ebp]
	add	eax, DWORD PTR _NumBytes$13190[ebp]
	mov	BYTE PTR [eax], 0
$LN1@EDIT_SetMa:
; Line 974
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$13186[ebp], 0
$LN3@EDIT_SetMa:
; Line 977
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13181[ebp], 0
; Line 978
	movzx	eax, WORD PTR _BufferSize$13182[ebp]
	mov	ecx, DWORD PTR _MaxLen$[ebp]
	sub	ecx, eax
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__IncrementBuffer
	add	esp, 8
; Line 979
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13181[ebp], eax
; Line 980
	mov	eax, DWORD PTR _pObj$13181[ebp]
	mov	cx, WORD PTR _MaxLen$[ebp]
	mov	WORD PTR [eax+60], cx
; Line 981
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN4@EDIT_SetMa:
; Line 983
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13181[ebp], 0
$LN6@EDIT_SetMa:
; Line 986
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetMaxLen ENDP
_TEXT	ENDS
PUBLIC	_EDIT_SetTextAlign
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _EDIT_SetTextAlign
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Align$ = 12						; size = 4
_EDIT_SetTextAlign PROC					; COMDAT
; Line 992
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 994
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@EDIT_SetTe@3
; Line 995
	jmp	SHORT $LN3@EDIT_SetTe@3
$LN2@EDIT_SetTe@3:
; Line 998
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_EDIT_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 999
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN1@EDIT_SetTe@3
; Line 1000
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Align$[ebp]
	mov	DWORD PTR [eax+100], ecx
; Line 1001
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@EDIT_SetTe@3:
; Line 1003
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@EDIT_SetTe@3:
; Line 1005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_EDIT_SetTextAlign ENDP
_TEXT	ENDS
END
