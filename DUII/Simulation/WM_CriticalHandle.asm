; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_CriticalHandle.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM__AddCriticalHandle
EXTRN	_WM__pFirstCriticalHandle:DWORD
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_criticalhandle.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM__AddCriticalHandle
_TEXT	SEGMENT
_pCriticalHandle$ = 8					; size = 4
_WM__AddCriticalHandle PROC				; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _pCriticalHandle$[ebp]
	mov	ecx, DWORD PTR _WM__pFirstCriticalHandle
	mov	DWORD PTR [eax], ecx
; Line 40
	mov	eax, DWORD PTR _pCriticalHandle$[ebp]
	mov	DWORD PTR _WM__pFirstCriticalHandle, eax
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__AddCriticalHandle ENDP
_TEXT	ENDS
PUBLIC	_WM__RemoveCriticalHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM__RemoveCriticalHandle
_TEXT	SEGMENT
_pLast$9439 = -20					; size = 4
_pCH$9438 = -8						; size = 4
_pCriticalHandle$ = 8					; size = 4
_WM__RemoveCriticalHandle PROC				; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	cmp	DWORD PTR _WM__pFirstCriticalHandle, 0
	je	SHORT $LN10@WM__Remove
; Line 49
	mov	DWORD PTR _pLast$9439[ebp], 0
; Line 50
	mov	eax, DWORD PTR _WM__pFirstCriticalHandle
	mov	DWORD PTR _pCH$9438[ebp], eax
	jmp	SHORT $LN8@WM__Remove
$LN7@WM__Remove:
	mov	eax, DWORD PTR _pCH$9438[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pCH$9438[ebp], ecx
$LN8@WM__Remove:
	cmp	DWORD PTR _pCH$9438[ebp], 0
	je	SHORT $LN10@WM__Remove
; Line 51
	mov	eax, DWORD PTR _pCH$9438[ebp]
	cmp	eax, DWORD PTR _pCriticalHandle$[ebp]
	jne	SHORT $LN5@WM__Remove
; Line 52
	cmp	DWORD PTR _pLast$9439[ebp], 0
	je	SHORT $LN4@WM__Remove
; Line 53
	mov	eax, DWORD PTR _pLast$9439[ebp]
	mov	ecx, DWORD PTR _pCH$9438[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
	jmp	SHORT $LN3@WM__Remove
$LN4@WM__Remove:
; Line 54
	mov	eax, DWORD PTR _pCH$9438[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@WM__Remove
; Line 55
	mov	eax, DWORD PTR _pCH$9438[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _WM__pFirstCriticalHandle, ecx
; Line 56
	jmp	SHORT $LN3@WM__Remove
$LN2@WM__Remove:
; Line 57
	mov	DWORD PTR _WM__pFirstCriticalHandle, 0
$LN3@WM__Remove:
; Line 59
	jmp	SHORT $LN10@WM__Remove
$LN5@WM__Remove:
; Line 61
	mov	eax, DWORD PTR _pCH$9438[ebp]
	mov	DWORD PTR _pLast$9439[ebp], eax
; Line 62
	jmp	SHORT $LN7@WM__Remove
$LN10@WM__Remove:
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__RemoveCriticalHandle ENDP
_TEXT	ENDS
END
