; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD_Set.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_SetAlphaEx
EXTRN	_LCDSIM_SetAlpha:PROC
EXTRN	_GUI_DEVICE__GetpDriver:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd_set.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LCD_SetAlphaEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_Alpha$ = 12						; size = 4
_LCD_SetAlphaEx PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	mov	DWORD PTR _r$[ebp], 1
; Line 43
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 44
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetAlp
; Line 45
	mov	esi, esp
	push	2
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 46
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetAlp
; Line 47
	mov	esi, esp
	mov	eax, DWORD PTR _Alpha$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 48
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetAlp:
; Line 51
	mov	eax, DWORD PTR _pDevice$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _Alpha$[ebp]
	push	edx
	call	_LCDSIM_SetAlpha
	add	esp, 8
$LN2@LCD_SetAlp:
; Line 54
	mov	eax, DWORD PTR _r$[ebp]
; Line 55
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetAlp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@LCD_SetAlp:
	DD	1
	DD	$LN6@LCD_SetAlp
$LN6@LCD_SetAlp:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetAlp
$LN5@LCD_SetAlp:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetAlphaEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVRAMAddrEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVRAMAddrEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_pVRAM$ = 12						; size = 4
_LCD_SetVRAMAddrEx PROC					; COMDAT
; Line 61
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	mov	DWORD PTR _r$[ebp], 1
; Line 66
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 67
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetVRA
; Line 68
	mov	esi, esp
	push	9
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 69
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN2@LCD_SetVRA
; Line 70
	mov	esi, esp
	mov	eax, DWORD PTR _pVRAM$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 71
	mov	DWORD PTR _r$[ebp], 0
$LN2@LCD_SetVRA:
; Line 74
	mov	eax, DWORD PTR _r$[ebp]
; Line 75
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetVRA
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetVRA:
	DD	1
	DD	$LN6@LCD_SetVRA
$LN6@LCD_SetVRA:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetVRA
$LN5@LCD_SetVRA:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetVRAMAddrEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVSizeEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVSizeEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_xSize$ = 12						; size = 4
_ySize$ = 16						; size = 4
_LCD_SetVSizeEx PROC					; COMDAT
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 84
	mov	DWORD PTR _r$[ebp], 1
; Line 86
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 87
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetVSi
; Line 88
	mov	esi, esp
	push	10					; 0000000aH
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 89
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN2@LCD_SetVSi
; Line 90
	mov	esi, esp
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 91
	mov	DWORD PTR _r$[ebp], 0
$LN2@LCD_SetVSi:
; Line 94
	mov	eax, DWORD PTR _r$[ebp]
; Line 95
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetVSi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetVSi:
	DD	1
	DD	$LN6@LCD_SetVSi
$LN6@LCD_SetVSi:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetVSi
$LN5@LCD_SetVSi:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetVSizeEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetSizeEx
EXTRN	_LCDSIM_SetSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetSizeEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_xSize$ = 12						; size = 4
_ySize$ = 16						; size = 4
_LCD_SetSizeEx PROC					; COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 104
	mov	DWORD PTR _r$[ebp], 1
; Line 106
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 107
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetSiz
; Line 108
	mov	esi, esp
	push	11					; 0000000bH
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 109
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetSiz
; Line 110
	mov	esi, esp
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 111
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetSiz:
; Line 114
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _LayerIndex$[ebp]
	push	edx
	call	_LCDSIM_SetSize
	add	esp, 12					; 0000000cH
$LN2@LCD_SetSiz:
; Line 117
	mov	eax, DWORD PTR _r$[ebp]
; Line 118
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetSiz
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetSiz:
	DD	1
	DD	$LN6@LCD_SetSiz
$LN6@LCD_SetSiz:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetSiz
$LN5@LCD_SetSiz:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetSizeEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVisEx
EXTRN	_LCDSIM_SetLayerVis:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVisEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_OnOff$ = 12						; size = 4
_LCD_SetVisEx PROC					; COMDAT
; Line 124
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 127
	mov	DWORD PTR _r$[ebp], 1
; Line 129
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 130
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetVis
; Line 131
	mov	esi, esp
	push	6
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 132
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetVis
; Line 133
	mov	esi, esp
	mov	eax, DWORD PTR _OnOff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 134
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetVis:
; Line 137
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _OnOff$[ebp]
	push	ecx
	call	_LCDSIM_SetLayerVis
	add	esp, 8
$LN2@LCD_SetVis:
; Line 140
	mov	eax, DWORD PTR _r$[ebp]
; Line 141
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetVis
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetVis:
	DD	1
	DD	$LN6@LCD_SetVis
$LN6@LCD_SetVis:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetVis
$LN5@LCD_SetVis:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetVisEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetPosEx
EXTRN	_LCDSIM_SetLayerPos:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetPosEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_xPos$ = 12						; size = 4
_yPos$ = 16						; size = 4
_LCD_SetPosEx PROC					; COMDAT
; Line 147
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	mov	DWORD PTR _r$[ebp], 1
; Line 152
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 153
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetPos
; Line 154
	mov	esi, esp
	push	3
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 155
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetPos
; Line 156
	mov	esi, esp
	mov	eax, DWORD PTR _yPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 157
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetPos:
; Line 160
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xPos$[ebp]
	push	edx
	call	_LCDSIM_SetLayerPos
	add	esp, 12					; 0000000cH
$LN2@LCD_SetPos:
; Line 163
	mov	eax, DWORD PTR _r$[ebp]
; Line 164
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetPos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetPos:
	DD	1
	DD	$LN6@LCD_SetPos
$LN6@LCD_SetPos:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetPos
$LN5@LCD_SetPos:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetPosEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetAlphaModeEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetAlphaModeEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_AlphaMode$ = 12					; size = 4
_LCD_SetAlphaModeEx PROC				; COMDAT
; Line 170
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 173
	mov	DWORD PTR _r$[ebp], 1
; Line 175
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 176
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetAlp@2
; Line 177
	mov	esi, esp
	push	19					; 00000013H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 178
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN2@LCD_SetAlp@2
; Line 179
	mov	esi, esp
	mov	eax, DWORD PTR _AlphaMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 180
	mov	DWORD PTR _r$[ebp], 0
$LN2@LCD_SetAlp@2:
; Line 186
	mov	eax, DWORD PTR _r$[ebp]
; Line 187
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetAlp@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetAlp@2:
	DD	1
	DD	$LN6@LCD_SetAlp@2
$LN6@LCD_SetAlp@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetAlp@2
$LN5@LCD_SetAlp@2:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetAlphaModeEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetChromaModeEx
EXTRN	_SIM_GUI_SetTransMode:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetChromaModeEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_ChromaMode$ = 12					; size = 4
_LCD_SetChromaModeEx PROC				; COMDAT
; Line 193
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 196
	mov	DWORD PTR _r$[ebp], 1
; Line 198
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 199
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetChr
; Line 200
	mov	esi, esp
	push	20					; 00000014H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 201
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetChr
; Line 202
	mov	esi, esp
	mov	eax, DWORD PTR _ChromaMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 203
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetChr:
; Line 206
	mov	eax, DWORD PTR _ChromaMode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _LayerIndex$[ebp]
	push	ecx
	call	_SIM_GUI_SetTransMode
	add	esp, 8
$LN2@LCD_SetChr:
; Line 209
	mov	eax, DWORD PTR _r$[ebp]
; Line 210
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetChr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetChr:
	DD	1
	DD	$LN6@LCD_SetChr
$LN6@LCD_SetChr:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetChr
$LN5@LCD_SetChr:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetChromaModeEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetChromaEx
EXTRN	_SIM_GUI_SetChroma:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetChromaEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_ChromaMin$ = 12					; size = 4
_ChromaMax$ = 16					; size = 4
_LCD_SetChromaEx PROC					; COMDAT
; Line 216
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 219
	mov	DWORD PTR _r$[ebp], 1
; Line 221
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 222
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetChr@2
; Line 223
	mov	esi, esp
	push	21					; 00000015H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 224
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetChr@2
; Line 225
	mov	esi, esp
	mov	eax, DWORD PTR _ChromaMax$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ChromaMin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 226
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetChr@2:
; Line 229
	mov	eax, DWORD PTR _ChromaMax$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ChromaMin$[ebp]
	push	ecx
	mov	edx, DWORD PTR _LayerIndex$[ebp]
	push	edx
	call	_SIM_GUI_SetChroma
	add	esp, 12					; 0000000cH
$LN2@LCD_SetChr@2:
; Line 232
	mov	eax, DWORD PTR _r$[ebp]
; Line 233
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetChr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetChr@2:
	DD	1
	DD	$LN6@LCD_SetChr@2
$LN6@LCD_SetChr@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetChr@2
$LN5@LCD_SetChr@2:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetChromaEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetLUTEntryEx
EXTRN	_LCDSIM_SetLUTEntry:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetLUTEntryEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_Pos$ = 12						; size = 1
_Color$ = 16						; size = 4
_LCD_SetLUTEntryEx PROC					; COMDAT
; Line 239
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 242
	mov	DWORD PTR _r$[ebp], 1
; Line 244
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 245
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetLUT
; Line 246
	mov	esi, esp
	push	16					; 00000010H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 247
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN1@LCD_SetLUT
; Line 248
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 249
	mov	DWORD PTR _r$[ebp], 0
$LN1@LCD_SetLUT:
; Line 252
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Color$[ebp]
	and	ecx, 16711680				; 00ff0000H
	shr	ecx, 16					; 00000010H
	mov	edx, DWORD PTR _Color$[ebp]
	and	edx, 65280				; 0000ff00H
	or	ecx, edx
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 255				; 000000ffH
	shl	eax, 16					; 00000010H
	or	ecx, eax
	push	ecx
	movzx	ecx, BYTE PTR _Pos$[ebp]
	push	ecx
	call	_LCDSIM_SetLUTEntry
	add	esp, 12					; 0000000cH
$LN2@LCD_SetLUT:
; Line 255
	mov	eax, DWORD PTR _r$[ebp]
; Line 256
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetLUT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@LCD_SetLUT:
	DD	1
	DD	$LN6@LCD_SetLUT
$LN6@LCD_SetLUT:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetLUT
$LN5@LCD_SetLUT:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetLUTEntryEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_GetPosEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_GetPosEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_pxPos$ = 12						; size = 4
_pyPos$ = 16						; size = 4
_LCD_GetPosEx PROC					; COMDAT
; Line 262
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 265
	mov	DWORD PTR _r$[ebp], 1
; Line 267
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 268
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_GetPos
; Line 269
	mov	esi, esp
	push	4
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 270
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN2@LCD_GetPos
; Line 271
	mov	esi, esp
	mov	eax, DWORD PTR _pyPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pxPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 272
	mov	DWORD PTR _r$[ebp], 0
$LN2@LCD_GetPos:
; Line 275
	mov	eax, DWORD PTR _r$[ebp]
; Line 276
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_GetPos
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_GetPos:
	DD	1
	DD	$LN6@LCD_GetPos
$LN6@LCD_GetPos:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_GetPos
$LN5@LCD_GetPos:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_GetPosEx ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetAlpha
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetAlpha
_TEXT	SEGMENT
_Alpha$ = 8						; size = 4
_LCD_SetAlpha PROC					; COMDAT
; Line 282
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _Alpha$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	push	ecx
	call	_LCD_SetAlphaEx
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetAlpha ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVRAMAddr
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVRAMAddr
_TEXT	SEGMENT
_pVRAM$ = 8						; size = 4
_LCD_SetVRAMAddr PROC					; COMDAT
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _pVRAM$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	push	ecx
	call	_LCD_SetVRAMAddrEx
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetVRAMAddr ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVSize
_TEXT	SEGMENT
_xSize$ = 8						; size = 4
_ySize$ = 12						; size = 4
_LCD_SetVSize PROC					; COMDAT
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_SetVSizeEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetVSize ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetSize
_TEXT	SEGMENT
_xSize$ = 8						; size = 4
_ySize$ = 12						; size = 4
_LCD_SetSize PROC					; COMDAT
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_SetSizeEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetSize ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetVis
_TEXT	SEGMENT
_OnOff$ = 8						; size = 4
_LCD_SetVis PROC					; COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _OnOff$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	push	ecx
	call	_LCD_SetVisEx
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetVis ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetPos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetPos
_TEXT	SEGMENT
_xPos$ = 8						; size = 4
_yPos$ = 12						; size = 4
_LCD_SetPos PROC					; COMDAT
; Line 287
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _yPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPos$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_SetPosEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetPos ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetAlphaMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetAlphaMode
_TEXT	SEGMENT
_AlphaMode$ = 8						; size = 4
_LCD_SetAlphaMode PROC					; COMDAT
; Line 288
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _AlphaMode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	push	ecx
	call	_LCD_SetAlphaModeEx
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetAlphaMode ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetChromaMode
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetChromaMode
_TEXT	SEGMENT
_ChromaMode$ = 8					; size = 4
_LCD_SetChromaMode PROC					; COMDAT
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ChromaMode$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	push	ecx
	call	_LCD_SetChromaModeEx
	add	esp, 8
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetChromaMode ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetChroma
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetChroma
_TEXT	SEGMENT
_ChromaMin$ = 8						; size = 4
_ChromaMax$ = 12					; size = 4
_LCD_SetChroma PROC					; COMDAT
; Line 290
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _ChromaMax$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ChromaMin$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_SetChromaEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetChroma ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetLUTEntry
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetLUTEntry
_TEXT	SEGMENT
_Pos$ = 8						; size = 1
_Color$ = 12						; size = 4
_LCD_SetLUTEntry PROC					; COMDAT
; Line 291
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Pos$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_SetLUTEntryEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetLUTEntry ENDP
_TEXT	ENDS
PUBLIC	_LCD_GetPos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_GetPos
_TEXT	SEGMENT
_pxPos$ = 8						; size = 4
_pyPos$ = 12						; size = 4
_LCD_GetPos PROC					; COMDAT
; Line 292
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR _pyPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pxPos$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	push	edx
	call	_LCD_GetPosEx
	add	esp, 12					; 0000000cH
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_GetPos ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetDevFunc
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetDevFunc
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pFunc$ = -20						; size = 4
_pDevice$ = -8						; size = 4
_LayerIndex$ = 8					; size = 4
_IdFunc$ = 12						; size = 4
_pDriverFunc$ = 16					; size = 4
_LCD_SetDevFunc PROC					; COMDAT
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 301
	mov	DWORD PTR _r$[ebp], 1
; Line 303
	mov	eax, DWORD PTR _LayerIndex$[ebp]
	push	eax
	call	_GUI_DEVICE__GetpDriver
	add	esp, 4
	mov	DWORD PTR _pDevice$[ebp], eax
; Line 304
	cmp	DWORD PTR _pDevice$[ebp], 0
	je	SHORT $LN2@LCD_SetDev
; Line 305
	mov	esi, esp
	push	22					; 00000016H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pFunc$[ebp], eax
; Line 306
	cmp	DWORD PTR _pFunc$[ebp], 0
	je	SHORT $LN2@LCD_SetDev
; Line 307
	mov	esi, esp
	mov	eax, DWORD PTR _pDriverFunc$[ebp]
	push	eax
	mov	ecx, DWORD PTR _IdFunc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDevice$[ebp]
	push	edx
	call	DWORD PTR _pFunc$[ebp]
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	mov	DWORD PTR _r$[ebp], 0
$LN2@LCD_SetDev:
; Line 311
	mov	eax, DWORD PTR _r$[ebp]
; Line 312
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LCD_SetDev
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@LCD_SetDev:
	DD	1
	DD	$LN6@LCD_SetDev
$LN6@LCD_SetDev:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@LCD_SetDev
$LN5@LCD_SetDev:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_LCD_SetDevFunc ENDP
_TEXT	ENDS
END
