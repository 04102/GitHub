; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\GMeter.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?dotArray@@3PAUDOT@@A				; dotArray
PUBLIC	?dotIndex@@3HA					; dotIndex
_BSS	SEGMENT
?dotArray@@3PAUDOT@@A DQ 046H DUP (?)			; dotArray
?dotIndex@@3HA DD 01H DUP (?)				; dotIndex
_BSS	ENDS
CONST	SEGMENT
$SG15679 DB	'%.2f', 00H
	ORG $+3
$SG15681 DB	'%.2f', 00H
	ORG $+3
$SG15683 DB	'%.2f', 00H
	ORG $+3
$SG15685 DB	'%.2f', 00H
	ORG $+3
$SG15686 DB	'Bmax', 00H
	ORG $+3
$SG15687 DB	'Rmax', 00H
	ORG $+3
$SG15688 DB	'Amax', 00H
	ORG $+3
$SG15689 DB	'Lmax', 00H
	ORG $+3
$SG15690 DB	'%.2f', 00H
	ORG $+3
$SG15691 DB	'%.2f', 00H
	ORG $+3
$SG15692 DB	'%.2f', 00H
	ORG $+3
$SG15693 DB	'%.2f', 00H
	ORG $+3
$SG15694 DB	'%0.2f', 00H
CONST	ENDS
PUBLIC	?CreateBackground@GMeter@@AAEXXZ		; GMeter::CreateBackground
PUBLIC	__real@00000000
PUBLIC	??0GMeter@@QAE@H@Z				; GMeter::GMeter
EXTRN	_GUI__memset:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@00000000
; File c:\duii\duii\gmeter.cpp
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0GMeter@@QAE@H@Z
_TEXT	SEGMENT
tv132 = -208						; size = 4
_this$ = -8						; size = 4
_iMaxG$ = 8						; size = 4
??0GMeter@@QAE@H@Z PROC					; GMeter::GMeter, COMDAT
; _this$ = ecx
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+28], 0
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 115			; 00000073H
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+16], 10			; 0000000aH
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+36], 125			; 0000007dH
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _iMaxG$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	cdq
	idiv	DWORD PTR [ecx]
	mov	DWORD PTR tv132[ebp], eax
	fild	DWORD PTR tv132[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+40]
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+44]
; Line 60
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+52]
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+48]
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+56]
; Line 64
	mov	eax, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [eax+8]
	mov	ecx, DWORD PTR _this$[ebp]
	fldz
	fstp	DWORD PTR [ecx+4]
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0
; Line 68
	push	560					; 00000230H
	push	0
	push	OFFSET ?dotArray@@3PAUDOT@@A		; dotArray
	call	_GUI__memset
	add	esp, 12					; 0000000cH
; Line 69
	mov	DWORD PTR ?dotIndex@@3HA, 0		; dotIndex
; Line 71
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateBackground@GMeter@@AAEXXZ	; GMeter::CreateBackground
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0GMeter@@QAE@H@Z ENDP					; GMeter::GMeter
_TEXT	ENDS
PUBLIC	??1GMeter@@QAE@XZ				; GMeter::~GMeter
EXTRN	_GUI_MEMDEV_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GMeter@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GMeter@@QAE@XZ PROC					; GMeter::~GMeter, COMDAT
; _this$ = ecx
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 76
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GMeter@@QAE@XZ ENDP					; GMeter::~GMeter
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?DrawControl@GMeter@@QAEXXZ			; GMeter::DrawControl
EXTRN	_bmthreewayarrow:BYTE
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_Font20B_ASCII:BYTE
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_sprintf:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_FontD32:BYTE
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_FillCircle:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmGMeterBackground:BYTE
EXTRN	_GUI_GetFont:PROC
EXTRN	_GUI_GetColor:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawControl@GMeter@@QAEXXZ
_TEXT	SEGMENT
_index$15672 = -136					; size = 4
_temp$ = -124						; size = 4
_OldColor$ = -112					; size = 4
_color$ = -100						; size = 4
_str$ = -88						; size = 10
_fOldFont$ = -68					; size = 36
_loopCounter$ = -24					; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?DrawControl@GMeter@@QAEXXZ PROC			; GMeter::DrawControl, COMDAT
; _this$ = ecx
; Line 80
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 87
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$[ebp], eax
; Line 88
	call	_GUI_GetFont
	mov	ecx, 9
	mov	esi, eax
	lea	edi, DWORD PTR _fOldFont$[ebp]
	rep movsd
; Line 90
	push	0
	push	0
	push	OFFSET _bmGMeterBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 93
	mov	DWORD PTR _color$[ebp], 4210752		; 00404040H
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 95
	mov	DWORD PTR _loopCounter$[ebp], 0
	jmp	SHORT $LN12@DrawContro
$LN11@DrawContro:
	mov	eax, DWORD PTR _loopCounter$[ebp]
	add	eax, 1
	mov	DWORD PTR _loopCounter$[ebp], eax
$LN12@DrawContro:
	cmp	DWORD PTR _loopCounter$[ebp], 70	; 00000046H
	jge	$LN10@DrawContro
; Line 98
	mov	eax, DWORD PTR _loopCounter$[ebp]
	add	eax, DWORD PTR ?dotIndex@@3HA		; dotIndex
	mov	DWORD PTR _index$15672[ebp], eax
	cmp	DWORD PTR _index$15672[ebp], 70		; 00000046H
	jl	SHORT $LN9@DrawContro
; Line 99
	mov	eax, DWORD PTR _index$15672[ebp]
	sub	eax, 70					; 00000046H
	mov	DWORD PTR _index$15672[ebp], eax
$LN9@DrawContro:
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$15672[ebp]
	mov	edx, DWORD PTR ?dotArray@@3PAUDOT@@A[ecx*8]
	mov	DWORD PTR [eax+12], edx
; Line 102
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _index$15672[ebp]
	mov	edx, DWORD PTR ?dotArray@@3PAUDOT@@A[ecx*8+4]
	mov	DWORD PTR [eax+16], edx
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	$LN6@DrawContro
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	$LN6@DrawContro
; Line 105
	cmp	DWORD PTR _loopCounter$[ebp], 69	; 00000045H
	jl	$LN7@DrawContro
; Line 108
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 109
	push	5
	call	_GUI_SetPenSize
	add	esp, 4
; Line 110
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+20]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 112
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 113
	push	9
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 114
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 115
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@DrawContro
$LN7@DrawContro:
; Line 117
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+12]
	push	eax
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
$LN6@DrawContro:
; Line 119
	mov	eax, DWORD PTR _color$[ebp]
	add	eax, 263172				; 00040404H
	mov	DWORD PTR _color$[ebp], eax
	cmp	DWORD PTR _color$[ebp], 13882323	; 00d3d3d3H
	jbe	SHORT $LN5@DrawContro
; Line 120
	mov	DWORD PTR _color$[ebp], 13882323	; 00d3d3d3H
$LN5@DrawContro:
; Line 121
	mov	eax, DWORD PTR _color$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 122
	jmp	$LN11@DrawContro
$LN10@DrawContro:
; Line 127
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 130
	push	OFFSET _GUI_FontD32
	call	_GUI_SetFont
	add	esp, 4
; Line 133
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fchs
	fstp	DWORD PTR _temp$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fcomp	DWORD PTR __real@00000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN4@DrawContro
; Line 135
	fldz
	fstp	DWORD PTR _temp$[ebp]
$LN4@DrawContro:
; Line 136
	fld	DWORD PTR _temp$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15679
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 137
	push	100					; 00000064H
	push	0
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fstp	DWORD PTR _temp$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fcomp	DWORD PTR __real@00000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@DrawContro
; Line 140
	fldz
	fstp	DWORD PTR _temp$[ebp]
$LN3@DrawContro:
; Line 141
	fld	DWORD PTR _temp$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15681
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 142
	push	100					; 00000064H
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 145
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 146
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	fstp	DWORD PTR _temp$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fcomp	DWORD PTR __real@00000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN2@DrawContro
; Line 147
	fldz
	fstp	DWORD PTR _temp$[ebp]
$LN2@DrawContro:
; Line 148
	fld	DWORD PTR _temp$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15683
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 149
	push	5
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 151
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 152
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	fchs
	fstp	DWORD PTR _temp$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fcomp	DWORD PTR __real@00000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN1@DrawContro
; Line 153
	fldz
	fstp	DWORD PTR _temp$[ebp]
$LN1@DrawContro:
; Line 154
	fld	DWORD PTR _temp$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15685
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 155
	push	236					; 000000ecH
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 158
	push	OFFSET _GUI_Font20B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 159
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 160
	push	44					; 0000002cH
	push	430					; 000001aeH
	push	OFFSET $SG15686
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 161
	push	140					; 0000008cH
	push	430					; 000001aeH
	push	OFFSET $SG15687
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 162
	push	205					; 000000cdH
	push	430					; 000001aeH
	push	OFFSET $SG15688
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 163
	push	140					; 0000008cH
	push	0
	push	OFFSET $SG15689
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 166
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 167
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+44]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15690
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 168
	push	44					; 0000002cH
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 170
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+52]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15691
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 172
	push	205					; 000000cdH
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 174
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+56]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15692
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 176
	push	140					; 0000008cH
	push	60					; 0000003cH
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 178
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+48]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15693
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 179
	push	140					; 0000008cH
	push	385					; 00000181H
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 182
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 183
	push	OFFSET _GUI_FontD32
	call	_GUI_SetFont
	add	esp, 4
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+60]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15694
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 185
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	sub	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+28]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 187
	lea	eax, DWORD PTR _fOldFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 188
	mov	eax, DWORD PTR _OldColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 191
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmthreewayarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 200
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@DrawContro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@DrawContro:
	DD	2
	DD	$LN17@DrawContro
$LN17@DrawContro:
	DD	-68					; ffffffbcH
	DD	36					; 00000024H
	DD	$LN15@DrawContro
	DD	-88					; ffffffa8H
	DD	10					; 0000000aH
	DD	$LN16@DrawContro
$LN16@DrawContro:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN15@DrawContro:
	DB	102					; 00000066H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
?DrawControl@GMeter@@QAEXXZ ENDP			; GMeter::DrawControl
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?CreateBackground@GMeter@@AAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?CreateBackground@GMeter@@AAEXXZ PROC			; GMeter::CreateBackground, COMDAT
; _this$ = ecx
; Line 204
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 206
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+36]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 207
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+36]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 208
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?CreateBackground@GMeter@@AAEXXZ ENDP			; GMeter::CreateBackground
_TEXT	ENDS
PUBLIC	__real@4000000000000000
PUBLIC	?SetValue@GMeter@@QAEXMM@Z			; GMeter::SetValue
EXTRN	_GetValue:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetValue@GMeter@@QAEXMM@Z
_TEXT	SEGMENT
$T15837 = -280						; size = 8
$T15838 = -264						; size = 8
$T15839 = -248						; size = 8
$T15840 = -232						; size = 8
$T15841 = -216						; size = 8
_this$ = -8						; size = 4
_dXValue$ = 8						; size = 4
_dYValue$ = 12						; size = 4
?SetValue@GMeter@@QAEXMM@Z PROC				; GMeter::SetValue, COMDAT
; _this$ = ecx
; Line 211
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dXValue$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 213
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dYValue$[ebp]
	fstp	DWORD PTR [eax+8]
; Line 215
	push	3
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T15837[ebp], eax
	mov	DWORD PTR $T15837[ebp+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR $T15837[ebp]
	fstp	DWORD PTR [eax+44]
; Line 216
	push	6
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T15838[ebp], eax
	mov	DWORD PTR $T15838[ebp+4], edx
	fld	DWORD PTR $T15838[ebp]
	fchs
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+52]
; Line 217
	push	4
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T15839[ebp], eax
	mov	DWORD PTR $T15839[ebp+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR $T15839[ebp]
	fstp	DWORD PTR [eax+48]
; Line 218
	push	7
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T15840[ebp], eax
	mov	DWORD PTR $T15840[ebp+4], edx
	fld	DWORD PTR $T15840[ebp]
	fchs
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+56]
; Line 220
	push	80					; 00000050H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T15841[ebp], eax
	mov	DWORD PTR $T15841[ebp+4], edx
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR $T15841[ebp]
	fstp	DWORD PTR [eax+60]
; Line 223
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	fmul	QWORD PTR __real@4000000000000000
	mov	ecx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [ecx+8]
	mov	edx, DWORD PTR _this$[ebp]
	fidiv	DWORD PTR [edx]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+28]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+20], eax
; Line 224
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	fmul	QWORD PTR __real@4000000000000000
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+4]
	fchs
	fmulp	ST(1), ST(0)
	mov	edx, DWORD PTR _this$[ebp]
	fidiv	DWORD PTR [edx]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+32]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], eax
; Line 227
	mov	eax, DWORD PTR ?dotIndex@@3HA		; dotIndex
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR ?dotArray@@3PAUDOT@@A[eax*8], edx
; Line 228
	mov	eax, DWORD PTR ?dotIndex@@3HA		; dotIndex
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR ?dotArray@@3PAUDOT@@A[eax*8+4], edx
; Line 230
	mov	eax, DWORD PTR ?dotIndex@@3HA		; dotIndex
	add	eax, 1
	mov	DWORD PTR ?dotIndex@@3HA, eax		; dotIndex
	cmp	DWORD PTR ?dotIndex@@3HA, 70		; dotIndex, 00000046H
	jl	SHORT $LN1@SetValue
; Line 231
	mov	DWORD PTR ?dotIndex@@3HA, 0		; dotIndex
$LN1@SetValue:
; Line 232
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?SetValue@GMeter@@QAEXMM@Z ENDP				; GMeter::SetValue
_TEXT	ENDS
END
