; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_Banding.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG9194	DB	'GUI_MEMDEV_Draw() Not enough memory ...', 00H
_DATA	ENDS
PUBLIC	_GUI_MEMDEV_Draw
EXTRN	_GUI_MEMDEV_Delete:PROC
EXTRN	_GUI_MEMDEV_CopyToLCD:PROC
EXTRN	_GUI_MEMDEV_Clear:PROC
EXTRN	_GUI_MEMDEV_SetOrg:PROC
EXTRN	_GUI_MEMDEV_ReduceYSize:PROC
EXTRN	_GUI_MEMDEV_Select:PROC
EXTRN	_GUI_MEMDEV_GetYSize:PROC
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_MEMDEV_CreateEx:PROC
EXTRN	_LCD_GetVYSizeEx:PROC
EXTRN	_LCD_GetVXSizeEx:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_GetOrg:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_banding.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV_Draw
_TEXT	SEGMENT
tv76 = -328						; size = 4
tv70 = -328						; size = 4
_RemLines$9198 = -128					; size = 4
_hMD$ = -116						; size = 4
_yOrg$ = -104						; size = 4
_xOrg$ = -92						; size = 4
_i$ = -80						; size = 4
_ysize$ = -68						; size = 4
_xsize$ = -56						; size = 4
_y1$ = -44						; size = 4
_x1$ = -32						; size = 4
_y0$ = -20						; size = 4
_x0$ = -8						; size = 4
_pRect$ = 8						; size = 4
_pfDraw$ = 12						; size = 4
_pData$ = 16						; size = 4
_NumLines$ = 20						; size = 4
_Flags$ = 24						; size = 4
_GUI_MEMDEV_Draw PROC					; COMDAT
; Line 63
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 67
	cmp	DWORD PTR _pRect$[ebp], 0
	je	$LN11@GUI_MEMDEV
; Line 68
	lea	eax, DWORD PTR _yOrg$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xOrg$[ebp]
	push	ecx
	call	_GUI_GetOrg
	add	esp, 8
; Line 69
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	test	ecx, ecx
	jge	SHORT $LN14@GUI_MEMDEV
	mov	DWORD PTR tv70[ebp], 0
	jmp	SHORT $LN15@GUI_MEMDEV
$LN14@GUI_MEMDEV:
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx]
	mov	DWORD PTR tv70[ebp], eax
$LN15@GUI_MEMDEV:
	mov	ecx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	test	ecx, ecx
	jge	SHORT $LN16@GUI_MEMDEV
	mov	DWORD PTR tv76[ebp], 0
	jmp	SHORT $LN17@GUI_MEMDEV
$LN16@GUI_MEMDEV:
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+2]
	mov	DWORD PTR tv76[ebp], eax
$LN17@GUI_MEMDEV:
	mov	ecx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _y0$[ebp], ecx
; Line 71
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_LCD_GetVXSizeEx
	add	esp, 4
	mov	ecx, DWORD PTR _xOrg$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	push	ecx
	call	__Min
	add	esp, 8
	mov	DWORD PTR _x1$[ebp], eax
; Line 72
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_LCD_GetVYSizeEx
	add	esp, 4
	mov	ecx, DWORD PTR _yOrg$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	push	ecx
	call	__Min
	add	esp, 8
	mov	DWORD PTR _y1$[ebp], eax
; Line 73
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	add	eax, 1
	mov	DWORD PTR _xsize$[ebp], eax
; Line 74
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	mov	DWORD PTR _ysize$[ebp], eax
; Line 75
	jmp	SHORT $LN10@GUI_MEMDEV
$LN11@GUI_MEMDEV:
; Line 76
	mov	DWORD PTR _x0$[ebp], 0
; Line 77
	mov	DWORD PTR _y0$[ebp], 0
; Line 78
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_LCD_GetVXSizeEx
	add	esp, 4
	mov	DWORD PTR _xsize$[ebp], eax
; Line 79
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_LCD_GetVYSizeEx
	add	esp, 4
	mov	DWORD PTR _ysize$[ebp], eax
$LN10@GUI_MEMDEV:
; Line 81
	cmp	DWORD PTR _NumLines$[ebp], 0
	jne	SHORT $LN9@GUI_MEMDEV
; Line 82
	mov	eax, DWORD PTR _ysize$[ebp]
	neg	eax
	mov	DWORD PTR _NumLines$[ebp], eax
$LN9@GUI_MEMDEV:
; Line 84
	cmp	DWORD PTR _xsize$[ebp], 0
	jle	SHORT $LN7@GUI_MEMDEV
	cmp	DWORD PTR _ysize$[ebp], 0
	jg	SHORT $LN8@GUI_MEMDEV
$LN7@GUI_MEMDEV:
; Line 85
	xor	eax, eax
	jmp	$LN12@GUI_MEMDEV
$LN8@GUI_MEMDEV:
; Line 90
	mov	eax, DWORD PTR _Flags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumLines$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xsize$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GUI_MEMDEV_CreateEx
	add	esp, 20					; 00000014H
	mov	DWORD PTR _hMD$[ebp], eax
; Line 91
	cmp	DWORD PTR _hMD$[ebp], 0
	jne	SHORT $LN6@GUI_MEMDEV
; Line 92
	push	OFFSET $SG9194
	call	_GUI_ErrorOut
	add	esp, 4
; Line 93
	mov	esi, esp
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	DWORD PTR _pfDraw$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 94
	mov	eax, 1
	jmp	$LN12@GUI_MEMDEV
$LN6@GUI_MEMDEV:
; Line 96
	mov	eax, DWORD PTR _hMD$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetYSize
	add	esp, 4
	mov	DWORD PTR _NumLines$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _hMD$[ebp]
	push	eax
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 101
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@GUI_MEMDEV
$LN4@GUI_MEMDEV:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _NumLines$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN5@GUI_MEMDEV:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ysize$[ebp]
	jge	SHORT $LN3@GUI_MEMDEV
; Line 102
	mov	eax, DWORD PTR _ysize$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _RemLines$9198[ebp], eax
; Line 103
	mov	eax, DWORD PTR _RemLines$9198[ebp]
	cmp	eax, DWORD PTR _NumLines$[ebp]
	jge	SHORT $LN2@GUI_MEMDEV
; Line 104
	mov	eax, DWORD PTR _RemLines$9198[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMD$[ebp]
	push	ecx
	call	_GUI_MEMDEV_ReduceYSize
	add	esp, 8
$LN2@GUI_MEMDEV:
; Line 106
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN1@GUI_MEMDEV
; Line 107
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMD$[ebp]
	push	edx
	call	_GUI_MEMDEV_SetOrg
	add	esp, 12					; 0000000cH
; Line 108
	mov	eax, DWORD PTR _hMD$[ebp]
	push	eax
	call	_GUI_MEMDEV_Clear
	add	esp, 4
$LN1@GUI_MEMDEV:
; Line 110
	mov	esi, esp
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	DWORD PTR _pfDraw$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 111
	mov	eax, DWORD PTR _hMD$[ebp]
	push	eax
	call	_GUI_MEMDEV_CopyToLCD
	add	esp, 4
; Line 112
	jmp	SHORT $LN4@GUI_MEMDEV
$LN3@GUI_MEMDEV:
; Line 113
	mov	eax, DWORD PTR _hMD$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 114
	push	0
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 115
	xor	eax, eax
$LN12@GUI_MEMDEV:
; Line 116
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@GUI_MEMDEV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN21@GUI_MEMDEV:
	DD	2
	DD	$LN20@GUI_MEMDEV
$LN20@GUI_MEMDEV:
	DD	-92					; ffffffa4H
	DD	4
	DD	$LN18@GUI_MEMDEV
	DD	-104					; ffffff98H
	DD	4
	DD	$LN19@GUI_MEMDEV
$LN19@GUI_MEMDEV:
	DB	121					; 00000079H
	DB	79					; 0000004fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
$LN18@GUI_MEMDEV:
	DB	120					; 00000078H
	DB	79					; 0000004fH
	DB	114					; 00000072H
	DB	103					; 00000067H
	DB	0
_GUI_MEMDEV_Draw ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Min
_TEXT	SEGMENT
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
__Min	PROC						; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _v0$[ebp]
	cmp	eax, DWORD PTR _v1$[ebp]
	jg	SHORT $LN1@Min
; Line 43
	mov	eax, DWORD PTR _v0$[ebp]
	jmp	SHORT $LN2@Min
$LN1@Min:
; Line 45
	mov	eax, DWORD PTR _v1$[ebp]
$LN2@Min:
; Line 46
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Min	ENDP
_TEXT	ENDS
END
