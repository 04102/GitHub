; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Antialias\GUIAA_Circle.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GL_FillCircleAA_HiRes
EXTRN	_GUI_AA_Exit:PROC
EXTRN	_GUI_AA_Init_HiRes:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\antialias\guiaa_circle.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_FillCircleAA_HiRes
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GL_FillCircleAA_HiRes PROC				; COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 97
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	_GUI_AA_Init_HiRes
	add	esp, 8
; Line 99
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_FillCircle
	add	esp, 12					; 0000000cH
; Line 101
	call	_GUI_AA_Exit
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_FillCircleAA_HiRes ENDP
_TEXT	ENDS
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FillCircle
_TEXT	SEGMENT
_yMax$ = -68						; size = 4
_yMin$ = -56						; size = 4
_sqmax$ = -44						; size = 4
_y$ = -32						; size = 4
_x$ = -20						; size = 4
_i$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_FillCircle PROC					; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	ecx, DWORD PTR _r$[ebp]
	imul	ecx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR _r$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	DWORD PTR _sqmax$[ebp], ecx
; Line 50
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _yMin$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _yMax$[ebp], eax
; Line 53
	cmp	DWORD PTR _GUI_Context+20, 0
	je	SHORT $LN15@FillCircle
; Line 54
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jle	SHORT $LN14@FillCircle
; Line 55
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN14@FillCircle:
; Line 57
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jge	SHORT $LN15@FillCircle
; Line 58
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN15@FillCircle:
; Line 62
	mov	DWORD PTR _i$[ebp], 1
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _x$[ebp], eax
	jmp	SHORT $LN12@FillCircle
$LN11@FillCircle:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@FillCircle:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _r$[ebp]
	jge	SHORT $LN10@FillCircle
; Line 63
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMin$[ebp]
	jl	SHORT $LN9@FillCircle
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMax$[ebp]
	jg	SHORT $LN9@FillCircle
$LN8@FillCircle:
; Line 66
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	imul	ecx, DWORD PTR _x$[ebp]
	add	eax, ecx
	cmp	eax, DWORD PTR _sqmax$[ebp]
	jle	SHORT $LN7@FillCircle
; Line 67
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax
; Line 68
	jmp	SHORT $LN8@FillCircle
$LN7@FillCircle:
; Line 69
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	sub	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@FillCircle:
; Line 71
	jmp	SHORT $LN11@FillCircle
$LN10@FillCircle:
; Line 73
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _x$[ebp], eax
	jmp	SHORT $LN6@FillCircle
$LN5@FillCircle:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@FillCircle:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _r$[ebp]
	jge	SHORT $LN16@FillCircle
; Line 74
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 75
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMin$[ebp]
	jl	SHORT $LN3@FillCircle
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMax$[ebp]
	jg	SHORT $LN3@FillCircle
$LN2@FillCircle:
; Line 77
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	imul	ecx, DWORD PTR _x$[ebp]
	add	eax, ecx
	cmp	eax, DWORD PTR _sqmax$[ebp]
	jle	SHORT $LN1@FillCircle
; Line 78
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax
; Line 79
	jmp	SHORT $LN2@FillCircle
$LN1@FillCircle:
; Line 80
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	sub	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@FillCircle:
; Line 82
	jmp	SHORT $LN5@FillCircle
$LN16@FillCircle:
; Line 83
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FillCircle ENDP
_TEXT	ENDS
PUBLIC	_GUI_AA_FillCircle
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_AA_HiRes2Pixel:PROC
EXTRN	_WM__GetOrgY_AA:PROC
EXTRN	_WM__GetOrgX_AA:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_AA_FillCircle
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GUI_AA_FillCircle PROC					; COMDAT
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 114
	call	_WM__GetOrgX_AA
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
	call	_WM__GetOrgY_AA
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 116
	movzx	eax, BYTE PTR _GUI_Context+93
	test	eax, eax
	jne	SHORT $LN5@GUI_AA_Fil
; Line 117
	movzx	eax, BYTE PTR _GUI_Context+92
	imul	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
; Line 118
	movzx	eax, BYTE PTR _GUI_Context+92
	imul	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 119
	movzx	eax, BYTE PTR _GUI_Context+92
	imul	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], eax
$LN5@GUI_AA_Fil:
; Line 122
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_GUI_AA_HiRes2Pixel
	add	esp, 4
	mov	WORD PTR _Rect$[ebp], ax
; Line 123
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_GUI_AA_HiRes2Pixel
	add	esp, 4
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 124
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_GUI_AA_HiRes2Pixel
	add	esp, 4
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 125
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_GUI_AA_HiRes2Pixel
	add	esp, 4
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 126
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@GUI_AA_Fil
$LN3@GUI_AA_Fil:
; Line 128
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_FillCircleAA_HiRes
	add	esp, 12					; 0000000cH
; Line 130
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_AA_Fil
$LN6@GUI_AA_Fil:
; Line 133
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GUI_AA_Fil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@GUI_AA_Fil:
	DD	1
	DD	$LN9@GUI_AA_Fil
$LN9@GUI_AA_Fil:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN8@GUI_AA_Fil
$LN8@GUI_AA_Fil:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_AA_FillCircle ENDP
_TEXT	ENDS
END
