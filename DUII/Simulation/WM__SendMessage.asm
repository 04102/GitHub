; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM__SendMessage.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG9446	DB	'Max. message nesting exceeded, Message skipped.', 00H
_DATA	ENDS
PUBLIC	_WM__SendMessage
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_WM_DefaultProc:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
?_EntranceCnt@?1??WM__SendMessage@@9@9 DD 01H DUP (?)	; `WM__SendMessage'::`2'::_EntranceCnt
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm__sendmessage.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM__SendMessage
_TEXT	SEGMENT
_pWin$ = -8						; size = 4
_hWin$ = 8						; size = 4
_pMsg$ = 12						; size = 4
_WM__SendMessage PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 52
	cmp	DWORD PTR ?_EntranceCnt@?1??WM__SendMessage@@9@9, 20 ; 00000014H
	jge	SHORT $LN4@WM__SendMe
; Line 53
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 55
	mov	eax, DWORD PTR _pWin$[ebp]
	cmp	DWORD PTR [eax+16], 0
	je	SHORT $LN3@WM__SendMe
; Line 56
	mov	eax, DWORD PTR ?_EntranceCnt@?1??WM__SendMessage@@9@9
	add	eax, 1
	mov	DWORD PTR ?_EntranceCnt@?1??WM__SendMessage@@9@9, eax
; Line 57
	mov	esi, esp
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWin$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 58
	mov	eax, DWORD PTR ?_EntranceCnt@?1??WM__SendMessage@@9@9
	sub	eax, 1
	mov	DWORD PTR ?_EntranceCnt@?1??WM__SendMessage@@9@9, eax
; Line 59
	jmp	SHORT $LN2@WM__SendMe
$LN3@WM__SendMe:
; Line 60
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN2@WM__SendMe:
; Line 64
	jmp	SHORT $LN5@WM__SendMe
$LN4@WM__SendMe:
; Line 65
	push	OFFSET $SG9446
	call	_GUI_ErrorOut
	add	esp, 4
$LN5@WM__SendMe:
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__SendMessage ENDP
_TEXT	ENDS
END
