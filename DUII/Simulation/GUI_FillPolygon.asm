; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_FillPolygon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GL_FillPolygon
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_fillpolygon.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_FillPolygon
_TEXT	SEGMENT
tv94 = -304						; size = 4
_xIntersect$ = -104					; size = 4
_yPrev$ = -92						; size = 4
_yMax$ = -80						; size = 4
_yMin$ = -68						; size = 4
_y1$ = -56						; size = 4
_y0$ = -44						; size = 4
_i1$ = -32						; size = 4
_y$ = -20						; size = 4
_i$ = -8						; size = 4
_paPoint$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_xOff$ = 16						; size = 4
_yOff$ = 20						; size = 4
_GL_FillPolygon PROC					; COMDAT
; Line 227
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 230
	mov	DWORD PTR _yMin$[ebp], 4095		; 00000fffH
; Line 231
	mov	DWORD PTR _yMax$[ebp], -4095		; fffff001H
; Line 235
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN24@GL_FillPol
$LN23@GL_FillPol:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN24@GL_FillPol:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	SHORT $LN22@GL_FillPol
; Line 236
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4+2]
	mov	DWORD PTR _y$[ebp], edx
; Line 237
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMin$[ebp]
	jge	SHORT $LN21@GL_FillPol
; Line 238
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yMin$[ebp], eax
$LN21@GL_FillPol:
; Line 240
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMax$[ebp]
	jle	SHORT $LN20@GL_FillPol
; Line 241
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yMax$[ebp], eax
$LN20@GL_FillPol:
; Line 243
	jmp	SHORT $LN23@GL_FillPol
$LN22@GL_FillPol:
; Line 247
	cmp	DWORD PTR _GUI_Context+20, 0
	je	SHORT $LN19@GL_FillPol
; Line 248
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _yOff$[ebp]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jle	SHORT $LN18@GL_FillPol
; Line 249
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN18@GL_FillPol:
; Line 251
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _yOff$[ebp]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jge	SHORT $LN19@GL_FillPol
; Line 252
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN19@GL_FillPol:
; Line 258
	mov	eax, DWORD PTR _yMin$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN16@GL_FillPol
$LN15@GL_FillPol:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN16@GL_FillPol:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMax$[ebp]
	jg	$LN25@GL_FillPol
; Line 259
	call	__Init
; Line 263
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN13@GL_FillPol
$LN12@GL_FillPol:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN13@GL_FillPol:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	$LN11@GL_FillPol
; Line 264
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN27@GL_FillPol
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR tv94[ebp], ecx
	jmp	SHORT $LN28@GL_FillPol
$LN27@GL_FillPol:
	mov	DWORD PTR tv94[ebp], 0
$LN28@GL_FillPol:
	mov	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR _i1$[ebp], edx
; Line 265
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4+2]
	mov	DWORD PTR _y0$[ebp], edx
; Line 266
	mov	eax, DWORD PTR _i1$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4+2]
	mov	DWORD PTR _y1$[ebp], edx
; Line 270
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jne	$LN10@GL_FillPol
; Line 271
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jne	SHORT $LN9@GL_FillPol
; Line 272
	mov	eax, DWORD PTR _i1$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4]
	add	edx, DWORD PTR _xOff$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _paPoint$[ebp]
	movsx	eax, WORD PTR [edx+ecx*4]
	add	eax, DWORD PTR _xOff$[ebp]
	push	eax
	call	__DrawHLine
	add	esp, 12					; 0000000cH
; Line 273
	jmp	SHORT $LN8@GL_FillPol
$LN9@GL_FillPol:
; Line 274
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumPoints$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _paPoint$[ebp]
	push	eax
	call	__GetPrevPointDiffy
	add	esp, 16					; 00000010H
	mov	DWORD PTR _yPrev$[ebp], eax
; Line 275
	mov	eax, DWORD PTR _yPrev$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	je	SHORT $LN8@GL_FillPol
; Line 276
	mov	eax, DWORD PTR _yOff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	sub	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _yPrev$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _paPoint$[ebp]
	movsx	ecx, WORD PTR [eax+edx*4]
	push	ecx
	call	__AddPoint
	add	esp, 24					; 00000018H
$LN8@GL_FillPol:
; Line 278
	jmp	SHORT $LN6@GL_FillPol
$LN10@GL_FillPol:
; Line 279
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	je	SHORT $LN6@GL_FillPol
; Line 280
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jl	SHORT $LN2@GL_FillPol
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jle	SHORT $LN3@GL_FillPol
$LN2@GL_FillPol:
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jl	SHORT $LN6@GL_FillPol
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jg	SHORT $LN6@GL_FillPol
$LN3@GL_FillPol:
; Line 281
	mov	eax, DWORD PTR _i1$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	lea	eax, DWORD PTR _xIntersect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	call	__CheckYInterSect
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN6@GL_FillPol
; Line 282
	mov	eax, DWORD PTR _xIntersect$[ebp]
	push	eax
	call	__Add
	add	esp, 4
$LN6@GL_FillPol:
; Line 286
	jmp	$LN12@GL_FillPol
$LN11@GL_FillPol:
; Line 287
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	call	__Flush
	add	esp, 8
; Line 288
	jmp	$LN15@GL_FillPol
$LN25@GL_FillPol:
; Line 289
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN31@GL_FillPol
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN31@GL_FillPol:
	DD	1
	DD	$LN30@GL_FillPol
$LN30@GL_FillPol:
	DD	-104					; ffffff98H
	DD	4
	DD	$LN29@GL_FillPol
$LN29@GL_FillPol:
	DB	120					; 00000078H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GL_FillPolygon ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __DrawHLine
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y$ = 12						; size = 4
_x1$ = 16						; size = 4
__DrawHLine PROC					; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 58
	mov	eax, DWORD PTR _x0$[ebp]
	cmp	eax, DWORD PTR _x1$[ebp]
	jge	SHORT $LN2@DrawHLine
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 60
	jmp	SHORT $LN3@DrawHLine
$LN2@DrawHLine:
; Line 61
	mov	esi, esp
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@DrawHLine:
; Line 63
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawHLine ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CheckYInterSect
_TEXT	SEGMENT
_Mul$ = -56						; size = 4
_y1$ = -44						; size = 4
_x1$ = -32						; size = 4
_y0$ = -20						; size = 4
_x0$ = -8						; size = 4
_y$ = 8							; size = 4
_px$ = 12						; size = 4
_paPoint0$ = 16						; size = 4
_paPoint1$ = 20						; size = 4
__CheckYInterSect PROC					; COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	mov	eax, DWORD PTR _paPoint0$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _paPoint1$[ebp]
	movsx	eax, WORD PTR [edx+2]
	cmp	ecx, eax
	jg	SHORT $LN8@CheckYInte
; Line 84
	mov	eax, DWORD PTR _paPoint0$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _y0$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jle	SHORT $LN7@CheckYInte
; Line 86
	xor	eax, eax
	jmp	$LN9@CheckYInte
$LN7@CheckYInte:
; Line 88
	mov	eax, DWORD PTR _paPoint1$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _y1$[ebp], ecx
; Line 89
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jge	SHORT $LN6@CheckYInte
; Line 90
	xor	eax, eax
	jmp	$LN9@CheckYInte
$LN6@CheckYInte:
; Line 92
	mov	eax, DWORD PTR _paPoint0$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 93
	mov	eax, DWORD PTR _paPoint1$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 94
	jmp	SHORT $LN5@CheckYInte
$LN8@CheckYInte:
; Line 95
	mov	eax, DWORD PTR _paPoint1$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _y0$[ebp], ecx
; Line 96
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jle	SHORT $LN4@CheckYInte
; Line 97
	xor	eax, eax
	jmp	$LN9@CheckYInte
$LN4@CheckYInte:
; Line 99
	mov	eax, DWORD PTR _paPoint0$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _y1$[ebp], ecx
; Line 100
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y$[ebp]
	jge	SHORT $LN3@CheckYInte
; Line 101
	xor	eax, eax
	jmp	SHORT $LN9@CheckYInte
$LN3@CheckYInte:
; Line 103
	mov	eax, DWORD PTR _paPoint1$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _paPoint0$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x1$[ebp], ecx
$LN5@CheckYInte:
; Line 110
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, DWORD PTR _y0$[ebp]
	imul	eax, ecx
	mov	DWORD PTR _Mul$[ebp], eax
; Line 111
	cmp	DWORD PTR _Mul$[ebp], 0
	jle	SHORT $LN2@CheckYInte
; Line 112
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	sar	eax, 1
	add	eax, DWORD PTR _Mul$[ebp]
	mov	DWORD PTR _Mul$[ebp], eax
; Line 113
	jmp	SHORT $LN1@CheckYInte
$LN2@CheckYInte:
; Line 114
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	sar	eax, 1
	sub	eax, 1
	mov	ecx, DWORD PTR _Mul$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _Mul$[ebp], ecx
$LN1@CheckYInte:
; Line 116
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	eax, DWORD PTR _Mul$[ebp]
	cdq
	idiv	ecx
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
; Line 118
	mov	eax, DWORD PTR _px$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 119
	mov	eax, 1
$LN9@CheckYInte:
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CheckYInterSect ENDP
_TEXT	ENDS
_BSS	SEGMENT
__aX	DW	0cH DUP (?)
_GL_FP_Cnt DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT __Add
_TEXT	SEGMENT
_i$8378 = -8						; size = 4
_x$ = 8							; size = 4
__Add	PROC						; COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 129
	cmp	DWORD PTR _GL_FP_Cnt, 12		; 0000000cH
	jge	SHORT $LN6@Add
; Line 134
	mov	eax, DWORD PTR _GL_FP_Cnt
	mov	DWORD PTR _i$8378[ebp], eax
	jmp	SHORT $LN4@Add
$LN3@Add:
	mov	eax, DWORD PTR _i$8378[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$8378[ebp], eax
$LN4@Add:
	cmp	DWORD PTR _i$8378[ebp], 0
	je	SHORT $LN2@Add
; Line 135
	mov	eax, DWORD PTR _i$8378[ebp]
	movsx	ecx, WORD PTR __aX[eax*2-2]
	cmp	ecx, DWORD PTR _x$[ebp]
	jge	SHORT $LN1@Add
; Line 136
	jmp	SHORT $LN2@Add
$LN1@Add:
; Line 138
	mov	eax, DWORD PTR _i$8378[ebp]
	mov	ecx, DWORD PTR _i$8378[ebp]
	mov	dx, WORD PTR __aX[ecx*2-2]
	mov	WORD PTR __aX[eax*2], dx
; Line 139
	jmp	SHORT $LN3@Add
$LN2@Add:
; Line 143
	mov	eax, DWORD PTR _i$8378[ebp]
	mov	cx, WORD PTR _x$[ebp]
	mov	WORD PTR __aX[eax*2], cx
; Line 144
	mov	eax, DWORD PTR _GL_FP_Cnt
	add	eax, 1
	mov	DWORD PTR _GL_FP_Cnt, eax
$LN6@Add:
; Line 146
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Add	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Init
_TEXT	SEGMENT
__Init	PROC						; COMDAT
; Line 154
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 155
	mov	DWORD PTR _GL_FP_Cnt, 0
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Init	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Flush
_TEXT	SEGMENT
_On$ = -41						; size = 1
_xNew$ = -32						; size = 4
_x$ = -20						; size = 4
_i$ = -8						; size = 4
_x0$ = 8						; size = 4
_y$ = 12						; size = 4
__Flush	PROC						; COMDAT
; Line 164
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 168
	mov	DWORD PTR _x$[ebp], 0
; Line 169
	mov	BYTE PTR _On$[ebp], 0
; Line 170
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@Flush
$LN3@Flush:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@Flush:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _GL_FP_Cnt
	jge	SHORT $LN5@Flush
; Line 171
	mov	eax, DWORD PTR _i$[ebp]
	movsx	ecx, WORD PTR __aX[eax*2]
	mov	DWORD PTR _xNew$[ebp], ecx
; Line 172
	movzx	eax, BYTE PTR _On$[ebp]
	test	eax, eax
	je	SHORT $LN1@Flush
; Line 173
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _xNew$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Flush:
; Line 175
	movzx	eax, BYTE PTR _On$[ebp]
	xor	eax, 1
	mov	BYTE PTR _On$[ebp], al
; Line 176
	mov	eax, DWORD PTR _xNew$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 177
	jmp	SHORT $LN3@Flush
$LN5@Flush:
; Line 178
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Flush	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __AddPoint
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_y0$ = 16						; size = 4
_y1$ = 20						; size = 4
_xOff$ = 24						; size = 4
_yOff$ = 28						; size = 4
__AddPoint PROC						; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 189
	mov	eax, DWORD PTR _y0$[ebp]
	xor	eax, DWORD PTR _y1$[ebp]
	jl	SHORT $LN2@AddPoint
; Line 190
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _xOff$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 191
	mov	esi, esp
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _yOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 192
	jmp	SHORT $LN3@AddPoint
$LN2@AddPoint:
; Line 193
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	call	__Add
	add	esp, 4
$LN3@AddPoint:
; Line 195
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__AddPoint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetPrevPointDiffy
_TEXT	SEGMENT
tv70 = -220						; size = 4
_y1$ = -20						; size = 4
_j$ = -8						; size = 4
_paPoint$ = 8						; size = 4
_i$ = 12						; size = 4
_NumPoints$ = 16					; size = 4
_y0$ = 20						; size = 4
__GetPrevPointDiffy PROC				; COMDAT
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 205
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN4@GetPrevPoi
$LN3@GetPrevPoi:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN4@GetPrevPoi:
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _j$[ebp], eax
	jge	SHORT $LN2@GetPrevPoi
; Line 206
	cmp	DWORD PTR _i$[ebp], 0
	je	SHORT $LN7@GetPrevPoi
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN8@GetPrevPoi
$LN7@GetPrevPoi:
	mov	ecx, DWORD PTR _NumPoints$[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv70[ebp], ecx
$LN8@GetPrevPoi:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _i$[ebp], edx
; Line 207
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4+2]
	mov	DWORD PTR _y1$[ebp], edx
; Line 208
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _y0$[ebp]
	je	SHORT $LN1@GetPrevPoi
; Line 209
	mov	eax, DWORD PTR _y1$[ebp]
	jmp	SHORT $LN5@GetPrevPoi
$LN1@GetPrevPoi:
; Line 211
	jmp	SHORT $LN3@GetPrevPoi
$LN2@GetPrevPoi:
; Line 212
	mov	eax, DWORD PTR _y0$[ebp]
$LN5@GetPrevPoi:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevPointDiffy ENDP
_TEXT	ENDS
PUBLIC	_GUI_FillPolygon
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_FillPolygon
_TEXT	SEGMENT
_pfFillPolygon$ = -20					; size = 4
_pDevice$ = -8						; size = 4
_pPoints$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_FillPolygon PROC					; COMDAT
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 301
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 302
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@GUI_FillPo
$LN5@GUI_FillPo:
; Line 304
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 305
	mov	esi, esp
	push	17					; 00000011H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pfFillPolygon$[ebp], eax
; Line 306
	cmp	DWORD PTR _pfFillPolygon$[ebp], 0
	je	SHORT $LN2@GUI_FillPo
; Line 307
	mov	esi, esp
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pfFillPolygon$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 308
	jmp	SHORT $LN4@GUI_FillPo
$LN2@GUI_FillPo:
; Line 309
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	push	eax
	call	_GL_FillPolygon
	add	esp, 16					; 00000010H
$LN4@GUI_FillPo:
; Line 312
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN5@GUI_FillPo
$LN7@GUI_FillPo:
; Line 315
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_FillPo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@GUI_FillPo:
	DD	1
	DD	$LN10@GUI_FillPo
$LN10@GUI_FillPo:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@GUI_FillPo
$LN9@GUI_FillPo:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_GUI_FillPolygon ENDP
_TEXT	ENDS
END
