; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_SIM.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_SetScreenSize
EXTRN	_GUI_SetScreenSizeY:PROC
EXTRN	_GUI_SetScreenSizeX:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_sim.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetScreenSize
_TEXT	SEGMENT
_xSize$ = 8						; size = 4
_ySize$ = 12						; size = 4
_WM_SetScreenSize PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	mov	eax, DWORD PTR _xSize$[ebp]
	push	eax
	call	_GUI_SetScreenSizeX
	add	esp, 4
; Line 51
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	call	_GUI_SetScreenSizeY
	add	esp, 4
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetScreenSize ENDP
_TEXT	ENDS
PUBLIC	_WM_PollSimMsg
EXTRN	_WM_BroadcastMessage:PROC
EXTRN	_GUI_GetScreenSizeY:PROC
EXTRN	_GUI_GetScreenSizeX:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
_BSS	SEGMENT
__OldSizeY DD	01H DUP (?)
__OldSizeX DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _WM_PollSimMsg
_TEXT	SEGMENT
_Msg$9445 = -56						; size = 16
_r$ = -32						; size = 4
_ySize$ = -20						; size = 4
_xSize$ = -8						; size = 4
_WM_PollSimMsg PROC					; COMDAT
; Line 59
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 60
	mov	DWORD PTR _r$[ebp], 0
; Line 62
	call	_GUI_GetScreenSizeX
	mov	DWORD PTR _xSize$[ebp], eax
; Line 63
	call	_GUI_GetScreenSizeY
	mov	DWORD PTR _ySize$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _xSize$[ebp]
	cmp	eax, DWORD PTR __OldSizeX
	jne	SHORT $LN1@WM_PollSim
	mov	eax, DWORD PTR _ySize$[ebp]
	cmp	eax, DWORD PTR __OldSizeY
	je	SHORT $LN2@WM_PollSim
$LN1@WM_PollSim:
; Line 66
	mov	DWORD PTR _Msg$9445[ebp], 45		; 0000002dH
; Line 67
	lea	eax, DWORD PTR _Msg$9445[ebp]
	push	eax
	call	_WM_BroadcastMessage
	add	esp, 4
; Line 68
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR __OldSizeX, eax
; Line 69
	mov	eax, DWORD PTR _ySize$[ebp]
	mov	DWORD PTR __OldSizeY, eax
; Line 70
	mov	DWORD PTR _r$[ebp], 1
$LN2@WM_PollSim:
; Line 73
	mov	eax, DWORD PTR _r$[ebp]
; Line 74
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@WM_PollSim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@WM_PollSim:
	DD	1
	DD	$LN6@WM_PollSim
$LN6@WM_PollSim:
	DD	-56					; ffffffc8H
	DD	16					; 00000010H
	DD	$LN5@WM_PollSim
$LN5@WM_PollSim:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_WM_PollSimMsg ENDP
_TEXT	ENDS
END
