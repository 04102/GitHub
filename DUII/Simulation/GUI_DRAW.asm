; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\GUI_DRAW.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DRAW__Draw
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\gui_draw.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DRAW__Draw
_TEXT	SEGMENT
_pfDraw$ = -20						; size = 4
_pDrawObj$ = -8						; size = 4
_hDrawObj$ = 8						; size = 4
_hWin$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_GUI_DRAW__Draw PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	cmp	DWORD PTR _hDrawObj$[ebp], 0
	je	SHORT $LN2@GUI_DRAW__
; Line 44
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDrawObj$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _pDrawObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pfDraw$[ebp], edx
; Line 46
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDrawObj$[ebp], 0
; Line 47
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hWin$[ebp]
	push	edx
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	DWORD PTR _pfDraw$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@GUI_DRAW__:
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DRAW__Draw ENDP
_TEXT	ENDS
PUBLIC	_GUI_DRAW__GetXSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DRAW__GetXSize
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pfGetXSize$ = -20					; size = 4
_pDrawObj$ = -8						; size = 4
_hDrawObj$ = 8						; size = 4
_GUI_DRAW__GetXSize PROC				; COMDAT
; Line 55
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 58
	mov	DWORD PTR _r$[ebp], 0
; Line 60
	cmp	DWORD PTR _hDrawObj$[ebp], 0
	je	SHORT $LN1@GUI_DRAW__@2
; Line 61
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDrawObj$[ebp], eax
; Line 62
	mov	eax, DWORD PTR _pDrawObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR _pfGetXSize$[ebp], edx
; Line 63
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDrawObj$[ebp], 0
; Line 64
	mov	esi, esp
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	DWORD PTR _pfGetXSize$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
$LN1@GUI_DRAW__@2:
; Line 66
	mov	eax, DWORD PTR _r$[ebp]
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DRAW__GetXSize ENDP
_TEXT	ENDS
PUBLIC	_GUI_DRAW__GetYSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DRAW__GetYSize
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pfGetYSize$ = -20					; size = 4
_pDrawObj$ = -8						; size = 4
_hDrawObj$ = 8						; size = 4
_GUI_DRAW__GetYSize PROC				; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	mov	DWORD PTR _r$[ebp], 0
; Line 78
	cmp	DWORD PTR _hDrawObj$[ebp], 0
	je	SHORT $LN1@GUI_DRAW__@3
; Line 79
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDrawObj$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _pDrawObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR _pfGetYSize$[ebp], edx
; Line 81
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDrawObj$[ebp], 0
; Line 82
	mov	esi, esp
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	DWORD PTR _pfGetYSize$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$[ebp], eax
$LN1@GUI_DRAW__@3:
; Line 84
	mov	eax, DWORD PTR _r$[ebp]
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DRAW__GetYSize ENDP
_TEXT	ENDS
END
