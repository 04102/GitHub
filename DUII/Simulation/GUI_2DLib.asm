; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_2DLib.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_MoveRel
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_2dlib.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MoveRel
_TEXT	SEGMENT
_dx$ = 8						; size = 4
_dy$ = 12						; size = 4
_GUI_MoveRel PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	movsx	eax, WORD PTR _GUI_Context+38
	add	eax, DWORD PTR _dx$[ebp]
	mov	WORD PTR _GUI_Context+38, ax
; Line 41
	movsx	eax, WORD PTR _GUI_Context+40
	add	eax, DWORD PTR _dy$[ebp]
	mov	WORD PTR _GUI_Context+40, ax
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MoveRel ENDP
_TEXT	ENDS
PUBLIC	_GL_MoveTo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_MoveTo
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GL_MoveTo PROC						; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _GUI_Context+38, ax
; Line 51
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _GUI_Context+40, ax
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_MoveTo ENDP
_TEXT	ENDS
PUBLIC	_GUI_MoveTo
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MoveTo
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GUI_MoveTo PROC					; COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x$[ebp], eax
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GL_MoveTo
	add	esp, 8
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MoveTo ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawRect
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawRect
_TEXT	SEGMENT
_r$ = -24						; size = 8
_Off$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_GUI_DrawRect PROC					; COMDAT
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	movzx	eax, BYTE PTR _GUI_Context+24
	sub	eax, 1
	mov	DWORD PTR _Off$[ebp], eax
; Line 96
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 98
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _Off$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 99
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _Off$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 100
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _Off$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 101
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _Off$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 102
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawRe
$LN3@GUI_DrawRe:
; Line 104
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawRect
	add	esp, 16					; 00000010H
; Line 106
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawRe
$LN5@GUI_DrawRe:
; Line 109
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawRe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GUI_DrawRe:
	DD	1
	DD	$LN8@GUI_DrawRe
$LN8@GUI_DrawRe:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@GUI_DrawRe
$LN7@GUI_DrawRe:
	DB	114					; 00000072H
	DB	0
_GUI_DrawRect ENDP
_TEXT	ENDS
EXTRN	_LCD_DrawVLine:PROC
EXTRN	_LCD_DrawHLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawRect
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
__DrawRect PROC						; COMDAT
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 78
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 79
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 80
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 81
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 82
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawRect ENDP
_TEXT	ENDS
END
