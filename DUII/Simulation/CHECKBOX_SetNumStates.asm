; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\CHECKBOX_SetNumStates.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
__aColorDisabled DD 0808080H
	DD	0101010H
__aColorEnabled DD 0ffffffH
	DD	00H
__PalCheckDisabled DD 02H
	DB	01H
	ORG $+3
	DD	FLAT:__aColorDisabled
__PalCheckEnabled DD 02H
	DB	01H
	ORG $+3
	DD	FLAT:__aColorEnabled
__acCheck DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	080H
	DB	01H
	DB	00H
	DB	022H
	DB	080H
	DB	015H
	DB	00H
	DB	02aH
	DB	00H
	DB	014H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+2
__abmCheck DW	0bH
	DW	0bH
	DW	02H
	DW	01H
	DD	FLAT:__acCheck
	DD	FLAT:__PalCheckDisabled
	ORG $+4
	DW	0bH
	DW	0bH
	DW	02H
	DW	01H
	DD	FLAT:__acCheck
	DD	FLAT:__PalCheckEnabled
	ORG $+4
CONST	ENDS
PUBLIC	_CHECKBOX_SetNumStates
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_CHECKBOX_LockH:PROC
EXTRN	_CHECKBOX_SetDefaultImage:PROC
EXTRN	_CHECKBOX__DefaultProps:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\checkbox_setnumstates.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _CHECKBOX_SetNumStates
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_NumStates$ = 12					; size = 4
_CHECKBOX_SetNumStates PROC				; COMDAT
; Line 81
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	cmp	DWORD PTR _CHECKBOX__DefaultProps+52, 0
	jne	SHORT $LN4@CHECKBOX_S
; Line 84
	push	4
	push	OFFSET __abmCheck
	call	_CHECKBOX_SetDefaultImage
	add	esp, 8
$LN4@CHECKBOX_S:
; Line 86
	cmp	DWORD PTR _CHECKBOX__DefaultProps+56, 0
	jne	SHORT $LN3@CHECKBOX_S
; Line 87
	push	5
	push	OFFSET __abmCheck+20
	call	_CHECKBOX_SetDefaultImage
	add	esp, 8
$LN3@CHECKBOX_S:
; Line 89
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN5@CHECKBOX_S
	cmp	DWORD PTR _NumStates$[ebp], 2
	je	SHORT $LN1@CHECKBOX_S
	cmp	DWORD PTR _NumStates$[ebp], 3
	jne	SHORT $LN5@CHECKBOX_S
$LN1@CHECKBOX_S:
; Line 91
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 92
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _CHECKBOX__DefaultProps+52
	mov	DWORD PTR [eax+108], ecx
; Line 93
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _CHECKBOX__DefaultProps+56
	mov	DWORD PTR [eax+112], ecx
; Line 94
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR _NumStates$[ebp]
	mov	BYTE PTR [eax+120], cl
; Line 95
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN5@CHECKBOX_S:
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CHECKBOX_SetNumStates ENDP
_TEXT	ENDS
END
