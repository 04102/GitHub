; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTVIEW_SetSort.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTVIEW_CompareText
EXTRN	__stricmp:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listview_setsort.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTVIEW_CompareText
_TEXT	SEGMENT
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
_LISTVIEW_CompareText PROC				; COMDAT
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 321
	mov	eax, DWORD PTR _p0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p1$[ebp]
	push	ecx
	call	__stricmp
	add	esp, 8
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_CompareText ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_CompareDec
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_CompareDec
_TEXT	SEGMENT
tv92 = -276						; size = 4
_Neg$15712 = -76					; size = 4
_c$ = -61						; size = 1
_ps$ = -52						; size = 8
_d$ = -36						; size = 4
_i$ = -24						; size = 4
_v$ = -12						; size = 8
_p0$ = 8						; size = 4
_p1$ = 12						; size = 4
_LISTVIEW_CompareDec PROC				; COMDAT
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 329
	mov	DWORD PTR _v$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _v$[ebp+4], eax
; Line 332
	mov	eax, DWORD PTR _p0$[ebp]
	mov	DWORD PTR _ps$[ebp], eax
; Line 333
	mov	eax, DWORD PTR _p1$[ebp]
	mov	DWORD PTR _ps$[ebp+4], eax
; Line 334
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN12@LISTVIEW_C
$LN11@LISTVIEW_C:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN12@LISTVIEW_C:
	cmp	DWORD PTR _i$[ebp], 2
	jge	$LN10@LISTVIEW_C
; Line 335
	mov	DWORD PTR _Neg$15712[ebp], 0
; Line 336
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ps$[ebp+eax*4]
	movzx	edx, BYTE PTR [ecx]
	cmp	edx, 45					; 0000002dH
	jne	SHORT $LN8@LISTVIEW_C
; Line 337
	mov	DWORD PTR _Neg$15712[ebp], 1
; Line 338
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ps$[ebp+eax*4]
	add	ecx, 1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _ps$[ebp+edx*4], ecx
$LN8@LISTVIEW_C:
; Line 340
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _ps$[ebp+eax*4]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR _c$[ebp], dl
	movzx	eax, BYTE PTR _c$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _ps$[ebp+ecx*4]
	add	edx, 1
	mov	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _ps$[ebp+ecx*4], edx
	test	eax, eax
	je	SHORT $LN15@LISTVIEW_C
	mov	DWORD PTR tv92[ebp], 1
	jmp	SHORT $LN16@LISTVIEW_C
$LN15@LISTVIEW_C:
	mov	DWORD PTR tv92[ebp], 0
$LN16@LISTVIEW_C:
	cmp	DWORD PTR tv92[ebp], 0
	je	SHORT $LN7@LISTVIEW_C
; Line 341
	movzx	eax, BYTE PTR _c$[ebp]
	sub	eax, 48					; 00000030H
	mov	DWORD PTR _d$[ebp], eax
; Line 342
	js	SHORT $LN5@LISTVIEW_C
	cmp	DWORD PTR _d$[ebp], 9
	jle	SHORT $LN6@LISTVIEW_C
$LN5@LISTVIEW_C:
; Line 343
	jmp	SHORT $LN7@LISTVIEW_C
$LN6@LISTVIEW_C:
; Line 345
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _v$[ebp+eax*4]
	imul	ecx, 10					; 0000000aH
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _v$[ebp+edx*4], ecx
; Line 346
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _v$[ebp+eax*4]
	add	ecx, DWORD PTR _d$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _v$[ebp+edx*4], ecx
; Line 347
	jmp	SHORT $LN8@LISTVIEW_C
$LN7@LISTVIEW_C:
; Line 348
	cmp	DWORD PTR _Neg$15712[ebp], 0
	je	SHORT $LN4@LISTVIEW_C
; Line 349
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _v$[ebp+eax*4]
	imul	ecx, -1
	mov	edx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _v$[ebp+edx*4], ecx
$LN4@LISTVIEW_C:
; Line 351
	jmp	$LN11@LISTVIEW_C
$LN10@LISTVIEW_C:
; Line 352
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _v$[ebp+4]
	jle	SHORT $LN3@LISTVIEW_C
; Line 353
	or	eax, -1
	jmp	SHORT $LN13@LISTVIEW_C
	jmp	SHORT $LN2@LISTVIEW_C
$LN3@LISTVIEW_C:
; Line 354
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _v$[ebp+4]
	jge	SHORT $LN2@LISTVIEW_C
; Line 355
	mov	eax, 1
	jmp	SHORT $LN13@LISTVIEW_C
$LN2@LISTVIEW_C:
; Line 357
	xor	eax, eax
$LN13@LISTVIEW_C:
; Line 358
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@LISTVIEW_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@LISTVIEW_C:
	DD	2
	DD	$LN19@LISTVIEW_C
$LN19@LISTVIEW_C:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN17@LISTVIEW_C
	DD	-52					; ffffffccH
	DD	8
	DD	$LN18@LISTVIEW_C
$LN18@LISTVIEW_C:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
$LN17@LISTVIEW_C:
	DB	118					; 00000076H
	DB	0
_LISTVIEW_CompareDec ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_GetSelUnsorted
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_LISTVIEW_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_GetSelUnsorted
_TEXT	SEGMENT
_pObj$15728 = -20					; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW_GetSelUnsorted PROC				; COMDAT
; Line 370
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 371
	mov	DWORD PTR _r$[ebp], -1
; Line 372
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@LISTVIEW_G
; Line 375
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Sort
	add	esp, 4
; Line 376
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$15728[ebp], eax
; Line 377
	mov	eax, DWORD PTR _pObj$15728[ebp]
	push	eax
	call	__GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 378
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$15728[ebp], 0
$LN1@LISTVIEW_G:
; Line 381
	mov	eax, DWORD PTR _r$[ebp]
; Line 382
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_GetSelUnsorted ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_LISTVIEW__GetSel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetSelUnsorted
_TEXT	SEGMENT
_paSortArray$15539 = -32				; size = 4
_pSort$15535 = -20					; size = 4
_r$ = -8						; size = 4
_pObj$ = 8						; size = 4
__GetSelUnsorted PROC					; COMDAT
; Line 68
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 70
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetSel
	add	esp, 4
	test	eax, eax
	jl	SHORT $LN4@GetSelUnso
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN4@GetSelUnso
; Line 72
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$15535[ebp], eax
; Line 73
	mov	eax, DWORD PTR _pSort$15535[ebp]
	movzx	ecx, WORD PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN3@GetSelUnso
; Line 74
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetSel
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 75
	jmp	SHORT $LN2@GetSelUnso
$LN3@GetSelUnso:
; Line 77
	mov	eax, DWORD PTR _pSort$15535[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _paSortArray$15539[ebp], eax
; Line 78
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetSel
	add	esp, 4
	mov	ecx, DWORD PTR _paSortArray$15539[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _r$[ebp], edx
; Line 79
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _paSortArray$15539[ebp], 0
$LN2@GetSelUnso:
; Line 81
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$15535[ebp], 0
; Line 82
	jmp	SHORT $LN1@GetSelUnso
$LN4@GetSelUnso:
; Line 83
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetSel
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
$LN1@GetSelUnso:
; Line 85
	mov	eax, DWORD PTR _r$[ebp]
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetSelUnsorted ENDP
_TEXT	ENDS
EXTRN	_HEADER_SetDirIndicator:PROC
EXTRN	_GUI_ALLOC_Realloc:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Sort
_TEXT	SEGMENT
_Sel$ = -76						; size = 4
_i$ = -64						; size = 4
_NumItemsReq$ = -52					; size = 4
_NumItems$ = -40					; size = 4
_SortObject$ = -28					; size = 12
_hSortArray$ = -8					; size = 4
_hObj$ = 8						; size = 4
__Sort	PROC						; COMDAT
; Line 217
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 221
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _SortObject$[ebp], eax
; Line 222
	mov	eax, DWORD PTR _SortObject$[ebp]
	movzx	ecx, BYTE PTR [eax+173]
	test	ecx, ecx
	je	SHORT $LN17@Sort
	mov	eax, DWORD PTR _SortObject$[ebp]
	movzx	ecx, BYTE PTR [eax+172]
	test	ecx, ecx
	jne	SHORT $LN18@Sort
$LN17@Sort:
	mov	eax, DWORD PTR _SortObject$[ebp]
	cmp	DWORD PTR [eax+168], 0
	jne	SHORT $LN19@Sort
$LN18@Sort:
; Line 223
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp], 0
; Line 224
	xor	eax, eax
	jmp	$LN20@Sort
$LN19@Sort:
; Line 226
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _SortObject$[ebp+4], eax
; Line 227
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItemsReq$[ebp], eax
; Line 228
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _NumItems$[ebp], ecx
; Line 229
	mov	eax, DWORD PTR _SortObject$[ebp]
	push	eax
	call	__GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 231
	mov	eax, DWORD PTR _NumItems$[ebp]
	cmp	eax, DWORD PTR _NumItemsReq$[ebp]
	je	$LN16@Sort
; Line 232
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hSortArray$[ebp], ecx
; Line 233
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp], 0
; Line 234
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp+4], 0
; Line 235
	cmp	DWORD PTR _hSortArray$[ebp], 0
	jne	SHORT $LN15@Sort
; Line 236
	mov	eax, DWORD PTR _NumItemsReq$[ebp]
	shl	eax, 1
	push	eax
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hSortArray$[ebp], eax
; Line 237
	jmp	SHORT $LN14@Sort
$LN15@Sort:
; Line 238
	mov	eax, DWORD PTR _NumItemsReq$[ebp]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hSortArray$[ebp]
	push	ecx
	call	_GUI_ALLOC_Realloc
	add	esp, 8
	mov	DWORD PTR _hSortArray$[ebp], eax
$LN14@Sort:
; Line 240
	cmp	DWORD PTR _hSortArray$[ebp], 0
	jne	SHORT $LN13@Sort
; Line 241
	mov	eax, 1
	jmp	$LN20@Sort
$LN13@Sort:
; Line 243
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _SortObject$[ebp], eax
; Line 244
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _SortObject$[ebp+4], eax
; Line 245
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	mov	ecx, DWORD PTR _hSortArray$[ebp]
	mov	DWORD PTR [eax], ecx
$LN16@Sort:
; Line 247
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _SortObject$[ebp+8], eax
; Line 248
	mov	eax, DWORD PTR _SortObject$[ebp]
	movzx	ecx, BYTE PTR [eax+173]
	test	ecx, ecx
	je	SHORT $LN12@Sort
; Line 250
	mov	eax, DWORD PTR _NumItems$[ebp]
	cmp	eax, DWORD PTR _NumItemsReq$[ebp]
	jge	SHORT $LN11@Sort
; Line 251
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	BYTE PTR [eax+174], 0
; Line 252
	mov	eax, DWORD PTR _NumItems$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN10@Sort
$LN9@Sort:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@Sort:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItemsReq$[ebp]
	jge	SHORT $LN11@Sort
; Line 253
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _SortObject$[ebp+8]
	mov	dx, WORD PTR _i$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 254
	jmp	SHORT $LN9@Sort
$LN11@Sort:
; Line 256
	jmp	SHORT $LN7@Sort
$LN12@Sort:
; Line 257
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	BYTE PTR [eax+174], 0
; Line 259
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@Sort
$LN5@Sort:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@Sort:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItemsReq$[ebp]
	jge	SHORT $LN7@Sort
; Line 260
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _SortObject$[ebp+8]
	mov	dx, WORD PTR _i$[ebp]
	mov	WORD PTR [ecx+eax*2], dx
; Line 261
	jmp	SHORT $LN5@Sort
$LN7@Sort:
; Line 263
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	mov	cx, WORD PTR _NumItemsReq$[ebp]
	mov	WORD PTR [eax+4], cx
; Line 265
	cmp	DWORD PTR _NumItemsReq$[ebp], 1
	jle	SHORT $LN3@Sort
; Line 266
	mov	eax, DWORD PTR _SortObject$[ebp]
	movzx	ecx, BYTE PTR [eax+174]
	test	ecx, ecx
	je	SHORT $LN2@Sort
; Line 267
	lea	eax, DWORD PTR _SortObject$[ebp]
	push	eax
	call	__Reverse
	add	esp, 4
; Line 268
	jmp	SHORT $LN1@Sort
$LN2@Sort:
; Line 269
	lea	eax, DWORD PTR _SortObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumItemsReq$[ebp]
	sub	ecx, 1
	push	ecx
	push	0
	call	__BubbleSort
	add	esp, 12					; 0000000cH
$LN1@Sort:
; Line 271
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelUnsorted
	add	esp, 8
$LN3@Sort:
; Line 273
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	BYTE PTR [eax+173], 1
; Line 274
	mov	eax, DWORD PTR _SortObject$[ebp]
	mov	BYTE PTR [eax+172], 1
; Line 275
	mov	eax, DWORD PTR _SortObject$[ebp+4]
	movzx	ecx, BYTE PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _SortObject$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	mov	ecx, DWORD PTR _SortObject$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_HEADER_SetDirIndicator
	add	esp, 12					; 0000000cH
; Line 276
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp+8], 0
; Line 277
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp], 0
; Line 278
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _SortObject$[ebp+4], 0
; Line 279
	xor	eax, eax
$LN20@Sort:
; Line 280
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@Sort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN24@Sort:
	DD	1
	DD	$LN23@Sort
$LN23@Sort:
	DD	-28					; ffffffe4H
	DD	12					; 0000000cH
	DD	$LN22@Sort
$LN22@Sort:
	DB	83					; 00000053H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__Sort	ENDP
_TEXT	ENDS
EXTRN	_LISTVIEW__SetSel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetSelUnsorted
_TEXT	SEGMENT
_paSortArray$15557 = -68				; size = 4
_pSort$15556 = -56					; size = 4
_NumItems$ = -44					; size = 4
_i$ = -32						; size = 4
_hSort$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
__SetSelUnsorted PROC					; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _hSort$[ebp], ecx
; Line 98
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 99
	cmp	DWORD PTR _hSort$[ebp], 0
	je	$LN6@SetSelUnso
; Line 102
	mov	eax, DWORD PTR _hSort$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$15556[ebp], eax
; Line 103
	mov	eax, DWORD PTR _pSort$15556[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _NumItems$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _pSort$15556[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _paSortArray$15557[ebp], eax
; Line 105
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@SetSelUnso
$LN4@SetSelUnso:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@SetSelUnso:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN3@SetSelUnso
; Line 106
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paSortArray$15557[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	cmp	edx, DWORD PTR _Sel$[ebp]
	jne	SHORT $LN2@SetSelUnso
; Line 107
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
; Line 108
	jmp	SHORT $LN3@SetSelUnso
$LN2@SetSelUnso:
; Line 110
	jmp	SHORT $LN4@SetSelUnso
$LN3@SetSelUnso:
; Line 111
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _paSortArray$15557[ebp], 0
; Line 112
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$15556[ebp], 0
; Line 113
	jmp	SHORT $LN7@SetSelUnso
$LN6@SetSelUnso:
; Line 114
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
$LN7@SetSelUnso:
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetSelUnsorted ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __BubbleSort
_TEXT	SEGMENT
_i$15621 = -20						; size = 4
_Swapped$ = -8						; size = 4
_lb$ = 8						; size = 4
_ub$ = 12						; size = 4
_pSortObject$ = 16					; size = 4
__BubbleSort PROC					; COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN7@BubbleSort:
; Line 180
	mov	DWORD PTR _Swapped$[ebp], 0
; Line 181
	mov	eax, DWORD PTR _ub$[ebp]
	mov	DWORD PTR _i$15621[ebp], eax
	jmp	SHORT $LN4@BubbleSort
$LN3@BubbleSort:
	mov	eax, DWORD PTR _i$15621[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$15621[ebp], eax
$LN4@BubbleSort:
	mov	eax, DWORD PTR _i$15621[ebp]
	cmp	eax, DWORD PTR _lb$[ebp]
	jbe	SHORT $LN6@BubbleSort
; Line 182
	mov	eax, DWORD PTR _pSortObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$15621[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$15621[ebp]
	sub	edx, 1
	push	edx
	call	__Compare
	add	esp, 12					; 0000000cH
	test	eax, eax
	jle	SHORT $LN1@BubbleSort
; Line 183
	mov	eax, DWORD PTR _pSortObject$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$15621[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$15621[ebp]
	sub	edx, 1
	push	edx
	call	__Swap
	add	esp, 12					; 0000000cH
; Line 184
	mov	DWORD PTR _Swapped$[ebp], 1
$LN1@BubbleSort:
; Line 186
	jmp	SHORT $LN3@BubbleSort
$LN6@BubbleSort:
; Line 187
	cmp	DWORD PTR _Swapped$[ebp], 0
	jne	SHORT $LN7@BubbleSort
; Line 188
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__BubbleSort ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Compare
_TEXT	SEGMENT
_Result$ = -116						; size = 4
_i1$ = -104						; size = 2
_i0$ = -92						; size = 2
_pColumn$ = -80						; size = 4
_pCell1$ = -68						; size = 4
_pCell0$ = -56						; size = 4
_pRow1$ = -44						; size = 4
_pRow0$ = -32						; size = 4
_p1$ = -20						; size = 4
_p0$ = -8						; size = 4
_lb$ = 8						; size = 4
_ub$ = 12						; size = 4
_pSortObject$ = 16					; size = 4
__Compare PROC						; COMDAT
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 128
	mov	DWORD PTR _Result$[ebp], 0
; Line 129
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _lb$[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
	mov	WORD PTR _i0$[ebp], ax
; Line 130
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _ub$[ebp]
	mov	ax, WORD PTR [ecx+edx*2]
	mov	WORD PTR _i1$[ebp], ax
; Line 131
	movzx	eax, WORD PTR _i0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSortObject$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow0$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	eax, DWORD PTR _pRow0$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell0$[ebp], eax
; Line 133
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow0$[ebp], 0
; Line 134
	cmp	DWORD PTR _pCell0$[ebp], 0
	je	$LN5@Compare
; Line 135
	mov	eax, DWORD PTR _pCell0$[ebp]
	add	eax, 4
	mov	DWORD PTR _p0$[ebp], eax
; Line 136
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell0$[ebp], 0
; Line 137
	movzx	eax, WORD PTR _i1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSortObject$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+60]
	push	eax
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow1$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	eax, DWORD PTR _pRow1$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell1$[ebp], eax
; Line 139
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow1$[ebp], 0
; Line 140
	cmp	DWORD PTR _pCell1$[ebp], 0
	je	$LN5@Compare
; Line 141
	mov	eax, DWORD PTR _pCell1$[ebp]
	add	eax, 4
	mov	DWORD PTR _p1$[ebp], eax
; Line 142
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell1$[ebp], 0
; Line 143
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+120]
	push	edx
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 144
	cmp	DWORD PTR _pColumn$[ebp], 0
	je	SHORT $LN3@Compare
; Line 145
	mov	esi, esp
	mov	eax, DWORD PTR _p1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pColumn$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Result$[ebp], eax
; Line 146
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
; Line 147
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, BYTE PTR [ecx+16]
	test	edx, edx
	je	SHORT $LN2@Compare
; Line 148
	mov	eax, DWORD PTR _Result$[ebp]
	imul	eax, -1
	mov	DWORD PTR _Result$[ebp], eax
$LN2@Compare:
; Line 150
	jmp	SHORT $LN5@Compare
$LN3@Compare:
; Line 151
	mov	DWORD PTR _Result$[ebp], 0
$LN5@Compare:
; Line 155
	mov	eax, DWORD PTR _Result$[ebp]
; Line 156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Compare ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Swap
_TEXT	SEGMENT
_Temp$ = -8						; size = 4
_lb$ = 8						; size = 4
_ub$ = 12						; size = 4
_pSortObject$ = 16					; size = 4
__Swap	PROC						; COMDAT
; Line 162
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 164
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _lb$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _Temp$[ebp], eax
; Line 165
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _pSortObject$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR _lb$[ebp]
	mov	esi, DWORD PTR _ub$[ebp]
	mov	cx, WORD PTR [ecx+esi*2]
	mov	WORD PTR [eax+edx*2], cx
; Line 166
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _ub$[ebp]
	mov	ax, WORD PTR _Temp$[ebp]
	mov	WORD PTR [ecx+edx*2], ax
; Line 167
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Swap	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Reverse
_TEXT	SEGMENT
_Temp$15635 = -32					; size = 4
_NumItems$ = -20					; size = 4
_i$ = -8						; size = 4
_pSortObject$ = 8					; size = 4
__Reverse PROC						; COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 199
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	movzx	edx, WORD PTR [ecx+4]
	mov	DWORD PTR _NumItems$[ebp], edx
; Line 200
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@Reverse
$LN2@Reverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@Reverse:
	mov	eax, DWORD PTR _NumItems$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN4@Reverse
; Line 202
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _i$[ebp]
	movzx	eax, WORD PTR [ecx+edx*2]
	mov	DWORD PTR _Temp$15635[ebp], eax
; Line 203
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _NumItems$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 1
	sub	eax, ecx
	mov	edx, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [edx+8]
	mov	edx, DWORD PTR _i$[ebp]
	mov	ax, WORD PTR [eax-2]
	mov	WORD PTR [ecx+edx*2], ax
; Line 204
	mov	eax, DWORD PTR _pSortObject$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _NumItems$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2]
	mov	ecx, DWORD PTR _i$[ebp]
	shl	ecx, 1
	sub	eax, ecx
	mov	dx, WORD PTR _Temp$15635[ebp]
	mov	WORD PTR [eax-2], dx
; Line 205
	jmp	SHORT $LN2@Reverse
$LN4@Reverse:
; Line 206
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Reverse ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_SetSelUnsorted
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_SetSelUnsorted
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
_LISTVIEW_SetSelUnsorted PROC				; COMDAT
; Line 394
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 395
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@LISTVIEW_S
; Line 397
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Sort
	add	esp, 4
; Line 398
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelUnsorted
	add	esp, 8
$LN2@LISTVIEW_S:
; Line 401
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_SetSelUnsorted ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_SetCompareFunc
EXTRN	_LISTVIEW_GetNumColumns:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_SetCompareFunc
_TEXT	SEGMENT
_pColumn$ = -32						; size = 4
_pObj$ = -20						; size = 4
_NumColumns$ = -8					; size = 4
_hObj$ = 8						; size = 4
_Column$ = 12						; size = 4
_fpCompare$ = 16					; size = 4
_LISTVIEW_SetCompareFunc PROC				; COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 415
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@LISTVIEW_S@2
; Line 417
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 418
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$[ebp], eax
; Line 419
	mov	eax, DWORD PTR _Column$[ebp]
	cmp	eax, DWORD PTR _NumColumns$[ebp]
	jg	SHORT $LN1@LISTVIEW_S@2
; Line 420
	mov	eax, DWORD PTR _Column$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 421
	mov	eax, DWORD PTR _pColumn$[ebp]
	mov	ecx, DWORD PTR _fpCompare$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 422
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
$LN1@LISTVIEW_S@2:
; Line 424
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@LISTVIEW_S@2:
; Line 427
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_SetCompareFunc ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_DisableSort
EXTRN	_LISTVIEW__InvalidateInsideArea:PROC
EXTRN	_LISTVIEW_SetSel:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_DisableSort
_TEXT	SEGMENT
_Sel$15762 = -20					; size = 4
_pObj$15760 = -8					; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW_DisableSort PROC				; COMDAT
; Line 436
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 437
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN3@LISTVIEW_D
; Line 440
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$15760[ebp], eax
; Line 441
	mov	eax, DWORD PTR _pObj$15760[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN1@LISTVIEW_D
; Line 442
	mov	eax, DWORD PTR _pObj$15760[ebp]
	push	eax
	call	__GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$15762[ebp], eax
; Line 443
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	__Free
	add	esp, 4
; Line 444
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	DWORD PTR [eax+168], 0
; Line 445
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	DWORD PTR [eax+120], -1
; Line 446
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	BYTE PTR [eax+173], 0
; Line 447
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	BYTE PTR [eax+172], 0
; Line 448
	push	0
	push	-1
	mov	eax, DWORD PTR _pObj$15760[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_SetDirIndicator
	add	esp, 12					; 0000000cH
; Line 449
	mov	eax, DWORD PTR _Sel$15762[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW_SetSel
	add	esp, 8
; Line 450
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
$LN1@LISTVIEW_D:
; Line 452
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$15760[ebp], 0
$LN3@LISTVIEW_D:
; Line 455
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_DisableSort ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Free
_TEXT	SEGMENT
_pSort$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Free	PROC						; COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 58
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$[ebp], eax
; Line 59
	mov	eax, DWORD PTR _pSort$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 60
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$[ebp], 0
; Line 61
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Free	ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_EnableSort
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_EnableSort
_TEXT	SEGMENT
_pObj$15769 = -20					; size = 4
_hSort$15768 = -8					; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW_EnableSort PROC				; COMDAT
; Line 464
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 465
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@LISTVIEW_E
; Line 469
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$15769[ebp], eax
; Line 470
	mov	eax, DWORD PTR _pObj$15769[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _hSort$15768[ebp], ecx
; Line 471
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$15769[ebp], 0
; Line 472
	cmp	DWORD PTR _hSort$15768[ebp], 0
	jne	SHORT $LN3@LISTVIEW_E
; Line 473
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CreateSortObject
	add	esp, 4
$LN3@LISTVIEW_E:
; Line 477
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_EnableSort ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CreateSortObject
_TEXT	SEGMENT
_pSort$ = -32						; size = 4
_pObj$ = -20						; size = 4
_hSort$ = -8						; size = 4
_hObj$ = 8						; size = 4
__CreateSortObject PROC					; COMDAT
; Line 286
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 290
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 291
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _hSort$[ebp], ecx
; Line 292
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 293
	cmp	DWORD PTR _hSort$[ebp], 0
	jne	SHORT $LN2@CreateSort
; Line 294
	push	20					; 00000014H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hSort$[ebp], eax
; Line 295
	cmp	DWORD PTR _hSort$[ebp], 0
	jne	SHORT $LN2@CreateSort
; Line 296
	jmp	SHORT $LN3@CreateSort
$LN2@CreateSort:
; Line 299
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 300
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hSort$[ebp]
	mov	DWORD PTR [eax+168], ecx
; Line 301
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$[ebp], eax
; Line 302
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+120], -1
; Line 303
	mov	eax, DWORD PTR _pSort$[ebp]
	mov	DWORD PTR [eax+12], OFFSET __Free
; Line 304
	mov	eax, DWORD PTR _pSort$[ebp]
	mov	DWORD PTR [eax+8], OFFSET __Sort
; Line 305
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$[ebp], 0
; Line 306
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@CreateSort:
; Line 307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CreateSortObject ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_SetSort
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_SetSort
_TEXT	SEGMENT
_fpCompare$ = -68					; size = 4
_Error$ = -56						; size = 4
_NumColumns$ = -44					; size = 4
_pColumn$ = -32						; size = 4
_pSort$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Column$ = 12						; size = 4
_Reverse$ = 16						; size = 4
_LISTVIEW_SetSort PROC					; COMDAT
; Line 492
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 496
	mov	DWORD PTR _Error$[ebp], 0
; Line 499
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN6@LISTVIEW_S@3
; Line 500
	mov	eax, 1
	jmp	$LN7@LISTVIEW_S@3
$LN6@LISTVIEW_S@3:
; Line 502
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$[ebp], eax
; Line 503
	mov	eax, DWORD PTR _Column$[ebp]
	cmp	eax, DWORD PTR _NumColumns$[ebp]
	jb	SHORT $LN5@LISTVIEW_S@3
; Line 504
	mov	eax, 1
	jmp	$LN7@LISTVIEW_S@3
$LN5@LISTVIEW_S@3:
; Line 507
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 508
	mov	eax, DWORD PTR _Column$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 509
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 510
	mov	eax, DWORD PTR _pColumn$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _fpCompare$[ebp], ecx
; Line 511
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
; Line 512
	cmp	DWORD PTR _fpCompare$[ebp], 0
	je	$LN4@LISTVIEW_S@3
; Line 513
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CreateSortObject
	add	esp, 4
; Line 514
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 515
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$[ebp], eax
; Line 516
	cmp	DWORD PTR _pSort$[ebp], 0
	je	SHORT $LN3@LISTVIEW_S@3
; Line 517
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Column$[ebp]
	mov	DWORD PTR [eax+120], ecx
; Line 518
	mov	eax, DWORD PTR _pSort$[ebp]
	mov	cl, BYTE PTR _Reverse$[ebp]
	mov	BYTE PTR [eax+16], cl
; Line 519
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+172], 0
; Line 520
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
; Line 521
	jmp	SHORT $LN2@LISTVIEW_S@3
$LN3@LISTVIEW_S@3:
; Line 522
	mov	DWORD PTR _Error$[ebp], 1
$LN2@LISTVIEW_S@3:
; Line 524
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$[ebp], 0
; Line 525
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 526
	jmp	SHORT $LN1@LISTVIEW_S@3
$LN4@LISTVIEW_S@3:
; Line 527
	mov	DWORD PTR _Error$[ebp], 1
$LN1@LISTVIEW_S@3:
; Line 530
	mov	eax, DWORD PTR _Error$[ebp]
$LN7@LISTVIEW_S@3:
; Line 531
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_SetSort ENDP
_TEXT	ENDS
END
