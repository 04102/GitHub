; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_GIF.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_GIF__aInterlaceOffset
PUBLIC	_GUI_GIF__aInterlaceYPos
CONST	SEGMENT
__aMaskTbl DD	00H
	DD	01H
	DD	03H
	DD	07H
	DD	0fH
	DD	01fH
	DD	03fH
	DD	07fH
	DD	0ffH
	DD	01ffH
	DD	03ffH
	DD	07ffH
	DD	0fffH
	DD	01fffH
	DD	03fffH
	DD	07fffH
_GUI_GIF__aInterlaceOffset DD 08H
	DD	08H
	DD	04H
	DD	02H
_GUI_GIF__aInterlaceYPos DD 00H
	DD	04H
	DD	02H
	DD	01H
CONST	ENDS
PUBLIC	_GUI_GIF__ReadData
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_GIF__DrawFromFilePointer
EXTRN	_GUI__Read16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_gif.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_GIF__DrawFromFilePointer
_TEXT	SEGMENT
tv83 = -344						; size = 4
_pData$ = -144						; size = 4
_Introducer$ = -129					; size = 1
_Info$ = -120						; size = 20
_Descriptor$ = -92					; size = 24
_ImageCnt$ = -60					; size = 4
_TransIndex$ = -48					; size = 4
_YSize$ = -36						; size = 4
_XSize$ = -24						; size = 4
_Disposal$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
_pContext$ = 8						; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_Index$ = 20						; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
_pfDrawFromDataBlock$ = 32				; size = 4
_pfClearUnusedPixels$ = 36				; size = 4
_GUI_GIF__DrawFromFilePointer PROC			; COMDAT
; Line 761
	push	ebp
	mov	ebp, esp
	sub	esp, 344				; 00000158H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-344]
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 762
	mov	BYTE PTR _Disposal$[ebp], 0
; Line 764
	mov	DWORD PTR _Descriptor$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Descriptor$[ebp+4], eax
	mov	DWORD PTR _Descriptor$[ebp+8], eax
	mov	DWORD PTR _Descriptor$[ebp+12], eax
	mov	DWORD PTR _Descriptor$[ebp+16], eax
	mov	DWORD PTR _Descriptor$[ebp+20], eax
; Line 765
	mov	DWORD PTR _Info$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Info$[ebp+4], eax
	mov	DWORD PTR _Info$[ebp+8], eax
	mov	DWORD PTR _Info$[ebp+12], eax
	mov	DWORD PTR _Info$[ebp+16], eax
; Line 768
	mov	DWORD PTR _ImageCnt$[ebp], 0
; Line 769
	mov	DWORD PTR _TransIndex$[ebp], -1
; Line 771
	lea	eax, DWORD PTR _Descriptor$[ebp+20]
	push	eax
	lea	ecx, DWORD PTR _YSize$[ebp]
	push	ecx
	lea	edx, DWORD PTR _XSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetSizeAndColorTable
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN23@GUI_GIF__D
; Line 772
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN23@GUI_GIF__D:
; Line 776
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN20@GUI_GIF__D
; Line 777
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN20@GUI_GIF__D:
; Line 779
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Introducer$[ebp], cl
; Line 780
	mov	al, BYTE PTR _Introducer$[ebp]
	mov	BYTE PTR tv83[ebp], al
	cmp	BYTE PTR tv83[ebp], 33			; 00000021H
	je	$LN3@GUI_GIF__D
	cmp	BYTE PTR tv83[ebp], 44			; 0000002cH
	je	SHORT $LN17@GUI_GIF__D
	cmp	BYTE PTR tv83[ebp], 59			; 0000003bH
	je	$LN4@GUI_GIF__D
	jmp	$LN1@GUI_GIF__D
$LN17@GUI_GIF__D:
; Line 783
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN16@GUI_GIF__D
; Line 784
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN16@GUI_GIF__D:
; Line 786
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _Descriptor$[ebp], ecx
; Line 787
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _Descriptor$[ebp+4], ecx
; Line 788
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _Descriptor$[ebp+8], ecx
; Line 789
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _Descriptor$[ebp+12], ecx
; Line 790
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _Descriptor$[ebp+16], ecx
; Line 791
	mov	eax, DWORD PTR _Descriptor$[ebp+16]
	and	eax, 128				; 00000080H
	je	SHORT $LN15@GUI_GIF__D
; Line 793
	mov	ecx, DWORD PTR _Descriptor$[ebp+16]
	and	ecx, 7
	mov	eax, 2
	shl	eax, cl
	mov	DWORD PTR _Descriptor$[ebp+20], eax
; Line 794
	mov	eax, DWORD PTR _Descriptor$[ebp+20]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__ReadColorMap
	add	esp, 8
	test	eax, eax
	je	SHORT $LN15@GUI_GIF__D
; Line 795
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN15@GUI_GIF__D:
; Line 798
	mov	eax, DWORD PTR _Index$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _ImageCnt$[ebp], eax
	jne	SHORT $LN13@GUI_GIF__D
; Line 799
	mov	eax, DWORD PTR _Descriptor$[ebp]
	mov	DWORD PTR _Info$[ebp], eax
; Line 800
	mov	eax, DWORD PTR _Descriptor$[ebp+4]
	mov	DWORD PTR _Info$[ebp+4], eax
; Line 801
	mov	eax, DWORD PTR _Descriptor$[ebp+8]
	mov	DWORD PTR _Info$[ebp+8], eax
; Line 802
	mov	eax, DWORD PTR _Descriptor$[ebp+12]
	mov	DWORD PTR _Info$[ebp+12], eax
$LN13@GUI_GIF__D:
; Line 804
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _ImageCnt$[ebp]
	jne	$LN12@GUI_GIF__D
; Line 805
	movzx	eax, BYTE PTR _Disposal$[ebp]
	cmp	eax, 2
	jne	SHORT $LN11@GUI_GIF__D
; Line 806
	mov	esi, esp
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Info$[ebp]
	push	edx
	lea	eax, DWORD PTR _Descriptor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	DWORD PTR _pfClearUnusedPixels$[ebp]
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN11@GUI_GIF__D:
; Line 808
	mov	esi, esp
	mov	eax, DWORD PTR _Denom$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Num$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _Disposal$[ebp]
	push	edx
	mov	eax, DWORD PTR _TransIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	lea	eax, DWORD PTR _Descriptor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	DWORD PTR _pfDrawFromDataBlock$[ebp]
	add	esp, 32					; 00000020H
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN10@GUI_GIF__D
; Line 809
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN10@GUI_GIF__D:
; Line 812
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN9@GUI_GIF__D
; Line 813
	mov	eax, 1
	jmp	$LN25@GUI_GIF__D
$LN9@GUI_GIF__D:
; Line 820
	xor	eax, eax
	jmp	$LN25@GUI_GIF__D
; Line 821
	jmp	SHORT $LN8@GUI_GIF__D
$LN12@GUI_GIF__D:
; Line 823
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN6@GUI_GIF__D
; Line 824
	mov	eax, 1
	jmp	SHORT $LN25@GUI_GIF__D
$LN6@GUI_GIF__D:
; Line 826
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN8@GUI_GIF__D
	jmp	SHORT $LN6@GUI_GIF__D
$LN8@GUI_GIF__D:
; Line 828
	mov	eax, DWORD PTR _ImageCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _ImageCnt$[ebp], eax
; Line 829
	jmp	SHORT $LN22@GUI_GIF__D
$LN4@GUI_GIF__D:
; Line 831
	jmp	SHORT $LN22@GUI_GIF__D
$LN3@GUI_GIF__D:
; Line 834
	mov	eax, DWORD PTR _Index$[ebp]
	sub	eax, DWORD PTR _ImageCnt$[ebp]
	neg	eax
	sbb	eax, eax
	not	eax
	lea	ecx, DWORD PTR _Disposal$[ebp]
	and	eax, ecx
	push	eax
	mov	edx, DWORD PTR _Index$[ebp]
	sub	edx, DWORD PTR _ImageCnt$[ebp]
	neg	edx
	sbb	edx, edx
	not	edx
	lea	eax, DWORD PTR _Info$[ebp]
	and	edx, eax
	push	edx
	lea	ecx, DWORD PTR _TransIndex$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__ReadExtension
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@GUI_GIF__D
; Line 835
	mov	eax, 1
	jmp	SHORT $LN25@GUI_GIF__D
$LN2@GUI_GIF__D:
; Line 837
	jmp	SHORT $LN22@GUI_GIF__D
$LN1@GUI_GIF__D:
; Line 839
	mov	eax, 1
	jmp	SHORT $LN25@GUI_GIF__D
$LN22@GUI_GIF__D:
; Line 841
	movzx	eax, BYTE PTR _Introducer$[ebp]
	cmp	eax, 59					; 0000003bH
	jne	$LN23@GUI_GIF__D
; Line 842
	xor	eax, eax
$LN25@GUI_GIF__D:
; Line 843
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@GUI_GIF__D
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 344				; 00000158H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN35@GUI_GIF__D:
	DD	7
	DD	$LN34@GUI_GIF__D
$LN34@GUI_GIF__D:
	DD	-9					; fffffff7H
	DD	1
	DD	$LN27@GUI_GIF__D
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN28@GUI_GIF__D
	DD	-36					; ffffffdcH
	DD	4
	DD	$LN29@GUI_GIF__D
	DD	-48					; ffffffd0H
	DD	4
	DD	$LN30@GUI_GIF__D
	DD	-92					; ffffffa4H
	DD	24					; 00000018H
	DD	$LN31@GUI_GIF__D
	DD	-120					; ffffff88H
	DD	20					; 00000014H
	DD	$LN32@GUI_GIF__D
	DD	-144					; ffffff70H
	DD	4
	DD	$LN33@GUI_GIF__D
$LN33@GUI_GIF__D:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN32@GUI_GIF__D:
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN31@GUI_GIF__D:
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	116					; 00000074H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN30@GUI_GIF__D:
	DB	84					; 00000054H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
$LN29@GUI_GIF__D:
	DB	89					; 00000059H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN28@GUI_GIF__D:
	DB	88					; 00000058H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN27@GUI_GIF__D:
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	112					; 00000070H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
_GUI_GIF__DrawFromFilePointer ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetDataBlock
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_Count$ = -5						; size = 1
_pContext$ = 8						; size = 4
_pBuffer$ = 12						; size = 4
__GetDataBlock PROC					; COMDAT
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 121
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@GetDataBlo
; Line 122
	xor	eax, eax
	jmp	SHORT $LN6@GetDataBlo
$LN5@GetDataBlo:
; Line 124
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Count$[ebp], cl
; Line 125
	movzx	eax, BYTE PTR _Count$[ebp]
	test	eax, eax
	je	SHORT $LN4@GetDataBlo
; Line 126
	cmp	DWORD PTR _pBuffer$[ebp], 0
	je	SHORT $LN3@GetDataBlo
; Line 127
	movzx	eax, BYTE PTR _Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__ReadBytes
	add	esp, 12					; 0000000cH
; Line 128
	jmp	SHORT $LN4@GetDataBlo
$LN3@GetDataBlo:
; Line 129
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Count$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@GetDataBlo
; Line 130
	xor	eax, eax
	jmp	SHORT $LN6@GetDataBlo
$LN4@GetDataBlo:
; Line 134
	movzx	eax, BYTE PTR _Count$[ebp]
$LN6@GetDataBlo:
; Line 135
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GetDataBlo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@GetDataBlo:
	DD	1
	DD	$LN9@GetDataBlo
$LN9@GetDataBlo:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN8@GetDataBlo
$LN8@GetDataBlo:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__GetDataBlock ENDP
_TEXT	ENDS
EXTRN	_memcpy:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ReadBytes
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_pContext$ = 8						; size = 4
_pBuffer$ = 12						; size = 4
_Len$ = 16						; size = 4
__ReadBytes PROC					; COMDAT
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN1@ReadBytes
; Line 102
	jmp	SHORT $LN2@ReadBytes
$LN1@ReadBytes:
; Line 104
	mov	eax, DWORD PTR _Len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN2@ReadBytes:
; Line 105
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@ReadBytes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@ReadBytes:
	DD	1
	DD	$LN5@ReadBytes
$LN5@ReadBytes:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@ReadBytes
$LN4@ReadBytes:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__ReadBytes ENDP
_TEXT	ENDS
_BSS	SEGMENT
__aBuffer DB	0100H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT __ReadExtension
_TEXT	SEGMENT
tv71 = -220						; size = 4
_pData$ = -20						; size = 4
_Label$ = -5						; size = 1
_pContext$ = 8						; size = 4
_pTransIndex$ = 12					; size = 4
_pInfo$ = 16						; size = 4
_pDisposal$ = 20					; size = 4
__ReadExtension PROC					; COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 200
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN14@ReadExtens
; Line 201
	mov	eax, 1
	jmp	$LN15@ReadExtens
$LN14@ReadExtens:
; Line 203
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Label$[ebp], cl
; Line 204
	movzx	eax, BYTE PTR _Label$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 254		; 000000feH
	ja	$LN12@ReadExtens
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN17@ReadExtens[edx]
	jmp	DWORD PTR $LN21@ReadExtens[eax*4]
$LN10@ReadExtens:
; Line 208
	push	OFFSET __aBuffer
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN9@ReadExtens
	jmp	SHORT $LN10@ReadExtens
$LN9@ReadExtens:
; Line 209
	xor	eax, eax
	jmp	$LN15@ReadExtens
$LN8@ReadExtens:
; Line 211
	push	OFFSET __aBuffer
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	cmp	eax, 4
	je	SHORT $LN7@ReadExtens
; Line 212
	mov	eax, 1
	jmp	$LN15@ReadExtens
$LN7@ReadExtens:
; Line 214
	cmp	DWORD PTR _pInfo$[ebp], 0
	je	SHORT $LN6@ReadExtens
; Line 215
	movzx	eax, BYTE PTR __aBuffer+2
	shl	eax, 8
	movzx	ecx, BYTE PTR __aBuffer+1
	or	eax, ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+16], eax
$LN6@ReadExtens:
; Line 217
	cmp	DWORD PTR _pDisposal$[ebp], 0
	je	SHORT $LN5@ReadExtens
; Line 218
	movzx	eax, BYTE PTR __aBuffer
	sar	eax, 2
	and	eax, 7
	mov	ecx, DWORD PTR _pDisposal$[ebp]
	mov	BYTE PTR [ecx], al
$LN5@ReadExtens:
; Line 220
	cmp	DWORD PTR _pTransIndex$[ebp], 0
	je	SHORT $LN4@ReadExtens
; Line 221
	movzx	eax, BYTE PTR __aBuffer
	and	eax, 1
	je	SHORT $LN4@ReadExtens
; Line 222
	movzx	eax, BYTE PTR __aBuffer+3
	mov	ecx, DWORD PTR _pTransIndex$[ebp]
	mov	DWORD PTR [ecx], eax
$LN4@ReadExtens:
; Line 226
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@ReadExtens
; Line 227
	mov	eax, 1
	jmp	SHORT $LN15@ReadExtens
$LN2@ReadExtens:
; Line 229
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@ReadExtens
; Line 230
	mov	eax, 1
	jmp	SHORT $LN15@ReadExtens
$LN1@ReadExtens:
; Line 232
	xor	eax, eax
	jmp	SHORT $LN15@ReadExtens
$LN12@ReadExtens:
; Line 234
	mov	eax, 1
$LN15@ReadExtens:
; Line 235
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ReadExtens
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@ReadExtens:
	DD	1
	DD	$LN19@ReadExtens
$LN19@ReadExtens:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN18@ReadExtens
$LN18@ReadExtens:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
	npad	2
$LN21@ReadExtens:
	DD	$LN10@ReadExtens
	DD	$LN8@ReadExtens
	DD	$LN12@ReadExtens
$LN17@ReadExtens:
	DB	0
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	2
	DB	1
	DB	2
	DB	2
	DB	2
	DB	2
	DB	0
	DB	0
__ReadExtension ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ReadColorMap
_TEXT	SEGMENT
_pData$10798 = -56					; size = 4
_b$10797 = -41						; size = 1
_g$10796 = -29						; size = 1
_r$10795 = -17						; size = 1
_i$ = -8						; size = 4
_pContext$ = 8						; size = 4
_NumColors$ = 12					; size = 4
__ReadColorMap PROC					; COMDAT
; Line 402
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 404
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@ReadColorM
$LN3@ReadColorM:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@ReadColorM:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumColors$[ebp]
	jge	SHORT $LN2@ReadColorM
; Line 407
	push	0
	lea	eax, DWORD PTR _pData$10798[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN1@ReadColorM
; Line 408
	mov	eax, 1
	jmp	SHORT $LN5@ReadColorM
$LN1@ReadColorM:
; Line 410
	mov	eax, DWORD PTR _pData$10798[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _r$10795[ebp], cl
; Line 411
	mov	eax, DWORD PTR _pData$10798[ebp]
	mov	cl, BYTE PTR [eax+1]
	mov	BYTE PTR _g$10796[ebp], cl
; Line 412
	mov	eax, DWORD PTR _pData$10798[ebp]
	mov	cl, BYTE PTR [eax+2]
	mov	BYTE PTR _b$10797[ebp], cl
; Line 413
	movzx	eax, BYTE PTR _r$10795[ebp]
	movzx	ecx, BYTE PTR _g$10796[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$10797[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+ecx*4+15624], eax
; Line 414
	jmp	SHORT $LN3@ReadColorM
$LN2@ReadColorM:
; Line 415
	xor	eax, eax
$LN5@ReadColorM:
; Line 416
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@ReadColorM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@ReadColorM:
	DD	1
	DD	$LN8@ReadColorM
$LN8@ReadColorM:
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@ReadColorM
$LN7@ReadColorM:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__ReadColorMap ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetSizeAndColorTable
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_pxSize$ = 12						; size = 4
_pySize$ = 16						; size = 4
_pNumColors$ = 20					; size = 4
__GetSizeAndColorTable PROC				; COMDAT
; Line 519
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 521
	mov	eax, DWORD PTR _pySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pxSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__GetImageDimension
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN2@GetSizeAnd
; Line 522
	mov	eax, 1
	jmp	SHORT $LN3@GetSizeAnd
$LN2@GetSizeAnd:
; Line 525
	mov	eax, DWORD PTR _pNumColors$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__GetGlobalColorTable
	add	esp, 8
	test	eax, eax
	je	SHORT $LN1@GetSizeAnd
; Line 526
	mov	eax, 1
	jmp	SHORT $LN3@GetSizeAnd
$LN1@GetSizeAnd:
; Line 528
	xor	eax, eax
$LN3@GetSizeAnd:
; Line 529
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetSizeAndColorTable ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetImageDimension
_TEXT	SEGMENT
_pData$ = -32						; size = 4
_YSize$ = -20						; size = 4
_XSize$ = -8						; size = 4
_pContext$ = 8						; size = 4
_pxSize$ = 12						; size = 4
_pySize$ = 16						; size = 4
__GetImageDimension PROC				; COMDAT
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 460
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__InitGIFDecoding
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@GetImageDi
; Line 461
	mov	eax, 1
	jmp	SHORT $LN7@GetImageDi
$LN6@GetImageDi:
; Line 464
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	4
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN5@GetImageDi
; Line 465
	mov	eax, 1
	jmp	SHORT $LN7@GetImageDi
$LN5@GetImageDi:
; Line 468
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _XSize$[ebp], ecx
; Line 469
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _YSize$[ebp], ecx
; Line 470
	cmp	DWORD PTR _XSize$[ebp], 2000		; 000007d0H
	jg	SHORT $LN3@GetImageDi
	cmp	DWORD PTR _YSize$[ebp], 2000		; 000007d0H
	jle	SHORT $LN4@GetImageDi
$LN3@GetImageDi:
; Line 471
	mov	eax, 1
	jmp	SHORT $LN7@GetImageDi
$LN4@GetImageDi:
; Line 473
	cmp	DWORD PTR _pxSize$[ebp], 0
	je	SHORT $LN2@GetImageDi
; Line 474
	mov	eax, DWORD PTR _pxSize$[ebp]
	mov	ecx, DWORD PTR _XSize$[ebp]
	mov	DWORD PTR [eax], ecx
$LN2@GetImageDi:
; Line 476
	cmp	DWORD PTR _pySize$[ebp], 0
	je	SHORT $LN1@GetImageDi
; Line 477
	mov	eax, DWORD PTR _pySize$[ebp]
	mov	ecx, DWORD PTR _YSize$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@GetImageDi:
; Line 479
	xor	eax, eax
$LN7@GetImageDi:
; Line 480
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetImageDi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@GetImageDi:
	DD	1
	DD	$LN10@GetImageDi
$LN10@GetImageDi:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN9@GetImageDi
$LN9@GetImageDi:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__GetImageDimension ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __InitGIFDecoding
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_pContext$ = 8						; size = 4
__InitGIFDecoding PROC					; COMDAT
; Line 429
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 431
	push	1
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	6
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@InitGIFDec
; Line 432
	mov	eax, 1
	jmp	SHORT $LN5@InitGIFDec
$LN4@InitGIFDec:
; Line 440
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 71					; 00000047H
	jne	SHORT $LN2@InitGIFDec
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	cmp	ecx, 73					; 00000049H
	jne	SHORT $LN2@InitGIFDec
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	cmp	ecx, 70					; 00000046H
	jne	SHORT $LN2@InitGIFDec
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+3]
	cmp	ecx, 56					; 00000038H
	jne	SHORT $LN2@InitGIFDec
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 55					; 00000037H
	je	SHORT $LN1@InitGIFDec
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	cmp	ecx, 57					; 00000039H
	jne	SHORT $LN2@InitGIFDec
$LN1@InitGIFDec:
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax+5]
	cmp	ecx, 97					; 00000061H
	je	SHORT $LN3@InitGIFDec
$LN2@InitGIFDec:
; Line 441
	mov	eax, 1
	jmp	SHORT $LN5@InitGIFDec
$LN3@InitGIFDec:
; Line 443
	xor	eax, eax
$LN5@InitGIFDec:
; Line 444
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@InitGIFDec
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@InitGIFDec:
	DD	1
	DD	$LN8@InitGIFDec
$LN8@InitGIFDec:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@InitGIFDec
$LN7@InitGIFDec:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__InitGIFDecoding ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetGlobalColorTable
_TEXT	SEGMENT
_pData$ = -32						; size = 4
_NumColors$ = -20					; size = 4
_Flags$ = -5						; size = 1
_pContext$ = 8						; size = 4
_pNumColors$ = 12					; size = 4
__GetGlobalColorTable PROC				; COMDAT
; Line 493
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 497
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	3
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN4@GetGlobalC
; Line 498
	mov	eax, 1
	jmp	SHORT $LN5@GetGlobalC
$LN4@GetGlobalC:
; Line 501
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Flags$[ebp], cl
; Line 502
	movzx	ecx, BYTE PTR _Flags$[ebp]
	and	ecx, 7
	mov	eax, 2
	shl	eax, cl
	mov	DWORD PTR _NumColors$[ebp], eax
; Line 503
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN3@GetGlobalC
; Line 505
	mov	eax, DWORD PTR _NumColors$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__ReadColorMap
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@GetGlobalC
; Line 506
	mov	eax, 1
	jmp	SHORT $LN5@GetGlobalC
$LN3@GetGlobalC:
; Line 509
	cmp	DWORD PTR _pNumColors$[ebp], 0
	je	SHORT $LN1@GetGlobalC
; Line 510
	mov	eax, DWORD PTR _pNumColors$[ebp]
	mov	ecx, DWORD PTR _NumColors$[ebp]
	mov	DWORD PTR [eax], ecx
$LN1@GetGlobalC:
; Line 512
	xor	eax, eax
$LN5@GetGlobalC:
; Line 513
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GetGlobalC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GetGlobalC:
	DD	1
	DD	$LN8@GetGlobalC
$LN8@GetGlobalC:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN7@GetGlobalC
$LN7@GetGlobalC:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__GetGlobalColorTable ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF__GetNextByte
EXTRN	_GUI__memset:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF__GetNextByte
_TEXT	SEGMENT
tv204 = -232						; size = 4
tv172 = -232						; size = 4
_Incode$ = -32						; size = 4
_Code$ = -20						; size = 4
_i$ = -8						; size = 4
_pContext$ = 8						; size = 4
_GUI_GIF__GetNextByte PROC				; COMDAT
; Line 890
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN19@GUI_GIF__G:
; Line 892
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetNextCode
	add	esp, 4
	mov	DWORD PTR _Code$[ebp], eax
	cmp	DWORD PTR _Code$[ebp], 0
	jl	$LN18@GUI_GIF__G
; Line 893
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Code$[ebp]
	cmp	ecx, DWORD PTR [eax+15608]
	jne	$LN17@GUI_GIF__G
; Line 895
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+15608], 4096		; 00001000H
	jl	SHORT $LN16@GUI_GIF__G
; Line 896
	or	eax, -1
	jmp	$LN20@GUI_GIF__G
$LN16@GUI_GIF__G:
; Line 899
	push	8192					; 00002000H
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 278				; 00000116H
	push	eax
	call	_GUI__memset
	add	esp, 12					; 0000000cH
; Line 900
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN15@GUI_GIF__G
$LN14@GUI_GIF__G:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN15@GUI_GIF__G:
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+15608]
	jge	SHORT $LN13@GUI_GIF__G
; Line 901
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR _i$[ebp]
	mov	BYTE PTR [eax+8470], cl
; Line 902
	jmp	SHORT $LN14@GUI_GIF__G
$LN13@GUI_GIF__G:
; Line 905
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15596]
	add	ecx, 1
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15592], ecx
; Line 906
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15608]
	shl	ecx, 1
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15604], ecx
; Line 907
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15608]
	add	ecx, 2
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15600], ecx
; Line 908
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 12566				; 00003116H
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15568], eax
$LN12@GUI_GIF__G:
; Line 911
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetNextCode
	add	esp, 4
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15616], eax
; Line 912
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [eax+15616]
	cmp	edx, DWORD PTR [ecx+15608]
	je	SHORT $LN12@GUI_GIF__G
; Line 913
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15616]
	mov	DWORD PTR [eax+15620], edx
; Line 914
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [eax+15616]
	jmp	$LN20@GUI_GIF__G
$LN17@GUI_GIF__G:
; Line 916
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Code$[ebp]
	cmp	ecx, DWORD PTR [eax+15612]
	jne	SHORT $LN9@GUI_GIF__G
; Line 917
	mov	eax, -2					; fffffffeH
	jmp	$LN20@GUI_GIF__G
$LN9@GUI_GIF__G:
; Line 919
	mov	eax, DWORD PTR _Code$[ebp]
	mov	DWORD PTR _Incode$[ebp], eax
; Line 920
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Code$[ebp]
	cmp	ecx, DWORD PTR [eax+15600]
	jl	SHORT $LN7@GUI_GIF__G
; Line 921
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15568]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	al, BYTE PTR [edx+15616]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15568]
	add	edx, 1
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15568], edx
; Line 922
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15620]
	mov	DWORD PTR _Code$[ebp], ecx
$LN7@GUI_GIF__G:
; Line 924
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Code$[ebp]
	cmp	ecx, DWORD PTR [eax+15608]
	jl	$LN6@GUI_GIF__G
; Line 925
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15568]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	edx, DWORD PTR _Code$[ebp]
	mov	al, BYTE PTR [edx+8470]
	mov	BYTE PTR [ecx], al
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15568]
	add	edx, 1
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15568], edx
; Line 926
	mov	eax, DWORD PTR _Code$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2+278]
	cmp	DWORD PTR _Code$[ebp], edx
	jne	SHORT $LN5@GUI_GIF__G
; Line 927
	mov	eax, DWORD PTR _Code$[ebp]
	jmp	$LN20@GUI_GIF__G
$LN5@GUI_GIF__G:
; Line 929
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 12566				; 00003116H
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15568]
	sub	edx, eax
	cmp	edx, 3000				; 00000bb8H
	jb	SHORT $LN4@GUI_GIF__G
; Line 930
	mov	eax, DWORD PTR _Code$[ebp]
	jmp	$LN20@GUI_GIF__G
$LN4@GUI_GIF__G:
; Line 932
	mov	eax, DWORD PTR _Code$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	movsx	edx, WORD PTR [ecx+eax*2+278]
	mov	DWORD PTR _Code$[ebp], edx
; Line 933
	jmp	$LN7@GUI_GIF__G
$LN6@GUI_GIF__G:
; Line 934
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _Code$[ebp]
	movzx	ecx, BYTE PTR [eax+8470]
	mov	DWORD PTR tv172[ebp], ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR tv172[ebp]
	mov	DWORD PTR [edx+15616], eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15568]
	mov	al, BYTE PTR tv172[ebp]
	mov	BYTE PTR [edx], al
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+15568]
	add	edx, 1
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15568], edx
; Line 935
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15600]
	mov	DWORD PTR _Code$[ebp], ecx
	cmp	DWORD PTR _Code$[ebp], 4096		; 00001000H
	jge	$LN3@GUI_GIF__G
; Line 936
	mov	eax, DWORD PTR _Code$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	dx, WORD PTR [edx+15620]
	mov	WORD PTR [ecx+eax*2+278], dx
; Line 937
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _Code$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	dl, BYTE PTR [ecx+15616]
	mov	BYTE PTR [eax+8470], dl
; Line 938
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15600]
	add	ecx, 1
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15600], ecx
; Line 939
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [eax+15600]
	cmp	edx, DWORD PTR [ecx+15604]
	jl	SHORT $LN3@GUI_GIF__G
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+15604], 4096		; 00001000H
	jge	SHORT $LN3@GUI_GIF__G
; Line 940
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15604]
	shl	ecx, 1
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15604], ecx
; Line 941
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15592]
	add	ecx, 1
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15592], ecx
$LN3@GUI_GIF__G:
; Line 944
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _Incode$[ebp]
	mov	DWORD PTR [eax+15620], ecx
; Line 945
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 12566				; 00003116H
	mov	ecx, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [ecx+15568], eax
	jbe	SHORT $LN1@GUI_GIF__G
; Line 946
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15568]
	sub	ecx, 1
	mov	DWORD PTR tv204[ebp], ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR tv204[ebp]
	mov	DWORD PTR [edx+15568], eax
	mov	ecx, DWORD PTR tv204[ebp]
	movzx	eax, BYTE PTR [ecx]
	jmp	SHORT $LN20@GUI_GIF__G
$LN1@GUI_GIF__G:
; Line 948
	jmp	$LN19@GUI_GIF__G
$LN18@GUI_GIF__G:
; Line 949
	mov	eax, DWORD PTR _Code$[ebp]
$LN20@GUI_GIF__G:
; Line 950
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF__GetNextByte ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNextCode
_TEXT	SEGMENT
_Count$10641 = -56					; size = 4
_Result$ = -44						; size = 4
_End$ = -32						; size = 4
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_pContext$ = 8						; size = 4
__GetNextCode PROC					; COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 151
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+15588], 0
	je	SHORT $LN9@GetNextCod
; Line 153
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15588], 0
; Line 154
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR [eax+15608]
	jmp	$LN10@GetNextCod
$LN9@GetNextCod:
; Line 156
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15572]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	ecx, DWORD PTR [edx+15592]
	mov	DWORD PTR _End$[ebp], ecx
; Line 157
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _End$[ebp]
	cmp	ecx, DWORD PTR [eax+15576]
	jl	$LN8@GetNextCod
; Line 159
	mov	eax, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [eax+15580], 0
	je	SHORT $LN7@GetNextCod
; Line 160
	or	eax, -1
	jmp	$LN10@GetNextCod
$LN7@GetNextCod:
; Line 162
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15584]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	cl, BYTE PTR [eax+ecx+18]
	mov	BYTE PTR [edx+20], cl
; Line 163
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15584]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	cl, BYTE PTR [eax+ecx+19]
	mov	BYTE PTR [edx+21], cl
; Line 164
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 22					; 00000016H
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__GetDataBlock
	add	esp, 8
	mov	DWORD PTR _Count$10641[ebp], eax
	cmp	DWORD PTR _Count$10641[ebp], 0
	jne	SHORT $LN6@GetNextCod
; Line 165
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15580], 1
$LN6@GetNextCod:
; Line 167
	cmp	DWORD PTR _Count$10641[ebp], 0
	jge	SHORT $LN5@GetNextCod
; Line 168
	or	eax, -1
	jmp	$LN10@GetNextCod
$LN5@GetNextCod:
; Line 170
	mov	eax, DWORD PTR _Count$10641[ebp]
	add	eax, 2
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15584], eax
; Line 171
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [eax+15572]
	sub	edx, DWORD PTR [ecx+15576]
	add	edx, 16					; 00000010H
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15572], edx
; Line 172
	mov	eax, DWORD PTR _Count$10641[ebp]
	lea	ecx, DWORD PTR [eax*8+16]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+15576], ecx
; Line 173
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15572]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	ecx, DWORD PTR [edx+15592]
	mov	DWORD PTR _End$[ebp], ecx
$LN8@GetNextCod:
; Line 175
	mov	eax, DWORD PTR _End$[ebp]
	sar	eax, 3
	mov	DWORD PTR _j$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15572]
	sar	ecx, 3
	mov	DWORD PTR _i$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _j$[ebp]
	jne	SHORT $LN4@GetNextCod
; Line 178
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	mov	DWORD PTR _Result$[ebp], ecx
	jmp	SHORT $LN3@GetNextCod
$LN4@GetNextCod:
; Line 179
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _j$[ebp]
	jne	SHORT $LN2@GetNextCod
; Line 180
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+21]
	shl	eax, 8
	or	ecx, eax
	mov	DWORD PTR _Result$[ebp], ecx
; Line 181
	jmp	SHORT $LN3@GetNextCod
$LN2@GetNextCod:
; Line 182
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	movzx	ecx, BYTE PTR [eax+20]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+21]
	shl	eax, 8
	or	ecx, eax
	mov	edx, DWORD PTR _pContext$[ebp]
	add	edx, DWORD PTR _i$[ebp]
	movzx	eax, BYTE PTR [edx+22]
	shl	eax, 16					; 00000010H
	or	ecx, eax
	mov	DWORD PTR _Result$[ebp], ecx
$LN3@GetNextCod:
; Line 184
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15572]
	and	ecx, 7
	mov	edx, DWORD PTR _Result$[ebp]
	sar	edx, cl
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15592]
	and	edx, DWORD PTR __aMaskTbl[ecx*4]
	mov	DWORD PTR _Result$[ebp], edx
; Line 185
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15572]
	mov	edx, DWORD PTR _pContext$[ebp]
	add	ecx, DWORD PTR [edx+15592]
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15572], ecx
; Line 186
	mov	eax, DWORD PTR _Result$[ebp]
$LN10@GetNextCod:
; Line 187
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetNextCode ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF__InitLZW
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF__InitLZW
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_InputCodeSize$ = 12					; size = 4
_GUI_GIF__InitLZW PROC					; COMDAT
; Line 959
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 960
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _InputCodeSize$[ebp]
	mov	DWORD PTR [eax+15596], ecx
; Line 961
	mov	eax, DWORD PTR _InputCodeSize$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15592], eax
; Line 962
	mov	eax, 1
	mov	ecx, DWORD PTR _InputCodeSize$[ebp]
	shl	eax, cl
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15608], eax
; Line 963
	mov	eax, 1
	mov	ecx, DWORD PTR _InputCodeSize$[ebp]
	shl	eax, cl
	add	eax, 1
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15612], eax
; Line 964
	mov	eax, 1
	mov	ecx, DWORD PTR _InputCodeSize$[ebp]
	shl	eax, cl
	add	eax, 2
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15600], eax
; Line 965
	mov	eax, 1
	mov	ecx, DWORD PTR _InputCodeSize$[ebp]
	shl	eax, cl
	shl	eax, 1
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15604], eax
; Line 966
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15588], 1
; Line 967
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+15584], 2
; Line 968
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 12566				; 00003116H
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+15568], eax
; Line 969
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF__InitLZW ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GUI_GIF__ReadData
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
_NumBytesReq$ = 12					; size = 4
_ppData$ = 16						; size = 4
_StartOfFile$ = 20					; size = 4
_GUI_GIF__ReadData PROC					; COMDAT
; Line 975
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1000
	cmp	DWORD PTR _StartOfFile$[ebp], 0
	je	SHORT $LN2@GUI_GIF__R
; Line 1001
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+16], 0
$LN2@GUI_GIF__R:
; Line 1003
	mov	esi, esp
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	mov	edx, DWORD PTR _NumBytesReq$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _NumBytesReq$[ebp]
	je	SHORT $LN1@GUI_GIF__R
; Line 1004
	mov	eax, 1
	jmp	SHORT $LN3@GUI_GIF__R
$LN1@GUI_GIF__R:
; Line 1006
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	add	ecx, DWORD PTR _NumBytesReq$[ebp]
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 1012
	xor	eax, eax
$LN3@GUI_GIF__R:
; Line 1014
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF__ReadData ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF__GetData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF__GetData
_TEXT	SEGMENT
tv68 = -232						; size = 4
_pParam$ = -32						; size = 4
_NumBytes$ = -20					; size = 4
_RemBytes$ = -8						; size = 4
_p$ = 8							; size = 4
_ppData$ = 12						; size = 4
_NumBytesReq$ = 16					; size = 4
_Off$ = 20						; size = 4
_GUI_GIF__GetData PROC					; COMDAT
; Line 1020
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1023
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _pParam$[ebp], eax
; Line 1024
	mov	eax, DWORD PTR _pParam$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	sub	ecx, DWORD PTR _Off$[ebp]
	mov	DWORD PTR _RemBytes$[ebp], ecx
; Line 1025
	mov	DWORD PTR _NumBytes$[ebp], 0
; Line 1026
	cmp	DWORD PTR _RemBytes$[ebp], 0
	jle	SHORT $LN1@GUI_GIF__G@2
; Line 1027
	mov	eax, DWORD PTR _RemBytes$[ebp]
	cmp	eax, DWORD PTR _NumBytesReq$[ebp]
	jbe	SHORT $LN4@GUI_GIF__G@2
	mov	ecx, DWORD PTR _NumBytesReq$[ebp]
	mov	DWORD PTR tv68[ebp], ecx
	jmp	SHORT $LN5@GUI_GIF__G@2
$LN4@GUI_GIF__G@2:
	mov	edx, DWORD PTR _RemBytes$[ebp]
	mov	DWORD PTR tv68[ebp], edx
$LN5@GUI_GIF__G@2:
	mov	eax, DWORD PTR tv68[ebp]
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 1028
	mov	eax, DWORD PTR _pParam$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _Off$[ebp]
	mov	edx, DWORD PTR _ppData$[ebp]
	mov	DWORD PTR [edx], ecx
$LN1@GUI_GIF__G@2:
; Line 1030
	mov	eax, DWORD PTR _NumBytes$[ebp]
; Line 1031
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF__GetData ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetXSizeEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetXSizeEx
_TEXT	SEGMENT
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_GUI_GIF_GetXSizeEx PROC				; COMDAT
; Line 1061
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1062
	push	6
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	push	ecx
	call	__GetValue
	add	esp, 12					; 0000000cH
	movzx	eax, ax
; Line 1063
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_GetXSizeEx ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_Free:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetValue
_TEXT	SEGMENT
_pContext$ = -44					; size = 4
_hContext$ = -32					; size = 4
_r$ = -20						; size = 2
_pData$ = -8						; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_Offset$ = 16						; size = 4
__GetValue PROC						; COMDAT
; Line 849
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 851
	xor	eax, eax
	mov	WORD PTR _r$[ebp], ax
; Line 856
	push	16648					; 00004108H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 857
	cmp	DWORD PTR _hContext$[ebp], 0
	je	SHORT $LN2@GetValue
; Line 858
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 859
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 860
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 861
	push	1
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Offset$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN1@GetValue
; Line 862
	xor	eax, eax
	jmp	SHORT $LN3@GetValue
$LN1@GetValue:
; Line 864
	mov	eax, DWORD PTR _pData$[ebp]
	add	eax, DWORD PTR _Offset$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 865
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _r$[ebp], ax
; Line 866
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN2@GetValue:
; Line 869
	mov	ax, WORD PTR _r$[ebp]
$LN3@GetValue:
; Line 870
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GetValue
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@GetValue:
	DD	1
	DD	$LN6@GetValue
$LN6@GetValue:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN5@GetValue
$LN5@GetValue:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__GetValue ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetXSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetXSize
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_GUI_GIF_GetXSize PROC					; COMDAT
; Line 1069
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1070
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1071
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1072
	mov	DWORD PTR _Param$[ebp+4], 8
; Line 1073
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_GetXSizeEx
	add	esp, 8
; Line 1074
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Ge
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@GUI_GIF_Ge:
	DD	1
	DD	$LN4@GUI_GIF_Ge
$LN4@GUI_GIF_Ge:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Ge
$LN3@GUI_GIF_Ge:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_GetXSize ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetYSizeEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetYSizeEx
_TEXT	SEGMENT
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_GUI_GIF_GetYSizeEx PROC				; COMDAT
; Line 1080
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1081
	push	8
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	push	ecx
	call	__GetValue
	add	esp, 12					; 0000000cH
	movzx	eax, ax
; Line 1082
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_GetYSizeEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetYSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetYSize
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_GUI_GIF_GetYSize PROC					; COMDAT
; Line 1088
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1089
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1090
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1091
	mov	DWORD PTR _Param$[ebp+4], 10		; 0000000aH
; Line 1092
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_GetYSizeEx
	add	esp, 8
; Line 1093
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Ge@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@GUI_GIF_Ge@2:
	DD	1
	DD	$LN4@GUI_GIF_Ge@2
$LN4@GUI_GIF_Ge@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Ge@2
$LN3@GUI_GIF_Ge@2:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_GetYSize ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_DrawSubEx
EXTRN	_LCD_SetColorIndex:PROC
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_LCD_GetColorIndex:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_DrawSubEx
_TEXT	SEGMENT
_Height$ = -84						; size = 4
_Width$ = -72						; size = 4
_Rect$ = -60						; size = 8
_pContext$ = -44					; size = 4
_hContext$ = -32					; size = 4
_Result$ = -20						; size = 4
_OldColorIndex$ = -8					; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Index$ = 24						; size = 4
_GUI_GIF_DrawSubEx PROC					; COMDAT
; Line 1099
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1101
	mov	DWORD PTR _Result$[ebp], 1
; Line 1110
	push	16648					; 00004108H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 1111
	cmp	DWORD PTR _hContext$[ebp], 0
	je	$LN6@GUI_GIF_Dr
; Line 1112
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 1113
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1114
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1116
	lea	eax, DWORD PTR _Height$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Width$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__GetImageDimension
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN5@GUI_GIF_Dr
; Line 1120
	call	_LCD_GetColorIndex
	mov	DWORD PTR _OldColorIndex$[ebp], eax
; Line 1122
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 1123
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
	movsx	ecx, WORD PTR _Rect$[ebp]
	mov	edx, DWORD PTR _Width$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 1124
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	mov	edx, DWORD PTR _Height$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 1125
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@GUI_GIF_Dr
$LN3@GUI_GIF_Dr:
; Line 1127
	push	OFFSET __ClearUnusedPixels
	push	OFFSET __DrawFromDataBlock
	push	0
	push	0
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_GIF__DrawFromFilePointer
	add	esp, 32					; 00000020H
	mov	DWORD PTR _Result$[ebp], eax
; Line 1129
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_GIF_Dr
$LN4@GUI_GIF_Dr:
; Line 1131
	mov	eax, DWORD PTR _OldColorIndex$[ebp]
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
$LN5@GUI_GIF_Dr:
; Line 1133
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN6@GUI_GIF_Dr:
; Line 1136
	mov	eax, DWORD PTR _Result$[ebp]
; Line 1137
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@GUI_GIF_Dr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN13@GUI_GIF_Dr:
	DD	3
	DD	$LN12@GUI_GIF_Dr
$LN12@GUI_GIF_Dr:
	DD	-60					; ffffffc4H
	DD	8
	DD	$LN9@GUI_GIF_Dr
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN10@GUI_GIF_Dr
	DD	-84					; ffffffacH
	DD	4
	DD	$LN11@GUI_GIF_Dr
$LN11@GUI_GIF_Dr:
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	105					; 00000069H
	DB	103					; 00000067H
	DB	104					; 00000068H
	DB	116					; 00000074H
	DB	0
$LN10@GUI_GIF_Dr:
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN9@GUI_GIF_Dr:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_GIF_DrawSubEx ENDP
_TEXT	ENDS
EXTRN	_LCD_SetPixelIndex:PROC
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_LCD_GetpPalConvTable:PROC
EXTRN	_LCD_GetBkColorIndex:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawFromDataBlock
_TEXT	SEGMENT
tv129 = -420						; size = 4
_pData$ = -220						; size = 4
_pTrans$ = -208						; size = 4
_LogPalette$ = -196					; size = 12
_ColorIndex$ = -176					; size = 4
_BkColorIndex$ = -164					; size = 4
_Cnt$ = -152						; size = 4
_NumColors$ = -140					; size = 4
_Height$ = -128						; size = 4
_Width$ = -116						; size = 4
_XEnd$ = -104						; size = 4
_Interlace$ = -92					; size = 4
_Pass$ = -80						; size = 4
_YCnt$ = -68						; size = 4
_YPos$ = -56						; size = 4
_XPos$ = -44						; size = 4
_OldIndex$ = -32					; size = 4
_Index$ = -20						; size = 4
_Codesize$ = -8						; size = 4
_pContext$ = 8						; size = 4
_pDescriptor$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Transparency$ = 24					; size = 4
_Disposal$ = 28						; size = 4
_Num$ = 32						; size = 4
_Denom$ = 36						; size = 4
__DrawFromDataBlock PROC				; COMDAT
; Line 303
	push	ebp
	mov	ebp, esp
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 309
	mov	eax, DWORD PTR _Num$[ebp]
	mov	DWORD PTR _Num$[ebp], eax
; Line 310
	mov	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Denom$[ebp], eax
; Line 311
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 312
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _y0$[ebp], ecx
; Line 313
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _Width$[ebp], ecx
; Line 314
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _Height$[ebp], ecx
; Line 315
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _NumColors$[ebp], ecx
; Line 316
	mov	eax, DWORD PTR _x0$[ebp]
	mov	ecx, DWORD PTR _Width$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _XEnd$[ebp], edx
; Line 317
	call	_LCD_GetBkColorIndex
	mov	DWORD PTR _BkColorIndex$[ebp], eax
; Line 319
	mov	eax, DWORD PTR _NumColors$[ebp]
	mov	DWORD PTR _LogPalette$[ebp], eax
; Line 320
	mov	BYTE PTR _LogPalette$[ebp+4], 0
; Line 321
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 15624				; 00003d08H
	mov	DWORD PTR _LogPalette$[ebp+8], eax
; Line 322
	lea	eax, DWORD PTR _LogPalette$[ebp]
	push	eax
	call	_LCD_GetpPalConvTable
	add	esp, 4
	mov	DWORD PTR _pTrans$[ebp], eax
	cmp	DWORD PTR _pTrans$[ebp], 0
	jne	SHORT $LN33@DrawFromDa
; Line 323
	mov	eax, 1
	jmp	$LN34@DrawFromDa
$LN33@DrawFromDa:
; Line 325
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN32@DrawFromDa
; Line 326
	mov	eax, 1
	jmp	$LN34@DrawFromDa
$LN32@DrawFromDa:
; Line 328
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _Codesize$[ebp], ecx
; Line 329
	mov	eax, DWORD PTR _Codesize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__InitLZW
	add	esp, 8
; Line 330
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	and	ecx, 64					; 00000040H
	mov	DWORD PTR _Interlace$[ebp], ecx
; Line 331
	mov	DWORD PTR _YCnt$[ebp], 0
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _YPos$[ebp], eax
	mov	DWORD PTR _Pass$[ebp], 0
	jmp	SHORT $LN31@DrawFromDa
$LN30@DrawFromDa:
	mov	eax, DWORD PTR _YCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _YCnt$[ebp], eax
$LN31@DrawFromDa:
	mov	eax, DWORD PTR _YCnt$[ebp]
	cmp	eax, DWORD PTR _Height$[ebp]
	jge	$LN29@DrawFromDa
; Line 332
	mov	DWORD PTR _Cnt$[ebp], 0
; Line 333
	mov	DWORD PTR _OldIndex$[ebp], -1
; Line 334
	mov	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _XPos$[ebp], eax
	jmp	SHORT $LN28@DrawFromDa
$LN27@DrawFromDa:
	mov	eax, DWORD PTR _XPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _XPos$[ebp], eax
$LN28@DrawFromDa:
	mov	eax, DWORD PTR _XPos$[ebp]
	cmp	eax, DWORD PTR _XEnd$[ebp]
	jg	$LN26@DrawFromDa
; Line 335
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 12566				; 00003116H
	mov	ecx, DWORD PTR _pContext$[ebp]
	cmp	DWORD PTR [ecx+15568], eax
	jbe	SHORT $LN25@DrawFromDa
; Line 336
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR [eax+15568]
	sub	ecx, 1
	mov	DWORD PTR tv129[ebp], ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	mov	eax, DWORD PTR tv129[ebp]
	mov	DWORD PTR [edx+15568], eax
	mov	ecx, DWORD PTR tv129[ebp]
	movzx	edx, BYTE PTR [ecx]
	mov	DWORD PTR _Index$[ebp], edx
; Line 337
	jmp	SHORT $LN24@DrawFromDa
$LN25@DrawFromDa:
; Line 338
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	_GUI_GIF__GetNextByte
	add	esp, 4
	mov	DWORD PTR _Index$[ebp], eax
$LN24@DrawFromDa:
; Line 340
	cmp	DWORD PTR _Index$[ebp], -2		; fffffffeH
	jne	SHORT $LN23@DrawFromDa
; Line 341
	xor	eax, eax
	jmp	$LN34@DrawFromDa
$LN23@DrawFromDa:
; Line 343
	cmp	DWORD PTR _Index$[ebp], 0
	jl	SHORT $LN21@DrawFromDa
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumColors$[ebp]
	jl	SHORT $LN22@DrawFromDa
$LN21@DrawFromDa:
; Line 344
	mov	eax, 1
	jmp	$LN34@DrawFromDa
$LN22@DrawFromDa:
; Line 347
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _OldIndex$[ebp]
	jne	SHORT $LN20@DrawFromDa
	mov	eax, DWORD PTR _XPos$[ebp]
	cmp	eax, DWORD PTR _XEnd$[ebp]
	jg	SHORT $LN20@DrawFromDa
; Line 348
	mov	eax, DWORD PTR _Cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _Cnt$[ebp], eax
; Line 349
	jmp	$LN19@DrawFromDa
$LN20@DrawFromDa:
; Line 350
	cmp	DWORD PTR _Cnt$[ebp], 0
	je	$LN18@DrawFromDa
; Line 351
	mov	eax, DWORD PTR _OldIndex$[ebp]
	cmp	eax, DWORD PTR _Transparency$[ebp]
	je	SHORT $LN17@DrawFromDa
; Line 352
	mov	eax, DWORD PTR _OldIndex$[ebp]
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 353
	mov	eax, DWORD PTR _XPos$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _YPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XPos$[ebp]
	sub	edx, DWORD PTR _Cnt$[ebp]
	sub	edx, 1
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN16@DrawFromDa
$LN17@DrawFromDa:
; Line 354
	cmp	DWORD PTR _Disposal$[ebp], 2
	jne	SHORT $LN16@DrawFromDa
; Line 355
	mov	eax, DWORD PTR _BkColorIndex$[ebp]
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 356
	mov	eax, DWORD PTR _XPos$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _YPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XPos$[ebp]
	sub	edx, DWORD PTR _Cnt$[ebp]
	sub	edx, 1
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN16@DrawFromDa:
; Line 358
	mov	DWORD PTR _Cnt$[ebp], 0
; Line 359
	jmp	SHORT $LN19@DrawFromDa
$LN18@DrawFromDa:
; Line 360
	cmp	DWORD PTR _OldIndex$[ebp], 0
	jl	SHORT $LN19@DrawFromDa
; Line 361
	mov	eax, DWORD PTR _OldIndex$[ebp]
	cmp	eax, DWORD PTR _Transparency$[ebp]
	je	SHORT $LN12@DrawFromDa
; Line 362
	mov	eax, DWORD PTR _OldIndex$[ebp]
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _YPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _XPos$[ebp]
	sub	ecx, 1
	push	ecx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN19@DrawFromDa
$LN12@DrawFromDa:
; Line 363
	cmp	DWORD PTR _Disposal$[ebp], 2
	jne	SHORT $LN19@DrawFromDa
; Line 364
	mov	eax, DWORD PTR _BkColorIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XPos$[ebp]
	sub	edx, 1
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
$LN19@DrawFromDa:
; Line 369
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _OldIndex$[ebp], eax
; Line 370
	jmp	$LN27@DrawFromDa
$LN26@DrawFromDa:
; Line 371
	mov	eax, DWORD PTR _OldIndex$[ebp]
	cmp	eax, DWORD PTR _Transparency$[ebp]
	jne	SHORT $LN8@DrawFromDa
	cmp	DWORD PTR _Disposal$[ebp], 2
	jne	SHORT $LN9@DrawFromDa
$LN8@DrawFromDa:
; Line 372
	mov	eax, DWORD PTR _OldIndex$[ebp]
	cmp	eax, DWORD PTR _Transparency$[ebp]
	je	SHORT $LN7@DrawFromDa
; Line 373
	mov	eax, DWORD PTR _OldIndex$[ebp]
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _ColorIndex$[ebp], edx
; Line 374
	jmp	SHORT $LN6@DrawFromDa
$LN7@DrawFromDa:
; Line 375
	mov	eax, DWORD PTR _BkColorIndex$[ebp]
	mov	DWORD PTR _ColorIndex$[ebp], eax
$LN6@DrawFromDa:
; Line 377
	cmp	DWORD PTR _Cnt$[ebp], 0
	je	SHORT $LN5@DrawFromDa
; Line 378
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 379
	mov	eax, DWORD PTR _XPos$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _YPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XPos$[ebp]
	sub	edx, DWORD PTR _Cnt$[ebp]
	sub	edx, 1
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 380
	jmp	SHORT $LN9@DrawFromDa
$LN5@DrawFromDa:
; Line 381
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YPos$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XEnd$[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
$LN9@DrawFromDa:
; Line 385
	cmp	DWORD PTR _Interlace$[ebp], 0
	je	SHORT $LN3@DrawFromDa
; Line 386
	mov	eax, DWORD PTR _Pass$[ebp]
	mov	ecx, DWORD PTR _YPos$[ebp]
	add	ecx, DWORD PTR _GUI_GIF__aInterlaceOffset[eax*4]
	mov	DWORD PTR _YPos$[ebp], ecx
; Line 387
	mov	eax, DWORD PTR _YPos$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _Height$[ebp]
	jl	SHORT $LN2@DrawFromDa
; Line 388
	mov	eax, DWORD PTR _Pass$[ebp]
	add	eax, 1
	mov	DWORD PTR _Pass$[ebp], eax
; Line 389
	mov	eax, DWORD PTR _Pass$[ebp]
	mov	ecx, DWORD PTR _GUI_GIF__aInterlaceYPos[eax*4]
	add	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _YPos$[ebp], ecx
$LN2@DrawFromDa:
; Line 391
	jmp	SHORT $LN1@DrawFromDa
$LN3@DrawFromDa:
; Line 392
	mov	eax, DWORD PTR _YPos$[ebp]
	add	eax, 1
	mov	DWORD PTR _YPos$[ebp], eax
$LN1@DrawFromDa:
; Line 394
	jmp	$LN30@DrawFromDa
$LN29@DrawFromDa:
; Line 395
	xor	eax, eax
$LN34@DrawFromDa:
; Line 396
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@DrawFromDa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN39@DrawFromDa:
	DD	2
	DD	$LN38@DrawFromDa
$LN38@DrawFromDa:
	DD	-196					; ffffff3cH
	DD	12					; 0000000cH
	DD	$LN36@DrawFromDa
	DD	-220					; ffffff24H
	DD	4
	DD	$LN37@DrawFromDa
$LN37@DrawFromDa:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN36@DrawFromDa:
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
__DrawFromDataBlock ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ClearUnusedPixels
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_pDescriptor$ = 16					; size = 4
_pInfo$ = 20						; size = 4
_Num$ = 24						; size = 4
_Denom$ = 28						; size = 4
__ClearUnusedPixels PROC				; COMDAT
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 716
	mov	eax, DWORD PTR _Num$[ebp]
	mov	DWORD PTR _Num$[ebp], eax
; Line 717
	mov	eax, DWORD PTR _Denom$[ebp]
	mov	DWORD PTR _Denom$[ebp], eax
; Line 718
	call	_LCD_GetBkColorIndex
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 719
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [eax+4]
	cmp	edx, DWORD PTR [ecx+4]
	jle	SHORT $LN4@ClearUnuse
; Line 723
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _y0$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	lea	edx, DWORD PTR [edx+ecx-1]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR [edx]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN4@ClearUnuse:
; Line 725
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jle	SHORT $LN3@ClearUnuse
; Line 729
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	mov	edx, DWORD PTR _pDescriptor$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR [edx]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN3@ClearUnuse:
; Line 731
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pDescriptor$[ebp]
	add	ecx, DWORD PTR [edx+12]
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [eax+4]
	mov	eax, DWORD PTR _pInfo$[ebp]
	add	edx, DWORD PTR [eax+12]
	cmp	ecx, edx
	jge	SHORT $LN2@ClearUnuse
; Line 735
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+edx-1]
	push	eax
	mov	ecx, DWORD PTR _pDescriptor$[ebp]
	mov	edx, DWORD PTR _y0$[ebp]
	add	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	lea	edx, DWORD PTR [edx+ecx-1]
	push	edx
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR [eax]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN2@ClearUnuse:
; Line 737
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDescriptor$[ebp]
	add	ecx, DWORD PTR [edx+8]
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	eax, DWORD PTR _pInfo$[ebp]
	add	edx, DWORD PTR [eax+8]
	cmp	ecx, edx
	jge	SHORT $LN5@ClearUnuse
; Line 741
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR [edx+12]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	lea	eax, DWORD PTR [eax+edx-1]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	mov	edx, DWORD PTR _y0$[ebp]
	add	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _pDescriptor$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _pDescriptor$[ebp]
	mov	eax, DWORD PTR [edx+8]
	lea	ecx, DWORD PTR [ecx+eax-1]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN5@ClearUnuse:
; Line 743
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ClearUnusedPixels ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_DrawSub
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_DrawSub
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Index$ = 24						; size = 4
_GUI_GIF_DrawSub PROC					; COMDAT
; Line 1143
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1144
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1145
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1146
	mov	eax, DWORD PTR _NumBytes$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1147
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_DrawSubEx
	add	esp, 20					; 00000014H
; Line 1148
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Dr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GUI_GIF_Dr@2:
	DD	1
	DD	$LN4@GUI_GIF_Dr@2
$LN4@GUI_GIF_Dr@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Dr@2
$LN3@GUI_GIF_Dr@2:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_DrawSub ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_DrawEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_DrawEx
_TEXT	SEGMENT
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_GIF_DrawEx PROC					; COMDAT
; Line 1154
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1155
	push	0
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfGetData$[ebp]
	push	eax
	call	_GUI_GIF_DrawSubEx
	add	esp, 20					; 00000014H
; Line 1156
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_DrawEx ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_Draw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_Draw
_TEXT	SEGMENT
_pGIF$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_GIF_Draw PROC					; COMDAT
; Line 1162
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1163
	push	0
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumBytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _pGIF$[ebp]
	push	eax
	call	_GUI_GIF_DrawSub
	add	esp, 20					; 00000014H
; Line 1164
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_Draw ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetInfoEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetInfoEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pContext$ = -20					; size = 4
_hContext$ = -8						; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_pInfo$ = 16						; size = 4
_GUI_GIF_GetInfoEx PROC					; COMDAT
; Line 1170
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1173
	mov	DWORD PTR _r$[ebp], 1
; Line 1176
	push	16648					; 00004108H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 1177
	cmp	DWORD PTR _hContext$[ebp], 0
	je	SHORT $LN1@GUI_GIF_Ge@3
; Line 1178
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 1179
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1180
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1181
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__GetGIFInfo
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 1182
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN1@GUI_GIF_Ge@3:
; Line 1185
	mov	eax, DWORD PTR _r$[ebp]
; Line 1186
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_GetInfoEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetGIFInfo
_TEXT	SEGMENT
tv78 = -244						; size = 4
_pData$ = -44						; size = 4
_ImageCnt$ = -32					; size = 4
_NumColors$ = -20					; size = 4
_Introducer$ = -5					; size = 1
_pContext$ = 8						; size = 4
_pInfo$ = 12						; size = 4
__GetGIFInfo PROC					; COMDAT
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 575
	lea	eax, DWORD PTR _NumColors$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _pInfo$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetSizeAndColorTable
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN14@GetGIFInfo
; Line 576
	mov	eax, 1
	jmp	$LN15@GetGIFInfo
$LN14@GetGIFInfo:
; Line 578
	mov	DWORD PTR _ImageCnt$[ebp], 0
$LN13@GetGIFInfo:
; Line 581
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN10@GetGIFInfo
; Line 582
	mov	eax, 1
	jmp	$LN15@GetGIFInfo
$LN10@GetGIFInfo:
; Line 584
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Introducer$[ebp], cl
; Line 585
	mov	al, BYTE PTR _Introducer$[ebp]
	mov	BYTE PTR tv78[ebp], al
	cmp	BYTE PTR tv78[ebp], 33			; 00000021H
	je	SHORT $LN3@GetGIFInfo
	cmp	BYTE PTR tv78[ebp], 44			; 0000002cH
	je	SHORT $LN7@GetGIFInfo
	cmp	BYTE PTR tv78[ebp], 59			; 0000003bH
	je	SHORT $LN4@GetGIFInfo
	jmp	SHORT $LN1@GetGIFInfo
$LN7@GetGIFInfo:
; Line 587
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__SkipLocalColorTable
	add	esp, 4
$LN6@GetGIFInfo:
; Line 588
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN5@GetGIFInfo
	jmp	SHORT $LN6@GetGIFInfo
$LN5@GetGIFInfo:
; Line 589
	mov	eax, DWORD PTR _ImageCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _ImageCnt$[ebp], eax
; Line 590
	jmp	SHORT $LN12@GetGIFInfo
$LN4@GetGIFInfo:
; Line 592
	jmp	SHORT $LN12@GetGIFInfo
$LN3@GetGIFInfo:
; Line 594
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__ReadExtension
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@GetGIFInfo
; Line 595
	mov	eax, 1
	jmp	SHORT $LN15@GetGIFInfo
$LN2@GetGIFInfo:
; Line 597
	jmp	SHORT $LN12@GetGIFInfo
$LN1@GetGIFInfo:
; Line 599
	mov	eax, 1
	jmp	SHORT $LN15@GetGIFInfo
$LN12@GetGIFInfo:
; Line 601
	movzx	eax, BYTE PTR _Introducer$[ebp]
	cmp	eax, 59					; 0000003bH
	jne	$LN13@GetGIFInfo
; Line 602
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR _ImageCnt$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 603
	xor	eax, eax
$LN15@GetGIFInfo:
; Line 604
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@GetGIFInfo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN20@GetGIFInfo:
	DD	2
	DD	$LN19@GetGIFInfo
$LN19@GetGIFInfo:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN17@GetGIFInfo
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN18@GetGIFInfo
$LN18@GetGIFInfo:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN17@GetGIFInfo:
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
__GetGIFInfo ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SkipLocalColorTable
_TEXT	SEGMENT
_NumColors$10863 = -56					; size = 4
_RemBytes$10862 = -44					; size = 4
_NumBytes$10861 = -32					; size = 4
_pData$ = -20						; size = 4
_Flags$ = -5						; size = 1
_pContext$ = 8						; size = 4
__SkipLocalColorTable PROC				; COMDAT
; Line 535
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 538
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	9
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN9@SkipLocalC
; Line 539
	jmp	$LN10@SkipLocalC
$LN9@SkipLocalC:
; Line 541
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax+8]
	mov	BYTE PTR _Flags$[ebp], cl
; Line 542
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 128				; 00000080H
	je	SHORT $LN8@SkipLocalC
; Line 545
	movzx	ecx, BYTE PTR _Flags$[ebp]
	and	ecx, 7
	mov	eax, 2
	shl	eax, cl
	mov	DWORD PTR _NumColors$10863[ebp], eax
; Line 546
	mov	eax, DWORD PTR _NumColors$10863[ebp]
	imul	eax, 3
	add	eax, 1
	mov	DWORD PTR _RemBytes$10862[ebp], eax
$LN7@SkipLocalC:
; Line 547
	cmp	DWORD PTR _RemBytes$10862[ebp], 0
	je	SHORT $LN6@SkipLocalC
; Line 548
	cmp	DWORD PTR _RemBytes$10862[ebp], 256	; 00000100H
	jle	SHORT $LN5@SkipLocalC
; Line 549
	mov	DWORD PTR _NumBytes$10861[ebp], 256	; 00000100H
; Line 550
	jmp	SHORT $LN4@SkipLocalC
$LN5@SkipLocalC:
; Line 551
	mov	eax, DWORD PTR _RemBytes$10862[ebp]
	mov	DWORD PTR _NumBytes$10861[ebp], eax
$LN4@SkipLocalC:
; Line 553
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumBytes$10861[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN3@SkipLocalC
; Line 554
	jmp	SHORT $LN10@SkipLocalC
$LN3@SkipLocalC:
; Line 556
	mov	eax, DWORD PTR _RemBytes$10862[ebp]
	sub	eax, DWORD PTR _NumBytes$10861[ebp]
	mov	DWORD PTR _RemBytes$10862[ebp], eax
; Line 557
	jmp	SHORT $LN7@SkipLocalC
$LN6@SkipLocalC:
; Line 558
	jmp	SHORT $LN10@SkipLocalC
$LN8@SkipLocalC:
; Line 560
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
$LN10@SkipLocalC:
; Line 564
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@SkipLocalC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@SkipLocalC:
	DD	1
	DD	$LN13@SkipLocalC
$LN13@SkipLocalC:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN12@SkipLocalC
$LN12@SkipLocalC:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
__SkipLocalColorTable ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetInfo
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
_pInfo$ = 16						; size = 4
_GUI_GIF_GetInfo PROC					; COMDAT
; Line 1192
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1193
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1194
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1195
	mov	eax, DWORD PTR _NumBytes$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1196
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Param$[ebp]
	push	ecx
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_GetInfoEx
	add	esp, 12					; 0000000cH
; Line 1197
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Ge@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GUI_GIF_Ge@4:
	DD	1
	DD	$LN4@GUI_GIF_Ge@4
$LN4@GUI_GIF_Ge@4:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Ge@4
$LN3@GUI_GIF_Ge@4:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_GetInfo ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetImageInfoEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetImageInfoEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pContext$ = -20					; size = 4
_hContext$ = -8						; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_pInfo$ = 16						; size = 4
_Index$ = 20						; size = 4
_GUI_GIF_GetImageInfoEx PROC				; COMDAT
; Line 1203
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1206
	mov	DWORD PTR _r$[ebp], 1
; Line 1209
	push	16648					; 00004108H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 1210
	cmp	DWORD PTR _hContext$[ebp], 0
	je	SHORT $LN1@GUI_GIF_Ge@5
; Line 1211
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 1212
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1213
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1214
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pContext$[ebp]
	push	edx
	call	__GetImageInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 1215
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN1@GUI_GIF_Ge@5:
; Line 1218
	mov	eax, DWORD PTR _r$[ebp]
; Line 1219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_GetImageInfoEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetImageInfo
_TEXT	SEGMENT
tv77 = -244						; size = 4
_pData$ = -44						; size = 4
_ImageCnt$ = -32					; size = 4
_NumColors$ = -20					; size = 4
_Introducer$ = -5					; size = 1
_pContext$ = 8						; size = 4
_pInfo$ = 12						; size = 4
_Index$ = 16						; size = 4
__GetImageInfo PROC					; COMDAT
; Line 610
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 615
	lea	eax, DWORD PTR _NumColors$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__GetSizeAndColorTable
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN16@GetImageIn
; Line 616
	mov	eax, 1
	jmp	$LN17@GetImageIn
$LN16@GetImageIn:
; Line 618
	mov	DWORD PTR _ImageCnt$[ebp], 0
$LN15@GetImageIn:
; Line 621
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN12@GetImageIn
; Line 622
	mov	eax, 1
	jmp	$LN17@GetImageIn
$LN12@GetImageIn:
; Line 624
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Introducer$[ebp], cl
; Line 625
	mov	al, BYTE PTR _Introducer$[ebp]
	mov	BYTE PTR tv77[ebp], al
	cmp	BYTE PTR tv77[ebp], 33			; 00000021H
	je	$LN3@GetImageIn
	cmp	BYTE PTR tv77[ebp], 44			; 0000002cH
	je	SHORT $LN9@GetImageIn
	cmp	BYTE PTR tv77[ebp], 59			; 0000003bH
	je	$LN4@GetImageIn
	jmp	$LN1@GetImageIn
$LN9@GetImageIn:
; Line 627
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _ImageCnt$[ebp]
	jne	SHORT $LN8@GetImageIn
; Line 628
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	8
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN7@GetImageIn
; Line 629
	mov	eax, 1
	jmp	$LN17@GetImageIn
$LN7@GetImageIn:
; Line 631
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 632
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 633
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 634
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	movzx	ecx, ax
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 635
	xor	eax, eax
	jmp	SHORT $LN17@GetImageIn
$LN8@GetImageIn:
; Line 637
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__SkipLocalColorTable
	add	esp, 4
$LN6@GetImageIn:
; Line 638
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN5@GetImageIn
	jmp	SHORT $LN6@GetImageIn
$LN5@GetImageIn:
; Line 639
	mov	eax, DWORD PTR _ImageCnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _ImageCnt$[ebp], eax
; Line 640
	jmp	SHORT $LN14@GetImageIn
$LN4@GetImageIn:
; Line 642
	jmp	SHORT $LN14@GetImageIn
$LN3@GetImageIn:
; Line 644
	push	0
	mov	eax, DWORD PTR _Index$[ebp]
	sub	eax, DWORD PTR _ImageCnt$[ebp]
	neg	eax
	sbb	eax, eax
	not	eax
	and	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__ReadExtension
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@GetImageIn
; Line 645
	mov	eax, 1
	jmp	SHORT $LN17@GetImageIn
$LN2@GetImageIn:
; Line 647
	jmp	SHORT $LN14@GetImageIn
$LN1@GetImageIn:
; Line 649
	mov	eax, 1
	jmp	SHORT $LN17@GetImageIn
$LN14@GetImageIn:
; Line 651
	movzx	eax, BYTE PTR _Introducer$[ebp]
	cmp	eax, 59					; 0000003bH
	jne	$LN15@GetImageIn
; Line 652
	xor	eax, eax
$LN17@GetImageIn:
; Line 653
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@GetImageIn
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN22@GetImageIn:
	DD	2
	DD	$LN21@GetImageIn
$LN21@GetImageIn:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN19@GetImageIn
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN20@GetImageIn
$LN20@GetImageIn:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN19@GetImageIn:
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
__GetImageInfo ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetImageInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetImageInfo
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
_pInfo$ = 16						; size = 4
_Index$ = 20						; size = 4
_GUI_GIF_GetImageInfo PROC				; COMDAT
; Line 1225
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1226
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1227
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1228
	mov	eax, DWORD PTR _NumBytes$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1229
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInfo$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Param$[ebp]
	push	edx
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_GetImageInfoEx
	add	esp, 16					; 00000010H
; Line 1230
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Ge@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GUI_GIF_Ge@6:
	DD	1
	DD	$LN4@GUI_GIF_Ge@6
$LN4@GUI_GIF_Ge@6:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Ge@6
$LN3@GUI_GIF_Ge@6:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_GetImageInfo ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetCommentEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetCommentEx
_TEXT	SEGMENT
_r$ = -32						; size = 4
_pContext$ = -20					; size = 4
_hContext$ = -8						; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_pBuffer$ = 16						; size = 4
_MaxSize$ = 20						; size = 4
_Index$ = 24						; size = 4
_GUI_GIF_GetCommentEx PROC				; COMDAT
; Line 1236
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1239
	mov	DWORD PTR _r$[ebp], 1
; Line 1242
	push	16648					; 00004108H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hContext$[ebp], eax
; Line 1243
	cmp	DWORD PTR _hContext$[ebp], 0
	je	SHORT $LN1@GUI_GIF_Ge@7
; Line 1244
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pContext$[ebp], eax
; Line 1245
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 1246
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 1247
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MaxSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetGIFComment
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 1248
	mov	eax, DWORD PTR _hContext$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN1@GUI_GIF_Ge@7:
; Line 1251
	mov	eax, DWORD PTR _r$[ebp]
; Line 1252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GIF_GetCommentEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetGIFComment
_TEXT	SEGMENT
tv77 = -256						; size = 4
_pData$ = -56						; size = 4
_Size$ = -44						; size = 4
_CommentCnt$ = -32					; size = 4
_NumColors$ = -20					; size = 4
_Introducer$ = -5					; size = 1
_pContext$ = 8						; size = 4
_pBuffer$ = 12						; size = 4
_MaxSize$ = 16						; size = 4
_Index$ = 20						; size = 4
__GetGIFComment PROC					; COMDAT
; Line 672
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 677
	lea	eax, DWORD PTR _NumColors$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	__GetSizeAndColorTable
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN14@GetGIFComm
; Line 678
	mov	eax, 1
	jmp	$LN15@GetGIFComm
$LN14@GetGIFComm:
; Line 680
	mov	DWORD PTR _Size$[ebp], 0
	mov	eax, DWORD PTR _Size$[ebp]
	mov	DWORD PTR _CommentCnt$[ebp], eax
$LN13@GetGIFComm:
; Line 683
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN10@GetGIFComm
; Line 684
	mov	eax, 1
	jmp	$LN15@GetGIFComm
$LN10@GetGIFComm:
; Line 686
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Introducer$[ebp], cl
; Line 687
	mov	al, BYTE PTR _Introducer$[ebp]
	mov	BYTE PTR tv77[ebp], al
	cmp	BYTE PTR tv77[ebp], 33			; 00000021H
	je	SHORT $LN3@GetGIFComm
	cmp	BYTE PTR tv77[ebp], 44			; 0000002cH
	je	SHORT $LN7@GetGIFComm
	cmp	BYTE PTR tv77[ebp], 59			; 0000003bH
	je	SHORT $LN4@GetGIFComm
	jmp	SHORT $LN1@GetGIFComm
$LN7@GetGIFComm:
; Line 689
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__SkipLocalColorTable
	add	esp, 4
$LN6@GetGIFComm:
; Line 690
	push	0
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN5@GetGIFComm
	jmp	SHORT $LN6@GetGIFComm
$LN5@GetGIFComm:
; Line 691
	jmp	SHORT $LN12@GetGIFComm
$LN4@GetGIFComm:
; Line 693
	jmp	SHORT $LN12@GetGIFComm
$LN3@GetGIFComm:
; Line 695
	lea	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MaxSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Index$[ebp]
	sub	edx, DWORD PTR _CommentCnt$[ebp]
	neg	edx
	sbb	edx, edx
	not	edx
	and	edx, DWORD PTR _pBuffer$[ebp]
	push	edx
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__ReadComment
	add	esp, 16					; 00000010H
; Line 696
	cmp	DWORD PTR _Size$[ebp], 0
	je	SHORT $LN2@GetGIFComm
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _CommentCnt$[ebp]
	jne	SHORT $LN2@GetGIFComm
; Line 697
	xor	eax, eax
	jmp	SHORT $LN15@GetGIFComm
$LN2@GetGIFComm:
; Line 699
	jmp	SHORT $LN12@GetGIFComm
$LN1@GetGIFComm:
; Line 701
	mov	eax, 1
	jmp	SHORT $LN15@GetGIFComm
$LN12@GetGIFComm:
; Line 703
	movzx	eax, BYTE PTR _Introducer$[ebp]
	cmp	eax, 59					; 0000003bH
	jne	$LN13@GetGIFComm
; Line 704
	mov	eax, 1
$LN15@GetGIFComm:
; Line 705
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@GetGIFComm
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@GetGIFComm:
	DD	3
	DD	$LN20@GetGIFComm
$LN20@GetGIFComm:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN17@GetGIFComm
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN18@GetGIFComm
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN19@GetGIFComm
$LN19@GetGIFComm:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN18@GetGIFComm:
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN17@GetGIFComm:
	DB	78					; 0000004eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	0
__GetGIFComment ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ReadComment
_TEXT	SEGMENT
tv71 = -232						; size = 4
_pData$ = -32						; size = 4
_Size$ = -20						; size = 4
_Label$ = -5						; size = 1
_pContext$ = 8						; size = 4
_pBuffer$ = 12						; size = 4
_MaxSize$ = 16						; size = 4
_pSize$ = 20						; size = 4
__ReadComment PROC					; COMDAT
; Line 245
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 249
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN13@ReadCommen
; Line 250
	mov	eax, 1
	jmp	$LN14@ReadCommen
$LN13@ReadCommen:
; Line 252
	mov	eax, DWORD PTR _pData$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Label$[ebp], cl
; Line 253
	movzx	eax, BYTE PTR _Label$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 254		; 000000feH
	ja	$LN11@ReadCommen
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN16@ReadCommen[edx]
	jmp	DWORD PTR $LN20@ReadCommen[eax*4]
$LN9@ReadCommen:
; Line 256
	push	OFFSET __aBuffer
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	test	eax, eax
	jle	SHORT $LN8@ReadCommen
	jmp	SHORT $LN9@ReadCommen
$LN8@ReadCommen:
; Line 257
	xor	eax, eax
	jmp	$LN14@ReadCommen
$LN7@ReadCommen:
; Line 259
	push	OFFSET __aBuffer
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	mov	DWORD PTR _Size$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _Size$[ebp]
	cmp	eax, DWORD PTR _MaxSize$[ebp]
	jle	SHORT $LN6@ReadCommen
; Line 261
	mov	eax, DWORD PTR _MaxSize$[ebp]
	mov	DWORD PTR _Size$[ebp], eax
$LN6@ReadCommen:
; Line 263
	cmp	DWORD PTR _pBuffer$[ebp], 0
	je	SHORT $LN5@ReadCommen
; Line 264
	mov	eax, DWORD PTR _pSize$[ebp]
	mov	ecx, DWORD PTR _Size$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 265
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	push	OFFSET __aBuffer
	mov	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN5@ReadCommen:
; Line 267
	xor	eax, eax
	jmp	SHORT $LN14@ReadCommen
$LN4@ReadCommen:
; Line 269
	push	OFFSET __aBuffer
	mov	eax, DWORD PTR _pContext$[ebp]
	push	eax
	call	__GetDataBlock
	add	esp, 8
	cmp	eax, 4
	je	SHORT $LN3@ReadCommen
; Line 270
	mov	eax, 1
	jmp	SHORT $LN14@ReadCommen
$LN3@ReadCommen:
; Line 273
	push	0
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pContext$[ebp]
	push	ecx
	call	_GUI_GIF__ReadData
	add	esp, 16					; 00000010H
	test	eax, eax
	je	SHORT $LN2@ReadCommen
; Line 274
	mov	eax, 1
	jmp	SHORT $LN14@ReadCommen
$LN2@ReadCommen:
; Line 276
	mov	eax, DWORD PTR _pData$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	SHORT $LN1@ReadCommen
; Line 277
	mov	eax, 1
	jmp	SHORT $LN14@ReadCommen
$LN1@ReadCommen:
; Line 279
	xor	eax, eax
	jmp	SHORT $LN14@ReadCommen
$LN11@ReadCommen:
; Line 281
	mov	eax, 1
$LN14@ReadCommen:
; Line 282
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@ReadCommen
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN19@ReadCommen:
	DD	1
	DD	$LN18@ReadCommen
$LN18@ReadCommen:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN17@ReadCommen
$LN17@ReadCommen:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
	npad	2
$LN20@ReadCommen:
	DD	$LN9@ReadCommen
	DD	$LN4@ReadCommen
	DD	$LN7@ReadCommen
	DD	$LN11@ReadCommen
$LN16@ReadCommen:
	DB	0
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	3
	DB	1
	DB	3
	DB	3
	DB	3
	DB	3
	DB	2
	DB	0
__ReadComment ENDP
_TEXT	ENDS
PUBLIC	_GUI_GIF_GetComment
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GIF_GetComment
_TEXT	SEGMENT
_Param$ = -12						; size = 8
_pGIF$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
_pBuffer$ = 16						; size = 4
_MaxSize$ = 20						; size = 4
_Index$ = 24						; size = 4
_GUI_GIF_GetComment PROC				; COMDAT
; Line 1258
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1259
	mov	DWORD PTR _Param$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1260
	mov	eax, DWORD PTR _pGIF$[ebp]
	mov	DWORD PTR _Param$[ebp], eax
; Line 1261
	mov	eax, DWORD PTR _NumBytes$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 1262
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MaxSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pBuffer$[ebp]
	push	edx
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	push	OFFSET _GUI_GIF__GetData
	call	_GUI_GIF_GetCommentEx
	add	esp, 20					; 00000014H
; Line 1263
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GIF_Ge@8
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GUI_GIF_Ge@8:
	DD	1
	DD	$LN4@GUI_GIF_Ge@8
$LN4@GUI_GIF_Ge@8:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GUI_GIF_Ge@8
$LN3@GUI_GIF_Ge@8:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
_GUI_GIF_GetComment ENDP
_TEXT	ENDS
END
