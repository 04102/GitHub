; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\GRAPH.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GRAPH__DefaultProps
_DATA	SEGMENT
_GRAPH__DefaultProps DD 00H
	DD	0c0c0c0H
	DD	0ffffffH
	DD	0404040H
	DD	032H
	DD	032H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	ORG $+8
$SG11654 DB	'GRAPH.c: Wrong handle type or Object not init''ed', 00H
_DATA	ENDS
PUBLIC	_GRAPH_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\graph.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GRAPH_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_GRAPH_LockH PROC					; COMDAT
; Line 446
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 447
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 448
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@GRAPH_Lock
; Line 449
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+156], 1196573008		; 47524150H
	je	SHORT $LN2@GRAPH_Lock
; Line 450
	push	OFFSET $SG11654
	call	_GUI_ErrorOut
	add	esp, 4
; Line 451
	xor	eax, eax
	jmp	SHORT $LN3@GRAPH_Lock
$LN2@GRAPH_Lock:
; Line 454
	mov	eax, DWORD PTR _p$[ebp]
$LN3@GRAPH_Lock:
; Line 455
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_LockH ENDP
_TEXT	ENDS
PUBLIC	_GRAPH__AddValue
EXTRN	_memmove:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH__AddValue
_TEXT	SEGMENT
tv92 = -196						; size = 4
_pDataObj$ = 8						; size = 4
_pData$ = 12						; size = 4
_pValue$ = 16						; size = 4
_Size$ = 20						; size = 4
_GRAPH__AddValue PROC					; COMDAT
; Line 468
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 469
	mov	eax, DWORD PTR _pDataObj$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN4@GRAPH__Add
; Line 470
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR _pDataObj$[ebp]
	mov	edx, DWORD PTR [eax+12]
	cmp	edx, DWORD PTR [ecx+16]
	jne	SHORT $LN2@GRAPH__Add
; Line 471
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	imul	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pData$[ebp]
	add	edx, DWORD PTR _Size$[ebp]
	push	edx
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 472
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pValue$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDataObj$[ebp]
	mov	eax, DWORD PTR [edx+12]
	sub	eax, 1
	imul	eax, DWORD PTR _Size$[ebp]
	add	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_memmove
	add	esp, 12					; 0000000cH
; Line 473
	jmp	SHORT $LN1@GRAPH__Add
$LN2@GRAPH__Add:
; Line 474
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR _Size$[ebp]
	imul	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR tv92[ebp], ecx
	mov	edx, DWORD PTR _pDataObj$[ebp]
	mov	eax, DWORD PTR [edx+12]
	add	eax, 1
	mov	ecx, DWORD PTR _pDataObj$[ebp]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _Size$[ebp]
	push	edx
	mov	eax, DWORD PTR _pValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR tv92[ebp]
	push	ecx
	call	_memmove
	add	esp, 12					; 0000000cH
$LN1@GRAPH__Add:
; Line 476
	mov	eax, DWORD PTR _pDataObj$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	__InvalidateGraph
	add	esp, 4
$LN4@GRAPH__Add:
; Line 478
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH__AddValue ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __InvalidateGraph
_TEXT	SEGMENT
_pObj$ = -84						; size = 4
_Rect$ = -72						; size = 8
_EffectSize$ = -56					; size = 4
_BorderB$ = -44						; size = 4
_BorderR$ = -32						; size = 4
_BorderT$ = -20						; size = 4
_BorderL$ = -8						; size = 4
_hObj$ = 8						; size = 4
__InvalidateGraph PROC					; COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 370
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 371
	lea	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderB$[ebp]
	push	ecx
	lea	edx, DWORD PTR _BorderR$[ebp]
	push	edx
	lea	eax, DWORD PTR _BorderT$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderL$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetParams
	add	esp, 24					; 00000018H
; Line 372
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 373
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 374
	movsx	eax, WORD PTR _Rect$[ebp]
	add	eax, DWORD PTR _BorderL$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 375
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _BorderT$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 376
	movsx	eax, WORD PTR _Rect$[ebp+4]
	sub	eax, DWORD PTR _BorderR$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 377
	movsx	eax, WORD PTR _Rect$[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 378
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Invalidate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@Invalidate:
	DD	6
	DD	$LN9@Invalidate
$LN9@Invalidate:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@Invalidate
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@Invalidate
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@Invalidate
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN6@Invalidate
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN7@Invalidate
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN8@Invalidate
$LN8@Invalidate:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN7@Invalidate:
	DB	69					; 00000045H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN6@Invalidate:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	0
$LN5@Invalidate:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	0
$LN4@Invalidate:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	0
$LN3@Invalidate:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	0
__InvalidateGraph ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetParams
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_pBorderL$ = 12						; size = 4
_pBorderT$ = 16						; size = 4
_pBorderR$ = 20						; size = 4
_pBorderB$ = 24						; size = 4
_pEffectSize$ = 28					; size = 4
__GetParams PROC					; COMDAT
; Line 212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	mov	eax, DWORD PTR _pBorderL$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	mov	DWORD PTR [eax], edx
; Line 214
	mov	eax, DWORD PTR _pBorderT$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+92]
	mov	DWORD PTR [eax], edx
; Line 215
	mov	eax, DWORD PTR _pBorderR$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	mov	DWORD PTR [eax], edx
; Line 216
	mov	eax, DWORD PTR _pBorderB$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+100]
	mov	DWORD PTR [eax], edx
; Line 217
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _pEffectSize$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetParams ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_Callback
_TEXT	SEGMENT
tv79 = -232						; size = 4
tv72 = -232						; size = 4
_hObj$ = -32						; size = 4
_ManageScrollBars$ = -20				; size = 4
_Result$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_GRAPH_Callback PROC					; COMDAT
; Line 490
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 491
	mov	DWORD PTR _ManageScrollBars$[ebp], 0
; Line 493
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 495
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 768			; 00000300H
	jne	SHORT $LN16@GRAPH_Call
; Line 496
	mov	DWORD PTR _ManageScrollBars$[ebp], 1
$LN16@GRAPH_Call:
; Line 498
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	mov	DWORD PTR _Result$[ebp], eax
; Line 499
	cmp	DWORD PTR _ManageScrollBars$[ebp], 0
	je	SHORT $LN15@GRAPH_Call
; Line 500
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageScrollBars
	add	esp, 4
$LN15@GRAPH_Call:
; Line 502
	cmp	DWORD PTR _Result$[ebp], 0
	jne	SHORT $LN14@GRAPH_Call
; Line 503
	jmp	$LN17@GRAPH_Call
$LN14@GRAPH_Call:
; Line 505
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv72[ebp], ecx
	mov	edx, DWORD PTR tv72[ebp]
	sub	edx, 5
	mov	DWORD PTR tv72[ebp], edx
	cmp	DWORD PTR tv72[ebp], 33			; 00000021H
	ja	$LN12@GRAPH_Call
	mov	eax, DWORD PTR tv72[ebp]
	movzx	ecx, BYTE PTR $LN19@GRAPH_Call[eax]
	jmp	DWORD PTR $LN20@GRAPH_Call[ecx*4]
$LN11@GRAPH_Call:
; Line 507
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageScrollBars
	add	esp, 4
; Line 508
	jmp	$LN12@GRAPH_Call
$LN10@GRAPH_Call:
; Line 510
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__OnPaint
	add	esp, 8
; Line 511
	jmp	$LN17@GRAPH_Call
$LN9@GRAPH_Call:
; Line 513
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnDelete
	add	esp, 4
; Line 514
	jmp	SHORT $LN17@GRAPH_Call
$LN8@GRAPH_Call:
; Line 516
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv79[ebp], ecx
	cmp	DWORD PTR tv79[ebp], 5
	je	SHORT $LN5@GRAPH_Call
	jmp	SHORT $LN12@GRAPH_Call
$LN5@GRAPH_Call:
; Line 518
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN4@GRAPH_Call
; Line 519
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pMsg$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	__OnScrollValueChanged
	add	esp, 8
	jmp	SHORT $LN12@GRAPH_Call
$LN4@GRAPH_Call:
; Line 520
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN12@GRAPH_Call
; Line 521
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pMsg$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	__OnScrollValueChanged
	add	esp, 8
$LN12@GRAPH_Call:
; Line 536
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN17@GRAPH_Call:
; Line 537
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN20@GRAPH_Call:
	DD	$LN11@GRAPH_Call
	DD	$LN9@GRAPH_Call
	DD	$LN10@GRAPH_Call
	DD	$LN8@GRAPH_Call
	DD	$LN12@GRAPH_Call
$LN19@GRAPH_Call:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_GRAPH_Callback ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_GethItem:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GUI_SetBkColor:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_WIDGET__EFFECT_DrawDownRect:PROC
EXTRN	_WM_GetClientRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_pScaleObj$11563 = -220					; size = 4
_hScaleObj$11562 = -208					; size = 4
_phMem$11559 = -196					; size = 4
_hMem$11558 = -184					; size = 4
_pDataObj$11549 = -172					; size = 4
_hDataObj$11548 = -160					; size = 4
_phMem$11545 = -148					; size = 4
_hMem$11544 = -136					; size = 4
_Rect$ = -124						; size = 8
_RectClient$ = -108					; size = 8
_NumItems$ = -92					; size = 4
_i$ = -80						; size = 4
_EffectSize$ = -68					; size = 4
_BorderB$ = -56						; size = 4
_BorderR$ = -44						; size = 4
_BorderT$ = -32						; size = 4
_BorderL$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pRectInvalid$ = 12					; size = 4
__OnPaint PROC						; COMDAT
; Line 224
	push	ebp
	mov	ebp, esp
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 228
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 229
	lea	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderB$[ebp]
	push	ecx
	lea	edx, DWORD PTR _BorderR$[ebp]
	push	edx
	lea	eax, DWORD PTR _BorderT$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderL$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetParams
	add	esp, 24					; 00000018H
; Line 230
	lea	eax, DWORD PTR _RectClient$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 231
	lea	eax, DWORD PTR _RectClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__EFFECT_DrawDownRect
	add	esp, 8
; Line 232
	mov	eax, DWORD PTR _RectClient$[ebp]
	mov	DWORD PTR _Rect$[ebp], eax
	mov	ecx, DWORD PTR _RectClient$[ebp+4]
	mov	DWORD PTR _Rect$[ebp+4], ecx
; Line 233
	mov	eax, DWORD PTR _BorderT$[ebp]
	add	eax, DWORD PTR _EffectSize$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	add	ecx, eax
	mov	WORD PTR _Rect$[ebp+2], cx
; Line 234
	mov	eax, DWORD PTR _BorderB$[ebp]
	add	eax, DWORD PTR _EffectSize$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 235
	mov	eax, DWORD PTR _BorderL$[ebp]
	add	eax, DWORD PTR _EffectSize$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp]
	add	ecx, eax
	mov	WORD PTR _Rect$[ebp], cx
; Line 236
	mov	eax, DWORD PTR _BorderR$[ebp]
	add	eax, DWORD PTR _EffectSize$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp+4]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 237
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 238
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 239
	call	_GUI_Clear
; Line 244
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN14@OnPaint
; Line 245
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN14@OnPaint:
; Line 250
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	test	ecx, ecx
	je	SHORT $LN13@OnPaint
; Line 251
	mov	eax, DWORD PTR _BorderB$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BorderR$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BorderT$[ebp]
	push	edx
	mov	eax, DWORD PTR _BorderL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__DrawGrid
	add	esp, 24					; 00000018H
$LN13@OnPaint:
; Line 256
	mov	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectClient$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Rect$[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 257
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 258
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BorderB$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BorderR$[ebp]
	push	edx
	mov	eax, DWORD PTR _BorderT$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BorderL$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__DrawBorder
	add	esp, 28					; 0000001cH
; Line 263
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN12@OnPaint
; Line 264
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN12@OnPaint:
; Line 269
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 270
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN11@OnPaint
$LN10@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN11@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN9@OnPaint
; Line 273
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hMem$11544[ebp], eax
; Line 274
	mov	eax, DWORD PTR _hMem$11544[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _phMem$11545[ebp], eax
; Line 275
	cmp	DWORD PTR _phMem$11545[ebp], 0
	je	SHORT $LN8@OnPaint
; Line 278
	mov	eax, DWORD PTR _phMem$11545[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hDataObj$11548[ebp], ecx
; Line 279
	mov	eax, DWORD PTR _hDataObj$11548[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$11549[ebp], eax
; Line 280
	cmp	DWORD PTR _pDataObj$11549[ebp], 0
	je	SHORT $LN7@OnPaint
; Line 281
	mov	esi, esp
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hDataObj$11548[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDataObj$11549[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 282
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$11549[ebp], 0
$LN7@OnPaint:
; Line 284
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _phMem$11545[ebp], 0
$LN8@OnPaint:
; Line 286
	jmp	$LN10@OnPaint
$LN9@OnPaint:
; Line 290
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 291
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN6@OnPaint
$LN5@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN6@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN4@OnPaint
; Line 294
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hMem$11558[ebp], eax
; Line 295
	mov	eax, DWORD PTR _hMem$11558[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _phMem$11559[ebp], eax
; Line 296
	cmp	DWORD PTR _phMem$11559[ebp], 0
	je	SHORT $LN3@OnPaint
; Line 299
	mov	eax, DWORD PTR _phMem$11559[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hScaleObj$11562[ebp], ecx
; Line 300
	mov	eax, DWORD PTR _hScaleObj$11562[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pScaleObj$11563[ebp], eax
; Line 301
	cmp	DWORD PTR _pScaleObj$11563[ebp], 0
	je	SHORT $LN2@OnPaint
; Line 302
	mov	esi, esp
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScaleObj$11562[ebp]
	push	ecx
	mov	edx, DWORD PTR _pScaleObj$11563[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 303
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pScaleObj$11563[ebp], 0
$LN2@OnPaint:
; Line 305
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _phMem$11559[ebp], 0
$LN3@OnPaint:
; Line 307
	jmp	$LN5@OnPaint
$LN4@OnPaint:
; Line 311
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 312
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+152], 0
	je	SHORT $LN1@OnPaint
; Line 313
	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+152]
	call	edx
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@OnPaint:
; Line 315
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 316
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN25@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN25@OnPaint:
	DD	7
	DD	$LN24@OnPaint
$LN24@OnPaint:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN17@OnPaint
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN18@OnPaint
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN19@OnPaint
	DD	-56					; ffffffc8H
	DD	4
	DD	$LN20@OnPaint
	DD	-68					; ffffffbcH
	DD	4
	DD	$LN21@OnPaint
	DD	-108					; ffffff94H
	DD	8
	DD	$LN22@OnPaint
	DD	-124					; ffffff84H
	DD	8
	DD	$LN23@OnPaint
$LN23@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN22@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN21@OnPaint:
	DB	69					; 00000045H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN20@OnPaint:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	0
$LN19@OnPaint:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	0
$LN18@OnPaint:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	0
$LN17@OnPaint:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	0
__OnPaint ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_SetLineStyle:PROC
EXTRN	_GUI_GetLineStyle:PROC
EXTRN	_GUI_SetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawGrid
_TEXT	SEGMENT
tv94 = -392						; size = 4
_x1$11467 = -192					; size = 4
_x0$11466 = -180					; size = 4
_y$11465 = -168						; size = 4
_FirstPosY$11458 = -156					; size = 4
_y1$11454 = -144					; size = 4
_y0$11453 = -132					; size = 4
_x$11452 = -120						; size = 4
_FirstPosX$11445 = -108					; size = 4
_EffectSize$ = -96					; size = 4
_ySpace$ = -84						; size = 4
_xSpace$ = -72						; size = 4
_ySize$ = -60						; size = 4
_xSize$ = -48						; size = 4
_i$ = -36						; size = 4
_LineStyleOld$ = -21					; size = 1
_Rect$ = -12						; size = 8
_pObj$ = 8						; size = 4
_hObj$ = 12						; size = 4
_BorderL$ = 16						; size = 4
_BorderT$ = 20						; size = 4
_BorderR$ = 24						; size = 4
_BorderB$ = 28						; size = 4
__DrawGrid PROC						; COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 392				; 00000188H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-392]
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 102
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 103
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _xSpace$[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _ySpace$[ebp], ecx
; Line 105
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	sub	eax, DWORD PTR _BorderL$[ebp]
	sub	eax, DWORD PTR _BorderR$[ebp]
	mov	DWORD PTR _xSize$[ebp], eax
; Line 106
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	add	eax, 1
	sub	eax, DWORD PTR _BorderT$[ebp]
	sub	eax, DWORD PTR _BorderB$[ebp]
	mov	DWORD PTR _ySize$[ebp], eax
; Line 107
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 108
	call	_GUI_GetLineStyle
	mov	BYTE PTR _LineStyleOld$[ebp], al
; Line 109
	cmp	DWORD PTR _xSpace$[ebp], 0
	je	$LN16@DrawGrid
; Line 111
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+124]
	and	ecx, 1
	je	SHORT $LN19@DrawGrid
	mov	DWORD PTR tv94[ebp], 0
	jmp	SHORT $LN20@DrawGrid
$LN19@DrawGrid:
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+144]
	mov	DWORD PTR tv94[ebp], eax
$LN20@DrawGrid:
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _xSpace$[ebp]
	add	edx, DWORD PTR [ecx+80]
	add	edx, DWORD PTR tv94[ebp]
	mov	DWORD PTR _FirstPosX$11445[ebp], edx
$LN15@DrawGrid:
; Line 112
	mov	eax, DWORD PTR _FirstPosX$11445[ebp]
	cmp	eax, DWORD PTR _xSpace$[ebp]
	jl	SHORT $LN14@DrawGrid
	mov	eax, DWORD PTR _FirstPosX$11445[ebp]
	sub	eax, DWORD PTR _xSpace$[ebp]
	mov	DWORD PTR _FirstPosX$11445[ebp], eax
	jmp	SHORT $LN15@DrawGrid
$LN14@DrawGrid:
; Line 113
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+126]
	push	ecx
	call	_GUI_SetLineStyle
	add	esp, 4
; Line 114
	mov	eax, DWORD PTR _FirstPosX$11445[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN13@DrawGrid
$LN12@DrawGrid:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _xSpace$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN13@DrawGrid:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN16@DrawGrid
; Line 116
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _BorderL$[ebp]
	add	eax, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR _x$11452[ebp], eax
; Line 117
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _BorderT$[ebp]
	mov	DWORD PTR _y0$11453[ebp], eax
; Line 118
	movsx	eax, WORD PTR _Rect$[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	mov	DWORD PTR _y1$11454[ebp], eax
; Line 119
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+126]
	test	ecx, ecx
	je	SHORT $LN10@DrawGrid
; Line 120
	mov	eax, DWORD PTR _y1$11454[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$11452[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$11453[ebp]
	push	edx
	mov	eax, DWORD PTR _x$11452[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 121
	jmp	SHORT $LN9@DrawGrid
$LN10@DrawGrid:
; Line 122
	mov	eax, DWORD PTR _y1$11454[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$11453[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$11452[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN9@DrawGrid:
; Line 124
	jmp	SHORT $LN12@DrawGrid
$LN16@DrawGrid:
; Line 126
	cmp	DWORD PTR _ySpace$[ebp], 0
	je	$LN8@DrawGrid
; Line 128
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ySpace$[ebp]
	add	ecx, DWORD PTR [eax+84]
	mov	edx, DWORD PTR _pObj$[ebp]
	sub	ecx, DWORD PTR [edx+132]
	mov	DWORD PTR _FirstPosY$11458[ebp], ecx
$LN7@DrawGrid:
; Line 129
	mov	eax, DWORD PTR _FirstPosY$11458[ebp]
	cmp	eax, DWORD PTR _ySpace$[ebp]
	jl	SHORT $LN6@DrawGrid
	mov	eax, DWORD PTR _FirstPosY$11458[ebp]
	sub	eax, DWORD PTR _ySpace$[ebp]
	mov	DWORD PTR _FirstPosY$11458[ebp], eax
	jmp	SHORT $LN7@DrawGrid
$LN6@DrawGrid:
; Line 130
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+127]
	push	ecx
	call	_GUI_SetLineStyle
	add	esp, 4
; Line 131
	mov	eax, DWORD PTR _FirstPosY$11458[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN5@DrawGrid
$LN4@DrawGrid:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, DWORD PTR _ySpace$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN5@DrawGrid:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _ySize$[ebp]
	jge	SHORT $LN8@DrawGrid
; Line 133
	movsx	eax, WORD PTR _Rect$[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	sub	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _y$11465[ebp], eax
; Line 134
	movsx	eax, WORD PTR _Rect$[ebp]
	add	eax, DWORD PTR _BorderL$[ebp]
	mov	DWORD PTR _x0$11466[ebp], eax
; Line 135
	movsx	eax, WORD PTR _Rect$[ebp+4]
	sub	eax, DWORD PTR _BorderR$[ebp]
	mov	DWORD PTR _x1$11467[ebp], eax
; Line 136
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+127]
	test	ecx, ecx
	je	SHORT $LN2@DrawGrid
; Line 137
	mov	eax, DWORD PTR _y$11465[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$11467[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$11465[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$11466[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 138
	jmp	SHORT $LN1@DrawGrid
$LN2@DrawGrid:
; Line 139
	mov	eax, DWORD PTR _x1$11467[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$11466[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$11465[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
$LN1@DrawGrid:
; Line 141
	jmp	$LN4@DrawGrid
$LN8@DrawGrid:
; Line 143
	movzx	eax, BYTE PTR _LineStyleOld$[ebp]
	push	eax
	call	_GUI_SetLineStyle
	add	esp, 4
; Line 144
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@DrawGrid
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 392				; 00000188H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN23@DrawGrid:
	DD	1
	DD	$LN22@DrawGrid
$LN22@DrawGrid:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN21@DrawGrid
$LN21@DrawGrid:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__DrawGrid ENDP
_TEXT	ENDS
EXTRN	_GUI_ClearRect:PROC
EXTRN	_WM_GetOrgY:PROC
EXTRN	_WM_GetOrgX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawBorder
_TEXT	SEGMENT
_EffectSize$11499 = -144				; size = 4
_Rect$11498 = -132					; size = 8
_y1_Clear$11497 = -116					; size = 4
_x1_Clear$11496 = -104					; size = 4
_y0_Clear$11495 = -92					; size = 4
_x0_Clear$11494 = -80					; size = 4
_y1$11493 = -68						; size = 4
_x1$11492 = -56						; size = 4
_y0$11491 = -44						; size = 4
_x0$11490 = -32						; size = 4
_OrgY$11489 = -20					; size = 4
_OrgX$11488 = -8					; size = 4
_pObj$ = 8						; size = 4
_hObj$ = 12						; size = 4
_BorderL$ = 16						; size = 4
_BorderT$ = 20						; size = 4
_BorderR$ = 24						; size = 4
_BorderB$ = 28						; size = 4
_pRectInvalid$ = 32					; size = 4
__DrawBorder PROC					; COMDAT
; Line 150
	push	ebp
	mov	ebp, esp
	sub	esp, 340				; 00000154H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-340]
	mov	ecx, 85					; 00000055H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 151
	cmp	DWORD PTR _BorderL$[ebp], 0
	jne	SHORT $LN9@DrawBorder
	cmp	DWORD PTR _BorderT$[ebp], 0
	jne	SHORT $LN9@DrawBorder
	cmp	DWORD PTR _BorderR$[ebp], 0
	jne	SHORT $LN9@DrawBorder
	cmp	DWORD PTR _BorderB$[ebp], 0
	je	$LN11@DrawBorder
$LN9@DrawBorder:
; Line 155
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$11499[ebp], edx
; Line 156
	lea	eax, DWORD PTR _Rect$11498[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 157
	call	_WM_GetOrgX
	mov	DWORD PTR _OrgX$11488[ebp], eax
; Line 158
	call	_WM_GetOrgY
	mov	DWORD PTR _OrgY$11489[ebp], eax
; Line 159
	movsx	eax, WORD PTR _Rect$11498[ebp]
	add	eax, DWORD PTR _BorderL$[ebp]
	mov	DWORD PTR _x0$11490[ebp], eax
; Line 160
	movsx	eax, WORD PTR _Rect$11498[ebp+2]
	add	eax, DWORD PTR _BorderT$[ebp]
	mov	DWORD PTR _y0$11491[ebp], eax
; Line 161
	movsx	eax, WORD PTR _Rect$11498[ebp+4]
	sub	eax, DWORD PTR _BorderR$[ebp]
	mov	DWORD PTR _x1$11492[ebp], eax
; Line 162
	movsx	eax, WORD PTR _Rect$11498[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	mov	DWORD PTR _y1$11493[ebp], eax
; Line 163
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_SetBkColor
	add	esp, 4
; Line 164
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 165
	cmp	DWORD PTR _BorderL$[ebp], 0
	je	SHORT $LN8@DrawBorder
; Line 166
	mov	eax, DWORD PTR _EffectSize$11499[ebp]
	mov	ecx, DWORD PTR _BorderL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _x1_Clear$11496[ebp], edx
; Line 167
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	movsx	ecx, WORD PTR [eax]
	sub	ecx, DWORD PTR _OrgX$11488[ebp]
	cmp	ecx, DWORD PTR _x1_Clear$11496[ebp]
	jg	SHORT $LN8@DrawBorder
; Line 168
	movsx	eax, WORD PTR _Rect$11498[ebp]
	mov	DWORD PTR _x0_Clear$11494[ebp], eax
; Line 169
	mov	eax, DWORD PTR _BorderT$[ebp]
	add	eax, DWORD PTR _EffectSize$11499[ebp]
	mov	DWORD PTR _y0_Clear$11495[ebp], eax
; Line 170
	movsx	eax, WORD PTR _Rect$11498[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	add	eax, 1
	mov	DWORD PTR _y1_Clear$11497[ebp], eax
; Line 171
	mov	eax, DWORD PTR _y1_Clear$11497[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1_Clear$11496[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0_Clear$11495[ebp]
	push	edx
	mov	eax, DWORD PTR _x0_Clear$11494[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 172
	mov	eax, DWORD PTR _y1$11493[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$11491[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x0$11490[ebp]
	sub	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN8@DrawBorder:
; Line 175
	cmp	DWORD PTR _BorderT$[ebp], 0
	je	SHORT $LN6@DrawBorder
; Line 176
	mov	eax, DWORD PTR _EffectSize$11499[ebp]
	mov	ecx, DWORD PTR _BorderT$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _y1_Clear$11497[ebp], edx
; Line 177
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _OrgY$11489[ebp]
	cmp	ecx, DWORD PTR _y1_Clear$11497[ebp]
	jg	SHORT $LN6@DrawBorder
; Line 178
	movsx	eax, WORD PTR _Rect$11498[ebp]
	mov	DWORD PTR _x0_Clear$11494[ebp], eax
; Line 179
	movsx	eax, WORD PTR _Rect$11498[ebp+2]
	mov	DWORD PTR _y0_Clear$11495[ebp], eax
; Line 180
	movsx	eax, WORD PTR _Rect$11498[ebp+4]
	mov	DWORD PTR _x1_Clear$11496[ebp], eax
; Line 181
	mov	eax, DWORD PTR _y1_Clear$11497[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1_Clear$11496[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0_Clear$11495[ebp]
	push	edx
	mov	eax, DWORD PTR _x0_Clear$11494[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 182
	mov	eax, DWORD PTR _x1$11492[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x0$11490[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y0$11491[ebp]
	sub	edx, 1
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
$LN6@DrawBorder:
; Line 185
	cmp	DWORD PTR _BorderR$[ebp], 0
	je	SHORT $LN4@DrawBorder
; Line 186
	movsx	eax, WORD PTR _Rect$11498[ebp+4]
	sub	eax, DWORD PTR _BorderR$[ebp]
	add	eax, 1
	mov	DWORD PTR _x0_Clear$11494[ebp], eax
; Line 187
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sub	ecx, DWORD PTR _OrgX$11488[ebp]
	cmp	ecx, DWORD PTR _x0_Clear$11494[ebp]
	jl	SHORT $LN4@DrawBorder
; Line 188
	mov	eax, DWORD PTR _BorderT$[ebp]
	add	eax, DWORD PTR _EffectSize$11499[ebp]
	mov	DWORD PTR _y0_Clear$11495[ebp], eax
; Line 189
	movsx	eax, WORD PTR _Rect$11498[ebp+4]
	mov	DWORD PTR _x1_Clear$11496[ebp], eax
; Line 190
	movsx	eax, WORD PTR _Rect$11498[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	add	eax, 1
	mov	DWORD PTR _y1_Clear$11497[ebp], eax
; Line 191
	mov	eax, DWORD PTR _y1_Clear$11497[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1_Clear$11496[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0_Clear$11495[ebp]
	push	edx
	mov	eax, DWORD PTR _x0_Clear$11494[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 192
	mov	eax, DWORD PTR _y1$11493[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _y0$11491[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _x1$11492[ebp]
	add	edx, 1
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN4@DrawBorder:
; Line 195
	cmp	DWORD PTR _BorderB$[ebp], 0
	je	SHORT $LN11@DrawBorder
; Line 196
	movsx	eax, WORD PTR _Rect$11498[ebp+6]
	sub	eax, DWORD PTR _BorderB$[ebp]
	add	eax, 1
	mov	DWORD PTR _y0_Clear$11495[ebp], eax
; Line 197
	mov	eax, DWORD PTR _pRectInvalid$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _OrgY$11489[ebp]
	cmp	ecx, DWORD PTR _y0_Clear$11495[ebp]
	jl	SHORT $LN11@DrawBorder
; Line 198
	movsx	eax, WORD PTR _Rect$11498[ebp]
	mov	DWORD PTR _x0_Clear$11494[ebp], eax
; Line 199
	movsx	eax, WORD PTR _Rect$11498[ebp+4]
	mov	DWORD PTR _x1_Clear$11496[ebp], eax
; Line 200
	movsx	eax, WORD PTR _Rect$11498[ebp+6]
	mov	DWORD PTR _y1_Clear$11497[ebp], eax
; Line 201
	mov	eax, DWORD PTR _y1_Clear$11497[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1_Clear$11496[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0_Clear$11495[ebp]
	push	edx
	mov	eax, DWORD PTR _x0_Clear$11494[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 202
	mov	eax, DWORD PTR _x1$11492[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x0$11490[ebp]
	sub	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _y1$11493[ebp]
	add	edx, 1
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
$LN11@DrawBorder:
; Line 206
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DrawBorder
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN15@DrawBorder:
	DD	1
	DD	$LN14@DrawBorder
$LN14@DrawBorder:
	DD	-132					; ffffff7cH
	DD	8
	DD	$LN13@DrawBorder
$LN13@DrawBorder:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__DrawBorder ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_Delete:PROC
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnDelete
_TEXT	SEGMENT
_hScaleObj$11599 = -116					; size = 4
_phMem$11596 = -104					; size = 4
_hMem$11595 = -92					; size = 4
_pDataObj$11586 = -80					; size = 4
_hDataObj$11585 = -68					; size = 4
_phMem$11582 = -56					; size = 4
_hMem$11581 = -44					; size = 4
_NumItems$ = -32					; size = 4
_i$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__OnDelete PROC						; COMDAT
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 325
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 326
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 327
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@OnDelete
$LN8@OnDelete:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@OnDelete:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN7@OnDelete
; Line 330
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+104]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hMem$11581[ebp], eax
; Line 331
	mov	eax, DWORD PTR _hMem$11581[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _phMem$11582[ebp], eax
; Line 332
	cmp	DWORD PTR _phMem$11582[ebp], 0
	je	SHORT $LN6@OnDelete
; Line 335
	mov	eax, DWORD PTR _phMem$11582[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hDataObj$11585[ebp], ecx
; Line 336
	mov	eax, DWORD PTR _hDataObj$11585[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$11586[ebp], eax
; Line 337
	cmp	DWORD PTR _pDataObj$11586[ebp], 0
	je	SHORT $LN5@OnDelete
; Line 338
	mov	esi, esp
	mov	eax, DWORD PTR _hDataObj$11585[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDataObj$11586[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 339
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$11586[ebp], 0
$LN5@OnDelete:
; Line 341
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _phMem$11582[ebp], 0
$LN6@OnDelete:
; Line 343
	jmp	$LN8@OnDelete
$LN7@OnDelete:
; Line 344
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 345
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@OnDelete
$LN3@OnDelete:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@OnDelete:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN2@OnDelete
; Line 348
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+108]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hMem$11595[ebp], eax
; Line 349
	mov	eax, DWORD PTR _hMem$11595[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _phMem$11596[ebp], eax
; Line 350
	cmp	DWORD PTR _phMem$11596[ebp], 0
	je	SHORT $LN1@OnDelete
; Line 352
	mov	eax, DWORD PTR _phMem$11596[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hScaleObj$11599[ebp], ecx
; Line 353
	mov	eax, DWORD PTR _hScaleObj$11599[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 354
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _phMem$11596[ebp], 0
$LN1@OnDelete:
; Line 356
	jmp	SHORT $LN3@OnDelete
$LN2@OnDelete:
; Line 357
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 358
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 359
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 360
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnDelete ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WIDGET__SetScrollState:PROC
EXTRN	_WM_CheckScrollBounds:PROC
EXTRN	_WM_SetScrollbarH:PROC
EXTRN	_WM_SetScrollbarV:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ManageScrollBars
_TEXT	SEGMENT
_ScrollStateH$ = -152					; size = 12
_ScrollStateV$ = -132					; size = 12
_EffectSize$ = -112					; size = 4
_BorderB$ = -100					; size = 4
_BorderR$ = -88						; size = 4
_BorderT$ = -76						; size = 4
_BorderL$ = -64						; size = 4
_Rect$ = -52						; size = 8
_PageSize$ = -36					; size = 4
_IsRequired$ = -24					; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__ManageScrollBars PROC					; COMDAT
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 391
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 392
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 393
	lea	eax, DWORD PTR _EffectSize$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderB$[ebp]
	push	ecx
	lea	edx, DWORD PTR _BorderR$[ebp]
	push	edx
	lea	eax, DWORD PTR _BorderT$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BorderL$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	__GetParams
	add	esp, 24					; 00000018H
; Line 394
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	sub	eax, DWORD PTR _BorderT$[ebp]
	sub	eax, DWORD PTR _BorderB$[ebp]
	mov	DWORD PTR _PageSize$[ebp], eax
; Line 395
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	xor	edx, edx
	cmp	ecx, DWORD PTR _PageSize$[ebp]
	setg	dl
	mov	DWORD PTR _IsRequired$[ebp], edx
; Line 396
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 397
	mov	eax, DWORD PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarV
	add	esp, 8
; Line 398
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 399
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	mov	DWORD PTR [eax+128], edx
; Line 400
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _PageSize$[ebp]
	mov	DWORD PTR [eax+136], ecx
; Line 401
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	sub	eax, DWORD PTR _BorderL$[ebp]
	sub	eax, DWORD PTR _BorderR$[ebp]
	mov	DWORD PTR _PageSize$[ebp], eax
; Line 402
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	xor	edx, edx
	cmp	ecx, DWORD PTR _PageSize$[ebp]
	setg	dl
	mov	DWORD PTR _IsRequired$[ebp], edx
; Line 403
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 404
	mov	eax, DWORD PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarH
	add	esp, 8
; Line 405
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 406
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	mov	DWORD PTR [eax+140], edx
; Line 407
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _PageSize$[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 408
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 128				; 00000080H
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 409
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 140				; 0000008cH
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 410
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 128				; 00000080H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 411
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 140				; 0000008cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$[ebp+8], eax
; Line 412
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 413
	lea	eax, DWORD PTR _ScrollStateH$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateV$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET__SetScrollState
	add	esp, 12					; 0000000cH
; Line 414
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ManageScro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@ManageScro:
	DD	8
	DD	$LN11@ManageScro
$LN11@ManageScro:
	DD	-52					; ffffffccH
	DD	8
	DD	$LN3@ManageScro
	DD	-64					; ffffffc0H
	DD	4
	DD	$LN4@ManageScro
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN5@ManageScro
	DD	-88					; ffffffa8H
	DD	4
	DD	$LN6@ManageScro
	DD	-100					; ffffff9cH
	DD	4
	DD	$LN7@ManageScro
	DD	-112					; ffffff90H
	DD	4
	DD	$LN8@ManageScro
	DD	-132					; ffffff7cH
	DD	12					; 0000000cH
	DD	$LN9@ManageScro
	DD	-152					; ffffff68H
	DD	12					; 0000000cH
	DD	$LN10@ManageScro
$LN10@ManageScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
$LN9@ManageScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
$LN8@ManageScro:
	DB	69					; 00000045H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	83					; 00000053H
	DB	105					; 00000069H
	DB	122					; 0000007aH
	DB	101					; 00000065H
	DB	0
$LN7@ManageScro:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	66					; 00000042H
	DB	0
$LN6@ManageScro:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	0
$LN5@ManageScro:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	0
$LN4@ManageScro:
	DB	66					; 00000042H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	76					; 0000004cH
	DB	0
$LN3@ManageScro:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__ManageScrollBars ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_SCROLLBAR_GetValue:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnScrollValueChanged
_TEXT	SEGMENT
_Id$ = -32						; size = 4
_Value$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_hScroll$ = 12						; size = 4
__OnScrollValueChanged PROC				; COMDAT
; Line 420
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 423
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 424
	mov	eax, DWORD PTR _hScroll$[ebp]
	push	eax
	call	_SCROLLBAR_GetValue
	add	esp, 4
	mov	DWORD PTR _Value$[ebp], eax
; Line 425
	mov	eax, DWORD PTR _hScroll$[ebp]
	push	eax
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 426
	cmp	DWORD PTR _Id$[ebp], 254		; 000000feH
	jne	SHORT $LN2@OnScrollVa
; Line 427
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 428
	jmp	SHORT $LN1@OnScrollVa
$LN2@OnScrollVa:
; Line 429
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+144], ecx
$LN1@OnScrollVa:
; Line 431
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 432
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 433
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnScrollValueChanged ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_CreateEx
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_CreateEx
_TEXT	SEGMENT
_ScaleArray$11721 = -44					; size = 4
_GraphArray$11720 = -32					; size = 4
_pObj$11719 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_GRAPH_CreateEx PROC					; COMDAT
; Line 551
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 555
	push	112					; 00000070H
	push	OFFSET _GRAPH_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 556
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@GRAPH_Crea
; Line 560
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _GraphArray$11720[ebp], eax
; Line 561
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _ScaleArray$11721[ebp], eax
; Line 562
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11719[ebp], eax
; Line 563
	mov	eax, DWORD PTR _pObj$11719[ebp]
	mov	ecx, DWORD PTR _GraphArray$11720[ebp]
	mov	DWORD PTR [eax+104], ecx
; Line 564
	mov	eax, DWORD PTR _pObj$11719[ebp]
	mov	ecx, DWORD PTR _ScaleArray$11721[ebp]
	mov	DWORD PTR [eax+108], ecx
; Line 566
	push	0
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11719[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 568
	mov	eax, DWORD PTR _pObj$11719[ebp]
	mov	DWORD PTR [eax+156], 1196573008		; 47524150H
; Line 569
	mov	edi, DWORD PTR _pObj$11719[ebp]
	add	edi, 56					; 00000038H
	mov	ecx, 12					; 0000000cH
	mov	esi, OFFSET _GRAPH__DefaultProps
	rep movsd
; Line 570
	mov	eax, DWORD PTR _pObj$11719[ebp]
	mov	cx, WORD PTR _ExFlags$[ebp]
	mov	WORD PTR [eax+124], cx
; Line 571
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11719[ebp], 0
$LN1@GRAPH_Crea:
; Line 574
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 575
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_CreateEx ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_AttachData
EXTRN	_GUI_ARRAY_AddItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_AttachData
_TEXT	SEGMENT
_pDataObj$11732 = -32					; size = 4
_pObj$11731 = -20					; size = 4
_GraphArray$11730 = -8					; size = 4
_hObj$ = 8						; size = 4
_hData$ = 12						; size = 4
_GRAPH_AttachData PROC					; COMDAT
; Line 581
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 582
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_Atta
; Line 587
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11731[ebp], eax
; Line 588
	mov	eax, DWORD PTR _pObj$11731[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _GraphArray$11730[ebp], ecx
; Line 589
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11731[ebp], 0
; Line 590
	mov	eax, DWORD PTR _hData$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDataObj$11732[ebp], eax
; Line 591
	mov	eax, DWORD PTR _pDataObj$11732[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 592
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDataObj$11732[ebp], 0
; Line 593
	push	4
	lea	eax, DWORD PTR _hData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GraphArray$11730[ebp]
	push	ecx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
; Line 594
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_Atta:
; Line 597
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_AttachData ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DetachData
EXTRN	_GUI_ARRAY_DeleteItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DetachData
_TEXT	SEGMENT
_pi$11753 = -68						; size = 4
_hi$11751 = -56						; size = 4
_NumItems$11746 = -44					; size = 4
_i$11745 = -32						; size = 4
_pObj$11744 = -20					; size = 4
_GraphArray$11743 = -8					; size = 4
_hObj$ = 8						; size = 4
_hData$ = 12						; size = 4
_GRAPH_DetachData PROC					; COMDAT
; Line 603
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 604
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@GRAPH_Deta
; Line 609
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11744[ebp], eax
; Line 610
	mov	eax, DWORD PTR _pObj$11744[ebp]
	mov	ecx, DWORD PTR [eax+104]
	mov	DWORD PTR _GraphArray$11743[ebp], ecx
; Line 611
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11744[ebp], 0
; Line 612
	mov	eax, DWORD PTR _GraphArray$11743[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$11746[ebp], eax
; Line 613
	mov	DWORD PTR _i$11745[ebp], 0
	jmp	SHORT $LN5@GRAPH_Deta
$LN4@GRAPH_Deta:
	mov	eax, DWORD PTR _i$11745[ebp]
	add	eax, 1
	mov	DWORD PTR _i$11745[ebp], eax
$LN5@GRAPH_Deta:
	mov	eax, DWORD PTR _i$11745[ebp]
	cmp	eax, DWORD PTR _NumItems$11746[ebp]
	jge	SHORT $LN3@GRAPH_Deta
; Line 615
	mov	eax, DWORD PTR _i$11745[ebp]
	push	eax
	mov	ecx, DWORD PTR _GraphArray$11743[ebp]
	push	ecx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hi$11751[ebp], eax
; Line 616
	cmp	DWORD PTR _hi$11751[ebp], 0
	je	SHORT $LN2@GRAPH_Deta
; Line 618
	mov	eax, DWORD PTR _hi$11751[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pi$11753[ebp], eax
; Line 619
	mov	eax, DWORD PTR _pi$11753[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hi$11751[ebp], ecx
; Line 620
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pi$11753[ebp], 0
; Line 621
	mov	eax, DWORD PTR _hi$11751[ebp]
	cmp	eax, DWORD PTR _hData$[ebp]
	jne	SHORT $LN2@GRAPH_Deta
; Line 622
	mov	eax, DWORD PTR _i$11745[ebp]
	push	eax
	mov	ecx, DWORD PTR _GraphArray$11743[ebp]
	push	ecx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 623
	jmp	SHORT $LN3@GRAPH_Deta
$LN2@GRAPH_Deta:
; Line 626
	jmp	SHORT $LN4@GRAPH_Deta
$LN3@GRAPH_Deta:
; Line 627
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN7@GRAPH_Deta:
; Line 630
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DetachData ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_AttachScale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_AttachScale
_TEXT	SEGMENT
_pScaleObj$11765 = -32					; size = 4
_pObj$11764 = -20					; size = 4
_ScaleArray$11763 = -8					; size = 4
_hObj$ = 8						; size = 4
_hScale$ = 12						; size = 4
_GRAPH_AttachScale PROC					; COMDAT
; Line 636
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 637
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_Atta@2
; Line 642
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11764[ebp], eax
; Line 643
	mov	eax, DWORD PTR _pObj$11764[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _ScaleArray$11763[ebp], ecx
; Line 644
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11764[ebp], 0
; Line 645
	mov	eax, DWORD PTR _hScale$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pScaleObj$11765[ebp], eax
; Line 646
	mov	eax, DWORD PTR _pScaleObj$11765[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 647
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pScaleObj$11765[ebp], 0
; Line 648
	push	4
	lea	eax, DWORD PTR _hScale$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ScaleArray$11763[ebp]
	push	ecx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
; Line 649
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_Atta@2:
; Line 652
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_AttachScale ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_DetachScale
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_DetachScale
_TEXT	SEGMENT
_pi$11786 = -68						; size = 4
_hi$11784 = -56						; size = 4
_NumItems$11779 = -44					; size = 4
_i$11778 = -32						; size = 4
_pObj$11777 = -20					; size = 4
_ScaleArray$11776 = -8					; size = 4
_hObj$ = 8						; size = 4
_hScale$ = 12						; size = 4
_GRAPH_DetachScale PROC					; COMDAT
; Line 658
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 659
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN7@GRAPH_Deta@2
; Line 664
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11777[ebp], eax
; Line 665
	mov	eax, DWORD PTR _pObj$11777[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	DWORD PTR _ScaleArray$11776[ebp], ecx
; Line 666
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11777[ebp], 0
; Line 667
	mov	eax, DWORD PTR _ScaleArray$11776[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$11779[ebp], eax
; Line 668
	mov	DWORD PTR _i$11778[ebp], 0
	jmp	SHORT $LN5@GRAPH_Deta@2
$LN4@GRAPH_Deta@2:
	mov	eax, DWORD PTR _i$11778[ebp]
	add	eax, 1
	mov	DWORD PTR _i$11778[ebp], eax
$LN5@GRAPH_Deta@2:
	mov	eax, DWORD PTR _i$11778[ebp]
	cmp	eax, DWORD PTR _NumItems$11779[ebp]
	jge	SHORT $LN3@GRAPH_Deta@2
; Line 670
	mov	eax, DWORD PTR _i$11778[ebp]
	push	eax
	mov	ecx, DWORD PTR _ScaleArray$11776[ebp]
	push	ecx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hi$11784[ebp], eax
; Line 671
	cmp	DWORD PTR _hi$11784[ebp], 0
	je	SHORT $LN2@GRAPH_Deta@2
; Line 673
	mov	eax, DWORD PTR _hi$11784[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pi$11786[ebp], eax
; Line 674
	mov	eax, DWORD PTR _pi$11786[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hi$11784[ebp], ecx
; Line 675
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pi$11786[ebp], 0
; Line 676
	mov	eax, DWORD PTR _hi$11784[ebp]
	cmp	eax, DWORD PTR _hScale$[ebp]
	jne	SHORT $LN2@GRAPH_Deta@2
; Line 677
	mov	eax, DWORD PTR _i$11778[ebp]
	push	eax
	mov	ecx, DWORD PTR _ScaleArray$11776[ebp]
	push	ecx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 678
	jmp	SHORT $LN3@GRAPH_Deta@2
$LN2@GRAPH_Deta@2:
; Line 681
	jmp	SHORT $LN4@GRAPH_Deta@2
$LN3@GRAPH_Deta@2:
; Line 682
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN7@GRAPH_Deta@2:
; Line 685
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_DetachScale ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetColor
_TEXT	SEGMENT
_pObj$11799 = -20					; size = 4
_OldColor$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Color$ = 12						; size = 4
_Index$ = 16						; size = 4
_GRAPH_SetColor PROC					; COMDAT
; Line 691
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 692
	mov	DWORD PTR _OldColor$[ebp], 0
; Line 693
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@GRAPH_SetC
; Line 696
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11799[ebp], eax
; Line 697
	cmp	DWORD PTR _Index$[ebp], 4
	jae	SHORT $LN2@GRAPH_SetC
; Line 698
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$11799[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+56]
	mov	DWORD PTR _OldColor$[ebp], edx
; Line 699
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$11799[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+56]
	cmp	edx, DWORD PTR _Color$[ebp]
	je	SHORT $LN2@GRAPH_SetC
; Line 700
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$11799[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+56], edx
; Line 701
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_SetC:
; Line 704
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11799[ebp], 0
$LN3@GRAPH_SetC:
; Line 707
	mov	eax, DWORD PTR _OldColor$[ebp]
; Line 708
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetColor ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetGridVis
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetGridVis
_TEXT	SEGMENT
_pObj$11810 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_OnOff$ = 12						; size = 4
_GRAPH_SetGridVis PROC					; COMDAT
; Line 714
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 715
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 716
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetG
; Line 719
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11810[ebp], eax
; Line 720
	mov	eax, DWORD PTR _pObj$11810[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 721
	mov	eax, DWORD PTR _pObj$11810[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	cmp	ecx, DWORD PTR _OnOff$[ebp]
	je	SHORT $LN1@GRAPH_SetG
; Line 722
	xor	eax, eax
	cmp	DWORD PTR _OnOff$[ebp], 0
	setne	al
	mov	ecx, DWORD PTR _pObj$11810[ebp]
	mov	BYTE PTR [ecx+112], al
; Line 723
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_SetG:
; Line 725
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11810[ebp], 0
$LN2@GRAPH_SetG:
; Line 728
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 729
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetGridVis ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetGridDistX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetGridDistX
_TEXT	SEGMENT
_pObj$11821 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_GRAPH_SetGridDistX PROC				; COMDAT
; Line 735
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 736
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 737
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetG@2
; Line 740
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11821[ebp], eax
; Line 741
	mov	eax, DWORD PTR _pObj$11821[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 742
	mov	eax, DWORD PTR _pObj$11821[ebp]
	mov	ecx, DWORD PTR [eax+72]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN1@GRAPH_SetG@2
; Line 743
	mov	eax, DWORD PTR _pObj$11821[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+72], ecx
; Line 744
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_SetG@2:
; Line 746
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11821[ebp], 0
$LN2@GRAPH_SetG@2:
; Line 749
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 750
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetGridDistX ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetGridDistY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetGridDistY
_TEXT	SEGMENT
_pObj$11831 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_GRAPH_SetGridDistY PROC				; COMDAT
; Line 756
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 757
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 758
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetG@3
; Line 761
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11831[ebp], eax
; Line 762
	mov	eax, DWORD PTR _pObj$11831[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR _pObj$11831[ebp]
	mov	ecx, DWORD PTR [eax+76]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN1@GRAPH_SetG@3
; Line 764
	mov	eax, DWORD PTR _pObj$11831[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 765
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_SetG@3:
; Line 767
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11831[ebp], 0
$LN2@GRAPH_SetG@3:
; Line 770
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 771
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetGridDistY ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetGridOffY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetGridOffY
_TEXT	SEGMENT
_pObj$11841 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_GRAPH_SetGridOffY PROC					; COMDAT
; Line 777
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 778
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 779
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetG@4
; Line 782
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11841[ebp], eax
; Line 783
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 784
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	ecx, DWORD PTR [eax+84]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN1@GRAPH_SetG@4
; Line 785
	mov	eax, DWORD PTR _pObj$11841[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 786
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__InvalidateGraph
	add	esp, 4
$LN1@GRAPH_SetG@4:
; Line 788
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11841[ebp], 0
$LN2@GRAPH_SetG@4:
; Line 791
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 792
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetGridOffY ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetBorder
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetBorder
_TEXT	SEGMENT
_pObj$11856 = -8					; size = 4
_hObj$ = 8						; size = 4
_BorderL$ = 12						; size = 4
_BorderT$ = 16						; size = 4
_BorderR$ = 20						; size = 4
_BorderB$ = 24						; size = 4
_GRAPH_SetBorder PROC					; COMDAT
; Line 798
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 799
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetB
; Line 802
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11856[ebp], eax
; Line 803
	mov	eax, DWORD PTR _pObj$11856[ebp]
	mov	ecx, DWORD PTR _BorderL$[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 804
	mov	eax, DWORD PTR _pObj$11856[ebp]
	mov	ecx, DWORD PTR _BorderT$[ebp]
	mov	DWORD PTR [eax+92], ecx
; Line 805
	mov	eax, DWORD PTR _pObj$11856[ebp]
	mov	ecx, DWORD PTR _BorderR$[ebp]
	mov	DWORD PTR [eax+96], ecx
; Line 806
	mov	eax, DWORD PTR _pObj$11856[ebp]
	mov	ecx, DWORD PTR _BorderB$[ebp]
	mov	DWORD PTR [eax+100], ecx
; Line 807
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11856[ebp], 0
; Line 808
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageScrollBars
	add	esp, 4
; Line 809
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_SetB:
; Line 812
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetBorder ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetUserDraw
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetUserDraw
_TEXT	SEGMENT
_pObj$11868 = -8					; size = 4
_hObj$ = 8						; size = 4
_pUserDraw$ = 12					; size = 4
_GRAPH_SetUserDraw PROC					; COMDAT
; Line 818
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 819
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetU
; Line 822
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11868[ebp], eax
; Line 823
	mov	eax, DWORD PTR _pObj$11868[ebp]
	mov	ecx, DWORD PTR _pUserDraw$[ebp]
	mov	DWORD PTR [eax+152], ecx
; Line 824
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11868[ebp], 0
; Line 825
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_SetU:
; Line 828
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetUserDraw ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetVSizeX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetVSizeX
_TEXT	SEGMENT
_pObj$11877 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_GRAPH_SetVSizeX PROC					; COMDAT
; Line 834
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 835
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 836
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@GRAPH_SetV
; Line 839
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11877[ebp], eax
; Line 840
	mov	eax, DWORD PTR _pObj$11877[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 841
	mov	eax, DWORD PTR _pObj$11877[ebp]
	mov	ecx, DWORD PTR [eax+116]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN2@GRAPH_SetV
; Line 842
	mov	eax, DWORD PTR _pObj$11877[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+116], ecx
; Line 843
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11877[ebp], 0
; Line 844
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageScrollBars
	add	esp, 4
; Line 845
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 846
	jmp	SHORT $LN3@GRAPH_SetV
$LN2@GRAPH_SetV:
; Line 847
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11877[ebp], 0
$LN3@GRAPH_SetV:
; Line 851
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 852
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetVSizeX ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetVSizeY
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetVSizeY
_TEXT	SEGMENT
_pObj$11889 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 4
_GRAPH_SetVSizeY PROC					; COMDAT
; Line 858
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 859
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 860
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@GRAPH_SetV@2
; Line 863
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11889[ebp], eax
; Line 864
	mov	eax, DWORD PTR _pObj$11889[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 865
	mov	eax, DWORD PTR _pObj$11889[ebp]
	mov	ecx, DWORD PTR [eax+120]
	cmp	ecx, DWORD PTR _Value$[ebp]
	je	SHORT $LN2@GRAPH_SetV@2
; Line 866
	mov	eax, DWORD PTR _pObj$11889[ebp]
	mov	ecx, DWORD PTR _Value$[ebp]
	mov	DWORD PTR [eax+120], ecx
; Line 867
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11889[ebp], 0
; Line 868
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageScrollBars
	add	esp, 4
; Line 869
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 870
	jmp	SHORT $LN3@GRAPH_SetV@2
$LN2@GRAPH_SetV@2:
; Line 871
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11889[ebp], 0
$LN3@GRAPH_SetV@2:
; Line 875
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 876
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetVSizeY ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetGridFixedX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetGridFixedX
_TEXT	SEGMENT
_pObj$11901 = -20					; size = 4
_OldValue$ = -8						; size = 4
_hObj$ = 8						; size = 4
_OnOff$ = 12						; size = 4
_GRAPH_SetGridFixedX PROC				; COMDAT
; Line 882
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 883
	mov	DWORD PTR _OldValue$[ebp], 0
; Line 884
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN4@GRAPH_SetG@5
; Line 887
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11901[ebp], eax
; Line 888
	mov	eax, DWORD PTR _pObj$11901[ebp]
	movzx	ecx, WORD PTR [eax+124]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _OldValue$[ebp], ecx
; Line 889
	xor	eax, eax
	cmp	DWORD PTR _OnOff$[ebp], 0
	sete	al
	and	eax, DWORD PTR _OldValue$[ebp]
	je	SHORT $LN3@GRAPH_SetG@5
; Line 890
	mov	eax, DWORD PTR _pObj$11901[ebp]
	movzx	ecx, WORD PTR [eax+124]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _pObj$11901[ebp]
	mov	WORD PTR [edx+124], cx
; Line 891
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN2@GRAPH_SetG@5
$LN3@GRAPH_SetG@5:
; Line 892
	xor	eax, eax
	cmp	DWORD PTR _OldValue$[ebp], 0
	sete	al
	and	eax, DWORD PTR _OnOff$[ebp]
	je	SHORT $LN2@GRAPH_SetG@5
; Line 893
	mov	eax, DWORD PTR _pObj$11901[ebp]
	movzx	ecx, WORD PTR [eax+124]
	or	ecx, 1
	mov	edx, DWORD PTR _pObj$11901[ebp]
	mov	WORD PTR [edx+124], cx
; Line 894
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@GRAPH_SetG@5:
; Line 896
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11901[ebp], 0
$LN4@GRAPH_SetG@5:
; Line 899
	mov	eax, DWORD PTR _OldValue$[ebp]
; Line 900
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetGridFixedX ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetLineStyleH
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetLineStyleH
_TEXT	SEGMENT
_pObj$11913 = -20					; size = 4
_OldValue$ = -5						; size = 1
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 1
_GRAPH_SetLineStyleH PROC				; COMDAT
; Line 906
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 907
	mov	BYTE PTR _OldValue$[ebp], 0
; Line 908
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetL
; Line 911
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11913[ebp], eax
; Line 912
	mov	eax, DWORD PTR _pObj$11913[ebp]
	mov	cl, BYTE PTR [eax+127]
	mov	BYTE PTR _OldValue$[ebp], cl
; Line 913
	movzx	eax, BYTE PTR _OldValue$[ebp]
	movzx	ecx, BYTE PTR _Value$[ebp]
	cmp	eax, ecx
	je	SHORT $LN1@GRAPH_SetL
; Line 914
	mov	eax, DWORD PTR _pObj$11913[ebp]
	mov	cl, BYTE PTR _Value$[ebp]
	mov	BYTE PTR [eax+127], cl
; Line 915
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_SetL:
; Line 917
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11913[ebp], 0
$LN2@GRAPH_SetL:
; Line 920
	mov	al, BYTE PTR _OldValue$[ebp]
; Line 921
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetLineStyleH ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetLineStyleV
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetLineStyleV
_TEXT	SEGMENT
_pObj$11923 = -20					; size = 4
_OldValue$ = -5						; size = 1
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 1
_GRAPH_SetLineStyleV PROC				; COMDAT
; Line 927
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 928
	mov	BYTE PTR _OldValue$[ebp], 0
; Line 929
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@GRAPH_SetL@2
; Line 932
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GRAPH_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11923[ebp], eax
; Line 933
	mov	eax, DWORD PTR _pObj$11923[ebp]
	mov	cl, BYTE PTR [eax+126]
	mov	BYTE PTR _OldValue$[ebp], cl
; Line 934
	movzx	eax, BYTE PTR _OldValue$[ebp]
	movzx	ecx, BYTE PTR _Value$[ebp]
	cmp	eax, ecx
	je	SHORT $LN1@GRAPH_SetL@2
; Line 935
	mov	eax, DWORD PTR _pObj$11923[ebp]
	mov	cl, BYTE PTR _Value$[ebp]
	mov	BYTE PTR [eax+126], cl
; Line 936
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@GRAPH_SetL@2:
; Line 938
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11923[ebp], 0
$LN2@GRAPH_SetL@2:
; Line 941
	mov	al, BYTE PTR _OldValue$[ebp]
; Line 942
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetLineStyleV ENDP
_TEXT	ENDS
PUBLIC	_GRAPH_SetLineStyle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GRAPH_SetLineStyle
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Value$ = 12						; size = 1
_GRAPH_SetLineStyle PROC				; COMDAT
; Line 948
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 949
	movzx	eax, BYTE PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_GRAPH_SetLineStyleV
	add	esp, 8
; Line 950
	movzx	eax, BYTE PTR _Value$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_GRAPH_SetLineStyleH
	add	esp, 8
; Line 951
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GRAPH_SetLineStyle ENDP
_TEXT	ENDS
END
