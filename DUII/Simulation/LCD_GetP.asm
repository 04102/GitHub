; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD_GetP.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_GetPixelIndex
EXTRN	_GUI_Context:BYTE
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd_getp.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LCD_GetPixelIndex
_TEXT	SEGMENT
_r$ = -12						; size = 8
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_LCD_GetPixelIndex PROC					; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	esi, esp
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 47
	movsx	eax, WORD PTR _r$[ebp]
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN4@LCD_GetPix
; Line 48
	xor	eax, eax
	jmp	SHORT $LN5@LCD_GetPix
$LN4@LCD_GetPix:
; Line 50
	movsx	eax, WORD PTR _r$[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN3@LCD_GetPix
; Line 51
	xor	eax, eax
	jmp	SHORT $LN5@LCD_GetPix
$LN3@LCD_GetPix:
; Line 53
	movsx	eax, WORD PTR _r$[ebp+2]
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN2@LCD_GetPix
; Line 54
	xor	eax, eax
	jmp	SHORT $LN5@LCD_GetPix
$LN2@LCD_GetPix:
; Line 56
	movsx	eax, WORD PTR _r$[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN1@LCD_GetPix
; Line 57
	xor	eax, eax
	jmp	SHORT $LN5@LCD_GetPix
$LN1@LCD_GetPix:
; Line 59
	mov	esi, esp
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	mov	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [eax+20]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@LCD_GetPix:
; Line 60
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LCD_GetPix
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@LCD_GetPix:
	DD	1
	DD	$LN8@LCD_GetPix
$LN8@LCD_GetPix:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@LCD_GetPix
$LN7@LCD_GetPix:
	DB	114					; 00000072H
	DB	0
_LCD_GetPixelIndex ENDP
_TEXT	ENDS
PUBLIC	_GUI_GetPixelIndex
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GetPixelIndex
_TEXT	SEGMENT
_r$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GUI_GetPixelIndex PROC					; COMDAT
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 70
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_LCD_GetPixelIndex
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 72
	mov	eax, DWORD PTR _r$[ebp]
; Line 73
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetPixelIndex ENDP
_TEXT	ENDS
END
