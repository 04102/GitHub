; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_AA.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	_GUI_MEMDEV_CopyToLCDAA
EXTRN	_GUI_MEMDEV_Select:PROC
EXTRN	_LCD_SetPixelIndex:PROC
EXTRN	_LCD_Color2Index:PROC
EXTRN	_LCD_Index2Color:PROC
EXTRN	_GUI_SelectLCD:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_aa.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV_CopyToLCDAA
_TEXT	SEGMENT
tv82 = -448						; size = 4
_pData$9220 = -248					; size = 4
_pData0$9215 = -236					; size = 4
_pData$9208 = -224					; size = 4
_pData0$9203 = -212					; size = 4
_pData$9196 = -200					; size = 4
_pData0$9191 = -188					; size = 4
_Color$9180 = -176					; size = 4
_ColorSep$9179 = -164					; size = 12
_PixelIndex$9178 = -144					; size = 4
_BytesPerPixel$9177 = -132				; size = 4
_BitsPerPixel$9176 = -120				; size = 4
_YMax$9175 = -108					; size = 4
_XMax$9174 = -96					; size = 4
_y0$9173 = -84						; size = 4
_x0$9172 = -72						; size = 4
_LineOff$9171 = -60					; size = 4
_pDev$9170 = -48					; size = 4
_y$9169 = -36						; size = 4
_x$9168 = -24						; size = 4
_hMemPrev$9167 = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_hMem$ = 8						; size = 4
_GUI_MEMDEV_CopyToLCDAA PROC				; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 65
	cmp	DWORD PTR _hMem$[ebp], 0
	je	$LN29@GUI_MEMDEV
; Line 83
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pDev$9170[ebp], eax
; Line 84
	mov	eax, DWORD PTR _pDev$9170[ebp]
	movsx	ecx, WORD PTR [eax+8]
	mov	DWORD PTR _LineOff$9171[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _pDev$9170[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _x0$9172[ebp], ecx
; Line 86
	mov	eax, DWORD PTR _pDev$9170[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _y0$9173[ebp], ecx
; Line 87
	mov	eax, DWORD PTR _pDev$9170[ebp]
	movsx	eax, WORD PTR [eax+8]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _XMax$9174[ebp], eax
; Line 88
	mov	eax, DWORD PTR _pDev$9170[ebp]
	movsx	eax, WORD PTR [eax+10]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _YMax$9175[ebp], eax
; Line 89
	mov	eax, DWORD PTR _GUI_Context+76
	mov	DWORD PTR _hMemPrev$9167[ebp], eax
; Line 93
	call	_GUI_SelectLCD
; Line 95
	mov	eax, DWORD PTR _pDev$9170[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _BitsPerPixel$9176[ebp], ecx
; Line 96
	cmp	DWORD PTR _BitsPerPixel$9176[ebp], 8
	jg	SHORT $LN27@GUI_MEMDEV
; Line 97
	mov	DWORD PTR _BytesPerPixel$9177[ebp], 1
	jmp	SHORT $LN26@GUI_MEMDEV
$LN27@GUI_MEMDEV:
; Line 98
	cmp	DWORD PTR _BitsPerPixel$9176[ebp], 16	; 00000010H
	jg	SHORT $LN25@GUI_MEMDEV
; Line 99
	mov	DWORD PTR _BytesPerPixel$9177[ebp], 2
; Line 100
	jmp	SHORT $LN26@GUI_MEMDEV
$LN25@GUI_MEMDEV:
; Line 101
	mov	DWORD PTR _BytesPerPixel$9177[ebp], 4
$LN26@GUI_MEMDEV:
; Line 103
	mov	eax, DWORD PTR _BytesPerPixel$9177[ebp]
	mov	DWORD PTR tv82[ebp], eax
	cmp	DWORD PTR tv82[ebp], 1
	je	SHORT $LN21@GUI_MEMDEV
	cmp	DWORD PTR tv82[ebp], 2
	je	$LN14@GUI_MEMDEV
	cmp	DWORD PTR tv82[ebp], 4
	je	$LN7@GUI_MEMDEV
	jmp	$LN22@GUI_MEMDEV
$LN21@GUI_MEMDEV:
; Line 106
	mov	eax, DWORD PTR _pDev$9170[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData0$9191[ebp], eax
; Line 107
	mov	DWORD PTR _y$9169[ebp], 0
	jmp	SHORT $LN20@GUI_MEMDEV
$LN19@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	add	eax, 1
	mov	DWORD PTR _y$9169[ebp], eax
$LN20@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	cmp	eax, DWORD PTR _YMax$9175[ebp]
	jge	$LN18@GUI_MEMDEV
; Line 109
	mov	eax, DWORD PTR _pData0$9191[ebp]
	mov	DWORD PTR _pData$9196[ebp], eax
; Line 110
	mov	DWORD PTR _x$9168[ebp], 0
	jmp	SHORT $LN17@GUI_MEMDEV
$LN16@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9168[ebp], eax
$LN17@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	cmp	eax, DWORD PTR _XMax$9174[ebp]
	jge	$LN15@GUI_MEMDEV
; Line 111
	mov	eax, DWORD PTR _pData$9196[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 112
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 113
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 114
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 115
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 116
	mov	eax, DWORD PTR _pData$9196[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 117
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 118
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 119
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 120
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 121
	mov	eax, DWORD PTR _pData$9196[ebp]
	add	eax, DWORD PTR _LineOff$9171[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 122
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 123
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 124
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 125
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 126
	mov	eax, DWORD PTR _pData$9196[ebp]
	add	eax, DWORD PTR _LineOff$9171[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 127
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 128
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 129
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 130
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 131
	mov	eax, DWORD PTR _ColorSep$9179[ebp]
	add	eax, 2
	sar	eax, 2
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 132
	mov	eax, DWORD PTR _ColorSep$9179[ebp+4]
	add	eax, 2
	sar	eax, 2
	shl	eax, 8
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 133
	mov	eax, DWORD PTR _ColorSep$9179[ebp+8]
	add	eax, 2
	sar	eax, 2
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 134
	mov	eax, DWORD PTR _Color$9180[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	DWORD PTR _PixelIndex$9178[ebp], eax
; Line 135
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$9169[ebp]
	add	ecx, DWORD PTR _y0$9173[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$9168[ebp]
	add	edx, DWORD PTR _x0$9172[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
; Line 136
	mov	eax, DWORD PTR _pData$9196[ebp]
	add	eax, 2
	mov	DWORD PTR _pData$9196[ebp], eax
; Line 137
	jmp	$LN16@GUI_MEMDEV
$LN15@GUI_MEMDEV:
; Line 138
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	mov	ecx, DWORD PTR _pData0$9191[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData0$9191[ebp], edx
; Line 139
	jmp	$LN19@GUI_MEMDEV
$LN18@GUI_MEMDEV:
; Line 141
	jmp	$LN22@GUI_MEMDEV
$LN14@GUI_MEMDEV:
; Line 144
	mov	eax, DWORD PTR _pDev$9170[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData0$9203[ebp], eax
; Line 145
	mov	DWORD PTR _y$9169[ebp], 0
	jmp	SHORT $LN13@GUI_MEMDEV
$LN12@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	add	eax, 1
	mov	DWORD PTR _y$9169[ebp], eax
$LN13@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	cmp	eax, DWORD PTR _YMax$9175[ebp]
	jge	$LN11@GUI_MEMDEV
; Line 147
	mov	eax, DWORD PTR _pData0$9203[ebp]
	mov	DWORD PTR _pData$9208[ebp], eax
; Line 148
	mov	DWORD PTR _x$9168[ebp], 0
	jmp	SHORT $LN10@GUI_MEMDEV
$LN9@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9168[ebp], eax
$LN10@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	cmp	eax, DWORD PTR _XMax$9174[ebp]
	jge	$LN8@GUI_MEMDEV
; Line 149
	mov	eax, DWORD PTR _pData$9208[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 150
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 151
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 152
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 153
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 154
	mov	eax, DWORD PTR _pData$9208[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 155
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 156
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 157
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 158
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 159
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	mov	ecx, DWORD PTR _pData$9208[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	DWORD PTR _PixelIndex$9178[ebp], edx
; Line 160
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 161
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 162
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 163
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 164
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	mov	ecx, DWORD PTR _pData$9208[ebp]
	movzx	edx, WORD PTR [ecx+eax*2+2]
	mov	DWORD PTR _PixelIndex$9178[ebp], edx
; Line 165
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 166
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 167
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 168
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 169
	mov	eax, DWORD PTR _ColorSep$9179[ebp]
	add	eax, 2
	sar	eax, 2
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 170
	mov	eax, DWORD PTR _ColorSep$9179[ebp+4]
	add	eax, 2
	sar	eax, 2
	shl	eax, 8
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 171
	mov	eax, DWORD PTR _ColorSep$9179[ebp+8]
	add	eax, 2
	sar	eax, 2
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 172
	mov	eax, DWORD PTR _Color$9180[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	DWORD PTR _PixelIndex$9178[ebp], eax
; Line 173
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$9169[ebp]
	add	ecx, DWORD PTR _y0$9173[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$9168[ebp]
	add	edx, DWORD PTR _x0$9172[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
; Line 174
	mov	eax, DWORD PTR _pData$9208[ebp]
	add	eax, 4
	mov	DWORD PTR _pData$9208[ebp], eax
; Line 175
	jmp	$LN9@GUI_MEMDEV
$LN8@GUI_MEMDEV:
; Line 176
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _pData0$9203[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pData0$9203[ebp], edx
; Line 177
	jmp	$LN12@GUI_MEMDEV
$LN11@GUI_MEMDEV:
; Line 179
	jmp	$LN22@GUI_MEMDEV
$LN7@GUI_MEMDEV:
; Line 182
	mov	eax, DWORD PTR _pDev$9170[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData0$9215[ebp], eax
; Line 183
	mov	DWORD PTR _y$9169[ebp], 0
	jmp	SHORT $LN6@GUI_MEMDEV
$LN5@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	add	eax, 1
	mov	DWORD PTR _y$9169[ebp], eax
$LN6@GUI_MEMDEV:
	mov	eax, DWORD PTR _y$9169[ebp]
	cmp	eax, DWORD PTR _YMax$9175[ebp]
	jge	$LN22@GUI_MEMDEV
; Line 185
	mov	eax, DWORD PTR _pData0$9215[ebp]
	mov	DWORD PTR _pData$9220[ebp], eax
; Line 186
	mov	DWORD PTR _x$9168[ebp], 0
	jmp	SHORT $LN3@GUI_MEMDEV
$LN2@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9168[ebp], eax
$LN3@GUI_MEMDEV:
	mov	eax, DWORD PTR _x$9168[ebp]
	cmp	eax, DWORD PTR _XMax$9174[ebp]
	jge	$LN1@GUI_MEMDEV
; Line 187
	mov	eax, DWORD PTR _pData$9220[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 188
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 189
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 190
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 191
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 192
	mov	eax, DWORD PTR _pData$9220[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _PixelIndex$9178[ebp], ecx
; Line 193
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 194
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 195
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 196
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 197
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	mov	ecx, DWORD PTR _pData$9220[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _PixelIndex$9178[ebp], edx
; Line 198
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 199
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 200
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 201
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 202
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	mov	ecx, DWORD PTR _pData$9220[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+4]
	mov	DWORD PTR _PixelIndex$9178[ebp], edx
; Line 203
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 204
	mov	eax, DWORD PTR _Color$9180[ebp]
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp]
	mov	DWORD PTR _ColorSep$9179[ebp], eax
; Line 205
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+4]
	mov	DWORD PTR _ColorSep$9179[ebp+4], eax
; Line 206
	mov	eax, DWORD PTR _Color$9180[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	add	eax, DWORD PTR _ColorSep$9179[ebp+8]
	mov	DWORD PTR _ColorSep$9179[ebp+8], eax
; Line 207
	mov	eax, DWORD PTR _ColorSep$9179[ebp]
	add	eax, 2
	sar	eax, 2
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 208
	mov	eax, DWORD PTR _ColorSep$9179[ebp+4]
	add	eax, 2
	sar	eax, 2
	shl	eax, 8
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 209
	mov	eax, DWORD PTR _ColorSep$9179[ebp+8]
	add	eax, 2
	sar	eax, 2
	shl	eax, 16					; 00000010H
	or	eax, DWORD PTR _Color$9180[ebp]
	mov	DWORD PTR _Color$9180[ebp], eax
; Line 210
	mov	eax, DWORD PTR _Color$9180[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	DWORD PTR _PixelIndex$9178[ebp], eax
; Line 211
	mov	eax, DWORD PTR _PixelIndex$9178[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$9169[ebp]
	add	ecx, DWORD PTR _y0$9173[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$9168[ebp]
	add	edx, DWORD PTR _x0$9172[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
; Line 212
	mov	eax, DWORD PTR _pData$9220[ebp]
	add	eax, 8
	mov	DWORD PTR _pData$9220[ebp], eax
; Line 213
	jmp	$LN2@GUI_MEMDEV
$LN1@GUI_MEMDEV:
; Line 214
	mov	eax, DWORD PTR _LineOff$9171[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _pData0$9215[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pData0$9215[ebp], edx
; Line 215
	jmp	$LN5@GUI_MEMDEV
$LN22@GUI_MEMDEV:
; Line 223
	mov	eax, DWORD PTR _hMemPrev$9167[ebp]
	push	eax
	call	_GUI_MEMDEV_Select
	add	esp, 4
$LN29@GUI_MEMDEV:
; Line 300
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@GUI_MEMDEV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN33@GUI_MEMDEV:
	DD	1
	DD	$LN32@GUI_MEMDEV
$LN32@GUI_MEMDEV:
	DD	-164					; ffffff5cH
	DD	12					; 0000000cH
	DD	$LN31@GUI_MEMDEV
$LN31@GUI_MEMDEV:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	101					; 00000065H
	DB	112					; 00000070H
	DB	0
_GUI_MEMDEV_CopyToLCDAA ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV_CopyFromLCDAA
EXTRN	_LCD_GetPixelIndex:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV_CopyFromLCDAA
_TEXT	SEGMENT
tv147 = -316						; size = 4
_LineOff$9242 = -116					; size = 4
_pData$9240 = -104					; size = 4
_YMax$9239 = -92					; size = 4
_XMax$9238 = -80					; size = 4
_y0$9237 = -68						; size = 4
_x0$9236 = -56						; size = 4
_pUsage$9235 = -44					; size = 4
_pDevData$9233 = -32					; size = 4
_y$9232 = -20						; size = 4
_x$9231 = -8						; size = 4
_hMem$ = 8						; size = 4
_GUI_MEMDEV_CopyFromLCDAA PROC				; COMDAT
; Line 306
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 309
	cmp	DWORD PTR _hMem$[ebp], 0
	jne	SHORT $LN10@GUI_MEMDEV@2
; Line 310
	mov	eax, DWORD PTR _GUI_Context+76
	mov	DWORD PTR _hMem$[ebp], eax
$LN10@GUI_MEMDEV@2:
; Line 312
	cmp	DWORD PTR _hMem$[ebp], 0
	je	$LN11@GUI_MEMDEV@2
; Line 314
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pDevData$9233[ebp], eax
; Line 315
	mov	DWORD PTR _pUsage$9235[ebp], 0
; Line 316
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _x0$9236[ebp], ecx
; Line 317
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _y0$9237[ebp], ecx
; Line 318
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	eax, WORD PTR [eax+8]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _XMax$9238[ebp], eax
; Line 319
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	eax, WORD PTR [eax+10]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _YMax$9239[ebp], eax
; Line 320
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData$9240[ebp], eax
; Line 321
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _LineOff$9242[ebp], ecx
; Line 322
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	SHORT $LN8@GUI_MEMDEV@2
; Line 323
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pUsage$9235[ebp], eax
$LN8@GUI_MEMDEV@2:
; Line 324
	mov	DWORD PTR _y$9232[ebp], 0
	jmp	SHORT $LN7@GUI_MEMDEV@2
$LN6@GUI_MEMDEV@2:
	mov	eax, DWORD PTR _y$9232[ebp]
	add	eax, 1
	mov	DWORD PTR _y$9232[ebp], eax
$LN7@GUI_MEMDEV@2:
	mov	eax, DWORD PTR _y$9232[ebp]
	cmp	eax, DWORD PTR _YMax$9239[ebp]
	jge	$LN11@GUI_MEMDEV@2
; Line 325
	cmp	DWORD PTR _pUsage$9235[ebp], 0
	je	SHORT $LN4@GUI_MEMDEV@2
; Line 326
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	ecx, WORD PTR [eax+8]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _y$9232[ebp]
	shl	edx, 1
	push	edx
	push	0
	mov	eax, DWORD PTR _pUsage$9235[ebp]
	push	eax
	mov	ecx, DWORD PTR _pUsage$9235[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 327
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	ecx, WORD PTR [eax+8]
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _y$9232[ebp]
	lea	eax, DWORD PTR [edx+edx+1]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pUsage$9235[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUsage$9235[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@GUI_MEMDEV@2:
; Line 329
	mov	DWORD PTR _x$9231[ebp], 0
	jmp	SHORT $LN3@GUI_MEMDEV@2
$LN2@GUI_MEMDEV@2:
	mov	eax, DWORD PTR _x$9231[ebp]
	add	eax, 1
	mov	DWORD PTR _x$9231[ebp], eax
$LN3@GUI_MEMDEV@2:
	mov	eax, DWORD PTR _x$9231[ebp]
	cmp	eax, DWORD PTR _XMax$9238[ebp]
	jge	SHORT $LN1@GUI_MEMDEV@2
; Line 330
	mov	eax, DWORD PTR _y$9232[ebp]
	add	eax, DWORD PTR _y0$9237[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$9231[ebp]
	add	ecx, DWORD PTR _x0$9236[ebp]
	push	ecx
	call	_LCD_GetPixelIndex
	add	esp, 8
	mov	DWORD PTR tv147[ebp], eax
	mov	edx, DWORD PTR _LineOff$9242[ebp]
	mov	eax, DWORD PTR _pData$9240[ebp]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [eax+edx*4+4], ecx
	mov	edx, DWORD PTR _LineOff$9242[ebp]
	mov	eax, DWORD PTR _pData$9240[ebp]
	mov	ecx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [eax+edx*4], ecx
	mov	edx, DWORD PTR _pData$9240[ebp]
	mov	eax, DWORD PTR tv147[ebp]
	mov	DWORD PTR [edx+4], eax
	mov	ecx, DWORD PTR _pData$9240[ebp]
	mov	edx, DWORD PTR tv147[ebp]
	mov	DWORD PTR [ecx], edx
; Line 331
	mov	eax, DWORD PTR _pData$9240[ebp]
	add	eax, 8
	mov	DWORD PTR _pData$9240[ebp], eax
; Line 332
	jmp	SHORT $LN2@GUI_MEMDEV@2
$LN1@GUI_MEMDEV@2:
; Line 333
	mov	eax, DWORD PTR _pDevData$9233[ebp]
	movsx	ecx, WORD PTR [eax+8]
	and	ecx, 1
	add	ecx, DWORD PTR _LineOff$9242[ebp]
	mov	edx, DWORD PTR _pData$9240[ebp]
	lea	eax, DWORD PTR [edx+ecx*4]
	mov	DWORD PTR _pData$9240[ebp], eax
; Line 334
	jmp	$LN6@GUI_MEMDEV@2
$LN11@GUI_MEMDEV@2:
; Line 337
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_CopyFromLCDAA ENDP
_TEXT	ENDS
END
