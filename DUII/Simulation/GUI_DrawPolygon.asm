; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawPolygon.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GL_DrawPolygon
EXTRN	_GL_DrawLineTo:PROC
EXTRN	_GL_MoveTo:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawpolygon.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_DrawPolygon
_TEXT	SEGMENT
_pPoint$ = -8						; size = 4
_pPoints$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GL_DrawPolygon PROC					; COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 30
	mov	eax, DWORD PTR _pPoints$[ebp]
	mov	DWORD PTR _pPoint$[ebp], eax
; Line 31
	mov	eax, DWORD PTR _pPoint$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPoint$[ebp]
	movsx	eax, WORD PTR [edx]
	add	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_MoveTo
	add	esp, 8
$LN4@GL_DrawPol:
; Line 32
	mov	eax, DWORD PTR _NumPoints$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPoints$[ebp], eax
	cmp	DWORD PTR _NumPoints$[ebp], 0
	jle	SHORT $LN3@GL_DrawPol
; Line 33
	mov	eax, DWORD PTR _pPoint$[ebp]
	add	eax, 4
	mov	DWORD PTR _pPoint$[ebp], eax
; Line 34
	mov	eax, DWORD PTR _pPoint$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPoint$[ebp]
	movsx	eax, WORD PTR [edx]
	add	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_DrawLineTo
	add	esp, 8
; Line 35
	jmp	SHORT $LN4@GL_DrawPol
$LN3@GL_DrawPol:
; Line 38
	mov	eax, DWORD PTR _pPoint$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pPoints$[ebp]
	movsx	eax, WORD PTR [edx]
	cmp	ecx, eax
	jne	SHORT $LN1@GL_DrawPol
	mov	eax, DWORD PTR _pPoint$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _pPoints$[ebp]
	movsx	eax, WORD PTR [edx+2]
	cmp	ecx, eax
	je	SHORT $LN5@GL_DrawPol
$LN1@GL_DrawPol:
; Line 40
	mov	eax, DWORD PTR _pPoints$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pPoints$[ebp]
	movsx	eax, WORD PTR [edx]
	add	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_DrawLineTo
	add	esp, 8
$LN5@GL_DrawPol:
; Line 42
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DrawPolygon ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawPolygon
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawPolygon
_TEXT	SEGMENT
_pPoints$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_DrawPolygon PROC					; COMDAT
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 51
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 52
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawPo
$LN3@GUI_DrawPo:
; Line 54
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	push	eax
	call	_GL_DrawPolygon
	add	esp, 16					; 00000010H
; Line 56
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawPo
$LN5@GUI_DrawPo:
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawPolygon ENDP
_TEXT	ENDS
END
