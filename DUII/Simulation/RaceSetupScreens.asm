; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\RaceSetupScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LapsSelectionPaint
PUBLIC	_DisplayLapsSelection
PUBLIC	_TrackSelectionPaint
PUBLIC	_DisplayTrackSelection
PUBLIC	_VehicleSelectionPaint
PUBLIC	_DisplayVehicleSelection
PUBLIC	_DriverSelectionPaint
PUBLIC	_DisplayDriverSelection
PUBLIC	_NullEntry
PUBLIC	_NotAvailable
PUBLIC	_pTracksShort
PUBLIC	_pLaps
PUBLIC	_RaceSetupScreenList
PUBLIC	_hTrackList
PUBLIC	_hideLevel
PUBLIC	_NoneInRange
PUBLIC	_RoadRaceDisplayTypes
PUBLIC	_DriveDisplayTypes
PUBLIC	_DragDisplayTypes
PUBLIC	_AutoXDisplayTypes
PUBLIC	_HillDisplayTypes
PUBLIC	_reviewRaceDisplay
PUBLIC	_reviewDriveDisplay
PUBLIC	_reviewAutoXDisplay
PUBLIC	_reviewDragDisplay
PUBLIC	_reviewHillDisplay
EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_DATA	SEGMENT
COMM	_numDrivers:DWORD
COMM	_hLapsCheck:DWORD
COMM	_numTracks:DWORD
COMM	_trackTableIndex:DWORD
COMM	_fullSessionName:BYTE:050H
COMM	_editType:DWORD
COMM	_tempVehicleName:BYTE:011H
COMM	_pDrivers:DWORD:033H
COMM	_hTrackTypeBtn:DWORD
COMM	_BestLaps:DWORD:0c8H
COMM	_numVehicles:DWORD
COMM	_mode:DWORD
COMM	_button:DWORD
COMM	_VehicleList:BYTE:02f30H
COMM	_vehicleSelectionChanged:BYTE
COMM	_hVehicleList:DWORD
COMM	_ctType:DWORD
COMM	_newName:BYTE:011H
COMM	_numberOfShortListTracksUser:DWORD
COMM	_hRSDeleteButton:DWORD
COMM	_numLaps:DWORD
COMM	_pVehicles:DWORD:097H
COMM	_DriverList:BYTE:0ff0H
COMM	_hTop:DWORD
COMM	_SessionData:BYTE:0122aH
COMM	_hDriverList:DWORD
COMM	_hQualifyingCheck:DWORD
COMM	_hBottom:DWORD
COMM	_sessionName:BYTE:050H
COMM	_SessionNameData:BYTE:041a0H
COMM	_NameStruct:BYTE:054H
COMM	_selectedTrackName:BYTE:011H
_DATA	ENDS
_BSS	SEGMENT
_pTracksShort DD 01H DUP (?)
_pLaps	DD	01H DUP (?)
_hTrackList DD	01H DUP (?)
_pEntryKeyboard DD 01H DUP (?)
_hideLevel DD	01H DUP (?)
$SG120790 DB	01H DUP (?)
	ALIGN	4

$SG120794 DB	01H DUP (?)
	ALIGN	4

$SG120812 DB	01H DUP (?)
	ALIGN	4

$SG121015 DB	01H DUP (?)
	ALIGN	4

$SG121041 DB	01H DUP (?)
	ALIGN	4

$SG121119 DB	01H DUP (?)
	ALIGN	4

$SG121265 DB	01H DUP (?)
	ALIGN	4

$SG121268 DB	01H DUP (?)
	ALIGN	4

$SG121277 DB	01H DUP (?)
	ALIGN	4

$SG121296 DB	01H DUP (?)
	ALIGN	4

$SG121735 DB	01H DUP (?)
	ALIGN	4

$SG121736 DB	01H DUP (?)
	ALIGN	4

$SG121737 DB	01H DUP (?)
	ALIGN	4

_reviewRaceDisplay DB 01H DUP (?)
	ALIGN	4

_reviewDriveDisplay DB 01H DUP (?)
	ALIGN	4

_reviewAutoXDisplay DB 01H DUP (?)
	ALIGN	4

_reviewDragDisplay DB 01H DUP (?)
	ALIGN	4

_reviewHillDisplay DB 01H DUP (?)
	ALIGN	4

$SG121816 DB	01H DUP (?)
	ALIGN	4

$SG121820 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_RaceSetupScreenList DD 00H
	DD	FLAT:_DisplayDriverSelection
	DD	FLAT:_DriverSelectionPaint
	DD	01H
	DD	FLAT:_DisplayVehicleSelection
	DD	FLAT:_VehicleSelectionPaint
	DD	02H
	DD	FLAT:_DisplayTrackSelection
	DD	FLAT:_TrackSelectionPaint
	DD	03H
	DD	FLAT:_DisplayLapsSelection
	DD	FLAT:_LapsSelectionPaint
	DD	0ffffffffH
	DD	00H
	DD	00H
$SG120650 DB	'Enter New Driver Name', 00H
	ORG $+2
$SG120652 DB	'Enter New Vehicle Name', 00H
	ORG $+1
$SG120654 DB	'Enter New Track Name', 00H
	ORG $+3
$SG120656 DB	'Edit Driver Name', 00H
	ORG $+3
$SG120658 DB	'Edit Vehicle Name', 00H
	ORG $+2
$SG120660 DB	'Edit Track Name', 00H
$SG120672 DB	'Enter New Driver Name', 00H
	ORG $+2
$SG120674 DB	'Enter New Vehicle Name', 00H
	ORG $+1
$SG120676 DB	'Enter New Track Name', 00H
	ORG $+3
$SG120678 DB	'Edit Driver Name', 00H
	ORG $+3
$SG120680 DB	'Edit Vehicle Name', 00H
	ORG $+2
$SG120682 DB	'Edit Track Name', 00H
$SG120712 DB	'r', 00H
	ORG $+2
$SG120755 DB	'%s%d', 00H
	ORG $+3
$SG120907 DB	'All Tracks - World', 00H
	ORG $+1
$SG120910 DB	'Within %d km', 00H
	ORG $+3
$SG120914 DB	'Within %d miles', 00H
$SG120944 DB	'Delete Driver', 00H
	ORG $+2
$SG120947 DB	'Edit Name', 00H
	ORG $+2
$SG120948 DB	'New Driver', 00H
	ORG $+1
$SG120949 DB	'Select Driver', 00H
	ORG $+2
$SG120956 DB	'Vehicle Settings', 00H
	ORG $+3
$SG120957 DB	'Delete Vehicle', 00H
	ORG $+1
$SG120960 DB	'Edit Name', 00H
	ORG $+2
$SG120961 DB	'New Vehicle', 00H
$SG120962 DB	'Select Vehicle', 00H
	ORG $+1
$SG120976 DB	'Delete Track', 00H
	ORG $+3
$SG120977 DB	'Confirm Track', 00H
	ORG $+2
$SG120978 DB	'Auto-Create Track', 00H
	ORG $+2
$SG120980 DB	'Settings', 00H
	ORG $+3
$SG120981 DB	'Edit Name', 00H
	ORG $+2
$SG120982 DB	'Delete Track', 00H
	ORG $+3
$SG120983 DB	'New Track', 00H
	ORG $+2
$SG121057 DB	'Type', 00H
	ORG $+3
$SG121063 DB	'Drive', 00H
	ORG $+2
$SG121065 DB	'AutoX', 00H
	ORG $+2
$SG121067 DB	'Drag', 00H
	ORG $+3
$SG121069 DB	'Hill', 00H
	ORG $+3
$SG121071 DB	'Road', 00H
	ORG $+3
$SG121077 DB	'Track out of range', 00H
	ORG $+1
$SG121123 DB	'\', 00H
	ORG $+2
$SG121083 DB	'LAPPING MODE', 0aH, 'Predictive lap timer', 0aH, 'compar'
	DB	'es against Best Lap', 0aH, 'ever recorded', 00H
	ORG $+2
$SG121155 DB	'\', 00H
	ORG $+2
$SG121084 DB	'QUALIFYING MODE', 0aH, 'Predictive lap timer', 0aH, 'com'
	DB	'pares against Current', 0aH, 'Session lap time only', 00H
$SG121157 DB	'rb', 00H
	ORG $+1
$SG121169 DB	'%s', 00H
	ORG $+1
$SG121183 DB	'%s', 00H
	ORG $+1
$SG121187 DB	'%s', 00H
	ORG $+1
$SG121235 DB	'\', 00H
	ORG $+2
$SG121237 DB	'rb', 00H
	ORG $+1
$SG121264 DB	'Best Lap: ', 00H
	ORG $+1
$SG121267 DB	'Time: ', 00H
	ORG $+1
$SG121270 DB	'Best Lap: %d', 00H
	ORG $+3
$SG121276 DB	'Run Time: ', 00H
	ORG $+1
$SG121289 DB	'1/4mi ET: ', 00H
	ORG $+1
$SG121291 DB	'1/8mi ET: ', 00H
	ORG $+1
$SG121293 DB	'1000'' ET: ', 00H
	ORG $+1
$SG121295 DB	'Elapsed: ', 00H
	ORG $+2
$SG121298 DB	'Elapsed:', 00H
	ORG $+3
$SG121393 DB	'ERROR!', 00H
	ORG $+1
$SG121394 DB	'Not a valid name.', 00H
	ORG $+2
$SG121395 DB	'Please enter a valid name.', 00H
	ORG $+1
$SG121396 DB	'OK', 00H
	ORG $+1
$SG121491 DB	'\', 00H
	ORG $+2
$SG121504 DB	'12:%02d am', 00H
	ORG $+1
$SG121507 DB	'%d:%02d am', 00H
	ORG $+1
$SG121510 DB	'12:%02d pm', 00H
	ORG $+1
$SG121512 DB	'%d:%02d pm', 00H
	ORG $+1
$SG121623 DB	'\', 00H
	ORG $+2
$SG121634 DB	'WARNING', 00H
$SG121635 DB	'About to Delete Driver!', 00H
$SG121636 DB	'Are you sure?', 00H
	ORG $+2
$SG121637 DB	'YES', 00H
$SG121638 DB	'CANCEL', 00H
	ORG $+1
$SG121640 DB	'WARNING', 00H
$SG121641 DB	'About to Delete Vehicle!', 00H
	ORG $+3
$SG121642 DB	'Are you sure?', 00H
	ORG $+2
$SG121643 DB	'YES', 00H
$SG121644 DB	'CANCEL', 00H
	ORG $+1
$SG121646 DB	'WARNING', 00H
$SG121647 DB	'About to Delete Track!', 00H
	ORG $+1
$SG121648 DB	'Are you sure?', 00H
	ORG $+2
$SG121649 DB	'YES', 00H
$SG121650 DB	'CANCEL', 00H
	ORG $+1
$SG121652 DB	'WARNING', 00H
$SG121653 DB	'A file of this name already exists!', 00H
$SG121654 DB	'Replace?', 00H
	ORG $+3
$SG121655 DB	'YES', 00H
$SG121656 DB	'NO', 00H
	ORG $+1
$SG121658 DB	'ERROR', 00H
	ORG $+2
$SG121659 DB	'This is the name of a predefined', 00H
	ORG $+3
$SG121660 DB	'track or this name is already in use!', 00H
	ORG $+2
$SG121661 DB	'Please change the name.', 00H
$SG121662 DB	'OK', 00H
	ORG $+1
$SG121663 DB	'CANCEL', 00H
	ORG $+1
$SG121665 DB	'ERROR', 00H
	ORG $+2
$SG121666 DB	'Cannot delete this track!', 00H
	ORG $+2
$SG121667 DB	'OK', 00H
	ORG $+1
$SG121696 DB	'WARNING', 00H
$SG121697 DB	'There are too many session files!', 00H
	ORG $+2
$SG121698 DB	'Some sessions might not be listed', 00H
	ORG $+2
$SG121699 DB	'Delete some sessions to make room', 00H
	ORG $+2
$SG121700 DB	'OK', 00H
	ORG $+1
$SG121702 DB	'WARNING', 00H
$SG121703 DB	'There are too many session files!', 00H
	ORG $+2
$SG121704 DB	'Some sessions might not be listed', 00H
	ORG $+2
$SG121705 DB	'Delete some sessions to make room', 00H
	ORG $+2
$SG121706 DB	'OK', 00H
	ORG $+1
$SG121765 DB	'Race', 00H
	ORG $+3
$SG121767 DB	'Drive', 00H
	ORG $+2
$SG121769 DB	'AutoX', 00H
	ORG $+2
$SG121771 DB	'Drag', 00H
	ORG $+3
$SG121773 DB	'Hill', 00H
	ORG $+3
_RoadRaceDisplayTypes DD 01H
	DD	02H
	DD	03H
	DD	00H
_DriveDisplayTypes DD 04H
	DD	05H
	DD	02H
	DD	03H
	DD	00H
_DragDisplayTypes DD 06H
	DD	07H
	DD	02H
	DD	03H
	DD	00H
_AutoXDisplayTypes DD 08H
	DD	02H
	DD	03H
	DD	00H
_HillDisplayTypes DD 08H
	DD	02H
	DD	03H
	DD	00H
$SG121817 DB	'Drv: %s', 00H
$SG121821 DB	'Veh: %s', 00H
$SG121823 DB	'Time: ', 00H
	ORG $+1
$SG121830 DB	'Max: ', 00H
	ORG $+2
$SG121835 DB	'Dst: ', 00H
	ORG $+2
$SG121863 DB	'Older File Format', 00H
	ORG $+2
$SG121864 DB	'N/A', 00H
_DATA	ENDS
CONST	SEGMENT
_NullEntry DB	00H
	ORG $+3
_NotAvailable DB 'Older File Format.', 0aH, 0aH, 'Data Not Available.', 00H
	ORG $+4
_BadNameDialog DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121393
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121394
	DW	00H
	DW	00H
	DW	019H
	DW	0168H
	DW	032H
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121395
	DW	00H
	DW	00H
	DW	041H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121396
	DW	01H
	DW	082H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_NoneInRange DB	'None in range', 00H
	ORG $+3
	ORG $+7
_DeleteDriverResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121634
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121635
	DW	00H
	DW	00H
	DW	019H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121636
	DW	00H
	DW	00H
	DW	041H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121637
	DW	01H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121638
	DW	02H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_DeleteVehicleResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121640
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121641
	DW	00H
	DW	00H
	DW	019H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121642
	DW	00H
	DW	00H
	DW	041H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121643
	DW	01H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121644
	DW	02H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_DeleteTrackResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121646
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121647
	DW	00H
	DW	00H
	DW	019H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121648
	DW	00H
	DW	00H
	DW	041H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121649
	DW	01H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121650
	DW	02H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_FileAlreadyExistsResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121652
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121653
	DW	00H
	DW	00H
	DW	019H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121654
	DW	00H
	DW	00H
	DW	041H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121655
	DW	03H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121656
	DW	04H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_TrackAlreadyExistsResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121658
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121659
	DW	00H
	DW	00H
	DW	0fH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121660
	DW	00H
	DW	00H
	DW	02dH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121661
	DW	00H
	DW	00H
	DW	04bH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121662
	DW	01H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121663
	DW	02H
	DW	0c8H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_CantDeleteResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121665
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121666
	DW	00H
	DW	00H
	DW	028H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121667
	DW	01H
	DW	082H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_TooManyTracksResourcesPrim DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121696
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121697
	DW	00H
	DW	00H
	DW	0fH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121698
	DW	00H
	DW	00H
	DW	02dH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121699
	DW	00H
	DW	00H
	DW	04bH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121700
	DW	01H
	DW	082H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_TooManyTracksResourcesSub DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG121702
	DW	00H
	DW	00H
	DW	00H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121703
	DW	00H
	DW	00H
	DW	0fH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121704
	DW	00H
	DW	00H
	DW	02dH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG121705
	DW	00H
	DW	00H
	DW	04bH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG121706
	DW	01H
	DW	082H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
CONST	ENDS
PUBLIC	_GetRaceSetupScreensWindowHandle
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
	ALIGN	4

_hRaceSetupScreens DD 01H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\duii\racesetupscreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GetRaceSetupScreensWindowHandle
_TEXT	SEGMENT
_GetRaceSetupScreensWindowHandle PROC			; COMDAT
; Line 341
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 342
	mov	eax, DWORD PTR _hRaceSetupScreens
; Line 343
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetRaceSetupScreensWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetRaceSetupScreensWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetRaceSetupScreensWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetRaceSetupScreensWindowHandle PROC			; COMDAT
; Line 346
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 347
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hRaceSetupScreens, eax
; Line 348
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetRaceSetupScreensWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetTrackSelectionWindowHandle
PUBLIC	_RSSKillKeyboard
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_screen_scrolling:DWORD
EXTRN	_DestroyKeyboard:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RSSKillKeyboard
_TEXT	SEGMENT
_RSSKillKeyboard PROC					; COMDAT
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 352
	cmp	DWORD PTR _pEntryKeyboard, 0
	je	SHORT $LN3@RSSKillKey
; Line 354
	mov	eax, DWORD PTR _pEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
; Line 355
	mov	DWORD PTR _pEntryKeyboard, 0
$LN3@RSSKillKey:
; Line 357
	mov	DWORD PTR _screen_scrolling, 1
; Line 359
	cmp	DWORD PTR _ctType, 0
	jne	SHORT $LN2@RSSKillKey
; Line 360
	push	5
	call	_SetScreenType
	add	esp, 4
	jmp	SHORT $LN1@RSSKillKey
$LN2@RSSKillKey:
; Line 361
	push	24					; 00000018H
	call	_SetScreenType
	add	esp, 4
$LN1@RSSKillKey:
; Line 362
	call	_GetTrackSelectionWindowHandle
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 363
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RSSKillKeyboard ENDP
_TEXT	ENDS
EXTRN	_hDisplayClosestTracks:DWORD
EXTRN	_GetScreenType:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetTrackSelectionWindowHandle
_TEXT	SEGMENT
_GetTrackSelectionWindowHandle PROC			; COMDAT
; Line 366
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 367
	call	_GetScreenType
	cmp	eax, 5
	jne	SHORT $LN2@GetTrackSe
; Line 368
	mov	eax, DWORD PTR _hRaceSetupScreens
	jmp	SHORT $LN3@GetTrackSe
	jmp	SHORT $LN3@GetTrackSe
$LN2@GetTrackSe:
; Line 369
	mov	eax, DWORD PTR _hDisplayClosestTracks
$LN3@GetTrackSe:
; Line 370
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTrackSelectionWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_TryAgainKeyboard
EXTRN	_CreateKeyboard:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TryAgainKeyboard
_TEXT	SEGMENT
tv64 = -220						; size = 4
_pName$ = -20						; size = 4
_pTitle$ = -8						; size = 4
_TryAgainKeyboard PROC					; COMDAT
; Line 382
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 386
	mov	eax, DWORD PTR _button
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2050				; 00000802H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 6
	ja	SHORT $LN7@TryAgainKe
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@TryAgainKe[edx*4]
$LN7@TryAgainKe:
; Line 390
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120650
; Line 391
	jmp	SHORT $LN8@TryAgainKe
$LN6@TryAgainKe:
; Line 393
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120652
; Line 394
	jmp	SHORT $LN8@TryAgainKe
$LN5@TryAgainKe:
; Line 396
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120654
; Line 397
	jmp	SHORT $LN8@TryAgainKe
$LN4@TryAgainKe:
; Line 399
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120656
; Line 400
	jmp	SHORT $LN8@TryAgainKe
$LN3@TryAgainKe:
; Line 402
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120658
; Line 403
	jmp	SHORT $LN8@TryAgainKe
$LN2@TryAgainKe:
; Line 405
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120660
$LN8@TryAgainKe:
; Line 408
	mov	DWORD PTR _pName$[ebp], OFFSET _newName
; Line 410
	cmp	DWORD PTR _pEntryKeyboard, 0
	je	SHORT $LN1@TryAgainKe
; Line 411
	mov	eax, DWORD PTR _pEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
$LN1@TryAgainKe:
; Line 412
	push	0
	call	_GetTrackSelectionWindowHandle
	push	eax
	push	0
	push	16					; 00000010H
	push	0
	push	1
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTitle$[ebp]
	push	ecx
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pEntryKeyboard, eax
; Line 413
	mov	DWORD PTR _screen_scrolling, 0
; Line 414
	push	20					; 00000014H
	call	_SetScreenType
	add	esp, 4
; Line 415
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@TryAgainKe:
	DD	$LN6@TryAgainKe
	DD	$LN3@TryAgainKe
	DD	$LN7@TryAgainKe
	DD	$LN5@TryAgainKe
	DD	$LN2@TryAgainKe
	DD	$LN7@TryAgainKe
	DD	$LN4@TryAgainKe
_TryAgainKeyboard ENDP
_TEXT	ENDS
PUBLIC	_DisplayKeyboard
EXTRN	_strcpy:PROC
EXTRN	_sysData:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayKeyboard
_TEXT	SEGMENT
tv64 = -220						; size = 4
_pName$ = -20						; size = 4
_pTitle$ = -8						; size = 4
_Id$ = 8						; size = 4
_DisplayKeyboard PROC					; COMDAT
; Line 418
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 422
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2050				; 00000802H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 6
	ja	SHORT $LN7@DisplayKey
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@DisplayKey[edx*4]
$LN7@DisplayKey:
; Line 426
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120672
; Line 427
	mov	BYTE PTR _newName, 0
; Line 428
	mov	DWORD PTR _editType, 0
; Line 429
	jmp	$LN8@DisplayKey
$LN6@DisplayKey:
; Line 431
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120674
; Line 432
	mov	BYTE PTR _newName, 0
; Line 433
	mov	DWORD PTR _editType, 1
; Line 434
	jmp	$LN8@DisplayKey
$LN5@DisplayKey:
; Line 436
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120676
; Line 437
	mov	BYTE PTR _newName, 0
; Line 438
	mov	DWORD PTR _editType, 2
; Line 439
	jmp	SHORT $LN8@DisplayKey
$LN4@DisplayKey:
; Line 441
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120678
; Line 442
	push	OFFSET _sysData+126
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 443
	mov	DWORD PTR _editType, 0
; Line 444
	jmp	SHORT $LN8@DisplayKey
$LN3@DisplayKey:
; Line 446
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120680
; Line 447
	push	OFFSET _sysData+143
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 448
	mov	DWORD PTR _editType, 1
; Line 449
	jmp	SHORT $LN8@DisplayKey
$LN2@DisplayKey:
; Line 451
	mov	DWORD PTR _pTitle$[ebp], OFFSET $SG120682
; Line 452
	push	OFFSET _sysData+160
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 453
	mov	DWORD PTR _editType, 2
$LN8@DisplayKey:
; Line 456
	mov	DWORD PTR _pName$[ebp], OFFSET _newName
; Line 458
	cmp	DWORD PTR _pEntryKeyboard, 0
	je	SHORT $LN1@DisplayKey
; Line 459
	mov	eax, DWORD PTR _pEntryKeyboard
	push	eax
	call	_DestroyKeyboard
	add	esp, 4
$LN1@DisplayKey:
; Line 460
	push	0
	call	_GetTrackSelectionWindowHandle
	push	eax
	push	0
	push	16					; 00000010H
	push	0
	push	1
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTitle$[ebp]
	push	ecx
	call	_CreateKeyboard
	add	esp, 32					; 00000020H
	mov	DWORD PTR _pEntryKeyboard, eax
; Line 461
	mov	DWORD PTR _screen_scrolling, 0
; Line 462
	push	20					; 00000014H
	call	_SetScreenType
	add	esp, 4
; Line 463
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN12@DisplayKey:
	DD	$LN6@DisplayKey
	DD	$LN3@DisplayKey
	DD	$LN7@DisplayKey
	DD	$LN5@DisplayKey
	DD	$LN2@DisplayKey
	DD	$LN7@DisplayKey
	DD	$LN4@DisplayKey
_DisplayKeyboard ENDP
_TEXT	ENDS
PUBLIC	_CreateNewTrack
PUBLIC	_UpdateList
PUBLIC	_EditTypeToFileType
PUBLIC	_CheckForDuplicateName
PUBLIC	__$ArrayPad$
PUBLIC	_CreateNewEntry
EXTRN	_SetDefaultVehicleData:PROC
EXTRN	_BUTTON_SetTextColor:PROC
EXTRN	_SetDefaultDriverData:PROC
EXTRN	_remove:PROC
EXTRN	_ConvertToFilename:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateNewEntry
_TEXT	SEGMENT
_fileName$120689 = -276					; size = 256
_retval$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_CreateNewEntry PROC					; COMDAT
; Line 476
	push	ebp
	mov	ebp, esp
	sub	esp, 472				; 000001d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-472]
	mov	ecx, 118				; 00000076H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 479
	call	_CheckForDuplicateName
	mov	DWORD PTR _retval$[ebp], eax
	cmp	DWORD PTR _retval$[ebp], 0
	je	SHORT $LN11@CreateNewE
; Line 481
	cmp	DWORD PTR _retval$[ebp], 1
	jne	SHORT $LN10@CreateNewE
; Line 486
	mov	eax, DWORD PTR _editType
	push	eax
	call	_EditTypeToFileType
	add	esp, 4
	push	eax
	push	OFFSET _newName
	lea	ecx, DWORD PTR _fileName$120689[ebp]
	push	ecx
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 488
	lea	eax, DWORD PTR _fileName$120689[ebp]
	push	eax
	call	_remove
	add	esp, 4
	jmp	SHORT $LN11@CreateNewE
$LN10@CreateNewE:
; Line 494
	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN12@CreateNewE
$LN11@CreateNewE:
; Line 497
	cmp	DWORD PTR _editType, 0
	jne	SHORT $LN8@CreateNewE
; Line 499
	call	_SetDefaultDriverData
; Line 500
	call	_UpdateList
; Line 502
	cmp	DWORD PTR _numDrivers, 1
	jle	SHORT $LN7@CreateNewE
; Line 504
	push	0
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 505
	push	0
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN7@CreateNewE:
; Line 506
	jmp	SHORT $LN6@CreateNewE
$LN8@CreateNewE:
; Line 508
	cmp	DWORD PTR _editType, 1
	jne	SHORT $LN5@CreateNewE
; Line 510
	push	0
	call	_SetDefaultVehicleData
	add	esp, 4
; Line 511
	call	_UpdateList
; Line 513
	cmp	DWORD PTR _numVehicles, 1
	jle	SHORT $LN4@CreateNewE
; Line 515
	push	0
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 516
	push	0
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN4@CreateNewE:
; Line 517
	jmp	SHORT $LN6@CreateNewE
$LN5@CreateNewE:
; Line 519
	cmp	DWORD PTR _editType, 2
	jne	SHORT $LN2@CreateNewE
; Line 521
	call	_CreateNewTrack
; Line 522
	call	_UpdateList
	jmp	SHORT $LN6@CreateNewE
$LN2@CreateNewE:
; Line 524
	xor	eax, eax
	jmp	SHORT $LN12@CreateNewE
$LN6@CreateNewE:
; Line 526
	mov	eax, 1
$LN12@CreateNewE:
; Line 527
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CreateNewE
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 472				; 000001d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@CreateNewE:
	DD	1
	DD	$LN15@CreateNewE
$LN15@CreateNewE:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN14@CreateNewE
$LN14@CreateNewE:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_CreateNewEntry ENDP
_TEXT	ENDS
PUBLIC	_RaceSetupPopup
PUBLIC	__$ArrayPad$
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	__stricmp:PROC
EXTRN	_trackTable:BYTE
EXTRN	_numberOfTracks:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CheckForDuplicateName
_TEXT	SEGMENT
_i$120704 = -288					; size = 4
_pFile$ = -276						; size = 4
_fileName$ = -264					; size = 256
__$ArrayPad$ = -4					; size = 4
_CheckForDuplicateName PROC				; COMDAT
; Line 539
	push	ebp
	mov	ebp, esp
	sub	esp, 484				; 000001e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-484]
	mov	ecx, 121				; 00000079H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 547
	mov	eax, DWORD PTR _editType
	push	eax
	call	_EditTypeToFileType
	add	esp, 4
	push	eax
	push	OFFSET _newName
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 550
	cmp	DWORD PTR _editType, 2
	jne	SHORT $LN11@CheckForDu
; Line 555
	mov	DWORD PTR _i$120704[ebp], 0
	jmp	SHORT $LN10@CheckForDu
$LN9@CheckForDu:
	mov	eax, DWORD PTR _i$120704[ebp]
	add	eax, 1
	mov	DWORD PTR _i$120704[ebp], eax
$LN10@CheckForDu:
	mov	eax, DWORD PTR _i$120704[ebp]
	cmp	eax, DWORD PTR _numberOfTracks
	jge	SHORT $LN8@CheckForDu
; Line 558
	mov	eax, DWORD PTR _i$120704[ebp]
	imul	eax, 72					; 00000048H
	add	eax, OFFSET _trackTable
	push	eax
	push	OFFSET _newName
	call	__stricmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@CheckForDu
; Line 563
	push	2068					; 00000814H
	call	_RaceSetupPopup
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@CheckForDu
; Line 564
	mov	eax, -2					; fffffffeH
	jmp	SHORT $LN12@CheckForDu
	jmp	SHORT $LN7@CheckForDu
$LN6@CheckForDu:
; Line 565
	or	eax, -1
	jmp	SHORT $LN12@CheckForDu
$LN7@CheckForDu:
; Line 567
	jmp	SHORT $LN9@CheckForDu
$LN8@CheckForDu:
; Line 568
	xor	eax, eax
	jmp	SHORT $LN12@CheckForDu
$LN11@CheckForDu:
; Line 572
	push	OFFSET $SG120712
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$[ebp], eax
	cmp	DWORD PTR _pFile$[ebp], 0
	je	SHORT $LN4@CheckForDu
; Line 575
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 582
	push	2067					; 00000813H
	call	_RaceSetupPopup
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@CheckForDu
; Line 583
	or	eax, -1
	jmp	SHORT $LN12@CheckForDu
	jmp	SHORT $LN2@CheckForDu
$LN3@CheckForDu:
; Line 584
	mov	eax, 1
	jmp	SHORT $LN12@CheckForDu
$LN2@CheckForDu:
; Line 586
	jmp	SHORT $LN12@CheckForDu
$LN4@CheckForDu:
	xor	eax, eax
$LN12@CheckForDu:
; Line 587
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@CheckForDu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 484				; 000001e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN16@CheckForDu:
	DD	1
	DD	$LN15@CheckForDu
$LN15@CheckForDu:
	DD	-264					; fffffef8H
	DD	256					; 00000100H
	DD	$LN14@CheckForDu
$LN14@CheckForDu:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_CheckForDuplicateName ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _EditTypeToFileType
_TEXT	SEGMENT
_editType$ = 8						; size = 4
_EditTypeToFileType PROC				; COMDAT
; Line 590
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 591
	cmp	DWORD PTR _editType$[ebp], 2
	jne	SHORT $LN6@EditTypeTo
; Line 592
	mov	eax, 1
	jmp	SHORT $LN7@EditTypeTo
	jmp	SHORT $LN7@EditTypeTo
$LN6@EditTypeTo:
; Line 593
	cmp	DWORD PTR _editType$[ebp], 1
	jne	SHORT $LN4@EditTypeTo
; Line 594
	mov	eax, 2
	jmp	SHORT $LN7@EditTypeTo
	jmp	SHORT $LN7@EditTypeTo
$LN4@EditTypeTo:
; Line 595
	cmp	DWORD PTR _editType$[ebp], 0
	jne	SHORT $LN2@EditTypeTo
; Line 596
	mov	eax, 3
	jmp	SHORT $LN7@EditTypeTo
	jmp	SHORT $LN7@EditTypeTo
$LN2@EditTypeTo:
; Line 597
	xor	eax, eax
$LN7@EditTypeTo:
; Line 598
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_EditTypeToFileType ENDP
_TEXT	ENDS
PUBLIC	_GetTrackNumber
EXTRN	_isdigit:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetTrackNumber
_TEXT	SEGMENT
tv67 = -217						; size = 1
_ch$ = -17						; size = 1
_temp$ = -8						; size = 4
_pName$ = 8						; size = 4
_offset$ = 12						; size = 4
_GetTrackNumber PROC					; COMDAT
; Line 605
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 606
	mov	DWORD PTR _temp$[ebp], 0
$LN2@GetTrackNu:
; Line 609
	mov	eax, DWORD PTR _pName$[ebp]
	add	eax, DWORD PTR _offset$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	mov	dl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR tv67[ebp], dl
	mov	eax, DWORD PTR _offset$[ebp]
	add	eax, 1
	mov	DWORD PTR _offset$[ebp], eax
	movzx	ecx, BYTE PTR tv67[ebp]
	push	ecx
	call	_isdigit
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@GetTrackNu
; Line 611
	mov	eax, DWORD PTR _temp$[ebp]
	imul	eax, 10					; 0000000aH
	mov	DWORD PTR _temp$[ebp], eax
; Line 612
	movzx	eax, BYTE PTR _ch$[ebp]
	mov	ecx, DWORD PTR _temp$[ebp]
	lea	edx, DWORD PTR [ecx+eax-48]
	mov	DWORD PTR _temp$[ebp], edx
; Line 613
	jmp	SHORT $LN2@GetTrackNu
$LN1@GetTrackNu:
; Line 614
	mov	eax, DWORD PTR _temp$[ebp]
; Line 615
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTrackNumber ENDP
_TEXT	ENDS
PUBLIC	_ValidFileName
PUBLIC	_GetSelectedReviewModeText
PUBLIC	_FindLastTrackOfCurrentType
EXTRN	_closedir:PROC
EXTRN	_strncmp:PROC
EXTRN	_readdir:PROC
EXTRN	_opendir:PROC
EXTRN	_TRACK_PATH:BYTE
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FindLastTrackOfCurrentType
_TEXT	SEGMENT
_temp$120750 = -68					; size = 4
_ent$ = -56						; size = 4
_dir$ = -44						; size = 4
_trackTypeLen$ = -32					; size = 4
_pTrackType$ = -20					; size = 4
_trackNumber$ = -8					; size = 4
_FindLastTrackOfCurrentType PROC			; COMDAT
; Line 621
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 622
	mov	DWORD PTR _trackNumber$[ebp], 0
; Line 634
	call	_GetSelectedReviewModeText
	mov	DWORD PTR _pTrackType$[ebp], eax
; Line 635
	mov	eax, DWORD PTR _pTrackType$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _trackTypeLen$[ebp], eax
; Line 638
	push	OFFSET _TRACK_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 639
	cmp	DWORD PTR _dir$[ebp], 0
	je	SHORT $LN6@FindLastTr
$LN5@FindLastTr:
; Line 641
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	SHORT $LN4@FindLastTr
; Line 642
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ValidFileName
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN3@FindLastTr
; Line 644
	mov	eax, DWORD PTR _trackTypeLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTrackType$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ent$[ebp]
	add	edx, 2
	push	edx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN3@FindLastTr
; Line 646
	mov	eax, DWORD PTR _trackTypeLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	add	ecx, 2
	push	ecx
	call	_GetTrackNumber
	add	esp, 8
	mov	DWORD PTR _temp$120750[ebp], eax
; Line 647
	mov	eax, DWORD PTR _temp$120750[ebp]
	cmp	eax, DWORD PTR _trackNumber$[ebp]
	jle	SHORT $LN3@FindLastTr
; Line 648
	mov	eax, DWORD PTR _temp$120750[ebp]
	mov	DWORD PTR _trackNumber$[ebp], eax
$LN3@FindLastTr:
; Line 651
	jmp	SHORT $LN5@FindLastTr
$LN4@FindLastTr:
; Line 652
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN6@FindLastTr:
; Line 671
	mov	eax, DWORD PTR _trackNumber$[ebp]
; Line 672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FindLastTrackOfCurrentType ENDP
_TEXT	ENDS
PUBLIC	_AutoCreateNewTrack
EXTRN	_sprintf:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AutoCreateNewTrack
_TEXT	SEGMENT
_last$ = -8						; size = 4
_AutoCreateNewTrack PROC				; COMDAT
; Line 678
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 679
	call	_FindLastTrackOfCurrentType
	mov	DWORD PTR _last$[ebp], eax
; Line 680
	mov	eax, DWORD PTR _last$[ebp]
	add	eax, 1
	mov	DWORD PTR _last$[ebp], eax
	mov	ecx, DWORD PTR _last$[ebp]
	push	ecx
	call	_GetSelectedReviewModeText
	push	eax
	push	OFFSET $SG120755
	push	OFFSET _newName
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 681
	call	_CreateNewTrack
; Line 682
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_AutoCreateNewTrack ENDP
_TEXT	ENDS
PUBLIC	_FindFile
PUBLIC	_CheckWorkingTrackName
PUBLIC	_SessionTypeToTrackType
PUBLIC	__$ArrayPad$
EXTRN	_WriteUserDataEvent:PROC
EXTRN	_GetClosestTracks:PROC
EXTRN	_AddTrack:PROC
EXTRN	_memset:PROC
EXTRN	__chkstk:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateNewTrack
_TEXT	SEGMENT
_newTrack$ = -5288					; size = 5280
__$ArrayPad$ = -4					; size = 4
_CreateNewTrack PROC					; COMDAT
; Line 685
	push	ebp
	mov	ebp, esp
	mov	eax, 5484				; 0000156cH
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-5484]
	mov	ecx, 1371				; 0000055bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 688
	push	5280					; 000014a0H
	push	0
	lea	eax, DWORD PTR _newTrack$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 689
	movzx	eax, BYTE PTR _sysData+208
	push	eax
	call	_SessionTypeToTrackType
	add	esp, 4
	mov	BYTE PTR _newTrack$[ebp+64], al
; Line 690
	lea	eax, DWORD PTR _newTrack$[ebp]
	push	eax
	push	OFFSET _newName
	call	_AddTrack
	add	esp, 8
; Line 691
	push	OFFSET _newName
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 692
	mov	DWORD PTR _trackTableIndex, -1
; Line 693
	call	_CheckWorkingTrackName
; Line 694
	push	OFFSET _sysData+160
	call	_FindFile
	add	esp, 4
	mov	DWORD PTR _trackTableIndex, eax
; Line 696
	mov	eax, DWORD PTR _sysData+180
	push	eax
	call	_GetClosestTracks
	add	esp, 4
; Line 697
	push	1
	call	_WriteUserDataEvent
	add	esp, 4
; Line 698
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CreateNewT
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 5484				; 0000156cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@CreateNewT:
	DD	1
	DD	$LN4@CreateNewT
$LN4@CreateNewT:
	DD	-5288					; ffffeb58H
	DD	5280					; 000014a0H
	DD	$LN3@CreateNewT
$LN3@CreateNewT:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	84					; 00000054H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_CreateNewTrack ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_RenameCurrentEntry
EXTRN	_rename:PROC
EXTRN	_ReloadData:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RenameCurrentEntry
_TEXT	SEGMENT
_OldName$ = -540					; size = 256
_fileName$ = -276					; size = 256
_retval$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_RenameCurrentEntry PROC				; COMDAT
; Line 713
	push	ebp
	mov	ebp, esp
	sub	esp, 736				; 000002e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-736]
	mov	ecx, 184				; 000000b8H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 723
	call	_CheckForDuplicateName
	mov	DWORD PTR _retval$[ebp], eax
	cmp	DWORD PTR _retval$[ebp], 0
	jge	SHORT $LN9@RenameCurr
; Line 724
	mov	eax, DWORD PTR _retval$[ebp]
	jmp	$LN10@RenameCurr
$LN9@RenameCurr:
; Line 726
	cmp	DWORD PTR _editType, 2
	jne	$LN8@RenameCurr
; Line 729
	push	1
	push	OFFSET _newName
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 734
	push	1
	push	OFFSET _sysData+160
	lea	eax, DWORD PTR _OldName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 735
	push	OFFSET _newName
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 736
	push	OFFSET _newName
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	add	eax, OFFSET _trackTable
	push	eax
	call	_strcpy
	add	esp, 8
; Line 738
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	cmp	DWORD PTR _trackTable[eax+20], 0
	jne	SHORT $LN7@RenameCurr
; Line 741
	push	1
	call	_ReloadData
	add	esp, 4
; Line 742
	push	OFFSET _newName
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 743
	push	1
	call	_WriteUserDataEvent
	add	esp, 4
; Line 744
	call	_UpdateList
; Line 745
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	mov	DWORD PTR _trackTable[eax+20], 1
; Line 746
	xor	eax, eax
	jmp	$LN10@RenameCurr
$LN7@RenameCurr:
; Line 747
	jmp	SHORT $LN6@RenameCurr
$LN8@RenameCurr:
; Line 749
	cmp	DWORD PTR _editType, 1
	jne	SHORT $LN5@RenameCurr
; Line 752
	push	2
	push	OFFSET _newName
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 757
	push	2
	push	OFFSET _sysData+143
	lea	eax, DWORD PTR _OldName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN6@RenameCurr
$LN5@RenameCurr:
; Line 759
	cmp	DWORD PTR _editType, 0
	jne	SHORT $LN6@RenameCurr
; Line 762
	push	3
	push	OFFSET _newName
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 767
	push	3
	push	OFFSET _sysData+126
	lea	eax, DWORD PTR _OldName$[ebp]
	push	eax
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
$LN6@RenameCurr:
; Line 773
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _OldName$[ebp]
	push	ecx
	call	__stricmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@RenameCurr
; Line 774
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_remove
	add	esp, 4
$LN2@RenameCurr:
; Line 776
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _OldName$[ebp]
	push	ecx
	call	_rename
	add	esp, 8
	test	eax, eax
	jge	SHORT $LN1@RenameCurr
; Line 777
	or	eax, -1
	jmp	SHORT $LN10@RenameCurr
$LN1@RenameCurr:
; Line 799
	call	_UpdateList
; Line 800
	xor	eax, eax
$LN10@RenameCurr:
; Line 801
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@RenameCurr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 736				; 000002e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@RenameCurr:
	DD	2
	DD	$LN14@RenameCurr
$LN14@RenameCurr:
	DD	-276					; fffffeecH
	DD	256					; 00000100H
	DD	$LN12@RenameCurr
	DD	-540					; fffffde4H
	DD	256					; 00000100H
	DD	$LN13@RenameCurr
$LN13@RenameCurr:
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN12@RenameCurr:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_RenameCurrentEntry ENDP
_TEXT	ENDS
PUBLIC	_ValidateName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidateName
_TEXT	SEGMENT
_ch$ = -5						; size = 1
_pName$ = 8						; size = 4
_ValidateName PROC					; COMDAT
; Line 807
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@ValidateNa:
; Line 810
	mov	eax, DWORD PTR _pName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	test	edx, edx
	je	SHORT $LN4@ValidateNa
; Line 812
	movzx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN1@ValidateNa
; Line 813
	mov	BYTE PTR _ch$[ebp], 32			; 00000020H
$LN1@ValidateNa:
; Line 814
	mov	eax, DWORD PTR _pName$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pName$[ebp]
	add	edx, 1
	mov	DWORD PTR _pName$[ebp], edx
; Line 815
	jmp	SHORT $LN3@ValidateNa
$LN4@ValidateNa:
; Line 816
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateName ENDP
_TEXT	ENDS
PUBLIC	_DisplayAlphaList
PUBLIC	_UpdateTrackList
PUBLIC	_FindSelection
PUBLIC	_CreateFileList
EXTRN	_SetGear:PROC
EXTRN	_strcmp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpdateList
_TEXT	SEGMENT
_id$ = -44						; size = 4
_pList$ = -32						; size = 4
_hList$ = -20						; size = 4
_sel$ = -8						; size = 4
_UpdateList PROC					; COMDAT
; Line 827
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 833
	push	OFFSET _newName
	call	_ValidateName
	add	esp, 4
; Line 835
	cmp	DWORD PTR _editType, 0
	jne	SHORT $LN6@UpdateList
; Line 837
	push	OFFSET _newName
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 838
	push	OFFSET $SG120790
	push	OFFSET _newName
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN5@UpdateList
; Line 839
	push	3
	call	_WriteUserDataEvent
	add	esp, 4
$LN5@UpdateList:
; Line 840
	push	3
	call	_CreateFileList
	add	esp, 4
; Line 841
	push	3
	call	_FindSelection
	add	esp, 4
	mov	DWORD PTR _sel$[ebp], eax
; Line 842
	mov	DWORD PTR _hList$[ebp], OFFSET _hDriverList
; Line 843
	mov	DWORD PTR _id$[ebp], 513		; 00000201H
; Line 844
	mov	DWORD PTR _pList$[ebp], OFFSET _pDrivers
	jmp	$LN4@UpdateList
$LN6@UpdateList:
; Line 846
	cmp	DWORD PTR _editType, 1
	jne	SHORT $LN3@UpdateList
; Line 848
	push	OFFSET _newName
	push	OFFSET _sysData+143
	call	_strcpy
	add	esp, 8
; Line 849
	push	OFFSET $SG120794
	push	OFFSET _newName
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@UpdateList
; Line 850
	push	2
	call	_WriteUserDataEvent
	add	esp, 4
$LN2@UpdateList:
; Line 851
	push	0
	call	_SetGear
	add	esp, 4
; Line 852
	push	2
	call	_CreateFileList
	add	esp, 4
; Line 853
	push	2
	call	_FindSelection
	add	esp, 4
	mov	DWORD PTR _sel$[ebp], eax
; Line 854
	mov	DWORD PTR _hList$[ebp], OFFSET _hVehicleList
; Line 855
	mov	DWORD PTR _id$[ebp], 514		; 00000202H
; Line 856
	mov	DWORD PTR _pList$[ebp], OFFSET _pVehicles
; Line 859
	jmp	SHORT $LN4@UpdateList
$LN3@UpdateList:
; Line 861
	push	OFFSET _newName
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 862
	mov	eax, DWORD PTR _sysData+180
	push	eax
	call	_GetClosestTracks
	add	esp, 4
; Line 863
	push	1
	call	_CreateFileList
	add	esp, 4
; Line 867
	mov	eax, DWORD PTR _pTracksShort
	mov	DWORD PTR _pList$[ebp], eax
; Line 868
	push	1
	call	_FindSelection
	add	esp, 4
	mov	DWORD PTR _sel$[ebp], eax
; Line 869
	call	_GetTrackSelectionWindowHandle
	push	eax
	call	_UpdateTrackList
	add	esp, 4
; Line 870
	jmp	SHORT $LN7@UpdateList
$LN4@UpdateList:
; Line 874
	mov	eax, DWORD PTR _sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	push	ecx
	mov	edx, DWORD PTR _id$[ebp]
	push	edx
	mov	eax, DWORD PTR _hList$[ebp]
	push	eax
	call	_DisplayAlphaList
	add	esp, 16					; 00000010H
$LN7@UpdateList:
; Line 875
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateList ENDP
_TEXT	ENDS
PUBLIC	_FinishLoadingTrackData
PUBLIC	_RSDeleteTrack
PUBLIC	_RSDeleteVehicle
PUBLIC	_RSDeleteDriver
PUBLIC	_SetTrackTypeButtonText
PUBLIC	_HideSprites
PUBLIC	_ChangeVehicle
PUBLIC	_GetRadiusText
PUBLIC	_SelectThisTrack
PUBLIC	_DeleteSprites
PUBLIC	_RaceSetupIgnoreNextKeyRelease
PUBLIC	_InvalidName
PUBLIC	_UnhideSprites
PUBLIC	__$ArrayPad$
PUBLIC	_RaceSetupScreensCallback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_BUTTON_SetBitmapEx:PROC
EXTRN	_bmGreenCheck:BYTE
EXTRN	_IncrementSessionType:PROC
EXTRN	_Display_TrackSettingMainScreen:PROC
EXTRN	_Display_VehicleSettingMainScreen:PROC
EXTRN	_LISTVIEW_SetSel:PROC
EXTRN	_BUTTON_SetText:PROC
EXTRN	_HaveSatelliteReception:PROC
EXTRN	_pressingbutton_semaphore:DWORD
EXTRN	_LISTVIEW_GetSelUnsorted:PROC
EXTRN	_LISTVIEW_GetSel:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_GetLastScreen:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
EXTRN	_GUI_SetColor:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_GoRacingStateMachine:PROC
_BSS	SEGMENT
_clickedOnThisScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _RaceSetupScreensCallback
_TEXT	SEGMENT
tv169 = -288						; size = 4
tv164 = -288						; size = 4
tv142 = -288						; size = 4
tv140 = -288						; size = 4
tv64 = -288						; size = 4
_scratch$120846 = -88					; size = 30
_retval$120814 = -48					; size = 4
_Sel$ = -36						; size = 4
_Id$ = -24						; size = 4
_NCode$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_RaceSetupScreensCallback PROC				; COMDAT
; Line 878
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 881
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	jg	SHORT $LN83@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 27			; 0000001bH
	je	SHORT $LN77@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 1
	je	$LN62@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 11			; 0000000bH
	je	$LN61@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN60@RaceSetupS
	jmp	$LN1@RaceSetupS
$LN83@RaceSetupS:
	cmp	DWORD PTR tv64[ebp], 28			; 0000001cH
	je	SHORT $LN75@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN56@RaceSetupS
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	$LN64@RaceSetupS
	jmp	$LN1@RaceSetupS
$LN77@RaceSetupS:
; Line 884
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _pEntryKeyboard
	jne	SHORT $LN76@RaceSetupS
; Line 886
	call	_RSSKillKeyboard
; Line 887
	call	_UnhideSprites
$LN76@RaceSetupS:
; Line 889
	jmp	$LN80@RaceSetupS
$LN75@RaceSetupS:
; Line 892
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _pEntryKeyboard
	jne	$LN74@RaceSetupS
; Line 894
	push	OFFSET $SG120812
	push	OFFSET _newName
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN72@RaceSetupS
	movzx	eax, BYTE PTR _newName
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN73@RaceSetupS
$LN72@RaceSetupS:
; Line 895
	call	_InvalidName
; Line 896
	jmp	SHORT $LN71@RaceSetupS
$LN73@RaceSetupS:
; Line 900
	call	_RSSKillKeyboard
; Line 901
	cmp	DWORD PTR _mode, 1
	jne	SHORT $LN70@RaceSetupS
; Line 902
	call	_CreateNewEntry
	mov	DWORD PTR _retval$120814[ebp], eax
	jmp	SHORT $LN69@RaceSetupS
$LN70@RaceSetupS:
; Line 903
	call	_RenameCurrentEntry
	mov	DWORD PTR _retval$120814[ebp], eax
$LN69@RaceSetupS:
; Line 905
	cmp	DWORD PTR _retval$120814[ebp], 1
	jne	SHORT $LN68@RaceSetupS
; Line 908
	cmp	DWORD PTR _ctType, 1
	jne	SHORT $LN67@RaceSetupS
; Line 910
	push	1
	call	_ReloadData
	add	esp, 4
; Line 911
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_GoRacingStateMachine
	add	esp, 4
$LN67@RaceSetupS:
; Line 912
	jmp	SHORT $LN71@RaceSetupS
$LN68@RaceSetupS:
; Line 914
	cmp	DWORD PTR _retval$120814[ebp], -2	; fffffffeH
	jne	SHORT $LN71@RaceSetupS
; Line 917
	call	_TryAgainKeyboard
; Line 918
	jmp	$LN80@RaceSetupS
$LN71@RaceSetupS:
; Line 921
	call	_UnhideSprites
$LN74@RaceSetupS:
; Line 924
	jmp	$LN80@RaceSetupS
$LN64@RaceSetupS:
; Line 927
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN63@RaceSetupS
; Line 929
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 930
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN63@RaceSetupS:
; Line 932
	jmp	$LN80@RaceSetupS
$LN62@RaceSetupS:
; Line 935
	call	_RaceSetupIgnoreNextKeyRelease
; Line 936
	mov	BYTE PTR _vehicleSelectionChanged, 0
; Line 937
	jmp	$LN80@RaceSetupS
$LN61@RaceSetupS:
; Line 940
	mov	DWORD PTR _hVehicleList, 0
	mov	eax, DWORD PTR _hVehicleList
	mov	DWORD PTR _hDriverList, eax
	mov	ecx, DWORD PTR _hDriverList
	mov	DWORD PTR _hTrackList, ecx
; Line 941
	call	_DeleteSprites
; Line 942
	jmp	$LN80@RaceSetupS
$LN60@RaceSetupS:
; Line 945
	cmp	DWORD PTR _ctType, 0
	jne	SHORT $LN59@RaceSetupS
; Line 947
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 948
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 951
	mov	esi, esp
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	push	5
	call	_GetLastScreen
	add	esp, 4
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _RaceSetupScreenList[eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 952
	call	_DrawSignalStrength
	jmp	SHORT $LN58@RaceSetupS
$LN59@RaceSetupS:
; Line 954
	cmp	DWORD PTR _ctType, 1
	jne	SHORT $LN58@RaceSetupS
; Line 956
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 957
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 959
	mov	eax, DWORD PTR _hDisplayClosestTracks
	push	eax
	call	_TrackSelectionPaint
	add	esp, 4
; Line 961
	call	_DrawSignalStrength
$LN58@RaceSetupS:
; Line 963
	jmp	$LN80@RaceSetupS
$LN56@RaceSetupS:
; Line 966
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 967
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 968
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv140[ebp], eax
	cmp	DWORD PTR tv140[ebp], 1
	je	$LN46@RaceSetupS
	cmp	DWORD PTR tv140[ebp], 2
	je	$LN45@RaceSetupS
	cmp	DWORD PTR tv140[ebp], 4
	je	SHORT $LN53@RaceSetupS
	jmp	$LN54@RaceSetupS
$LN53@RaceSetupS:
; Line 971
	cmp	DWORD PTR _Id$[ebp], 515		; 00000203H
	jne	SHORT $LN52@RaceSetupS
; Line 972
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_GetSel
	add	esp, 4
	push	eax
	call	_SelectThisTrack
	add	esp, 4
; Line 973
	jmp	$LN51@RaceSetupS
$LN52@RaceSetupS:
; Line 975
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	cmp	DWORD PTR tv142[ebp], 513		; 00000201H
	je	SHORT $LN48@RaceSetupS
	cmp	DWORD PTR tv142[ebp], 514		; 00000202H
	je	SHORT $LN47@RaceSetupS
	jmp	SHORT $LN51@RaceSetupS
$LN48@RaceSetupS:
; Line 978
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTVIEW_GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 979
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pDrivers[eax*4]
	push	ecx
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 980
	push	3
	call	_ReloadData
	add	esp, 4
; Line 981
	jmp	SHORT $LN51@RaceSetupS
$LN47@RaceSetupS:
; Line 983
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTVIEW_GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 984
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pVehicles[eax*4]
	push	ecx
	push	OFFSET _tempVehicleName
	call	_strcpy
	add	esp, 8
; Line 985
	mov	BYTE PTR _vehicleSelectionChanged, 1
$LN51@RaceSetupS:
; Line 989
	jmp	$LN54@RaceSetupS
$LN46@RaceSetupS:
; Line 992
	mov	DWORD PTR _clickedOnThisScreen, 1
; Line 993
	jmp	$LN54@RaceSetupS
$LN45@RaceSetupS:
; Line 996
	mov	DWORD PTR _pressingbutton_semaphore, 0
; Line 997
	cmp	DWORD PTR _clickedOnThisScreen, 0
	jne	SHORT $LN44@RaceSetupS
; Line 998
	jmp	$LN54@RaceSetupS
$LN44@RaceSetupS:
; Line 1002
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	sub	ecx, 2049				; 00000801H
	mov	DWORD PTR tv164[ebp], ecx
	cmp	DWORD PTR tv164[ebp], 17		; 00000011H
	ja	$LN54@RaceSetupS
	mov	edx, DWORD PTR tv164[ebp]
	jmp	DWORD PTR $LN87@RaceSetupS[edx*4]
$LN41@RaceSetupS:
; Line 1005
	cmp	DWORD PTR _sysData+180, 3219		; 00000c93H
	jne	SHORT $LN40@RaceSetupS
; Line 1006
	mov	DWORD PTR _sysData+180, 50000		; 0000c350H
; Line 1007
	jmp	$LN39@RaceSetupS
$LN40@RaceSetupS:
; Line 1009
	call	_HaveSatelliteReception
	test	eax, eax
	jne	SHORT $LN38@RaceSetupS
; Line 1011
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jl	SHORT $LN37@RaceSetupS
; Line 1012
	jmp	$LN54@RaceSetupS
	jmp	SHORT $LN36@RaceSetupS
$LN37@RaceSetupS:
; Line 1013
	mov	DWORD PTR _sysData+180, 50000		; 0000c350H
$LN36@RaceSetupS:
; Line 1015
	jmp	$LN39@RaceSetupS
$LN38@RaceSetupS:
; Line 1017
	mov	eax, DWORD PTR _sysData+180
	mov	DWORD PTR tv169[ebp], eax
	cmp	DWORD PTR tv169[ebp], 805		; 00000325H
	jg	SHORT $LN82@RaceSetupS
	cmp	DWORD PTR tv169[ebp], 805		; 00000325H
	je	SHORT $LN30@RaceSetupS
	cmp	DWORD PTR tv169[ebp], 161		; 000000a1H
	je	SHORT $LN32@RaceSetupS
	cmp	DWORD PTR tv169[ebp], 322		; 00000142H
	je	SHORT $LN31@RaceSetupS
	jmp	SHORT $LN28@RaceSetupS
$LN82@RaceSetupS:
	cmp	DWORD PTR tv169[ebp], 1610		; 0000064aH
	je	SHORT $LN29@RaceSetupS
	jmp	SHORT $LN28@RaceSetupS
$LN32@RaceSetupS:
; Line 1019
	mov	DWORD PTR _sysData+180, 322		; 00000142H
	jmp	SHORT $LN39@RaceSetupS
$LN31@RaceSetupS:
; Line 1020
	mov	DWORD PTR _sysData+180, 805		; 00000325H
	jmp	SHORT $LN39@RaceSetupS
$LN30@RaceSetupS:
; Line 1021
	mov	DWORD PTR _sysData+180, 1610		; 0000064aH
	jmp	SHORT $LN39@RaceSetupS
$LN29@RaceSetupS:
; Line 1022
	mov	DWORD PTR _sysData+180, 3219		; 00000c93H
	jmp	SHORT $LN39@RaceSetupS
$LN28@RaceSetupS:
; Line 1024
	mov	DWORD PTR _sysData+180, 161		; 000000a1H
$LN39@RaceSetupS:
; Line 1028
	lea	eax, DWORD PTR _scratch$120846[ebp]
	push	eax
	call	_GetRadiusText
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_BUTTON_SetText
	add	esp, 8
; Line 1030
	call	_GetTrackSelectionWindowHandle
	push	eax
	call	_UpdateTrackList
	add	esp, 4
; Line 1032
	push	1
	call	_FindSelection
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 1033
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hTrackList
	push	ecx
	call	_LISTVIEW_SetSel
	add	esp, 8
; Line 1035
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	call	_SelectThisTrack
	add	esp, 4
; Line 1036
	jmp	$LN54@RaceSetupS
$LN27@RaceSetupS:
; Line 1039
	movzx	eax, BYTE PTR _vehicleSelectionChanged
	cmp	eax, 1
	jne	SHORT $LN26@RaceSetupS
; Line 1040
	call	_ChangeVehicle
$LN26@RaceSetupS:
; Line 1041
	call	_HideSprites
; Line 1042
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	call	_Display_VehicleSettingMainScreen
	add	esp, 4
; Line 1043
	jmp	$LN54@RaceSetupS
$LN25@RaceSetupS:
; Line 1046
	cmp	DWORD PTR _numTracks, 0
	je	SHORT $LN24@RaceSetupS
; Line 1049
	call	_CheckWorkingTrackName
; Line 1050
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	call	_Display_TrackSettingMainScreen
	add	esp, 4
$LN24@RaceSetupS:
; Line 1060
	jmp	$LN54@RaceSetupS
$LN23@RaceSetupS:
; Line 1063
	call	_IncrementSessionType
; Line 1064
	call	_SetTrackTypeButtonText
; Line 1065
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	call	_UpdateTrackList
	add	esp, 4
; Line 1066
	push	0
	call	_SelectThisTrack
	add	esp, 4
; Line 1067
	jmp	$LN54@RaceSetupS
$LN22@RaceSetupS:
; Line 1072
	call	_HideSprites
; Line 1074
	mov	DWORD PTR _mode, 1
; Line 1075
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR _button, eax
	mov	ecx, DWORD PTR _button
	push	ecx
	call	_DisplayKeyboard
	add	esp, 4
; Line 1084
	jmp	$LN54@RaceSetupS
$LN21@RaceSetupS:
; Line 1087
	cmp	DWORD PTR _numDrivers, 1
	jle	SHORT $LN20@RaceSetupS
; Line 1089
	push	2061					; 0000080dH
	call	_RaceSetupPopup
	add	esp, 4
	test	eax, eax
	je	SHORT $LN20@RaceSetupS
; Line 1090
	call	_RSDeleteDriver
$LN20@RaceSetupS:
; Line 1092
	jmp	$LN54@RaceSetupS
$LN18@RaceSetupS:
; Line 1095
	movzx	eax, BYTE PTR _vehicleSelectionChanged
	cmp	eax, 1
	jne	SHORT $LN17@RaceSetupS
; Line 1096
	call	_ChangeVehicle
$LN17@RaceSetupS:
; Line 1104
	cmp	DWORD PTR _numVehicles, 1
	jle	SHORT $LN16@RaceSetupS
; Line 1106
	push	2062					; 0000080eH
	call	_RaceSetupPopup
	add	esp, 4
	test	eax, eax
	je	SHORT $LN16@RaceSetupS
; Line 1107
	call	_RSDeleteVehicle
$LN16@RaceSetupS:
; Line 1109
	jmp	$LN54@RaceSetupS
$LN14@RaceSetupS:
; Line 1112
	cmp	DWORD PTR _numTracks, 0
	je	SHORT $LN13@RaceSetupS
; Line 1114
	push	2063					; 0000080fH
	call	_RaceSetupPopup
	add	esp, 4
	test	eax, eax
	je	SHORT $LN13@RaceSetupS
; Line 1116
	call	_RSDeleteTrack
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN13@RaceSetupS
; Line 1117
	push	2064					; 00000810H
	call	_RaceSetupPopup
	add	esp, 4
$LN13@RaceSetupS:
; Line 1120
	jmp	$LN54@RaceSetupS
$LN10@RaceSetupS:
; Line 1123
	movzx	eax, BYTE PTR _vehicleSelectionChanged
	cmp	eax, 1
	jne	SHORT $LN8@RaceSetupS
; Line 1124
	call	_ChangeVehicle
$LN8@RaceSetupS:
; Line 1128
	call	_HideSprites
; Line 1130
	mov	DWORD PTR _mode, 0
; Line 1131
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR _button, eax
	mov	ecx, DWORD PTR _button
	push	ecx
	call	_DisplayKeyboard
	add	esp, 4
; Line 1140
	jmp	$LN54@RaceSetupS
$LN7@RaceSetupS:
; Line 1143
	cmp	DWORD PTR _numTracks, 0
	je	SHORT $LN6@RaceSetupS
; Line 1145
	call	_HideSprites
; Line 1147
	mov	DWORD PTR _mode, 0
; Line 1148
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR _button, eax
	mov	ecx, DWORD PTR _button
	push	ecx
	call	_DisplayKeyboard
	add	esp, 4
$LN6@RaceSetupS:
; Line 1158
	jmp	$LN54@RaceSetupS
$LN5@RaceSetupS:
; Line 1161
	call	_AutoCreateNewTrack
; Line 1162
	call	_FinishLoadingTrackData
; Line 1163
	jmp	$LN54@RaceSetupS
$LN4@RaceSetupS:
; Line 1166
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_GetSel
	add	esp, 4
	push	eax
	call	_SelectThisTrack
	add	esp, 4
; Line 1167
	call	_FinishLoadingTrackData
; Line 1168
	jmp	$LN54@RaceSetupS
$LN3@RaceSetupS:
; Line 1171
	mov	BYTE PTR _sysData+178, 1
; Line 1172
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hLapsCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
; Line 1173
	push	0
	push	0
	mov	eax, DWORD PTR _hQualifyingCheck
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1174
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1175
	jmp	SHORT $LN54@RaceSetupS
$LN2@RaceSetupS:
; Line 1178
	mov	BYTE PTR _sysData+178, 0
; Line 1179
	push	0
	push	0
	mov	eax, DWORD PTR _hLapsCheck
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1180
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hQualifyingCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
; Line 1181
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN54@RaceSetupS:
; Line 1187
	jmp	SHORT $LN80@RaceSetupS
$LN1@RaceSetupS:
; Line 1190
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN80@RaceSetupS:
; Line 1192
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN86@RaceSetupS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN86@RaceSetupS:
	DD	1
	DD	$LN85@RaceSetupS
$LN85@RaceSetupS:
	DD	-88					; ffffffa8H
	DD	30					; 0000001eH
	DD	$LN84@RaceSetupS
$LN84@RaceSetupS:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN87@RaceSetupS:
	DD	$LN22@RaceSetupS
	DD	$LN22@RaceSetupS
	DD	$LN10@RaceSetupS
	DD	$LN27@RaceSetupS
	DD	$LN22@RaceSetupS
	DD	$LN7@RaceSetupS
	DD	$LN25@RaceSetupS
	DD	$LN8@RaceSetupS
	DD	$LN3@RaceSetupS
	DD	$LN2@RaceSetupS
	DD	$LN4@RaceSetupS
	DD	$LN41@RaceSetupS
	DD	$LN21@RaceSetupS
	DD	$LN18@RaceSetupS
	DD	$LN14@RaceSetupS
	DD	$LN54@RaceSetupS
	DD	$LN23@RaceSetupS
	DD	$LN5@RaceSetupS
_RaceSetupScreensCallback ENDP
_TEXT	ENDS
EXTRN	_ValidateCameraData:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ChangeVehicle
_TEXT	SEGMENT
_ChangeVehicle PROC					; COMDAT
; Line 1199
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1200
	movzx	eax, BYTE PTR _vehicleSelectionChanged
	cmp	eax, 1
	jne	SHORT $LN2@ChangeVehi
; Line 1202
	push	OFFSET _tempVehicleName
	push	OFFSET _sysData+143
	call	_strcpy
	add	esp, 8
; Line 1203
	push	OFFSET _tempVehicleName
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 1204
	push	2
	call	_ReloadData
	add	esp, 4
; Line 1205
	push	0
	call	_SetGear
	add	esp, 4
; Line 1206
	mov	BYTE PTR _vehicleSelectionChanged, 0
; Line 1207
	call	_ValidateCameraData
$LN2@ChangeVehi:
; Line 1209
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ChangeVehicle ENDP
_TEXT	ENDS
EXTRN	_raceModeState:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FinishLoadingTrackData
_TEXT	SEGMENT
_FinishLoadingTrackData PROC				; COMDAT
; Line 1212
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1213
	push	1
	call	_ReloadData
	add	esp, 4
; Line 1214
	mov	DWORD PTR _raceModeState, 3
; Line 1215
	mov	eax, DWORD PTR _hDisplayClosestTracks
	push	eax
	call	_GoRacingStateMachine
	add	esp, 4
; Line 1216
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FinishLoadingTrackData ENDP
_TEXT	ENDS
PUBLIC	_ExitTrackSelectionScreen
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ExitTrackSelectionScreen
_TEXT	SEGMENT
_ExitTrackSelectionScreen PROC				; COMDAT
; Line 1219
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1220
	call	_CheckWorkingTrackName
; Line 1221
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ExitTrackSelectionScreen ENDP
_TEXT	ENDS
PUBLIC	__real@3f1f122f
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@3f1f122f
CONST	SEGMENT
__real@3f1f122f DD 03f1f122fr			; 0.621371
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _GetRadiusText
_TEXT	SEGMENT
_pText$ = 8						; size = 4
_GetRadiusText PROC					; COMDAT
; Line 1224
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1225
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jl	SHORT $LN4@GetRadiusT
; Line 1226
	push	OFFSET $SG120907
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN1@GetRadiusT
$LN4@GetRadiusT:
; Line 1227
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN2@GetRadiusT
; Line 1228
	mov	eax, DWORD PTR _sysData+180
	push	eax
	push	OFFSET $SG120910
	mov	ecx, DWORD PTR _pText$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@GetRadiusT
$LN2@GetRadiusT:
; Line 1229
	fild	DWORD PTR _sysData+180
	fmul	DWORD PTR __real@3f1f122f
	call	__ftol2_sse
	push	eax
	push	OFFSET $SG120914
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN1@GetRadiusT:
; Line 1230
	mov	eax, DWORD PTR _pText$[ebp]
; Line 1231
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetRadiusText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_trackShortList:BYTE
EXTRN	_numberOfShortListTracks:DWORD
EXTRN	_LISTVIEW_GetItemText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SelectThisTrack
_TEXT	SEGMENT
_i$120920 = -40						; size = 4
_ThisName$120919 = -28					; size = 17
__$ArrayPad$ = -4					; size = 4
_selection$ = 8						; size = 4
_SelectThisTrack PROC					; COMDAT
; Line 1234
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1235
	cmp	DWORD PTR _selection$[ebp], 0
	jge	SHORT $LN8@SelectThis
; Line 1236
	xor	al, al
	jmp	$LN9@SelectThis
$LN8@SelectThis:
; Line 1250
	push	16					; 00000010H
	lea	eax, DWORD PTR _ThisName$120919[ebp]
	push	eax
	mov	ecx, DWORD PTR _selection$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hTrackList
	push	edx
	call	_LISTVIEW_GetItemText
	add	esp, 20					; 00000014H
; Line 1251
	mov	DWORD PTR _i$120920[ebp], 0
	jmp	SHORT $LN7@SelectThis
$LN6@SelectThis:
	mov	eax, DWORD PTR _i$120920[ebp]
	add	eax, 1
	mov	DWORD PTR _i$120920[ebp], eax
$LN7@SelectThis:
	mov	eax, DWORD PTR _i$120920[ebp]
	cmp	eax, DWORD PTR _numberOfShortListTracks
	jge	SHORT $LN5@SelectThis
; Line 1253
	lea	eax, DWORD PTR _ThisName$120919[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$120920[ebp]
	mov	edx, DWORD PTR _trackShortList[ecx*4]
	imul	edx, 72					; 00000048H
	add	edx, OFFSET _trackTable
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@SelectThis
; Line 1254
	jmp	SHORT $LN5@SelectThis
$LN4@SelectThis:
; Line 1255
	jmp	SHORT $LN6@SelectThis
$LN5@SelectThis:
; Line 1256
	mov	eax, DWORD PTR _i$120920[ebp]
	cmp	eax, DWORD PTR _numberOfShortListTracks
	jne	SHORT $LN3@SelectThis
; Line 1257
	xor	al, al
	jmp	SHORT $LN9@SelectThis
$LN3@SelectThis:
; Line 1259
	mov	eax, DWORD PTR _i$120920[ebp]
	mov	ecx, DWORD PTR _trackShortList[eax*4]
	mov	DWORD PTR _trackTableIndex, ecx
; Line 1260
	mov	eax, DWORD PTR _selection$[ebp]
	mov	ecx, DWORD PTR _pTracksShort
	mov	edx, DWORD PTR [ecx+eax*4]
	push	edx
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 1263
	push	OFFSET _selectedTrackName
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 1264
	movzx	eax, BYTE PTR _selectedTrackName
	test	eax, eax
	jne	SHORT $LN2@SelectThis
; Line 1265
	xor	al, al
	jmp	SHORT $LN9@SelectThis
	jmp	SHORT $LN9@SelectThis
$LN2@SelectThis:
; Line 1266
	mov	al, 1
$LN9@SelectThis:
; Line 1267
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@SelectThis
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@SelectThis:
	DD	1
	DD	$LN12@SelectThis
$LN12@SelectThis:
	DD	-28					; ffffffe4H
	DD	17					; 00000011H
	DD	$LN11@SelectThis
$LN11@SelectThis:
	DB	84					; 00000054H
	DB	104					; 00000068H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_SelectThisTrack ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _CheckWorkingTrackName
_TEXT	SEGMENT
_CheckWorkingTrackName PROC				; COMDAT
; Line 1271
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1274
	push	OFFSET _selectedTrackName
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 1275
	push	1
	call	_ReloadData
	add	esp, 4
; Line 1277
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CheckWorkingTrackName ENDP
_TEXT	ENDS
PUBLIC	_SetWorkingTrackName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetWorkingTrackName
_TEXT	SEGMENT
_SetWorkingTrackName PROC				; COMDAT
; Line 1280
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1281
	push	OFFSET _sysData+160
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 1282
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetWorkingTrackName ENDP
_TEXT	ENDS
PUBLIC	_ClearWorkingTrackName
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ClearWorkingTrackName
_TEXT	SEGMENT
_ClearWorkingTrackName PROC				; COMDAT
; Line 1286
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1287
	mov	BYTE PTR _selectedTrackName, 0
; Line 1288
	mov	BYTE PTR _sysData+160, 0
; Line 1289
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_ClearWorkingTrackName ENDP
_TEXT	ENDS
EXTRN	_bmBlackBlankButton:BYTE
EXTRN	_bmGreenButton:BYTE
EXTRN	_bmYellowButton:BYTE
EXTRN	_BUTTON_SetFocussable:PROC
EXTRN	_bmRedButton:BYTE
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_BUTTON_SetDefaultFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayDriverSelection
_TEXT	SEGMENT
_gap$ = -32						; size = 4
_topPosition$ = -20					; size = 4
_hButton$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayDriverSelection PROC				; COMDAT
; Line 1297
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1301
	mov	DWORD PTR _editType, 0
; Line 1302
	push	OFFSET _sysData+126
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 1303
	call	_UpdateList
; Line 1305
	push	OFFSET _GUI_Font24_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 1307
	mov	DWORD PTR _topPosition$[ebp], 38	; 00000026H
; Line 1308
	mov	DWORD PTR _gap$[ebp], 6
; Line 1310
	push	2061					; 0000080dH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	mov	edx, DWORD PTR _topPosition$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4+156]
	push	eax
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hRSDeleteButton, eax
; Line 1311
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1312
	push	OFFSET $SG120944
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1313
	cmp	DWORD PTR _numDrivers, 1
	jle	SHORT $LN2@DisplayDri
; Line 1315
	push	0
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1316
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1318
	jmp	SHORT $LN1@DisplayDri
$LN2@DisplayDri:
; Line 1320
	push	8421504					; 00808080H
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1321
	push	8421504					; 00808080H
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN1@DisplayDri:
; Line 1323
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1325
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	add	ecx, 39					; 00000027H
	imul	ecx, 3
	add	ecx, DWORD PTR _topPosition$[ebp]
	push	ecx
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1326
	push	OFFSET _bmYellowButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1327
	push	OFFSET $SG120947
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1328
	push	0
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1329
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1330
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1332
	push	2049					; 00000801H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	mov	edx, DWORD PTR _topPosition$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+78]
	push	eax
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1333
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1334
	push	OFFSET $SG120948
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1335
	push	0
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1336
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1337
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1340
	push	0
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	83					; 00000053H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1341
	push	OFFSET _bmBlackBlankButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1342
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1343
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1344
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1345
	push	OFFSET $SG120949
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1346
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayDriverSelection ENDP
_TEXT	ENDS
EXTRN	_bmTopFakeButton:BYTE
EXTRN	_bmBlueButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayVehicleSelection
_TEXT	SEGMENT
_gap$ = -32						; size = 4
_topPosition$ = -20					; size = 4
_hButton$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayVehicleSelection PROC				; COMDAT
; Line 1349
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1353
	mov	DWORD PTR _editType, 1
; Line 1354
	push	OFFSET _sysData+143
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 1355
	call	_UpdateList
; Line 1357
	push	OFFSET _GUI_Font24_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 1359
	mov	DWORD PTR _topPosition$[ebp], 38	; 00000026H
; Line 1360
	mov	DWORD PTR _gap$[ebp], 6
; Line 1362
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	mov	edx, DWORD PTR _topPosition$[ebp]
	lea	eax, DWORD PTR [edx+ecx+39]
	push	eax
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1363
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1364
	push	OFFSET $SG120956
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1365
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1366
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1368
	push	2062					; 0000080eH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	mov	edx, DWORD PTR _topPosition$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4+156]
	push	eax
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hRSDeleteButton, eax
; Line 1369
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1370
	push	OFFSET $SG120957
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1371
	cmp	DWORD PTR _numVehicles, 1
	jg	SHORT $LN2@DisplayVeh
; Line 1373
	push	8421504					; 00808080H
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1374
	push	8421504					; 00808080H
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1376
	jmp	SHORT $LN1@DisplayVeh
$LN2@DisplayVeh:
; Line 1378
	push	0
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1379
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN1@DisplayVeh:
; Line 1381
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1383
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	add	ecx, 39					; 00000027H
	imul	ecx, 3
	add	ecx, DWORD PTR _topPosition$[ebp]
	push	ecx
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1384
	push	OFFSET _bmYellowButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1385
	push	OFFSET $SG120960
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1386
	push	0
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1387
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1388
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1390
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	mov	ecx, DWORD PTR _gap$[ebp]
	mov	edx, DWORD PTR _topPosition$[ebp]
	lea	eax, DWORD PTR [edx+ecx*2+78]
	push	eax
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1391
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1392
	push	OFFSET $SG120961
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1393
	push	0
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1394
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1395
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1398
	push	0
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	45					; 0000002dH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 1399
	push	OFFSET _bmTopFakeButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1400
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1401
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1402
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1403
	push	OFFSET $SG120962
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayVehicleSelection ENDP
_TEXT	ENDS
PUBLIC	_FinishDisplayTrackSelection
EXTRN	_DisplayWaitingForSatellites:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTrackSelection
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DisplayTrackSelection PROC				; COMDAT
; Line 1407
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1411
	call	_HaveSatelliteReception
	test	eax, eax
	jne	SHORT $LN2@DisplayTra
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jge	SHORT $LN2@DisplayTra
; Line 1413
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	0
	push	1
	call	_DisplayWaitingForSatellites
	add	esp, 12					; 0000000cH
; Line 1414
	jmp	SHORT $LN3@DisplayTra
	jmp	SHORT $LN3@DisplayTra
$LN2@DisplayTra:
; Line 1416
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_FinishDisplayTrackSelection
	add	esp, 4
$LN3@DisplayTra:
; Line 1417
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayTrackSelection ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_bmMediumBlueButton:BYTE
EXTRN	_bmOrangeButton:BYTE
EXTRN	_bmDoubleBlueButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FinishDisplayTrackSelection
_TEXT	SEGMENT
_hBtn$ = -52						; size = 4
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_FinishDisplayTrackSelection PROC			; COMDAT
; Line 1420
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1424
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_UpdateTrackList
	add	esp, 4
; Line 1426
	push	OFFSET _GUI_Font24_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 1428
	cmp	DWORD PTR _ctType, 1
	jne	$LN3@FinishDisp
; Line 1430
	cmp	DWORD PTR _numTracks, 0
	je	$LN2@FinishDisp
; Line 1432
	push	2063					; 0000080fH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	51					; 00000033H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1433
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1434
	push	OFFSET $SG120976
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1435
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1436
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1437
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1439
	push	2059					; 0000080bH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	78					; 0000004eH
	push	202					; 000000caH
	push	177					; 000000b1H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1440
	push	OFFSET _bmDoubleBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1441
	push	OFFSET $SG120977
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1442
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1443
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1444
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
$LN2@FinishDisp:
; Line 1447
	push	2066					; 00000812H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	93					; 0000005dH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1448
	push	OFFSET _bmOrangeButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1449
	push	OFFSET $SG120978
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1450
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1451
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1452
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1454
	jmp	$LN1@FinishDisp
$LN3@FinishDisp:
; Line 1456
	push	2060					; 0000080cH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	51					; 00000033H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1457
	push	OFFSET _bmOrangeButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1458
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GetRadiusText
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hBtn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 1459
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1460
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1461
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1463
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	93					; 0000005dH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1464
	push	OFFSET _bmMediumBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1465
	push	OFFSET $SG120980
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1466
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1467
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1468
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1470
	push	2065					; 00000811H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	93					; 0000005dH
	push	361					; 00000169H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hTrackTypeBtn, eax
; Line 1472
	call	_SetTrackTypeButtonText
; Line 1473
	push	0
	push	0
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1474
	push	0
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1476
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	177					; 000000b1H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1477
	push	OFFSET _bmYellowButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1478
	push	OFFSET $SG120981
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1479
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1480
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1481
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1483
	push	2063					; 0000080fH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	219					; 000000dbH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1484
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1485
	push	OFFSET $SG120982
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1486
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1487
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1488
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
$LN1@FinishDisp:
; Line 1491
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	135					; 00000087H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1492
	push	OFFSET $SG120983
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1493
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1494
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1495
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1496
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFocussable
	add	esp, 8
; Line 1497
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@FinishDisp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@FinishDisp:
	DD	1
	DD	$LN7@FinishDisp
$LN7@FinishDisp:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN6@FinishDisp
$LN6@FinishDisp:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_FinishDisplayTrackSelection ENDP
_TEXT	ENDS
PUBLIC	_CreateSprites
EXTRN	_GUI_SPRITE_Create:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateSprites
_TEXT	SEGMENT
_pTopBar$ = 8						; size = 4
_pBottomBar$ = 12					; size = 4
_CreateSprites PROC					; COMDAT
; Line 1500
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1501
	cmp	DWORD PTR _hTop, 0
	jne	SHORT $LN1@CreateSpri
	cmp	DWORD PTR _hBottom, 0
	je	SHORT $LN2@CreateSpri
$LN1@CreateSpri:
; Line 1502
	call	_DeleteSprites
$LN2@CreateSpri:
; Line 1504
	push	48					; 00000030H
	push	30					; 0000001eH
	mov	eax, DWORD PTR _pTopBar$[ebp]
	push	eax
	call	_GUI_SPRITE_Create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hTop, eax
; Line 1505
	push	251					; 000000fbH
	push	30					; 0000001eH
	mov	eax, DWORD PTR _pBottomBar$[ebp]
	push	eax
	call	_GUI_SPRITE_Create
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _hBottom, eax
; Line 1506
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateSprites ENDP
_TEXT	ENDS
EXTRN	_GUI_SPRITE_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeleteSprites
_TEXT	SEGMENT
_DeleteSprites PROC					; COMDAT
; Line 1509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1510
	cmp	DWORD PTR _hTop, 0
	je	SHORT $LN2@DeleteSpri
; Line 1512
	mov	eax, DWORD PTR _hTop
	push	eax
	call	_GUI_SPRITE_Delete
	add	esp, 4
; Line 1513
	mov	DWORD PTR _hTop, 0
$LN2@DeleteSpri:
; Line 1515
	cmp	DWORD PTR _hBottom, 0
	je	SHORT $LN1@DeleteSpri
; Line 1517
	mov	eax, DWORD PTR _hBottom
	push	eax
	call	_GUI_SPRITE_Delete
	add	esp, 4
; Line 1518
	mov	DWORD PTR _hBottom, 0
$LN1@DeleteSpri:
; Line 1520
	mov	DWORD PTR _hideLevel, 0
; Line 1521
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DeleteSprites ENDP
_TEXT	ENDS
EXTRN	_GUI_SPRITE_Hide:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HideSprites
_TEXT	SEGMENT
tv67 = -196						; size = 4
_HideSprites PROC					; COMDAT
; Line 1524
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1525
	cmp	DWORD PTR _hTop, 0
	je	SHORT $LN3@HideSprite
; Line 1527
	mov	eax, DWORD PTR _hideLevel
	mov	ecx, DWORD PTR _hideLevel
	add	ecx, 1
	mov	DWORD PTR _hideLevel, ecx
	test	eax, eax
	jne	SHORT $LN5@HideSprite
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN6@HideSprite
$LN5@HideSprite:
	mov	DWORD PTR tv67[ebp], 0
$LN6@HideSprite:
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN3@HideSprite
; Line 1529
	mov	eax, DWORD PTR _hTop
	push	eax
	call	_GUI_SPRITE_Hide
	add	esp, 4
; Line 1530
	mov	eax, DWORD PTR _hBottom
	push	eax
	call	_GUI_SPRITE_Hide
	add	esp, 4
$LN3@HideSprite:
; Line 1533
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HideSprites ENDP
_TEXT	ENDS
EXTRN	_GUI_SPRITE_Show:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UnhideSprites
_TEXT	SEGMENT
_UnhideSprites PROC					; COMDAT
; Line 1537
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1538
	cmp	DWORD PTR _hTop, 0
	je	SHORT $LN3@UnhideSpri
; Line 1540
	mov	eax, DWORD PTR _hideLevel
	sub	eax, 1
	mov	DWORD PTR _hideLevel, eax
	cmp	DWORD PTR _hideLevel, 0
	jg	SHORT $LN3@UnhideSpri
; Line 1542
	mov	eax, DWORD PTR _hTop
	push	eax
	call	_GUI_SPRITE_Show
	add	esp, 4
; Line 1543
	mov	eax, DWORD PTR _hBottom
	push	eax
	call	_GUI_SPRITE_Show
	add	esp, 4
; Line 1544
	mov	DWORD PTR _hideLevel, 0
$LN3@UnhideSpri:
; Line 1547
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UnhideSprites ENDP
_TEXT	ENDS
PUBLIC	_CreateTrackList
EXTRN	_WM_SetFocus:PROC
EXTRN	_LISTVIEW_SetLFreeBorder:PROC
EXTRN	_bmBottomBar:BYTE
EXTRN	_bmTopBar:BYTE
EXTRN	_bmShortBottomBar:BYTE
EXTRN	_bmShortTopBar:BYTE
EXTRN	_SCROLLBAR_SetWidth:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_LISTVIEW_SetColumnWidth:PROC
EXTRN	_LISTVIEW_SetBkColor:PROC
EXTRN	_LISTVIEW_AddRow:PROC
EXTRN	_LISTVIEW_SetRowHeight:PROC
EXTRN	_HEADER_SetHeight:PROC
EXTRN	_LISTVIEW_GetHeader:PROC
EXTRN	_LISTVIEW_SetFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_LISTVIEW_SetAutoScrollV:PROC
EXTRN	_LISTVIEW_SetLBorder:PROC
EXTRN	_LISTVIEW_AddColumn:PROC
EXTRN	_LISTVIEW_CreateEx:PROC
EXTRN	_CreateTracks:PROC
EXTRN	_WM_DeleteWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpdateTrackList
_TEXT	SEGMENT
_pBottomBar$ = -68					; size = 4
_pTopBar$ = -56						; size = 4
_hHeader$ = -44						; size = 4
_i$ = -32						; size = 4
_sel$ = -20						; size = 4
_pTracks$ = -8						; size = 4
_hParent$ = 8						; size = 4
_UpdateTrackList PROC					; COMDAT
; Line 1550
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1556
	cmp	DWORD PTR _hTrackList, 0
	je	SHORT $LN10@UpdateTrac
; Line 1557
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN10@UpdateTrac:
; Line 1558
	call	_DeleteSprites
; Line 1560
	call	_CreateTracks
; Line 1562
	cmp	DWORD PTR _ctType, 1
	jne	SHORT $LN9@UpdateTrac
; Line 1563
	push	161					; 000000a1H
	call	_GetClosestTracks
	add	esp, 4
	jmp	SHORT $LN8@UpdateTrac
$LN9@UpdateTrac:
; Line 1564
	mov	eax, DWORD PTR _sysData+180
	push	eax
	call	_GetClosestTracks
	add	esp, 4
$LN8@UpdateTrac:
; Line 1566
	call	_CreateTrackList
; Line 1575
	mov	eax, DWORD PTR _pTracksShort
	mov	DWORD PTR _pTracks$[ebp], eax
; Line 1576
	mov	eax, DWORD PTR _numberOfShortListTracksUser
	mov	DWORD PTR _numTracks, eax
; Line 1579
	push	1
	call	_FindSelection
	add	esp, 4
	mov	DWORD PTR _sel$[ebp], eax
; Line 1582
	push	515					; 00000203H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	210					; 000000d2H
	push	220					; 000000dcH
	push	48					; 00000030H
	push	30					; 0000001eH
	call	_LISTVIEW_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hTrackList, eax
; Line 1583
	push	12					; 0000000cH
	push	OFFSET $SG121015
	push	185					; 000000b9H
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_AddColumn
	add	esp, 16					; 00000010H
; Line 1584
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetLBorder
	add	esp, 8
; Line 1586
	push	1
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetAutoScrollV
	add	esp, 8
; Line 1587
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetFont
	add	esp, 8
; Line 1588
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_GetHeader
	add	esp, 4
	mov	DWORD PTR _hHeader$[ebp], eax
; Line 1589
	push	0
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_SetHeight
	add	esp, 8
; Line 1590
	push	35					; 00000023H
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetRowHeight
	add	esp, 8
; Line 1595
	cmp	DWORD PTR _numTracks, 0
	jne	SHORT $LN7@UpdateTrac
; Line 1596
	mov	eax, DWORD PTR _pTracks$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hTrackList
	push	ecx
	call	_LISTVIEW_AddRow
	add	esp, 8
	jmp	SHORT $LN6@UpdateTrac
$LN7@UpdateTrac:
; Line 1597
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@UpdateTrac
$LN4@UpdateTrac:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@UpdateTrac:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _numTracks
	jge	SHORT $LN6@UpdateTrac
; Line 1599
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pTracks$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_AddRow
	add	esp, 8
; Line 1600
	jmp	SHORT $LN4@UpdateTrac
$LN6@UpdateTrac:
; Line 1601
	mov	eax, DWORD PTR _sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hTrackList
	push	ecx
	call	_LISTVIEW_SetSel
	add	esp, 8
; Line 1602
	push	16737599				; 00ff653fH
	push	2
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1604
	cmp	DWORD PTR _numTracks, 6
	jle	SHORT $LN2@UpdateTrac
; Line 1606
	push	185					; 000000b9H
	push	0
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetColumnWidth
	add	esp, 12					; 0000000cH
; Line 1607
	push	35					; 00000023H
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	push	eax
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 1608
	mov	DWORD PTR _pTopBar$[ebp], OFFSET _bmShortTopBar
; Line 1609
	mov	DWORD PTR _pBottomBar$[ebp], OFFSET _bmShortBottomBar
; Line 1611
	jmp	SHORT $LN1@UpdateTrac
$LN2@UpdateTrac:
; Line 1613
	push	220					; 000000dcH
	push	0
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetColumnWidth
	add	esp, 12					; 0000000cH
; Line 1614
	push	0
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	push	eax
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 1615
	mov	DWORD PTR _pTopBar$[ebp], OFFSET _bmTopBar
; Line 1616
	mov	DWORD PTR _pBottomBar$[ebp], OFFSET _bmBottomBar
$LN1@UpdateTrac:
; Line 1620
	push	30					; 0000001eH
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_LISTVIEW_SetLFreeBorder
	add	esp, 8
; Line 1622
	mov	eax, DWORD PTR _pBottomBar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTopBar$[ebp]
	push	ecx
	call	_CreateSprites
	add	esp, 8
; Line 1624
	mov	eax, DWORD PTR _hTrackList
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1625
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateTrackList ENDP
_TEXT	ENDS
EXTRN	_LISTVIEW_SetSelUnsorted:PROC
EXTRN	_LISTVIEW_SetSort:PROC
EXTRN	_LISTVIEW_DeleteRow:PROC
EXTRN	_LISTVIEW_GetNumRows:PROC
EXTRN	_LISTVIEW_EnableSort:PROC
EXTRN	_LISTVIEW_SetCompareFunc:PROC
EXTRN	_LISTVIEW_CompareText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayAlphaList
_TEXT	SEGMENT
tv135 = -280						; size = 4
tv129 = -280						; size = 4
_count$121043 = -80					; size = 4
_pBottomBar$ = -68					; size = 4
_pTopBar$ = -56						; size = 4
_numItems$ = -44					; size = 4
_hListLocal$ = -32					; size = 4
_hHeader$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hList$ = 8						; size = 4
_id$ = 12						; size = 4
_pList$ = 16						; size = 4
_sel$ = 20						; size = 4
_DisplayAlphaList PROC					; COMDAT
; Line 1628
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1636
	mov	eax, DWORD PTR _hList$[ebp]
	cmp	DWORD PTR [eax], 0
	jne	$LN8@DisplayAlp
; Line 1638
	mov	eax, DWORD PTR _id$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hRaceSetupScreens
	push	ecx
	push	210					; 000000d2H
	push	220					; 000000dcH
	push	48					; 00000030H
	push	30					; 0000001eH
	call	_LISTVIEW_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hListLocal$[ebp], eax
	mov	edx, DWORD PTR _hList$[ebp]
	mov	eax, DWORD PTR _hListLocal$[ebp]
	mov	DWORD PTR [edx], eax
; Line 1640
	push	12					; 0000000cH
	push	OFFSET $SG121041
	push	185					; 000000b9H
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_AddColumn
	add	esp, 16					; 00000010H
; Line 1641
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetLBorder
	add	esp, 8
; Line 1643
	push	1
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetAutoScrollV
	add	esp, 8
; Line 1644
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetFont
	add	esp, 8
; Line 1645
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_GetHeader
	add	esp, 4
	mov	DWORD PTR _hHeader$[ebp], eax
; Line 1646
	push	0
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_SetHeight
	add	esp, 8
; Line 1647
	push	35					; 00000023H
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetRowHeight
	add	esp, 8
; Line 1648
	push	OFFSET _LISTVIEW_CompareText
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetCompareFunc
	add	esp, 12					; 0000000cH
; Line 1649
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_EnableSort
	add	esp, 4
; Line 1651
	jmp	SHORT $LN7@DisplayAlp
$LN8@DisplayAlp:
; Line 1655
	mov	eax, DWORD PTR _hList$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _hListLocal$[ebp], ecx
; Line 1657
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_GetNumRows
	add	esp, 4
	mov	DWORD PTR _count$121043[ebp], eax
$LN6@DisplayAlp:
; Line 1658
	mov	eax, DWORD PTR _count$121043[ebp]
	mov	DWORD PTR tv129[ebp], eax
	mov	ecx, DWORD PTR _count$121043[ebp]
	sub	ecx, 1
	mov	DWORD PTR _count$121043[ebp], ecx
	cmp	DWORD PTR tv129[ebp], 0
	je	SHORT $LN7@DisplayAlp
; Line 1659
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_DeleteRow
	add	esp, 8
	jmp	SHORT $LN6@DisplayAlp
$LN7@DisplayAlp:
; Line 1662
	mov	DWORD PTR _numItems$[ebp], 0
$LN4@DisplayAlp:
; Line 1663
	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pItem$[ebp], ecx
	mov	edx, DWORD PTR _pItem$[ebp]
	mov	eax, DWORD PTR _pList$[ebp]
	add	eax, 4
	mov	DWORD PTR _pList$[ebp], eax
	test	edx, edx
	je	SHORT $LN11@DisplayAlp
	mov	DWORD PTR tv135[ebp], 1
	jmp	SHORT $LN12@DisplayAlp
$LN11@DisplayAlp:
	mov	DWORD PTR tv135[ebp], 0
$LN12@DisplayAlp:
	cmp	DWORD PTR tv135[ebp], 0
	je	SHORT $LN3@DisplayAlp
; Line 1665
	lea	eax, DWORD PTR _pItem$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hList$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_LISTVIEW_AddRow
	add	esp, 8
; Line 1666
	mov	eax, DWORD PTR _numItems$[ebp]
	add	eax, 1
	mov	DWORD PTR _numItems$[ebp], eax
; Line 1667
	jmp	SHORT $LN4@DisplayAlp
$LN3@DisplayAlp:
; Line 1669
	push	1
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetSort
	add	esp, 12					; 0000000cH
; Line 1670
	mov	eax, DWORD PTR _sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hListLocal$[ebp]
	push	ecx
	call	_LISTVIEW_SetSelUnsorted
	add	esp, 8
; Line 1671
	push	16737599				; 00ff653fH
	push	2
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1673
	cmp	DWORD PTR _numItems$[ebp], 6
	jle	SHORT $LN2@DisplayAlp
; Line 1675
	push	185					; 000000b9H
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetColumnWidth
	add	esp, 12					; 0000000cH
; Line 1676
	push	35					; 00000023H
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	push	eax
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 1677
	mov	DWORD PTR _pTopBar$[ebp], OFFSET _bmShortTopBar
; Line 1678
	mov	DWORD PTR _pBottomBar$[ebp], OFFSET _bmShortBottomBar
; Line 1680
	jmp	SHORT $LN1@DisplayAlp
$LN2@DisplayAlp:
; Line 1682
	push	220					; 000000dcH
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetColumnWidth
	add	esp, 12					; 0000000cH
; Line 1683
	push	0
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	push	eax
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 1684
	mov	DWORD PTR _pTopBar$[ebp], OFFSET _bmTopBar
; Line 1685
	mov	DWORD PTR _pBottomBar$[ebp], OFFSET _bmBottomBar
$LN1@DisplayAlp:
; Line 1689
	push	30					; 0000001eH
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_LISTVIEW_SetLFreeBorder
	add	esp, 8
; Line 1691
	mov	eax, DWORD PTR _pBottomBar$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTopBar$[ebp]
	push	ecx
	call	_CreateSprites
	add	esp, 8
; Line 1693
	mov	eax, DWORD PTR _hListLocal$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1694
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@DisplayAlp
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@DisplayAlp:
	DD	1
	DD	$LN14@DisplayAlp
$LN14@DisplayAlp:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN13@DisplayAlp
$LN13@DisplayAlp:
	DB	112					; 00000070H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_DisplayAlphaList ENDP
_TEXT	ENDS
PUBLIC	_GetNumTracks
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetNumTracks
_TEXT	SEGMENT
_GetNumTracks PROC					; COMDAT
; Line 1697
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1698
	mov	eax, DWORD PTR _numTracks
; Line 1699
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNumTracks ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SetTrackTypeButtonText
_TEXT	SEGMENT
tv67 = -196						; size = 4
_SetTrackTypeButtonText PROC				; COMDAT
; Line 1702
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1703
	push	OFFSET $SG121057
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1704
	movzx	eax, BYTE PTR _sysData+208
	mov	DWORD PTR tv67[ebp], eax
	mov	ecx, DWORD PTR tv67[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 19			; 00000013H
	ja	SHORT $LN1@SetTrackTy
	mov	edx, DWORD PTR tv67[ebp]
	movzx	eax, BYTE PTR $LN10@SetTrackTy[edx]
	jmp	DWORD PTR $LN11@SetTrackTy[eax*4]
$LN5@SetTrackTy:
; Line 1706
	push	OFFSET $SG121063
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN8@SetTrackTy
$LN4@SetTrackTy:
; Line 1707
	push	OFFSET $SG121065
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN8@SetTrackTy
$LN3@SetTrackTy:
; Line 1710
	push	OFFSET $SG121067
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN8@SetTrackTy
$LN2@SetTrackTy:
; Line 1711
	push	OFFSET $SG121069
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN8@SetTrackTy
$LN1@SetTrackTy:
; Line 1714
	push	OFFSET $SG121071
	mov	eax, DWORD PTR _hTrackTypeBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
$LN8@SetTrackTy:
; Line 1716
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@SetTrackTy:
	DD	$LN4@SetTrackTy
	DD	$LN5@SetTrackTy
	DD	$LN3@SetTrackTy
	DD	$LN2@SetTrackTy
	DD	$LN1@SetTrackTy
$LN10@SetTrackTy:
	DB	0
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	2
_SetTrackTypeButtonText ENDP
_TEXT	ENDS
EXTRN	_bmleftarrow:BYTE
EXTRN	_bmTrackText:BYTE
EXTRN	_bmChooseTrack:BYTE
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmBackgroundWithPanel:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TrackSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_TrackSelectionPaint PROC				; COMDAT
; Line 1719
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1720
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1721
	cmp	DWORD PTR _ctType, 1
	jne	SHORT $LN3@TrackSelec
; Line 1723
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1725
	cmp	DWORD PTR _numTracks, 0
	jne	SHORT $LN2@TrackSelec
; Line 1726
	push	59					; 0000003bH
	push	360					; 00000168H
	push	OFFSET $SG121077
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN2@TrackSelec:
; Line 1728
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmChooseTrack
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@TrackSelec
$LN3@TrackSelec:
; Line 1730
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTrackText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
$LN1@TrackSelec:
; Line 1732
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1733
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TrackSelectionPaint ENDP
_TEXT	ENDS
EXTRN	_BUTTON_SetSkinClassic:PROC
EXTRN	_BUTTON_SetTextAlign:PROC
EXTRN	_BUTTON_SetFont:PROC
EXTRN	_BUTTON_SetBkColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayLapsSelection
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayLapsSelection PROC				; COMDAT
; Line 1737
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1740
	push	2057					; 00000809H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	100					; 00000064H
	push	300					; 0000012cH
	push	43					; 0000002bH
	push	155					; 0000009bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1741
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1742
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 1743
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1744
	push	255					; 000000ffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1745
	push	14					; 0000000eH
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextAlign
	add	esp, 8
; Line 1746
	push	OFFSET $SG121083
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1747
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetSkinClassic
	add	esp, 4
; Line 1749
	push	2058					; 0000080aH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	100					; 00000064H
	push	300					; 0000012cH
	push	149					; 00000095H
	push	155					; 0000009bH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1750
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1751
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 1752
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1753
	push	255					; 000000ffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1754
	push	14					; 0000000eH
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextAlign
	add	esp, 8
; Line 1755
	push	OFFSET $SG121084
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1756
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetSkinClassic
	add	esp, 4
; Line 1758
	push	2057					; 00000809H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	100					; 00000064H
	push	115					; 00000073H
	push	43					; 0000002bH
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hLapsCheck, eax
; Line 1759
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hLapsCheck
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1760
	mov	eax, DWORD PTR _hLapsCheck
	push	eax
	call	_BUTTON_SetSkinClassic
	add	esp, 4
; Line 1762
	push	2058					; 0000080aH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	100					; 00000064H
	push	115					; 00000073H
	push	149					; 00000095H
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hQualifyingCheck, eax
; Line 1763
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hQualifyingCheck
	push	eax
	call	_BUTTON_SetBkColor
	add	esp, 12					; 0000000cH
; Line 1764
	mov	eax, DWORD PTR _hQualifyingCheck
	push	eax
	call	_BUTTON_SetSkinClassic
	add	esp, 4
; Line 1766
	movzx	eax, BYTE PTR _sysData+178
	test	eax, eax
	je	SHORT $LN2@DisplayLap
; Line 1767
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hLapsCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
	jmp	SHORT $LN3@DisplayLap
$LN2@DisplayLap:
; Line 1768
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hQualifyingCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
$LN3@DisplayLap:
; Line 1769
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayLapsSelection ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_FillRoundedRect:PROC
EXTRN	_GUI_DrawRoundedRect:PROC
EXTRN	_bmLapsQualifyText:BYTE
EXTRN	_bmBackground:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LapsSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_LapsSelectionPaint PROC				; COMDAT
; Line 1772
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1773
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1774
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1775
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmLapsQualifyText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1777
	push	5
	push	250					; 000000faH
	push	460					; 000001ccH
	push	40					; 00000028H
	push	10					; 0000000aH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1778
	push	5
	push	250					; 000000faH
	push	460					; 000001ccH
	push	40					; 00000028H
	push	10					; 0000000aH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1780
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1781
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1782
	push	250					; 000000faH
	push	150					; 00000096H
	push	40					; 00000028H
	push	150					; 00000096H
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1783
	push	145					; 00000091H
	push	460					; 000001ccH
	push	145					; 00000091H
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1785
	push	229					; 000000e5H
	push	0
	push	3
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1786
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LapsSelectionPaint ENDP
_TEXT	ENDS
EXTRN	_bmDriverText:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DriverSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_DriverSelectionPaint PROC				; COMDAT
; Line 1790
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1791
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1792
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmDriverText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1793
	push	229					; 000000e5H
	push	0
	push	0
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1794
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DriverSelectionPaint ENDP
_TEXT	ENDS
EXTRN	_bmVehicleText:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _VehicleSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_VehicleSelectionPaint PROC				; COMDAT
; Line 1797
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1798
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1799
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmVehicleText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1800
	push	229					; 000000e5H
	push	0
	push	1
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1801
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_VehicleSelectionPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetNavigationArrow
_TEXT	SEGMENT
tv64 = -196						; size = 4
_screen$ = 8						; size = 4
_GetNavigationArrow PROC				; COMDAT
; Line 1804
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1805
	mov	eax, DWORD PTR _screen$[ebp]
	mov	DWORD PTR tv64[ebp], eax
; Line 1812
	mov	eax, OFFSET _bmleftarrow
; Line 1814
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNavigationArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _RaceSetupIgnoreNextKeyRelease
_TEXT	SEGMENT
_RaceSetupIgnoreNextKeyRelease PROC			; COMDAT
; Line 1817
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1818
	mov	DWORD PTR _clickedOnThisScreen, 0
; Line 1819
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_RaceSetupIgnoreNextKeyRelease ENDP
_TEXT	ENDS
PUBLIC	_parseName
PUBLIC	_parseSessionName
PUBLIC	_ValidRaceSession
PUBLIC	_GetSessionName
EXTRN	_selectedSessionUnsorted:DWORD
EXTRN	_MY_SESSIONS_PATH:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSessionName
_TEXT	SEGMENT
tv80 = -232						; size = 4
_ent$ = -32						; size = 4
_dir$ = -20						; size = 4
_count$ = -5						; size = 1
_GetSessionName PROC					; COMDAT
; Line 1825
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1826
	mov	BYTE PTR _count$[ebp], 0
; Line 1836
	push	OFFSET _MY_SESSIONS_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 1837
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN5@GetSession
$LN4@GetSession:
; Line 1840
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN3@GetSession
; Line 1842
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	movzx	ecx, BYTE PTR _sysData+208
	push	ecx
	call	_ValidRaceSession
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN2@GetSession
; Line 1843
	movzx	eax, BYTE PTR _count$[ebp]
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	mov	dl, BYTE PTR _count$[ebp]
	add	dl, 1
	mov	BYTE PTR _count$[ebp], dl
	cmp	eax, ecx
	jne	SHORT $LN8@GetSession
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN9@GetSession
$LN8@GetSession:
	mov	DWORD PTR tv80[ebp], 0
$LN9@GetSession:
	cmp	DWORD PTR tv80[ebp], 0
	je	SHORT $LN2@GetSession
; Line 1845
	push	OFFSET _NameStruct
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_parseSessionName
	add	esp, 8
; Line 1846
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	push	OFFSET _fullSessionName
	call	_strcpy
	add	esp, 8
; Line 1847
	push	4
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	push	OFFSET _sessionName
	call	_parseName
	add	esp, 12					; 0000000cH
; Line 1848
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
; Line 1849
	mov	eax, OFFSET _sessionName
	jmp	SHORT $LN6@GetSession
$LN2@GetSession:
; Line 1851
	jmp	$LN4@GetSession
$LN3@GetSession:
; Line 1852
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN5@GetSession:
; Line 1871
	mov	eax, OFFSET $SG121119
$LN6@GetSession:
; Line 1872
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSessionName ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_DeleteSession
EXTRN	_strcat:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeleteSession
_TEXT	SEGMENT
_fullFileName$ = -160					; size = 150
__$ArrayPad$ = -4					; size = 4
_DeleteSession PROC					; COMDAT
; Line 1878
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1882
	push	OFFSET _MY_SESSIONS_PATH
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 1883
	push	OFFSET $SG121123
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1884
	push	OFFSET _fullSessionName
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1889
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_remove
	add	esp, 4
; Line 1891
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DeleteSess
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@DeleteSess:
	DD	1
	DD	$LN4@DeleteSess
$LN4@DeleteSess:
	DD	-160					; ffffff60H
	DD	150					; 00000096H
	DD	$LN3@DeleteSess
$LN3@DeleteSess:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_DeleteSession ENDP
_TEXT	ENDS
PUBLIC	_CreateDummyLapList
PUBLIC	_ReadAllSessionData
PUBLIC	_DeleteFileList
PUBLIC	_CreateLapsList
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateLapsList
_TEXT	SEGMENT
tv81 = -232						; size = 4
_ent$ = -32						; size = 4
_dir$ = -20						; size = 4
_count$ = -5						; size = 1
_CreateLapsList PROC					; COMDAT
; Line 1900
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1901
	mov	BYTE PTR _count$[ebp], 0
; Line 1911
	push	5
	call	_DeleteFileList
	add	esp, 4
; Line 1931
	push	OFFSET _MY_SESSIONS_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 1932
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN5@CreateLaps
$LN4@CreateLaps:
; Line 1935
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN3@CreateLaps
; Line 1937
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	movzx	ecx, BYTE PTR _sysData+208
	push	ecx
	call	_ValidRaceSession
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@CreateLaps
; Line 1938
	movzx	eax, BYTE PTR _count$[ebp]
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	mov	dl, BYTE PTR _count$[ebp]
	add	dl, 1
	mov	BYTE PTR _count$[ebp], dl
	cmp	eax, ecx
	jne	SHORT $LN8@CreateLaps
	mov	DWORD PTR tv81[ebp], 1
	jmp	SHORT $LN9@CreateLaps
$LN8@CreateLaps:
	mov	DWORD PTR tv81[ebp], 0
$LN9@CreateLaps:
	cmp	DWORD PTR tv81[ebp], 0
	je	SHORT $LN2@CreateLaps
; Line 1940
	push	OFFSET _NameStruct
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_parseSessionName
	add	esp, 8
; Line 1941
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ReadAllSessionData
	add	esp, 4
; Line 1942
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
; Line 1943
	mov	eax, DWORD PTR _pLaps
	jmp	SHORT $LN6@CreateLaps
$LN2@CreateLaps:
; Line 1945
	jmp	$LN4@CreateLaps
$LN3@CreateLaps:
; Line 1946
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN5@CreateLaps:
; Line 1952
	call	_CreateDummyLapList
; Line 1953
	mov	eax, DWORD PTR _pLaps
$LN6@CreateLaps:
; Line 1954
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateLapsList ENDP
_TEXT	ENDS
EXTRN	_malloc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateDummyLapList
_TEXT	SEGMENT
_pNextLink$ = -8					; size = 4
_CreateDummyLapList PROC				; COMDAT
; Line 1957
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1961
	push	804					; 00000324H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pLaps, eax
	mov	eax, DWORD PTR _pLaps
	mov	DWORD PTR _pNextLink$[ebp], eax
; Line 1962
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1963
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateDummyLapList ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_free:PROC
EXTRN	_formatLapTime:PROC
EXTRN	_fread:PROC
EXTRN	_fseek:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ReadAllSessionData
_TEXT	SEGMENT
_LapList$121171 = -256					; size = 4
_numberOfFields$121158 = -241				; size = 1
_results$ = -232					; size = 4
_pFile$ = -220						; size = 4
_pData$ = -208						; size = 4
_pNextLink$ = -196					; size = 4
_count$ = -184						; size = 4
_fileName$ = -172					; size = 150
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pName$ = 8						; size = 4
_ReadAllSessionData PROC				; COMDAT
; Line 1971
	push	ebp
	mov	ebp, esp
	sub	esp, 452				; 000001c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-452]
	mov	ecx, 113				; 00000071H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1974
	mov	DWORD PTR _count$[ebp], 0
; Line 1985
	push	804					; 00000324H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pLaps, eax
	mov	eax, DWORD PTR _pLaps
	mov	DWORD PTR _pNextLink$[ebp], eax
; Line 1986
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [eax], 0
; Line 1988
	push	OFFSET _MY_SESSIONS_PATH
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 1989
	push	OFFSET $SG121155
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1990
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 1993
	push	OFFSET $SG121157
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$[ebp], eax
	cmp	DWORD PTR _pFile$[ebp], 0
	je	$LN14@ReadAllSes
; Line 1998
	push	0
	push	668					; 0000029cH
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
; Line 1999
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	push	1
	lea	ecx, DWORD PTR _numberOfFields$121158[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _results$[ebp], eax
; Line 2001
	cmp	DWORD PTR _results$[ebp], 1
	je	SHORT $LN13@ReadAllSes
; Line 2003
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2004
	jmp	$LN15@ReadAllSes
$LN13@ReadAllSes:
; Line 2007
	movzx	eax, BYTE PTR _numberOfFields$121158[ebp]
	cmp	eax, 5
	jne	$LN12@ReadAllSes
; Line 2009
	push	0
	push	0
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
; Line 2010
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	push	4650					; 0000122aH
	push	OFFSET _SessionData
	call	_fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _results$[ebp], eax
; Line 2011
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2013
	cmp	DWORD PTR _results$[ebp], 1
	jne	$LN11@ReadAllSes
; Line 2039
	mov	eax, DWORD PTR _SessionData+1638
	mov	DWORD PTR _count$[ebp], eax
; Line 2040
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@ReadAllSes
$LN9@ReadAllSes:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@ReadAllSes:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN11@ReadAllSes
; Line 2042
	push	20					; 00000014H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pNextLink$[ebp]
	add	edx, 4
	mov	DWORD PTR _pNextLink$[ebp], edx
; Line 2043
	push	1
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _SessionData[eax*4+1650]
	push	ecx
	call	_formatLapTime
	add	esp, 8
	push	eax
	push	OFFSET $SG121169
	mov	edx, DWORD PTR _pData$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 2044
	jmp	SHORT $LN9@ReadAllSes
$LN11@ReadAllSes:
; Line 2047
	jmp	$LN14@ReadAllSes
$LN12@ReadAllSes:
; Line 2051
	push	3012					; 00000bc4H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _LapList$121171[ebp], eax
; Line 2052
	cmp	DWORD PTR _LapList$121171[ebp], 0
	jne	SHORT $LN6@ReadAllSes
; Line 2055
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2059
	jmp	$LN15@ReadAllSes
$LN6@ReadAllSes:
; Line 2062
	push	OFFSET _NotAvailable
	push	OFFSET _SessionData+1166
	call	_strcpy
	add	esp, 8
; Line 2063
	push	OFFSET _NotAvailable
	push	OFFSET _SessionData+766
	call	_strcpy
	add	esp, 8
; Line 2064
	push	OFFSET _NotAvailable
	push	OFFSET _SessionData+966
	call	_strcpy
	add	esp, 8
; Line 2065
	push	OFFSET _NotAvailable
	push	OFFSET _SessionData+1366
	call	_strcpy
	add	esp, 8
; Line 2068
	push	0
	push	838					; 00000346H
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
; Line 2069
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	push	3012					; 00000bc4H
	mov	ecx, DWORD PTR _LapList$121171[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _results$[ebp], eax
; Line 2070
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2071
	cmp	DWORD PTR _results$[ebp], 1
	jne	$LN5@ReadAllSes
; Line 2080
	mov	eax, DWORD PTR _LapList$121171[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _count$[ebp], ecx
; Line 2081
	cmp	DWORD PTR _count$[ebp], 750		; 000002eeH
	jle	SHORT $LN4@ReadAllSes
; Line 2082
	mov	DWORD PTR _count$[ebp], 750		; 000002eeH
$LN4@ReadAllSes:
; Line 2083
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@ReadAllSes
$LN2@ReadAllSes:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@ReadAllSes:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _count$[ebp]
	jge	SHORT $LN5@ReadAllSes
; Line 2085
	push	20					; 00000014H
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pNextLink$[ebp]
	add	edx, 4
	mov	DWORD PTR _pNextLink$[ebp], edx
; Line 2086
	push	1
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _LapList$121171[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+12]
	push	edx
	call	_formatLapTime
	add	esp, 8
	push	eax
	push	OFFSET $SG121183
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 2087
	jmp	SHORT $LN2@ReadAllSes
$LN5@ReadAllSes:
; Line 2089
	mov	eax, DWORD PTR _LapList$121171[ebp]
	push	eax
	call	_free
	add	esp, 4
$LN14@ReadAllSes:
; Line 2093
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _numLaps, eax
; Line 2095
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [eax], 0
$LN15@ReadAllSes:
; Line 2096
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@ReadAllSes
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 452				; 000001c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN20@ReadAllSes:
	DD	2
	DD	$LN19@ReadAllSes
$LN19@ReadAllSes:
	DD	-172					; ffffff54H
	DD	150					; 00000096H
	DD	$LN17@ReadAllSes
	DD	-241					; ffffff0fH
	DD	1
	DD	$LN18@ReadAllSes
$LN18@ReadAllSes:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN17@ReadAllSes:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_ReadAllSessionData ENDP
_TEXT	ENDS
PUBLIC	_GetBestLapAutocross
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetBestLapAutocross
_TEXT	SEGMENT
_pDest$ = 8						; size = 4
_GetBestLapAutocross PROC				; COMDAT
; Line 2099
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2100
	push	1
	mov	eax, DWORD PTR _SessionData+1646
	push	eax
	call	_formatLapTime
	add	esp, 8
	push	eax
	push	OFFSET $SG121187
	mov	ecx, DWORD PTR _pDest$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 2101
	mov	eax, DWORD PTR _pDest$[ebp]
; Line 2102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetBestLapAutocross ENDP
_TEXT	ENDS
PUBLIC	_SaveBestLap
EXTRN	_VEHICLE_PATH:BYTE
EXTRN	_DRIVER_PATH:BYTE
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateFileList
_TEXT	SEGMENT
tv145 = -304						; size = 4
tv64 = -304						; size = 4
$T122179 = -293						; size = 1
_processFile$121213 = -89				; size = 1
_ent$ = -80						; size = 4
_dir$ = -68						; size = 4
_limit$ = -56						; size = 4
_pDirectory$ = -44					; size = 4
_pData$ = -32						; size = 4
_pList$ = -20						; size = 4
_count$ = -8						; size = 4
_type$ = 8						; size = 4
_CreateFileList PROC					; COMDAT
; Line 2105
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T122179[ebp], 0
; Line 2106
	mov	DWORD PTR _count$[ebp], 0
; Line 2107
	mov	DWORD PTR _pList$[ebp], 0
; Line 2121
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN16@CreateFile
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN17@CreateFile
	cmp	DWORD PTR tv64[ebp], 4
	je	$LN15@CreateFile
	jmp	$LN14@CreateFile
$LN17@CreateFile:
; Line 2123
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _DRIVER_PATH
; Line 2124
	mov	DWORD PTR _pList$[ebp], OFFSET _pDrivers
	push	204					; 000000ccH
	push	0
	mov	eax, DWORD PTR _pList$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2125
	mov	DWORD PTR _limit$[ebp], 50		; 00000032H
; Line 2126
	mov	BYTE PTR $T122179[ebp], 1
	mov	DWORD PTR _pData$[ebp], OFFSET _DriverList
	cmp	BYTE PTR $T122179[ebp], 0
	jne	SHORT $LN22@CreateFile
	push	OFFSET $LN23@CreateFile
	call	__RTC_UninitUse
	add	esp, 4
$LN22@CreateFile:
	push	4080					; 00000ff0H
	push	0
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2127
	jmp	SHORT $LN18@CreateFile
$LN16@CreateFile:
; Line 2128
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _VEHICLE_PATH
; Line 2129
	mov	DWORD PTR _pList$[ebp], OFFSET _pVehicles
	push	604					; 0000025cH
	push	0
	mov	eax, DWORD PTR _pList$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2130
	mov	DWORD PTR _limit$[ebp], 150		; 00000096H
; Line 2131
	mov	BYTE PTR $T122179[ebp], 1
	mov	DWORD PTR _pData$[ebp], OFFSET _VehicleList
	cmp	BYTE PTR $T122179[ebp], 0
	jne	SHORT $LN24@CreateFile
	push	OFFSET $LN23@CreateFile
	call	__RTC_UninitUse
	add	esp, 4
$LN24@CreateFile:
	push	12080					; 00002f30H
	push	0
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH
; Line 2132
	jmp	SHORT $LN18@CreateFile
$LN15@CreateFile:
; Line 2133
	mov	DWORD PTR _pDirectory$[ebp], OFFSET _MY_SESSIONS_PATH
; Line 2134
	mov	DWORD PTR _limit$[ebp], 200		; 000000c8H
; Line 2135
	jmp	SHORT $LN18@CreateFile
$LN14@CreateFile:
; Line 2138
	xor	eax, eax
	jmp	$LN20@CreateFile
$LN18@CreateFile:
; Line 2174
	mov	eax, DWORD PTR _pDirectory$[ebp]
	push	eax
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 2175
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN13@CreateFile
$LN12@CreateFile:
; Line 2178
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN11@CreateFile
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _limit$[ebp]
	jge	$LN11@CreateFile
; Line 2179
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ValidFileName
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	$LN10@CreateFile
; Line 2181
	mov	BYTE PTR _processFile$121213[ebp], 1
; Line 2183
	cmp	DWORD PTR _type$[ebp], 4
	jne	SHORT $LN9@CreateFile
; Line 2186
	push	OFFSET _NameStruct
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_parseSessionName
	add	esp, 8
	movzx	ecx, BYTE PTR _sysData+208
	cmp	eax, ecx
	jne	SHORT $LN8@CreateFile
; Line 2188
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _count$[ebp]
	push	ecx
	call	_SaveBestLap
	add	esp, 8
; Line 2189
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN7@CreateFile
$LN8@CreateFile:
; Line 2191
	mov	BYTE PTR _processFile$121213[ebp], 0
$LN7@CreateFile:
; Line 2195
	jmp	$LN10@CreateFile
$LN9@CreateFile:
	movzx	eax, BYTE PTR _processFile$121213[ebp]
	test	eax, eax
	je	$LN10@CreateFile
; Line 2196
	cmp	BYTE PTR $T122179[ebp], 0
	jne	SHORT $LN25@CreateFile
	push	OFFSET $LN23@CreateFile
	call	__RTC_UninitUse
	add	esp, 4
$LN25@CreateFile:
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ent$[ebp]
	add	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _pData$[ebp]
	push	edx
	call	_parseName
	add	esp, 12					; 0000000cH
; Line 2197
	cmp	BYTE PTR $T122179[ebp], 0
	jne	SHORT $LN26@CreateFile
	push	OFFSET $LN23@CreateFile
	call	__RTC_UninitUse
	add	esp, 4
$LN26@CreateFile:
	mov	eax, DWORD PTR _pList$[ebp]
	mov	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pList$[ebp]
	add	edx, 4
	mov	DWORD PTR _pList$[ebp], edx
; Line 2198
	cmp	BYTE PTR $T122179[ebp], 0
	jne	SHORT $LN27@CreateFile
	push	OFFSET $LN23@CreateFile
	call	__RTC_UninitUse
	add	esp, 4
$LN27@CreateFile:
	mov	eax, DWORD PTR _pData$[ebp]
	add	eax, 80					; 00000050H
	mov	BYTE PTR $T122179[ebp], 1
	mov	DWORD PTR _pData$[ebp], eax
; Line 2199
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN10@CreateFile:
; Line 2202
	jmp	$LN12@CreateFile
$LN11@CreateFile:
; Line 2203
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN13@CreateFile:
; Line 2208
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv145[ebp], eax
	cmp	DWORD PTR tv145[ebp], 2
	je	SHORT $LN1@CreateFile
	cmp	DWORD PTR tv145[ebp], 3
	je	SHORT $LN2@CreateFile
	jmp	SHORT $LN3@CreateFile
$LN2@CreateFile:
; Line 2211
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _numDrivers, eax
; Line 2212
	jmp	SHORT $LN3@CreateFile
$LN1@CreateFile:
; Line 2214
	mov	eax, DWORD PTR _count$[ebp]
	mov	DWORD PTR _numVehicles, eax
$LN3@CreateFile:
; Line 2218
	mov	eax, DWORD PTR _count$[ebp]
$LN20@CreateFile:
; Line 2219
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@CreateFile:
$LN23@CreateFile:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_CreateFileList ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
_BSS	SEGMENT
_BestLapNumber DD 0c8H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _SaveBestLap
_TEXT	SEGMENT
_numberOfFields$121238 = -3213				; size = 1
_results$ = -3204					; size = 4
_pFile$ = -3192						; size = 4
_fileName$ = -3180					; size = 150
_LapList$ = -3020					; size = 3012
__$ArrayPad$ = -4					; size = 4
_index$ = 8						; size = 4
_pName$ = 12						; size = 4
_SaveBestLap PROC					; COMDAT
; Line 2231
	push	ebp
	mov	ebp, esp
	sub	esp, 3412				; 00000d54H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-3412]
	mov	ecx, 853				; 00000355H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2243
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jl	SHORT $LN8@SaveBestLa
; Line 2244
	jmp	$LN9@SaveBestLa
$LN8@SaveBestLa:
; Line 2246
	push	OFFSET _MY_SESSIONS_PATH
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2247
	push	OFFSET $SG121235
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2248
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 2251
	push	OFFSET $SG121237
	lea	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pFile$[ebp], eax
	cmp	DWORD PTR _pFile$[ebp], 0
	je	$LN7@SaveBestLa
; Line 2255
	push	0
	push	668					; 0000029cH
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
; Line 2256
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	push	1
	lea	ecx, DWORD PTR _numberOfFields$121238[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _results$[ebp], eax
; Line 2257
	push	0
	push	0
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
; Line 2259
	cmp	DWORD PTR _results$[ebp], 1
	je	SHORT $LN6@SaveBestLa
; Line 2261
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2262
	jmp	$LN9@SaveBestLa
$LN6@SaveBestLa:
; Line 2265
	movzx	eax, BYTE PTR _numberOfFields$121238[ebp]
	cmp	eax, 5
	jne	SHORT $LN5@SaveBestLa
; Line 2266
	push	0
	push	1638					; 00000666H
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@SaveBestLa
$LN5@SaveBestLa:
; Line 2267
	push	0
	push	838					; 00000346H
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fseek
	add	esp, 12					; 0000000cH
$LN4@SaveBestLa:
; Line 2268
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	push	1
	push	3012					; 00000bc4H
	lea	ecx, DWORD PTR _LapList$[ebp]
	push	ecx
	call	_fread
	add	esp, 16					; 00000010H
	mov	DWORD PTR _results$[ebp], eax
; Line 2269
	mov	eax, DWORD PTR _pFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 2271
	cmp	DWORD PTR _results$[ebp], 1
	jne	SHORT $LN3@SaveBestLa
; Line 2273
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _LapList$[ebp+8]
	mov	DWORD PTR _BestLaps[eax*4], ecx
; Line 2274
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _LapList$[ebp+4]
	mov	DWORD PTR _BestLapNumber[eax*4], ecx
; Line 2276
	jmp	SHORT $LN2@SaveBestLa
$LN3@SaveBestLa:
; Line 2278
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _BestLaps[eax*4], 0
$LN2@SaveBestLa:
; Line 2279
	jmp	SHORT $LN9@SaveBestLa
$LN7@SaveBestLa:
; Line 2281
	mov	eax, DWORD PTR _index$[ebp]
	mov	DWORD PTR _BestLaps[eax*4], 0
$LN9@SaveBestLa:
; Line 2319
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@SaveBestLa
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 3412				; 00000d54H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@SaveBestLa:
	DD	3
	DD	$LN14@SaveBestLa
$LN14@SaveBestLa:
	DD	-3020					; fffff434H
	DD	3012					; 00000bc4H
	DD	$LN11@SaveBestLa
	DD	-3180					; fffff394H
	DD	150					; 00000096H
	DD	$LN12@SaveBestLa
	DD	-3213					; fffff373H
	DD	1
	DD	$LN13@SaveBestLa
$LN13@SaveBestLa:
	DB	110					; 0000006eH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	98					; 00000062H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	115					; 00000073H
	DB	0
$LN12@SaveBestLa:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN11@SaveBestLa:
	DB	76					; 0000004cH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_SaveBestLap ENDP
_TEXT	ENDS
PUBLIC	_GetBestLap
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetBestLap
_TEXT	SEGMENT
tv94 = -196						; size = 4
tv87 = -196						; size = 4
tv75 = -196						; size = 4
tv64 = -196						; size = 4
_displayLapNumber$ = 8					; size = 4
_index$ = 12						; size = 4
_pStr$ = 16						; size = 4
_GetBestLap PROC					; COMDAT
; Line 2322
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2323
	mov	eax, DWORD PTR _displayLapNumber$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN3@GetBestLap
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN2@GetBestLap
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN1@GetBestLap
	jmp	$LN4@GetBestLap
$LN3@GetBestLap:
; Line 2325
	push	OFFSET $SG121264
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2326
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jge	SHORT $LN8@GetBestLap
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN8@GetBestLap
	push	0
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _BestLaps[eax*4]
	push	ecx
	call	_formatLapTime
	add	esp, 8
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN9@GetBestLap
$LN8@GetBestLap:
	mov	DWORD PTR tv75[ebp], OFFSET $SG121265
$LN9@GetBestLap:
	mov	edx, DWORD PTR tv75[ebp]
	push	edx
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2327
	jmp	$LN4@GetBestLap
$LN2@GetBestLap:
; Line 2329
	push	OFFSET $SG121267
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2330
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jge	SHORT $LN10@GetBestLap
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN10@GetBestLap
	push	1
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _BestLaps[eax*4]
	push	ecx
	call	_formatLapTime
	add	esp, 8
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN11@GetBestLap
$LN10@GetBestLap:
	mov	DWORD PTR tv87[ebp], OFFSET $SG121268
$LN11@GetBestLap:
	mov	edx, DWORD PTR tv87[ebp]
	push	edx
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2331
	jmp	SHORT $LN4@GetBestLap
$LN1@GetBestLap:
; Line 2333
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jge	SHORT $LN12@GetBestLap
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN12@GetBestLap
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _BestLapNumber[eax*4]
	mov	DWORD PTR tv94[ebp], ecx
	jmp	SHORT $LN13@GetBestLap
$LN12@GetBestLap:
	mov	DWORD PTR tv94[ebp], 0
$LN13@GetBestLap:
	mov	edx, DWORD PTR tv94[ebp]
	push	edx
	push	OFFSET $SG121270
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
$LN4@GetBestLap:
; Line 2336
	mov	eax, DWORD PTR _pStr$[ebp]
; Line 2337
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetBestLap ENDP
_TEXT	ENDS
PUBLIC	_GetAutoxTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetAutoxTime
_TEXT	SEGMENT
tv74 = -196						; size = 4
_index$ = 8						; size = 4
_pStr$ = 12						; size = 4
_GetAutoxTime PROC					; COMDAT
; Line 2340
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2341
	push	OFFSET $SG121276
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2343
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jge	SHORT $LN3@GetAutoxTi
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN3@GetAutoxTi
	push	0
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _BestLaps[eax*4]
	push	ecx
	call	_formatLapTime
	add	esp, 8
	mov	DWORD PTR tv74[ebp], eax
	jmp	SHORT $LN4@GetAutoxTi
$LN3@GetAutoxTi:
	mov	DWORD PTR tv74[ebp], OFFSET $SG121277
$LN4@GetAutoxTi:
	mov	edx, DWORD PTR tv74[ebp]
	push	edx
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2344
	mov	eax, DWORD PTR _pStr$[ebp]
; Line 2345
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetAutoxTime ENDP
_TEXT	ENDS
PUBLIC	_GetDragTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetDragTime
_TEXT	SEGMENT
tv88 = -196						; size = 4
tv68 = -196						; size = 4
_index$ = 8						; size = 4
_pStr$ = 12						; size = 4
_GetDragTime PROC					; COMDAT
; Line 2348
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2349
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	$LN8@GetDragTim
; Line 2351
	mov	eax, DWORD PTR _selectedSessionUnsorted
	imul	eax, 84					; 00000054H
	mov	ecx, DWORD PTR _SessionNameData[eax+76]
	mov	DWORD PTR tv68[ebp], ecx
	cmp	DWORD PTR tv68[ebp], 69			; 00000045H
	je	SHORT $LN4@GetDragTim
	cmp	DWORD PTR tv68[ebp], 81			; 00000051H
	je	SHORT $LN5@GetDragTim
	cmp	DWORD PTR tv68[ebp], 84			; 00000054H
	je	SHORT $LN3@GetDragTim
	jmp	SHORT $LN2@GetDragTim
$LN5@GetDragTim:
; Line 2353
	push	OFFSET $SG121289
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2354
	jmp	SHORT $LN6@GetDragTim
$LN4@GetDragTim:
; Line 2356
	push	OFFSET $SG121291
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2357
	jmp	SHORT $LN6@GetDragTim
$LN3@GetDragTim:
; Line 2359
	push	OFFSET $SG121293
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2360
	jmp	SHORT $LN6@GetDragTim
$LN2@GetDragTim:
; Line 2362
	push	OFFSET $SG121295
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN6@GetDragTim:
; Line 2366
	cmp	DWORD PTR _index$[ebp], 200		; 000000c8H
	jge	SHORT $LN11@GetDragTim
	cmp	DWORD PTR _index$[ebp], 0
	jl	SHORT $LN11@GetDragTim
	push	0
	mov	eax, DWORD PTR _index$[ebp]
	mov	ecx, DWORD PTR _BestLaps[eax*4]
	push	ecx
	call	_formatLapTime
	add	esp, 8
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN12@GetDragTim
$LN11@GetDragTim:
	mov	DWORD PTR tv88[ebp], OFFSET $SG121296
$LN12@GetDragTim:
	mov	edx, DWORD PTR tv88[ebp]
	push	edx
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN1@GetDragTim
$LN8@GetDragTim:
; Line 2368
	push	OFFSET $SG121298
	mov	eax, DWORD PTR _pStr$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN1@GetDragTim:
; Line 2369
	mov	eax, DWORD PTR _pStr$[ebp]
; Line 2370
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetDragTime ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _DeleteFileList
_TEXT	SEGMENT
tv68 = -268						; size = 4
tv64 = -268						; size = 4
$T122214 = -257						; size = 1
$T122215 = -245						; size = 1
_pData$121311 = -44					; size = 4
_pNext$121310 = -32					; size = 4
_ppList$ = -20						; size = 4
_pList$ = -8						; size = 4
_type$ = 8						; size = 4
_DeleteFileList PROC					; COMDAT
; Line 2373
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T122214[ebp], 0
	mov	BYTE PTR $T122215[ebp], 0
; Line 2376
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 5
	je	SHORT $LN4@DeleteFile
	jmp	SHORT $LN5@DeleteFile
$LN4@DeleteFile:
; Line 2411
	mov	BYTE PTR $T122214[ebp], 1
	mov	eax, DWORD PTR _pLaps
	mov	DWORD PTR _pList$[ebp], eax
; Line 2412
	mov	BYTE PTR $T122215[ebp], 1
	mov	DWORD PTR _ppList$[ebp], OFFSET _pLaps
$LN5@DeleteFile:
; Line 2416
	cmp	BYTE PTR $T122214[ebp], 0
	jne	SHORT $LN9@DeleteFile
	push	OFFSET $LN10@DeleteFile
	call	__RTC_UninitUse
	add	esp, 4
$LN9@DeleteFile:
	cmp	DWORD PTR _pList$[ebp], 0
	je	SHORT $LN3@DeleteFile
; Line 2420
	cmp	BYTE PTR $T122214[ebp], 0
	jne	SHORT $LN11@DeleteFile
	push	OFFSET $LN10@DeleteFile
	call	__RTC_UninitUse
	add	esp, 4
$LN11@DeleteFile:
	mov	eax, DWORD PTR _pList$[ebp]
	mov	DWORD PTR _pData$121311[ebp], eax
$LN2@DeleteFile:
; Line 2421
	mov	eax, DWORD PTR _pData$121311[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pNext$121310[ebp], ecx
	mov	edx, DWORD PTR _pNext$121310[ebp]
	mov	DWORD PTR tv68[ebp], edx
	mov	eax, DWORD PTR _pData$121311[ebp]
	add	eax, 4
	mov	DWORD PTR _pData$121311[ebp], eax
	cmp	DWORD PTR tv68[ebp], 0
	je	SHORT $LN1@DeleteFile
; Line 2422
	mov	eax, DWORD PTR _pNext$121310[ebp]
	push	eax
	call	_free
	add	esp, 4
	jmp	SHORT $LN2@DeleteFile
$LN1@DeleteFile:
; Line 2423
	cmp	BYTE PTR $T122214[ebp], 0
	jne	SHORT $LN12@DeleteFile
	push	OFFSET $LN10@DeleteFile
	call	__RTC_UninitUse
	add	esp, 4
$LN12@DeleteFile:
	mov	eax, DWORD PTR _pList$[ebp]
	push	eax
	call	_free
	add	esp, 4
; Line 2424
	mov	BYTE PTR $T122214[ebp], 1
	mov	DWORD PTR _pList$[ebp], 0
$LN3@DeleteFile:
; Line 2427
	cmp	BYTE PTR $T122215[ebp], 0
	jne	SHORT $LN13@DeleteFile
	push	OFFSET $LN14@DeleteFile
	call	__RTC_UninitUse
	add	esp, 4
$LN13@DeleteFile:
	mov	eax, DWORD PTR _ppList$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2428
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@DeleteFile:
$LN14@DeleteFile:
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
$LN10@DeleteFile:
	DB	112					; 00000070H
	DB	76					; 0000004cH
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_DeleteFileList ENDP
_TEXT	ENDS
PUBLIC	_DeleteBestLaps
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DeleteBestLaps
_TEXT	SEGMENT
_i$ = -8						; size = 4
_DeleteBestLaps PROC					; COMDAT
; Line 2431
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2434
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@DeleteBest
$LN2@DeleteBest:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@DeleteBest:
	cmp	DWORD PTR _i$[ebp], 200			; 000000c8H
	jge	SHORT $LN4@DeleteBest
; Line 2436
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _BestLaps[eax*4], 0
; Line 2437
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _BestLapNumber[eax*4], 0
; Line 2438
	jmp	SHORT $LN2@DeleteBest
$LN4@DeleteBest:
; Line 2439
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_DeleteBestLaps ENDP
_TEXT	ENDS
PUBLIC	_GetBestLapNumber
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetBestLapNumber
_TEXT	SEGMENT
_session$ = 8						; size = 4
_GetBestLapNumber PROC					; COMDAT
; Line 2442
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2443
	mov	eax, DWORD PTR _session$[ebp]
	mov	eax, DWORD PTR _BestLapNumber[eax*4]
; Line 2444
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetBestLapNumber ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _parseName
_TEXT	SEGMENT
tv85 = -220						; size = 4
tv72 = -220						; size = 4
_i$ = -20						; size = 4
_ch$ = -5						; size = 1
_pDest$ = 8						; size = 4
_pSource$ = 12						; size = 4
_type$ = 16						; size = 4
_parseName PROC						; COMDAT
; Line 2447
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2451
	cmp	DWORD PTR _type$[ebp], 4
	jne	$LN2@parseName@2
; Line 2454
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@parseName@2
$LN7@parseName@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@parseName@2:
	cmp	DWORD PTR _i$[ebp], 10			; 0000000aH
	jge	SHORT $LN5@parseName@2
; Line 2455
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	ecx, DWORD PTR _pSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _pDest$[ebp]
	add	eax, 1
	mov	DWORD PTR _pDest$[ebp], eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pSource$[ebp], ecx
	jmp	SHORT $LN7@parseName@2
$LN5@parseName@2:
; Line 2458
	mov	eax, DWORD PTR _pSource$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	edx, DWORD PTR _pSource$[ebp]
	add	edx, 1
	mov	DWORD PTR _pSource$[ebp], edx
	cmp	ecx, 46					; 0000002eH
	je	SHORT $LN12@parseName@2
	mov	DWORD PTR tv72[ebp], 1
	jmp	SHORT $LN13@parseName@2
$LN12@parseName@2:
	mov	DWORD PTR tv72[ebp], 0
$LN13@parseName@2:
	cmp	DWORD PTR tv72[ebp], 0
	je	SHORT $LN4@parseName@2
; Line 2459
	jmp	SHORT $LN5@parseName@2
$LN4@parseName@2:
; Line 2462
	mov	eax, DWORD PTR _pSource$[ebp]
	sub	eax, 4
	mov	DWORD PTR _pSource$[ebp], eax
; Line 2463
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
	mov	ecx, DWORD PTR _pDest$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pDest$[ebp], ecx
; Line 2464
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	ecx, DWORD PTR _pSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _pDest$[ebp]
	add	eax, 1
	mov	DWORD PTR _pDest$[ebp], eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pSource$[ebp], ecx
; Line 2465
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	ecx, DWORD PTR _pSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _pDest$[ebp]
	add	eax, 1
	mov	DWORD PTR _pDest$[ebp], eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pSource$[ebp], ecx
; Line 2466
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	ecx, DWORD PTR _pSource$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
	mov	eax, DWORD PTR _pDest$[ebp]
	add	eax, 1
	mov	DWORD PTR _pDest$[ebp], eax
	mov	ecx, DWORD PTR _pSource$[ebp]
	add	ecx, 1
	mov	DWORD PTR _pSource$[ebp], ecx
; Line 2467
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 2469
	jmp	SHORT $LN10@parseName@2
$LN2@parseName@2:
; Line 2471
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
	cmp	edx, 46					; 0000002eH
	je	SHORT $LN14@parseName@2
	mov	DWORD PTR tv85[ebp], 1
	jmp	SHORT $LN15@parseName@2
$LN14@parseName@2:
	mov	DWORD PTR tv85[ebp], 0
$LN15@parseName@2:
	cmp	DWORD PTR tv85[ebp], 0
	je	SHORT $LN1@parseName@2
	movzx	eax, BYTE PTR _ch$[ebp]
	test	eax, eax
	je	SHORT $LN1@parseName@2
; Line 2472
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$[ebp], edx
	jmp	SHORT $LN2@parseName@2
$LN1@parseName@2:
; Line 2473
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
$LN10@parseName@2:
; Line 2475
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_parseName ENDP
_TEXT	ENDS
EXTRN	_tolower:PROC
EXTRN	_isalnum:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidFileName
_TEXT	SEGMENT
tv71 = -208						; size = 4
_ch$ = -5						; size = 1
_pName$ = 8						; size = 4
_ValidFileName PROC					; COMDAT
; Line 2481
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2485
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_isalnum
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN6@ValidFileN
; Line 2486
	xor	al, al
	jmp	$LN8@ValidFileN
$LN6@ValidFileN:
; Line 2489
	mov	eax, DWORD PTR _pName$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR _pName$[ebp]
	add	eax, 1
	mov	DWORD PTR _pName$[ebp], eax
	cmp	edx, 46					; 0000002eH
	je	SHORT $LN10@ValidFileN
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN11@ValidFileN
$LN10@ValidFileN:
	mov	DWORD PTR tv71[ebp], 0
$LN11@ValidFileN:
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN5@ValidFileN
	movzx	eax, BYTE PTR _ch$[ebp]
	test	eax, eax
	je	SHORT $LN5@ValidFileN
; Line 2490
	jmp	SHORT $LN6@ValidFileN
$LN5@ValidFileN:
; Line 2492
	movzx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN4@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 100				; 00000064H
	jne	SHORT $LN4@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 97					; 00000061H
	jne	SHORT $LN4@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN4@ValidFileN
; Line 2493
	mov	al, 1
	jmp	SHORT $LN8@ValidFileN
	jmp	SHORT $LN8@ValidFileN
$LN4@ValidFileN:
; Line 2494
	movzx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 46					; 0000002eH
	jne	SHORT $LN2@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 116				; 00000074H
	jne	SHORT $LN2@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 113				; 00000071H
	jne	SHORT $LN2@ValidFileN
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax+2]
	push	ecx
	call	_tolower
	add	esp, 4
	cmp	eax, 109				; 0000006dH
	jne	SHORT $LN2@ValidFileN
; Line 2495
	mov	al, 1
	jmp	SHORT $LN8@ValidFileN
	jmp	SHORT $LN8@ValidFileN
$LN2@ValidFileN:
; Line 2496
	xor	al, al
$LN8@ValidFileN:
; Line 2497
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidFileName ENDP
_TEXT	ENDS
PUBLIC	_GetSessionCharacter
EXTRN	_toupper:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidRaceSession
_TEXT	SEGMENT
_sessionChar$ = -17					; size = 1
_len$ = -5						; size = 1
_type$ = 8						; size = 4
_pName$ = 12						; size = 4
_ValidRaceSession PROC					; COMDAT
; Line 2500
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2504
	mov	eax, DWORD PTR _pName$[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	_isalnum
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN10@ValidRaceS
; Line 2505
	xor	al, al
	jmp	$LN11@ValidRaceS
$LN10@ValidRaceS:
; Line 2508
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	BYTE PTR _len$[ebp], al
; Line 2510
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _pName$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-4]
	cmp	edx, 46					; 0000002eH
	jne	$LN9@ValidRaceS
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _pName$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-3]
	push	edx
	call	_tolower
	add	esp, 4
	cmp	eax, 116				; 00000074H
	jne	$LN9@ValidRaceS
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _pName$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-2]
	push	edx
	call	_tolower
	add	esp, 4
	cmp	eax, 113				; 00000071H
	jne	$LN9@ValidRaceS
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _pName$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-1]
	push	edx
	call	_tolower
	add	esp, 4
	cmp	eax, 109				; 0000006dH
	jne	SHORT $LN9@ValidRaceS
; Line 2512
	movzx	eax, BYTE PTR _len$[ebp]
	mov	ecx, DWORD PTR _pName$[ebp]
	movzx	edx, BYTE PTR [ecx+eax-7]
	push	edx
	call	_toupper
	add	esp, 4
	mov	BYTE PTR _sessionChar$[ebp], al
; Line 2514
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_GetSessionCharacter
	add	esp, 4
	movzx	ecx, al
	cmp	ecx, 81					; 00000051H
	jne	SHORT $LN8@ValidRaceS
; Line 2516
	movzx	eax, BYTE PTR _sessionChar$[ebp]
	cmp	eax, 81					; 00000051H
	je	SHORT $LN6@ValidRaceS
	movzx	eax, BYTE PTR _sessionChar$[ebp]
	cmp	eax, 69					; 00000045H
	je	SHORT $LN6@ValidRaceS
	movzx	eax, BYTE PTR _sessionChar$[ebp]
	cmp	eax, 84					; 00000054H
	jne	SHORT $LN7@ValidRaceS
$LN6@ValidRaceS:
; Line 2517
	mov	al, 1
	jmp	SHORT $LN11@ValidRaceS
	jmp	SHORT $LN5@ValidRaceS
$LN7@ValidRaceS:
; Line 2518
	xor	al, al
	jmp	SHORT $LN11@ValidRaceS
$LN5@ValidRaceS:
; Line 2521
	jmp	SHORT $LN4@ValidRaceS
$LN8@ValidRaceS:
	movzx	esi, BYTE PTR _sessionChar$[ebp]
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	call	_GetSessionCharacter
	add	esp, 4
	movzx	ecx, al
	cmp	esi, ecx
	jne	SHORT $LN3@ValidRaceS
; Line 2522
	mov	al, 1
	jmp	SHORT $LN11@ValidRaceS
	jmp	SHORT $LN4@ValidRaceS
$LN3@ValidRaceS:
; Line 2523
	xor	al, al
	jmp	SHORT $LN11@ValidRaceS
$LN4@ValidRaceS:
; Line 2525
	jmp	SHORT $LN11@ValidRaceS
$LN9@ValidRaceS:
	xor	al, al
$LN11@ValidRaceS:
; Line 2526
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidRaceSession ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FindSelection
_TEXT	SEGMENT
tv64 = -232						; size = 4
_count$ = -32						; size = 4
_pList$ = -20						; size = 4
_pSelection$ = -8					; size = 4
_sel$ = 8						; size = 4
_FindSelection PROC					; COMDAT
; Line 2530
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2534
	mov	eax, DWORD PTR _sel$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN7@FindSelect
	cmp	DWORD PTR tv64[ebp], 3
	je	SHORT $LN8@FindSelect
	jmp	SHORT $LN6@FindSelect
$LN8@FindSelect:
; Line 2537
	mov	DWORD PTR _pList$[ebp], OFFSET _pDrivers
; Line 2538
	mov	DWORD PTR _pSelection$[ebp], OFFSET _sysData+126
; Line 2539
	jmp	SHORT $LN9@FindSelect
$LN7@FindSelect:
; Line 2541
	mov	DWORD PTR _pList$[ebp], OFFSET _pVehicles
; Line 2542
	mov	DWORD PTR _pSelection$[ebp], OFFSET _sysData+143
; Line 2543
	jmp	SHORT $LN9@FindSelect
$LN6@FindSelect:
; Line 2549
	mov	eax, DWORD PTR _pTracksShort
	mov	DWORD PTR _pList$[ebp], eax
; Line 2550
	mov	DWORD PTR _pSelection$[ebp], OFFSET _sysData+160
$LN9@FindSelect:
; Line 2554
	mov	eax, DWORD PTR _pSelection$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	jne	SHORT $LN5@FindSelect
; Line 2555
	xor	eax, eax
	jmp	SHORT $LN11@FindSelect
$LN5@FindSelect:
; Line 2557
	mov	DWORD PTR _count$[ebp], 0
$LN4@FindSelect:
; Line 2558
	mov	eax, DWORD PTR _pList$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@FindSelect
; Line 2560
	mov	eax, DWORD PTR _pSelection$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pList$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@FindSelect
; Line 2562
	mov	eax, DWORD PTR _pList$[ebp]
	add	eax, 4
	mov	DWORD PTR _pList$[ebp], eax
; Line 2563
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
	jmp	SHORT $LN1@FindSelect
$LN2@FindSelect:
; Line 2565
	mov	eax, DWORD PTR _count$[ebp]
	jmp	SHORT $LN11@FindSelect
$LN1@FindSelect:
; Line 2566
	jmp	SHORT $LN4@FindSelect
$LN3@FindSelect:
; Line 2567
	xor	eax, eax
$LN11@FindSelect:
; Line 2568
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FindSelection ENDP
_TEXT	ENDS
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_SetPopupDefaults:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InvalidName
_TEXT	SEGMENT
_InvalidName PROC					; COMDAT
; Line 2582
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2583
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 2585
	push	282					; 0000011aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hRaceSetupScreens
	push	eax
	push	OFFSET _popupCallback
	push	4
	push	OFFSET _BadNameDialog
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 2587
	mov	eax, DWORD PTR _button
	push	eax
	call	_DisplayKeyboard
	add	esp, 4
; Line 2588
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InvalidName ENDP
_TEXT	ENDS
PUBLIC	_FindNewestFile
PUBLIC	_ResetAllFileLists
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ResetAllFileLists
_TEXT	SEGMENT
_doCreateTracks$ = 8					; size = 1
_ResetAllFileLists PROC					; COMDAT
; Line 2594
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2595
	movzx	eax, BYTE PTR _doCreateTracks$[ebp]
	test	eax, eax
	je	SHORT $LN2@ResetAllFi
; Line 2596
	call	_CreateTracks
$LN2@ResetAllFi:
; Line 2598
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jge	SHORT $LN1@ResetAllFi
; Line 2599
	mov	eax, DWORD PTR _sysData+180
	push	eax
	call	_GetClosestTracks
	add	esp, 4
$LN1@ResetAllFi:
; Line 2601
	push	OFFSET _sysData+160
	call	_FindFile
	add	esp, 4
	mov	DWORD PTR _trackTableIndex, eax
; Line 2603
	push	1
	call	_CreateFileList
	add	esp, 4
; Line 2604
	push	3
	call	_CreateFileList
	add	esp, 4
; Line 2605
	push	2
	call	_CreateFileList
	add	esp, 4
; Line 2606
	push	4
	call	_CreateFileList
	add	esp, 4
; Line 2608
	movzx	eax, BYTE PTR _sysData+208
	push	eax
	call	_FindNewestFile
	add	esp, 4
	mov	DWORD PTR _selectedSessionUnsorted, eax
; Line 2609
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ResetAllFileLists ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _CreateTrackList
_TEXT	SEGMENT
_courseType$121428 = -80				; size = 4
_currentCourseType$121415 = -68				; size = 4
_sortByDistance$ = -53					; size = 1
_pNextLink$ = -44					; size = 4
_loopCount$ = -32					; size = 4
_temp$ = -20						; size = 4
_count$ = -8						; size = 4
_CreateTrackList PROC					; COMDAT
; Line 2614
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2615
	mov	DWORD PTR _count$[ebp], 0
; Line 2621
	cmp	DWORD PTR _ctType, 0
	jne	SHORT $LN20@CreateTrac
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jl	SHORT $LN20@CreateTrac
; Line 2622
	mov	BYTE PTR _sortByDistance$[ebp], 0
	jmp	SHORT $LN19@CreateTrac
$LN20@CreateTrac:
; Line 2623
	mov	BYTE PTR _sortByDistance$[ebp], 1
$LN19@CreateTrac:
; Line 2649
	cmp	DWORD PTR _pTracksShort, 0
	je	SHORT $LN18@CreateTrac
; Line 2650
	mov	eax, DWORD PTR _pTracksShort
	push	eax
	call	_free
	add	esp, 4
$LN18@CreateTrac:
; Line 2652
	mov	DWORD PTR _numTracks, 0
; Line 2654
	movzx	eax, BYTE PTR _sortByDistance$[ebp]
	test	eax, eax
	je	SHORT $LN17@CreateTrac
; Line 2655
	mov	eax, DWORD PTR _numberOfShortListTracks
	mov	DWORD PTR _temp$[ebp], eax
	jmp	SHORT $LN16@CreateTrac
$LN17@CreateTrac:
; Line 2656
	mov	eax, DWORD PTR _numberOfTracks
	mov	DWORD PTR _temp$[ebp], eax
$LN16@CreateTrac:
; Line 2657
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _loopCount$[ebp], eax
; Line 2659
	cmp	DWORD PTR _temp$[ebp], 5
	jge	SHORT $LN15@CreateTrac
; Line 2660
	mov	DWORD PTR _temp$[ebp], 5
$LN15@CreateTrac:
; Line 2663
	mov	eax, DWORD PTR _temp$[ebp]
	lea	ecx, DWORD PTR [eax*4+4]
	push	ecx
	call	_malloc
	add	esp, 4
	mov	DWORD PTR _pTracksShort, eax
	mov	edx, DWORD PTR _pTracksShort
	mov	DWORD PTR _pNextLink$[ebp], edx
; Line 2664
	movzx	eax, BYTE PTR _sysData+208
	push	eax
	call	_SessionTypeToTrackType
	add	esp, 4
	mov	DWORD PTR _currentCourseType$121415[ebp], eax
; Line 2665
	cmp	DWORD PTR _currentCourseType$121415[ebp], 3
	je	SHORT $LN13@CreateTrac
	cmp	DWORD PTR _currentCourseType$121415[ebp], 4
	jne	SHORT $LN12@CreateTrac
$LN13@CreateTrac:
; Line 2666
	mov	DWORD PTR _currentCourseType$121415[ebp], 5
$LN12@CreateTrac:
; Line 2668
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _loopCount$[ebp]
	jge	$LN11@CreateTrac
; Line 2673
	movzx	eax, BYTE PTR _sortByDistance$[ebp]
	test	eax, eax
	je	SHORT $LN10@CreateTrac
; Line 2674
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _trackShortList[eax*4]
	imul	ecx, 72					; 00000048H
	mov	edx, DWORD PTR _trackTable[ecx+68]
	mov	DWORD PTR _courseType$121428[ebp], edx
	jmp	SHORT $LN9@CreateTrac
$LN10@CreateTrac:
; Line 2675
	mov	eax, DWORD PTR _count$[ebp]
	imul	eax, 72					; 00000048H
	mov	ecx, DWORD PTR _trackTable[eax+68]
	mov	DWORD PTR _courseType$121428[ebp], ecx
$LN9@CreateTrac:
; Line 2678
	cmp	DWORD PTR _courseType$121428[ebp], 3
	je	SHORT $LN7@CreateTrac
	cmp	DWORD PTR _courseType$121428[ebp], 4
	jne	SHORT $LN8@CreateTrac
$LN7@CreateTrac:
; Line 2679
	mov	DWORD PTR _courseType$121428[ebp], 5
	jmp	SHORT $LN6@CreateTrac
$LN8@CreateTrac:
; Line 2680
	cmp	DWORD PTR _courseType$121428[ebp], 1
	jne	SHORT $LN6@CreateTrac
; Line 2681
	mov	DWORD PTR _courseType$121428[ebp], 0
$LN6@CreateTrac:
; Line 2683
	mov	eax, DWORD PTR _courseType$121428[ebp]
	cmp	eax, DWORD PTR _currentCourseType$121415[ebp]
	jne	SHORT $LN4@CreateTrac
; Line 2685
	movzx	eax, BYTE PTR _sortByDistance$[ebp]
	test	eax, eax
	je	SHORT $LN3@CreateTrac
; Line 2686
	mov	eax, DWORD PTR _count$[ebp]
	mov	ecx, DWORD PTR _trackShortList[eax*4]
	imul	ecx, 72					; 00000048H
	add	ecx, OFFSET _trackTable
	mov	edx, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [edx], ecx
	mov	eax, DWORD PTR _pNextLink$[ebp]
	add	eax, 4
	mov	DWORD PTR _pNextLink$[ebp], eax
	jmp	SHORT $LN2@CreateTrac
$LN3@CreateTrac:
; Line 2687
	mov	eax, DWORD PTR _count$[ebp]
	imul	eax, 72					; 00000048H
	add	eax, OFFSET _trackTable
	mov	ecx, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [ecx], eax
	mov	edx, DWORD PTR _pNextLink$[ebp]
	add	edx, 4
	mov	DWORD PTR _pNextLink$[ebp], edx
$LN2@CreateTrac:
; Line 2689
	mov	eax, DWORD PTR _numTracks
	add	eax, 1
	mov	DWORD PTR _numTracks, eax
$LN4@CreateTrac:
; Line 2691
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
; Line 2692
	jmp	$LN12@CreateTrac
$LN11@CreateTrac:
; Line 2693
	mov	eax, DWORD PTR _numTracks
	mov	DWORD PTR _count$[ebp], eax
	mov	ecx, DWORD PTR _count$[ebp]
	mov	DWORD PTR _numberOfShortListTracksUser, ecx
; Line 2697
	cmp	DWORD PTR _count$[ebp], 0
	jne	SHORT $LN1@CreateTrac
; Line 2700
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [eax], OFFSET _NoneInRange
	mov	ecx, DWORD PTR _pNextLink$[ebp]
	add	ecx, 4
	mov	DWORD PTR _pNextLink$[ebp], ecx
$LN1@CreateTrac:
; Line 2703
	mov	eax, DWORD PTR _pNextLink$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2704
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateTrackList ENDP
_TEXT	ENDS
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	_SetTrackTableDefaultData
EXTRN	_trackData:BYTE
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _SetTrackTableDefaultData
_TEXT	SEGMENT
_SetTrackTableDefaultData PROC				; COMDAT
; Line 2707
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2709
	cmp	DWORD PTR _trackTableIndex, 0
	jne	SHORT $LN3@SetTrackTa
; Line 2710
	push	OFFSET _sysData+160
	call	_FindFile
	add	esp, 4
	mov	DWORD PTR _trackTableIndex, eax
$LN3@SetTrackTa:
; Line 2712
	cmp	DWORD PTR _trackTableIndex, 0
	jl	$LN2@SetTrackTa
; Line 2714
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	QWORD PTR _trackTable[eax+24]
	fstp	QWORD PTR _trackData+16
; Line 2715
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	QWORD PTR _trackTable[eax+32]
	fstp	QWORD PTR _trackData+24
; Line 2716
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	DWORD PTR _trackTable[eax+40]
	fstp	DWORD PTR _trackData+36
; Line 2717
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	QWORD PTR _trackTable[eax+48]
	fstp	QWORD PTR _trackData+40
; Line 2718
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	QWORD PTR _trackTable[eax+56]
	fstp	QWORD PTR _trackData+48
; Line 2719
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	fld	DWORD PTR _trackTable[eax+64]
	fstp	DWORD PTR _trackData+60
; Line 2720
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	mov	cl, BYTE PTR _trackTable[eax+68]
	mov	BYTE PTR _trackData+64, cl
; Line 2722
	jmp	SHORT $LN1@SetTrackTa
$LN2@SetTrackTa:
; Line 2724
	fldz
	fstp	QWORD PTR _trackData+16
; Line 2725
	fldz
	fstp	QWORD PTR _trackData+24
; Line 2726
	fldz
	fstp	DWORD PTR _trackData+36
; Line 2727
	fldz
	fstp	QWORD PTR _trackData+40
; Line 2728
	fldz
	fstp	QWORD PTR _trackData+48
; Line 2729
	fldz
	fstp	DWORD PTR _trackData+60
; Line 2730
	movzx	eax, BYTE PTR _sysData+208
	push	eax
	call	_SessionTypeToTrackType
	add	esp, 4
	mov	BYTE PTR _trackData+64, al
$LN1@SetTrackTa:
; Line 2732
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetTrackTableDefaultData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _SessionTypeToTrackType
_TEXT	SEGMENT
tv64 = -196						; size = 4
_type$ = 8						; size = 4
_SessionTypeToTrackType PROC				; COMDAT
; Line 2735
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2736
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 19			; 00000013H
	ja	SHORT $LN1@SessionTyp
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN12@SessionTyp[edx]
	jmp	DWORD PTR $LN13@SessionTyp[eax*4]
$LN7@SessionTyp:
; Line 2738
	mov	eax, 7
	jmp	SHORT $LN10@SessionTyp
$LN6@SessionTyp:
; Line 2739
	mov	eax, 2
	jmp	SHORT $LN10@SessionTyp
$LN5@SessionTyp:
; Line 2740
	mov	eax, 5
	jmp	SHORT $LN10@SessionTyp
$LN4@SessionTyp:
; Line 2741
	mov	eax, 3
	jmp	SHORT $LN10@SessionTyp
$LN3@SessionTyp:
; Line 2742
	mov	eax, 4
	jmp	SHORT $LN10@SessionTyp
$LN2@SessionTyp:
; Line 2743
	mov	eax, 6
	jmp	SHORT $LN10@SessionTyp
$LN1@SessionTyp:
; Line 2745
	xor	eax, eax
$LN10@SessionTyp:
; Line 2747
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@SessionTyp:
	DD	$LN6@SessionTyp
	DD	$LN7@SessionTyp
	DD	$LN4@SessionTyp
	DD	$LN2@SessionTyp
	DD	$LN5@SessionTyp
	DD	$LN3@SessionTyp
	DD	$LN1@SessionTyp
$LN12@SessionTyp:
	DB	0
	DB	6
	DB	6
	DB	1
	DB	2
	DB	6
	DB	6
	DB	3
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	4
	DB	6
	DB	6
	DB	5
_SessionTypeToTrackType ENDP
_TEXT	ENDS
PUBLIC	_TrackTypeToSessionType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TrackTypeToSessionType
_TEXT	SEGMENT
tv64 = -196						; size = 4
_type$ = 8						; size = 4
_TrackTypeToSessionType PROC				; COMDAT
; Line 2750
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2751
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 5
	ja	SHORT $LN1@TrackTypeT
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@TrackTypeT[edx*4]
$LN7@TrackTypeT:
; Line 2753
	mov	eax, 68					; 00000044H
	jmp	SHORT $LN10@TrackTypeT
$LN6@TrackTypeT:
; Line 2754
	mov	eax, 65					; 00000041H
	jmp	SHORT $LN10@TrackTypeT
$LN5@TrackTypeT:
; Line 2755
	mov	eax, 81					; 00000051H
	jmp	SHORT $LN10@TrackTypeT
$LN4@TrackTypeT:
; Line 2756
	mov	eax, 69					; 00000045H
	jmp	SHORT $LN10@TrackTypeT
$LN3@TrackTypeT:
; Line 2757
	mov	eax, 84					; 00000054H
	jmp	SHORT $LN10@TrackTypeT
$LN2@TrackTypeT:
; Line 2758
	mov	eax, 72					; 00000048H
	jmp	SHORT $LN10@TrackTypeT
$LN1@TrackTypeT:
; Line 2760
	mov	eax, 82					; 00000052H
$LN10@TrackTypeT:
; Line 2762
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN12@TrackTypeT:
	DD	$LN6@TrackTypeT
	DD	$LN4@TrackTypeT
	DD	$LN3@TrackTypeT
	DD	$LN5@TrackTypeT
	DD	$LN2@TrackTypeT
	DD	$LN7@TrackTypeT
_TrackTypeToSessionType ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _FindFile
_TEXT	SEGMENT
_i$ = -8						; size = 4
_defaultTrack$ = 8					; size = 4
_FindFile PROC						; COMDAT
; Line 2766
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2769
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@FindFile
$LN3@FindFile:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@FindFile:
	mov	eax, DWORD PTR _numberOfTracks
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN2@FindFile
; Line 2770
	push	16					; 00000010H
	mov	eax, DWORD PTR _defaultTrack$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 72					; 00000048H
	add	ecx, OFFSET _trackTable
	push	ecx
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@FindFile
; Line 2771
	mov	eax, DWORD PTR _i$[ebp]
	jmp	SHORT $LN5@FindFile
$LN1@FindFile:
; Line 2773
	jmp	SHORT $LN3@FindFile
$LN2@FindFile:
	or	eax, -1
$LN5@FindFile:
; Line 2774
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_FindFile ENDP
_TEXT	ENDS
PUBLIC	_GetNextNum
PUBLIC	_GetNextChar
PUBLIC	_GetNextString
PUBLIC	__$ArrayPad$
EXTRN	_atoi:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	__imp__SystemTimeToTzSpecificLocalTime@12:PROC
EXTRN	__imp__FileTimeToSystemTime@8:PROC
EXTRN	__imp__GetFileTime@16:PROC
EXTRN	__imp__CreateFileA@28:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _parseSessionName
_TEXT	SEGMENT
_stLocal$121501 = -252					; size = 16
_stUTC$121500 = -228					; size = 16
_lastWriteTime$ = -204					; size = 8
_hFile$ = -188						; size = 4
_fullFileName$ = -176					; size = 150
_scratch$ = -16						; size = 5
__$ArrayPad$ = -4					; size = 4
_pName$ = 8						; size = 4
_NameStruct$ = 12					; size = 4
_parseSessionName PROC					; COMDAT
; Line 2778
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2784
	push	OFFSET _MY_SESSIONS_PATH
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 2785
	push	OFFSET $SG121491
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 2786
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _fullFileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 2788
	mov	esi, esp
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	1
	push	-2147483648				; 80000000H
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateFileA@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hFile$[ebp], eax
	cmp	DWORD PTR _hFile$[ebp], -1
	je	$LN12@parseSessi
; Line 2790
	mov	esi, esp
	lea	eax, DWORD PTR _lastWriteTime$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _hFile$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetFileTime@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	$LN11@parseSessi
; Line 2794
	mov	esi, esp
	lea	eax, DWORD PTR _stUTC$121500[ebp]
	push	eax
	lea	ecx, DWORD PTR _lastWriteTime$[ebp]
	push	ecx
	call	DWORD PTR __imp__FileTimeToSystemTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2795
	mov	esi, esp
	lea	eax, DWORD PTR _stLocal$121501[ebp]
	push	eax
	lea	ecx, DWORD PTR _stUTC$121500[ebp]
	push	ecx
	push	0
	call	DWORD PTR __imp__SystemTimeToTzSpecificLocalTime@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 2797
	movzx	eax, WORD PTR _stLocal$121501[ebp+8]
	test	eax, eax
	jne	SHORT $LN10@parseSessi
; Line 2798
	movzx	eax, WORD PTR _stLocal$121501[ebp+10]
	push	eax
	push	OFFSET $SG121504
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@parseSessi
$LN10@parseSessi:
; Line 2799
	movzx	eax, WORD PTR _stLocal$121501[ebp+8]
	cmp	eax, 12					; 0000000cH
	jge	SHORT $LN8@parseSessi
; Line 2800
	movzx	eax, WORD PTR _stLocal$121501[ebp+10]
	push	eax
	movzx	ecx, WORD PTR _stLocal$121501[ebp+8]
	push	ecx
	push	OFFSET $SG121507
	mov	edx, DWORD PTR _NameStruct$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN9@parseSessi
$LN8@parseSessi:
; Line 2801
	movzx	eax, WORD PTR _stLocal$121501[ebp+8]
	cmp	eax, 12					; 0000000cH
	jne	SHORT $LN6@parseSessi
; Line 2802
	movzx	eax, WORD PTR _stLocal$121501[ebp+10]
	push	eax
	push	OFFSET $SG121510
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN9@parseSessi
$LN6@parseSessi:
; Line 2803
	movzx	eax, WORD PTR _stLocal$121501[ebp+10]
	push	eax
	movzx	ecx, WORD PTR _stLocal$121501[ebp+8]
	sub	ecx, 12					; 0000000cH
	push	ecx
	push	OFFSET $SG121512
	mov	edx, DWORD PTR _NameStruct$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN9@parseSessi:
; Line 2805
	jmp	SHORT $LN4@parseSessi
$LN11@parseSessi:
	mov	eax, DWORD PTR _NameStruct$[ebp]
	mov	BYTE PTR [eax], 0
$LN4@parseSessi:
; Line 2807
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN3@parseSessi
$LN12@parseSessi:
; Line 2809
	mov	eax, DWORD PTR _NameStruct$[ebp]
	mov	BYTE PTR [eax], 0
$LN3@parseSessi:
; Line 2832
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	add	ecx, 10					; 0000000aH
	push	ecx
	call	_GetNextString
	add	esp, 8
	mov	DWORD PTR _pName$[ebp], eax
; Line 2833
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	add	ecx, 21					; 00000015H
	push	ecx
	call	_GetNextString
	add	esp, 8
	mov	DWORD PTR _pName$[ebp], eax
; Line 2834
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	add	ecx, 38					; 00000026H
	push	ecx
	call	_GetNextString
	add	esp, 8
	mov	DWORD PTR _pName$[ebp], eax
; Line 2835
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	add	ecx, 55					; 00000037H
	push	ecx
	call	_GetNextString
	add	esp, 8
	mov	DWORD PTR _pName$[ebp], eax
; Line 2836
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	add	ecx, 72					; 00000048H
	push	ecx
	call	_GetNextChar
	add	esp, 8
	mov	DWORD PTR _pName$[ebp], eax
; Line 2837
	mov	eax, DWORD PTR _pName$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_GetNextNum
	add	esp, 8
; Line 2838
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_atoi
	add	esp, 4
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	mov	BYTE PTR [ecx+80], al
; Line 2839
	mov	eax, DWORD PTR _NameStruct$[ebp]
	cmp	DWORD PTR [eax+72], 69			; 00000045H
	je	SHORT $LN1@parseSessi
	mov	eax, DWORD PTR _NameStruct$[ebp]
	cmp	DWORD PTR [eax+72], 84			; 00000054H
	je	SHORT $LN1@parseSessi
	mov	eax, DWORD PTR _NameStruct$[ebp]
	cmp	DWORD PTR [eax+72], 81			; 00000051H
	jne	SHORT $LN2@parseSessi
$LN1@parseSessi:
; Line 2841
	mov	eax, DWORD PTR _NameStruct$[ebp]
	mov	ecx, DWORD PTR _NameStruct$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	mov	DWORD PTR [eax+76], edx
; Line 2842
	mov	eax, DWORD PTR _NameStruct$[ebp]
	mov	DWORD PTR [eax+72], 81			; 00000051H
$LN2@parseSessi:
; Line 2844
	mov	eax, DWORD PTR _NameStruct$[ebp]
	mov	eax, DWORD PTR [eax+72]
; Line 2845
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@parseSessi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@parseSessi:
	DD	5
	DD	$LN20@parseSessi
$LN20@parseSessi:
	DD	-16					; fffffff0H
	DD	5
	DD	$LN15@parseSessi
	DD	-176					; ffffff50H
	DD	150					; 00000096H
	DD	$LN16@parseSessi
	DD	-204					; ffffff34H
	DD	8
	DD	$LN17@parseSessi
	DD	-228					; ffffff1cH
	DD	16					; 00000010H
	DD	$LN18@parseSessi
	DD	-252					; ffffff04H
	DD	16					; 00000010H
	DD	$LN19@parseSessi
$LN19@parseSessi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	0
$LN18@parseSessi:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	85					; 00000055H
	DB	84					; 00000054H
	DB	67					; 00000043H
	DB	0
$LN17@parseSessi:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	87					; 00000057H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN16@parseSessi:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN15@parseSessi:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_parseSessionName ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetNextString
_TEXT	SEGMENT
_ch$ = -5						; size = 1
_pDest$ = 8						; size = 4
_pSource$ = 12						; size = 4
_GetNextString PROC					; COMDAT
; Line 2848
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@GetNextStr:
; Line 2851
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetNextStr
; Line 2853
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
; Line 2854
	movzx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 95					; 0000005fH
	jne	SHORT $LN1@GetNextStr
; Line 2855
	jmp	SHORT $LN2@GetNextStr
$LN1@GetNextStr:
; Line 2856
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$[ebp], edx
; Line 2857
	jmp	SHORT $LN3@GetNextStr
$LN2@GetNextStr:
; Line 2858
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 2859
	mov	eax, DWORD PTR _pSource$[ebp]
; Line 2860
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNextString ENDP
_TEXT	ENDS
PUBLIC	_ValidSessionType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetNextChar
_TEXT	SEGMENT
_ch$ = -5						; size = 1
_pDest$ = 8						; size = 4
_pSource$ = 12						; size = 4
_GetNextChar PROC					; COMDAT
; Line 2863
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2866
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [eax], 0
; Line 2868
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetNextCha
; Line 2870
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
; Line 2871
	movzx	eax, BYTE PTR _ch$[ebp]
	push	eax
	call	_ValidSessionType
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@GetNextCha
; Line 2872
	movzx	eax, BYTE PTR _ch$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [ecx], eax
$LN2@GetNextCha:
; Line 2875
	mov	eax, DWORD PTR _pSource$[ebp]
; Line 2876
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNextChar ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetNextNum
_TEXT	SEGMENT
_ch$ = -5						; size = 1
_pDest$ = 8						; size = 4
_pSource$ = 12						; size = 4
_GetNextNum PROC					; COMDAT
; Line 2879
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN3@GetNextNum:
; Line 2882
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	test	edx, edx
	je	SHORT $LN2@GetNextNum
; Line 2884
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
; Line 2885
	movzx	eax, BYTE PTR _ch$[ebp]
	push	eax
	call	_isdigit
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@GetNextNum
; Line 2886
	jmp	SHORT $LN2@GetNextNum
$LN1@GetNextNum:
; Line 2887
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$[ebp], edx
; Line 2888
	jmp	SHORT $LN3@GetNextNum
$LN2@GetNextNum:
; Line 2889
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 2890
	mov	eax, DWORD PTR _pSource$[ebp]
; Line 2891
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNextNum ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ValidSessionType
_TEXT	SEGMENT
tv65 = -196						; size = 4
_ch$ = 8						; size = 1
_ValidSessionType PROC					; COMDAT
; Line 2895
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2896
	movzx	eax, BYTE PTR _ch$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 19			; 00000013H
	ja	SHORT $LN1@ValidSessi@2
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN7@ValidSessi@2[edx]
	jmp	DWORD PTR $LN8@ValidSessi@2[eax*4]
$LN2@ValidSessi@2:
; Line 2905
	mov	al, 1
	jmp	SHORT $LN5@ValidSessi@2
$LN1@ValidSessi@2:
; Line 2907
	xor	al, al
$LN5@ValidSessi@2:
; Line 2909
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@ValidSessi@2:
	DD	$LN2@ValidSessi@2
	DD	$LN1@ValidSessi@2
$LN7@ValidSessi@2:
	DB	0
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	1
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	0
	DB	0
	DB	1
	DB	0
_ValidSessionType ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetSessionCharacter
_TEXT	SEGMENT
tv64 = -196						; size = 4
_type$ = 8						; size = 4
_GetSessionCharacter PROC				; COMDAT
; Line 2912
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2913
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 19			; 00000013H
	ja	SHORT $LN1@GetSession@2
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN13@GetSession@2[edx]
	jmp	DWORD PTR $LN14@GetSession@2[eax*4]
$LN8@GetSession@2:
; Line 2915
	mov	al, 82					; 00000052H
	jmp	SHORT $LN11@GetSession@2
$LN7@GetSession@2:
; Line 2916
	mov	al, 68					; 00000044H
	jmp	SHORT $LN11@GetSession@2
$LN6@GetSession@2:
; Line 2917
	mov	al, 65					; 00000041H
	jmp	SHORT $LN11@GetSession@2
$LN5@GetSession@2:
; Line 2918
	mov	al, 81					; 00000051H
	jmp	SHORT $LN11@GetSession@2
$LN4@GetSession@2:
; Line 2919
	mov	al, 69					; 00000045H
	jmp	SHORT $LN11@GetSession@2
$LN3@GetSession@2:
; Line 2920
	mov	al, 84					; 00000054H
	jmp	SHORT $LN11@GetSession@2
$LN2@GetSession@2:
; Line 2921
	mov	al, 72					; 00000048H
	jmp	SHORT $LN11@GetSession@2
$LN1@GetSession@2:
; Line 2923
	xor	al, al
$LN11@GetSession@2:
; Line 2925
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN14@GetSession@2:
	DD	$LN6@GetSession@2
	DD	$LN7@GetSession@2
	DD	$LN4@GetSession@2
	DD	$LN2@GetSession@2
	DD	$LN5@GetSession@2
	DD	$LN8@GetSession@2
	DD	$LN3@GetSession@2
	DD	$LN1@GetSession@2
$LN13@GetSession@2:
	DB	0
	DB	7
	DB	7
	DB	1
	DB	2
	DB	7
	DB	7
	DB	3
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	7
	DB	4
	DB	5
	DB	7
	DB	6
_GetSessionCharacter ENDP
_TEXT	ENDS
PUBLIC	_GetSessionData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSessionData
_TEXT	SEGMENT
tv80 = -232						; size = 4
_ent$ = -32						; size = 4
_dir$ = -20						; size = 4
_count$ = -5						; size = 1
_GetSessionData PROC					; COMDAT
; Line 2928
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2929
	mov	BYTE PTR _count$[ebp], 0
; Line 2934
	push	OFFSET _MY_SESSIONS_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 2935
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN6@GetSession@3
$LN4@GetSession@3:
; Line 2938
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN3@GetSession@3
; Line 2940
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	movzx	ecx, BYTE PTR _sysData+208
	push	ecx
	call	_ValidRaceSession
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@GetSession@3
; Line 2941
	movzx	eax, BYTE PTR _count$[ebp]
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	mov	dl, BYTE PTR _count$[ebp]
	add	dl, 1
	mov	BYTE PTR _count$[ebp], dl
	cmp	eax, ecx
	jne	SHORT $LN8@GetSession@3
	mov	DWORD PTR tv80[ebp], 1
	jmp	SHORT $LN9@GetSession@3
$LN8@GetSession@3:
	mov	DWORD PTR tv80[ebp], 0
$LN9@GetSession@3:
	cmp	DWORD PTR tv80[ebp], 0
	je	SHORT $LN2@GetSession@3
; Line 2943
	push	OFFSET _NameStruct
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_parseSessionName
	add	esp, 8
; Line 2944
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_ReadAllSessionData
	add	esp, 4
; Line 2945
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
; Line 2946
	jmp	SHORT $LN6@GetSession@3
$LN2@GetSession@3:
; Line 2948
	jmp	$LN4@GetSession@3
$LN3@GetSession@3:
; Line 2949
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN6@GetSession@3:
; Line 2969
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSessionData ENDP
_TEXT	ENDS
PUBLIC	_TooManySessionsPopup
PUBLIC	_ClearSessionNameData
PUBLIC	_GetSessionNameData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSessionNameData
_TEXT	SEGMENT
tv81 = -232						; size = 4
_ent$ = -32						; size = 4
_dir$ = -20						; size = 4
_count$ = -5						; size = 1
_hParent$ = 8						; size = 4
_primary$ = 12						; size = 1
_type$ = 16						; size = 4
_GetSessionNameData PROC				; COMDAT
; Line 2977
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2979
	mov	BYTE PTR _count$[ebp], 0
; Line 2988
	call	_ClearSessionNameData
; Line 2991
	push	OFFSET _MY_SESSIONS_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 2992
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN7@GetSession@4
$LN5@GetSession@4:
; Line 2995
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN4@GetSession@4
; Line 2997
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	_ValidRaceSession
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@GetSession@4
; Line 2999
	movzx	eax, BYTE PTR _count$[ebp]
	imul	eax, 84					; 00000054H
	add	eax, OFFSET _SessionNameData
	mov	DWORD PTR tv81[ebp], eax
	mov	cl, BYTE PTR _count$[ebp]
	add	cl, 1
	mov	BYTE PTR _count$[ebp], cl
	mov	edx, DWORD PTR tv81[ebp]
	push	edx
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	call	_parseSessionName
	add	esp, 8
; Line 3001
	movzx	eax, BYTE PTR _count$[ebp]
	cmp	eax, 200				; 000000c8H
	jl	SHORT $LN3@GetSession@4
; Line 3003
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
; Line 3004
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN1@GetSession@4
; Line 3007
	movzx	eax, BYTE PTR _primary$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	call	_TooManySessionsPopup
	add	esp, 8
$LN1@GetSession@4:
; Line 3009
	jmp	SHORT $LN7@GetSession@4
$LN3@GetSession@4:
; Line 3012
	jmp	$LN5@GetSession@4
$LN4@GetSession@4:
; Line 3013
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN7@GetSession@4:
; Line 3037
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSessionNameData ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ClearSessionNameData
_TEXT	SEGMENT
_ClearSessionNameData PROC				; COMDAT
; Line 3040
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3041
	push	16800					; 000041a0H
	push	0
	push	OFFSET _SessionNameData
	call	_memset
	add	esp, 12					; 0000000cH
; Line 3042
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ClearSessionNameData ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__CompareFileTime@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _FindNewestFile
_TEXT	SEGMENT
_date$ = -252						; size = 8
_lastWriteTime$ = -236					; size = 8
_ent$ = -220						; size = 4
_dir$ = -208						; size = 4
_hFile$ = -196						; size = 4
_fullFileName$ = -184					; size = 150
_tempIndex$ = -24					; size = 4
_index$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_FindNewestFile PROC					; COMDAT
; Line 3045
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3046
	mov	DWORD PTR _index$[ebp], -1
; Line 3047
	mov	DWORD PTR _tempIndex$[ebp], 0
; Line 3057
	mov	DWORD PTR _date$[ebp+4], 0
; Line 3058
	mov	DWORD PTR _date$[ebp], 0
; Line 3059
	push	OFFSET _MY_SESSIONS_PATH
	call	_opendir
	add	esp, 4
	mov	DWORD PTR _dir$[ebp], eax
; Line 3060
	cmp	DWORD PTR _dir$[ebp], 0
	je	$LN7@FindNewest
$LN6@FindNewest:
; Line 3063
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_readdir
	add	esp, 4
	mov	DWORD PTR _ent$[ebp], eax
	cmp	DWORD PTR _ent$[ebp], 0
	je	$LN5@FindNewest
; Line 3065
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	mov	ecx, DWORD PTR _type$[ebp]
	push	ecx
	call	_ValidRaceSession
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	je	$LN4@FindNewest
; Line 3067
	push	OFFSET _MY_SESSIONS_PATH
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3068
	push	OFFSET $SG121623
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 3069
	mov	eax, DWORD PTR _ent$[ebp]
	add	eax, 2
	push	eax
	lea	ecx, DWORD PTR _fullFileName$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
; Line 3071
	mov	esi, esp
	push	0
	push	128					; 00000080H
	push	3
	push	0
	push	1
	push	-2147483648				; 80000000H
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	DWORD PTR __imp__CreateFileA@28
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hFile$[ebp], eax
	cmp	DWORD PTR _hFile$[ebp], -1
	je	SHORT $LN3@FindNewest
; Line 3073
	mov	esi, esp
	lea	eax, DWORD PTR _lastWriteTime$[ebp]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _hFile$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetFileTime@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@FindNewest
; Line 3075
	mov	esi, esp
	lea	eax, DWORD PTR _lastWriteTime$[ebp]
	push	eax
	lea	ecx, DWORD PTR _date$[ebp]
	push	ecx
	call	DWORD PTR __imp__CompareFileTime@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, -1
	jne	SHORT $LN2@FindNewest
; Line 3077
	mov	eax, DWORD PTR _lastWriteTime$[ebp]
	mov	DWORD PTR _date$[ebp], eax
	mov	ecx, DWORD PTR _lastWriteTime$[ebp+4]
	mov	DWORD PTR _date$[ebp+4], ecx
; Line 3078
	mov	eax, DWORD PTR _tempIndex$[ebp]
	mov	DWORD PTR _index$[ebp], eax
$LN2@FindNewest:
; Line 3081
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@FindNewest:
; Line 3084
	mov	eax, DWORD PTR _tempIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _tempIndex$[ebp], eax
$LN4@FindNewest:
; Line 3086
	jmp	$LN6@FindNewest
$LN5@FindNewest:
; Line 3087
	mov	eax, DWORD PTR _dir$[ebp]
	push	eax
	call	_closedir
	add	esp, 4
$LN7@FindNewest:
; Line 3110
	mov	eax, DWORD PTR _index$[ebp]
; Line 3111
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@FindNewest
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN14@FindNewest:
	DD	3
	DD	$LN13@FindNewest
$LN13@FindNewest:
	DD	-184					; ffffff48H
	DD	150					; 00000096H
	DD	$LN10@FindNewest
	DD	-236					; ffffff14H
	DD	8
	DD	$LN11@FindNewest
	DD	-252					; ffffff04H
	DD	8
	DD	$LN12@FindNewest
$LN12@FindNewest:
	DB	100					; 00000064H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN11@FindNewest:
	DB	108					; 0000006cH
	DB	97					; 00000061H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	87					; 00000057H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	84					; 00000054H
	DB	105					; 00000069H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
$LN10@FindNewest:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_FindNewestFile ENDP
_TEXT	ENDS
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_modalWindowUp:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RaceSetupPopup
_TEXT	SEGMENT
tv65 = -220						; size = 4
_owner$ = -20						; size = 4
_retval$ = -8						; size = 4
_screen$ = 8						; size = 4
_RaceSetupPopup PROC					; COMDAT
; Line 3167
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3171
	mov	DWORD PTR _retval$[ebp], 0
; Line 3172
	mov	DWORD PTR _modalWindowUp, 1
; Line 3174
	call	_HideSprites
; Line 3176
	call	_WM_GetDesktopWindow
	mov	DWORD PTR _owner$[ebp], eax
; Line 3178
	mov	eax, DWORD PTR _screen$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 2061				; 0000080dH
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 7
	ja	$LN19@RaceSetupP
	mov	edx, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN23@RaceSetupP[edx*4]
$LN18@RaceSetupP:
; Line 3181
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 3182
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _DeleteDriverResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN17@RaceSetupP
; Line 3183
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN16@RaceSetupP
$LN17@RaceSetupP:
; Line 3184
	mov	DWORD PTR _retval$[ebp], 0
$LN16@RaceSetupP:
; Line 3185
	jmp	$LN19@RaceSetupP
$LN15@RaceSetupP:
; Line 3188
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 3189
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _DeleteVehicleResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN14@RaceSetupP
; Line 3190
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN13@RaceSetupP
$LN14@RaceSetupP:
; Line 3191
	mov	DWORD PTR _retval$[ebp], 0
$LN13@RaceSetupP:
; Line 3192
	jmp	$LN19@RaceSetupP
$LN12@RaceSetupP:
; Line 3195
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 3196
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _DeleteTrackResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@RaceSetupP
; Line 3197
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN10@RaceSetupP
$LN11@RaceSetupP:
; Line 3198
	mov	DWORD PTR _retval$[ebp], 0
$LN10@RaceSetupP:
; Line 3199
	jmp	$LN19@RaceSetupP
$LN9@RaceSetupP:
; Line 3202
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 3203
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	3
	push	OFFSET _CantDeleteResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN8@RaceSetupP
; Line 3204
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN7@RaceSetupP
$LN8@RaceSetupP:
; Line 3205
	mov	DWORD PTR _retval$[ebp], 0
$LN7@RaceSetupP:
; Line 3206
	jmp	SHORT $LN19@RaceSetupP
$LN6@RaceSetupP:
; Line 3209
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 3210
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _FileAlreadyExistsResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 3
	jne	SHORT $LN5@RaceSetupP
; Line 3211
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN4@RaceSetupP
$LN5@RaceSetupP:
; Line 3212
	mov	DWORD PTR _retval$[ebp], 0
$LN4@RaceSetupP:
; Line 3213
	jmp	SHORT $LN19@RaceSetupP
$LN3@RaceSetupP:
; Line 3216
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 3217
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _TrackAlreadyExistsResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN2@RaceSetupP
; Line 3218
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN19@RaceSetupP
$LN2@RaceSetupP:
; Line 3219
	mov	DWORD PTR _retval$[ebp], 0
$LN19@RaceSetupP:
; Line 3223
	mov	DWORD PTR _modalWindowUp, 0
; Line 3225
	call	_UnhideSprites
; Line 3227
	mov	eax, DWORD PTR _retval$[ebp]
; Line 3228
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN23@RaceSetupP:
	DD	$LN18@RaceSetupP
	DD	$LN15@RaceSetupP
	DD	$LN12@RaceSetupP
	DD	$LN9@RaceSetupP
	DD	$LN19@RaceSetupP
	DD	$LN19@RaceSetupP
	DD	$LN6@RaceSetupP
	DD	$LN3@RaceSetupP
_RaceSetupPopup ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _TooManySessionsPopup
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_primary$ = 12						; size = 1
_TooManySessionsPopup PROC				; COMDAT
; Line 3247
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3248
	mov	DWORD PTR _modalWindowUp, 1
; Line 3250
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 3251
	movzx	eax, BYTE PTR _primary$[ebp]
	test	eax, eax
	je	SHORT $LN2@TooManySes
; Line 3252
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _TooManyTracksResourcesPrim
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	SHORT $LN1@TooManySes
$LN2@TooManySes:
; Line 3253
	push	0
	push	0
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _TooManyTracksResourcesSub
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
$LN1@TooManySes:
; Line 3255
	mov	DWORD PTR _modalWindowUp, 0
; Line 3256
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TooManySessionsPopup ENDP
_TEXT	ENDS
PUBLIC	_RSDeleteFile
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RSDeleteDriver
_TEXT	SEGMENT
_Sel$ = -8						; size = 4
_RSDeleteDriver PROC					; COMDAT
; Line 3259
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3262
	mov	DWORD PTR _editType, 0
; Line 3264
	push	OFFSET _sysData+126
	push	3
	call	_RSDeleteFile
	add	esp, 8
; Line 3266
	mov	eax, DWORD PTR _hDriverList
	push	eax
	call	_LISTVIEW_GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 3267
	cmp	DWORD PTR _Sel$[ebp], 0
	jne	SHORT $LN3@RSDeleteDr
; Line 3268
	mov	DWORD PTR _Sel$[ebp], 1
	jmp	SHORT $LN2@RSDeleteDr
$LN3@RSDeleteDr:
; Line 3269
	mov	eax, DWORD PTR _Sel$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Sel$[ebp], eax
$LN2@RSDeleteDr:
; Line 3270
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pDrivers[eax*4]
	push	ecx
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 3271
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pDrivers[eax*4]
	push	ecx
	push	OFFSET _sysData+126
	call	_strcpy
	add	esp, 8
; Line 3272
	push	3
	call	_ReloadData
	add	esp, 4
; Line 3273
	push	OFFSET _sysData+126
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 3275
	call	_UpdateList
; Line 3276
	cmp	DWORD PTR _numDrivers, 1
	jg	SHORT $LN4@RSDeleteDr
; Line 3278
	push	8421504					; 00808080H
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 3279
	push	8421504					; 00808080H
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN4@RSDeleteDr:
; Line 3281
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RSDeleteDriver ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _RSDeleteVehicle
_TEXT	SEGMENT
_Sel$ = -8						; size = 4
_RSDeleteVehicle PROC					; COMDAT
; Line 3284
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3287
	mov	DWORD PTR _editType, 1
; Line 3289
	push	OFFSET _sysData+143
	push	2
	call	_RSDeleteFile
	add	esp, 8
; Line 3291
	mov	eax, DWORD PTR _hVehicleList
	push	eax
	call	_LISTVIEW_GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
; Line 3292
	cmp	DWORD PTR _Sel$[ebp], 0
	jne	SHORT $LN3@RSDeleteVe
; Line 3293
	mov	DWORD PTR _Sel$[ebp], 1
	jmp	SHORT $LN2@RSDeleteVe
$LN3@RSDeleteVe:
; Line 3294
	mov	eax, DWORD PTR _Sel$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Sel$[ebp], eax
$LN2@RSDeleteVe:
; Line 3295
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pVehicles[eax*4]
	push	ecx
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 3296
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	ecx, DWORD PTR _pVehicles[eax*4]
	push	ecx
	push	OFFSET _sysData+143
	call	_strcpy
	add	esp, 8
; Line 3297
	push	2
	call	_ReloadData
	add	esp, 4
; Line 3298
	push	OFFSET _sysData+143
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 3300
	call	_UpdateList
; Line 3301
	cmp	DWORD PTR _numVehicles, 1
	jg	SHORT $LN4@RSDeleteVe
; Line 3303
	push	8421504					; 00808080H
	push	0
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 3304
	push	8421504					; 00808080H
	push	1
	mov	eax, DWORD PTR _hRSDeleteButton
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN4@RSDeleteVe:
; Line 3306
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RSDeleteVehicle ENDP
_TEXT	ENDS
EXTRN	_DeleteTrack:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RSDeleteTrack
_TEXT	SEGMENT
_testNumTracks$ = -8					; size = 4
_RSDeleteTrack PROC					; COMDAT
; Line 3309
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3313
	cmp	DWORD PTR _sysData+180, 20000		; 00004e20H
	jl	SHORT $LN9@RSDeleteTr
; Line 3314
	mov	eax, DWORD PTR _numTracks
	mov	DWORD PTR _testNumTracks$[ebp], eax
	jmp	SHORT $LN8@RSDeleteTr
$LN9@RSDeleteTr:
; Line 3315
	mov	eax, DWORD PTR _numberOfShortListTracksUser
	mov	DWORD PTR _testNumTracks$[ebp], eax
$LN8@RSDeleteTr:
; Line 3317
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	cmp	DWORD PTR _trackTable[eax+20], 0
	jne	SHORT $LN7@RSDeleteTr
; Line 3318
	xor	al, al
	jmp	$LN10@RSDeleteTr
	jmp	$LN10@RSDeleteTr
$LN7@RSDeleteTr:
; Line 3319
	cmp	DWORD PTR _testNumTracks$[ebp], 0
	je	$LN5@RSDeleteTr
; Line 3323
	mov	DWORD PTR _editType, 2
; Line 3325
	push	OFFSET _sysData+160
	call	_DeleteTrack
	add	esp, 4
; Line 3326
	push	OFFSET _sysData+160
	push	1
	call	_RSDeleteFile
	add	esp, 8
; Line 3327
	call	_CreateTracks
; Line 3329
	mov	eax, DWORD PTR _sysData+180
	push	eax
	call	_GetClosestTracks
	add	esp, 4
; Line 3330
	call	_CreateTrackList
; Line 3335
	mov	eax, DWORD PTR _pTracksShort
	mov	ecx, DWORD PTR [eax]
	push	ecx
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 3341
	cmp	DWORD PTR _testNumTracks$[ebp], 1
	jne	SHORT $LN4@RSDeleteTr
	push	OFFSET _NoneInRange
	push	OFFSET _selectedTrackName
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@RSDeleteTr
; Line 3343
	push	OFFSET $SG121735
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 3344
	push	OFFSET $SG121736
	push	OFFSET _selectedTrackName
	call	_strcpy
	add	esp, 8
; Line 3345
	push	OFFSET $SG121737
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
; Line 3347
	jmp	SHORT $LN3@RSDeleteTr
$LN4@RSDeleteTr:
; Line 3349
	push	OFFSET _selectedTrackName
	push	OFFSET _sysData+160
	call	_strcpy
	add	esp, 8
; Line 3350
	push	OFFSET _sysData+160
	call	_FindFile
	add	esp, 4
	mov	DWORD PTR _trackTableIndex, eax
; Line 3351
	mov	eax, DWORD PTR _trackTableIndex
	imul	eax, 72					; 00000048H
	cmp	DWORD PTR _trackTable[eax+20], 0
	je	SHORT $LN2@RSDeleteTr
; Line 3352
	push	1
	call	_ReloadData
	add	esp, 4
$LN2@RSDeleteTr:
; Line 3355
	push	OFFSET _sysData+160
	push	OFFSET _newName
	call	_strcpy
	add	esp, 8
$LN3@RSDeleteTr:
; Line 3358
	call	_UpdateList
; Line 3359
	mov	al, 1
	jmp	SHORT $LN10@RSDeleteTr
	jmp	SHORT $LN10@RSDeleteTr
$LN5@RSDeleteTr:
; Line 3361
	xor	al, al
$LN10@RSDeleteTr:
; Line 3362
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RSDeleteTrack ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RSDeleteFile
_TEXT	SEGMENT
_fullFileName$ = -160					; size = 150
__$ArrayPad$ = -4					; size = 4
_fileType$ = 8						; size = 4
_pName$ = 12						; size = 4
_RSDeleteFile PROC					; COMDAT
; Line 3366
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3369
	mov	eax, DWORD PTR _fileType$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pName$[ebp]
	push	ecx
	lea	edx, DWORD PTR _fullFileName$[ebp]
	push	edx
	call	_ConvertToFilename
	add	esp, 12					; 0000000cH
; Line 3371
	lea	eax, DWORD PTR _fullFileName$[ebp]
	push	eax
	call	_remove
	add	esp, 4
; Line 3375
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@RSDeleteFi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@RSDeleteFi:
	DD	1
	DD	$LN4@RSDeleteFi
$LN4@RSDeleteFi:
	DD	-160					; ffffff60H
	DD	150					; 00000096H
	DD	$LN3@RSDeleteFi
$LN3@RSDeleteFi:
	DB	102					; 00000066H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	78					; 0000004eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_RSDeleteFile ENDP
_TEXT	ENDS
PUBLIC	_GetSessionText
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSessionText
_TEXT	SEGMENT
tv64 = -196						; size = 4
_type$ = 8						; size = 4
_GetSessionText PROC					; COMDAT
; Line 3379
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3380
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN4@GetSession@5
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN3@GetSession@5
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN2@GetSession@5
	jmp	SHORT $LN1@GetSession@5
$LN4@GetSession@5:
; Line 3382
	mov	eax, OFFSET _SessionData+766
	jmp	SHORT $LN7@GetSession@5
$LN3@GetSession@5:
; Line 3383
	mov	eax, OFFSET _SessionData+1366
	jmp	SHORT $LN7@GetSession@5
$LN2@GetSession@5:
; Line 3384
	mov	eax, OFFSET _SessionData+966
	jmp	SHORT $LN7@GetSession@5
$LN1@GetSession@5:
; Line 3386
	mov	eax, OFFSET _SessionData+1166
$LN7@GetSession@5:
; Line 3388
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSessionText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetSelectedReviewModeText
_TEXT	SEGMENT
tv65 = -196						; size = 4
_GetSelectedReviewModeText PROC				; COMDAT
; Line 3397
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3398
	movzx	eax, BYTE PTR _sysData+208
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 19			; 00000013H
	ja	SHORT $LN5@GetSelecte
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN10@GetSelecte[edx]
	jmp	DWORD PTR $LN11@GetSelecte[eax*4]
$LN5@GetSelecte:
; Line 3402
	mov	eax, OFFSET $SG121765
	jmp	SHORT $LN8@GetSelecte
$LN4@GetSelecte:
; Line 3403
	mov	eax, OFFSET $SG121767
	jmp	SHORT $LN8@GetSelecte
$LN3@GetSelecte:
; Line 3404
	mov	eax, OFFSET $SG121769
	jmp	SHORT $LN8@GetSelecte
$LN2@GetSelecte:
; Line 3407
	mov	eax, OFFSET $SG121771
	jmp	SHORT $LN8@GetSelecte
$LN1@GetSelecte:
; Line 3408
	mov	eax, OFFSET $SG121773
$LN8@GetSelecte:
; Line 3410
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@GetSelecte:
	DD	$LN3@GetSelecte
	DD	$LN4@GetSelecte
	DD	$LN2@GetSelecte
	DD	$LN1@GetSelecte
	DD	$LN5@GetSelecte
$LN10@GetSelecte:
	DB	0
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	2
_GetSelectedReviewModeText ENDP
_TEXT	ENDS
PUBLIC	_InitReviewDisplayTypes
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InitReviewDisplayTypes
_TEXT	SEGMENT
_InitReviewDisplayTypes PROC				; COMDAT
; Line 3439
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3440
	mov	BYTE PTR _reviewRaceDisplay, 0
; Line 3441
	mov	BYTE PTR _reviewDriveDisplay, 0
; Line 3442
	mov	BYTE PTR _reviewAutoXDisplay, 0
; Line 3443
	mov	BYTE PTR _reviewDragDisplay, 0
; Line 3444
	mov	BYTE PTR _reviewHillDisplay, 0
; Line 3445
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_InitReviewDisplayTypes ENDP
_TEXT	ENDS
PUBLIC	_GetStringNumber
PUBLIC	__$ArrayPad$
PUBLIC	_SetBestTimeButtonText
EXTRN	_hBestTime:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetBestTimeButtonText
_TEXT	SEGMENT
tv135 = -332						; size = 4
tv89 = -332						; size = 4
tv83 = -332						; size = 4
tv65 = -332						; size = 4
_scratch2$ = -132					; size = 50
_scratch$ = -72						; size = 50
_nextDisplay$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_SetBestTimeButtonText PROC				; COMDAT
; Line 3448
	push	ebp
	mov	ebp, esp
	sub	esp, 332				; 0000014cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-332]
	mov	ecx, 83					; 00000053H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 3452
	movzx	eax, BYTE PTR _sysData+208
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 19			; 00000013H
	ja	SHORT $LN24@SetBestTim
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN33@SetBestTim[edx]
	jmp	DWORD PTR $LN38@SetBestTim[eax*4]
$LN24@SetBestTim:
; Line 3457
	movzx	eax, BYTE PTR _reviewRaceDisplay
	mov	ecx, DWORD PTR _RoadRaceDisplayTypes[eax*4]
	mov	DWORD PTR _nextDisplay$[ebp], ecx
; Line 3458
	jmp	SHORT $LN25@SetBestTim
$LN23@SetBestTim:
; Line 3460
	movzx	eax, BYTE PTR _reviewDriveDisplay
	mov	ecx, DWORD PTR _DriveDisplayTypes[eax*4]
	mov	DWORD PTR _nextDisplay$[ebp], ecx
; Line 3461
	jmp	SHORT $LN25@SetBestTim
$LN22@SetBestTim:
; Line 3463
	movzx	eax, BYTE PTR _reviewAutoXDisplay
	mov	ecx, DWORD PTR _AutoXDisplayTypes[eax*4]
	mov	DWORD PTR _nextDisplay$[ebp], ecx
; Line 3464
	jmp	SHORT $LN25@SetBestTim
$LN21@SetBestTim:
; Line 3468
	movzx	eax, BYTE PTR _reviewDragDisplay
	mov	ecx, DWORD PTR _DragDisplayTypes[eax*4]
	mov	DWORD PTR _nextDisplay$[ebp], ecx
; Line 3469
	jmp	SHORT $LN25@SetBestTim
$LN20@SetBestTim:
; Line 3471
	movzx	eax, BYTE PTR _reviewHillDisplay
	mov	ecx, DWORD PTR _HillDisplayTypes[eax*4]
	mov	DWORD PTR _nextDisplay$[ebp], ecx
$LN25@SetBestTim:
; Line 3475
	mov	eax, DWORD PTR _nextDisplay$[ebp]
	mov	DWORD PTR tv83[ebp], eax
	mov	ecx, DWORD PTR tv83[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv83[ebp], ecx
	cmp	DWORD PTR tv83[ebp], 7
	ja	SHORT $LN17@SetBestTim
	mov	edx, DWORD PTR tv83[ebp]
	jmp	DWORD PTR $LN39@SetBestTim[edx*4]
$LN17@SetBestTim:
; Line 3479
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	SHORT $LN29@SetBestTim
	mov	eax, DWORD PTR _selectedSessionUnsorted
	imul	eax, 84					; 00000054H
	add	eax, OFFSET _SessionNameData+55
	mov	DWORD PTR tv89[ebp], eax
	jmp	SHORT $LN30@SetBestTim
$LN29@SetBestTim:
	mov	DWORD PTR tv89[ebp], OFFSET $SG121816
$LN30@SetBestTim:
	mov	ecx, DWORD PTR tv89[ebp]
	push	ecx
	push	OFFSET $SG121817
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3480
	jmp	$LN18@SetBestTim
$LN16@SetBestTim:
; Line 3483
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	push	ecx
	push	0
	call	_GetBestLap
	add	esp, 12					; 0000000cH
	push	eax
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 3484
	jmp	$LN18@SetBestTim
$LN15@SetBestTim:
; Line 3487
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	SHORT $LN31@SetBestTim
	mov	eax, DWORD PTR _selectedSessionUnsorted
	imul	eax, 84					; 00000054H
	add	eax, OFFSET _SessionNameData+38
	mov	DWORD PTR tv135[ebp], eax
	jmp	SHORT $LN32@SetBestTim
$LN31@SetBestTim:
	mov	DWORD PTR tv135[ebp], OFFSET $SG121820
$LN32@SetBestTim:
	mov	ecx, DWORD PTR tv135[ebp]
	push	ecx
	push	OFFSET $SG121821
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 3488
	jmp	$LN18@SetBestTim
$LN14@SetBestTim:
; Line 3491
	push	OFFSET $SG121823
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3492
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	SHORT $LN13@SetBestTim
; Line 3494
	push	OFFSET _SessionData+766
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	push	1
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
; Line 3495
	movzx	eax, BYTE PTR _scratch2$[ebp]
	cmp	eax, 68					; 00000044H
	jne	SHORT $LN12@SetBestTim
; Line 3496
	lea	eax, DWORD PTR _scratch2$[ebp+10]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN13@SetBestTim
$LN12@SetBestTim:
; Line 3497
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN13@SetBestTim:
; Line 3499
	jmp	$LN18@SetBestTim
$LN10@SetBestTim:
; Line 3502
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	push	ecx
	call	_GetAutoxTime
	add	esp, 8
	push	eax
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 3503
	jmp	$LN18@SetBestTim
$LN9@SetBestTim:
; Line 3506
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _selectedSessionUnsorted
	push	ecx
	call	_GetDragTime
	add	esp, 8
	push	eax
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
; Line 3507
	jmp	$LN18@SetBestTim
$LN8@SetBestTim:
; Line 3510
	push	OFFSET $SG121830
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3511
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	SHORT $LN7@SetBestTim
; Line 3513
	push	OFFSET _SessionData+1366
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	push	1
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
; Line 3514
	movzx	eax, BYTE PTR _scratch2$[ebp]
	cmp	eax, 77					; 0000004dH
	jne	SHORT $LN6@SetBestTim
; Line 3515
	lea	eax, DWORD PTR _scratch2$[ebp+11]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN7@SetBestTim
$LN6@SetBestTim:
; Line 3516
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN7@SetBestTim:
; Line 3518
	jmp	SHORT $LN18@SetBestTim
$LN4@SetBestTim:
; Line 3521
	push	OFFSET $SG121835
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3522
	cmp	DWORD PTR _selectedSessionUnsorted, 0
	jl	SHORT $LN18@SetBestTim
; Line 3524
	push	OFFSET _SessionData+766
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	push	2
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
; Line 3525
	movzx	eax, BYTE PTR _scratch2$[ebp]
	cmp	eax, 68					; 00000044H
	jne	SHORT $LN2@SetBestTim
; Line 3526
	lea	eax, DWORD PTR _scratch2$[ebp+10]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN18@SetBestTim
$LN2@SetBestTim:
; Line 3527
	lea	eax, DWORD PTR _scratch2$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_strcat
	add	esp, 8
$LN18@SetBestTim:
; Line 3531
	push	12					; 0000000cH
	mov	eax, DWORD PTR _hBestTime
	push	eax
	call	_BUTTON_SetTextAlign
	add	esp, 8
; Line 3532
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBestTime
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 3533
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN37@SetBestTim
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 332				; 0000014cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN37@SetBestTim:
	DD	2
	DD	$LN36@SetBestTim
$LN36@SetBestTim:
	DD	-72					; ffffffb8H
	DD	50					; 00000032H
	DD	$LN34@SetBestTim
	DD	-132					; ffffff7cH
	DD	50					; 00000032H
	DD	$LN35@SetBestTim
$LN35@SetBestTim:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	50					; 00000032H
	DB	0
$LN34@SetBestTim:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
	npad	3
$LN38@SetBestTim:
	DD	$LN22@SetBestTim
	DD	$LN23@SetBestTim
	DD	$LN21@SetBestTim
	DD	$LN20@SetBestTim
	DD	$LN24@SetBestTim
$LN33@SetBestTim:
	DB	0
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	2
$LN39@SetBestTim:
	DD	$LN16@SetBestTim
	DD	$LN17@SetBestTim
	DD	$LN15@SetBestTim
	DD	$LN14@SetBestTim
	DD	$LN4@SetBestTim
	DD	$LN9@SetBestTim
	DD	$LN8@SetBestTim
	DD	$LN10@SetBestTim
_SetBestTimeButtonText ENDP
_TEXT	ENDS
PUBLIC	_GetSessionDataString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetSessionDataString
_TEXT	SEGMENT
tv64 = -196						; size = 4
_index$ = 8						; size = 1
_type$ = 12						; size = 4
_pDest$ = 16						; size = 4
_GetSessionDataString PROC				; COMDAT
; Line 3536
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3537
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 0
	je	SHORT $LN4@GetSession@6
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN3@GetSession@6
	cmp	DWORD PTR tv64[ebp], 2
	je	SHORT $LN2@GetSession@6
	jmp	SHORT $LN1@GetSession@6
$LN4@GetSession@6:
; Line 3539
	push	OFFSET _SessionData+766
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _index$[ebp]
	push	ecx
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@GetSession@6
$LN3@GetSession@6:
; Line 3540
	push	OFFSET _SessionData+1366
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _index$[ebp]
	push	ecx
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@GetSession@6
$LN2@GetSession@6:
; Line 3541
	push	OFFSET _SessionData+966
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _index$[ebp]
	push	ecx
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@GetSession@6
$LN1@GetSession@6:
; Line 3543
	push	OFFSET _SessionData+1166
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _index$[ebp]
	push	ecx
	call	_GetStringNumber
	add	esp, 12					; 0000000cH
$LN5@GetSession@6:
; Line 3545
	mov	eax, DWORD PTR _pDest$[ebp]
; Line 3546
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSessionDataString ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetStringNumber
_TEXT	SEGMENT
tv84 = -208						; size = 4
tv77 = -208						; size = 4
_ch$ = -5						; size = 1
_index$ = 8						; size = 1
_pDest$ = 12						; size = 4
_pSource$ = 16						; size = 4
_GetStringNumber PROC					; COMDAT
; Line 3549
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3552
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
; Line 3554
	push	17					; 00000011H
	mov	eax, DWORD PTR _pSource$[ebp]
	push	eax
	push	OFFSET $SG121863
	call	_strncmp
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN9@GetStringN
; Line 3556
	push	OFFSET $SG121864
	mov	eax, DWORD PTR _pDest$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 3557
	jmp	$LN11@GetStringN
$LN9@GetStringN:
; Line 3559
	mov	al, BYTE PTR _index$[ebp]
	sub	al, 1
	mov	BYTE PTR _index$[ebp], al
	movzx	ecx, BYTE PTR _index$[ebp]
	test	ecx, ecx
	je	SHORT $LN4@GetStringN
$LN7@GetStringN:
; Line 3561
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN13@GetStringN
	mov	DWORD PTR tv77[ebp], 1
	jmp	SHORT $LN14@GetStringN
$LN13@GetStringN:
	mov	DWORD PTR tv77[ebp], 0
$LN14@GetStringN:
	cmp	DWORD PTR tv77[ebp], 0
	je	SHORT $LN6@GetStringN
; Line 3562
	movzx	eax, BYTE PTR _ch$[ebp]
	test	eax, eax
	jne	SHORT $LN5@GetStringN
; Line 3563
	jmp	SHORT $LN11@GetStringN
$LN5@GetStringN:
; Line 3564
	jmp	SHORT $LN7@GetStringN
$LN6@GetStringN:
	jmp	SHORT $LN9@GetStringN
$LN4@GetStringN:
; Line 3566
	mov	eax, DWORD PTR _pSource$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _ch$[ebp], cl
	movzx	edx, BYTE PTR _ch$[ebp]
	mov	eax, DWORD PTR _pSource$[ebp]
	add	eax, 1
	mov	DWORD PTR _pSource$[ebp], eax
	cmp	edx, 10					; 0000000aH
	je	SHORT $LN15@GetStringN
	mov	DWORD PTR tv84[ebp], 1
	jmp	SHORT $LN16@GetStringN
$LN15@GetStringN:
	mov	DWORD PTR tv84[ebp], 0
$LN16@GetStringN:
	cmp	DWORD PTR tv84[ebp], 0
	je	SHORT $LN3@GetStringN
; Line 3568
	movzx	eax, BYTE PTR _ch$[ebp]
	test	eax, eax
	jne	SHORT $LN2@GetStringN
; Line 3569
	jmp	SHORT $LN11@GetStringN
	jmp	SHORT $LN1@GetStringN
$LN2@GetStringN:
; Line 3570
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cl, BYTE PTR _ch$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$[ebp], edx
$LN1@GetStringN:
; Line 3571
	jmp	SHORT $LN4@GetStringN
$LN3@GetStringN:
; Line 3573
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	BYTE PTR [eax], 0
$LN11@GetStringN:
; Line 3574
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetStringNumber ENDP
_TEXT	ENDS
PUBLIC	_IncrementDisplayType
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _IncrementDisplayType
_TEXT	SEGMENT
tv65 = -196						; size = 4
_IncrementDisplayType PROC				; COMDAT
; Line 3577
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 3578
	movzx	eax, BYTE PTR _sysData+208
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR tv65[ebp]
	sub	ecx, 65					; 00000041H
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 19			; 00000013H
	ja	SHORT $LN10@IncrementD
	mov	edx, DWORD PTR tv65[ebp]
	movzx	eax, BYTE PTR $LN15@IncrementD[edx]
	jmp	DWORD PTR $LN16@IncrementD[eax*4]
$LN10@IncrementD:
; Line 3583
	mov	al, BYTE PTR _reviewRaceDisplay
	add	al, 1
	mov	BYTE PTR _reviewRaceDisplay, al
	movzx	ecx, BYTE PTR _reviewRaceDisplay
	cmp	DWORD PTR _RoadRaceDisplayTypes[ecx*4], 0
	jne	SHORT $LN9@IncrementD
; Line 3584
	mov	BYTE PTR _reviewRaceDisplay, 0
$LN9@IncrementD:
; Line 3585
	jmp	$LN13@IncrementD
$LN8@IncrementD:
; Line 3587
	mov	al, BYTE PTR _reviewDriveDisplay
	add	al, 1
	mov	BYTE PTR _reviewDriveDisplay, al
	movzx	ecx, BYTE PTR _reviewDriveDisplay
	cmp	DWORD PTR _DriveDisplayTypes[ecx*4], 0
	jne	SHORT $LN7@IncrementD
; Line 3588
	mov	BYTE PTR _reviewDriveDisplay, 0
$LN7@IncrementD:
; Line 3589
	jmp	SHORT $LN13@IncrementD
$LN6@IncrementD:
; Line 3591
	mov	al, BYTE PTR _reviewAutoXDisplay
	add	al, 1
	mov	BYTE PTR _reviewAutoXDisplay, al
	movzx	ecx, BYTE PTR _reviewAutoXDisplay
	cmp	DWORD PTR _AutoXDisplayTypes[ecx*4], 0
	jne	SHORT $LN5@IncrementD
; Line 3592
	mov	BYTE PTR _reviewAutoXDisplay, 0
$LN5@IncrementD:
; Line 3593
	jmp	SHORT $LN13@IncrementD
$LN4@IncrementD:
; Line 3597
	mov	al, BYTE PTR _reviewDragDisplay
	add	al, 1
	mov	BYTE PTR _reviewDragDisplay, al
	movzx	ecx, BYTE PTR _reviewDragDisplay
	cmp	DWORD PTR _DragDisplayTypes[ecx*4], 0
	jne	SHORT $LN3@IncrementD
; Line 3598
	mov	BYTE PTR _reviewDragDisplay, 0
$LN3@IncrementD:
; Line 3599
	jmp	SHORT $LN13@IncrementD
$LN2@IncrementD:
; Line 3601
	mov	al, BYTE PTR _reviewHillDisplay
	add	al, 1
	mov	BYTE PTR _reviewHillDisplay, al
	movzx	ecx, BYTE PTR _reviewHillDisplay
	cmp	DWORD PTR _HillDisplayTypes[ecx*4], 0
	jne	SHORT $LN13@IncrementD
; Line 3602
	mov	BYTE PTR _reviewHillDisplay, 0
$LN13@IncrementD:
; Line 3605
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN16@IncrementD:
	DD	$LN6@IncrementD
	DD	$LN8@IncrementD
	DD	$LN4@IncrementD
	DD	$LN2@IncrementD
	DD	$LN10@IncrementD
$LN15@IncrementD:
	DB	0
	DB	4
	DB	4
	DB	1
	DB	2
	DB	4
	DB	4
	DB	3
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	2
_IncrementDisplayType ENDP
_TEXT	ENDS
END
