; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__GetCursorPos.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__GetCursorPos_pfGetPosX
PUBLIC	_GUI__GetCursorPos_pfGetPosChar
PUBLIC	_GUI__GetCursorPos_pfGetCharacter
_DATA	SEGMENT
_GUI__GetCursorPos_pfGetPosX DD FLAT:__GetCursorPosX
_GUI__GetCursorPos_pfGetPosChar DD FLAT:__GetCursorPosChar
_GUI__GetCursorPos_pfGetCharacter DD FLAT:__GetCursorCharacter
_DATA	ENDS
EXTRN	_GUI_GetCharDistX:PROC
EXTRN	_GUI_UC__GetCharCodeInc:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__getcursorpos.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __GetCursorPosX
_TEXT	SEGMENT
tv65 = -220						; size = 4
_Char$ = -20						; size = 2
_CursorPosX$ = -8					; size = 4
_s$ = 8							; size = 4
_MaxNumChars$ = 12					; size = 4
_Index$ = 16						; size = 4
__GetCursorPosX PROC					; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	DWORD PTR _CursorPosX$[ebp], 0
; Line 50
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	mov	DWORD PTR _MaxNumChars$[ebp], eax
$LN2@GetCursorP:
; Line 51
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	mov	ecx, DWORD PTR _Index$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _Index$[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 0
	je	SHORT $LN1@GetCursorP
; Line 52
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_UC__GetCharCodeInc
	add	esp, 4
	mov	WORD PTR _Char$[ebp], ax
; Line 53
	movzx	eax, WORD PTR _Char$[ebp]
	push	eax
	call	_GUI_GetCharDistX
	add	esp, 4
	add	eax, DWORD PTR _CursorPosX$[ebp]
	mov	DWORD PTR _CursorPosX$[ebp], eax
; Line 54
	jmp	SHORT $LN2@GetCursorP
$LN1@GetCursorP:
; Line 55
	mov	eax, DWORD PTR _CursorPosX$[ebp]
; Line 56
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetCursorPosX ENDP
_TEXT	ENDS
EXTRN	_GUI_UC__NumBytes2NumChars:PROC
EXTRN	_GUI_UC_GetCharSize:PROC
EXTRN	_GUI_UC_GetCharCode:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetCursorPosChar
_TEXT	SEGMENT
_Char$8362 = -32					; size = 2
_p$ = -20						; size = 4
_SizeX$ = -8						; size = 4
_s$ = 8							; size = 4
_MaxNumChars$ = 12					; size = 4
_x$ = 16						; size = 4
__GetCursorPosChar PROC					; COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 63
	mov	DWORD PTR _SizeX$[ebp], 0
; Line 65
	mov	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN4@GetCursorP@2:
; Line 66
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	sub	eax, 1
	mov	DWORD PTR _MaxNumChars$[ebp], eax
	cmp	DWORD PTR _MaxNumChars$[ebp], 0
	jle	SHORT $LN3@GetCursorP@2
; Line 68
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_UC_GetCharCode
	add	esp, 4
	mov	WORD PTR _Char$8362[ebp], ax
; Line 69
	movzx	eax, WORD PTR _Char$8362[ebp]
	push	eax
	call	_GUI_GetCharDistX
	add	esp, 4
	add	eax, DWORD PTR _SizeX$[ebp]
	mov	DWORD PTR _SizeX$[ebp], eax
; Line 70
	movzx	eax, WORD PTR _Char$8362[ebp]
	test	eax, eax
	je	SHORT $LN1@GetCursorP@2
	mov	eax, DWORD PTR _SizeX$[ebp]
	cmp	eax, DWORD PTR _x$[ebp]
	jle	SHORT $LN2@GetCursorP@2
$LN1@GetCursorP@2:
; Line 71
	jmp	SHORT $LN3@GetCursorP@2
$LN2@GetCursorP@2:
; Line 73
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_UC_GetCharSize
	add	esp, 4
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 74
	jmp	SHORT $LN4@GetCursorP@2
$LN3@GetCursorP@2:
; Line 75
	mov	eax, DWORD PTR _s$[ebp]
	sub	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	_GUI_UC__NumBytes2NumChars
	add	esp, 8
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetCursorPosChar ENDP
_TEXT	ENDS
EXTRN	_GUI_pUC_API:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetCursorCharacter
_TEXT	SEGMENT
tv66 = -196						; size = 4
_s$ = 8							; size = 4
_MaxNumChars$ = 12					; size = 4
_Index$ = 16						; size = 4
_pIsRTL$ = 20						; size = 4
__GetCursorCharacter PROC				; COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	mov	eax, DWORD PTR _MaxNumChars$[ebp]
	mov	DWORD PTR _MaxNumChars$[ebp], eax
; Line 84
	cmp	DWORD PTR _pIsRTL$[ebp], 0
	je	SHORT $LN2@GetCursorC
; Line 85
	mov	eax, DWORD PTR _pIsRTL$[ebp]
	mov	DWORD PTR [eax], 0
$LN2@GetCursorC:
; Line 87
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR tv66[ebp], eax
	mov	ecx, DWORD PTR _Index$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _Index$[ebp], ecx
	cmp	DWORD PTR tv66[ebp], 0
	je	SHORT $LN1@GetCursorC
; Line 88
	mov	esi, esp
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_pUC_API
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	add	eax, DWORD PTR _s$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 89
	jmp	SHORT $LN2@GetCursorC
$LN1@GetCursorC:
; Line 90
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_UC_GetCharCode
	add	esp, 4
; Line 91
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetCursorCharacter ENDP
_TEXT	ENDS
PUBLIC	_GUI__GetCursorPosX
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__GetCursorPosX
_TEXT	SEGMENT
_s$ = 8							; size = 4
_Index$ = 12						; size = 4
_MaxNumChars$ = 16					; size = 4
_GUI__GetCursorPosX PROC				; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 126
	mov	esi, esp
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MaxNumChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR _GUI__GetCursorPos_pfGetPosX
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__GetCursorPosX ENDP
_TEXT	ENDS
PUBLIC	_GUI__GetCursorPosChar
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__GetCursorPosChar
_TEXT	SEGMENT
_s$ = 8							; size = 4
_x$ = 12						; size = 4
_MaxNumChars$ = 16					; size = 4
_GUI__GetCursorPosChar PROC				; COMDAT
; Line 141
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 142
	mov	esi, esp
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _MaxNumChars$[ebp]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp]
	push	edx
	call	DWORD PTR _GUI__GetCursorPos_pfGetPosChar
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__GetCursorPosChar ENDP
_TEXT	ENDS
PUBLIC	_GUI__GetCursorCharacter
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__GetCursorCharacter
_TEXT	SEGMENT
_s$ = 8							; size = 4
_Index$ = 12						; size = 4
_MaxNumChars$ = 16					; size = 4
_pIsRTL$ = 20						; size = 4
_GUI__GetCursorCharacter PROC				; COMDAT
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	mov	esi, esp
	mov	eax, DWORD PTR _pIsRTL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Index$[ebp]
	push	ecx
	mov	edx, DWORD PTR _MaxNumChars$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	DWORD PTR _GUI__GetCursorPos_pfGetCharacter
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__GetCursorCharacter ENDP
_TEXT	ENDS
END
