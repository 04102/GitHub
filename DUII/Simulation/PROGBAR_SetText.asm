; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\PROGBAR_SetText.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_PROGBAR_SetText
EXTRN	_GUI_MergeRect:PROC
EXTRN	_GUI__SetText:PROC
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_PROGBAR__GetTextRect:PROC
EXTRN	_PROGBAR__GetTextLocked:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_PROGBAR_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\progbar_settext.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _PROGBAR_SetText
_TEXT	SEGMENT
_hpText$10361 = -76					; size = 4
_pText$10360 = -64					; size = 4
_r2$10359 = -52						; size = 8
_r1$10358 = -36						; size = 8
_pOldFont$10357 = -20					; size = 4
_pObj$10356 = -8					; size = 4
_hObj$ = 8						; size = 4
_s$ = 12						; size = 4
_PROGBAR_SetText PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN5@PROGBAR_Se
; Line 45
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$10356[ebp], eax
; Line 46
	mov	eax, DWORD PTR _pObj$10356[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _hpText$10361[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _pObj$10356[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$10357[ebp], eax
; Line 48
	mov	eax, DWORD PTR _pObj$10356[ebp]
	push	eax
	call	_PROGBAR__GetTextLocked
	add	esp, 4
	mov	DWORD PTR _pText$10360[ebp], eax
; Line 49
	mov	eax, DWORD PTR _pText$10360[ebp]
	push	eax
	lea	ecx, DWORD PTR _r1$10358[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$10356[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
; Line 50
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$10360[ebp], 0
; Line 51
	cmp	DWORD PTR _s$[ebp], 0
	jne	SHORT $LN3@PROGBAR_Se
; Line 52
	mov	eax, DWORD PTR _pObj$10356[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, -3					; fffffffdH
	mov	edx, DWORD PTR _pObj$10356[ebp]
	mov	BYTE PTR [edx+112], cl
; Line 53
	lea	eax, DWORD PTR _r1$10358[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 54
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$10356[ebp], 0
; Line 55
	jmp	$LN2@PROGBAR_Se
$LN3@PROGBAR_Se:
; Line 56
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$10356[ebp], 0
; Line 57
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hpText$10361[ebp]
	push	ecx
	call	_GUI__SetText
	add	esp, 8
	test	eax, eax
	je	SHORT $LN2@PROGBAR_Se
; Line 58
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$10356[ebp], eax
; Line 59
	mov	eax, DWORD PTR _pObj$10356[ebp]
	mov	ecx, DWORD PTR _hpText$10361[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 60
	mov	eax, DWORD PTR _pObj$10356[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	or	ecx, 2
	mov	edx, DWORD PTR _pObj$10356[ebp]
	mov	BYTE PTR [edx+112], cl
; Line 61
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r2$10359[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$10356[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
; Line 62
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$10356[ebp], 0
; Line 63
	lea	eax, DWORD PTR _r2$10359[ebp]
	push	eax
	lea	ecx, DWORD PTR _r1$10358[ebp]
	push	ecx
	lea	edx, DWORD PTR _r1$10358[ebp]
	push	edx
	call	_GUI_MergeRect
	add	esp, 12					; 0000000cH
; Line 64
	lea	eax, DWORD PTR _r1$10358[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN2@PROGBAR_Se:
; Line 67
	mov	eax, DWORD PTR _pOldFont$10357[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
$LN5@PROGBAR_Se:
; Line 70
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@PROGBAR_Se
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@PROGBAR_Se:
	DD	3
	DD	$LN10@PROGBAR_Se
$LN10@PROGBAR_Se:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN7@PROGBAR_Se
	DD	-52					; ffffffccH
	DD	8
	DD	$LN8@PROGBAR_Se
	DD	-76					; ffffffb4H
	DD	4
	DD	$LN9@PROGBAR_Se
$LN9@PROGBAR_Se:
	DB	104					; 00000068H
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN8@PROGBAR_Se:
	DB	114					; 00000072H
	DB	50					; 00000032H
	DB	0
$LN7@PROGBAR_Se:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
_PROGBAR_SetText ENDP
_TEXT	ENDS
END
