; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\WIDGET.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__pEffectDefault
EXTRN	_WIDGET_Effect_3D:BYTE
_DATA	SEGMENT
__pEffectDefault DD FLAT:_WIDGET_Effect_3D
_DATA	ENDS
PUBLIC	_WIDGET__RotateRect90
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\widget.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WIDGET__RotateRect90
_TEXT	SEGMENT
_XSize$ = -32						; size = 4
_x1$ = -20						; size = 4
_x0$ = -8						; size = 4
_pWidget$ = 8						; size = 4
_pDest$ = 12						; size = 4
_pRect$ = 16						; size = 4
_WIDGET__RotateRect90 PROC				; COMDAT
; Line 102
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 104
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x0$[ebp], ecx
; Line 105
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 106
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pWidget$[ebp]
	movsx	eax, WORD PTR [edx]
	sub	ecx, eax
	mov	DWORD PTR _XSize$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _XSize$[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	WORD PTR [eax], dx
; Line 108
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _XSize$[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	WORD PTR [eax+4], dx
; Line 109
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cx, WORD PTR _x0$[ebp]
	mov	WORD PTR [eax+2], cx
; Line 110
	mov	eax, DWORD PTR _pDest$[ebp]
	mov	cx, WORD PTR _x1$[ebp]
	mov	WORD PTR [eax+6], cx
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__RotateRect90 ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetClientRect
EXTRN	_WM_GetClientRect:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetClientRect
_TEXT	SEGMENT
_Rect$12326 = -12					; size = 8
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_WIDGET__GetClientRect PROC				; COMDAT
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 123
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Ge
; Line 125
	lea	eax, DWORD PTR _Rect$12326[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 126
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$12326[ebp+2]
	mov	WORD PTR [eax], cx
; Line 127
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$12326[ebp+6]
	mov	WORD PTR [eax+4], cx
; Line 128
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$12326[ebp]
	mov	WORD PTR [eax+2], cx
; Line 129
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _Rect$12326[ebp+4]
	mov	WORD PTR [eax+6], cx
; Line 130
	jmp	SHORT $LN3@WIDGET__Ge
$LN2@WIDGET__Ge:
; Line 131
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
$LN3@WIDGET__Ge:
; Line 133
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@WIDGET__Ge
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@WIDGET__Ge:
	DD	1
	DD	$LN6@WIDGET__Ge
$LN6@WIDGET__Ge:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@WIDGET__Ge
$LN5@WIDGET__Ge:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_WIDGET__GetClientRect ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetBkColor
EXTRN	_DIALOG_GetBkColor:PROC
EXTRN	_WM_GetBkColor:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetBkColor
_TEXT	SEGMENT
_BkColor$ = -8						; size = 4
_hObj$ = 8						; size = 4
_WIDGET__GetBkColor PROC				; COMDAT
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 140
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	push	eax
	call	_WM_GetBkColor
	add	esp, 4
	mov	DWORD PTR _BkColor$[ebp], eax
; Line 141
	cmp	DWORD PTR _BkColor$[ebp], 268435455	; 0fffffffH
	jne	SHORT $LN1@WIDGET__Ge@2
; Line 142
	call	_DIALOG_GetBkColor
	mov	DWORD PTR _BkColor$[ebp], eax
$LN1@WIDGET__Ge@2:
; Line 144
	mov	eax, DWORD PTR _BkColor$[ebp]
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__GetBkColor ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetInsideRect
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_WM__GetClientRectWin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetInsideRect
_TEXT	SEGMENT
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_WIDGET__GetInsideRect PROC				; COMDAT
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 152
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	push	ecx
	call	_WM__GetClientRectWin
	add	esp, 8
; Line 153
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__GetInsideRect ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetXSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetXSize
_TEXT	SEGMENT
_r$ = -8						; size = 4
_pWidget$ = 8						; size = 4
_WIDGET__GetXSize PROC					; COMDAT
; Line 160
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 162
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Ge@3
; Line 163
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pWidget$[ebp]
	movsx	eax, WORD PTR [edx+2]
	sub	ecx, eax
	mov	DWORD PTR _r$[ebp], ecx
; Line 164
	jmp	SHORT $LN1@WIDGET__Ge@3
$LN2@WIDGET__Ge@3:
; Line 165
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pWidget$[ebp]
	movsx	eax, WORD PTR [edx]
	sub	ecx, eax
	mov	DWORD PTR _r$[ebp], ecx
$LN1@WIDGET__Ge@3:
; Line 167
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 1
; Line 168
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__GetXSize ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetYSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetYSize
_TEXT	SEGMENT
_r$ = -8						; size = 4
_pWidget$ = 8						; size = 4
_WIDGET__GetYSize PROC					; COMDAT
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 176
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Ge@4
; Line 177
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pWidget$[ebp]
	movsx	eax, WORD PTR [edx]
	sub	ecx, eax
	mov	DWORD PTR _r$[ebp], ecx
; Line 178
	jmp	SHORT $LN1@WIDGET__Ge@4
$LN2@WIDGET__Ge@4:
; Line 179
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pWidget$[ebp]
	movsx	eax, WORD PTR [edx+2]
	sub	ecx, eax
	mov	DWORD PTR _r$[ebp], ecx
$LN1@WIDGET__Ge@4:
; Line 181
	mov	eax, DWORD PTR _r$[ebp]
	add	eax, 1
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__GetYSize ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__GetWindowSizeX
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_WM_GetWindowSizeX:PROC
EXTRN	_WM_GetWindowSizeY:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__GetWindowSizeX
_TEXT	SEGMENT
_r$ = -20						; size = 4
_pWidget$ = -8						; size = 4
_hObj$ = 8						; size = 4
_WIDGET__GetWindowSizeX PROC				; COMDAT
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 193
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$[ebp], eax
; Line 194
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Ge@5
; Line 195
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowSizeY
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 196
	jmp	SHORT $LN1@WIDGET__Ge@5
$LN2@WIDGET__Ge@5:
; Line 197
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetWindowSizeX
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
$LN1@WIDGET__Ge@5:
; Line 199
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 200
	mov	eax, DWORD PTR _r$[ebp]
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__GetWindowSizeX ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_SetState
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_SetState
_TEXT	SEGMENT
_pWidget$ = -8						; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_WIDGET_SetState PROC					; COMDAT
; Line 207
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 210
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	cmp	DWORD PTR _State$[ebp], ecx
	je	SHORT $LN1@WIDGET_Set
; Line 212
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	cx, WORD PTR _State$[ebp]
	mov	WORD PTR [eax+54], cx
; Line 213
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@WIDGET_Set:
; Line 215
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 217
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_SetState ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_GetState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_GetState
_TEXT	SEGMENT
_pWidget$ = -20						; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_WIDGET_GetState PROC					; COMDAT
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	DWORD PTR _r$[ebp], 0
; Line 226
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@WIDGET_Get
; Line 228
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$[ebp], eax
; Line 229
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	mov	DWORD PTR _r$[ebp], ecx
; Line 230
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
$LN1@WIDGET_Get:
; Line 233
	mov	eax, DWORD PTR _r$[ebp]
; Line 234
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_GetState ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_OrState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_OrState
_TEXT	SEGMENT
_pWidget$12382 = -8					; size = 4
_hObj$ = 8						; size = 4
_State$ = 12						; size = 4
_WIDGET_OrState PROC					; COMDAT
; Line 240
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 241
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@WIDGET_OrS
; Line 244
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$12382[ebp], eax
; Line 245
	mov	eax, DWORD PTR _pWidget$12382[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, DWORD PTR _State$[ebp]
	cmp	DWORD PTR _State$[ebp], ecx
	je	SHORT $LN1@WIDGET_OrS
; Line 246
	mov	eax, DWORD PTR _pWidget$12382[ebp]
	movzx	ecx, WORD PTR [eax+54]
	or	ecx, DWORD PTR _State$[ebp]
	mov	edx, DWORD PTR _pWidget$12382[ebp]
	mov	WORD PTR [edx+54], cx
; Line 247
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@WIDGET_OrS:
; Line 249
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$12382[ebp], 0
$LN3@WIDGET_OrS:
; Line 252
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_OrState ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_AndState
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_AndState
_TEXT	SEGMENT
_pWidget$12393 = -20					; size = 4
_StateNew$ = -8						; size = 2
_hObj$ = 8						; size = 4
_Mask$ = 12						; size = 4
_WIDGET_AndState PROC					; COMDAT
; Line 265
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 267
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@WIDGET_And
; Line 270
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$12393[ebp], eax
; Line 271
	mov	eax, DWORD PTR _pWidget$12393[ebp]
	movzx	ecx, WORD PTR [eax+54]
	mov	edx, DWORD PTR _Mask$[ebp]
	not	edx
	and	ecx, edx
	mov	WORD PTR _StateNew$[ebp], cx
; Line 272
	mov	eax, DWORD PTR _pWidget$12393[ebp]
	movzx	ecx, WORD PTR [eax+54]
	movzx	edx, WORD PTR _StateNew$[ebp]
	cmp	ecx, edx
	je	SHORT $LN1@WIDGET_And
; Line 273
	mov	eax, DWORD PTR _pWidget$12393[ebp]
	mov	cx, WORD PTR _StateNew$[ebp]
	mov	WORD PTR [eax+54], cx
; Line 274
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN1@WIDGET_And:
; Line 276
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$12393[ebp], 0
$LN3@WIDGET_And:
; Line 279
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_AndState ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__Init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__Init
_TEXT	SEGMENT
_pWidget$ = 8						; size = 4
_Id$ = 12						; size = 4
_State$ = 16						; size = 2
_WIDGET__Init PROC					; COMDAT
; Line 285
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 286
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR __pEffectDefault
	mov	DWORD PTR [eax+48], ecx
; Line 287
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	cx, WORD PTR _State$[ebp]
	mov	WORD PTR [eax+54], cx
; Line 288
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	cx, WORD PTR _Id$[ebp]
	mov	WORD PTR [eax+52], cx
; Line 289
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__Init ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_HandleActive
EXTRN	_WM_NotifyParent:PROC
EXTRN	_WM_BringToTop:PROC
EXTRN	_WM_SetFocus:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_HandleActive
_TEXT	SEGMENT
tv67 = -280						; size = 4
_pState$12431 = -80					; size = 4
_pMsgOrg$12430 = -68					; size = 4
_pInfo$12425 = -56					; size = 4
_pWidget$ = -44						; size = 4
_r$ = -32						; size = 4
_Notification$ = -20					; size = 4
_Diff$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
_WIDGET_HandleActive PROC				; COMDAT
; Line 295
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 298
	mov	DWORD PTR _r$[ebp], 1
; Line 299
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN18@WIDGET_Han
; Line 300
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pWidget$[ebp], eax
; Line 301
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv67[ebp], ecx
	cmp	DWORD PTR tv67[ebp], 22			; 00000016H
	jg	SHORT $LN21@WIDGET_Han
	cmp	DWORD PTR tv67[ebp], 22			; 00000016H
	je	$LN7@WIDGET_Han
	mov	edx, DWORD PTR tv67[ebp]
	sub	edx, 13					; 0000000dH
	mov	DWORD PTR tv67[ebp], edx
	cmp	DWORD PTR tv67[ebp], 8
	ja	$LN16@WIDGET_Han
	mov	eax, DWORD PTR tv67[ebp]
	jmp	DWORD PTR $LN22@WIDGET_Han[eax*4]
$LN21@WIDGET_Han:
	cmp	DWORD PTR tv67[ebp], 30			; 0000001eH
	je	$LN6@WIDGET_Han
	cmp	DWORD PTR tv67[ebp], 31			; 0000001fH
	je	$LN3@WIDGET_Han
	cmp	DWORD PTR tv67[ebp], 768		; 00000300H
	je	SHORT $LN15@WIDGET_Han
	jmp	$LN16@WIDGET_Han
$LN15@WIDGET_Han:
; Line 303
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Diff$[ebp], edx
; Line 304
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+48], edx
; Line 305
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _Diff$[ebp]
	sub	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Diff$[ebp], edx
; Line 306
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 307
	mov	eax, DWORD PTR _Diff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__UpdateChildPostions
	add	esp, 8
; Line 308
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 309
	mov	DWORD PTR _r$[ebp], 0
; Line 310
	jmp	$LN16@WIDGET_Han
$LN14@WIDGET_Han:
; Line 312
	mov	eax, DWORD PTR _pWidget$[ebp]
	movsx	ecx, WORD PTR [eax+52]
	mov	edx, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 313
	mov	DWORD PTR _r$[ebp], 0
; Line 314
	jmp	$LN16@WIDGET_Han
$LN13@WIDGET_Han:
; Line 316
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 16					; 00000010H
	je	SHORT $LN12@WIDGET_Han
; Line 317
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pInfo$12425[ebp], ecx
; Line 318
	mov	eax, DWORD PTR _pInfo$12425[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN12@WIDGET_Han
; Line 319
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 320
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
$LN12@WIDGET_Han:
; Line 323
	jmp	$LN16@WIDGET_Han
$LN10@WIDGET_Han:
; Line 331
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pMsgOrg$12430[ebp], ecx
; Line 332
	mov	eax, DWORD PTR _pMsgOrg$12430[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$12431[ebp], ecx
; Line 333
	cmp	DWORD PTR _pState$12431[ebp], 0
	je	SHORT $LN9@WIDGET_Han
; Line 334
	mov	eax, DWORD PTR _pState$12431[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN9@WIDGET_Han
; Line 335
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 336
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_BringToTop
	add	esp, 4
; Line 337
	mov	DWORD PTR _r$[ebp], 0
$LN9@WIDGET_Han:
; Line 341
	jmp	$LN16@WIDGET_Han
$LN7@WIDGET_Han:
; Line 343
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+52], dx
; Line 344
	mov	DWORD PTR _r$[ebp], 0
; Line 345
	jmp	$LN16@WIDGET_Han
$LN6@WIDGET_Han:
; Line 347
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN5@WIDGET_Han
; Line 348
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	or	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET_SetState
	add	esp, 8
; Line 349
	mov	DWORD PTR _Notification$[ebp], 8
; Line 350
	jmp	SHORT $LN4@WIDGET_Han
$LN5@WIDGET_Han:
; Line 351
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, -2					; fffffffeH
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET_SetState
	add	esp, 8
; Line 352
	mov	DWORD PTR _Notification$[ebp], 9
$LN4@WIDGET_Han:
; Line 354
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
; Line 355
	mov	eax, DWORD PTR _Notification$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_NotifyParent
	add	esp, 8
; Line 356
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [eax+12], 0
; Line 357
	mov	DWORD PTR _r$[ebp], 0
; Line 358
	jmp	SHORT $LN16@WIDGET_Han
$LN3@WIDGET_Han:
; Line 360
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 16					; 00000010H
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	edx, DWORD PTR _pMsg$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 361
	mov	DWORD PTR _r$[ebp], 0
; Line 362
	jmp	SHORT $LN16@WIDGET_Han
$LN2@WIDGET_Han:
; Line 364
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__GetInsideRect
	add	esp, 8
; Line 365
	mov	DWORD PTR _r$[ebp], 0
$LN16@WIDGET_Han:
; Line 368
	cmp	DWORD PTR _pWidget$[ebp], 0
	je	SHORT $LN18@WIDGET_Han
; Line 369
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pWidget$[ebp], 0
$LN18@WIDGET_Han:
; Line 372
	mov	eax, DWORD PTR _r$[ebp]
; Line 373
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN22@WIDGET_Han:
	DD	$LN10@WIDGET_Han
	DD	$LN16@WIDGET_Han
	DD	$LN16@WIDGET_Han
	DD	$LN16@WIDGET_Han
	DD	$LN13@WIDGET_Han
	DD	$LN16@WIDGET_Han
	DD	$LN16@WIDGET_Han
	DD	$LN2@WIDGET_Han
	DD	$LN14@WIDGET_Han
_WIDGET_HandleActive ENDP
_TEXT	ENDS
EXTRN	_WM__UpdateChildPositions:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __UpdateChildPostions
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Diff$ = 12						; size = 4
__UpdateChildPostions PROC				; COMDAT
; Line 52
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 55
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _Diff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Diff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Diff$[ebp]
	neg	edx
	push	edx
	mov	eax, DWORD PTR _Diff$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WM__UpdateChildPositions
	add	esp, 20					; 00000014H
; Line 57
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__UpdateChildPostions ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__SetScrollState
EXTRN	_WM_SetScrollState:PROC
EXTRN	_WM_GetDialogItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__SetScrollState
_TEXT	SEGMENT
_hScroll$ = -8						; size = 4
_hWin$ = 8						; size = 4
_pVState$ = 12						; size = 4
_pHState$ = 16						; size = 4
_WIDGET__SetScrollState PROC				; COMDAT
; Line 379
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 382
	push	254					; 000000feH
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 383
	mov	eax, DWORD PTR _pVState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_WM_SetScrollState
	add	esp, 8
; Line 385
	push	255					; 000000ffH
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 386
	mov	eax, DWORD PTR _pHState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_WM_SetScrollState
	add	esp, 8
; Line 387
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__SetScrollState ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__DrawFocusRect
EXTRN	_GUI_DrawFocusRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__DrawFocusRect
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_Dist$ = 16						; size = 4
_WIDGET__DrawFocusRect PROC				; COMDAT
; Line 393
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 395
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN1@WIDGET__Dr
; Line 396
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 397
	lea	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
$LN1@WIDGET__Dr:
; Line 399
	mov	eax, DWORD PTR _Dist$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	call	_GUI_DrawFocusRect
	add	esp, 8
; Line 400
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@WIDGET__Dr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@WIDGET__Dr:
	DD	1
	DD	$LN5@WIDGET__Dr
$LN5@WIDGET__Dr:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@WIDGET__Dr
$LN4@WIDGET__Dr:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_WIDGET__DrawFocusRect ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__DrawVLine
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_DrawHLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__DrawVLine
_TEXT	SEGMENT
_r1$12475 = -28						; size = 8
_r0$12474 = -12						; size = 8
_pWidget$ = 8						; size = 4
_x$ = 12						; size = 4
_y0$ = 16						; size = 4
_y1$ = 20						; size = 4
_WIDGET__DrawVLine PROC					; COMDAT
; Line 406
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 407
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Dr@2
; Line 409
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _r0$12474[ebp], ax
; Line 410
	mov	ax, WORD PTR _x$[ebp]
	mov	WORD PTR _r0$12474[ebp+4], ax
; Line 411
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _r0$12474[ebp+2], ax
; Line 412
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _r0$12474[ebp+6], ax
; Line 413
	lea	eax, DWORD PTR _r0$12474[ebp]
	push	eax
	lea	ecx, DWORD PTR _r1$12475[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 414
	movsx	eax, WORD PTR _r1$12475[ebp+4]
	push	eax
	movsx	ecx, WORD PTR _r1$12475[ebp]
	push	ecx
	movsx	edx, WORD PTR _r1$12475[ebp+2]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 415
	jmp	SHORT $LN3@WIDGET__Dr@2
$LN2@WIDGET__Dr@2:
; Line 416
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN3@WIDGET__Dr@2:
; Line 418
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@WIDGET__Dr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@WIDGET__Dr@2:
	DD	2
	DD	$LN7@WIDGET__Dr@2
$LN7@WIDGET__Dr@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@WIDGET__Dr@2
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN6@WIDGET__Dr@2
$LN6@WIDGET__Dr@2:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN5@WIDGET__Dr@2:
	DB	114					; 00000072H
	DB	48					; 00000030H
	DB	0
_WIDGET__DrawVLine ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__DrawHLine
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__DrawHLine
_TEXT	SEGMENT
_r1$ = -28						; size = 8
_r0$ = -12						; size = 8
_pWidget$ = 8						; size = 4
_y$ = 12						; size = 4
_x0$ = 16						; size = 4
_x1$ = 20						; size = 4
_WIDGET__DrawHLine PROC					; COMDAT
; Line 424
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 427
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__Dr@3
; Line 428
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _r0$[ebp], ax
; Line 429
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _r0$[ebp+4], ax
; Line 430
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _r0$[ebp+2], ax
; Line 431
	mov	ax, WORD PTR _y$[ebp]
	mov	WORD PTR _r0$[ebp+6], ax
; Line 432
	lea	eax, DWORD PTR _r0$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 433
	movsx	eax, WORD PTR _r1$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _r1$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _r1$[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 434
	jmp	SHORT $LN3@WIDGET__Dr@3
$LN2@WIDGET__Dr@3:
; Line 435
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
$LN3@WIDGET__Dr@3:
; Line 437
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@WIDGET__Dr@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@WIDGET__Dr@3:
	DD	2
	DD	$LN7@WIDGET__Dr@3
$LN7@WIDGET__Dr@3:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@WIDGET__Dr@3
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN6@WIDGET__Dr@3
$LN6@WIDGET__Dr@3:
	DB	114					; 00000072H
	DB	49					; 00000031H
	DB	0
$LN5@WIDGET__Dr@3:
	DB	114					; 00000072H
	DB	48					; 00000030H
	DB	0
_WIDGET__DrawHLine ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__FillRectEx
EXTRN	_GUI_FillRectEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__FillRectEx
_TEXT	SEGMENT
_r$ = -12						; size = 8
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_WIDGET__FillRectEx PROC				; COMDAT
; Line 443
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 445
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN1@WIDGET__Fi
; Line 446
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 447
	lea	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
$LN1@WIDGET__Fi:
; Line 449
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_GUI_FillRectEx
	add	esp, 4
; Line 450
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@WIDGET__Fi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@WIDGET__Fi:
	DD	1
	DD	$LN5@WIDGET__Fi
$LN5@WIDGET__Fi:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@WIDGET__Fi
$LN4@WIDGET__Fi:
	DB	114					; 00000072H
	DB	0
_WIDGET__FillRectEx ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__DrawTriangle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__DrawTriangle
_TEXT	SEGMENT
_pWidget$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_Size$ = 20						; size = 4
_Inc$ = 24						; size = 4
_WIDGET__DrawTriangle PROC				; COMDAT
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 457
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN8@WIDGET__Dr@4
	jmp	SHORT $LN7@WIDGET__Dr@4
$LN6@WIDGET__Dr@4:
; Line 458
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Size$[ebp], eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR _Inc$[ebp]
	mov	DWORD PTR _x$[ebp], ecx
$LN7@WIDGET__Dr@4:
	cmp	DWORD PTR _Size$[ebp], 0
	jl	SHORT $LN5@WIDGET__Dr@4
; Line 459
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 460
	jmp	SHORT $LN6@WIDGET__Dr@4
$LN5@WIDGET__Dr@4:
; Line 461
	jmp	SHORT $LN9@WIDGET__Dr@4
$LN8@WIDGET__Dr@4:
; Line 462
	jmp	SHORT $LN3@WIDGET__Dr@4
$LN2@WIDGET__Dr@4:
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Size$[ebp], eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, DWORD PTR _Inc$[ebp]
	mov	DWORD PTR _x$[ebp], ecx
$LN3@WIDGET__Dr@4:
	cmp	DWORD PTR _Size$[ebp], 0
	jl	SHORT $LN9@WIDGET__Dr@4
; Line 463
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
; Line 464
	jmp	SHORT $LN2@WIDGET__Dr@4
$LN9@WIDGET__Dr@4:
; Line 466
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__DrawTriangle ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__EFFECT_DrawDownRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__EFFECT_DrawDownRect
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_WIDGET__EFFECT_DrawDownRect PROC			; COMDAT
; Line 472
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 474
	cmp	DWORD PTR _pRect$[ebp], 0
	jne	SHORT $LN3@WIDGET__EF
; Line 475
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 476
	lea	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
$LN3@WIDGET__EF:
; Line 478
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__EF
; Line 479
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 480
	lea	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
$LN2@WIDGET__EF:
; Line 482
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	push	ecx
	call	__EffectRequiresRedraw
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@WIDGET__EF
; Line 483
	mov	esi, esp
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@WIDGET__EF:
; Line 485
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@WIDGET__EF
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@WIDGET__EF:
	DD	1
	DD	$LN7@WIDGET__EF
$LN7@WIDGET__EF:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN6@WIDGET__EF
$LN6@WIDGET__EF:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_WIDGET__EFFECT_DrawDownRect ENDP
_TEXT	ENDS
EXTRN	_WM__Screen2Client:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __EffectRequiresRedraw
_TEXT	SEGMENT
_InvalidRect$ = -24					; size = 8
_EffectSize$ = -8					; size = 4
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
__EffectRequiresRedraw PROC				; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 74
	mov	eax, DWORD PTR _pWidget$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _InvalidRect$[ebp], ecx
	mov	DWORD PTR _InvalidRect$[ebp+4], edx
; Line 75
	lea	eax, DWORD PTR _InvalidRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	push	ecx
	call	_WM__Screen2Client
	add	esp, 8
; Line 77
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	add	ecx, DWORD PTR _EffectSize$[ebp]
	movsx	edx, WORD PTR _InvalidRect$[ebp]
	cmp	ecx, edx
	jle	SHORT $LN4@EffectRequ
; Line 78
	mov	eax, 1
	jmp	SHORT $LN5@EffectRequ
$LN4@EffectRequ:
; Line 80
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	sub	ecx, DWORD PTR _EffectSize$[ebp]
	movsx	edx, WORD PTR _InvalidRect$[ebp+4]
	cmp	ecx, edx
	jge	SHORT $LN3@EffectRequ
; Line 81
	mov	eax, 1
	jmp	SHORT $LN5@EffectRequ
$LN3@EffectRequ:
; Line 83
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	add	ecx, DWORD PTR _EffectSize$[ebp]
	movsx	edx, WORD PTR _InvalidRect$[ebp+2]
	cmp	ecx, edx
	jle	SHORT $LN2@EffectRequ
; Line 84
	mov	eax, 1
	jmp	SHORT $LN5@EffectRequ
$LN2@EffectRequ:
; Line 86
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _EffectSize$[ebp]
	movsx	edx, WORD PTR _InvalidRect$[ebp+6]
	cmp	ecx, edx
	jge	SHORT $LN1@EffectRequ
; Line 87
	mov	eax, 1
	jmp	SHORT $LN5@EffectRequ
$LN1@EffectRequ:
; Line 89
	xor	eax, eax
$LN5@EffectRequ:
; Line 90
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@EffectRequ
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@EffectRequ:
	DD	1
	DD	$LN8@EffectRequ
$LN8@EffectRequ:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@EffectRequ
$LN7@EffectRequ:
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	118					; 00000076H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__EffectRequiresRedraw ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__EFFECT_DrawDown
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__EFFECT_DrawDown
_TEXT	SEGMENT
_pWidget$ = 8						; size = 4
_WIDGET__EFFECT_DrawDown PROC				; COMDAT
; Line 491
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 492
	push	0
	mov	eax, DWORD PTR _pWidget$[ebp]
	push	eax
	call	_WIDGET__EFFECT_DrawDownRect
	add	esp, 8
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET__EFFECT_DrawDown ENDP
_TEXT	ENDS
PUBLIC	_WIDGET__EFFECT_DrawUpRect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET__EFFECT_DrawUpRect
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_pWidget$ = 8						; size = 4
_pRect$ = 12						; size = 4
_WIDGET__EFFECT_DrawUpRect PROC				; COMDAT
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 501
	mov	eax, DWORD PTR _pWidget$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN2@WIDGET__EF@2
; Line 502
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWidget$[ebp]
	push	edx
	call	_WIDGET__RotateRect90
	add	esp, 12					; 0000000cH
; Line 503
	lea	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _pRect$[ebp], eax
$LN2@WIDGET__EF@2:
; Line 505
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	push	ecx
	call	__EffectRequiresRedraw
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@WIDGET__EF@2
; Line 506
	mov	esi, esp
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@WIDGET__EF@2:
; Line 508
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@WIDGET__EF@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@WIDGET__EF@2:
	DD	1
	DD	$LN6@WIDGET__EF@2
$LN6@WIDGET__EF@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN5@WIDGET__EF@2
$LN5@WIDGET__EF@2:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_WIDGET__EFFECT_DrawUpRect ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_SetDefaultEffect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_SetDefaultEffect
_TEXT	SEGMENT
_r$ = -8						; size = 4
_pEffect$ = 8						; size = 4
_WIDGET_SetDefaultEffect PROC				; COMDAT
; Line 514
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 516
	mov	eax, DWORD PTR __pEffectDefault
	mov	DWORD PTR _r$[ebp], eax
; Line 517
	mov	eax, DWORD PTR _pEffect$[ebp]
	mov	DWORD PTR __pEffectDefault, eax
; Line 518
	mov	eax, DWORD PTR _r$[ebp]
; Line 519
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_SetDefaultEffect ENDP
_TEXT	ENDS
PUBLIC	_WIDGET_GetDefaultEffect
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WIDGET_GetDefaultEffect
_TEXT	SEGMENT
_WIDGET_GetDefaultEffect PROC				; COMDAT
; Line 525
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 526
	mov	eax, DWORD PTR __pEffectDefault
; Line 527
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WIDGET_GetDefaultEffect ENDP
_TEXT	ENDS
END
