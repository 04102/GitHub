; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Timer.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	__hActiveTimer:DWORD
COMM	__hFirstTimer:DWORD
_DATA	ENDS
PUBLIC	_GUI_TIMER__IsActive
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_timer.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_TIMER__IsActive
_TEXT	SEGMENT
_r$ = -8						; size = 4
_GUI_TIMER__IsActive PROC				; COMDAT
; Line 163
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 165
	mov	DWORD PTR _r$[ebp], 0
; Line 167
	cmp	DWORD PTR __hFirstTimer, 0
	je	SHORT $LN1@GUI_TIMER_
; Line 168
	mov	DWORD PTR _r$[ebp], 1
$LN1@GUI_TIMER_:
; Line 171
	mov	eax, DWORD PTR _r$[ebp]
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER__IsActive ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER__GetPeriod
EXTRN	_GUI_GetTime:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER__GetPeriod
_TEXT	SEGMENT
_pTimer$8394 = -32					; size = 4
_t$8393 = -20						; size = 4
_r$ = -8						; size = 4
_GUI_TIMER__GetPeriod PROC				; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 180
	mov	DWORD PTR _r$[ebp], 0
; Line 182
	cmp	DWORD PTR __hFirstTimer, 0
	je	SHORT $LN2@GUI_TIMER_@2
; Line 184
	mov	eax, DWORD PTR __hFirstTimer
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$8394[ebp], eax
; Line 185
	call	_GUI_GetTime
	mov	DWORD PTR _t$8393[ebp], eax
; Line 186
	mov	eax, DWORD PTR _pTimer$8394[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _t$8393[ebp]
	mov	DWORD PTR _r$[ebp], ecx
; Line 187
	jns	SHORT $LN2@GUI_TIMER_@2
; Line 188
	mov	DWORD PTR _r$[ebp], 0
$LN2@GUI_TIMER_@2:
; Line 192
	mov	eax, DWORD PTR _r$[ebp]
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER__GetPeriod ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER__GetNextTimer
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER__GetNextTimer
_TEXT	SEGMENT
_pTimer$ = -8						; size = 4
_hTimer$ = 8						; size = 4
_pContext$ = 12						; size = 4
_GUI_TIMER__GetNextTimer PROC				; COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 202
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax], 0
; Line 203
	cmp	DWORD PTR _hTimer$[ebp], 0
	jne	SHORT $LN4@GUI_TIMER_@3
; Line 204
	mov	eax, DWORD PTR __hFirstTimer
	mov	DWORD PTR _hTimer$[ebp], eax
; Line 205
	cmp	DWORD PTR _hTimer$[ebp], 0
	je	SHORT $LN3@GUI_TIMER_@3
; Line 206
	mov	eax, DWORD PTR _hTimer$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pTimer$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
$LN3@GUI_TIMER_@3:
; Line 209
	jmp	SHORT $LN2@GUI_TIMER_@3
$LN4@GUI_TIMER_@3:
; Line 210
	mov	eax, DWORD PTR _hTimer$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hTimer$[ebp], ecx
; Line 212
	cmp	DWORD PTR _hTimer$[ebp], 0
	je	SHORT $LN2@GUI_TIMER_@3
; Line 213
	mov	eax, DWORD PTR _hTimer$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$[ebp], eax
; Line 214
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _pTimer$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax], edx
$LN2@GUI_TIMER_@3:
; Line 217
	mov	eax, DWORD PTR _hTimer$[ebp]
; Line 218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER__GetNextTimer ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_Exec
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_Exec
_TEXT	SEGMENT
_tm$8420 = -48						; size = 8
_pTimer$8417 = -32					; size = 4
_t$8416 = -20						; size = 4
_r$ = -8						; size = 4
_GUI_TIMER_Exec PROC					; COMDAT
; Line 230
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 232
	mov	DWORD PTR _r$[ebp], 0
$LN4@GUI_TIMER_@4:
; Line 234
	cmp	DWORD PTR __hFirstTimer, 0
	je	SHORT $LN3@GUI_TIMER_@4
; Line 236
	mov	eax, DWORD PTR __hFirstTimer
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$8417[ebp], eax
; Line 237
	call	_GUI_GetTime
	mov	DWORD PTR _t$8416[ebp], eax
; Line 238
	mov	eax, DWORD PTR _pTimer$8417[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, DWORD PTR _t$8416[ebp]
	test	ecx, ecx
	jg	SHORT $LN2@GUI_TIMER_@4
; Line 240
	mov	eax, DWORD PTR _t$8416[ebp]
	mov	DWORD PTR _tm$8420[ebp], eax
; Line 241
	mov	eax, DWORD PTR _pTimer$8417[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _tm$8420[ebp+4], ecx
; Line 242
	mov	eax, DWORD PTR __hFirstTimer
	mov	DWORD PTR __hActiveTimer, eax
; Line 243
	mov	eax, DWORD PTR _pTimer$8417[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __hFirstTimer, ecx
; Line 244
	mov	esi, esp
	lea	eax, DWORD PTR _tm$8420[ebp]
	push	eax
	mov	ecx, DWORD PTR _pTimer$8417[ebp]
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 245
	mov	DWORD PTR _r$[ebp], 1
; Line 246
	jmp	SHORT $LN1@GUI_TIMER_@4
$LN2@GUI_TIMER_@4:
; Line 247
	jmp	SHORT $LN3@GUI_TIMER_@4
$LN1@GUI_TIMER_@4:
; Line 249
	jmp	SHORT $LN4@GUI_TIMER_@4
$LN3@GUI_TIMER_@4:
; Line 251
	mov	eax, DWORD PTR _r$[ebp]
; Line 252
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_TIMER_@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GUI_TIMER_@4:
	DD	1
	DD	$LN8@GUI_TIMER_@4
$LN8@GUI_TIMER_@4:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN7@GUI_TIMER_@4
$LN7@GUI_TIMER_@4:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	0
_GUI_TIMER_Exec ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_Create
EXTRN	_GUI_pfTimerExec:DWORD
EXTRN	_GUI_ALLOC_AllocZero:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_Create
_TEXT	SEGMENT
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_cb$ = 8						; size = 4
_Time$ = 12						; size = 4
_Context$ = 16						; size = 4
_Flags$ = 20						; size = 4
_GUI_TIMER_Create PROC					; COMDAT
; Line 258
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 262
	mov	eax, DWORD PTR _Flags$[ebp]
	mov	DWORD PTR _Flags$[ebp], eax
; Line 264
	push	24					; 00000018H
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hObj$[ebp], eax
; Line 265
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@GUI_TIMER_@5
; Line 266
	mov	DWORD PTR _GUI_pfTimerExec, OFFSET _GUI_TIMER_Exec
; Line 267
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 270
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Time$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 271
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _cb$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 272
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Context$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 274
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Link
	add	esp, 4
$LN1@GUI_TIMER_@5:
; Line 277
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 278
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_Create ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Link
_TEXT	SEGMENT
_hTimer$8376 = -68					; size = 4
_pFirstTimer$8372 = -56					; size = 4
_hNext$ = -44						; size = 4
_pNext$ = -32						; size = 4
_pTimer$ = -20						; size = 4
_pNew$ = -8						; size = 4
_hNew$ = 8						; size = 4
__Link	PROC						; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 116
	mov	eax, DWORD PTR _hNew$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pNew$[ebp], eax
; Line 117
	cmp	DWORD PTR __hFirstTimer, 0
	jne	SHORT $LN9@Link
; Line 118
	mov	eax, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR __hFirstTimer, eax
; Line 119
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	DWORD PTR [eax+4], 0
; Line 120
	jmp	$LN10@Link
$LN9@Link:
; Line 121
	mov	eax, DWORD PTR __hFirstTimer
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pFirstTimer$8372[ebp], eax
; Line 123
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR _pFirstTimer$8372[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+16]
	test	edx, edx
	jg	SHORT $LN7@Link
; Line 124
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR __hFirstTimer
	mov	DWORD PTR [eax+4], ecx
; Line 125
	mov	eax, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR __hFirstTimer, eax
; Line 126
	jmp	$LN10@Link
; Line 127
	jmp	SHORT $LN10@Link
$LN7@Link:
; Line 128
	mov	eax, DWORD PTR __hFirstTimer
	mov	DWORD PTR _hTimer$8376[ebp], eax
$LN5@Link:
; Line 131
	mov	eax, DWORD PTR _hTimer$8376[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hNext$[ebp], ecx
; Line 133
	cmp	DWORD PTR _hNext$[ebp], 0
	jne	SHORT $LN2@Link
; Line 134
	jmp	SHORT $Append$8382
$LN2@Link:
; Line 136
	mov	eax, DWORD PTR _hNext$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pNext$[ebp], eax
; Line 137
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR _pNext$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+16]
	test	edx, edx
	jg	SHORT $LN1@Link
; Line 138
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR _hNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 139
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 140
	jmp	SHORT $LN10@Link
$LN1@Link:
; Line 142
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hTimer$8376[ebp], ecx
; Line 143
	mov	eax, 1
	test	eax, eax
	jne	SHORT $LN5@Link
$Append$8382:
; Line 146
	mov	eax, DWORD PTR _pNew$[ebp]
	mov	ecx, DWORD PTR _hNext$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 147
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR _hNew$[ebp]
	mov	DWORD PTR [eax+4], ecx
$LN10@Link:
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Link	ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_Delete
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_Delete
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_GUI_TIMER_Delete PROC					; COMDAT
; Line 284
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 287
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Unlink
	add	esp, 4
; Line 288
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
; Line 290
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_Delete ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Unlink
_TEXT	SEGMENT
_hi$ = -32						; size = 4
_pi$ = -20						; size = 4
_pTimer$ = -8						; size = 4
_hTimer$ = 8						; size = 4
__Unlink PROC						; COMDAT
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	mov	eax, DWORD PTR _hTimer$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pTimer$[ebp], eax
; Line 85
	mov	eax, DWORD PTR __hFirstTimer
	cmp	eax, DWORD PTR _hTimer$[ebp]
	jne	SHORT $LN4@Unlink
; Line 86
	mov	eax, DWORD PTR _pTimer$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __hFirstTimer, ecx
; Line 87
	jmp	SHORT $LN5@Unlink
$LN4@Unlink:
; Line 89
	mov	eax, DWORD PTR __hFirstTimer
	mov	DWORD PTR _hi$[ebp], eax
$LN3@Unlink:
; Line 91
	cmp	DWORD PTR _hi$[ebp], 0
	je	SHORT $LN5@Unlink
; Line 93
	mov	eax, DWORD PTR _hi$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pi$[ebp], eax
; Line 94
	mov	eax, DWORD PTR _pi$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	cmp	ecx, DWORD PTR _hTimer$[ebp]
	jne	SHORT $LN1@Unlink
; Line 95
	mov	eax, DWORD PTR _pi$[ebp]
	mov	ecx, DWORD PTR _pTimer$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 96
	jmp	SHORT $LN5@Unlink
$LN1@Unlink:
; Line 98
	mov	eax, DWORD PTR _pi$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hi$[ebp], ecx
; Line 99
	jmp	SHORT $LN3@Unlink
$LN5@Unlink:
; Line 100
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Unlink ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_SetPeriod
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_SetPeriod
_TEXT	SEGMENT
_pObj$8444 = -8						; size = 4
_hObj$ = 8						; size = 4
_Period$ = 12						; size = 4
_GUI_TIMER_SetPeriod PROC				; COMDAT
; Line 296
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 298
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pObj$8444[ebp], eax
; Line 299
	mov	eax, DWORD PTR _pObj$8444[ebp]
	mov	ecx, DWORD PTR _Period$[ebp]
	mov	DWORD PTR [eax+20], ecx
; Line 301
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_SetPeriod ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_SetTime
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_SetTime
_TEXT	SEGMENT
_pObj$8451 = -8						; size = 4
_hObj$ = 8						; size = 4
_Time$ = 12						; size = 4
_GUI_TIMER_SetTime PROC					; COMDAT
; Line 307
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 309
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pObj$8451[ebp], eax
; Line 310
	mov	eax, DWORD PTR _pObj$8451[ebp]
	mov	ecx, DWORD PTR _Time$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 313
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_SetTime ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_SetDelay
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_SetDelay
_TEXT	SEGMENT
_pObj$8458 = -8						; size = 4
_hObj$ = 8						; size = 4
_Delay$ = 12						; size = 4
_GUI_TIMER_SetDelay PROC				; COMDAT
; Line 319
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 321
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pObj$8458[ebp], eax
; Line 322
	mov	eax, DWORD PTR _pObj$8458[ebp]
	mov	ecx, DWORD PTR _Delay$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 323
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Unlink
	add	esp, 4
; Line 324
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Link
	add	esp, 4
; Line 326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_SetDelay ENDP
_TEXT	ENDS
PUBLIC	_GUI_TIMER_Restart
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_TIMER_Restart
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_GUI_TIMER_Restart PROC					; COMDAT
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 335
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN1@GUI_TIMER_@6
; Line 336
	mov	eax, DWORD PTR __hActiveTimer
	mov	DWORD PTR _hObj$[ebp], eax
$LN1@GUI_TIMER_@6:
; Line 338
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 339
	call	_GUI_GetTime
	mov	ecx, DWORD PTR _pObj$[ebp]
	add	eax, DWORD PTR [ecx+20]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+16], eax
; Line 341
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Unlink
	add	esp, 4
; Line 342
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Link
	add	esp, 4
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_TIMER_Restart ENDP
_TEXT	ENDS
END
