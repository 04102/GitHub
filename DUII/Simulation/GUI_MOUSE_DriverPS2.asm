; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_MOUSE_DriverPS2.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
__ScreenX DD	01H DUP (?)
__ScreenY DD	01H DUP (?)
__NumBytesInBuffer DD 01H DUP (?)
__Buttons DB	01H DUP (?)
_BSS	ENDS
PUBLIC	_GUI_MOUSE_DRIVER_PS2_OnRx
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
_BSS	SEGMENT
	ALIGN	4

__abInBuffer DB	03H DUP (?)
_BSS	ENDS
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_mouse_driverps2.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MOUSE_DRIVER_PS2_OnRx
_TEXT	SEGMENT
_Data$ = 8						; size = 1
_GUI_MOUSE_DRIVER_PS2_OnRx PROC				; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 113
	cmp	DWORD PTR __NumBytesInBuffer, 0
	jne	SHORT $LN4@GUI_MOUSE_
; Line 115
	movzx	eax, BYTE PTR _Data$[ebp]
	and	eax, 12					; 0000000cH
	cmp	eax, 8
	jne	SHORT $LN3@GUI_MOUSE_
; Line 116
	mov	al, BYTE PTR _Data$[ebp]
	mov	BYTE PTR __abInBuffer, al
; Line 117
	mov	eax, DWORD PTR __NumBytesInBuffer
	add	eax, 1
	mov	DWORD PTR __NumBytesInBuffer, eax
$LN3@GUI_MOUSE_:
; Line 119
	jmp	SHORT $LN5@GUI_MOUSE_
$LN4@GUI_MOUSE_:
; Line 120
	mov	eax, DWORD PTR __NumBytesInBuffer
	mov	cl, BYTE PTR _Data$[ebp]
	mov	BYTE PTR __abInBuffer[eax], cl
; Line 121
	mov	eax, DWORD PTR __NumBytesInBuffer
	add	eax, 1
	mov	DWORD PTR __NumBytesInBuffer, eax
; Line 122
	cmp	DWORD PTR __NumBytesInBuffer, 3
	jl	SHORT $LN5@GUI_MOUSE_
; Line 123
	call	__EvaPacket
; Line 124
	mov	DWORD PTR __NumBytesInBuffer, 0
$LN5@GUI_MOUSE_:
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MOUSE_DRIVER_PS2_OnRx ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_GUI_MOUSE_StoreState:PROC
EXTRN	_LCD_GetYSize:PROC
EXTRN	_LCD_GetXSize:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __EvaPacket
_TEXT	SEGMENT
_State$ = -56						; size = 12
_ySize$ = -36						; size = 4
_xSize$ = -24						; size = 4
_a$ = -9						; size = 1
__$ArrayPad$ = -4					; size = 4
__EvaPacket PROC					; COMDAT
; Line 57
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 61
	call	_LCD_GetXSize
	mov	DWORD PTR _xSize$[ebp], eax
; Line 62
	call	_LCD_GetYSize
	mov	DWORD PTR _ySize$[ebp], eax
; Line 63
	movzx	eax, BYTE PTR __abInBuffer
	and	eax, 3
	mov	BYTE PTR __Buttons, al
; Line 64
	mov	al, BYTE PTR __abInBuffer+1
	mov	BYTE PTR _a$[ebp], al
; Line 66
	movzx	eax, BYTE PTR __abInBuffer
	and	eax, 16					; 00000010H
	je	SHORT $LN10@EvaPacket
; Line 67
	movzx	eax, BYTE PTR _a$[ebp]
	neg	eax
	mov	BYTE PTR _a$[ebp], al
; Line 68
	movzx	eax, BYTE PTR _a$[ebp]
	mov	ecx, DWORD PTR __ScreenX
	sub	ecx, eax
	mov	DWORD PTR __ScreenX, ecx
; Line 70
	jmp	SHORT $LN9@EvaPacket
$LN10@EvaPacket:
; Line 71
	movzx	eax, BYTE PTR _a$[ebp]
	add	eax, DWORD PTR __ScreenX
	mov	DWORD PTR __ScreenX, eax
$LN9@EvaPacket:
; Line 73
	mov	al, BYTE PTR __abInBuffer+2
	mov	BYTE PTR _a$[ebp], al
; Line 75
	movzx	eax, BYTE PTR __abInBuffer
	and	eax, 32					; 00000020H
	je	SHORT $LN8@EvaPacket
; Line 76
	movzx	eax, BYTE PTR _a$[ebp]
	neg	eax
	mov	BYTE PTR _a$[ebp], al
; Line 77
	movzx	eax, BYTE PTR _a$[ebp]
	add	eax, DWORD PTR __ScreenY
	mov	DWORD PTR __ScreenY, eax
; Line 78
	jmp	SHORT $LN7@EvaPacket
$LN8@EvaPacket:
; Line 79
	movzx	eax, BYTE PTR _a$[ebp]
	mov	ecx, DWORD PTR __ScreenY
	sub	ecx, eax
	mov	DWORD PTR __ScreenY, ecx
$LN7@EvaPacket:
; Line 82
	cmp	DWORD PTR __ScreenX, 0
	jge	SHORT $LN6@EvaPacket
; Line 83
	mov	DWORD PTR __ScreenX, 0
	jmp	SHORT $LN5@EvaPacket
$LN6@EvaPacket:
; Line 84
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, 1
	cmp	DWORD PTR __ScreenX, eax
	jle	SHORT $LN5@EvaPacket
; Line 85
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR __ScreenX, eax
$LN5@EvaPacket:
; Line 86
	cmp	DWORD PTR __ScreenY, 0
	jge	SHORT $LN3@EvaPacket
; Line 87
	mov	DWORD PTR __ScreenY, 0
	jmp	SHORT $LN2@EvaPacket
$LN3@EvaPacket:
; Line 88
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, 1
	cmp	DWORD PTR __ScreenY, eax
	jle	SHORT $LN2@EvaPacket
; Line 89
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, 1
	mov	DWORD PTR __ScreenY, eax
$LN2@EvaPacket:
; Line 92
	mov	eax, DWORD PTR __ScreenX
	mov	DWORD PTR _State$[ebp], eax
; Line 93
	mov	eax, DWORD PTR __ScreenY
	mov	DWORD PTR _State$[ebp+4], eax
; Line 94
	mov	al, BYTE PTR __Buttons
	mov	BYTE PTR _State$[ebp+8], al
; Line 95
	lea	eax, DWORD PTR _State$[ebp]
	push	eax
	call	_GUI_MOUSE_StoreState
	add	esp, 4
; Line 96
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@EvaPacket
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@EvaPacket:
	DD	1
	DD	$LN14@EvaPacket
$LN14@EvaPacket:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN13@EvaPacket
$LN13@EvaPacket:
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
__EvaPacket ENDP
_TEXT	ENDS
PUBLIC	_GUI_MOUSE_DRIVER_PS2_Init
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MOUSE_DRIVER_PS2_Init
_TEXT	SEGMENT
_GUI_MOUSE_DRIVER_PS2_Init PROC				; COMDAT
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	mov	DWORD PTR __NumBytesInBuffer, 0
; Line 135
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MOUSE_DRIVER_PS2_Init ENDP
_TEXT	ENDS
END
