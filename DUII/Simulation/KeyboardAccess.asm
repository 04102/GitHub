; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\KeyboardAccess.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_iKeyboardCount DB 01H DUP (?)
_BSS	ENDS
PUBLIC	_CreateKeyboard
EXTRN	??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z:PROC ; Keyboard::Keyboard
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	_SystemError:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\keyboardaccess.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _CreateKeyboard
_TEXT	SEGMENT
tv87 = -220						; size = 4
$T13613 = -212						; size = 4
$T13614 = -200						; size = 4
_Title$ = 8						; size = 4
_ExistingValue$ = 12					; size = 4
_DisplayType$ = 16					; size = 4
_LockKeyboard$ = 20					; size = 1
_iMaxTextLength$ = 24					; size = 4
_iSource$ = 28						; size = 4
_parent$ = 32						; size = 4
_scrollable$ = 36					; size = 1
_CreateKeyboard PROC					; COMDAT
; Line 18
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 19
	mov	al, BYTE PTR _iKeyboardCount
	add	al, 1
	mov	BYTE PTR _iKeyboardCount, al
	movzx	ecx, BYTE PTR _iKeyboardCount
	cmp	ecx, 10					; 0000000aH
	jne	SHORT $LN2@CreateKeyb
; Line 21
	mov	al, BYTE PTR _iKeyboardCount
	sub	al, 1
	mov	BYTE PTR _iKeyboardCount, al
; Line 22
	call	_SystemError
; Line 23
	xor	eax, eax
	jmp	SHORT $LN3@CreateKeyb
	jmp	SHORT $LN3@CreateKeyb
$LN2@CreateKeyb:
; Line 25
	push	268					; 0000010cH
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T13614[ebp], eax
	cmp	DWORD PTR $T13614[ebp], 0
	je	SHORT $LN5@CreateKeyb
	movzx	eax, BYTE PTR _scrollable$[ebp]
	push	eax
	mov	ecx, DWORD PTR _parent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _iSource$[ebp]
	push	edx
	mov	eax, DWORD PTR _iMaxTextLength$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _LockKeyboard$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Title$[ebp]
	push	edx
	mov	eax, DWORD PTR _ExistingValue$[ebp]
	push	eax
	mov	ecx, DWORD PTR _DisplayType$[ebp]
	push	ecx
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	mov	ecx, DWORD PTR $T13614[ebp]
	call	??0Keyboard@@QAE@HHHHW4Keyboard_Type@@PAD1DHHJD@Z ; Keyboard::Keyboard
	mov	DWORD PTR tv87[ebp], eax
	jmp	SHORT $LN6@CreateKeyb
$LN5@CreateKeyb:
	mov	DWORD PTR tv87[ebp], 0
$LN6@CreateKeyb:
	mov	edx, DWORD PTR tv87[ebp]
	mov	DWORD PTR $T13613[ebp], edx
	mov	eax, DWORD PTR $T13613[ebp]
$LN3@CreateKeyb:
; Line 26
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateKeyboard ENDP
_TEXT	ENDS
PUBLIC	??_GKeyboard@@QAEPAXI@Z				; Keyboard::`scalar deleting destructor'
PUBLIC	_DestroyKeyboard
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DestroyKeyboard
_TEXT	SEGMENT
tv68 = -232						; size = 4
$T13628 = -224						; size = 4
$T13629 = -212						; size = 4
_board$ = -8						; size = 4
_pKeyboard$ = 8						; size = 4
_DestroyKeyboard PROC					; COMDAT
; Line 29
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 32
	mov	eax, DWORD PTR _pKeyboard$[ebp]
	mov	DWORD PTR _board$[ebp], eax
; Line 33
	mov	eax, DWORD PTR _board$[ebp]
	mov	DWORD PTR $T13629[ebp], eax
	mov	ecx, DWORD PTR $T13629[ebp]
	mov	DWORD PTR $T13628[ebp], ecx
	cmp	DWORD PTR $T13628[ebp], 0
	je	SHORT $LN3@DestroyKey
	push	1
	mov	ecx, DWORD PTR $T13628[ebp]
	call	??_GKeyboard@@QAEPAXI@Z
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@DestroyKey
$LN3@DestroyKey:
	mov	DWORD PTR tv68[ebp], 0
$LN4@DestroyKey:
; Line 35
	mov	al, BYTE PTR _iKeyboardCount
	sub	al, 1
	mov	BYTE PTR _iKeyboardCount, al
; Line 36
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DestroyKeyboard ENDP
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
EXTRN	??1Keyboard@@QAE@XZ:PROC			; Keyboard::~Keyboard
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GKeyboard@@QAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GKeyboard@@QAEPAXI@Z PROC				; Keyboard::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Keyboard@@QAE@XZ			; Keyboard::~Keyboard
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN1@scalar
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAX@Z				; operator delete
	add	esp, 4
$LN1@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GKeyboard@@QAEPAXI@Z ENDP				; Keyboard::`scalar deleting destructor'
_TEXT	ENDS
END
