; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawGraphEx.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawGraphEx
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawgraphex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawGraphEx
_TEXT	SEGMENT
_pay$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_Numerator$ = 24					; size = 4
_Denominator$ = 28					; size = 4
_MirrorX$ = 32						; size = 4
_GUI_DrawGraphEx PROC					; COMDAT
; Line 194
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 197
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 198
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawGr
$LN3@GUI_DrawGr:
; Line 200
	mov	eax, DWORD PTR _MirrorX$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Denominator$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Numerator$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pay$[ebp]
	push	eax
	call	__DrawGraph
	add	esp, 28					; 0000001cH
; Line 202
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawGr
$LN5@GUI_DrawGr:
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawGraphEx ENDP
_TEXT	ENDS
EXTRN	_LCD_DrawVLine:PROC
EXTRN	_LCD_DrawPixel:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawGraph
_TEXT	SEGMENT
tv164 = -364						; size = 4
tv142 = -364						; size = 4
$T8477 = -353						; size = 1
_y01$8435 = -152					; size = 4
_Value$ = -140						; size = 2
_p$ = -128						; size = 4
_NumPointsVisible$ = -116				; size = 4
_Add$ = -104						; size = 4
_Cnt$ = -92						; size = 4
_Skip$ = -80						; size = 4
_Method$ = -68						; size = 4
_yClip1$ = -56						; size = 4
_yClip0$ = -44						; size = 4
_y1$ = -32						; size = 4
_y0$ = -20						; size = 4
_i$ = -8						; size = 4
_pay$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_xOff$ = 16						; size = 4
_yOff$ = 20						; size = 4
_Numerator$ = 24					; size = 4
_Denominator$ = 28					; size = 4
_MirrorX$ = 32						; size = 4
__DrawGraph PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T8477[ebp], 0
; Line 61
	cmp	DWORD PTR _Numerator$[ebp], 0
	je	SHORT $LN46@DrawGraph
	cmp	DWORD PTR _Denominator$[ebp], 0
	je	SHORT $LN46@DrawGraph
	cmp	DWORD PTR _NumPoints$[ebp], 0
	jg	SHORT $LN47@DrawGraph
$LN46@DrawGraph:
; Line 62
	jmp	$LN48@DrawGraph
$LN47@DrawGraph:
; Line 64
	cmp	DWORD PTR _Numerator$[ebp], -1
	jne	SHORT $LN45@DrawGraph
; Line 65
	cmp	DWORD PTR _Denominator$[ebp], 1
	jne	SHORT $LN44@DrawGraph
; Line 66
	mov	DWORD PTR _Method$[ebp], 1
; Line 67
	jmp	SHORT $LN43@DrawGraph
$LN44@DrawGraph:
; Line 68
	mov	DWORD PTR _Method$[ebp], 2
$LN43@DrawGraph:
; Line 69
	jmp	SHORT $LN42@DrawGraph
$LN45@DrawGraph:
; Line 70
	cmp	DWORD PTR _Numerator$[ebp], 1
	jne	SHORT $LN41@DrawGraph
; Line 71
	cmp	DWORD PTR _Denominator$[ebp], 1
	jne	SHORT $LN40@DrawGraph
; Line 72
	mov	DWORD PTR _Method$[ebp], 0
; Line 73
	jmp	SHORT $LN39@DrawGraph
$LN40@DrawGraph:
; Line 74
	mov	DWORD PTR _Method$[ebp], 3
$LN39@DrawGraph:
; Line 76
	jmp	SHORT $LN42@DrawGraph
$LN41@DrawGraph:
; Line 77
	cmp	DWORD PTR _Denominator$[ebp], 1
	jne	SHORT $LN37@DrawGraph
; Line 78
	mov	DWORD PTR _Method$[ebp], 4
; Line 79
	jmp	SHORT $LN42@DrawGraph
$LN37@DrawGraph:
; Line 80
	mov	DWORD PTR _Method$[ebp], 5
$LN42@DrawGraph:
; Line 84
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _yClip0$[ebp], ecx
; Line 85
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	mov	DWORD PTR _yClip1$[ebp], ecx
; Line 86
	mov	DWORD PTR _Cnt$[ebp], 0
	mov	eax, DWORD PTR _Cnt$[ebp]
	mov	DWORD PTR _i$[ebp], eax
; Line 87
	mov	eax, DWORD PTR _NumPoints$[ebp]
	mov	DWORD PTR _NumPointsVisible$[ebp], eax
; Line 88
	cmp	DWORD PTR _GUI_Context+20, 0
	je	SHORT $LN35@DrawGraph
; Line 89
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax]
	cmp	DWORD PTR _xOff$[ebp], ecx
	jge	SHORT $LN34@DrawGraph
; Line 90
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax]
	sub	ecx, DWORD PTR _xOff$[ebp]
	mov	DWORD PTR _i$[ebp], ecx
$LN34@DrawGraph:
; Line 92
	mov	eax, DWORD PTR _NumPoints$[ebp]
	mov	ecx, DWORD PTR _xOff$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+4]
	cmp	edx, ecx
	jle	SHORT $LN35@DrawGraph
; Line 93
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+4]
	sub	ecx, DWORD PTR _xOff$[ebp]
	add	ecx, 1
	mov	DWORD PTR _NumPointsVisible$[ebp], ecx
$LN35@DrawGraph:
; Line 96
	cmp	DWORD PTR _MirrorX$[ebp], 0
	je	SHORT $LN32@DrawGraph
; Line 97
	mov	eax, DWORD PTR _NumPoints$[ebp]
	mov	ecx, DWORD PTR _pay$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2-2]
	mov	DWORD PTR _p$[ebp], edx
; Line 98
	mov	DWORD PTR _Add$[ebp], -1
; Line 99
	jmp	SHORT $LN31@DrawGraph
$LN32@DrawGraph:
; Line 100
	mov	DWORD PTR _Add$[ebp], 1
; Line 101
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pay$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _p$[ebp], edx
$LN31@DrawGraph:
; Line 104
	mov	DWORD PTR _Skip$[ebp], 1
; Line 105
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPointsVisible$[ebp]
	jge	$LN48@DrawGraph
	jmp	SHORT $LN29@DrawGraph
$LN28@DrawGraph:
; Line 107
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN29@DrawGraph:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPointsVisible$[ebp]
	jge	$LN48@DrawGraph
; Line 108
	mov	eax, DWORD PTR _p$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _Value$[ebp], cx
; Line 109
	mov	eax, DWORD PTR _Add$[ebp]
	mov	ecx, DWORD PTR _p$[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _p$[ebp], edx
; Line 111
	movsx	eax, WORD PTR _Value$[ebp]
	cmp	eax, 32767				; 00007fffH
	jne	SHORT $LN26@DrawGraph
; Line 113
	cmp	DWORD PTR _Cnt$[ebp], 0
	jne	SHORT $LN25@DrawGraph
	cmp	DWORD PTR _Skip$[ebp], 0
	jne	SHORT $LN25@DrawGraph
; Line 114
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN50@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN50@DrawGraph:
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xOff$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	call	_LCD_DrawPixel
	add	esp, 8
$LN25@DrawGraph:
; Line 116
	mov	DWORD PTR _Skip$[ebp], 1
; Line 117
	mov	DWORD PTR _Cnt$[ebp], 0
; Line 118
	jmp	$LN28@DrawGraph
; Line 119
	jmp	$LN24@DrawGraph
$LN26@DrawGraph:
; Line 120
	cmp	DWORD PTR _Skip$[ebp], 0
	je	$LN24@DrawGraph
; Line 122
	mov	DWORD PTR _Skip$[ebp], 0
; Line 123
	mov	eax, DWORD PTR _Method$[ebp]
	mov	DWORD PTR tv142[ebp], eax
	mov	ecx, DWORD PTR tv142[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv142[ebp], ecx
	cmp	DWORD PTR tv142[ebp], 4
	ja	$LN15@DrawGraph
	mov	edx, DWORD PTR tv142[ebp]
	jmp	DWORD PTR $LN59@DrawGraph[edx*4]
$LN20@DrawGraph:
; Line 125
	movsx	eax, WORD PTR _Value$[ebp]
	neg	eax
	add	eax, DWORD PTR _yOff$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
; Line 126
	jmp	$LN21@DrawGraph
$LN19@DrawGraph:
; Line 128
	movsx	eax, WORD PTR _Value$[ebp]
	neg	eax
	add	eax, DWORD PTR _yOff$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
; Line 129
	jmp	SHORT $LN21@DrawGraph
$LN18@DrawGraph:
; Line 131
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
; Line 132
	jmp	SHORT $LN21@DrawGraph
$LN17@DrawGraph:
; Line 134
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	imul	eax, DWORD PTR _Numerator$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
; Line 135
	jmp	SHORT $LN21@DrawGraph
$LN16@DrawGraph:
; Line 137
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	imul	eax, DWORD PTR _Numerator$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
; Line 138
	jmp	SHORT $LN21@DrawGraph
$LN15@DrawGraph:
; Line 140
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	mov	BYTE PTR $T8477[ebp], 1
	mov	DWORD PTR _y0$[ebp], eax
$LN21@DrawGraph:
; Line 142
	jmp	$LN28@DrawGraph
$LN24@DrawGraph:
; Line 146
	mov	eax, DWORD PTR _Method$[ebp]
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv164[ebp], ecx
	cmp	DWORD PTR tv164[ebp], 4
	ja	SHORT $LN7@DrawGraph
	mov	edx, DWORD PTR tv164[ebp]
	jmp	DWORD PTR $LN60@DrawGraph[edx*4]
$LN12@DrawGraph:
; Line 148
	movsx	eax, WORD PTR _Value$[ebp]
	neg	eax
	add	eax, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 149
	jmp	SHORT $LN13@DrawGraph
$LN11@DrawGraph:
; Line 151
	movsx	eax, WORD PTR _Value$[ebp]
	neg	eax
	add	eax, DWORD PTR _yOff$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 152
	jmp	SHORT $LN13@DrawGraph
$LN10@DrawGraph:
; Line 154
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 155
	jmp	SHORT $LN13@DrawGraph
$LN9@DrawGraph:
; Line 157
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	imul	eax, DWORD PTR _Numerator$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 158
	jmp	SHORT $LN13@DrawGraph
$LN8@DrawGraph:
; Line 160
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	imul	eax, DWORD PTR _Numerator$[ebp]
	xor	edx, edx
	div	DWORD PTR _Denominator$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
; Line 161
	jmp	SHORT $LN13@DrawGraph
$LN7@DrawGraph:
; Line 163
	movsx	eax, WORD PTR _Value$[ebp]
	add	eax, DWORD PTR _yOff$[ebp]
	mov	DWORD PTR _y1$[ebp], eax
$LN13@DrawGraph:
; Line 165
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN52@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN52@DrawGraph:
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _yClip0$[ebp]
	jge	SHORT $LN5@DrawGraph
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _yClip0$[ebp]
	jl	$LN6@DrawGraph
$LN5@DrawGraph:
; Line 166
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN53@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN53@DrawGraph:
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _yClip1$[ebp]
	jle	SHORT $LN3@DrawGraph
	mov	eax, DWORD PTR _y1$[ebp]
	cmp	eax, DWORD PTR _yClip1$[ebp]
	jg	$LN6@DrawGraph
$LN3@DrawGraph:
; Line 168
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN54@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN54@DrawGraph:
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _y01$8435[ebp], eax
; Line 169
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN55@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN55@DrawGraph:
	mov	eax, DWORD PTR _y0$[ebp]
	cmp	eax, DWORD PTR _y1$[ebp]
	jg	SHORT $LN2@DrawGraph
; Line 170
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN56@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN56@DrawGraph:
	mov	eax, DWORD PTR _y01$8435[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xOff$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 171
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y01$8435[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR _xOff$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 172
	jmp	SHORT $LN6@DrawGraph
$LN2@DrawGraph:
; Line 173
	cmp	BYTE PTR $T8477[ebp], 0
	jne	SHORT $LN57@DrawGraph
	push	OFFSET $LN51@DrawGraph
	call	__RTC_UninitUse
	add	esp, 4
$LN57@DrawGraph:
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y01$8435[ebp]
	push	ecx
	mov	edx, DWORD PTR _xOff$[ebp]
	mov	eax, DWORD PTR _i$[ebp]
	lea	ecx, DWORD PTR [eax+edx-1]
	push	ecx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
; Line 174
	mov	eax, DWORD PTR _y01$8435[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	add	edx, DWORD PTR _xOff$[ebp]
	push	edx
	call	_LCD_DrawVLine
	add	esp, 12					; 0000000cH
$LN6@DrawGraph:
; Line 178
	mov	eax, DWORD PTR _Cnt$[ebp]
	add	eax, 1
	mov	DWORD PTR _Cnt$[ebp], eax
; Line 179
	mov	BYTE PTR $T8477[ebp], 1
	mov	eax, DWORD PTR _y1$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 180
	jmp	$LN28@DrawGraph
$LN48@DrawGraph:
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN58@DrawGraph:
$LN51@DrawGraph:
	DB	121					; 00000079H
	DB	48					; 00000030H
	DB	0
	npad	3
$LN59@DrawGraph:
	DD	$LN20@DrawGraph
	DD	$LN19@DrawGraph
	DD	$LN18@DrawGraph
	DD	$LN17@DrawGraph
	DD	$LN16@DrawGraph
$LN60@DrawGraph:
	DD	$LN12@DrawGraph
	DD	$LN11@DrawGraph
	DD	$LN10@DrawGraph
	DD	$LN9@DrawGraph
	DD	$LN8@DrawGraph
__DrawGraph ENDP
_TEXT	ENDS
END
