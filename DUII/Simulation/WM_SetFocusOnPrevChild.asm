; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_SetFocusOnPrevChild.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_SetFocusOnPrevChild
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_setfocusonprevchild.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetFocusOnPrevChild
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hParent$ = 8						; size = 4
_WM_SetFocusOnPrevChild PROC				; COMDAT
; Line 100
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 101
	mov	DWORD PTR _r$[ebp], 0
; Line 102
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN1@WM_SetFocu
; Line 104
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	__SetFocusOnPrevChild
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
$LN1@WM_SetFocu:
; Line 107
	mov	eax, DWORD PTR _r$[ebp]
; Line 108
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetFocusOnPrevChild ENDP
_TEXT	ENDS
EXTRN	_WM_SetFocus:PROC
EXTRN	_WM_IsFocussable:PROC
EXTRN	_WM__GetFocussedChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetFocusOnPrevChild
_TEXT	SEGMENT
_hWin$ = -20						; size = 4
_hChild$ = -8						; size = 4
_hParent$ = 8						; size = 4
__SetFocusOnPrevChild PROC				; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 75
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM__GetFocussedChild
	add	esp, 4
	mov	DWORD PTR _hChild$[ebp], eax
; Line 76
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	__GetPrevChild
	add	esp, 4
	mov	DWORD PTR _hChild$[ebp], eax
; Line 77
	mov	eax, DWORD PTR _hChild$[ebp]
	mov	DWORD PTR _hWin$[ebp], eax
$LN4@SetFocusOn:
; Line 78
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_IsFocussable
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN3@SetFocusOn
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@SetFocusOn
; Line 79
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	__GetPrevChild
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _hWin$[ebp]
	cmp	eax, DWORD PTR _hChild$[ebp]
	jne	SHORT $LN2@SetFocusOn
; Line 81
	jmp	SHORT $LN3@SetFocusOn
$LN2@SetFocusOn:
; Line 83
	jmp	SHORT $LN4@SetFocusOn
$LN3@SetFocusOn:
; Line 84
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@SetFocusOn
; Line 85
	mov	eax, DWORD PTR _hWin$[ebp]
	jmp	SHORT $LN5@SetFocusOn
$LN1@SetFocusOn:
; Line 87
	xor	eax, eax
$LN5@SetFocusOn:
; Line 88
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SetFocusOnPrevChild ENDP
_TEXT	ENDS
EXTRN	_WM__GetLastSibling:PROC
EXTRN	_WM__GetPrevSibling:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetPrevChild
_TEXT	SEGMENT
_hObj$ = -8						; size = 4
_hChild$ = 8						; size = 4
__GetPrevChild PROC					; COMDAT
; Line 48
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	DWORD PTR _hObj$[ebp], 0
; Line 50
	cmp	DWORD PTR _hChild$[ebp], 0
	je	SHORT $LN3@GetPrevChi
; Line 51
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM__GetPrevSibling
	add	esp, 4
	mov	DWORD PTR _hObj$[ebp], eax
$LN3@GetPrevChi:
; Line 53
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@GetPrevChi
; Line 54
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_WM__GetLastSibling
	add	esp, 4
	mov	DWORD PTR _hObj$[ebp], eax
$LN2@GetPrevChi:
; Line 56
	mov	eax, DWORD PTR _hObj$[ebp]
	cmp	eax, DWORD PTR _hChild$[ebp]
	je	SHORT $LN1@GetPrevChi
; Line 57
	mov	eax, DWORD PTR _hObj$[ebp]
	jmp	SHORT $LN4@GetPrevChi
$LN1@GetPrevChi:
; Line 59
	xor	eax, eax
$LN4@GetPrevChi:
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetPrevChild ENDP
_TEXT	ENDS
END
