; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Stream.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG8390	DB	'c:\duii\simulation\gui\core\gui_stream.c: Format of stre'
	DB	'amed bitmap does not match!', 00H
_DATA	ENDS
PUBLIC	_GUI__ReadHeaderFromStream
EXTRN	_GUI__Read16:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_stream.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__ReadHeaderFromStream
_TEXT	SEGMENT
_pBitmapHeader$ = 8					; size = 4
_pData$ = 12						; size = 4
_GUI__ReadHeaderFromStream PROC				; COMDAT
; Line 76
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 77
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx], ax
; Line 78
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 79
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 80
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 81
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+8], ax
; Line 82
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+10], ax
; Line 83
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+12], ax
; Line 84
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	WORD PTR [ecx+14], ax
; Line 85
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__ReadHeaderFromStream ENDP
_TEXT	ENDS
PUBLIC	_GUI__CreateBitmapFromStream
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__CreateBitmapFromStream
_TEXT	SEGMENT
_pBitmapHeader$ = 8					; size = 4
_pData$ = 12						; size = 4
_pBMP$ = 16						; size = 4
_pPAL$ = 20						; size = 4
_pMethods$ = 24						; size = 4
_GUI__CreateBitmapFromStream PROC			; COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax+6], dx
; Line 96
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	dx, WORD PTR [ecx+8]
	mov	WORD PTR [eax+4], dx
; Line 97
	mov	eax, DWORD PTR _pBitmapHeader$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	mov	edx, DWORD PTR _pData$[ebp]
	lea	eax, DWORD PTR [edx+ecx*4+16]
	mov	ecx, DWORD PTR _pBMP$[ebp]
	mov	DWORD PTR [ecx+8], eax
; Line 98
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pPAL$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 99
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax], dx
; Line 100
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	dx, WORD PTR [ecx+6]
	mov	WORD PTR [eax+2], dx
; Line 101
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR _pMethods$[ebp]
	mov	DWORD PTR [eax+16], ecx
; Line 105
	cmp	DWORD PTR _pPAL$[ebp], 0
	je	SHORT $LN2@GUI__Creat
; Line 106
	mov	eax, DWORD PTR _pPAL$[ebp]
	mov	ecx, DWORD PTR _pBitmapHeader$[ebp]
	mov	dl, BYTE PTR [ecx+14]
	mov	BYTE PTR [eax+4], dl
; Line 107
	mov	eax, DWORD PTR _pBitmapHeader$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	mov	edx, DWORD PTR _pPAL$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 108
	mov	eax, DWORD PTR _pData$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR _pPAL$[ebp]
	mov	DWORD PTR [ecx+8], eax
$LN2@GUI__Creat:
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__CreateBitmapFromStream ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DrawStreamedBitmap
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawStreamedBitmap
_TEXT	SEGMENT
_BitmapHeader$ = -72					; size = 16
_Palette$ = -48						; size = 12
_Bitmap$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_GUI_DrawStreamedBitmap PROC				; COMDAT
; Line 148
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 157
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	_GUI__ReadHeaderFromStream
	add	esp, 8
; Line 158
	movzx	eax, WORD PTR _BitmapHeader$[ebp+2]
	cmp	eax, 100				; 00000064H
	jne	SHORT $LN2@GUI_DrawSt
; Line 162
	push	0
	lea	eax, DWORD PTR _Palette$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Bitmap$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	lea	eax, DWORD PTR _BitmapHeader$[ebp]
	push	eax
	call	_GUI__CreateBitmapFromStream
	add	esp, 20					; 00000014H
; Line 166
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Bitmap$[ebp]
	push	edx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 167
	jmp	SHORT $LN3@GUI_DrawSt
$LN2@GUI_DrawSt:
; Line 171
	push	OFFSET $SG8390
	call	_GUI_ErrorOut
	add	esp, 4
$LN3@GUI_DrawSt:
; Line 174
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GUI_DrawSt:
	DD	3
	DD	$LN8@GUI_DrawSt
$LN8@GUI_DrawSt:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN5@GUI_DrawSt
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN6@GUI_DrawSt
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN7@GUI_DrawSt
$LN7@GUI_DrawSt:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN6@GUI_DrawSt:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN5@GUI_DrawSt:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
_GUI_DrawStreamedBitmap ENDP
_TEXT	ENDS
PUBLIC	_GUI_SetStreamedBitmapHook
_BSS	SEGMENT
__pfStreamedBitmapHook DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GUI_SetStreamedBitmapHook
_TEXT	SEGMENT
_pfStreamedBitmapHook$ = 8				; size = 4
_GUI_SetStreamedBitmapHook PROC				; COMDAT
; Line 180
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 181
	mov	eax, DWORD PTR _pfStreamedBitmapHook$[ebp]
	mov	DWORD PTR __pfStreamedBitmapHook, eax
; Line 182
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SetStreamedBitmapHook ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DrawStreamedBitmapEx
EXTRN	_GUI_ALLOC_Free:PROC
EXTRN	_GUI_ALLOC_GetNumFreeBytes:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI__Read32:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	_GUI_ALLOC_AllocNoInit:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawStreamedBitmapEx
_TEXT	SEGMENT
_Param$ = -296						; size = 12
_BytesInBuffer$ = -276					; size = 4
_RemBytes$ = -264					; size = 4
_SizeOfDataBuffer$ = -252				; size = 4
_NumDataBytes$ = -240					; size = 4
_NumFreeBytes$ = -228					; size = 4
_Color$ = -216						; size = 4
_Off$ = -204						; size = 4
_r$ = -192						; size = 4
_i$ = -180						; size = 4
_SizeOfPalette$ = -168					; size = 4
_hData$ = -156						; size = 4
_hPalette$ = -144					; size = 4
_pPalette$ = -132					; size = 4
_pData$ = -120						; size = 4
_pBuffer$ = -108					; size = 4
_acBuffer$ = -96					; size = 16
_BitmapHeader$ = -72					; size = 16
_Palette$ = -48						; size = 12
_Bitmap$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
_GUI_DrawStreamedBitmapEx PROC				; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 492				; 000001ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-492]
	mov	ecx, 123				; 0000007bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 189
	xor	eax, eax
	mov	WORD PTR _Bitmap$[ebp], ax
	xor	eax, eax
	mov	DWORD PTR _Bitmap$[ebp+2], eax
	mov	DWORD PTR _Bitmap$[ebp+6], eax
	mov	DWORD PTR _Bitmap$[ebp+10], eax
	mov	DWORD PTR _Bitmap$[ebp+14], eax
	mov	WORD PTR _Bitmap$[ebp+18], ax
; Line 202
	lea	eax, DWORD PTR _acBuffer$[ebp]
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 203
	mov	DWORD PTR _hPalette$[ebp], 0
; Line 204
	mov	DWORD PTR _pPalette$[ebp], 0
; Line 205
	mov	DWORD PTR _Off$[ebp], 0
; Line 206
	mov	DWORD PTR _r$[ebp], 0
; Line 207
	lea	eax, DWORD PTR _Off$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfGetData$[ebp]
	push	eax
	call	__GetData
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN26@GUI_DrawSt@2
; Line 211
	lea	eax, DWORD PTR _acBuffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	_GUI__ReadHeaderFromStream
	add	esp, 8
; Line 215
	movzx	eax, WORD PTR _BitmapHeader$[ebp+12]
	shl	eax, 2
	mov	DWORD PTR _SizeOfPalette$[ebp], eax
; Line 219
	mov	ax, WORD PTR _BitmapHeader$[ebp+10]
	mov	WORD PTR _Bitmap$[ebp+6], ax
; Line 220
	mov	ax, WORD PTR _BitmapHeader$[ebp+8]
	mov	WORD PTR _Bitmap$[ebp+4], ax
; Line 221
	lea	eax, DWORD PTR _Palette$[ebp]
	mov	DWORD PTR _Bitmap$[ebp+12], eax
; Line 222
	mov	ax, WORD PTR _BitmapHeader$[ebp+4]
	mov	WORD PTR _Bitmap$[ebp], ax
; Line 226
	mov	al, BYTE PTR _BitmapHeader$[ebp+14]
	mov	BYTE PTR _Palette$[ebp+4], al
; Line 227
	movzx	eax, WORD PTR _BitmapHeader$[ebp+12]
	mov	DWORD PTR _Palette$[ebp], eax
; Line 228
	mov	eax, DWORD PTR _pPalette$[ebp]
	mov	DWORD PTR _Palette$[ebp+8], eax
; Line 232
	cmp	DWORD PTR __pfStreamedBitmapHook, 0
	je	SHORT $LN25@GUI_DrawSt@2
; Line 236
	mov	DWORD PTR _Param$[ebp], 1
; Line 237
	mov	eax, DWORD PTR _SizeOfPalette$[ebp]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 238
	mov	esi, esp
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	call	DWORD PTR __pfStreamedBitmapHook
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pPalette$[ebp], eax
$LN25@GUI_DrawSt@2:
; Line 240
	cmp	DWORD PTR _pPalette$[ebp], 0
	jne	SHORT $LN24@GUI_DrawSt@2
; Line 244
	mov	eax, DWORD PTR _SizeOfPalette$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR _hPalette$[ebp], eax
; Line 245
	cmp	DWORD PTR _hPalette$[ebp], 0
	je	SHORT $LN24@GUI_DrawSt@2
; Line 246
	mov	eax, DWORD PTR _hPalette$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pPalette$[ebp], eax
$LN24@GUI_DrawSt@2:
; Line 249
	cmp	DWORD PTR _pPalette$[ebp], 0
	je	$LN22@GUI_DrawSt@2
; Line 250
	lea	eax, DWORD PTR _Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _SizeOfPalette$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pPalette$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	push	ecx
	call	__GetData
	add	esp, 20					; 00000014H
	test	eax, eax
	jne	$LN21@GUI_DrawSt@2
; Line 251
	mov	eax, DWORD PTR _pPalette$[ebp]
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 252
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN20@GUI_DrawSt@2
$LN19@GUI_DrawSt@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN20@GUI_DrawSt@2:
	movzx	eax, WORD PTR _BitmapHeader$[ebp+12]
	cmp	DWORD PTR _i$[ebp], eax
	jge	SHORT $LN18@GUI_DrawSt@2
; Line 253
	lea	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_GUI__Read32
	add	esp, 4
	mov	DWORD PTR _Color$[ebp], eax
; Line 254
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pPalette$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 255
	jmp	SHORT $LN19@GUI_DrawSt@2
$LN18@GUI_DrawSt@2:
; Line 256
	cmp	DWORD PTR __pfStreamedBitmapHook, 0
	je	SHORT $LN17@GUI_DrawSt@2
; Line 260
	mov	DWORD PTR _Param$[ebp], 3
; Line 261
	mov	eax, DWORD PTR _pPalette$[ebp]
	mov	DWORD PTR _Param$[ebp+8], eax
; Line 262
	movzx	eax, WORD PTR _BitmapHeader$[ebp+12]
	mov	DWORD PTR _Param$[ebp+4], eax
; Line 263
	mov	esi, esp
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	call	DWORD PTR __pfStreamedBitmapHook
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN17@GUI_DrawSt@2:
; Line 265
	cmp	DWORD PTR _hPalette$[ebp], 0
	je	SHORT $LN16@GUI_DrawSt@2
; Line 266
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPalette$[ebp], 0
$LN16@GUI_DrawSt@2:
; Line 271
	call	_GUI_ALLOC_GetNumFreeBytes
	mov	DWORD PTR _NumFreeBytes$[ebp], eax
; Line 272
	movzx	eax, WORD PTR _BitmapHeader$[ebp+8]
	movzx	ecx, WORD PTR _BitmapHeader$[ebp+6]
	imul	eax, ecx
	mov	DWORD PTR _NumDataBytes$[ebp], eax
; Line 273
	movzx	eax, WORD PTR _BitmapHeader$[ebp+8]
	cmp	DWORD PTR _NumFreeBytes$[ebp], eax
	jb	$LN15@GUI_DrawSt@2
; Line 277
	mov	eax, DWORD PTR _NumFreeBytes$[ebp]
	cmp	eax, DWORD PTR _NumDataBytes$[ebp]
	jb	SHORT $LN14@GUI_DrawSt@2
; Line 278
	mov	eax, DWORD PTR _NumDataBytes$[ebp]
	mov	DWORD PTR _SizeOfDataBuffer$[ebp], eax
; Line 279
	jmp	SHORT $LN13@GUI_DrawSt@2
$LN14@GUI_DrawSt@2:
; Line 280
	movzx	ecx, WORD PTR _BitmapHeader$[ebp+8]
	mov	eax, DWORD PTR _NumFreeBytes$[ebp]
	xor	edx, edx
	div	ecx
	movzx	edx, WORD PTR _BitmapHeader$[ebp+8]
	imul	eax, edx
	mov	DWORD PTR _SizeOfDataBuffer$[ebp], eax
$LN13@GUI_DrawSt@2:
; Line 285
	mov	eax, DWORD PTR _SizeOfDataBuffer$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR _hData$[ebp], eax
; Line 286
	mov	eax, DWORD PTR _hData$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$[ebp], eax
; Line 287
	cmp	DWORD PTR _hPalette$[ebp], 0
	je	SHORT $LN12@GUI_DrawSt@2
; Line 288
	mov	eax, DWORD PTR _hPalette$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pPalette$[ebp], eax
$LN12@GUI_DrawSt@2:
; Line 293
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _Bitmap$[ebp+8], eax
; Line 294
	mov	eax, DWORD PTR _pPalette$[ebp]
	mov	DWORD PTR _Palette$[ebp+8], eax
; Line 298
	mov	eax, DWORD PTR _NumDataBytes$[ebp]
	mov	DWORD PTR _RemBytes$[ebp], eax
	jmp	SHORT $LN11@GUI_DrawSt@2
$LN10@GUI_DrawSt@2:
	mov	eax, DWORD PTR _RemBytes$[ebp]
	sub	eax, DWORD PTR _BytesInBuffer$[ebp]
	mov	DWORD PTR _RemBytes$[ebp], eax
$LN11@GUI_DrawSt@2:
	cmp	DWORD PTR _RemBytes$[ebp], 0
	je	$LN9@GUI_DrawSt@2
; Line 299
	mov	eax, DWORD PTR _RemBytes$[ebp]
	cmp	eax, DWORD PTR _SizeOfDataBuffer$[ebp]
	jb	SHORT $LN8@GUI_DrawSt@2
; Line 300
	mov	eax, DWORD PTR _SizeOfDataBuffer$[ebp]
	mov	DWORD PTR _BytesInBuffer$[ebp], eax
; Line 301
	jmp	SHORT $LN7@GUI_DrawSt@2
$LN8@GUI_DrawSt@2:
; Line 302
	mov	eax, DWORD PTR _RemBytes$[ebp]
	mov	DWORD PTR _BytesInBuffer$[ebp], eax
$LN7@GUI_DrawSt@2:
; Line 304
	lea	eax, DWORD PTR _Off$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BytesInBuffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _pData$[ebp]
	push	edx
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pfGetData$[ebp]
	push	ecx
	call	__GetData
	add	esp, 20					; 00000014H
	test	eax, eax
	je	SHORT $LN6@GUI_DrawSt@2
; Line 305
	jmp	SHORT $LN9@GUI_DrawSt@2
$LN6@GUI_DrawSt@2:
; Line 310
	movzx	ecx, WORD PTR _BitmapHeader$[ebp+8]
	mov	eax, DWORD PTR _BytesInBuffer$[ebp]
	xor	edx, edx
	div	ecx
	mov	WORD PTR _Bitmap$[ebp+2], ax
; Line 311
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	lea	edx, DWORD PTR _Bitmap$[ebp]
	push	edx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 312
	movzx	eax, WORD PTR _Bitmap$[ebp+2]
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 313
	jmp	$LN10@GUI_DrawSt@2
$LN9@GUI_DrawSt@2:
; Line 317
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$[ebp], 0
; Line 318
	mov	eax, DWORD PTR _hData$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN15@GUI_DrawSt@2:
; Line 320
	jmp	SHORT $LN5@GUI_DrawSt@2
$LN21@GUI_DrawSt@2:
; Line 321
	mov	DWORD PTR _r$[ebp], 1
$LN5@GUI_DrawSt@2:
; Line 326
	cmp	DWORD PTR _hPalette$[ebp], 0
	jne	SHORT $LN4@GUI_DrawSt@2
; Line 330
	mov	DWORD PTR _Param$[ebp], 2
; Line 331
	mov	eax, DWORD PTR _pPalette$[ebp]
	mov	DWORD PTR _Param$[ebp+8], eax
; Line 332
	mov	esi, esp
	lea	eax, DWORD PTR _Param$[ebp]
	push	eax
	call	DWORD PTR __pfStreamedBitmapHook
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 333
	jmp	SHORT $LN3@GUI_DrawSt@2
$LN4@GUI_DrawSt@2:
; Line 337
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pPalette$[ebp], 0
; Line 338
	mov	eax, DWORD PTR _hPalette$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN3@GUI_DrawSt@2:
; Line 340
	jmp	SHORT $LN2@GUI_DrawSt@2
$LN22@GUI_DrawSt@2:
; Line 341
	mov	DWORD PTR _r$[ebp], 1
$LN2@GUI_DrawSt@2:
; Line 343
	jmp	SHORT $LN1@GUI_DrawSt@2
$LN26@GUI_DrawSt@2:
; Line 344
	mov	DWORD PTR _r$[ebp], 1
$LN1@GUI_DrawSt@2:
; Line 347
	mov	eax, DWORD PTR _r$[ebp]
; Line 348
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN39@GUI_DrawSt@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 492				; 000001ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN39@GUI_DrawSt@2:
	DD	9
	DD	$LN38@GUI_DrawSt@2
$LN38@GUI_DrawSt@2:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN29@GUI_DrawSt@2
	DD	-48					; ffffffd0H
	DD	12					; 0000000cH
	DD	$LN30@GUI_DrawSt@2
	DD	-72					; ffffffb8H
	DD	16					; 00000010H
	DD	$LN31@GUI_DrawSt@2
	DD	-96					; ffffffa0H
	DD	16					; 00000010H
	DD	$LN32@GUI_DrawSt@2
	DD	-108					; ffffff94H
	DD	4
	DD	$LN33@GUI_DrawSt@2
	DD	-120					; ffffff88H
	DD	4
	DD	$LN34@GUI_DrawSt@2
	DD	-132					; ffffff7cH
	DD	4
	DD	$LN35@GUI_DrawSt@2
	DD	-204					; ffffff34H
	DD	4
	DD	$LN36@GUI_DrawSt@2
	DD	-296					; fffffed8H
	DD	12					; 0000000cH
	DD	$LN37@GUI_DrawSt@2
$LN37@GUI_DrawSt@2:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	0
$LN36@GUI_DrawSt@2:
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN35@GUI_DrawSt@2:
	DB	112					; 00000070H
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN34@GUI_DrawSt@2:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
$LN33@GUI_DrawSt@2:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN32@GUI_DrawSt@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN31@GUI_DrawSt@2:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN30@GUI_DrawSt@2:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN29@GUI_DrawSt@2:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	0
_GUI_DrawStreamedBitmapEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetData
_TEXT	SEGMENT
_NumBytesRead$ = -8					; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_ppData$ = 16						; size = 4
_NumBytes$ = 20						; size = 4
_pOff$ = 24						; size = 4
__GetData PROC						; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 46
	mov	esi, esp
	mov	eax, DWORD PTR _pOff$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _NumBytes$[ebp]
	push	edx
	mov	eax, DWORD PTR _ppData$[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$[ebp]
	push	ecx
	call	DWORD PTR _pfGetData$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _NumBytesRead$[ebp], eax
; Line 47
	mov	eax, DWORD PTR _NumBytesRead$[ebp]
	cmp	eax, DWORD PTR _NumBytes$[ebp]
	je	SHORT $LN1@GetData
; Line 48
	mov	eax, 1
	jmp	SHORT $LN2@GetData
$LN1@GetData:
; Line 50
	mov	eax, DWORD PTR _pOff$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, DWORD PTR _NumBytesRead$[ebp]
	mov	edx, DWORD PTR _pOff$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 51
	xor	eax, eax
$LN2@GetData:
; Line 52
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetData ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_GetStreamedBitmapInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GetStreamedBitmapInfo
_TEXT	SEGMENT
_BitmapHeader$ = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
_p$ = 8							; size = 4
_pInfo$ = 12						; size = 4
_GUI_GetStreamedBitmapInfo PROC				; COMDAT
; Line 354
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 360
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	_GUI__ReadHeaderFromStream
	add	esp, 8
; Line 364
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	__FillInfo
	add	esp, 8
; Line 365
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_GetStr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@GUI_GetStr:
	DD	1
	DD	$LN4@GUI_GetStr
$LN4@GUI_GetStr:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN3@GUI_GetStr
$LN3@GUI_GetStr:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_GUI_GetStreamedBitmapInfo ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __FillInfo
_TEXT	SEGMENT
_pHeader$ = 8						; size = 4
_pInfo$ = 12						; size = 4
__FillInfo PROC						; COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 59
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax+10]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 60
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax+14]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 61
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax+12]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 62
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx], ecx
; Line 63
	mov	eax, DWORD PTR _pHeader$[ebp]
	movzx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pInfo$[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 64
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__FillInfo ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_GetStreamedBitmapInfoEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_GetStreamedBitmapInfoEx
_TEXT	SEGMENT
_r$ = -84						; size = 4
_Off$ = -72						; size = 4
_pBuffer$ = -60						; size = 4
_acBuffer$ = -48					; size = 16
_BitmapHeader$ = -24					; size = 16
__$ArrayPad$ = -4					; size = 4
_pfGetData$ = 8						; size = 4
_p$ = 12						; size = 4
_pInfo$ = 16						; size = 4
_GUI_GetStreamedBitmapInfoEx PROC			; COMDAT
; Line 371
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 379
	lea	eax, DWORD PTR _acBuffer$[ebp]
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 380
	mov	DWORD PTR _Off$[ebp], 0
; Line 381
	lea	eax, DWORD PTR _Off$[ebp]
	push	eax
	push	16					; 00000010H
	lea	ecx, DWORD PTR _pBuffer$[ebp]
	push	ecx
	mov	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _pfGetData$[ebp]
	push	eax
	call	__GetData
	add	esp, 20					; 00000014H
	mov	DWORD PTR _r$[ebp], eax
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN1@GUI_GetStr@2
; Line 385
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	_GUI__ReadHeaderFromStream
	add	esp, 8
; Line 389
	mov	eax, DWORD PTR _pInfo$[ebp]
	push	eax
	lea	ecx, DWORD PTR _BitmapHeader$[ebp]
	push	ecx
	call	__FillInfo
	add	esp, 8
$LN1@GUI_GetStr@2:
; Line 391
	mov	eax, DWORD PTR _r$[ebp]
; Line 392
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_GetStr@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@GUI_GetStr@2:
	DD	4
	DD	$LN8@GUI_GetStr@2
$LN8@GUI_GetStr@2:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN4@GUI_GetStr@2
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN5@GUI_GetStr@2
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@GUI_GetStr@2
	DD	-72					; ffffffb8H
	DD	4
	DD	$LN7@GUI_GetStr@2
$LN7@GUI_GetStr@2:
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN6@GUI_GetStr@2:
	DB	112					; 00000070H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN5@GUI_GetStr@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	66					; 00000042H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN4@GUI_GetStr@2:
	DB	66					; 00000042H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	112					; 00000070H
	DB	72					; 00000048H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_GUI_GetStreamedBitmapInfoEx ENDP
_TEXT	ENDS
END
