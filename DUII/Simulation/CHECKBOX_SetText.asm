; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\CHECKBOX_SetText.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_CHECKBOX_SetText
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_GUI__SetText:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_CHECKBOX_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\checkbox_settext.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _CHECKBOX_SetText
_TEXT	SEGMENT
_hpTextOld$ = -32					; size = 4
_hpText$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_s$ = 12						; size = 4
_CHECKBOX_SetText PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN4@CHECKBOX_S
	cmp	DWORD PTR _s$[ebp], 0
	je	SHORT $LN4@CHECKBOX_S
; Line 43
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _hpTextOld$[ebp], ecx
	mov	edx, DWORD PTR _hpTextOld$[ebp]
	mov	DWORD PTR _hpText$[ebp], edx
; Line 45
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 46
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	lea	ecx, DWORD PTR _hpText$[ebp]
	push	ecx
	call	_GUI__SetText
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@CHECKBOX_S
; Line 47
	mov	eax, DWORD PTR _hpText$[ebp]
	cmp	eax, DWORD PTR _hpTextOld$[ebp]
	je	SHORT $LN1@CHECKBOX_S
; Line 48
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 49
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _hpText$[ebp]
	mov	DWORD PTR [eax+124], ecx
; Line 50
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@CHECKBOX_S:
; Line 52
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN4@CHECKBOX_S:
; Line 56
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CHECKBOX_S
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN8@CHECKBOX_S:
	DD	1
	DD	$LN7@CHECKBOX_S
$LN7@CHECKBOX_S:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN6@CHECKBOX_S
$LN6@CHECKBOX_S:
	DB	104					; 00000068H
	DB	112					; 00000070H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_CHECKBOX_SetText ENDP
_TEXT	ENDS
END
