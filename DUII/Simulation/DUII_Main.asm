; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\DUII_Main.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_popupTitleTextColor
PUBLIC	_VERSION_PATH
PUBLIC	_DriverRect
PUBLIC	_VehicleRect
EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_BSS	SEGMENT
$SG120117 DB	01H DUP (?)
	ALIGN	4

$SG120116 DB	01H DUP (?)
	ALIGN	4

$SG120113 DB	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
COMM	_factMode:DWORD
COMM	_testMode:DWORD
COMM	_fileList:BYTE:064H
COMM	_lockupSemaphore:BYTE
COMM	_splashScreenStartTime:DWORD
COMM	_demoMode:DWORD
_DATA	ENDS
_BSS	SEGMENT
	ALIGN	4

_okToUseSDCard DB 01H DUP (?)
	ALIGN	4

?debounce@?5??MainTask@@9@9 DD 01H DUP (?)		; `MainTask'::`6'::debounce
_BSS	ENDS
CONST	SEGMENT
_VERSION_PATH DB 'ConfigFiles\Version.dat', 00H
?SDCardRemovedResources@?1??SDCardRemoved@@9@9 DD FLAT:_FRAMEWIN_CreateIndirect ; `SDCardRemoved'::`2'::SDCardRemovedResources
	DD	FLAT:$SG120090
	DW	00H
	DW	014H
	DW	014H
	DW	0190H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120091
	DW	00H
	DW	00H
	DW	01eH
	DW	0190H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120092
	DW	00H
	DW	00H
	DW	046H
	DW	0190H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120093
	DW	01H
	DW	014H
	DW	073H
	DW	096H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120094
	DW	02H
	DW	0beH
	DW	073H
	DW	0b4H
	DW	03cH
	ORG $+6
?SDCardReinsertedResources@?1??SDCardReinserted@@9@9 DD FLAT:_FRAMEWIN_CreateIndirect ; `SDCardReinserted'::`2'::SDCardReinsertedResources
	DD	FLAT:$SG120101
	DW	00H
	DW	014H
	DW	014H
	DW	01a4H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120102
	DW	00H
	DW	00H
	DW	032H
	DW	01a4H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120103
	DW	01H
	DW	078H
	DW	073H
	DW	08cH
	DW	03cH
	ORG $+6
_ShuttingDownResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG120140
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120141
	DW	00H
	DW	00H
	DW	02dH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
_SafeToPowerOffUnit DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG120143
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120144
	DW	00H
	DW	00H
	DW	01eH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120145
	DW	00H
	DW	00H
	DW	046H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
?CheckUpdateTracks@?1??UserWantsToUpdateSF@@9@9 DD FLAT:_FRAMEWIN_CreateIndirect ; `UserWantsToUpdateSF'::`2'::CheckUpdateTracks
	DD	FLAT:$SG120231
	DW	00H
	DW	014H
	DW	014H
	DW	0190H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120232
	DW	00H
	DW	00H
	DW	01eH
	DW	0190H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120233
	DW	00H
	DW	00H
	DW	046H
	DW	0190H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120234
	DW	03H
	DW	03cH
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120235
	DW	04H
	DW	0f0H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
?InvalidFilesResources@?1??DisplayInvalidFilesPopup@@9@9 DD FLAT:_FRAMEWIN_CreateIndirect ; `DisplayInvalidFilesPopup'::`2'::InvalidFilesResources
	DD	FLAT:$SG120249
	DW	00H
	DW	01eH
	DW	014H
	DW	0190H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120250
	DW	00H
	DW	00H
	DW	0aH
	DW	0186H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120251
	DW	00H
	DW	00H
	DW	028H
	DW	0186H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120252
	DW	01H
	DW	091H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
_DriverRect DW	064H
	DW	06bH
	DW	0e6H
	DW	0b4H
_VehicleRect DW	014aH
	DW	06bH
	DW	01ccH
	DW	0b4H
CONST	ENDS
_DATA	SEGMENT
_popupTitleTextColor DD 0ffffffH
$SG120090 DB	'SD CARD REMOVED!', 00H
	ORG $+3
$SG120091 DB	'Cannot record further data without card', 00H
$SG120092 DB	'What would you like to do?', 00H
	ORG $+1
$SG120093 DB	'POWER OFF', 00H
	ORG $+2
$SG120094 DB	'RUN WITHOUT', 00H
$SG120101 DB	'SD CARD INSERTED!', 00H
	ORG $+2
$SG120102 DB	'Must reset unit to start using this card', 00H
	ORG $+3
$SG120103 DB	'RESET UNIT', 00H
	ORG $+1
$SG120114 DB	'UPDATE', 00H
	ORG $+1
$SG120115 DB	'SKIP', 00H
	ORG $+3
$SG120118 DB	'Do Not Disconnect or Power Down', 00H
?NewFirmwareResources@?1??ReFlashYorN@@9@9 DD FLAT:_FRAMEWIN_CreateIndirect ; `ReFlashYorN'::`2'::NewFirmwareResources
	DD	FLAT:$SG120113
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120114
	DW	01H
	DW	028H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG120115
	DW	02H
	DW	0beH
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120116
	DW	00H
	DW	00H
	DW	0aH
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120117
	DW	00H
	DW	00H
	DW	028H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG120118
	DW	00H
	DW	00H
	DW	046H
	DW	0168H
	DW	01eH
	DW	02H
	ORG $+4
$SG120126 DB	'NEW SU FIRMWARE FOUND', 00H
	ORG $+2
$SG120127 DB	'Update Connected SU Firmware?', 00H
	ORG $+2
$SG120129 DB	'NEW FIRMWARE FOUND', 00H
	ORG $+1
$SG120130 DB	'Update TraqDash Firmware?', 00H
	ORG $+2
$SG120132 DB	'NEW BOOTLOADER FOUND', 00H
	ORG $+3
$SG120133 DB	'Update TraqDash Bootloader?', 00H
$SG120136 DB	'Current Rev %1.2f, New Rev %1.2f', 00H
	ORG $+3
$SG120140 DB	'STATUS', 00H
	ORG $+1
$SG120141 DB	'Saving Files', 00H
	ORG $+3
$SG120143 DB	'STATUS', 00H
	ORG $+1
$SG120144 DB	'All files saved.', 00H
	ORG $+3
$SG120145 DB	'Powering off the unit.', 00H
	ORG $+1
$SG120163 DB	'r', 00H
	ORG $+2
$SG120164 DB	'544729.sno', 00H
	ORG $+1
$SG120168 DB	'r', 00H
	ORG $+2
$SG120169 DB	'testmode', 00H
	ORG $+3
$SG120173 DB	'r', 00H
	ORG $+2
$SG120174 DB	'tempcal', 00H
$SG120231 DB	'New Software Detected', 00H
	ORG $+2
$SG120232 DB	'New Track Definitions. Would you like', 00H
	ORG $+2
$SG120233 DB	'to update Start/Finish coordinates?', 00H
$SG120234 DB	'YES', 00H
$SG120235 DB	'NO', 00H
	ORG $+1
$SG120249 DB	'Check Your Settings', 00H
$SG120250 DB	'The following configuration(s)', 00H
	ORG $+1
$SG120251 DB	'were set to defaults:', 00H
	ORG $+2
$SG120252 DB	'OK', 00H
	ORG $+1
$SG120254 DB	'System', 00H
	ORG $+1
$SG120257 DB	', ', 00H
	ORG $+1
$SG120259 DB	'Vehicle', 00H
$SG120262 DB	', ', 00H
	ORG $+1
$SG120264 DB	'Track', 00H
	ORG $+2
$SG120267 DB	', ', 00H
	ORG $+1
$SG120269 DB	'Driver', 00H
	ORG $+1
$SG120302 DB	'Camera', 00H
	ORG $+1
$SG120318 DB	'USB', 00H
$SG120321 DB	'Camera', 00H
	ORG $+1
$SG120322 DB	'USB', 00H
$SG120326 DB	'Digital 4', 00H
	ORG $+2
$SG120332 DB	'Digital 5', 00H
	ORG $+2
$SG120335 DB	'WiFi', 00H
	ORG $+3
$SG120343 DB	'Analog %d', 00H
_DATA	ENDS
PUBLIC	_PowerOffUnit
PUBLIC	_InitializeTraqmateFiles
PUBLIC	_DisplaySplashScreen1
PUBLIC	_MainTask
EXTRN	_SIM_Tick:PROC
EXTRN	_GUI_Exec:PROC
EXTRN	_ProcessScreenMovement:PROC
EXTRN	_SetGear:PROC
EXTRN	_CreateTraqdashCamScreen:PROC
EXTRN	_CreateCameraSelection:PROC
EXTRN	_CreateCameraDelay:PROC
EXTRN	_CreateAeroGripScreen:PROC
EXTRN	_DisplayPersonalizationScreen:PROC
EXTRN	_DisplaySFKeyboard:PROC
EXTRN	_Display_TrackSettingMainScreen:PROC
EXTRN	_DisplaySessionDetailsScreen:PROC
EXTRN	_Display_GeneralConfig:PROC
EXTRN	_sysData:BYTE
EXTRN	_Display_VehicleSettingMainScreen:PROC
EXTRN	_DisplayNewScreenList:PROC
EXTRN	_SetWorkingTrackName:PROC
EXTRN	_SetUserMode:PROC
EXTRN	_StartupGoToRaceMode:PROC
EXTRN	_AnyGaugeScreen:PROC
EXTRN	_raceModeState:DWORD
EXTRN	_GUI_GetTime:PROC
EXTRN	_ValidateRaceScreens:PROC
EXTRN	_GetLastScreen:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_WIDGET_SetDefaultEffect:PROC
EXTRN	_WIDGET_Effect_None:BYTE
EXTRN	_InitializeLEDs:PROC
EXTRN	_InitializeLEDStructures:PROC
EXTRN	_InitCommSimulatorTask:PROC
EXTRN	_SIM_Init:PROC
EXTRN	_FRAMEWIN_SetDefaultClientColor:PROC
EXTRN	_SCROLLBAR_SetDefaultSkin:PROC
EXTRN	_SCROLLBAR_DrawSkinFlex:PROC
EXTRN	_RADIO_SetDefaultSkin:PROC
EXTRN	_RADIO_DrawSkinFlex:PROC
EXTRN	_HEADER_SetDefaultSkin:PROC
EXTRN	_HEADER_DrawSkinFlex:PROC
EXTRN	_FRAMEWIN_SetDefaultSkin:PROC
EXTRN	_FRAMEWIN_DrawSkinFlex:PROC
EXTRN	_DROPDOWN_SetDefaultSkin:PROC
EXTRN	_DROPDOWN_DrawSkinFlex:PROC
EXTRN	_CHECKBOX_SetDefaultSkin:PROC
EXTRN	_CHECKBOX_DrawSkinFlex:PROC
EXTRN	_BUTTON_SetDefaultSkin:PROC
EXTRN	_BUTTON_DrawSkinFlex:PROC
EXTRN	_WarningPopupInit:PROC
EXTRN	_GUI_Init:PROC
EXTRN	_unsavedSysData:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\duii_main.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _MainTask
_TEXT	SEGMENT
tv87 = -220						; size = 4
_screenType$ = -20					; size = 4
_screen$ = -8						; size = 4
_MainTask PROC						; COMDAT
; Line 188
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 201
	mov	eax, 301				; 0000012dH
	mov	WORD PTR _unsavedSysData, ax
; Line 202
	mov	eax, 8
	mov	WORD PTR _unsavedSysData+2, ax
; Line 203
	mov	BYTE PTR _unsavedSysData+4, 140		; 0000008cH
; Line 206
	mov	BYTE PTR _unsavedSysData+220, 0
; Line 209
	mov	DWORD PTR _unsavedSysData+96, 399999	; 00061a7fH
; Line 210
	mov	DWORD PTR _unsavedSysData+100, 2
; Line 211
	mov	DWORD PTR _unsavedSysData+104, 16	; 00000010H
; Line 212
	mov	DWORD PTR _unsavedSysData+108, 150	; 00000096H
; Line 215
	call	_GUI_Init
; Line 216
	call	_DisplaySplashScreen1
; Line 218
	call	_WarningPopupInit
; Line 220
	push	OFFSET _BUTTON_DrawSkinFlex
	call	_BUTTON_SetDefaultSkin
	add	esp, 4
; Line 222
	push	OFFSET _CHECKBOX_DrawSkinFlex
	call	_CHECKBOX_SetDefaultSkin
	add	esp, 4
; Line 223
	push	OFFSET _DROPDOWN_DrawSkinFlex
	call	_DROPDOWN_SetDefaultSkin
	add	esp, 4
; Line 224
	push	OFFSET _FRAMEWIN_DrawSkinFlex
	call	_FRAMEWIN_SetDefaultSkin
	add	esp, 4
; Line 225
	push	OFFSET _HEADER_DrawSkinFlex
	call	_HEADER_SetDefaultSkin
	add	esp, 4
; Line 226
	push	OFFSET _RADIO_DrawSkinFlex
	call	_RADIO_SetDefaultSkin
	add	esp, 4
; Line 227
	push	OFFSET _SCROLLBAR_DrawSkinFlex
	call	_SCROLLBAR_SetDefaultSkin
	add	esp, 4
; Line 228
	push	15790320				; 00f0f0f0H
	call	_FRAMEWIN_SetDefaultClientColor
	add	esp, 4
; Line 231
	call	_SIM_Init
; Line 232
	call	_InitializeTraqmateFiles
; Line 233
	call	_InitCommSimulatorTask
; Line 234
	call	_InitializeLEDStructures
; Line 235
	call	_InitializeLEDs
; Line 305
	push	OFFSET _WIDGET_Effect_None
	call	_WIDGET_SetDefaultEffect
	add	esp, 4
; Line 307
	call	_GetScreenType
	push	eax
	call	_GetLastScreen
	add	esp, 4
	mov	DWORD PTR _screen$[ebp], eax
; Line 308
	call	_GetScreenType
	mov	DWORD PTR _screenType$[ebp], eax
; Line 310
	call	_ValidateRaceScreens
$LN28@MainTask:
; Line 313
	call	_GUI_GetTime
	sub	eax, DWORD PTR _splashScreenStartTime
	cmp	eax, 4000				; 00000fa0H
	jge	SHORT $LN27@MainTask
; Line 314
	jmp	SHORT $LN28@MainTask
$LN27@MainTask:
; Line 316
	mov	DWORD PTR _raceModeState, 0
; Line 318
	mov	eax, DWORD PTR _screenType$[ebp]
	push	eax
	call	_AnyGaugeScreen
	add	esp, 4
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN26@MainTask
; Line 320
	call	_StartupGoToRaceMode
	test	eax, eax
	jne	SHORT $LN25@MainTask
; Line 322
	mov	DWORD PTR _screenType$[ebp], 1
; Line 323
	mov	DWORD PTR _screen$[ebp], 0
$LN25@MainTask:
; Line 324
	jmp	SHORT $LN24@MainTask
$LN26@MainTask:
; Line 326
	push	1
	call	_SetUserMode
	add	esp, 4
$LN24@MainTask:
; Line 328
	mov	eax, DWORD PTR _screenType$[ebp]
	mov	DWORD PTR tv87[ebp], eax
	mov	ecx, DWORD PTR tv87[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv87[ebp], ecx
	cmp	DWORD PTR tv87[ebp], 36			; 00000024H
	ja	$LN4@MainTask
	mov	edx, DWORD PTR tv87[ebp]
	movzx	eax, BYTE PTR $LN31@MainTask[edx]
	jmp	DWORD PTR $LN32@MainTask[eax*4]
$LN21@MainTask:
; Line 334
	jmp	$LN22@MainTask
$LN20@MainTask:
; Line 337
	call	_SetWorkingTrackName
$LN19@MainTask:
; Line 347
	push	0
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _screenType$[ebp]
	push	ecx
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 348
	jmp	$LN22@MainTask
$LN18@MainTask:
; Line 351
	push	0
	call	_Display_VehicleSettingMainScreen
	add	esp, 4
; Line 352
	jmp	$LN22@MainTask
$LN17@MainTask:
; Line 355
	movzx	eax, BYTE PTR _sysData+228
	cmp	eax, 1
	jne	SHORT $LN16@MainTask
; Line 356
	push	0
	call	_Display_GeneralConfig
	add	esp, 4
	jmp	SHORT $LN15@MainTask
$LN16@MainTask:
; Line 357
	call	_DisplaySessionDetailsScreen
$LN15@MainTask:
; Line 358
	jmp	$LN22@MainTask
$LN14@MainTask:
; Line 361
	push	0
	call	_Display_TrackSettingMainScreen
	add	esp, 4
; Line 362
	jmp	$LN22@MainTask
$LN13@MainTask:
; Line 365
	push	0
	mov	eax, DWORD PTR _screen$[ebp]
	push	eax
	call	_DisplaySFKeyboard
	add	esp, 8
; Line 366
	jmp	$LN22@MainTask
$LN12@MainTask:
; Line 371
	push	0
	push	10					; 0000000aH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	10					; 0000000aH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 372
	jmp	SHORT $LN22@MainTask
$LN11@MainTask:
; Line 376
	push	0
	push	10					; 0000000aH
	call	_GetLastScreen
	add	esp, 4
	push	eax
	push	10					; 0000000aH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 377
	jmp	SHORT $LN22@MainTask
$LN10@MainTask:
; Line 380
	push	0
	call	_DisplayPersonalizationScreen
	add	esp, 4
; Line 381
	jmp	SHORT $LN22@MainTask
$LN9@MainTask:
; Line 384
	push	0
	call	_CreateAeroGripScreen
	add	esp, 4
; Line 385
	jmp	SHORT $LN22@MainTask
$LN8@MainTask:
; Line 388
	push	0
	call	_CreateCameraDelay
	add	esp, 4
; Line 389
	jmp	SHORT $LN22@MainTask
$LN7@MainTask:
; Line 392
	push	0
	call	_CreateCameraSelection
	add	esp, 4
; Line 393
	jmp	SHORT $LN22@MainTask
$LN6@MainTask:
; Line 396
	push	0
	call	_CreateTraqdashCamScreen
	add	esp, 4
; Line 397
	jmp	SHORT $LN22@MainTask
$LN5@MainTask:
; Line 400
	push	0
	push	6
	push	6
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 401
	jmp	SHORT $LN22@MainTask
$LN4@MainTask:
; Line 404
	push	0
	call	_Display_GeneralConfig
	add	esp, 4
$LN22@MainTask:
; Line 408
	push	0
	call	_SetGear
	add	esp, 4
$LN3@MainTask:
; Line 433
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN29@MainTask
; Line 437
	call	_ProcessScreenMovement
; Line 439
	call	_GUI_Exec
; Line 440
	mov	BYTE PTR _lockupSemaphore, 0
; Line 448
	call	_SIM_Tick
	test	eax, eax
	je	SHORT $LN1@MainTask
; Line 450
	push	0
	push	0
	push	0
	call	_PowerOffUnit
	add	esp, 12					; 0000000cH
; Line 451
	jmp	SHORT $LN29@MainTask
$LN1@MainTask:
; Line 507
	jmp	SHORT $LN3@MainTask
$LN29@MainTask:
; Line 508
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN32@MainTask:
	DD	$LN19@MainTask
	DD	$LN21@MainTask
	DD	$LN20@MainTask
	DD	$LN18@MainTask
	DD	$LN17@MainTask
	DD	$LN14@MainTask
	DD	$LN11@MainTask
	DD	$LN12@MainTask
	DD	$LN13@MainTask
	DD	$LN10@MainTask
	DD	$LN9@MainTask
	DD	$LN7@MainTask
	DD	$LN8@MainTask
	DD	$LN6@MainTask
	DD	$LN5@MainTask
	DD	$LN4@MainTask
$LN31@MainTask:
	DB	0
	DB	1
	DB	1
	DB	1
	DB	2
	DB	0
	DB	0
	DB	3
	DB	0
	DB	0
	DB	4
	DB	5
	DB	0
	DB	0
	DB	6
	DB	7
	DB	15					; 0000000fH
	DB	6
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	8
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	9
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	15					; 0000000fH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
	DB	12					; 0000000cH
	DB	13					; 0000000dH
	DB	15					; 0000000fH
	DB	14					; 0000000eH
_MainTask ENDP
_TEXT	ENDS
PUBLIC	_ConfigureForNoSDCard
EXTRN	_ClearNameStruct:PROC
EXTRN	_ResetAllFileLists:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ConfigureForNoSDCard
_TEXT	SEGMENT
_ConfigureForNoSDCard PROC				; COMDAT
; Line 514
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 516
	mov	DWORD PTR _unsavedSysData+200, 0
; Line 526
	mov	DWORD PTR _unsavedSysData+136, 2
; Line 529
	push	1
	call	_ResetAllFileLists
	add	esp, 4
; Line 531
	call	_ClearNameStruct
; Line 532
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ConfigureForNoSDCard ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_SetPopupDefaults
EXTRN	_BUTTON_SetDefaultTextColor:PROC
EXTRN	_BUTTON_SetDefaultFont:PROC
EXTRN	_TEXT_SetDefaultFont:PROC
EXTRN	_FRAMEWIN_SetDefaultFont:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
EXTRN	_FRAMEWIN_SetSkinFlexProps:PROC
EXTRN	_FRAMEWIN_GetSkinFlexProps:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetPopupDefaults
_TEXT	SEGMENT
tv64 = -252						; size = 4
_Props$ = -52						; size = 44
__$ArrayPad$ = -4					; size = 4
_type$ = 8						; size = 4
_SetPopupDefaults PROC					; COMDAT
; Line 575
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 579
	mov	eax, DWORD PTR _type$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 3
	ja	$LN5@SetPopupDe
	mov	ecx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN12@SetPopupDe[ecx*4]
$LN4@SetPopupDe:
; Line 582
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_GetSkinFlexProps
	add	esp, 8
; Line 583
	mov	DWORD PTR _Props$[ebp], 0
; Line 584
	mov	DWORD PTR _Props$[ebp+4], 16765040	; 00ffd070H
; Line 585
	mov	DWORD PTR _Props$[ebp+8], 11468800	; 00af0000H
; Line 586
	mov	DWORD PTR _Props$[ebp+12], 11468800	; 00af0000H
; Line 587
	mov	DWORD PTR _Props$[ebp+16], 16765040	; 00ffd070H
; Line 588
	mov	DWORD PTR _Props$[ebp+20], 7
; Line 589
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_SetSkinFlexProps
	add	esp, 8
; Line 590
	mov	DWORD PTR _popupTitleTextColor, 16777215 ; 00ffffffH
; Line 591
	jmp	$LN5@SetPopupDe
$LN3@SetPopupDe:
; Line 594
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_GetSkinFlexProps
	add	esp, 8
; Line 595
	mov	DWORD PTR _Props$[ebp], 0
; Line 596
	mov	DWORD PTR _Props$[ebp+4], 38655		; 000096ffH
; Line 597
	mov	DWORD PTR _Props$[ebp+8], 65535		; 0000ffffH
; Line 598
	mov	DWORD PTR _Props$[ebp+12], 38655	; 000096ffH
; Line 599
	mov	DWORD PTR _Props$[ebp+16], 65535	; 0000ffffH
; Line 600
	mov	DWORD PTR _Props$[ebp+20], 7
; Line 601
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_SetSkinFlexProps
	add	esp, 8
; Line 602
	mov	DWORD PTR _popupTitleTextColor, 0
; Line 603
	jmp	$LN5@SetPopupDe
$LN2@SetPopupDe:
; Line 606
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_GetSkinFlexProps
	add	esp, 8
; Line 607
	mov	DWORD PTR _Props$[ebp], 0
; Line 608
	mov	DWORD PTR _Props$[ebp+4], 197553	; 000303b1H
; Line 609
	mov	DWORD PTR _Props$[ebp+8], 255		; 000000ffH
; Line 610
	mov	DWORD PTR _Props$[ebp+12], 197553	; 000303b1H
; Line 611
	mov	DWORD PTR _Props$[ebp+16], 255		; 000000ffH
; Line 612
	mov	DWORD PTR _Props$[ebp+20], 7
; Line 613
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_SetSkinFlexProps
	add	esp, 8
; Line 614
	mov	DWORD PTR _popupTitleTextColor, 16777215 ; 00ffffffH
; Line 615
	jmp	SHORT $LN5@SetPopupDe
$LN1@SetPopupDe:
; Line 618
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_GetSkinFlexProps
	add	esp, 8
; Line 619
	mov	DWORD PTR _Props$[ebp], 0
; Line 620
	mov	DWORD PTR _Props$[ebp+4], 2270472	; 0022a508H
; Line 621
	mov	DWORD PTR _Props$[ebp+8], 2817792	; 002aff00H
; Line 622
	mov	DWORD PTR _Props$[ebp+12], 2270472	; 0022a508H
; Line 623
	mov	DWORD PTR _Props$[ebp+16], 2817792	; 002aff00H
; Line 624
	mov	DWORD PTR _Props$[ebp+20], 7
; Line 625
	push	0
	lea	eax, DWORD PTR _Props$[ebp]
	push	eax
	call	_FRAMEWIN_SetSkinFlexProps
	add	esp, 8
; Line 626
	mov	DWORD PTR _popupTitleTextColor, 16777215 ; 00ffffffH
$LN5@SetPopupDe:
; Line 630
	push	OFFSET _GUI_Font24_ASCII
	call	_FRAMEWIN_SetDefaultFont
	add	esp, 4
; Line 631
	push	OFFSET _GUI_Font24_ASCII
	call	_TEXT_SetDefaultFont
	add	esp, 4
; Line 632
	push	OFFSET _GUI_Font24_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 633
	push	0
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 634
	push	1
	push	0
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 635
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@SetPopupDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN11@SetPopupDe:
	DD	1
	DD	$LN10@SetPopupDe
$LN10@SetPopupDe:
	DD	-52					; ffffffccH
	DD	44					; 0000002cH
	DD	$LN9@SetPopupDe
$LN9@SetPopupDe:
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
	npad	2
$LN12@SetPopupDe:
	DD	$LN4@SetPopupDe
	DD	$LN3@SetPopupDe
	DD	$LN2@SetPopupDe
	DD	$LN1@SetPopupDe
_SetPopupDefaults ENDP
_TEXT	ENDS
PUBLIC	_SDCardRemoved
EXTRN	_UnhideSprites:PROC
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_glbBlackoutFlag:DWORD
EXTRN	_HideSprites:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SDCardRemoved
_TEXT	SEGMENT
_SDCardRemoved PROC					; COMDAT
; Line 645
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 655
	call	_HideSprites
; Line 657
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 659
	mov	DWORD PTR _glbBlackoutFlag, 1
; Line 661
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET ?SDCardRemovedResources@?1??SDCardRemoved@@9@9
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN2@SDCardRemo
; Line 663
	call	_UnhideSprites
; Line 664
	xor	eax, eax
	jmp	SHORT $LN3@SDCardRemo
; Line 666
	jmp	SHORT $LN3@SDCardRemo
$LN2@SDCardRemo:
; Line 668
	call	_UnhideSprites
; Line 669
	mov	eax, 1
$LN3@SDCardRemo:
; Line 671
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SDCardRemoved ENDP
_TEXT	ENDS
PUBLIC	_SDCardReinserted
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SDCardReinserted
_TEXT	SEGMENT
_SDCardReinserted PROC					; COMDAT
; Line 682
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 690
	call	_HideSprites
; Line 692
	push	2
	call	_SetPopupDefaults
	add	esp, 4
; Line 694
	mov	DWORD PTR _glbBlackoutFlag, 1
; Line 696
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	3
	push	OFFSET ?SDCardReinsertedResources@?1??SDCardReinserted@@9@9
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN2@SDCardRein
; Line 701
	call	_UnhideSprites
; Line 702
	xor	eax, eax
	jmp	SHORT $LN3@SDCardRein
; Line 704
	jmp	SHORT $LN3@SDCardRein
$LN2@SDCardRein:
; Line 706
	call	_UnhideSprites
; Line 707
	mov	eax, 1
$LN3@SDCardRein:
; Line 709
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SDCardReinserted ENDP
_TEXT	ENDS
PUBLIC	__real@4059000000000000
PUBLIC	__$ArrayPad$
PUBLIC	_ReFlashYorN
EXTRN	_sprintf:PROC
EXTRN	_suData:BYTE
EXTRN	__fltused:DWORD
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _ReFlashYorN
_TEXT	SEGMENT
tv67 = -260						; size = 4
_oldrev$ = -60						; size = 4
_tempstr$ = -48						; size = 40
__$ArrayPad$ = -4					; size = 4
_codetype$ = 8						; size = 4
_rev$ = 12						; size = 4
_ReFlashYorN PROC					; COMDAT
; Line 717
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 730
	push	3
	call	_SetPopupDefaults
	add	esp, 4
; Line 732
	lea	eax, DWORD PTR _tempstr$[ebp]
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+76, eax
; Line 734
	mov	eax, DWORD PTR _codetype$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 0
	je	SHORT $LN5@ReFlashYor
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN4@ReFlashYor
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN3@ReFlashYor
	jmp	SHORT $LN6@ReFlashYor
$LN5@ReFlashYor:
; Line 736
	movzx	eax, WORD PTR _suData+20
	mov	DWORD PTR _oldrev$[ebp], eax
; Line 737
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+4, OFFSET $SG120126
; Line 738
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+100, OFFSET $SG120127
; Line 739
	jmp	SHORT $LN6@ReFlashYor
$LN4@ReFlashYor:
; Line 741
	movzx	eax, WORD PTR _unsavedSysData
	mov	DWORD PTR _oldrev$[ebp], eax
; Line 742
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+4, OFFSET $SG120129
; Line 743
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+100, OFFSET $SG120130
; Line 744
	jmp	SHORT $LN6@ReFlashYor
$LN3@ReFlashYor:
; Line 746
	mov	eax, DWORD PTR _unsavedSysData+108
	mov	DWORD PTR _oldrev$[ebp], eax
; Line 747
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+4, OFFSET $SG120132
; Line 748
	mov	DWORD PTR ?NewFirmwareResources@?1??ReFlashYorN@@9@9+100, OFFSET $SG120133
$LN6@ReFlashYor:
; Line 752
	fild	DWORD PTR _rev$[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	fild	DWORD PTR _oldrev$[ebp]
	fdiv	QWORD PTR __real@4059000000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG120136
	lea	eax, DWORD PTR _tempstr$[ebp]
	push	eax
	call	_sprintf
	add	esp, 24					; 00000018H
; Line 754
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET ?NewFirmwareResources@?1??ReFlashYorN@@9@9
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN2@ReFlashYor
; Line 759
	mov	eax, 1
	jmp	SHORT $LN1@ReFlashYor
	jmp	SHORT $LN1@ReFlashYor
$LN2@ReFlashYor:
; Line 761
	xor	eax, eax
$LN1@ReFlashYor:
; Line 762
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@ReFlashYor
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@ReFlashYor:
	DD	1
	DD	$LN11@ReFlashYor
$LN11@ReFlashYor:
	DD	-48					; ffffffd0H
	DD	40					; 00000028H
	DD	$LN10@ReFlashYor
$LN10@ReFlashYor:
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
_ReFlashYorN ENDP
_TEXT	ENDS
PUBLIC	_SaveFilesAndPowerDown
EXTRN	_WM_DeleteWindow:PROC
EXTRN	_GUI_Delay:PROC
EXTRN	_GUI_CreateDialogBox:PROC
EXTRN	_nonModalPopupCallback:PROC
EXTRN	_ExitRecord:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PowerOffUnit
_TEXT	SEGMENT
_hDialog$ = -8						; size = 4
_owner$ = 8						; size = 4
_reset_unit$ = 12					; size = 1
_delay$ = 16						; size = 4
_PowerOffUnit PROC					; COMDAT
; Line 778
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 781
	cmp	DWORD PTR _unsavedSysData+136, 1
	je	SHORT $LN2@PowerOffUn
; Line 782
	push	1
	call	_ExitRecord
	add	esp, 4
$LN2@PowerOffUn:
; Line 784
	call	_HideSprites
; Line 786
	mov	DWORD PTR _glbBlackoutFlag, 1
; Line 787
	push	0
	call	_SetPopupDefaults
	add	esp, 4
; Line 790
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _nonModalPopupCallback
	push	2
	push	OFFSET _ShuttingDownResources
	call	_GUI_CreateDialogBox
	add	esp, 24					; 00000018H
	mov	DWORD PTR _hDialog$[ebp], eax
; Line 791
	call	_GUI_Exec
; Line 793
	call	_SaveFilesAndPowerDown
; Line 795
	cmp	DWORD PTR _delay$[ebp], 0
	jne	SHORT $LN1@PowerOffUn
; Line 796
	mov	DWORD PTR _delay$[ebp], 1
$LN1@PowerOffUn:
; Line 797
	mov	eax, DWORD PTR _delay$[ebp]
	push	eax
	call	_GUI_Delay
	add	esp, 4
; Line 799
	mov	eax, DWORD PTR _hDialog$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
; Line 803
	push	10					; 0000000aH
	push	10					; 0000000aH
	mov	eax, DWORD PTR _owner$[ebp]
	push	eax
	push	OFFSET _nonModalPopupCallback
	push	3
	push	OFFSET _SafeToPowerOffUnit
	call	_GUI_CreateDialogBox
	add	esp, 24					; 00000018H
; Line 812
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PowerOffUnit ENDP
_TEXT	ENDS
EXTRN	_WriteUserDataEvent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SaveFilesAndPowerDown
_TEXT	SEGMENT
_SaveFilesAndPowerDown PROC				; COMDAT
; Line 818
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 820
	push	30					; 0000001eH
	call	_SetUserMode
	add	esp, 4
; Line 823
	push	0
	call	_WriteUserDataEvent
	add	esp, 4
; Line 837
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SaveFilesAndPowerDown ENDP
_TEXT	ENDS
PUBLIC	_InitializeTraqmateData
PUBLIC	_UserWantsToUpdateSF
PUBLIC	_NewSWVersion
EXTRN	_UpdateSFLines:PROC
EXTRN	_ArchiveSessions:PROC
EXTRN	_InitializeDirectoryStructure:PROC
EXTRN	_LoadPersonalizationData:PROC
EXTRN	_fclose:PROC
EXTRN	_fopen:PROC
EXTRN	_ConfigureHomeDirectory:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InitializeTraqmateFiles
_TEXT	SEGMENT
_pTestFile$ = -8					; size = 4
_InitializeTraqmateFiles PROC				; COMDAT
; Line 859
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 863
	call	_ConfigureHomeDirectory
; Line 865
	push	OFFSET $SG120163
	push	OFFSET $SG120164
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pTestFile$[ebp], eax
	cmp	DWORD PTR _pTestFile$[ebp], 0
	je	SHORT $LN8@Initialize
; Line 867
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 868
	mov	BYTE PTR _unsavedSysData+144, 1
	jmp	SHORT $LN7@Initialize
$LN8@Initialize:
; Line 870
	mov	BYTE PTR _unsavedSysData+144, 0
$LN7@Initialize:
; Line 872
	push	OFFSET $SG120168
	push	OFFSET $SG120169
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pTestFile$[ebp], eax
	cmp	DWORD PTR _pTestFile$[ebp], 0
	je	SHORT $LN6@Initialize
; Line 874
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 875
	mov	DWORD PTR _testMode, 1
	jmp	SHORT $LN5@Initialize
$LN6@Initialize:
; Line 877
	mov	DWORD PTR _testMode, 0
$LN5@Initialize:
; Line 879
	push	OFFSET $SG120173
	push	OFFSET $SG120174
	call	_fopen
	add	esp, 8
	mov	DWORD PTR _pTestFile$[ebp], eax
	cmp	DWORD PTR _pTestFile$[ebp], 0
	je	SHORT $LN4@Initialize
; Line 881
	mov	eax, DWORD PTR _pTestFile$[ebp]
	push	eax
	call	_fclose
	add	esp, 4
; Line 882
	mov	DWORD PTR _unsavedSysData+208, 1
	jmp	SHORT $LN3@Initialize
$LN4@Initialize:
; Line 884
	mov	DWORD PTR _unsavedSysData+208, 0
$LN3@Initialize:
; Line 886
	call	_LoadPersonalizationData
; Line 888
	call	_InitializeDirectoryStructure
; Line 924
	call	_ArchiveSessions
; Line 927
	call	_NewSWVersion
	test	eax, eax
	je	SHORT $LN2@Initialize
; Line 930
	call	_UserWantsToUpdateSF
	test	eax, eax
	je	SHORT $LN2@Initialize
; Line 933
	call	_UpdateSFLines
$LN2@Initialize:
; Line 937
	call	_InitializeTraqmateData
; Line 938
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InitializeTraqmateFiles ENDP
_TEXT	ENDS
PUBLIC	_reverse
PUBLIC	_local_itoa
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _local_itoa
_TEXT	SEGMENT
_i$ = -8						; size = 4
_n$ = 8							; size = 4
_s$ = 12						; size = 4
_local_itoa PROC					; COMDAT
; Line 942
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 945
	mov	DWORD PTR _i$[ebp], 0
$LN3@local_itoa:
; Line 947
	mov	eax, DWORD PTR _n$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	add	edx, 48					; 00000030H
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], dl
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
; Line 948
	mov	eax, DWORD PTR _n$[ebp]
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _n$[ebp], eax
	cmp	DWORD PTR _n$[ebp], 0
	jg	SHORT $LN3@local_itoa
; Line 949
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	BYTE PTR [eax], 0
; Line 950
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_reverse
	add	esp, 4
; Line 951
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_local_itoa ENDP
_TEXT	ENDS
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _reverse
_TEXT	SEGMENT
_c$ = -29						; size = 1
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_s$ = 8							; size = 4
_reverse PROC						; COMDAT
; Line 955
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 959
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _j$[ebp], eax
	jmp	SHORT $LN3@reverse
$LN2@reverse:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _j$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _j$[ebp], ecx
$LN3@reverse:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _j$[ebp]
	jge	SHORT $LN4@reverse
; Line 961
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _c$[ebp], cl
; Line 962
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, DWORD PTR _j$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl
; Line 963
	mov	eax, DWORD PTR _s$[ebp]
	add	eax, DWORD PTR _j$[ebp]
	mov	cl, BYTE PTR _c$[ebp]
	mov	BYTE PTR [eax], cl
; Line 964
	jmp	SHORT $LN2@reverse
$LN4@reverse:
; Line 965
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_reverse ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__WriteFile@20:PROC
EXTRN	__imp__SetFilePointer@16:PROC
EXTRN	__imp__CloseHandle@4:PROC
EXTRN	_strcmp:PROC
EXTRN	__imp__ReadFile@20:PROC
EXTRN	__imp__OpenFile@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _NewSWVersion
_TEXT	SEGMENT
_dist$120212 = -232					; size = 4
_oldVersionStr$120205 = -220				; size = 10
_newVersionStr$ = -200					; size = 10
_version$ = -180					; size = 4
_bytesReadWritten$ = -168				; size = 4
_fStruct$ = -156					; size = 136
_hFile$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_NewSWVersion PROC					; COMDAT
; Line 977
	push	ebp
	mov	ebp, esp
	sub	esp, 428				; 000001acH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-428]
	mov	ecx, 107				; 0000006bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 981
	mov	DWORD PTR _version$[ebp], 301		; 0000012dH
; Line 985
	lea	eax, DWORD PTR _newVersionStr$[ebp]
	push	eax
	mov	ecx, DWORD PTR _version$[ebp]
	push	ecx
	call	_local_itoa
	add	esp, 8
; Line 987
	mov	esi, esp
	push	2
	lea	eax, DWORD PTR _fStruct$[ebp]
	push	eax
	push	OFFSET _VERSION_PATH
	call	DWORD PTR __imp__OpenFile@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hFile$[ebp], eax
	cmp	DWORD PTR _hFile$[ebp], -1
	je	$LN7@NewSWVersi
; Line 992
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _bytesReadWritten$[ebp]
	push	eax
	push	10					; 0000000aH
	lea	ecx, DWORD PTR _oldVersionStr$120205[ebp]
	push	ecx
	mov	edx, DWORD PTR _hFile$[ebp]
	push	edx
	call	DWORD PTR __imp__ReadFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, 1
	jne	$LN6@NewSWVersi
; Line 995
	mov	eax, DWORD PTR _bytesReadWritten$[ebp]
	mov	BYTE PTR _oldVersionStr$120205[ebp+eax], 0
; Line 998
	lea	eax, DWORD PTR _oldVersionStr$120205[ebp]
	push	eax
	lea	ecx, DWORD PTR _newVersionStr$[ebp]
	push	ecx
	call	_strcmp
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@NewSWVersi
; Line 1000
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1001
	xor	eax, eax
	jmp	$LN8@NewSWVersi
; Line 1003
	jmp	SHORT $LN4@NewSWVersi
$LN5@NewSWVersi:
; Line 1008
	mov	DWORD PTR _dist$120212[ebp], 0
; Line 1009
	mov	esi, esp
	push	0
	push	0
	mov	eax, DWORD PTR _dist$120212[ebp]
	push	eax
	mov	ecx, DWORD PTR _hFile$[ebp]
	push	ecx
	call	DWORD PTR __imp__SetFilePointer@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1010
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _bytesReadWritten$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newVersionStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _newVersionStr$[ebp]
	push	edx
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1011
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1012
	mov	eax, 1
	jmp	$LN8@NewSWVersi
$LN4@NewSWVersi:
; Line 1015
	jmp	SHORT $LN3@NewSWVersi
$LN6@NewSWVersi:
; Line 1017
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1018
	mov	eax, 1
	jmp	SHORT $LN8@NewSWVersi
$LN3@NewSWVersi:
; Line 1021
	jmp	SHORT $LN2@NewSWVersi
$LN7@NewSWVersi:
; Line 1024
	mov	esi, esp
	push	4096					; 00001000H
	lea	eax, DWORD PTR _fStruct$[ebp]
	push	eax
	push	OFFSET _VERSION_PATH
	call	DWORD PTR __imp__OpenFile@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hFile$[ebp], eax
	cmp	DWORD PTR _hFile$[ebp], -1
	je	SHORT $LN2@NewSWVersi
; Line 1027
	mov	esi, esp
	push	0
	lea	eax, DWORD PTR _bytesReadWritten$[ebp]
	push	eax
	lea	ecx, DWORD PTR _newVersionStr$[ebp]
	push	ecx
	call	_strlen
	add	esp, 4
	push	eax
	lea	edx, DWORD PTR _newVersionStr$[ebp]
	push	edx
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__WriteFile@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 1028
	mov	esi, esp
	mov	eax, DWORD PTR _hFile$[ebp]
	push	eax
	call	DWORD PTR __imp__CloseHandle@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@NewSWVersi:
; Line 1031
	mov	eax, 1
$LN8@NewSWVersi:
; Line 1032
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@NewSWVersi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 428				; 000001acH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@NewSWVersi:
	DD	4
	DD	$LN14@NewSWVersi
$LN14@NewSWVersi:
	DD	-156					; ffffff64H
	DD	136					; 00000088H
	DD	$LN10@NewSWVersi
	DD	-168					; ffffff58H
	DD	4
	DD	$LN11@NewSWVersi
	DD	-200					; ffffff38H
	DD	10					; 0000000aH
	DD	$LN12@NewSWVersi
	DD	-220					; ffffff24H
	DD	10					; 0000000aH
	DD	$LN13@NewSWVersi
$LN13@NewSWVersi:
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN12@NewSWVersi:
	DB	110					; 0000006eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	86					; 00000056H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
$LN11@NewSWVersi:
	DB	98					; 00000062H
	DB	121					; 00000079H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	87					; 00000057H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
$LN10@NewSWVersi:
	DB	102					; 00000066H
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	117					; 00000075H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_NewSWVersion ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _UserWantsToUpdateSF
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_UserWantsToUpdateSF PROC				; COMDAT
; Line 1092
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1103
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 1105
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET ?CheckUpdateTracks@?1??UserWantsToUpdateSF@@9@9
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	cmp	eax, 3
	jne	SHORT $LN2@UserWantsT
; Line 1106
	mov	DWORD PTR _retval$[ebp], 1
	jmp	SHORT $LN1@UserWantsT
$LN2@UserWantsT:
; Line 1107
	mov	DWORD PTR _retval$[ebp], 0
$LN1@UserWantsT:
; Line 1109
	call	_DisplaySplashScreen1
; Line 1110
	mov	eax, DWORD PTR _retval$[ebp]
; Line 1111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UserWantsToUpdateSF ENDP
_TEXT	ENDS
PUBLIC	_DisplayInvalidFilesPopup
EXTRN	_ReadDataStructures:PROC
EXTRN	_CreateTracks:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InitializeTraqmateData
_TEXT	SEGMENT
_retval$ = -8						; size = 4
_InitializeTraqmateData PROC				; COMDAT
; Line 1115
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1118
	call	_CreateTracks
; Line 1120
	call	_ReadDataStructures
	mov	DWORD PTR _retval$[ebp], eax
	cmp	DWORD PTR _retval$[ebp], 0
	je	SHORT $LN1@Initialize@2
; Line 1124
	mov	eax, DWORD PTR _retval$[ebp]
	push	eax
	call	_DisplayInvalidFilesPopup
	add	esp, 4
$LN1@Initialize@2:
; Line 1126
	push	0
	call	_ResetAllFileLists
	add	esp, 4
; Line 1127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_InitializeTraqmateData ENDP
_TEXT	ENDS
EXTRN	_strcat:PROC
EXTRN	_systemSettingsPopupScreen:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayInvalidFilesPopup
_TEXT	SEGMENT
_anyItemSet$ = -5					; size = 1
_files$ = 8						; size = 4
_DisplayInvalidFilesPopup PROC				; COMDAT
; Line 1136
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1137
	mov	BYTE PTR _anyItemSet$[ebp], 0
; Line 1146
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 1148
	mov	DWORD PTR _glbBlackoutFlag, 1
; Line 1150
	mov	DWORD PTR _systemSettingsPopupScreen, 8
; Line 1152
	mov	BYTE PTR _fileList, 0
; Line 1153
	mov	eax, DWORD PTR _files$[ebp]
	and	eax, 1
	je	SHORT $LN10@DisplayInv
; Line 1155
	push	OFFSET $SG120254
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
; Line 1156
	mov	BYTE PTR _anyItemSet$[ebp], 1
$LN10@DisplayInv:
; Line 1158
	mov	eax, DWORD PTR _files$[ebp]
	and	eax, 2
	je	SHORT $LN9@DisplayInv
; Line 1160
	movzx	eax, BYTE PTR _anyItemSet$[ebp]
	test	eax, eax
	je	SHORT $LN8@DisplayInv
; Line 1161
	push	OFFSET $SG120257
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN7@DisplayInv
$LN8@DisplayInv:
; Line 1162
	mov	BYTE PTR _anyItemSet$[ebp], 1
$LN7@DisplayInv:
; Line 1163
	push	OFFSET $SG120259
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
$LN9@DisplayInv:
; Line 1165
	mov	eax, DWORD PTR _files$[ebp]
	and	eax, 4
	je	SHORT $LN6@DisplayInv
; Line 1167
	movzx	eax, BYTE PTR _anyItemSet$[ebp]
	test	eax, eax
	je	SHORT $LN5@DisplayInv
; Line 1168
	push	OFFSET $SG120262
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN4@DisplayInv
$LN5@DisplayInv:
; Line 1169
	mov	BYTE PTR _anyItemSet$[ebp], 1
$LN4@DisplayInv:
; Line 1170
	push	OFFSET $SG120264
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
$LN6@DisplayInv:
; Line 1172
	mov	eax, DWORD PTR _files$[ebp]
	and	eax, 8
	je	SHORT $LN3@DisplayInv
; Line 1174
	movzx	eax, BYTE PTR _anyItemSet$[ebp]
	test	eax, eax
	je	SHORT $LN2@DisplayInv
; Line 1175
	push	OFFSET $SG120267
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
	jmp	SHORT $LN1@DisplayInv
$LN2@DisplayInv:
; Line 1176
	mov	BYTE PTR _anyItemSet$[ebp], 1
$LN1@DisplayInv:
; Line 1177
	push	OFFSET $SG120269
	push	OFFSET _fileList
	call	_strcat
	add	esp, 8
$LN3@DisplayInv:
; Line 1180
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	4
	push	OFFSET ?InvalidFilesResources@?1??DisplayInvalidFilesPopup@@9@9
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
; Line 1181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayInvalidFilesPopup ENDP
_TEXT	ENDS
PUBLIC	_AskAndDoFormatSDCard
EXTRN	_FormatSDCard:PROC
EXTRN	_SystemSettingsPopUp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AskAndDoFormatSDCard
_TEXT	SEGMENT
_hWin$ = -8						; size = 4
_AskAndDoFormatSDCard PROC				; COMDAT
; Line 1184
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1188
	call	_WM_GetDesktopWindow
	mov	DWORD PTR _hWin$[ebp], eax
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	push	13					; 0000000dH
	call	_SystemSettingsPopUp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@AskAndDoFo
; Line 1189
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	push	3
	call	_SystemSettingsPopUp
	add	esp, 8
	test	eax, eax
	je	SHORT $LN3@AskAndDoFo
; Line 1190
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_FormatSDCard
	add	esp, 4
$LN3@AskAndDoFo:
; Line 1191
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_AskAndDoFormatSDCard ENDP
_TEXT	ENDS
PUBLIC	_CreateProgressBar
EXTRN	_WIDGET_SetEffect:PROC
EXTRN	_WIDGET_Effect_3D:BYTE
EXTRN	_PROGBAR_SetBarColor:PROC
EXTRN	_PROGBAR_SetMinMax:PROC
EXTRN	_PROGBAR_SetTextColor:PROC
EXTRN	_PROGBAR_SetFont:PROC
EXTRN	_GUI_Font32_ASCII:BYTE
EXTRN	_PROGBAR_CreateEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateProgressBar
_TEXT	SEGMENT
_hProgBar$ = 8						; size = 4
_maxval$ = 12						; size = 4
_CreateProgressBar PROC					; COMDAT
; Line 1193
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1194
	push	1
	push	0
	push	2
	push	0
	push	70					; 00000046H
	push	300					; 0000012cH
	push	170					; 000000aaH
	push	90					; 0000005aH
	call	_PROGBAR_CreateEx
	add	esp, 32					; 00000020H
	mov	ecx, DWORD PTR _hProgBar$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 1195
	push	OFFSET _GUI_Font32_ASCII
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_SetFont
	add	esp, 8
; Line 1196
	push	0
	push	0
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1197
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1198
	mov	eax, DWORD PTR _maxval$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hProgBar$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_PROGBAR_SetMinMax
	add	esp, 12					; 0000000cH
; Line 1199
	push	65280					; 0000ff00H
	push	0
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_SetBarColor
	add	esp, 12					; 0000000cH
; Line 1200
	push	0
	push	1
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_PROGBAR_SetBarColor
	add	esp, 12					; 0000000cH
; Line 1201
	push	OFFSET _WIDGET_Effect_3D
	mov	eax, DWORD PTR _hProgBar$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_WIDGET_SetEffect
	add	esp, 8
; Line 1202
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateProgressBar ENDP
_TEXT	ENDS
PUBLIC	_RepaintSplash
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RepaintSplash
_TEXT	SEGMENT
_RepaintSplash PROC					; COMDAT
; Line 1578
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1579
	call	_DisplaySplashScreen1
; Line 1581
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RepaintSplash ENDP
_TEXT	ENDS
EXTRN	_bmVehicleName:BYTE
EXTRN	_bmDriverName:BYTE
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmSplashScreen:BYTE
EXTRN	_GUI_Clear:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplaySplashScreen1
_TEXT	SEGMENT
_DisplaySplashScreen1 PROC				; COMDAT
; Line 1584
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1585
	call	_GUI_Clear
; Line 1586
	push	10					; 0000000aH
	push	39					; 00000027H
	push	OFFSET _bmSplashScreen
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1587
	push	97					; 00000061H
	push	20					; 00000014H
	push	OFFSET _bmDriverName
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1588
	push	110					; 0000006eH
	push	240					; 000000f0H
	push	OFFSET _bmVehicleName
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1589
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplaySplashScreen1 ENDP
_TEXT	ENDS
PUBLIC	_DisplayAnalogStatus
PUBLIC	_DisplaySplashScreen3
EXTRN	_bmWiFiDisabledIcon:BYTE
EXTRN	_bmWiFiEnabledIcon:BYTE
EXTRN	_bmXIcon:BYTE
EXTRN	_vehicleData:BYTE
EXTRN	_bmUSBCamIcon:BYTE
EXTRN	_GUI_Font20B_ASCII:BYTE
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GetTDCam:PROC
EXTRN	_bmCheckIcon:BYTE
EXTRN	_bmMobiusIcon:BYTE
EXTRN	_bmReplayPrimeIcon:BYTE
EXTRN	_bmReplayMiniIcon:BYTE
EXTRN	_bmReplay1080Icon:BYTE
EXTRN	_bmReplayIcon:BYTE
EXTRN	_bmGoProIcon:BYTE
EXTRN	_bmChaseCamIcon:BYTE
EXTRN	_bmRaceCamIcon:BYTE
EXTRN	_bmSonyIcon:BYTE
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GetSUCam:PROC
EXTRN	_GUI_Font16B_ASCII:BYTE
EXTRN	_GUI_DispStringInRectWrap:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_DrawJPEGSplash:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplaySplashScreen3
_TEXT	SEGMENT
tv92 = -232						; size = 4
_temp$ = -32						; size = 4
_i$ = -20						; size = 4
_pGraphic$ = -8						; size = 4
_DisplaySplashScreen3 PROC				; COMDAT
; Line 1592
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1598
	call	_GUI_GetTime
	mov	DWORD PTR _splashScreenStartTime, eax
; Line 1600
	mov	eax, DWORD PTR _sysData+236
	and	eax, 15					; 0000000fH
	mov	DWORD PTR _temp$[ebp], eax
; Line 1603
	cmp	DWORD PTR _temp$[ebp], 4
	jae	SHORT $LN29@DisplaySpl
	cmp	DWORD PTR _sysData+20, 0
	jne	SHORT $LN29@DisplaySpl
; Line 1605
	mov	eax, DWORD PTR _temp$[ebp]
	add	eax, 1
	mov	DWORD PTR _temp$[ebp], eax
	cmp	DWORD PTR _temp$[ebp], 4
	jb	SHORT $LN28@DisplaySpl
; Line 1606
	mov	DWORD PTR _temp$[ebp], 4
$LN28@DisplaySpl:
; Line 1607
	mov	eax, DWORD PTR _sysData+236
	and	eax, -16				; fffffff0H
	or	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _sysData+236, eax
; Line 1609
	call	_DrawJPEGSplash
; Line 1611
	jmp	$LN30@DisplaySpl
$LN29@DisplaySpl:
; Line 1613
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1614
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1615
	push	1
	push	12					; 0000000cH
	push	OFFSET _DriverRect
	push	OFFSET _sysData+126
	call	_GUI_DispStringInRectWrap
	add	esp, 16					; 00000010H
; Line 1616
	push	1
	push	12					; 0000000cH
	push	OFFSET _VehicleRect
	push	OFFSET _sysData+143
	call	_GUI_DispStringInRectWrap
	add	esp, 16					; 00000010H
; Line 1619
	push	OFFSET _GUI_Font16B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1620
	call	_GetSUCam
	movzx	eax, al
	test	eax, eax
	je	$LN26@DisplaySpl
; Line 1622
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1623
	push	250					; 000000faH
	push	35					; 00000023H
	push	OFFSET $SG120302
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1625
	call	_GetSUCam
	movzx	eax, al
	mov	DWORD PTR tv92[ebp], eax
	mov	ecx, DWORD PTR tv92[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv92[ebp], ecx
	cmp	DWORD PTR tv92[ebp], 13			; 0000000dH
	ja	SHORT $LN14@DisplaySpl
	mov	edx, DWORD PTR tv92[ebp]
	jmp	DWORD PTR $LN32@DisplaySpl[edx*4]
$LN23@DisplaySpl:
; Line 1630
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmSonyIcon
	jmp	SHORT $LN24@DisplaySpl
$LN22@DisplaySpl:
; Line 1631
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmRaceCamIcon
	jmp	SHORT $LN24@DisplaySpl
$LN21@DisplaySpl:
; Line 1633
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmChaseCamIcon
	jmp	SHORT $LN24@DisplaySpl
$LN20@DisplaySpl:
; Line 1635
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmGoProIcon
	jmp	SHORT $LN24@DisplaySpl
$LN19@DisplaySpl:
; Line 1636
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmReplayIcon
	jmp	SHORT $LN24@DisplaySpl
$LN18@DisplaySpl:
; Line 1637
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmReplay1080Icon
	jmp	SHORT $LN24@DisplaySpl
$LN17@DisplaySpl:
; Line 1638
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmReplayMiniIcon
	jmp	SHORT $LN24@DisplaySpl
$LN16@DisplaySpl:
; Line 1639
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmReplayPrimeIcon
	jmp	SHORT $LN24@DisplaySpl
$LN15@DisplaySpl:
; Line 1640
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmMobiusIcon
	jmp	SHORT $LN24@DisplaySpl
$LN14@DisplaySpl:
; Line 1642
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmCheckIcon
$LN24@DisplaySpl:
; Line 1645
	push	190					; 000000beH
	push	5
	mov	eax, DWORD PTR _pGraphic$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1647
	call	_GetTDCam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN13@DisplaySpl
	cmp	DWORD PTR _unsavedSysData+108, 135	; 00000087H
	jbe	SHORT $LN13@DisplaySpl
; Line 1649
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1650
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1651
	push	230					; 000000e6H
	push	45					; 0000002dH
	push	OFFSET $SG120318
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN13@DisplaySpl:
; Line 1654
	jmp	$LN12@DisplaySpl
$LN26@DisplaySpl:
; Line 1656
	call	_GetTDCam
	movzx	eax, al
	test	eax, eax
	je	$LN11@DisplaySpl
	cmp	DWORD PTR _unsavedSysData+108, 135	; 00000087H
	jbe	SHORT $LN11@DisplaySpl
; Line 1658
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1659
	push	250					; 000000faH
	push	35					; 00000023H
	push	OFFSET $SG120321
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1661
	push	OFFSET _GUI_Font20B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1662
	push	190					; 000000beH
	push	5
	push	OFFSET _bmUSBCamIcon
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1663
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1664
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1665
	push	210					; 000000d2H
	push	35					; 00000023H
	push	OFFSET $SG120322
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1666
	push	OFFSET _GUI_Font16B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1668
	jmp	SHORT $LN12@DisplaySpl
$LN11@DisplaySpl:
; Line 1670
	movzx	eax, BYTE PTR _vehicleData+419
	test	eax, eax
	je	SHORT $LN9@DisplaySpl
; Line 1671
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmCheckIcon
	jmp	SHORT $LN8@DisplaySpl
$LN9@DisplaySpl:
; Line 1672
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmXIcon
$LN8@DisplaySpl:
; Line 1673
	push	190					; 000000beH
	push	5
	mov	eax, DWORD PTR _pGraphic$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1674
	push	16777088				; 00ffff80H
	call	_GUI_SetColor
	add	esp, 4
; Line 1675
	push	250					; 000000faH
	push	35					; 00000023H
	push	OFFSET $SG120326
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN12@DisplaySpl:
; Line 1679
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1681
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@DisplaySpl
$LN6@DisplaySpl:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@DisplaySpl:
	cmp	DWORD PTR _i$[ebp], 4
	jge	SHORT $LN5@DisplaySpl
; Line 1682
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_DisplayAnalogStatus
	add	esp, 4
	jmp	SHORT $LN6@DisplaySpl
$LN5@DisplaySpl:
; Line 1684
	movzx	eax, BYTE PTR _vehicleData+466
	test	eax, eax
	je	SHORT $LN4@DisplaySpl
; Line 1685
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmCheckIcon
	jmp	SHORT $LN3@DisplaySpl
$LN4@DisplaySpl:
; Line 1686
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmXIcon
$LN3@DisplaySpl:
; Line 1687
	push	190					; 000000beH
	push	345					; 00000159H
	mov	eax, DWORD PTR _pGraphic$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1688
	push	16777088				; 00ffff80H
	call	_GUI_SetColor
	add	esp, 4
; Line 1689
	push	250					; 000000faH
	push	375					; 00000177H
	push	OFFSET $SG120332
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1692
	cmp	DWORD PTR _unsavedSysData+216, 0
	je	SHORT $LN2@DisplaySpl
	cmp	DWORD PTR _unsavedSysData+212, 0
	je	SHORT $LN2@DisplaySpl
; Line 1693
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmWiFiEnabledIcon
	jmp	SHORT $LN1@DisplaySpl
$LN2@DisplaySpl:
; Line 1694
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmWiFiDisabledIcon
$LN1@DisplaySpl:
; Line 1696
	push	190					; 000000beH
	push	413					; 0000019dH
	mov	eax, DWORD PTR _pGraphic$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1698
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1699
	push	250					; 000000faH
	push	443					; 000001bbH
	push	OFFSET $SG120335
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN30@DisplaySpl:
; Line 1701
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN32@DisplaySpl:
	DD	$LN23@DisplaySpl
	DD	$LN22@DisplaySpl
	DD	$LN21@DisplaySpl
	DD	$LN21@DisplaySpl
	DD	$LN23@DisplaySpl
	DD	$LN23@DisplaySpl
	DD	$LN23@DisplaySpl
	DD	$LN20@DisplaySpl
	DD	$LN19@DisplaySpl
	DD	$LN18@DisplaySpl
	DD	$LN20@DisplaySpl
	DD	$LN17@DisplaySpl
	DD	$LN16@DisplaySpl
	DD	$LN15@DisplaySpl
_DisplaySplashScreen3 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayAnalogStatus
_TEXT	SEGMENT
_pGraphic$ = -32					; size = 4
_buffer$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_i$ = 8							; size = 4
_DisplayAnalogStatus PROC				; COMDAT
; Line 1705
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1709
	mov	eax, DWORD PTR _i$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _vehicleData[eax+147]
	test	ecx, ecx
	je	SHORT $LN2@DisplayAna
; Line 1710
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmCheckIcon
	jmp	SHORT $LN1@DisplayAna
$LN2@DisplayAna:
; Line 1711
	mov	DWORD PTR _pGraphic$[ebp], OFFSET _bmXIcon
$LN1@DisplayAna:
; Line 1712
	push	190					; 000000beH
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	imul	eax, 68					; 00000044H
	add	eax, 5
	push	eax
	mov	ecx, DWORD PTR _pGraphic$[ebp]
	push	ecx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1713
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	OFFSET $SG120343
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1714
	push	250					; 000000faH
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	imul	eax, 68					; 00000044H
	add	eax, 35					; 00000023H
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1715
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DisplayAna
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@DisplayAna:
	DD	1
	DD	$LN6@DisplayAna
$LN6@DisplayAna:
	DD	-20					; ffffffecH
	DD	10					; 0000000aH
	DD	$LN5@DisplayAna
$LN5@DisplayAna:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
_DisplayAnalogStatus ENDP
_TEXT	ENDS
END
