; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTVIEW.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTVIEW_DefaultProps
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_LISTVIEW_DefaultProps DD 0ffffffH
	DD	0808080H
	DD	0ff0000H
	DD	0d3d3d3H
	DD	00H
	DD	0ffffffH
	DD	0ffffffH
	DD	0808080H
	DD	0d3d3d3H
	DD	FLAT:_GUI_Font13_1
	DW	0aH
	ORG $+2
$SG17253 DB	'LISTVIEW.c: Wrong handle type or Object not init''ed', 00H
$SG17346 DB	'LISTVIEW_Create failed', 00H
_DATA	ENDS
PUBLIC	_LISTVIEW__GetNumRows
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listview.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTVIEW__GetNumRows
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_LISTVIEW__GetNumRows PROC				; COMDAT
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__GetNumRows ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__GetNumColumns
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__GetNumColumns
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_LISTVIEW__GetNumColumns PROC				; COMDAT
; Line 143
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 144
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__GetNumColumns ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__GetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__GetSel
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_LISTVIEW__GetSel PROC					; COMDAT
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 152
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+112]
; Line 153
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__GetSel ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__InvalidateRow
PUBLIC	_LISTVIEW__InvalidateInsideArea
PUBLIC	_LISTVIEW__UpdateScrollPos
PUBLIC	_LISTVIEW_LockH
PUBLIC	_LISTVIEW__SetSel
EXTRN	_WM_NotifyParent:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__SetSel
_TEXT	SEGMENT
_r$16880 = -92						; size = 4
_OldSel$16879 = -80					; size = 4
_pRow$16873 = -68					; size = 4
_Disabled$16872 = -53					; size = 1
_RowArray$ = -44					; size = 4
_Sel$ = -32						; size = 4
_NumRows$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_NewSel$ = 12						; size = 4
_LISTVIEW__SetSel PROC					; COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 165
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 166
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 167
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 168
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$[ebp], ecx
; Line 169
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 171
	mov	eax, DWORD PTR _NewSel$[ebp]
	cmp	eax, DWORD PTR _NumRows$[ebp]
	jl	SHORT $LN8@LISTVIEW__
; Line 172
	mov	eax, DWORD PTR _NumRows$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NewSel$[ebp], eax
$LN8@LISTVIEW__:
; Line 174
	cmp	DWORD PTR _NewSel$[ebp], 0
	jge	SHORT $LN7@LISTVIEW__
; Line 175
	mov	DWORD PTR _NewSel$[ebp], -1
$LN7@LISTVIEW__:
; Line 177
	mov	eax, DWORD PTR _NewSel$[ebp]
	cmp	eax, DWORD PTR _Sel$[ebp]
	je	$LN9@LISTVIEW__
; Line 180
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RowArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$16873[ebp], eax
; Line 181
	cmp	DWORD PTR _pRow$16873[ebp], 0
	je	SHORT $LN5@LISTVIEW__
; Line 182
	mov	eax, DWORD PTR _pRow$16873[ebp]
	mov	cl, BYTE PTR [eax+4]
	mov	BYTE PTR _Disabled$16872[ebp], cl
; Line 183
	jmp	SHORT $LN4@LISTVIEW__
$LN5@LISTVIEW__:
; Line 184
	mov	BYTE PTR _Disabled$16872[ebp], 0
$LN4@LISTVIEW__:
; Line 186
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$16873[ebp], 0
; Line 187
	movzx	eax, BYTE PTR _Disabled$16872[ebp]
	test	eax, eax
	jne	$LN9@LISTVIEW__
; Line 189
	mov	eax, DWORD PTR _Sel$[ebp]
	mov	DWORD PTR _OldSel$16879[ebp], eax
; Line 190
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 191
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _NewSel$[ebp]
	mov	DWORD PTR [eax+112], ecx
; Line 192
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 193
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollPos
	add	esp, 4
	mov	DWORD PTR _r$16880[ebp], eax
; Line 194
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 195
	cmp	DWORD PTR _r$16880[ebp], 0
	je	SHORT $LN2@LISTVIEW__
; Line 196
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
; Line 197
	jmp	SHORT $LN1@LISTVIEW__
$LN2@LISTVIEW__:
; Line 198
	mov	eax, DWORD PTR _OldSel$16879[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
; Line 199
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
$LN1@LISTVIEW__:
; Line 201
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 202
	push	4
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN9@LISTVIEW__:
; Line 205
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__SetSel ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__MoveSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__MoveSel
_TEXT	SEGMENT
_pRow$16899 = -68					; size = 4
_NumRows$ = -56						; size = 4
_NewSel$ = -44						; size = 4
_Index$ = -32						; size = 4
_RowArray$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Dir$ = 12						; size = 4
_LISTVIEW__MoveSel PROC					; COMDAT
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 216
	mov	DWORD PTR _NewSel$[ebp], -1
; Line 217
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 218
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetSel
	add	esp, 4
	mov	DWORD PTR _Index$[ebp], eax
; Line 219
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 220
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$[ebp], ecx
; Line 221
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN7@LISTVIEW__@2:
; Line 224
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _Index$[ebp], eax
; Line 225
	js	SHORT $LN3@LISTVIEW__@2
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumRows$[ebp]
	jl	SHORT $LN4@LISTVIEW__@2
$LN3@LISTVIEW__@2:
; Line 226
	jmp	SHORT $LN5@LISTVIEW__@2
$LN4@LISTVIEW__@2:
; Line 228
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _RowArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$16899[ebp], eax
; Line 229
	mov	eax, DWORD PTR _pRow$16899[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	jne	SHORT $LN2@LISTVIEW__@2
; Line 230
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _NewSel$[ebp], eax
$LN2@LISTVIEW__@2:
; Line 232
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$16899[ebp], 0
; Line 233
	cmp	DWORD PTR _NewSel$[ebp], 0
	jl	SHORT $LN7@LISTVIEW__@2
$LN5@LISTVIEW__@2:
; Line 234
	cmp	DWORD PTR _NewSel$[ebp], 0
	jl	SHORT $LN8@LISTVIEW__@2
; Line 235
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
$LN8@LISTVIEW__@2:
; Line 237
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__MoveSel ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__GetRowDistY
EXTRN	_GUI_GetYDistOfFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__GetRowDistY
_TEXT	SEGMENT
_RowDistY$ = -8						; size = 4
_pObj$ = 8						; size = 4
_LISTVIEW__GetRowDistY PROC				; COMDAT
; Line 243
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 245
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN3@LISTVIEW__@3
; Line 246
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _RowDistY$[ebp], ecx
; Line 247
	jmp	SHORT $LN2@LISTVIEW__@3
$LN3@LISTVIEW__@3:
; Line 248
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	DWORD PTR _RowDistY$[ebp], eax
; Line 249
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN2@LISTVIEW__@3
; Line 250
	mov	eax, DWORD PTR _RowDistY$[ebp]
	add	eax, 1
	mov	DWORD PTR _RowDistY$[ebp], eax
$LN2@LISTVIEW__@3:
; Line 253
	mov	eax, DWORD PTR _RowDistY$[ebp]
; Line 254
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__GetRowDistY ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	_HEADER_GetHeight:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__InvalidateInsideArea
_TEXT	SEGMENT
_hHeader$ = -48						; size = 4
_HeaderHeight$ = -36					; size = 4
_Rect$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW__InvalidateInsideArea PROC			; COMDAT
; Line 536
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 542
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 543
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hHeader$[ebp], ecx
; Line 544
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 545
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_GetHeight
	add	esp, 4
	mov	DWORD PTR _HeaderHeight$[ebp], eax
; Line 546
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 547
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _HeaderHeight$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 548
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 549
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@LISTVIEW__@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@LISTVIEW__@4:
	DD	1
	DD	$LN4@LISTVIEW__@4
$LN4@LISTVIEW__@4:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@LISTVIEW__@4
$LN3@LISTVIEW__@4:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTVIEW__InvalidateInsideArea ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTVIEW__InvalidateRow
_TEXT	SEGMENT
_RowDistY$17080 = -36					; size = 4
_HeaderHeight$17079 = -24				; size = 4
_Rect$17078 = -12					; size = 8
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_Sel$ = 16						; size = 4
_LISTVIEW__InvalidateRow PROC				; COMDAT
; Line 555
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 556
	cmp	DWORD PTR _Sel$[ebp], 0
	jl	SHORT $LN2@LISTVIEW__@5
; Line 559
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetHeight
	add	esp, 4
	mov	DWORD PTR _HeaderHeight$17079[ebp], eax
; Line 560
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetRowDistY
	add	esp, 4
	mov	DWORD PTR _RowDistY$17080[ebp], eax
; Line 561
	lea	eax, DWORD PTR _Rect$17078[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 562
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Sel$[ebp]
	sub	ecx, DWORD PTR [eax+148]
	imul	ecx, DWORD PTR _RowDistY$17080[ebp]
	add	ecx, DWORD PTR _HeaderHeight$17079[ebp]
	movsx	edx, WORD PTR _Rect$17078[ebp+2]
	add	edx, ecx
	mov	WORD PTR _Rect$17078[ebp+2], dx
; Line 563
	movsx	eax, WORD PTR _Rect$17078[ebp+2]
	mov	ecx, DWORD PTR _RowDistY$17080[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$17078[ebp+6], dx
; Line 564
	lea	eax, DWORD PTR _Rect$17078[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN2@LISTVIEW__@5:
; Line 566
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@LISTVIEW__@5
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@LISTVIEW__@5:
	DD	1
	DD	$LN5@LISTVIEW__@5
$LN5@LISTVIEW__@5:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN4@LISTVIEW__@5
$LN4@LISTVIEW__@5:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTVIEW__InvalidateRow ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_HEADER_SetScrollPos:PROC
EXTRN	_WIDGET__SetScrollState:PROC
EXTRN	_WM_CheckScrollBounds:PROC
EXTRN	_WM_CheckScrollPos:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW__UpdateScrollPos
_TEXT	SEGMENT
_PrevScrollStateV$ = -76				; size = 4
_hHeader$ = -64						; size = 4
_pObj$ = -52						; size = 4
_ScrollStateH$ = -40					; size = 12
_ScrollStateV$ = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW__UpdateScrollPos PROC				; COMDAT
; Line 686
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 691
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 692
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	DWORD PTR _PrevScrollStateV$[ebp], ecx
; Line 693
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+112], 0
	jl	SHORT $LN3@LISTVIEW__@6
; Line 694
	push	0
	push	0
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	add	edx, 144				; 00000090H
	push	edx
	call	_WM_CheckScrollPos
	add	esp, 16					; 00000010H
; Line 695
	jmp	SHORT $LN2@LISTVIEW__@6
$LN3@LISTVIEW__@6:
; Line 696
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 144				; 00000090H
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
$LN2@LISTVIEW__@6:
; Line 698
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 699
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 144				; 00000090H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 700
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$[ebp+8], eax
; Line 701
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hHeader$[ebp], ecx
; Line 702
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 703
	lea	eax, DWORD PTR _ScrollStateH$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateV$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET__SetScrollState
	add	esp, 12					; 0000000cH
; Line 704
	cmp	DWORD PTR _hHeader$[ebp], 0
	je	SHORT $LN1@LISTVIEW__@6
; Line 705
	mov	eax, DWORD PTR _ScrollStateH$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _hHeader$[ebp]
	push	ecx
	call	_HEADER_SetScrollPos
	add	esp, 8
$LN1@LISTVIEW__@6:
; Line 707
	mov	eax, DWORD PTR _ScrollStateV$[ebp+4]
	sub	eax, DWORD PTR _PrevScrollStateV$[ebp]
; Line 708
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LISTVIEW__@6
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@LISTVIEW__@6:
	DD	2
	DD	$LN8@LISTVIEW__@6
$LN8@LISTVIEW__@6:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN6@LISTVIEW__@6
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN7@LISTVIEW__@6
$LN7@LISTVIEW__@6:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
$LN6@LISTVIEW__@6:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
_LISTVIEW__UpdateScrollPos ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW__UpdateScrollParas
EXTRN	_WM_SetScrollbarH:PROC
EXTRN	_WM_SetScrollbarV:PROC
_BSS	SEGMENT
?IsActive@?1??LISTVIEW__UpdateScrollParas@@9@9 DB 01H DUP (?) ; `LISTVIEW__UpdateScrollParas'::`2'::IsActive
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _LISTVIEW__UpdateScrollParas
_TEXT	SEGMENT
tv137 = -304						; size = 4
_Flags$ = -101						; size = 1
_RowArray$ = -92					; size = 4
_pObj$ = -80						; size = 4
_NumVisibleRows$ = -68					; size = 4
_r$ = -56						; size = 4
_xSizeHeader$ = -44					; size = 4
_xSize$ = -32						; size = 4
_IsRequired$ = -20					; size = 4
_NumRows$ = -8						; size = 4
_hObj$ = 8						; size = 4
_LISTVIEW__UpdateScrollParas PROC			; COMDAT
; Line 720
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 729
	movzx	eax, BYTE PTR ?IsActive@?1??LISTVIEW__UpdateScrollParas@@9@9
	test	eax, eax
	je	SHORT $LN4@LISTVIEW__@7
; Line 730
	xor	eax, eax
	jmp	$LN5@LISTVIEW__@7
$LN4@LISTVIEW__@7:
; Line 732
	mov	BYTE PTR ?IsActive@?1??LISTVIEW__UpdateScrollParas@@9@9, 1
; Line 733
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 734
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$[ebp], ecx
; Line 735
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumVisibleRows
	add	esp, 8
	mov	DWORD PTR _NumVisibleRows$[ebp], eax
; Line 736
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetXSize
	add	esp, 4
	mov	DWORD PTR _xSize$[ebp], eax
; Line 737
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__GetHeaderWidth
	add	esp, 4
	mov	DWORD PTR _xSizeHeader$[ebp], eax
; Line 738
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+175]
	mov	BYTE PTR _Flags$[ebp], cl
; Line 739
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 740
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 2
	je	SHORT $LN3@LISTVIEW__@7
; Line 741
	mov	eax, DWORD PTR _RowArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	cmp	DWORD PTR _NumVisibleRows$[ebp], eax
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _IsRequired$[ebp], ecx
; Line 742
	mov	eax, DWORD PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarV
	add	esp, 8
$LN3@LISTVIEW__@7:
; Line 744
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@LISTVIEW__@7
; Line 745
	mov	eax, DWORD PTR _xSizeHeader$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _xSize$[ebp]
	setg	cl
	mov	DWORD PTR _IsRequired$[ebp], ecx
; Line 746
	mov	eax, DWORD PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarH
	add	esp, 8
; Line 747
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 748
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumVisibleRows
	add	esp, 8
	mov	DWORD PTR _NumVisibleRows$[ebp], eax
; Line 749
	jmp	SHORT $LN1@LISTVIEW__@7
$LN2@LISTVIEW__@7:
; Line 750
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
$LN1@LISTVIEW__@7:
; Line 752
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 754
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _NumVisibleRows$[ebp]
	mov	DWORD PTR [eax+152], ecx
; Line 755
	cmp	DWORD PTR _NumRows$[ebp], 0
	je	SHORT $LN7@LISTVIEW__@7
	mov	eax, DWORD PTR _NumRows$[ebp]
	mov	DWORD PTR tv137[ebp], eax
	jmp	SHORT $LN8@LISTVIEW__@7
$LN7@LISTVIEW__@7:
	mov	DWORD PTR tv137[ebp], 1
$LN8@LISTVIEW__@7:
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR tv137[ebp]
	mov	DWORD PTR [ecx+144], edx
; Line 757
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR [eax+164], ecx
; Line 758
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xSizeHeader$[ebp]
	mov	DWORD PTR [eax+156], ecx
; Line 759
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollPos
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 760
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 761
	mov	BYTE PTR ?IsActive@?1??LISTVIEW__UpdateScrollParas@@9@9, 0
; Line 762
	mov	eax, DWORD PTR _r$[ebp]
$LN5@LISTVIEW__@7:
; Line 763
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW__UpdateScrollParas ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumVisibleRows
_TEXT	SEGMENT
tv79 = -248						; size = 4
_Rect$ = -48						; size = 8
_r$ = -32						; size = 4
_ySize$ = -20						; size = 4
_RowDistY$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__GetNumVisibleRows PROC				; COMDAT
; Line 268
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 269
	mov	DWORD PTR _r$[ebp], 1
; Line 271
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 272
	movsx	esi, WORD PTR _Rect$[ebp+6]
	movsx	eax, WORD PTR _Rect$[ebp+2]
	sub	esi, eax
	add	esi, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_HEADER_GetHeight
	add	esp, 4
	sub	esi, eax
	mov	DWORD PTR _ySize$[ebp], esi
; Line 273
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetRowDistY
	add	esp, 4
	mov	DWORD PTR _RowDistY$[ebp], eax
; Line 274
	cmp	DWORD PTR _RowDistY$[ebp], 0
	je	SHORT $LN1@GetNumVisi
; Line 275
	mov	eax, DWORD PTR _ySize$[ebp]
	xor	edx, edx
	div	DWORD PTR _RowDistY$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 276
	cmp	DWORD PTR _r$[ebp], 0
	jne	SHORT $LN4@GetNumVisi
	mov	DWORD PTR tv79[ebp], 1
	jmp	SHORT $LN5@GetNumVisi
$LN4@GetNumVisi:
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR tv79[ebp], eax
$LN5@GetNumVisi:
	mov	ecx, DWORD PTR tv79[ebp]
	mov	DWORD PTR _r$[ebp], ecx
$LN1@GetNumVisi:
; Line 278
	mov	eax, DWORD PTR _r$[ebp]
; Line 279
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@GetNumVisi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@GetNumVisi:
	DD	1
	DD	$LN7@GetNumVisi
$LN7@GetNumVisi:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN6@GetNumVisi
$LN6@GetNumVisi:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetNumVisibleRows ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetXSize
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_hObj$ = 8						; size = 4
__GetXSize PROC						; COMDAT
; Line 646
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 648
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 649
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
; Line 650
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetXSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetXSize:
	DD	1
	DD	$LN4@GetXSize
$LN4@GetXSize:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetXSize
$LN3@GetXSize:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetXSize ENDP
_TEXT	ENDS
EXTRN	_HEADER_GetItemWidth:PROC
EXTRN	_HEADER_GetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetHeaderWidth
_TEXT	SEGMENT
_r$ = -32						; size = 4
_i$ = -20						; size = 4
_NumItems$ = -8						; size = 4
_pObj$ = 8						; size = 4
__GetHeaderWidth PROC					; COMDAT
; Line 663
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 664
	mov	DWORD PTR _r$[ebp], 1
; Line 665
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 666
	cmp	DWORD PTR _NumItems$[ebp], 0
	je	SHORT $LN4@GetHeaderW
; Line 667
	mov	DWORD PTR _i$[ebp], 0
	mov	DWORD PTR _r$[ebp], 0
	jmp	SHORT $LN3@GetHeaderW
$LN2@GetHeaderW:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@GetHeaderW:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN4@GetHeaderW
; Line 668
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_HEADER_GetItemWidth
	add	esp, 8
	add	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 669
	jmp	SHORT $LN2@GetHeaderW
$LN4@GetHeaderW:
; Line 671
	mov	eax, DWORD PTR _r$[ebp]
; Line 672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetHeaderWidth ENDP
_TEXT	ENDS
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_LISTVIEW_LockH PROC					; COMDAT
; Line 940
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 941
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 942
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@LISTVIEW_L
; Line 943
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+176], 1279873878		; 4c495356H
	je	SHORT $LN2@LISTVIEW_L
; Line 944
	push	OFFSET $SG17253
	call	_GUI_ErrorOut
	add	esp, 4
; Line 945
	xor	eax, eax
	jmp	SHORT $LN3@LISTVIEW_L
$LN2@LISTVIEW_L:
; Line 948
	mov	eax, DWORD PTR _p$[ebp]
$LN3@LISTVIEW_L:
; Line 949
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_LockH ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_LISTVIEW_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_HEADER_GetSel:PROC
EXTRN	_WM_SetFocus:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetScrollState:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_Callback
_TEXT	SEGMENT
tv79 = -304						; size = 4
tv71 = -304						; size = 4
_pColumn$17290 = -104					; size = 4
_pSort$17289 = -92					; size = 4
_Column$17288 = -80					; size = 4
_Key$ = -68						; size = 4
_ScrollState$ = -56					; size = 12
_pObj$ = -36						; size = 4
_hObj$ = -24						; size = 4
_hHeader$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_LISTVIEW_Callback PROC					; COMDAT
; Line 962
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 969
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 971
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN29@LISTVIEW_C
; Line 972
	jmp	$LN30@LISTVIEW_C
$LN29@LISTVIEW_C:
; Line 974
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 975
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv71[ebp], ecx
	mov	edx, DWORD PTR tv71[ebp]
	sub	edx, 5
	mov	DWORD PTR tv71[ebp], edx
	cmp	DWORD PTR tv71[ebp], 33			; 00000021H
	ja	$LN27@LISTVIEW_C
	mov	eax, DWORD PTR tv71[ebp]
	movzx	ecx, BYTE PTR $LN32@LISTVIEW_C[eax]
	jmp	DWORD PTR $LN36@LISTVIEW_C[ecx*4]
$LN26@LISTVIEW_C:
; Line 978
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hHeader$[ebp], ecx
; Line 979
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 980
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN25@LISTVIEW_C
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	cmp	ecx, DWORD PTR _hHeader$[ebp]
	jne	SHORT $LN25@LISTVIEW_C
; Line 981
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
$LN25@LISTVIEW_C:
; Line 983
	jmp	$LN30@LISTVIEW_C
$LN24@LISTVIEW_C:
; Line 985
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv79[ebp], ecx
	mov	edx, DWORD PTR tv79[ebp]
	sub	edx, 2
	mov	DWORD PTR tv79[ebp], edx
	cmp	DWORD PTR tv79[ebp], 5
	ja	$LN22@LISTVIEW_C
	mov	eax, DWORD PTR tv79[ebp]
	jmp	DWORD PTR $LN37@LISTVIEW_C[eax*4]
$LN21@LISTVIEW_C:
; Line 988
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+56]
	jne	SHORT $LN20@LISTVIEW_C
; Line 989
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+56], 0
$LN20@LISTVIEW_C:
; Line 991
	jmp	$LN22@LISTVIEW_C
$LN19@LISTVIEW_C:
; Line 993
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN18@LISTVIEW_C
; Line 994
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 995
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+148], ecx
; Line 996
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
; Line 997
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 998
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
; Line 999
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
	jmp	$LN17@LISTVIEW_C
$LN18@LISTVIEW_C:
; Line 1000
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN17@LISTVIEW_C
; Line 1001
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hHeader$[ebp], ecx
; Line 1002
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _ScrollState$[ebp+4], ecx
; Line 1003
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 1004
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+160], ecx
; Line 1005
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1006
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
; Line 1007
	mov	eax, DWORD PTR _ScrollState$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _hHeader$[ebp]
	push	ecx
	call	_HEADER_SetScrollPos
	add	esp, 8
; Line 1008
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
; Line 1009
	jmp	$LN30@LISTVIEW_C
$LN17@LISTVIEW_C:
; Line 1011
	jmp	$LN22@LISTVIEW_C
$LN15@LISTVIEW_C:
; Line 1016
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1017
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
; Line 1018
	jmp	$LN30@LISTVIEW_C
$LN14@LISTVIEW_C:
; Line 1020
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+56]
	jne	$LN22@LISTVIEW_C
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	$LN22@LISTVIEW_C
; Line 1024
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 1025
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetSel
	add	esp, 4
	mov	DWORD PTR _Column$17288[ebp], eax
; Line 1026
	cmp	DWORD PTR _Column$17288[ebp], 0
	jl	$LN22@LISTVIEW_C
; Line 1027
	mov	eax, DWORD PTR _Column$17288[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$17290[ebp], eax
; Line 1028
	mov	eax, DWORD PTR _pColumn$17290[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN11@LISTVIEW_C
; Line 1029
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$17289[ebp], eax
; Line 1030
	cmp	DWORD PTR _pSort$17289[ebp], 0
	je	SHORT $LN10@LISTVIEW_C
; Line 1031
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	cmp	ecx, DWORD PTR _Column$17288[ebp]
	jne	SHORT $LN9@LISTVIEW_C
; Line 1032
	mov	eax, DWORD PTR _pSort$17289[ebp]
	movzx	ecx, BYTE PTR [eax+16]
	xor	ecx, 1
	mov	edx, DWORD PTR _pSort$17289[ebp]
	mov	BYTE PTR [edx+16], cl
; Line 1033
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+174], 1
; Line 1034
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+172], 0
; Line 1035
	jmp	SHORT $LN8@LISTVIEW_C
$LN9@LISTVIEW_C:
; Line 1036
	mov	eax, DWORD PTR _pSort$17289[ebp]
	mov	BYTE PTR [eax+16], 0
; Line 1037
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Column$17288[ebp]
	mov	DWORD PTR [eax+120], ecx
; Line 1038
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+173], 0
$LN8@LISTVIEW_C:
; Line 1040
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
$LN10@LISTVIEW_C:
; Line 1042
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$17289[ebp], 0
$LN11@LISTVIEW_C:
; Line 1044
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$17290[ebp], 0
$LN22@LISTVIEW_C:
; Line 1049
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1050
	jmp	$LN30@LISTVIEW_C
$LN7@LISTVIEW_C:
; Line 1052
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1053
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__Paint
	add	esp, 8
; Line 1054
	jmp	$LN30@LISTVIEW_C
$LN6@LISTVIEW_C:
; Line 1056
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1057
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 1058
	jmp	SHORT $LN30@LISTVIEW_C
$LN5@LISTVIEW_C:
; Line 1060
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN4@LISTVIEW_C
; Line 1061
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Key$[ebp], edx
; Line 1062
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1063
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__AddKey
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@LISTVIEW_C
; Line 1064
	jmp	SHORT $LN30@LISTVIEW_C
$LN4@LISTVIEW_C:
; Line 1067
	jmp	SHORT $LN27@LISTVIEW_C
$LN2@LISTVIEW_C:
; Line 1069
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__FreeAttached
	add	esp, 4
$LN27@LISTVIEW_C:
; Line 1072
	cmp	DWORD PTR _pObj$[ebp], 0
	je	SHORT $LN1@LISTVIEW_C
; Line 1073
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@LISTVIEW_C:
; Line 1075
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN30@LISTVIEW_C:
; Line 1076
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN35@LISTVIEW_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN35@LISTVIEW_C:
	DD	1
	DD	$LN34@LISTVIEW_C
$LN34@LISTVIEW_C:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN33@LISTVIEW_C
$LN33@LISTVIEW_C:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN36@LISTVIEW_C:
	DD	$LN26@LISTVIEW_C
	DD	$LN2@LISTVIEW_C
	DD	$LN6@LISTVIEW_C
	DD	$LN5@LISTVIEW_C
	DD	$LN7@LISTVIEW_C
	DD	$LN24@LISTVIEW_C
	DD	$LN27@LISTVIEW_C
$LN32@LISTVIEW_C:
	DB	0
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	1
	DB	2
	DB	6
	DB	3
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	0
	DB	5
	npad	2
$LN37@LISTVIEW_C:
	DD	$LN14@LISTVIEW_C
	DD	$LN22@LISTVIEW_C
	DD	$LN22@LISTVIEW_C
	DD	$LN19@LISTVIEW_C
	DD	$LN15@LISTVIEW_C
	DD	$LN21@LISTVIEW_C
_LISTVIEW_Callback ENDP
_TEXT	ENDS
EXTRN	_WIDGET__EFFECT_DrawDown:PROC
EXTRN	_GUI_DrawVLine:PROC
EXTRN	_GUI_DrawHLine:PROC
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_ClearRect:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI__IntersectRect:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Paint
_TEXT	SEGMENT
tv387 = -648						; size = 4
tv373 = -648						; size = 4
tv369 = -648						; size = 4
tv156 = -648						; size = 4
$T17539 = -637						; size = 1
$T17540 = -625						; size = 1
$T17541 = -613						; size = 1
_r$16998 = -412						; size = 4
_Flags$ = -397						; size = 1
_ColorIndex$ = -388					; size = 4
_RowExist$ = -376					; size = 4
_CellArray$ = -364					; size = 4
_Disabled$ = -349					; size = 1
_pfDraw$ = -340						; size = 4
_fpSort$ = -328						; size = 4
_pCellInfo$ = -316					; size = 4
_pCell$ = -304						; size = 4
_pColumn$ = -292					; size = 4
_pSort$ = -280						; size = 4
_xPosLastFixed$ = -268					; size = 4
_xPosOld$ = -256					; size = 4
_EndColumn$ = -244					; size = 4
_StartColumn$ = -232					; size = 4
_EndRow$ = -220						; size = 4
_j$ = -208						; size = 4
_i$ = -196						; size = 4
_Align$ = -184						; size = 4
_RowDistY$ = -172					; size = 4
_Width$ = -160						; size = 4
_yPos$ = -148						; size = 4
_xPos$ = -136						; size = 4
_EffectSize$ = -124					; size = 4
_RBorder$ = -112					; size = 4
_LBorder$ = -100					; size = 4
_NumColumns$ = -88					; size = 4
_NumVisRows$ = -76					; size = 4
_NumRows$ = -64						; size = 4
_Rect$ = -52						; size = 8
_ClipRect$ = -36					; size = 8
_pRow$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__Paint	PROC						; COMDAT
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 648				; 00000288H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-648]
	mov	ecx, 162				; 000000a2H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T17540[ebp], 0
	mov	BYTE PTR $T17539[ebp], 0
	mov	BYTE PTR $T17541[ebp], 0
; Line 335
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 337
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$[ebp], eax
; Line 338
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 339
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumVisibleRows
	add	esp, 8
	mov	DWORD PTR _NumVisRows$[ebp], eax
; Line 340
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetRowDistY
	add	esp, 4
	mov	DWORD PTR _RowDistY$[ebp], eax
; Line 341
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _LBorder$[ebp], ecx
; Line 342
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR _RBorder$[ebp], ecx
; Line 343
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 344
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetHeight
	add	esp, 4
	add	eax, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 346
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _ClipRect$[ebp], edx
	mov	DWORD PTR _ClipRect$[ebp+4], eax
; Line 347
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx]
	neg	eax
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 348
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 349
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI__IntersectRect
	add	esp, 8
; Line 351
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 352
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+104]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 353
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 355
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	$LN48@Paint
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jl	$LN48@Paint
; Line 356
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$[ebp], eax
; Line 357
	mov	eax, DWORD PTR _pSort$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _fpSort$[ebp], ecx
; Line 358
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 359
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$[ebp], 0
; Line 360
	cmp	DWORD PTR _NumRows$[ebp], 0
	jle	SHORT $LN48@Paint
; Line 362
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 363
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	DWORD PTR _fpSort$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _r$16998[ebp], eax
; Line 364
	cmp	DWORD PTR _r$16998[ebp], 0
	je	SHORT $LN46@Paint
; Line 365
	jmp	$LN49@Paint
$LN46@Paint:
; Line 367
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
$LN48@Paint:
; Line 371
	mov	eax, DWORD PTR _NumVisRows$[ebp]
	add	eax, 1
	cmp	eax, DWORD PTR _NumRows$[ebp]
	jle	SHORT $LN51@Paint
	mov	ecx, DWORD PTR _NumRows$[ebp]
	mov	DWORD PTR tv156[ebp], ecx
	jmp	SHORT $LN52@Paint
$LN51@Paint:
	mov	edx, DWORD PTR _NumVisRows$[ebp]
	add	edx, 1
	mov	DWORD PTR tv156[ebp], edx
$LN52@Paint:
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	add	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR _EndRow$[ebp], ecx
; Line 373
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN45@Paint
$LN44@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN45@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _EndRow$[ebp]
	jge	$LN43@Paint
; Line 374
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	__GetpRow
	add	esp, 8
	mov	DWORD PTR _pRow$[ebp], eax
; Line 375
	cmp	DWORD PTR _pRow$[ebp], 0
	je	SHORT $LN42@Paint
; Line 376
	mov	BYTE PTR $T17539[ebp], 1
	mov	eax, DWORD PTR _pRow$[ebp]
	mov	cl, BYTE PTR [eax+4]
	mov	BYTE PTR _Disabled$[ebp], cl
; Line 377
	mov	BYTE PTR $T17540[ebp], 1
	mov	eax, DWORD PTR _pRow$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _CellArray$[ebp], ecx
; Line 378
	mov	DWORD PTR _RowExist$[ebp], 1
; Line 379
	jmp	SHORT $LN41@Paint
$LN42@Paint:
; Line 380
	mov	DWORD PTR _RowExist$[ebp], 0
$LN41@Paint:
; Line 382
	cmp	DWORD PTR _pRow$[ebp], 0
	je	SHORT $LN40@Paint
; Line 383
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$[ebp], 0
$LN40@Paint:
; Line 385
	cmp	DWORD PTR _RowExist$[ebp], 0
	je	$LN39@Paint
; Line 386
	mov	ax, WORD PTR _yPos$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 388
	movsx	eax, WORD PTR _Rect$[ebp+2]
	movsx	ecx, WORD PTR _ClipRect$[ebp+6]
	cmp	eax, ecx
	jle	SHORT $LN38@Paint
; Line 389
	jmp	$LN43@Paint
$LN38@Paint:
; Line 391
	mov	eax, DWORD PTR _RowDistY$[ebp]
	mov	ecx, DWORD PTR _yPos$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 393
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _ClipRect$[ebp+2]
	cmp	eax, ecx
	jl	$LN37@Paint
; Line 395
	cmp	BYTE PTR $T17539[ebp], 0
	jne	SHORT $LN59@Paint
	push	OFFSET $LN60@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN59@Paint:
	movzx	eax, BYTE PTR _Disabled$[ebp]
	test	eax, eax
	je	SHORT $LN36@Paint
; Line 396
	mov	DWORD PTR _ColorIndex$[ebp], 3
	jmp	SHORT $LN35@Paint
$LN36@Paint:
; Line 397
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+112]
	jne	SHORT $LN34@Paint
; Line 398
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _ColorIndex$[ebp], ecx
; Line 399
	jmp	SHORT $LN35@Paint
$LN34@Paint:
; Line 400
	mov	DWORD PTR _ColorIndex$[ebp], 0
$LN35@Paint:
; Line 402
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+68]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 404
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	SHORT $LN32@Paint
; Line 405
	mov	ax, WORD PTR _Rect$[ebp+6]
	sub	ax, 1
	mov	WORD PTR _Rect$[ebp+6], ax
$LN32@Paint:
; Line 407
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _EffectSize$[ebp]
	sub	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 408
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _StartColumn$[ebp], ecx
; Line 409
	mov	eax, DWORD PTR _NumColumns$[ebp]
	sub	eax, 1
	mov	DWORD PTR _EndColumn$[ebp], eax
$LN31@Paint:
; Line 411
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN28@Paint
$LN27@Paint:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN28@Paint:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _EndColumn$[ebp]
	jg	$LN26@Paint
; Line 412
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_HEADER_GetItemWidth
	add	esp, 8
	mov	DWORD PTR _Width$[ebp], eax
; Line 413
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _StartColumn$[ebp]
	jl	$LN25@Paint
; Line 414
	mov	ax, WORD PTR _xPos$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 416
	movsx	eax, WORD PTR _Rect$[ebp]
	movsx	ecx, WORD PTR _ClipRect$[ebp+4]
	cmp	eax, ecx
	jle	SHORT $LN24@Paint
; Line 417
	jmp	$LN26@Paint
$LN24@Paint:
; Line 419
	mov	eax, DWORD PTR _Width$[ebp]
	mov	ecx, DWORD PTR _xPos$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _Rect$[ebp+4], dx
; Line 421
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _ClipRect$[ebp]
	cmp	eax, ecx
	jl	$LN25@Paint
; Line 422
	cmp	BYTE PTR $T17540[ebp], 0
	jne	SHORT $LN61@Paint
	push	OFFSET $LN62@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN61@Paint:
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$[ebp], eax
; Line 423
	cmp	DWORD PTR _pCell$[ebp], 0
	je	$LN25@Paint
; Line 424
	mov	DWORD PTR _pfDraw$[ebp], 0
; Line 425
	mov	DWORD PTR _pCellInfo$[ebp], 0
; Line 426
	mov	BYTE PTR _Flags$[ebp], 0
; Line 427
	mov	eax, DWORD PTR _pCell$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN21@Paint
; Line 428
	mov	eax, DWORD PTR _pCell$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pCellInfo$[ebp], eax
; Line 429
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	cl, BYTE PTR [eax+44]
	mov	BYTE PTR _Flags$[ebp], cl
; Line 430
	mov	eax, DWORD PTR _pCellInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pfDraw$[ebp], ecx
$LN21@Paint:
; Line 432
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 1
	je	SHORT $LN20@Paint
; Line 433
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pCellInfo$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+8]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 434
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pCellInfo$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+24]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 435
	jmp	SHORT $LN19@Paint
$LN20@Paint:
; Line 436
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+84]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
$LN19@Paint:
; Line 438
	cmp	DWORD PTR _pCellInfo$[ebp], 0
	je	SHORT $LN18@Paint
; Line 439
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCellInfo$[ebp], 0
$LN18@Paint:
; Line 444
	movsx	eax, WORD PTR _Rect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _Rect$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _Rect$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _Rect$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 448
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 2
	je	SHORT $LN17@Paint
; Line 449
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$[ebp], 0
; Line 450
	mov	esi, esp
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _j$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	DWORD PTR _pfDraw$[ebp]
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 451
	cmp	BYTE PTR $T17540[ebp], 0
	jne	SHORT $LN63@Paint
	push	OFFSET $LN62@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN63@Paint:
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$[ebp], eax
$LN17@Paint:
; Line 456
	movsx	eax, WORD PTR _Rect$[ebp]
	add	eax, DWORD PTR _LBorder$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 457
	movsx	eax, WORD PTR _Rect$[ebp+4]
	sub	eax, DWORD PTR _RBorder$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 458
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+64]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$[ebp], eax
; Line 459
	mov	eax, DWORD PTR _pColumn$[ebp]
	movzx	ecx, BYTE PTR [eax]
	mov	DWORD PTR _Align$[ebp], ecx
; Line 460
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$[ebp], 0
; Line 461
	mov	eax, DWORD PTR _Align$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pCell$[ebp]
	add	edx, 4
	push	edx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 462
	mov	eax, DWORD PTR _pCell$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN16@Paint
; Line 463
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+68]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
$LN16@Paint:
; Line 465
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$[ebp], 0
$LN25@Paint:
; Line 469
	mov	eax, DWORD PTR _xPos$[ebp]
	add	eax, DWORD PTR _Width$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 470
	jmp	$LN27@Paint
$LN26@Paint:
; Line 471
	cmp	DWORD PTR _StartColumn$[ebp], 0
	jne	SHORT $LN15@Paint
; Line 472
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+140], 0
	je	SHORT $LN14@Paint
; Line 473
	cmp	BYTE PTR $T17541[ebp], 0
	jne	SHORT $LN64@Paint
	push	OFFSET $LN65@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN64@Paint:
	mov	eax, DWORD PTR _xPosOld$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
$LN14@Paint:
; Line 475
	jmp	SHORT $LN29@Paint
$LN15@Paint:
; Line 477
	mov	DWORD PTR _StartColumn$[ebp], 0
; Line 478
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	sub	ecx, 1
	mov	DWORD PTR _EndColumn$[ebp], ecx
; Line 479
	mov	BYTE PTR $T17541[ebp], 1
	mov	eax, DWORD PTR _xPos$[ebp]
	mov	DWORD PTR _xPosOld$[ebp], eax
; Line 480
	mov	eax, DWORD PTR _EffectSize$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 481
	mov	eax, 1
	test	eax, eax
	jne	$LN31@Paint
$LN29@Paint:
; Line 483
	movsx	eax, WORD PTR _ClipRect$[ebp+4]
	cmp	DWORD PTR _xPos$[ebp], eax
	jg	SHORT $LN37@Paint
; Line 484
	movsx	eax, WORD PTR _Rect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _ClipRect$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _Rect$[ebp+2]
	push	edx
	mov	eax, DWORD PTR _xPos$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
$LN37@Paint:
; Line 487
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _RowDistY$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
$LN39@Paint:
; Line 489
	jmp	$LN44@Paint
$LN43@Paint:
; Line 491
	movsx	eax, WORD PTR _ClipRect$[ebp+6]
	cmp	DWORD PTR _yPos$[ebp], eax
	jg	SHORT $LN12@Paint
; Line 492
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 493
	movsx	eax, WORD PTR _ClipRect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _ClipRect$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _yPos$[ebp]
	push	edx
	movsx	eax, WORD PTR _ClipRect$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
$LN12@Paint:
; Line 496
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+116], 0
	je	$LN11@Paint
; Line 497
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 498
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetHeight
	add	esp, 4
	mov	edx, DWORD PTR _EffectSize$[ebp]
	lea	eax, DWORD PTR [eax+edx-1]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 499
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN10@Paint
$LN9@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN10@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumVisRows$[ebp]
	jge	SHORT $LN8@Paint
; Line 500
	mov	eax, DWORD PTR _yPos$[ebp]
	add	eax, DWORD PTR _RowDistY$[ebp]
	mov	DWORD PTR _yPos$[ebp], eax
; Line 502
	movsx	eax, WORD PTR _ClipRect$[ebp+6]
	cmp	DWORD PTR _yPos$[ebp], eax
	jle	SHORT $LN7@Paint
; Line 503
	jmp	SHORT $LN8@Paint
$LN7@Paint:
; Line 506
	movsx	eax, WORD PTR _ClipRect$[ebp+2]
	cmp	DWORD PTR _yPos$[ebp], eax
	jl	SHORT $LN6@Paint
; Line 507
	movsx	eax, WORD PTR _ClipRect$[ebp+4]
	push	eax
	movsx	ecx, WORD PTR _ClipRect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _yPos$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
$LN6@Paint:
; Line 509
	jmp	SHORT $LN9@Paint
$LN8@Paint:
; Line 510
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _EffectSize$[ebp]
	sub	ecx, DWORD PTR [eax+160]
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 511
	mov	DWORD PTR _xPosLastFixed$[ebp], 0
; Line 512
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@Paint
$LN4@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumColumns$[ebp]
	jge	$LN11@Paint
; Line 513
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_HEADER_GetItemWidth
	add	esp, 8
	add	eax, DWORD PTR _xPos$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 514
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+140]
	jge	SHORT $LN53@Paint
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	DWORD PTR tv369[ebp], eax
	jmp	SHORT $LN54@Paint
$LN53@Paint:
	mov	DWORD PTR tv369[ebp], 0
$LN54@Paint:
	mov	ecx, DWORD PTR _xPos$[ebp]
	add	ecx, DWORD PTR tv369[ebp]
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 515
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+140]
	jge	SHORT $LN55@Paint
	mov	edx, DWORD PTR _xPos$[ebp]
	mov	DWORD PTR tv373[ebp], edx
	jmp	SHORT $LN56@Paint
$LN55@Paint:
	mov	eax, DWORD PTR _xPosLastFixed$[ebp]
	mov	DWORD PTR tv373[ebp], eax
$LN56@Paint:
	mov	ecx, DWORD PTR tv373[ebp]
	mov	DWORD PTR _xPosLastFixed$[ebp], ecx
; Line 517
	movsx	eax, WORD PTR _ClipRect$[ebp+4]
	cmp	DWORD PTR _xPos$[ebp], eax
	jle	SHORT $LN2@Paint
; Line 518
	jmp	SHORT $LN11@Paint
$LN2@Paint:
; Line 521
	movsx	eax, WORD PTR _ClipRect$[ebp]
	cmp	DWORD PTR _xPos$[ebp], eax
	jl	SHORT $LN1@Paint
	mov	eax, DWORD PTR _xPos$[ebp]
	cmp	eax, DWORD PTR _xPosLastFixed$[ebp]
	jl	SHORT $LN1@Paint
; Line 522
	movsx	eax, WORD PTR _ClipRect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _ClipRect$[ebp+2]
	push	ecx
	mov	edx, DWORD PTR _xPos$[ebp]
	push	edx
	call	_GUI_DrawVLine
	add	esp, 12					; 0000000cH
$LN1@Paint:
; Line 524
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+140]
	jge	SHORT $LN57@Paint
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+160]
	mov	DWORD PTR tv387[ebp], eax
	jmp	SHORT $LN58@Paint
$LN57@Paint:
	mov	DWORD PTR tv387[ebp], 0
$LN58@Paint:
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, DWORD PTR tv387[ebp]
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 525
	jmp	$LN4@Paint
$LN11@Paint:
; Line 528
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WIDGET__EFFECT_DrawDown
	add	esp, 4
; Line 529
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN49@Paint:
; Line 530
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN69@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 648				; 00000288H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN69@Paint:
	DD	2
	DD	$LN68@Paint
$LN68@Paint:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN66@Paint
	DD	-52					; ffffffccH
	DD	8
	DD	$LN67@Paint
$LN67@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN66@Paint:
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN65@Paint:
	DB	120					; 00000078H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	79					; 0000004fH
	DB	108					; 0000006cH
	DB	100					; 00000064H
	DB	0
$LN62@Paint:
	DB	67					; 00000043H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	121					; 00000079H
	DB	0
$LN60@Paint:
	DB	68					; 00000044H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	97					; 00000061H
	DB	98					; 00000062H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
__Paint	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetpRow
_TEXT	SEGMENT
_pData$16933 = -32					; size = 4
_pSort$16932 = -20					; size = 4
_r$ = -8						; size = 4
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetpRow PROC						; COMDAT
; Line 289
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 291
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN4@GetpRow
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+120], 0
	jl	SHORT $LN4@GetpRow
; Line 294
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$16932[ebp], eax
; Line 295
	mov	eax, DWORD PTR _pSort$16932[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pData$16933[ebp], eax
; Line 296
	mov	eax, DWORD PTR _pSort$16932[ebp]
	movzx	ecx, WORD PTR [eax+4]
	cmp	DWORD PTR _Index$[ebp], ecx
	jl	SHORT $LN3@GetpRow
; Line 297
	mov	DWORD PTR _r$[ebp], 0
; Line 298
	jmp	SHORT $LN2@GetpRow
$LN3@GetpRow:
; Line 299
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pData$16933[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	push	edx
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
$LN2@GetpRow:
; Line 301
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$16932[ebp], 0
; Line 302
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pData$16933[ebp], 0
; Line 303
	jmp	SHORT $LN1@GetpRow
$LN4@GetpRow:
; Line 304
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
$LN1@GetpRow:
; Line 306
	mov	eax, DWORD PTR _r$[ebp]
; Line 307
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetpRow ENDP
_TEXT	ENDS
EXTRN	_WM__SendMessage:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __NotifyOwner
_TEXT	SEGMENT
_hOwner$ = -32						; size = 4
_Msg$ = -20						; size = 16
_hObj$ = 8						; size = 4
_Notification$ = 12					; size = 4
__NotifyOwner PROC					; COMDAT
; Line 608
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 609
	mov	DWORD PTR _Msg$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Msg$[ebp+4], eax
	mov	DWORD PTR _Msg$[ebp+8], eax
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 611
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR _hOwner$[ebp], eax
; Line 612
	mov	DWORD PTR _Msg$[ebp], 38		; 00000026H
; Line 613
	mov	eax, DWORD PTR _Notification$[ebp]
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 614
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _Msg$[ebp+8], eax
; Line 615
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 616
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@NotifyOwne
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@NotifyOwne:
	DD	1
	DD	$LN4@NotifyOwne
$LN4@NotifyOwne:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@NotifyOwne
$LN3@NotifyOwne:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
__NotifyOwner ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnTouch
_TEXT	SEGMENT
_pState$ = -20						; size = 4
_Notification$ = -8					; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 622
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 624
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 625
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN4@OnTouch
; Line 626
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN3@OnTouch
; Line 627
	mov	eax, DWORD PTR _pState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSelFromPos
	add	esp, 8
; Line 628
	mov	DWORD PTR _Notification$[ebp], 1
; Line 629
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 630
	jmp	SHORT $LN2@OnTouch
$LN3@OnTouch:
; Line 631
	mov	DWORD PTR _Notification$[ebp], 2
$LN2@OnTouch:
; Line 633
	jmp	SHORT $LN1@OnTouch
$LN4@OnTouch:
; Line 634
	mov	DWORD PTR _Notification$[ebp], 3
$LN1@OnTouch:
; Line 636
	mov	eax, DWORD PTR _Notification$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__NotifyOwner
	add	esp, 8
; Line 637
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SetSelFromPos
_TEXT	SEGMENT
_lBorder$ = -120					; size = 4
_ScrollStateV_v$ = -108					; size = 4
_Sel$ = -96						; size = 4
_NumRows$ = -84						; size = 4
_RowDistY$ = -72					; size = 4
_HeaderHeight$ = -60					; size = 4
_y$ = -48						; size = 4
_x$ = -36						; size = 4
_Rect$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pState$ = 12						; size = 4
__SetSelFromPos PROC					; COMDAT
; Line 572
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 578
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 579
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetRowDistY
	add	esp, 4
	mov	DWORD PTR _RowDistY$[ebp], eax
; Line 580
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 581
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_HEADER_GetHeight
	add	esp, 4
	mov	DWORD PTR _HeaderHeight$[ebp], eax
; Line 582
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+148]
	mov	DWORD PTR _ScrollStateV_v$[ebp], ecx
; Line 583
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	DWORD PTR _lBorder$[ebp], ecx
; Line 584
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 585
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 586
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	ecx, DWORD PTR _pState$[ebp]
	mov	edx, DWORD PTR [ecx]
	sub	edx, eax
	mov	DWORD PTR _x$[ebp], edx
; Line 587
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	ecx, DWORD PTR _pState$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	sub	edx, eax
	sub	edx, DWORD PTR _HeaderHeight$[ebp]
	mov	DWORD PTR _y$[ebp], edx
; Line 588
	movsx	eax, WORD PTR _Rect$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp+4]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 589
	movsx	eax, WORD PTR _Rect$[ebp+2]
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 592
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _lBorder$[ebp]
	jl	SHORT $LN3@SetSelFrom
	movsx	eax, WORD PTR _Rect$[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jg	SHORT $LN3@SetSelFrom
	cmp	DWORD PTR _y$[ebp], 0
	jl	SHORT $LN3@SetSelFrom
	movsx	eax, WORD PTR _Rect$[ebp+6]
	sub	eax, DWORD PTR _HeaderHeight$[ebp]
	cmp	DWORD PTR _y$[ebp], eax
	jg	SHORT $LN3@SetSelFrom
; Line 593
	mov	eax, DWORD PTR _y$[ebp]
	cdq
	idiv	DWORD PTR _RowDistY$[ebp]
	add	eax, DWORD PTR _ScrollStateV_v$[ebp]
	mov	DWORD PTR _Sel$[ebp], eax
; Line 594
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _NumRows$[ebp]
	jge	SHORT $LN3@SetSelFrom
; Line 595
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
$LN3@SetSelFrom:
; Line 598
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SetSelFrom
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@SetSelFrom:
	DD	1
	DD	$LN6@SetSelFrom
$LN6@SetSelFrom:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN5@SetSelFrom
$LN5@SetSelFrom:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__SetSelFromPos ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_Delete:PROC
EXTRN	_GUI_ALLOC_Free:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __FreeAttached
_TEXT	SEGMENT
_pSort$17193 = -80					; size = 4
_pCell$17186 = -68					; size = 4
_pRow$17181 = -56					; size = 4
_NumColumns$ = -44					; size = 4
_NumRows$ = -32						; size = 4
_j$ = -20						; size = 4
_i$ = -8						; size = 4
_pObj$ = 8						; size = 4
__FreeAttached PROC					; COMDAT
; Line 772
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 774
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 775
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$[ebp], eax
; Line 776
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@FreeAttach
$LN8@FreeAttach:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@FreeAttach:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumRows$[ebp]
	jge	$LN7@FreeAttach
; Line 778
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+60]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$17181[ebp], eax
; Line 780
	mov	DWORD PTR _j$[ebp], 0
	jmp	SHORT $LN6@FreeAttach
$LN5@FreeAttach:
	mov	eax, DWORD PTR _j$[ebp]
	add	eax, 1
	mov	DWORD PTR _j$[ebp], eax
$LN6@FreeAttach:
	mov	eax, DWORD PTR _j$[ebp]
	cmp	eax, DWORD PTR _NumColumns$[ebp]
	jge	SHORT $LN4@FreeAttach
; Line 782
	mov	eax, DWORD PTR _j$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRow$17181[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$17186[ebp], eax
; Line 783
	cmp	DWORD PTR _pCell$17186[ebp], 0
	je	SHORT $LN3@FreeAttach
; Line 784
	mov	eax, DWORD PTR _pCell$17186[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN2@FreeAttach
; Line 785
	mov	eax, DWORD PTR _pCell$17186[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN2@FreeAttach:
; Line 787
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$17186[ebp], 0
$LN3@FreeAttach:
; Line 789
	jmp	SHORT $LN5@FreeAttach
$LN4@FreeAttach:
; Line 791
	mov	eax, DWORD PTR _pRow$17181[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 792
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$17181[ebp], 0
; Line 793
	jmp	$LN8@FreeAttach
$LN7@FreeAttach:
; Line 795
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN1@FreeAttach
; Line 797
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pSort$17193[ebp], eax
; Line 798
	mov	esi, esp
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	push	ecx
	mov	edx, DWORD PTR _pSort$17193[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 799
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pSort$17193[ebp], 0
$LN1@FreeAttach:
; Line 801
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 802
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 803
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__FreeAttached ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WM_SetScrollValue:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __AddKey
_TEXT	SEGMENT
tv71 = -268						; size = 4
_r$ = -68						; size = 4
_NumRows$ = -56						; size = 4
_ScrollStepH$ = -44					; size = 2
_ScrollStateH$ = -32					; size = 12
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
__AddKey PROC						; COMDAT
; Line 875
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 881
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 882
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$[ebp+8], eax
; Line 883
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+108]
	mov	WORD PTR _ScrollStepH$[ebp], cx
; Line 884
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$[ebp], eax
; Line 885
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 886
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv71[ebp], eax
	mov	ecx, DWORD PTR tv71[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR tv71[ebp], ecx
	cmp	DWORD PTR tv71[ebp], 18			; 00000012H
	ja	$LN11@AddKey
	mov	edx, DWORD PTR tv71[ebp]
	movzx	eax, BYTE PTR $LN15@AddKey[edx]
	jmp	DWORD PTR $LN19@AddKey[eax*4]
$LN10@AddKey:
; Line 888
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__MoveSel
	add	esp, 8
; Line 889
	mov	eax, 1
	jmp	$LN13@AddKey
$LN9@AddKey:
; Line 891
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnPage
	add	esp, 8
; Line 892
	mov	eax, 1
	jmp	$LN13@AddKey
$LN8@AddKey:
; Line 894
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__MoveSel
	add	esp, 8
; Line 895
	mov	eax, 1
	jmp	$LN13@AddKey
$LN7@AddKey:
; Line 897
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnPage
	add	esp, 8
; Line 898
	mov	eax, 1
	jmp	$LN13@AddKey
$LN6@AddKey:
; Line 900
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__SetSel
	add	esp, 8
; Line 901
	mov	eax, 1
	jmp	$LN13@AddKey
$LN5@AddKey:
; Line 903
	mov	eax, DWORD PTR _NumRows$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
; Line 904
	mov	eax, 1
	jmp	$LN13@AddKey
$LN4@AddKey:
; Line 906
	movzx	eax, WORD PTR _ScrollStepH$[ebp]
	add	eax, DWORD PTR _ScrollStateH$[ebp+4]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateH$[ebp]
	push	ecx
	call	_WM_SetScrollValue
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 907
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 908
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _ScrollStateH$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ScrollStateH$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _ScrollStateH$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 909
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 910
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN3@AddKey
; Line 911
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollPos
	add	esp, 4
; Line 912
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
$LN3@AddKey:
; Line 914
	mov	eax, 1
	jmp	SHORT $LN13@AddKey
$LN2@AddKey:
; Line 916
	movzx	eax, WORD PTR _ScrollStepH$[ebp]
	mov	ecx, DWORD PTR _ScrollStateH$[ebp+4]
	sub	ecx, eax
	push	ecx
	lea	edx, DWORD PTR _ScrollStateH$[ebp]
	push	edx
	call	_WM_SetScrollValue
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 917
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 918
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 156				; 0000009cH
	mov	ecx, DWORD PTR _ScrollStateH$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ScrollStateH$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _ScrollStateH$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 919
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 920
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN1@AddKey
; Line 921
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollPos
	add	esp, 4
; Line 922
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
$LN1@AddKey:
; Line 924
	mov	eax, 1
	jmp	SHORT $LN13@AddKey
$LN11@AddKey:
; Line 926
	xor	eax, eax
$LN13@AddKey:
; Line 927
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@AddKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN18@AddKey:
	DD	1
	DD	$LN17@AddKey
$LN17@AddKey:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN16@AddKey
$LN16@AddKey:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
	npad	3
$LN19@AddKey:
	DD	$LN2@AddKey
	DD	$LN8@AddKey
	DD	$LN4@AddKey
	DD	$LN10@AddKey
	DD	$LN6@AddKey
	DD	$LN5@AddKey
	DD	$LN7@AddKey
	DD	$LN9@AddKey
	DD	$LN11@AddKey
$LN15@AddKey:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	8
	DB	8
	DB	8
	DB	4
	DB	5
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	6
	DB	7
__AddKey ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPage
_TEXT	SEGMENT
_Pos$17213 = -68					; size = 4
_ScrollStateV$ = -56					; size = 12
_NumItems$ = -36					; size = 4
_Sel$ = -24						; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_Dir$ = 12						; size = 4
__OnPage PROC						; COMDAT
; Line 822
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 827
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 828
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 829
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 144				; 00000090H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 830
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 831
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 833
	cmp	DWORD PTR _Dir$[ebp], 0
	jge	SHORT $LN10@OnPage
; Line 835
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _ScrollStateV$[ebp+4]
	je	SHORT $LN9@OnPage
; Line 837
	mov	eax, DWORD PTR _ScrollStateV$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
; Line 838
	jmp	SHORT $LN8@OnPage
$LN9@OnPage:
; Line 840
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _ScrollStateV$[ebp+8]
	jl	SHORT $LN7@OnPage
; Line 842
	mov	eax, DWORD PTR _ScrollStateV$[ebp+8]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__MoveSel
	add	esp, 8
; Line 843
	jmp	SHORT $LN8@OnPage
$LN7@OnPage:
; Line 845
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__SetSel
	add	esp, 8
$LN8@OnPage:
; Line 848
	jmp	SHORT $LN11@OnPage
$LN10@OnPage:
; Line 851
	mov	eax, DWORD PTR _ScrollStateV$[ebp+8]
	mov	ecx, DWORD PTR _ScrollStateV$[ebp+4]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _Pos$17213[ebp], edx
; Line 852
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _Pos$17213[ebp]
	je	SHORT $LN4@OnPage
; Line 854
	mov	eax, DWORD PTR _Pos$17213[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
; Line 855
	jmp	SHORT $LN11@OnPage
$LN4@OnPage:
; Line 857
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, DWORD PTR _ScrollStateV$[ebp+8]
	sub	eax, 1
	cmp	DWORD PTR _Sel$[ebp], eax
	jge	SHORT $LN2@OnPage
; Line 859
	mov	eax, DWORD PTR _ScrollStateV$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__MoveSel
	add	esp, 8
; Line 860
	jmp	SHORT $LN11@OnPage
$LN2@OnPage:
; Line 862
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTVIEW__SetSel
	add	esp, 8
$LN11@OnPage:
; Line 866
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@OnPage
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN15@OnPage:
	DD	1
	DD	$LN14@OnPage
$LN14@OnPage:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN13@OnPage
$LN13@OnPage:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
__OnPage ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_CreateEx
EXTRN	_HEADER_CreateEx:PROC
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
EXTRN	_WM_GetClientRectEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_CreateEx
_TEXT	SEGMENT
_pObj$17340 = -72					; size = 4
_hHeader$17339 = -60					; size = 4
_ColumnArray$17338 = -48				; size = 4
_RowArray$17337 = -36					; size = 4
_Rect$17333 = -24					; size = 8
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_LISTVIEW_CreateEx PROC					; COMDAT
; Line 1094
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1096
	mov	eax, DWORD PTR _ExFlags$[ebp]
	mov	DWORD PTR _ExFlags$[ebp], eax
; Line 1099
	cmp	DWORD PTR _xsize$[ebp], 0
	jne	SHORT $LN4@LISTVIEW_C@2
	cmp	DWORD PTR _ysize$[ebp], 0
	jne	SHORT $LN4@LISTVIEW_C@2
	cmp	DWORD PTR _x0$[ebp], 0
	jne	SHORT $LN4@LISTVIEW_C@2
	cmp	DWORD PTR _y0$[ebp], 0
	jne	SHORT $LN4@LISTVIEW_C@2
; Line 1101
	lea	eax, DWORD PTR _Rect$17333[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	call	_WM_GetClientRectEx
	add	esp, 8
; Line 1102
	movsx	eax, WORD PTR _Rect$17333[ebp+4]
	movsx	ecx, WORD PTR _Rect$17333[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xsize$[ebp], eax
; Line 1103
	movsx	eax, WORD PTR _Rect$17333[ebp+6]
	movsx	ecx, WORD PTR _Rect$17333[ebp+2]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _ysize$[ebp], eax
$LN4@LISTVIEW_C@2:
; Line 1106
	push	132					; 00000084H
	push	OFFSET _LISTVIEW_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 1107
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN3@LISTVIEW_C@2
; Line 1113
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _RowArray$17337[ebp], eax
; Line 1114
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _ColumnArray$17338[ebp], eax
; Line 1115
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17340[ebp], eax
; Line 1116
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	ecx, DWORD PTR _RowArray$17337[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 1117
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	ecx, DWORD PTR _ColumnArray$17338[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 1119
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$17340[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 1121
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+176], 1279873878		; 4c495356H
; Line 1122
	mov	edi, DWORD PTR _pObj$17340[ebp]
	add	edi, 68					; 00000044H
	mov	ecx, 11					; 0000000bH
	mov	esi, OFFSET _LISTVIEW_DefaultProps
	rep movsd
; Line 1123
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+116], 0
; Line 1124
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+124], 0
; Line 1125
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+112], -1
; Line 1126
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+128], 1
; Line 1127
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+132], 1
; Line 1128
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	DWORD PTR [eax+136], 0
; Line 1129
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17340[ebp], 0
; Line 1130
	push	0
	push	0
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	0
	call	_HEADER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hHeader$17339[ebp], eax
; Line 1131
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17340[ebp], eax
; Line 1132
	mov	eax, DWORD PTR _pObj$17340[ebp]
	mov	ecx, DWORD PTR _hHeader$17339[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 1133
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17340[ebp], 0
; Line 1134
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
; Line 1135
	jmp	SHORT $LN2@LISTVIEW_C@2
$LN3@LISTVIEW_C@2:
; Line 1136
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@LISTVIEW_C@2
	push	OFFSET $SG17346
	call	_GUI_ErrorOut
	add	esp, 4
$LN2@LISTVIEW_C@2:
; Line 1139
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 1140
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LISTVIEW_C@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@LISTVIEW_C@2:
	DD	1
	DD	$LN8@LISTVIEW_C@2
$LN8@LISTVIEW_C@2:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@LISTVIEW_C@2
$LN7@LISTVIEW_C@2:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTVIEW_CreateEx ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_IncSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_IncSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_LISTVIEW_IncSel PROC					; COMDAT
; Line 1152
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1153
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@LISTVIEW_I
; Line 1155
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__MoveSel
	add	esp, 8
$LN2@LISTVIEW_I:
; Line 1158
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_IncSel ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_DecSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_DecSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_LISTVIEW_DecSel PROC					; COMDAT
; Line 1164
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1165
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@LISTVIEW_D
; Line 1167
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__MoveSel
	add	esp, 8
$LN2@LISTVIEW_D:
; Line 1170
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_DecSel ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_AddColumn
EXTRN	_GUI_ARRAY_AddItem:PROC
EXTRN	_HEADER_AddItem:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_AddColumn
_TEXT	SEGMENT
_i$17377 = -120						; size = 4
_pRow$17376 = -108					; size = 4
_CellArray$17372 = -96					; size = 4
_RowArray$17371 = -84					; size = 4
_ColumnArray$17370 = -72				; size = 4
_NumRows$17369 = -60					; size = 4
_hHeader$17368 = -48					; size = 4
_Column$17367 = -36					; size = 8
_pObj$17366 = -20					; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Width$ = 12						; size = 4
_s$ = 16						; size = 4
_Align$ = 20						; size = 4
_LISTVIEW_AddColumn PROC				; COMDAT
; Line 1176
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1177
	mov	DWORD PTR _r$[ebp], 0
; Line 1178
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN6@LISTVIEW_A
; Line 1180
	mov	BYTE PTR _Column$17367[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Column$17367[ebp+4], eax
; Line 1188
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17366[ebp], eax
; Line 1189
	mov	eax, DWORD PTR _pObj$17366[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _hHeader$17368[ebp], ecx
; Line 1190
	mov	eax, DWORD PTR _pObj$17366[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _ColumnArray$17370[ebp], ecx
; Line 1191
	mov	eax, DWORD PTR _pObj$17366[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$17371[ebp], ecx
; Line 1192
	mov	eax, DWORD PTR _pObj$17366[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _NumRows$17369[ebp], eax
; Line 1193
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17366[ebp], 0
; Line 1194
	mov	eax, DWORD PTR _Align$[ebp]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Width$[ebp]
	push	edx
	mov	eax, DWORD PTR _hHeader$17368[ebp]
	push	eax
	call	_HEADER_AddItem
	add	esp, 16					; 00000010H
; Line 1195
	mov	al, BYTE PTR _Align$[ebp]
	mov	BYTE PTR _Column$17367[ebp], al
; Line 1196
	push	8
	lea	eax, DWORD PTR _Column$17367[ebp]
	push	eax
	mov	ecx, DWORD PTR _ColumnArray$17370[ebp]
	push	ecx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
; Line 1197
	cmp	DWORD PTR _NumRows$17369[ebp], 0
	je	SHORT $LN5@LISTVIEW_A
; Line 1200
	mov	DWORD PTR _i$17377[ebp], 0
	jmp	SHORT $LN4@LISTVIEW_A
$LN3@LISTVIEW_A:
	mov	eax, DWORD PTR _i$17377[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17377[ebp], eax
$LN4@LISTVIEW_A:
	mov	eax, DWORD PTR _i$17377[ebp]
	cmp	eax, DWORD PTR _NumRows$17369[ebp]
	jae	SHORT $LN5@LISTVIEW_A
; Line 1201
	mov	eax, DWORD PTR _i$17377[ebp]
	push	eax
	mov	ecx, DWORD PTR _RowArray$17371[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$17376[ebp], eax
; Line 1202
	mov	eax, DWORD PTR _pRow$17376[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _CellArray$17372[ebp], ecx
; Line 1203
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$17376[ebp], 0
; Line 1204
	push	8
	push	0
	mov	eax, DWORD PTR _CellArray$17372[ebp]
	push	eax
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN1@LISTVIEW_A
; Line 1205
	mov	DWORD PTR _r$[ebp], 1
; Line 1206
	jmp	SHORT $LN5@LISTVIEW_A
$LN1@LISTVIEW_A:
; Line 1208
	jmp	SHORT $LN3@LISTVIEW_A
$LN5@LISTVIEW_A:
; Line 1210
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17366[ebp], eax
; Line 1211
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
; Line 1212
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17366[ebp], 0
; Line 1213
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
$LN6@LISTVIEW_A:
; Line 1216
	mov	eax, DWORD PTR _r$[ebp]
; Line 1217
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@LISTVIEW_A
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@LISTVIEW_A:
	DD	1
	DD	$LN10@LISTVIEW_A
$LN10@LISTVIEW_A:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@LISTVIEW_A
$LN9@LISTVIEW_A:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	110					; 0000006eH
	DB	0
_LISTVIEW_AddColumn ENDP
_TEXT	ENDS
PUBLIC	_LISTVIEW_AddRow
EXTRN	_strcpy:PROC
EXTRN	_GUI_ARRAY_DeleteItem:PROC
EXTRN	_GUI__strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTVIEW_AddRow
_TEXT	SEGMENT
tv94 = -328						; size = 4
tv82 = -328						; size = 4
_pCell$17410 = -128					; size = 4
_s$17402 = -116						; size = 4
_NumBytes$17401 = -104					; size = 4
_i$17400 = -92						; size = 4
_CellArray$17399 = -80					; size = 4
_RowArray$17398 = -68					; size = 4
_pRow$17397 = -56					; size = 4
_pObj$17396 = -44					; size = 4
_NumColumns$17395 = -32					; size = 4
_RowIndex$17394 = -20					; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_ppText$ = 12						; size = 4
_LISTVIEW_AddRow PROC					; COMDAT
; Line 1223
	push	ebp
	mov	ebp, esp
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-328]
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1224
	mov	DWORD PTR _r$[ebp], 0
; Line 1225
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN13@LISTVIEW_A@2
; Line 1236
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17396[ebp], eax
; Line 1237
	mov	eax, DWORD PTR _pObj$17396[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _RowArray$17398[ebp], ecx
; Line 1238
	mov	eax, DWORD PTR _pObj$17396[ebp]
	push	eax
	call	_LISTVIEW__GetNumRows
	add	esp, 4
	mov	DWORD PTR _RowIndex$17394[ebp], eax
; Line 1239
	mov	eax, DWORD PTR _pObj$17396[ebp]
	push	eax
	call	_LISTVIEW__GetNumColumns
	add	esp, 4
	mov	DWORD PTR _NumColumns$17395[ebp], eax
; Line 1240
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17396[ebp], 0
; Line 1243
	push	12					; 0000000cH
	push	0
	mov	eax, DWORD PTR _RowArray$17398[ebp]
	push	eax
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN12@LISTVIEW_A@2
; Line 1244
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _CellArray$17399[ebp], eax
; Line 1246
	mov	DWORD PTR _i$17400[ebp], 0
	jmp	SHORT $LN11@LISTVIEW_A@2
$LN10@LISTVIEW_A@2:
	mov	eax, DWORD PTR _i$17400[ebp]
	add	eax, 1
	mov	DWORD PTR _i$17400[ebp], eax
$LN11@LISTVIEW_A@2:
	mov	eax, DWORD PTR _i$17400[ebp]
	cmp	eax, DWORD PTR _NumColumns$17395[ebp]
	jge	$LN9@LISTVIEW_A@2
; Line 1248
	cmp	DWORD PTR _ppText$[ebp], 0
	je	SHORT $LN16@LISTVIEW_A@2
	mov	eax, DWORD PTR _ppText$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv82[ebp], ecx
	mov	edx, DWORD PTR _ppText$[ebp]
	add	edx, 4
	mov	DWORD PTR _ppText$[ebp], edx
	jmp	SHORT $LN17@LISTVIEW_A@2
$LN16@LISTVIEW_A@2:
	mov	DWORD PTR tv82[ebp], 0
$LN17@LISTVIEW_A@2:
	mov	eax, DWORD PTR tv82[ebp]
	mov	DWORD PTR _s$17402[ebp], eax
; Line 1249
	cmp	DWORD PTR _s$17402[ebp], 0
	jne	SHORT $LN8@LISTVIEW_A@2
; Line 1250
	mov	DWORD PTR _ppText$[ebp], 0
$LN8@LISTVIEW_A@2:
; Line 1252
	mov	eax, DWORD PTR _s$17402[ebp]
	push	eax
	call	_GUI__strlen
	add	esp, 4
	add	eax, 1
	mov	DWORD PTR _NumBytes$17401[ebp], eax
; Line 1253
	mov	eax, DWORD PTR _NumBytes$17401[ebp]
	add	eax, 8
	push	eax
	push	0
	mov	ecx, DWORD PTR _CellArray$17399[ebp]
	push	ecx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	je	SHORT $LN7@LISTVIEW_A@2
; Line 1254
	mov	DWORD PTR _r$[ebp], 1
$LN6@LISTVIEW_A@2:
; Line 1256
	mov	eax, DWORD PTR _i$17400[ebp]
	mov	DWORD PTR tv94[ebp], eax
	mov	ecx, DWORD PTR _i$17400[ebp]
	sub	ecx, 1
	mov	DWORD PTR _i$17400[ebp], ecx
	cmp	DWORD PTR tv94[ebp], 0
	je	SHORT $LN5@LISTVIEW_A@2
; Line 1257
	mov	eax, DWORD PTR _i$17400[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$17399[ebp]
	push	ecx
	call	_GUI_ARRAY_DeleteItem
	add	esp, 8
; Line 1258
	jmp	SHORT $LN6@LISTVIEW_A@2
$LN5@LISTVIEW_A@2:
; Line 1259
	jmp	SHORT $LN9@LISTVIEW_A@2
$LN7@LISTVIEW_A@2:
; Line 1261
	mov	eax, DWORD PTR _i$17400[ebp]
	push	eax
	mov	ecx, DWORD PTR _CellArray$17399[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pCell$17410[ebp], eax
; Line 1262
	cmp	DWORD PTR _NumBytes$17401[ebp], 1
	jle	SHORT $LN4@LISTVIEW_A@2
; Line 1263
	mov	eax, DWORD PTR _s$17402[ebp]
	push	eax
	mov	ecx, DWORD PTR _pCell$17410[ebp]
	add	ecx, 4
	push	ecx
	call	_strcpy
	add	esp, 8
$LN4@LISTVIEW_A@2:
; Line 1265
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pCell$17410[ebp], 0
; Line 1266
	jmp	$LN10@LISTVIEW_A@2
$LN9@LISTVIEW_A@2:
; Line 1267
	mov	eax, DWORD PTR _RowIndex$17394[ebp]
	push	eax
	mov	ecx, DWORD PTR _RowArray$17398[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pRow$17397[ebp], eax
; Line 1268
	mov	eax, DWORD PTR _pRow$17397[ebp]
	mov	ecx, DWORD PTR _CellArray$17399[ebp]
	mov	DWORD PTR [eax], ecx
; Line 1269
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pRow$17397[ebp], 0
; Line 1270
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$17396[ebp], eax
; Line 1271
	mov	eax, DWORD PTR _pObj$17396[ebp]
	mov	BYTE PTR [eax+172], 0
; Line 1272
	mov	eax, DWORD PTR _pObj$17396[ebp]
	cmp	DWORD PTR [eax+168], 0
	je	SHORT $LN3@LISTVIEW_A@2
	mov	eax, DWORD PTR _pObj$17396[ebp]
	cmp	DWORD PTR [eax+120], 0
	jl	SHORT $LN3@LISTVIEW_A@2
; Line 1273
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__InvalidateInsideArea
	add	esp, 4
; Line 1274
	jmp	SHORT $LN2@LISTVIEW_A@2
$LN3@LISTVIEW_A@2:
; Line 1275
	mov	eax, DWORD PTR _RowIndex$17394[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$17396[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_LISTVIEW__InvalidateRow
	add	esp, 12					; 0000000cH
$LN2@LISTVIEW_A@2:
; Line 1277
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$17396[ebp], 0
; Line 1278
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTVIEW__UpdateScrollParas
	add	esp, 4
; Line 1279
	jmp	SHORT $LN13@LISTVIEW_A@2
$LN12@LISTVIEW_A@2:
; Line 1280
	mov	DWORD PTR _r$[ebp], 1
$LN13@LISTVIEW_A@2:
; Line 1284
	mov	eax, DWORD PTR _r$[ebp]
; Line 1285
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 328				; 00000148H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTVIEW_AddRow ENDP
_TEXT	ENDS
END
