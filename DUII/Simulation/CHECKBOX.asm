; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\CHECKBOX.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_CHECKBOX__GetButtonSize
PUBLIC	_CHECKBOX__DefaultProps
PUBLIC	_CHECKBOX__pSkinDefault
EXTRN	_CHECKBOX__SkinClassic:BYTE
EXTRN	_CHECKBOX__abmCheck:BYTE
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_CHECKBOX__DefaultProps DD FLAT:_GUI_Font13_1
	DD	0808080H
	DD	0ffffffH
	DD	0c0c0c0H
	DD	00H
	DD	00H
	DD	FLAT:_CHECKBOX__GetButtonSize
	DD	00H
	DW	0cH
	DB	04H
	ORG $+1
	DD	00H
	DD	00H
	DD	FLAT:_CHECKBOX__abmCheck
	DD	FLAT:_CHECKBOX__abmCheck+20
	ORG $+8
_CHECKBOX__pSkinDefault DD FLAT:_CHECKBOX__SkinClassic
$SG12612 DB	'CHECKBOX.c: Wrong handle type or Object not init''ed', 00H
$SG12659 DB	'CHECKBOX_Create failed', 00H
_DATA	ENDS
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\checkbox.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _CHECKBOX__GetButtonSize
_TEXT	SEGMENT
_ItemInfo$ = -36					; size = 32
_CHECKBOX__GetButtonSize PROC				; COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 223
	mov	DWORD PTR _ItemInfo$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _ItemInfo$[ebp+4], eax
	mov	DWORD PTR _ItemInfo$[ebp+8], eax
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 225
	mov	DWORD PTR _ItemInfo$[ebp+4], 23		; 00000017H
; Line 226
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CHECKBOX__pSkinDefault
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 227
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CHECKBOX__
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@CHECKBOX__:
	DD	1
	DD	$LN4@CHECKBOX__
$LN4@CHECKBOX__:
	DD	-36					; ffffffdcH
	DD	32					; 00000020H
	DD	$LN3@CHECKBOX__
$LN3@CHECKBOX__:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_CHECKBOX__GetButtonSize ENDP
_TEXT	ENDS
PUBLIC	_CHECKBOX_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CHECKBOX_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_CHECKBOX_LockH PROC					; COMDAT
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 235
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 236
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@CHECKBOX_L
; Line 237
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+128], 1128809795		; 43484543H
	je	SHORT $LN2@CHECKBOX_L
; Line 238
	push	OFFSET $SG12612
	call	_GUI_ErrorOut
	add	esp, 4
; Line 239
	xor	eax, eax
	jmp	SHORT $LN3@CHECKBOX_L
$LN2@CHECKBOX_L:
; Line 242
	mov	eax, DWORD PTR _p$[ebp]
$LN3@CHECKBOX_L:
; Line 243
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CHECKBOX_LockH ENDP
_TEXT	ENDS
PUBLIC	_CHECKBOX_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CHECKBOX_Callback
_TEXT	SEGMENT
tv69 = -208						; size = 4
_hObj$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_CHECKBOX_Callback PROC					; COMDAT
; Line 256
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 258
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 260
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@CHECKBOX_C
; Line 261
	jmp	SHORT $LN8@CHECKBOX_C
$LN7@CHECKBOX_C:
; Line 263
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 4
	ja	SHORT $LN5@CHECKBOX_C
	mov	eax, DWORD PTR tv69[ebp]
	jmp	DWORD PTR $LN10@CHECKBOX_C[eax*4]
$LN4@CHECKBOX_C:
; Line 265
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnKey
	add	esp, 8
; Line 266
	jmp	SHORT $LN5@CHECKBOX_C
$LN3@CHECKBOX_C:
; Line 269
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Paint
	add	esp, 4
; Line 270
	jmp	SHORT $LN8@CHECKBOX_C
$LN2@CHECKBOX_C:
; Line 272
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 273
	jmp	SHORT $LN5@CHECKBOX_C
$LN1@CHECKBOX_C:
; Line 276
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Delete
	add	esp, 4
$LN5@CHECKBOX_C:
; Line 279
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN8@CHECKBOX_C:
; Line 280
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@CHECKBOX_C:
	DD	$LN1@CHECKBOX_C
	DD	$LN2@CHECKBOX_C
	DD	$LN5@CHECKBOX_C
	DD	$LN4@CHECKBOX_C
	DD	$LN3@CHECKBOX_C
_CHECKBOX_Callback ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_UnlockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Paint
_TEXT	SEGMENT
_pfPaint$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 126
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pfPaint$[ebp], edx
; Line 128
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 129
	cmp	DWORD PTR _pfPaint$[ebp], 0
	je	SHORT $LN2@Paint
; Line 130
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	DWORD PTR _pfPaint$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Paint:
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI_StoreKey:PROC
EXTRN	_WM_NotifyParent:PROC
EXTRN	_CHECKBOX_SetState:PROC
EXTRN	_WM_SetCapture:PROC
EXTRN	_WM_HasCaptured:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnTouch
_TEXT	SEGMENT
_Id$ = -80						; size = 2
_CurrentState$ = -65					; size = 1
_NumStates$ = -53					; size = 1
_pState$ = -44						; size = 4
_Hit$ = -32						; size = 4
_Notification$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 140
	mov	DWORD PTR _Notification$[ebp], 0
; Line 141
	mov	DWORD PTR _Hit$[ebp], 0
; Line 147
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+120]
	mov	BYTE PTR _NumStates$[ebp], cl
; Line 149
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+121]
	mov	BYTE PTR _CurrentState$[ebp], cl
; Line 150
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+52]
	mov	WORD PTR _Id$[ebp], cx
; Line 151
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 152
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 153
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN6@OnTouch
; Line 154
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_HasCaptured
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN5@OnTouch
; Line 155
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN4@OnTouch
; Line 156
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetCapture
	add	esp, 8
; Line 157
	movzx	eax, BYTE PTR _CurrentState$[ebp]
	add	eax, 1
	movzx	ecx, BYTE PTR _NumStates$[ebp]
	cdq
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_CHECKBOX_SetState
	add	esp, 8
; Line 158
	mov	DWORD PTR _Notification$[ebp], 1
; Line 159
	jmp	SHORT $LN5@OnTouch
$LN4@OnTouch:
; Line 160
	mov	DWORD PTR _Hit$[ebp], 1
; Line 161
	mov	DWORD PTR _Notification$[ebp], 2
$LN5@OnTouch:
; Line 164
	jmp	SHORT $LN2@OnTouch
$LN6@OnTouch:
; Line 165
	mov	DWORD PTR _Notification$[ebp], 3
$LN2@OnTouch:
; Line 167
	mov	eax, DWORD PTR _Notification$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_NotifyParent
	add	esp, 8
; Line 168
	cmp	DWORD PTR _Hit$[ebp], 1
	jne	SHORT $LN7@OnTouch
; Line 170
	movsx	eax, WORD PTR _Id$[ebp]
	push	eax
	call	_GUI_StoreKey
	add	esp, 4
$LN7@OnTouch:
; Line 172
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
EXTRN	_WM__IsEnabled:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnKey
_TEXT	SEGMENT
tv74 = -244						; size = 4
_CurrentState$ = -41					; size = 1
_NumStates$ = -29					; size = 1
_pObj$ = -20						; size = 4
_pKeyInfo$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnKey	PROC						; COMDAT
; Line 178
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 183
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 184
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+120]
	mov	BYTE PTR _NumStates$[ebp], cl
; Line 185
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+121]
	mov	BYTE PTR _CurrentState$[ebp], cl
; Line 186
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 187
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN6@OnKey
; Line 188
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pKeyInfo$[ebp], ecx
; Line 189
	mov	eax, DWORD PTR _pKeyInfo$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jle	SHORT $LN6@OnKey
; Line 190
	mov	eax, DWORD PTR _pKeyInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
	cmp	DWORD PTR tv74[ebp], 32			; 00000020H
	je	SHORT $LN1@OnKey
	jmp	SHORT $LN6@OnKey
$LN1@OnKey:
; Line 192
	movzx	eax, BYTE PTR _CurrentState$[ebp]
	add	eax, 1
	movzx	ecx, BYTE PTR _NumStates$[ebp]
	cdq
	idiv	ecx
	push	edx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_CHECKBOX_SetState
	add	esp, 8
$LN6@OnKey:
; Line 197
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnKey	ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_FreePtr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Delete
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Delete PROC						; COMDAT
; Line 203
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 205
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_CHECKBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 208
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 124				; 0000007cH
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 209
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Delete ENDP
_TEXT	ENDS
PUBLIC	_CHECKBOX_CreateEx
EXTRN	_WIDGET__Init:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CHECKBOX_CreateEx
_TEXT	SEGMENT
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_CHECKBOX_CreateEx PROC					; COMDAT
; Line 298
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 301
	mov	eax, DWORD PTR _ExFlags$[ebp]
	mov	DWORD PTR _ExFlags$[ebp], eax
; Line 304
	cmp	DWORD PTR _xsize$[ebp], 0
	je	SHORT $LN7@CHECKBOX_C@2
	cmp	DWORD PTR _ysize$[ebp], 0
	jne	SHORT $LN8@CHECKBOX_C@2
$LN7@CHECKBOX_C@2:
; Line 305
	cmp	DWORD PTR _xsize$[ebp], 0
	jne	SHORT $LN6@CHECKBOX_C@2
; Line 306
	mov	eax, DWORD PTR _CHECKBOX__pSkinDefault
	mov	ecx, DWORD PTR [eax+8]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _xsize$[ebp], eax
$LN6@CHECKBOX_C@2:
; Line 308
	cmp	DWORD PTR _ysize$[ebp], 0
	jne	SHORT $LN8@CHECKBOX_C@2
; Line 309
	mov	eax, DWORD PTR _CHECKBOX__pSkinDefault
	mov	ecx, DWORD PTR [eax+8]
	mov	esi, esp
	mov	edx, DWORD PTR [ecx]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ysize$[ebp], eax
$LN8@CHECKBOX_C@2:
; Line 313
	cmp	DWORD PTR _CHECKBOX__DefaultProps+12, 268435455 ; 0fffffffH
	jne	SHORT $LN4@CHECKBOX_C@2
; Line 314
	mov	eax, DWORD PTR _WinFlags$[ebp]
	or	eax, 1
	mov	DWORD PTR _WinFlags$[ebp], eax
$LN4@CHECKBOX_C@2:
; Line 319
	push	84					; 00000054H
	push	OFFSET _CHECKBOX_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 320
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN3@CHECKBOX_C@2
; Line 321
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 323
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 324
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+128], 1128809795		; 43484543H
; Line 326
	mov	edi, DWORD PTR _pObj$[ebp]
	add	edi, 56					; 00000038H
	mov	ecx, 15					; 0000000fH
	mov	esi, OFFSET _CHECKBOX__DefaultProps
	rep movsd
; Line 327
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _CHECKBOX__pSkinDefault
	mov	DWORD PTR [eax+116], ecx
; Line 328
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	BYTE PTR [eax+120], 2
; Line 329
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 330
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _CHECKBOX__pSkinDefault
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 331
	jmp	SHORT $LN2@CHECKBOX_C@2
$LN3@CHECKBOX_C@2:
; Line 332
	cmp	DWORD PTR _hObj$[ebp], 0
	jne	SHORT $LN2@CHECKBOX_C@2
	push	OFFSET $SG12659
	call	_GUI_ErrorOut
	add	esp, 4
$LN2@CHECKBOX_C@2:
; Line 335
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 336
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CHECKBOX_CreateEx ENDP
_TEXT	ENDS
END
