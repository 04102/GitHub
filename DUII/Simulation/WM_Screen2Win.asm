; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_Screen2Win.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM__IsInWindow
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_screen2win.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM__IsInWindow
_TEXT	SEGMENT
_pWin$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_WM__IsInWindow PROC					; COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 98
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 2
	je	SHORT $LN1@WM__IsInWi
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	ecx, WORD PTR [eax]
	cmp	DWORD PTR _x$[ebp], ecx
	jl	SHORT $LN1@WM__IsInWi
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	cmp	DWORD PTR _x$[ebp], ecx
	jg	SHORT $LN1@WM__IsInWi
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	cmp	DWORD PTR _y$[ebp], ecx
	jl	SHORT $LN1@WM__IsInWi
	mov	eax, DWORD PTR _pWin$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	cmp	DWORD PTR _y$[ebp], ecx
	jg	SHORT $LN1@WM__IsInWi
; Line 100
	mov	eax, 1
	jmp	SHORT $LN2@WM__IsInWi
$LN1@WM__IsInWi:
; Line 102
	xor	eax, eax
$LN2@WM__IsInWi:
; Line 103
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_WM__IsInWindow ENDP
_TEXT	ENDS
PUBLIC	_WM_Screen2hWin
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_Screen2hWin
_TEXT	SEGMENT
_r$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_WM_Screen2hWin PROC					; COMDAT
; Line 109
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	push	0
	call	__Screen2hWinStop
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 114
	mov	eax, DWORD PTR _r$[ebp]
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_Screen2hWin ENDP
_TEXT	ENDS
EXTRN	_WM__FirstWin:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Screen2hWinStop
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hStop$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__Screen2hWinStop PROC					; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 76
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hStop$[ebp]
	push	edx
	mov	eax, DWORD PTR _WM__FirstWin
	push	eax
	call	__Screen2hWin
	add	esp, 16					; 00000010H
	mov	DWORD PTR _r$[ebp], eax
; Line 80
	mov	eax, DWORD PTR _r$[ebp]
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Screen2hWinStop ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_h2p:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Screen2hWin
_TEXT	SEGMENT
_pChild$9450 = -44					; size = 4
_hHit$ = -32						; size = 4
_hChild$ = -20						; size = 4
_pWin$ = -8						; size = 4
_hWin$ = 8						; size = 4
_hStop$ = 12						; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
__Screen2hWin PROC					; COMDAT
; Line 45
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 50
	cmp	DWORD PTR _hWin$[ebp], 0
	jne	SHORT $LN5@Screen2hWi
; Line 51
	xor	eax, eax
	jmp	$LN6@Screen2hWi
$LN5@Screen2hWi:
; Line 53
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWin$[ebp]
	push	edx
	call	_WM__IsInWindow
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN4@Screen2hWi
; Line 56
	xor	eax, eax
	jmp	SHORT $LN6@Screen2hWi
$LN4@Screen2hWi:
; Line 59
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	mov	DWORD PTR _hChild$[ebp], ecx
$LN3@Screen2hWi:
	cmp	DWORD PTR _hChild$[ebp], 0
	je	SHORT $LN2@Screen2hWi
	mov	eax, DWORD PTR _hChild$[ebp]
	cmp	eax, DWORD PTR _hStop$[ebp]
	je	SHORT $LN2@Screen2hWi
; Line 60
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pChild$9450[ebp], eax
; Line 61
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hStop$[ebp]
	push	edx
	mov	eax, DWORD PTR _hChild$[ebp]
	push	eax
	call	__Screen2hWin
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hHit$[ebp], eax
	cmp	DWORD PTR _hHit$[ebp], 0
	je	SHORT $LN1@Screen2hWi
; Line 62
	mov	eax, DWORD PTR _hHit$[ebp]
	mov	DWORD PTR _hWin$[ebp], eax
$LN1@Screen2hWi:
; Line 64
	mov	eax, DWORD PTR _pChild$9450[ebp]
	mov	ecx, DWORD PTR [eax+32]
	mov	DWORD PTR _hChild$[ebp], ecx
; Line 65
	jmp	SHORT $LN3@Screen2hWi
$LN2@Screen2hWi:
; Line 66
	mov	eax, DWORD PTR _hWin$[ebp]
$LN6@Screen2hWi:
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Screen2hWin ENDP
_TEXT	ENDS
PUBLIC	_WM_Screen2hWinEx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_Screen2hWinEx
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hStop$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_WM_Screen2hWinEx PROC					; COMDAT
; Line 121
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 124
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hStop$[ebp]
	push	edx
	call	__Screen2hWinStop
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _r$[ebp]
; Line 127
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_Screen2hWinEx ENDP
_TEXT	ENDS
END
