; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\CustomArc.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__real@42b40000
PUBLIC	__real@00000000
PUBLIC	__real@43b40000
PUBLIC	_GL_DrawArc2
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@42b40000
; File c:\duii\duii\customarc.c
CONST	SEGMENT
__real@42b40000 DD 042b40000r			; 90
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@43b40000
CONST	SEGMENT
__real@43b40000 DD 043b40000r			; 360
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_DrawArc2
_TEXT	SEGMENT
tv152 = -208						; size = 4
tv137 = -208						; size = 4
tv88 = -208						; size = 4
tv73 = -208						; size = 4
_aEnd$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_a0$ = 24						; size = 4
_a1$ = 28						; size = 4
_GL_DrawArc2 PROC					; COMDAT
; Line 134
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	fld	DWORD PTR _a0$[ebp]
	fadd	DWORD PTR __real@43b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 137
	fld	DWORD PTR _a1$[ebp]
	fadd	DWORD PTR __real@43b40000
	fstp	DWORD PTR _a1$[ebp]
$LN14@GL_DrawArc:
; Line 138
	fld	DWORD PTR __real@43b40000
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $DoFirst$8767
; Line 139
	fld	DWORD PTR _a0$[ebp]
	fsub	DWORD PTR __real@43b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 140
	fld	DWORD PTR _a1$[ebp]
	fsub	DWORD PTR __real@43b40000
	fstp	DWORD PTR _a1$[ebp]
; Line 141
	jmp	SHORT $LN14@GL_DrawArc
$DoFirst$8767:
; Line 144
	fldz
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN12@GL_DrawArc
; Line 145
	jmp	$LN15@GL_DrawArc
$LN12@GL_DrawArc:
; Line 147
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN11@GL_DrawArc
; Line 148
	fldz
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN10@GL_DrawArc
; Line 149
	fldz
	fstp	DWORD PTR _a0$[ebp]
$LN10@GL_DrawArc:
; Line 151
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN17@GL_DrawArc
	fld	DWORD PTR _a1$[ebp]
	fstp	DWORD PTR tv73[ebp]
	jmp	SHORT $LN18@GL_DrawArc
$LN17@GL_DrawArc:
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR tv73[ebp]
$LN18@GL_DrawArc:
	fld	DWORD PTR tv73[ebp]
	fstp	DWORD PTR _aEnd$[ebp]
; Line 152
	push	-1
	push	1
	push	ecx
	fld	DWORD PTR _aEnd$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _a0$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawArc2
	add	esp, 32					; 00000020H
$LN11@GL_DrawArc:
; Line 154
	fld	DWORD PTR _a1$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a1$[ebp]
; Line 155
	fld	DWORD PTR _a0$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 157
	fldz
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN9@GL_DrawArc
; Line 158
	jmp	$LN15@GL_DrawArc
$LN9@GL_DrawArc:
; Line 160
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN8@GL_DrawArc
; Line 161
	fldz
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN7@GL_DrawArc
; Line 162
	fldz
	fstp	DWORD PTR _a0$[ebp]
$LN7@GL_DrawArc:
; Line 164
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN19@GL_DrawArc
	fld	DWORD PTR _a1$[ebp]
	fstp	DWORD PTR tv88[ebp]
	jmp	SHORT $LN20@GL_DrawArc
$LN19@GL_DrawArc:
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR tv88[ebp]
$LN20@GL_DrawArc:
	fld	DWORD PTR tv88[ebp]
	fstp	DWORD PTR _aEnd$[ebp]
; Line 165
	push	-1
	push	-1
	fld	DWORD PTR __real@42b40000
	fsub	DWORD PTR _a0$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR __real@42b40000
	fsub	DWORD PTR _aEnd$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawArc2
	add	esp, 32					; 00000020H
$LN8@GL_DrawArc:
; Line 167
	fld	DWORD PTR _a1$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a1$[ebp]
; Line 168
	fld	DWORD PTR _a0$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 170
	fldz
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN6@GL_DrawArc
; Line 171
	jmp	$LN15@GL_DrawArc
$LN6@GL_DrawArc:
; Line 173
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@GL_DrawArc
; Line 174
	fldz
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@GL_DrawArc
; Line 175
	fldz
	fstp	DWORD PTR _a0$[ebp]
$LN4@GL_DrawArc:
; Line 177
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN21@GL_DrawArc
	fld	DWORD PTR _a1$[ebp]
	fstp	DWORD PTR tv137[ebp]
	jmp	SHORT $LN22@GL_DrawArc
$LN21@GL_DrawArc:
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR tv137[ebp]
$LN22@GL_DrawArc:
	fld	DWORD PTR tv137[ebp]
	fstp	DWORD PTR _aEnd$[ebp]
; Line 178
	push	1
	push	-1
	push	ecx
	fld	DWORD PTR _aEnd$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _a0$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawArc2
	add	esp, 32					; 00000020H
$LN5@GL_DrawArc:
; Line 180
	fld	DWORD PTR _a1$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a1$[ebp]
; Line 181
	fld	DWORD PTR _a0$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 183
	fldz
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN3@GL_DrawArc
; Line 184
	jmp	$LN15@GL_DrawArc
$LN3@GL_DrawArc:
; Line 186
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN2@GL_DrawArc
; Line 187
	fldz
	fcomp	DWORD PTR _a0$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN1@GL_DrawArc
; Line 188
	fldz
	fstp	DWORD PTR _a0$[ebp]
$LN1@GL_DrawArc:
; Line 190
	fld	DWORD PTR __real@42b40000
	fcomp	DWORD PTR _a1$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN23@GL_DrawArc
	fld	DWORD PTR _a1$[ebp]
	fstp	DWORD PTR tv152[ebp]
	jmp	SHORT $LN24@GL_DrawArc
$LN23@GL_DrawArc:
	fld	DWORD PTR __real@42b40000
	fstp	DWORD PTR tv152[ebp]
$LN24@GL_DrawArc:
	fld	DWORD PTR tv152[ebp]
	fstp	DWORD PTR _aEnd$[ebp]
; Line 191
	push	1
	push	1
	fld	DWORD PTR __real@42b40000
	fsub	DWORD PTR _a0$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	fld	DWORD PTR __real@42b40000
	fsub	DWORD PTR _aEnd$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	__DrawArc2
	add	esp, 32					; 00000020H
$LN2@GL_DrawArc:
; Line 193
	fld	DWORD PTR _a1$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a1$[ebp]
; Line 194
	fld	DWORD PTR _a0$[ebp]
	fsub	DWORD PTR __real@42b40000
	fstp	DWORD PTR _a0$[ebp]
; Line 195
	jmp	$DoFirst$8767
$LN15@GL_DrawArc:
; Line 196
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DrawArc2 ENDP
_TEXT	ENDS
PUBLIC	__real@447a0000
PUBLIC	__real@40000000
PUBLIC	__$ArrayPad$
EXTRN	_floor:PROC
EXTRN	_ceil:PROC
EXTRN	_GUI__CosHQ:PROC
EXTRN	_GUI__SinHQ:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT __DrawArc2
_TEXT	SEGMENT
tv355 = -440						; size = 8
tv347 = -440						; size = 8
tv353 = -432						; size = 4
tv345 = -432						; size = 4
tv404 = -428						; size = 4
tv398 = -428						; size = 4
tv392 = -428						; size = 4
tv386 = -428						; size = 4
tv380 = -428						; size = 4
tv374 = -428						; size = 4
tv368 = -428						; size = 4
tv362 = -428						; size = 4
tv315 = -428						; size = 4
tv313 = -428						; size = 4
tv350 = -426						; size = 2
tv342 = -426						; size = 2
_xMax$8736 = -228					; size = 4
_xMin$8735 = -216					; size = 4
_xMaxDisp$8734 = -204					; size = 4
_xMinDisp$8733 = -192					; size = 4
_yMin$ = -180						; size = 4
_yMax$ = -168						; size = 4
_y$ = -156						; size = 4
_ro2$ = -144						; size = 4
_ri2$ = -132						; size = 4
_Cos1_HQ$ = -120					; size = 4
_Cos0_HQ$ = -108					; size = 4
_Sin1_HQ$ = -96						; size = 4
_Sin0_HQ$ = -84						; size = 4
_ro$ = -72						; size = 4
_ri$ = -60						; size = 4
_afy$ = -48						; size = 16
_afx$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_Angle0$ = 24						; size = 4
_Angle1$ = 28						; size = 4
_xMul$ = 32						; size = 4
_yMul$ = 36						; size = 4
__DrawArc2 PROC						; COMDAT
; Line 50
	push	ebp
	mov	ebp, esp
	sub	esp, 440				; 000001b8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 56
	fild	DWORD PTR _rx$[ebp]
	movzx	eax, BYTE PTR _GUI_Context+24
	mov	DWORD PTR tv313[ebp], eax
	fild	DWORD PTR tv313[ebp]
	fdiv	DWORD PTR __real@40000000
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _ri$[ebp]
; Line 57
	fild	DWORD PTR _rx$[ebp]
	movzx	eax, BYTE PTR _GUI_Context+24
	mov	DWORD PTR tv315[ebp], eax
	fild	DWORD PTR tv315[ebp]
	fdiv	DWORD PTR __real@40000000
	faddp	ST(1), ST(0)
	fstp	DWORD PTR _ro$[ebp]
; Line 58
	fld	DWORD PTR _Angle0$[ebp]
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
	mov	DWORD PTR _Sin0_HQ$[ebp], eax
; Line 59
	fld	DWORD PTR _Angle1$[ebp]
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	call	_GUI__SinHQ
	add	esp, 4
	mov	DWORD PTR _Sin1_HQ$[ebp], eax
; Line 60
	fld	DWORD PTR _Angle0$[ebp]
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	call	_GUI__CosHQ
	add	esp, 4
	mov	DWORD PTR _Cos0_HQ$[ebp], eax
; Line 61
	fld	DWORD PTR _Angle1$[ebp]
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	call	_GUI__CosHQ
	add	esp, 4
	mov	DWORD PTR _Cos1_HQ$[ebp], eax
; Line 62
	fld	DWORD PTR _ri$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	fnstcw	WORD PTR tv342[ebp]
	movzx	eax, WORD PTR tv342[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv345[ebp], eax
	fldcw	WORD PTR tv345[ebp]
	fistp	QWORD PTR tv347[ebp]
	fldcw	WORD PTR tv342[ebp]
	mov	eax, DWORD PTR tv347[ebp]
	mov	DWORD PTR _ri2$[ebp], eax
; Line 63
	fld	DWORD PTR _ro$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	fnstcw	WORD PTR tv350[ebp]
	movzx	eax, WORD PTR tv350[ebp]
	or	eax, 3072				; 00000c00H
	mov	DWORD PTR tv353[ebp], eax
	fldcw	WORD PTR tv353[ebp]
	fistp	QWORD PTR tv355[ebp]
	fldcw	WORD PTR tv350[ebp]
	mov	eax, DWORD PTR tv355[ebp]
	mov	DWORD PTR _ro2$[ebp], eax
; Line 64
	fild	DWORD PTR _Sin0_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv362[ebp], eax
	fild	DWORD PTR tv362[ebp]
	fstp	DWORD PTR _afy$[ebp]
; Line 65
	fild	DWORD PTR _Sin0_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv368[ebp], eax
	fild	DWORD PTR tv368[ebp]
	fstp	DWORD PTR _afy$[ebp+4]
; Line 66
	fild	DWORD PTR _Sin1_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv374[ebp], eax
	fild	DWORD PTR tv374[ebp]
	fstp	DWORD PTR _afy$[ebp+8]
; Line 67
	fild	DWORD PTR _Sin1_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv380[ebp], eax
	fild	DWORD PTR tv380[ebp]
	fstp	DWORD PTR _afy$[ebp+12]
; Line 68
	fild	DWORD PTR _Cos0_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv386[ebp], eax
	fild	DWORD PTR tv386[ebp]
	fstp	DWORD PTR _afx$[ebp]
; Line 69
	fild	DWORD PTR _Cos0_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv392[ebp], eax
	fild	DWORD PTR tv392[ebp]
	fstp	DWORD PTR _afx$[ebp+4]
; Line 70
	fild	DWORD PTR _Cos1_HQ$[ebp]
	fmul	DWORD PTR _ri$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv398[ebp], eax
	fild	DWORD PTR tv398[ebp]
	fstp	DWORD PTR _afx$[ebp+8]
; Line 71
	fild	DWORD PTR _Cos1_HQ$[ebp]
	fmul	DWORD PTR _ro$[ebp]
	call	__ftol2_sse
	sar	eax, 16					; 00000010H
	mov	DWORD PTR tv404[ebp], eax
	fild	DWORD PTR tv404[ebp]
	fstp	DWORD PTR _afx$[ebp+12]
; Line 72
	fld	DWORD PTR _afy$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_ceil
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _yMin$[ebp], eax
; Line 73
	fld	DWORD PTR _afy$[ebp+12]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_floor
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _yMax$[ebp], eax
; Line 77
	cmp	DWORD PTR _GUI_Context+20, 0
	je	$LN10@DrawArc2
; Line 78
	cmp	DWORD PTR _yMul$[ebp], 1
	jne	SHORT $LN13@DrawArc2
; Line 79
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jle	SHORT $LN14@DrawArc2
; Line 80
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN14@DrawArc2:
; Line 82
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jge	SHORT $LN13@DrawArc2
; Line 83
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN13@DrawArc2:
; Line 86
	cmp	DWORD PTR _yMul$[ebp], -1
	jne	SHORT $LN10@DrawArc2
; Line 87
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMin$[ebp], ecx
	jle	SHORT $LN11@DrawArc2
; Line 88
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+6]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMin$[ebp], ecx
$LN11@DrawArc2:
; Line 90
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	cmp	DWORD PTR _yMax$[ebp], ecx
	jge	SHORT $LN10@DrawArc2
; Line 91
	mov	eax, DWORD PTR _GUI_Context+20
	movsx	ecx, WORD PTR [eax+2]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yMax$[ebp], ecx
$LN10@DrawArc2:
; Line 99
	mov	DWORD PTR _xMin$8735[ebp], 0
	mov	DWORD PTR _xMax$8736[ebp], 0
; Line 100
	mov	eax, DWORD PTR _yMax$[ebp]
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN9@DrawArc2
$LN8@DrawArc2:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN9@DrawArc2:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _yMin$[ebp]
	jl	$LN7@DrawArc2
; Line 101
	mov	eax, DWORD PTR _ri2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _xMin$8735[ebp]
	push	edx
	call	__CalcX
	add	esp, 12					; 0000000cH
; Line 102
	mov	eax, DWORD PTR _ro2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	lea	edx, DWORD PTR _xMax$8736[ebp]
	push	edx
	call	__CalcX
	add	esp, 12					; 0000000cH
; Line 103
	fild	DWORD PTR _y$[ebp]
	fcomp	DWORD PTR _afy$[ebp+4]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN6@DrawArc2
; Line 104
	push	ecx
	fld	DWORD PTR _afx$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afx$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+4]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp]
	fstp	DWORD PTR [esp]
	fild	DWORD PTR _y$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	__CalcInterSectLin
	add	esp, 20					; 00000014H
	call	__ftol2_sse
	mov	DWORD PTR _xMaxDisp$8734[ebp], eax
; Line 105
	jmp	SHORT $LN5@DrawArc2
$LN6@DrawArc2:
; Line 106
	mov	eax, DWORD PTR _xMax$8736[ebp]
	mov	DWORD PTR _xMaxDisp$8734[ebp], eax
$LN5@DrawArc2:
; Line 108
	fild	DWORD PTR _y$[ebp]
	fcomp	DWORD PTR _afy$[ebp+8]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@DrawArc2
; Line 109
	push	ecx
	fld	DWORD PTR _afx$[ebp+12]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afx$[ebp+8]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+12]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _afy$[ebp+8]
	fstp	DWORD PTR [esp]
	fild	DWORD PTR _y$[ebp]
	push	ecx
	fstp	DWORD PTR [esp]
	call	__CalcInterSectLin
	add	esp, 20					; 00000014H
	call	__ftol2_sse
	mov	DWORD PTR _xMinDisp$8733[ebp], eax
; Line 110
	jmp	SHORT $LN3@DrawArc2
$LN4@DrawArc2:
; Line 111
	mov	eax, DWORD PTR _xMin$8735[ebp]
	mov	DWORD PTR _xMinDisp$8733[ebp], eax
$LN3@DrawArc2:
; Line 113
	cmp	DWORD PTR _xMul$[ebp], 0
	jle	SHORT $LN2@DrawArc2
; Line 114
	mov	eax, DWORD PTR _xMaxDisp$8734[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _yMul$[ebp]
	imul	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xMinDisp$8733[ebp]
	add	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	jmp	SHORT $LN1@DrawArc2
$LN2@DrawArc2:
; Line 116
	mov	eax, DWORD PTR _xMinDisp$8733[ebp]
	neg	eax
	add	eax, DWORD PTR _x0$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _yMul$[ebp]
	imul	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xMaxDisp$8734[ebp]
	neg	edx
	add	edx, DWORD PTR _x0$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@DrawArc2:
; Line 118
	jmp	$LN8@DrawArc2
$LN7@DrawArc2:
; Line 131
	mov	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ry$[ebp], eax
; Line 132
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN24@DrawArc2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN24@DrawArc2:
	DD	4
	DD	$LN23@DrawArc2
$LN23@DrawArc2:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN19@DrawArc2
	DD	-48					; ffffffd0H
	DD	16					; 00000010H
	DD	$LN20@DrawArc2
	DD	-216					; ffffff28H
	DD	4
	DD	$LN21@DrawArc2
	DD	-228					; ffffff1cH
	DD	4
	DD	$LN22@DrawArc2
$LN22@DrawArc2:
	DB	120					; 00000078H
	DB	77					; 0000004dH
	DB	97					; 00000061H
	DB	120					; 00000078H
	DB	0
$LN21@DrawArc2:
	DB	120					; 00000078H
	DB	77					; 0000004dH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN20@DrawArc2:
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	121					; 00000079H
	DB	0
$LN19@DrawArc2:
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	120					; 00000078H
	DB	0
__DrawArc2 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcX
_TEXT	SEGMENT
_x2$ = -44						; size = 4
_r2y2$ = -32						; size = 4
_y2$ = -20						; size = 4
_x$ = -8						; size = 4
_px$ = 8						; size = 4
_y$ = 12						; size = 4
_r2$ = 16						; size = 4
__CalcX	PROC						; COMDAT
; Line 13
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 17
	mov	eax, DWORD PTR _px$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _x$[ebp], ecx
; Line 18
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y2$[ebp], eax
; Line 19
	mov	eax, DWORD PTR _r2$[ebp]
	sub	eax, DWORD PTR _y2$[ebp]
	mov	DWORD PTR _r2y2$[ebp], eax
; Line 20
	mov	eax, DWORD PTR _y2$[ebp]
	cmp	eax, DWORD PTR _r2$[ebp]
	jb	SHORT $LN3@CalcX
; Line 21
	mov	eax, DWORD PTR _px$[ebp]
	mov	DWORD PTR [eax], 0
; Line 22
	jmp	SHORT $LN5@CalcX
$LN3@CalcX:
; Line 28
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
; Line 29
	mov	eax, DWORD PTR _x$[ebp]
	imul	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _x2$[ebp], eax
; Line 30
	mov	eax, DWORD PTR _x2$[ebp]
	cmp	eax, DWORD PTR _r2y2$[ebp]
	jb	SHORT $LN3@CalcX
; Line 31
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _px$[ebp]
	mov	DWORD PTR [ecx], eax
$LN5@CalcX:
; Line 32
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcX	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcInterSectLin
_TEXT	SEGMENT
_r$ = -20						; size = 4
_Slope$ = -8						; size = 4
_y$ = 8							; size = 4
_y0$ = 12						; size = 4
_y1$ = 16						; size = 4
_x0$ = 20						; size = 4
_x1$ = 24						; size = 4
__CalcInterSectLin PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	fld	DWORD PTR _y1$[ebp]
	fld	DWORD PTR _y0$[ebp]
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@CalcInterS
; Line 42
	fld	DWORD PTR _y0$[ebp]
	fstp	DWORD PTR _r$[ebp]
; Line 43
	jmp	SHORT $LN1@CalcInterS
$LN2@CalcInterS:
; Line 44
	fld	DWORD PTR _x1$[ebp]
	fsub	DWORD PTR _x0$[ebp]
	fld	DWORD PTR _y1$[ebp]
	fsub	DWORD PTR _y0$[ebp]
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR _Slope$[ebp]
; Line 45
	fld	DWORD PTR _y$[ebp]
	fsub	DWORD PTR _y0$[ebp]
	fmul	DWORD PTR _Slope$[ebp]
	fadd	DWORD PTR _x0$[ebp]
	fstp	DWORD PTR _r$[ebp]
$LN1@CalcInterS:
; Line 47
	fld	DWORD PTR _r$[ebp]
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcInterSectLin ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawArc2
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawArc2
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_a0$ = 24						; size = 4
_a1$ = 28						; size = 4
_GUI_DrawArc2 PROC					; COMDAT
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 205
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 206
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN1@GUI_DrawAr
$LN3@GUI_DrawAr:
; Line 208
	push	ecx
	fld	DWORD PTR _a1$[ebp]
	fstp	DWORD PTR [esp]
	push	ecx
	fld	DWORD PTR _a0$[ebp]
	fstp	DWORD PTR [esp]
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_DrawArc2
	add	esp, 24					; 00000018H
; Line 210
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawAr
$LN1@GUI_DrawAr:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DrawArc2 ENDP
_TEXT	ENDS
END
