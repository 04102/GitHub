; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\PROGBAR.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_PROGBAR__DefaultProps
PUBLIC	_PROGBAR__pSkinDefault
EXTRN	_PROGBAR__SkinClassic:BYTE
EXTRN	_GUI_Font6x8:BYTE
_DATA	SEGMENT
_PROGBAR__DefaultProps DD FLAT:_GUI_Font6x8
	DD	0555555H
	DD	0aaaaaaH
	DD	0ffffffH
	DD	00H
	ORG $+4
_PROGBAR__pSkinDefault DD FLAT:_PROGBAR__SkinClassic
$SG11708 DB	'PROGBAR.c: Wrong handle type or Object not init''ed', 00H
_DATA	ENDS
PUBLIC	_PROGBAR_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\progbar.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _PROGBAR_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_PROGBAR_LockH PROC					; COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 143
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 144
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@PROGBAR_Lo
; Line 145
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+80], 1347571527		; 50524f47H
	je	SHORT $LN2@PROGBAR_Lo
; Line 146
	push	OFFSET $SG11708
	call	_GUI_ErrorOut
	add	esp, 4
; Line 147
	xor	eax, eax
	jmp	SHORT $LN3@PROGBAR_Lo
$LN2@PROGBAR_Lo:
; Line 150
	mov	eax, DWORD PTR _p$[ebp]
$LN3@PROGBAR_Lo:
; Line 151
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_LockH ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR__GetTextLocked
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR__GetTextLocked
_TEXT	SEGMENT
_pText$ = -8						; size = 4
_pObj$ = 8						; size = 4
_PROGBAR__GetTextLocked PROC				; COMDAT
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 160
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$[ebp], eax
; Line 161
	mov	eax, DWORD PTR _pText$[ebp]
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR__GetTextLocked ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR__GetTextRect
EXTRN	_GUI_GetFontSizeY:PROC
EXTRN	_GUI_GetStringDistX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR__GetTextRect
_TEXT	SEGMENT
tv83 = -256						; size = 4
_EffectSize$ = -56					; size = 4
_TextHeight$ = -44					; size = 4
_TextWidth$ = -32					; size = 4
_ySize$ = -20						; size = 4
_xSize$ = -8						; size = 4
_pObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
_pText$ = 16						; size = 4
_PROGBAR__GetTextRect PROC				; COMDAT
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 169
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx]
	sub	ecx, eax
	add	ecx, 1
	mov	DWORD PTR _xSize$[ebp], ecx
; Line 170
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx+2]
	sub	ecx, eax
	add	ecx, 1
	mov	DWORD PTR _ySize$[ebp], ecx
; Line 171
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _TextWidth$[ebp], eax
; Line 172
	call	_GUI_GetFontSizeY
	mov	DWORD PTR _TextHeight$[ebp], eax
; Line 173
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 174
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+68]
	and	ecx, 3
	mov	DWORD PTR tv83[ebp], ecx
	cmp	DWORD PTR tv83[ebp], 1
	je	SHORT $LN2@PROGBAR__G
	cmp	DWORD PTR tv83[ebp], 2
	je	SHORT $LN3@PROGBAR__G
	jmp	SHORT $LN1@PROGBAR__G
$LN3@PROGBAR__G:
; Line 176
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _TextWidth$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 177
	jmp	SHORT $LN4@PROGBAR__G
$LN2@PROGBAR__G:
; Line 179
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _TextWidth$[ebp]
	sub	eax, 1
	sub	eax, DWORD PTR _EffectSize$[ebp]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 180
	jmp	SHORT $LN4@PROGBAR__G
$LN1@PROGBAR__G:
; Line 182
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	cx, WORD PTR _EffectSize$[ebp]
	mov	WORD PTR [eax], cx
$LN4@PROGBAR__G:
; Line 184
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, DWORD PTR _TextHeight$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 185
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+64]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx]
	add	eax, ecx
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx], ax
; Line 186
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+66]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+2]
	add	eax, ecx
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+2], ax
; Line 187
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _TextWidth$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+4], ax
; Line 188
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _TextHeight$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [ecx+6], ax
; Line 189
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR__GetTextRect ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR__Value2Pos
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR__Value2Pos
_TEXT	SEGMENT
tv91 = -256						; size = 4
tv81 = -256						; size = 4
_Max$ = -56						; size = 4
_Min$ = -44						; size = 4
_Size$ = -32						; size = 4
_EffectSize$ = -20					; size = 4
_IsVertical$ = -8					; size = 4
_pObj$ = 8						; size = 4
_v$ = 12						; size = 4
_PROGBAR__Value2Pos PROC				; COMDAT
; Line 195
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 198
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, 1
	mov	DWORD PTR _IsVertical$[ebp], ecx
; Line 199
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 200
	cmp	DWORD PTR _IsVertical$[ebp], 0
	je	SHORT $LN5@PROGBAR__V
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx+2]
	sub	ecx, eax
	add	ecx, 1
	mov	DWORD PTR tv81[ebp], ecx
	jmp	SHORT $LN6@PROGBAR__V
$LN5@PROGBAR__V:
	mov	ecx, DWORD PTR _pObj$[ebp]
	movsx	edx, WORD PTR [ecx+4]
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax]
	sub	edx, ecx
	add	edx, 1
	mov	DWORD PTR tv81[ebp], edx
$LN6@PROGBAR__V:
	mov	edx, DWORD PTR tv81[ebp]
	mov	DWORD PTR _Size$[ebp], edx
; Line 201
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _Min$[ebp], ecx
; Line 202
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _Max$[ebp], ecx
; Line 203
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _Min$[ebp]
	jge	SHORT $LN2@PROGBAR__V
; Line 204
	mov	eax, DWORD PTR _Min$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN2@PROGBAR__V:
; Line 206
	mov	eax, DWORD PTR _v$[ebp]
	cmp	eax, DWORD PTR _Max$[ebp]
	jle	SHORT $LN1@PROGBAR__V
; Line 207
	mov	eax, DWORD PTR _Max$[ebp]
	mov	DWORD PTR _v$[ebp], eax
$LN1@PROGBAR__V:
; Line 209
	cmp	DWORD PTR _IsVertical$[ebp], 0
	je	SHORT $LN7@PROGBAR__V
	mov	eax, DWORD PTR _Max$[ebp]
	sub	eax, DWORD PTR _v$[ebp]
	mov	DWORD PTR tv91[ebp], eax
	jmp	SHORT $LN8@PROGBAR__V
$LN7@PROGBAR__V:
	mov	ecx, DWORD PTR _v$[ebp]
	sub	ecx, DWORD PTR _Min$[ebp]
	mov	DWORD PTR tv91[ebp], ecx
$LN8@PROGBAR__V:
	mov	edx, DWORD PTR _EffectSize$[ebp]
	shl	edx, 1
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, edx
	imul	eax, DWORD PTR tv91[ebp]
	mov	ecx, DWORD PTR _Max$[ebp]
	sub	ecx, DWORD PTR _Min$[ebp]
	cdq
	idiv	ecx
	add	eax, DWORD PTR _EffectSize$[ebp]
; Line 210
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR__Value2Pos ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_Callback
_TEXT	SEGMENT
tv69 = -208						; size = 4
_hObj$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_PROGBAR_Callback PROC					; COMDAT
; Line 222
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 224
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 226
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN5@PROGBAR_Ca
; Line 227
	jmp	SHORT $LN6@PROGBAR_Ca
$LN5@PROGBAR_Ca:
; Line 229
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	cmp	DWORD PTR tv69[ebp], 11			; 0000000bH
	je	SHORT $LN1@PROGBAR_Ca
	cmp	DWORD PTR tv69[ebp], 15			; 0000000fH
	je	SHORT $LN2@PROGBAR_Ca
	jmp	SHORT $LN3@PROGBAR_Ca
$LN2@PROGBAR_Ca:
; Line 231
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Paint
	add	esp, 4
; Line 232
	jmp	SHORT $LN6@PROGBAR_Ca
$LN1@PROGBAR_Ca:
; Line 234
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__Delete
	add	esp, 4
$LN3@PROGBAR_Ca:
; Line 237
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN6@PROGBAR_Ca:
; Line 238
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_Callback ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_UnlockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Paint
_TEXT	SEGMENT
_pfPaint$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 95
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 99
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 100
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _pfPaint$[ebp], edx
; Line 101
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 102
	cmp	DWORD PTR _pfPaint$[ebp], 0
	je	SHORT $LN2@Paint
; Line 103
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	DWORD PTR _pfPaint$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Paint:
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_FreePtr:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __Delete
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Delete PROC						; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 113
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 114
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 60					; 0000003cH
	push	eax
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 115
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 116
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__Delete ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_CreateEx
EXTRN	_WIDGET_SetEffect:PROC
EXTRN	_WIDGET_Effect_None:BYTE
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ALLOC_AllocZero:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_CreateEx
_TEXT	SEGMENT
_hpText$11780 = -44					; size = 4
_pText$11779 = -32					; size = 4
_pObj$11778 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_PROGBAR_CreateEx PROC					; COMDAT
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 256
	push	68					; 00000044H
	push	OFFSET _PROGBAR_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 257
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN2@PROGBAR_Cr
; Line 261
	push	5
	call	_GUI_ALLOC_AllocZero
	add	esp, 4
	mov	DWORD PTR _hpText$11780[ebp], eax
; Line 262
	cmp	DWORD PTR _hpText$11780[ebp], 0
	je	$LN2@PROGBAR_Cr
; Line 263
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11778[ebp], eax
; Line 265
	push	0
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11778[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 266
	push	OFFSET _WIDGET_Effect_None
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WIDGET_SetEffect
	add	esp, 8
; Line 267
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	DWORD PTR [eax+80], 1347571527		; 50524f47H
; Line 269
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	ecx, DWORD PTR _PROGBAR__pSkinDefault
	mov	DWORD PTR [eax+108], ecx
; Line 270
	mov	eax, DWORD PTR _pObj$11778[ebp]
	add	eax, 84					; 00000054H
	mov	ecx, DWORD PTR _PROGBAR__DefaultProps
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _PROGBAR__DefaultProps+4
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _PROGBAR__DefaultProps+8
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _PROGBAR__DefaultProps+12
	mov	DWORD PTR [eax+12], edx
	mov	ecx, DWORD PTR _PROGBAR__DefaultProps+16
	mov	DWORD PTR [eax+16], ecx
	mov	edx, DWORD PTR _PROGBAR__DefaultProps+20
	mov	DWORD PTR [eax+20], edx
; Line 271
	mov	eax, 2
	mov	ecx, DWORD PTR _pObj$11778[ebp]
	mov	WORD PTR [ecx+68], ax
; Line 272
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	DWORD PTR [eax+76], 100			; 00000064H
; Line 273
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	DWORD PTR [eax+72], 0
; Line 274
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	cl, BYTE PTR _ExFlags$[ebp]
	mov	BYTE PTR [eax+112], cl
; Line 275
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	ecx, DWORD PTR _hpText$11780[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 276
	mov	eax, DWORD PTR _pObj$11778[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pText$11779[ebp], eax
; Line 277
	push	0
	mov	eax, DWORD PTR _pText$11779[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11778[ebp]
	push	ecx
	call	__SetValue
	add	esp, 12					; 0000000cH
; Line 278
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$11779[ebp], 0
; Line 279
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11778[ebp], 0
; Line 280
	mov	esi, esp
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _PROGBAR__pSkinDefault
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@PROGBAR_Cr:
; Line 284
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_CreateEx ENDP
_TEXT	ENDS
EXTRN	_GUI_AddDecMin:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetValue
_TEXT	SEGMENT
_p$ = -8						; size = 4
_pObj$ = 8						; size = 4
_pText$ = 12						; size = 4
_v$ = 16						; size = 4
__SetValue PROC						; COMDAT
; Line 122
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 125
	mov	eax, DWORD PTR _pText$[ebp]
	mov	DWORD PTR _p$[ebp], eax
; Line 126
	lea	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [ecx+56]
	sub	eax, DWORD PTR [edx+72]
	imul	eax, 100				; 00000064H
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [ecx+76]
	sub	ecx, DWORD PTR [edx+72]
	cdq
	idiv	ecx
	push	eax
	call	_GUI_AddDecMin
	add	esp, 8
; Line 127
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 37			; 00000025H
	mov	ecx, DWORD PTR _p$[ebp]
	add	ecx, 1
	mov	DWORD PTR _p$[ebp], ecx
; Line 128
	mov	eax, DWORD PTR _p$[ebp]
	mov	BYTE PTR [eax], 0
; Line 129
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetValue
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@SetValue:
	DD	1
	DD	$LN4@SetValue
$LN4@SetValue:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@SetValue
$LN3@SetValue:
	DB	112					; 00000070H
	DB	0
__SetValue ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_SetValue
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_GUI_MergeRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_ALLOC_Realloc:PROC
EXTRN	_GUI_ALLOC_GetSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_SetValue
_TEXT	SEGMENT
_hpText$11808 = -76					; size = 4
_rText$11806 = -64					; size = 8
_pText$11805 = -48					; size = 4
_pOldFont$11804 = -36					; size = 4
_r$11796 = -24						; size = 8
_pObj$11792 = -8					; size = 4
_hObj$ = 8						; size = 4
_v$ = 12						; size = 4
_PROGBAR_SetValue PROC					; COMDAT
; Line 297
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 298
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN15@PROGBAR_Se
; Line 301
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11792[ebp], eax
; Line 303
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	cmp	ecx, DWORD PTR [eax+72]
	jge	SHORT $LN13@PROGBAR_Se
; Line 304
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _v$[ebp], ecx
$LN13@PROGBAR_Se:
; Line 306
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	cmp	ecx, DWORD PTR [eax+76]
	jle	SHORT $LN12@PROGBAR_Se
; Line 307
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _v$[ebp], ecx
$LN12@PROGBAR_Se:
; Line 309
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+56]
	cmp	ecx, DWORD PTR _v$[ebp]
	je	$LN11@PROGBAR_Se
; Line 311
	mov	eax, DWORD PTR _pObj$11792[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, 1
	je	$LN10@PROGBAR_Se
; Line 313
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	cmp	ecx, DWORD PTR [eax+56]
	jge	SHORT $LN9@PROGBAR_Se
; Line 314
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11792[ebp]
	push	ecx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+6], ax
; Line 315
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+2], ax
; Line 316
	jmp	SHORT $LN8@PROGBAR_Se
$LN9@PROGBAR_Se:
; Line 317
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+6], ax
; Line 318
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11792[ebp]
	push	ecx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+2], ax
$LN8@PROGBAR_Se:
; Line 320
	xor	eax, eax
	mov	WORD PTR _r$11796[ebp], ax
; Line 321
	mov	eax, 4095				; 00000fffH
	mov	WORD PTR _r$11796[ebp+4], ax
; Line 322
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 323
	jmp	$LN7@PROGBAR_Se
$LN10@PROGBAR_Se:
; Line 325
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	cmp	ecx, DWORD PTR [eax+56]
	jge	SHORT $LN6@PROGBAR_Se
; Line 326
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11792[ebp]
	push	ecx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp], ax
; Line 327
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+4], ax
; Line 328
	jmp	SHORT $LN5@PROGBAR_Se
$LN6@PROGBAR_Se:
; Line 329
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp], ax
; Line 330
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$11792[ebp]
	push	ecx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	WORD PTR _r$11796[ebp+4], ax
$LN5@PROGBAR_Se:
; Line 332
	xor	eax, eax
	mov	WORD PTR _r$11796[ebp+2], ax
; Line 333
	mov	eax, 4095				; 00000fffH
	mov	WORD PTR _r$11796[ebp+6], ax
; Line 334
	mov	eax, DWORD PTR _pObj$11792[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, 2
	jne	$LN4@PROGBAR_Se
; Line 337
	xor	eax, eax
	mov	WORD PTR _rText$11806[ebp], ax
	xor	eax, eax
	mov	DWORD PTR _rText$11806[ebp+2], eax
	mov	WORD PTR _rText$11806[ebp+6], ax
; Line 338
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_GUI_ALLOC_GetSize
	add	esp, 4
	cmp	eax, 5
	jge	SHORT $LN3@PROGBAR_Se
; Line 340
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _hpText$11808[ebp], ecx
; Line 341
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11792[ebp], 0
; Line 342
	push	5
	mov	eax, DWORD PTR _hpText$11808[ebp]
	push	eax
	call	_GUI_ALLOC_Realloc
	add	esp, 8
	mov	DWORD PTR _hpText$11808[ebp], eax
; Line 343
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$11792[ebp], eax
; Line 344
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _hpText$11808[ebp]
	mov	DWORD PTR [eax+60], ecx
$LN3@PROGBAR_Se:
; Line 346
	mov	eax, DWORD PTR _pObj$11792[ebp]
	push	eax
	call	_PROGBAR__GetTextLocked
	add	esp, 4
	mov	DWORD PTR _pText$11805[ebp], eax
; Line 347
	cmp	DWORD PTR _pText$11805[ebp], 0
	je	$LN2@PROGBAR_Se
; Line 348
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$11804[ebp], eax
; Line 349
	mov	eax, DWORD PTR _pText$11805[ebp]
	push	eax
	lea	ecx, DWORD PTR _rText$11806[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
; Line 350
	lea	eax, DWORD PTR _rText$11806[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$11796[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$11796[ebp]
	push	edx
	call	_GUI_MergeRect
	add	esp, 12					; 0000000cH
; Line 351
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pText$11805[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	__SetValue
	add	esp, 12					; 0000000cH
; Line 352
	mov	eax, DWORD PTR _pText$11805[ebp]
	push	eax
	lea	ecx, DWORD PTR _rText$11806[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$11792[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
; Line 353
	lea	eax, DWORD PTR _rText$11806[ebp]
	push	eax
	lea	ecx, DWORD PTR _r$11796[ebp]
	push	ecx
	lea	edx, DWORD PTR _r$11796[ebp]
	push	edx
	call	_GUI_MergeRect
	add	esp, 12					; 0000000cH
; Line 354
	mov	eax, DWORD PTR _pOldFont$11804[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 355
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$11805[ebp], 0
$LN2@PROGBAR_Se:
; Line 357
	jmp	SHORT $LN7@PROGBAR_Se
$LN4@PROGBAR_Se:
; Line 358
	mov	eax, DWORD PTR _pObj$11792[ebp]
	mov	ecx, DWORD PTR _v$[ebp]
	mov	DWORD PTR [eax+56], ecx
$LN7@PROGBAR_Se:
; Line 361
	lea	eax, DWORD PTR _r$11796[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN11@PROGBAR_Se:
; Line 363
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$11792[ebp], 0
$LN15@PROGBAR_Se:
; Line 366
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN20@PROGBAR_Se
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@PROGBAR_Se:
	DD	2
	DD	$LN19@PROGBAR_Se
$LN19@PROGBAR_Se:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN17@PROGBAR_Se
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN18@PROGBAR_Se
$LN18@PROGBAR_Se:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN17@PROGBAR_Se:
	DB	114					; 00000072H
	DB	0
_PROGBAR_SetValue ENDP
_TEXT	ENDS
END
