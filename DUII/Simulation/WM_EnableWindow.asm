; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_EnableWindow.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_SetEnableState
EXTRN	_WM__SendMessage:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_enablewindow.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetEnableState
_TEXT	SEGMENT
_Msg$9443 = -44						; size = 16
_Status$9438 = -20					; size = 2
_pWin$9437 = -8						; size = 4
_hWin$ = 8						; size = 4
_State$ = 12						; size = 4
_WM_SetEnableState PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN5@WM_SetEnab
; Line 43
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$9437[ebp], eax
; Line 44
	mov	eax, DWORD PTR _pWin$9437[ebp]
	mov	cx, WORD PTR [eax+40]
	mov	WORD PTR _Status$9438[ebp], cx
; Line 45
	cmp	DWORD PTR _State$[ebp], 0
	je	SHORT $LN3@WM_SetEnab
; Line 46
	movzx	eax, WORD PTR _Status$9438[ebp]
	and	eax, -17				; ffffffefH
	mov	WORD PTR _Status$9438[ebp], ax
; Line 47
	jmp	SHORT $LN2@WM_SetEnab
$LN3@WM_SetEnab:
; Line 48
	movzx	eax, WORD PTR _Status$9438[ebp]
	or	eax, 16					; 00000010H
	mov	WORD PTR _Status$9438[ebp], ax
$LN2@WM_SetEnab:
; Line 50
	movzx	eax, WORD PTR _Status$9438[ebp]
	mov	ecx, DWORD PTR _pWin$9437[ebp]
	cmp	DWORD PTR [ecx+40], eax
	je	SHORT $LN5@WM_SetEnab
; Line 52
	movzx	eax, WORD PTR _Status$9438[ebp]
	mov	ecx, DWORD PTR _pWin$9437[ebp]
	mov	DWORD PTR [ecx+40], eax
; Line 53
	mov	DWORD PTR _Msg$9443[ebp], 40		; 00000028H
; Line 54
	mov	eax, DWORD PTR _State$[ebp]
	mov	DWORD PTR _Msg$9443[ebp+12], eax
; Line 55
	lea	eax, DWORD PTR _Msg$9443[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
$LN5@WM_SetEnab:
; Line 59
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@WM_SetEnab
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@WM_SetEnab:
	DD	1
	DD	$LN8@WM_SetEnab
$LN8@WM_SetEnab:
	DD	-44					; ffffffd4H
	DD	16					; 00000010H
	DD	$LN7@WM_SetEnab
$LN7@WM_SetEnab:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_WM_SetEnableState ENDP
_TEXT	ENDS
PUBLIC	_WM_EnableWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_EnableWindow
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_WM_EnableWindow PROC					; COMDAT
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 66
	push	1
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetEnableState
	add	esp, 8
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_EnableWindow ENDP
_TEXT	ENDS
PUBLIC	_WM_DisableWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_DisableWindow
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_WM_DisableWindow PROC					; COMDAT
; Line 73
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 74
	push	0
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_SetEnableState
	add	esp, 8
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_DisableWindow ENDP
_TEXT	ENDS
END
