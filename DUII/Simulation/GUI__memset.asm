; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__memset.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__memset
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__memset.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__memset
_TEXT	SEGMENT
_pInt$8352 = -32					; size = 4
_FillInt$8351 = -20					; size = 4
_NumInts$ = -8						; size = 4
_p$ = 8							; size = 4
_Fill$ = 12						; size = 1
_NumBytes$ = 16						; size = 4
_GUI__memset PROC					; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN12@GUI__memse:
; Line 44
	cmp	DWORD PTR _NumBytes$[ebp], 0
	je	SHORT $LN11@GUI__memse
	mov	eax, DWORD PTR _p$[ebp]
	and	eax, 3
	je	SHORT $LN11@GUI__memse
; Line 45
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _Fill$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _NumBytes$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 47
	jmp	SHORT $LN12@GUI__memse
$LN11@GUI__memse:
; Line 49
	mov	eax, DWORD PTR _NumBytes$[ebp]
	shr	eax, 2
	mov	DWORD PTR _NumInts$[ebp], eax
; Line 50
	cmp	DWORD PTR _NumInts$[ebp], 0
	je	$LN2@GUI__memse
; Line 53
	mov	eax, DWORD PTR _NumBytes$[ebp]
	and	eax, 3
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 54
	xor	eax, eax
	je	SHORT $LN9@GUI__memse
; Line 55
	movzx	eax, BYTE PTR _Fill$[ebp]
	imul	eax, 257				; 00000101H
	mov	DWORD PTR _FillInt$8351[ebp], eax
	jmp	SHORT $LN8@GUI__memse
$LN9@GUI__memse:
; Line 56
	mov	eax, 1
	test	eax, eax
	je	SHORT $LN8@GUI__memse
; Line 57
	movzx	eax, BYTE PTR _Fill$[ebp]
	imul	eax, 16843009				; 01010101H
	mov	DWORD PTR _FillInt$8351[ebp], eax
$LN8@GUI__memse:
; Line 59
	mov	eax, DWORD PTR _p$[ebp]
	mov	DWORD PTR _pInt$8352[ebp], eax
$LN6@GUI__memse:
; Line 61
	cmp	DWORD PTR _NumInts$[ebp], 4
	jl	SHORT $LN4@GUI__memse
; Line 62
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	ecx, DWORD PTR _FillInt$8351[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pInt$8352[ebp]
	add	edx, 4
	mov	DWORD PTR _pInt$8352[ebp], edx
; Line 63
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	ecx, DWORD PTR _FillInt$8351[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pInt$8352[ebp]
	add	edx, 4
	mov	DWORD PTR _pInt$8352[ebp], edx
; Line 64
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	ecx, DWORD PTR _FillInt$8351[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pInt$8352[ebp]
	add	edx, 4
	mov	DWORD PTR _pInt$8352[ebp], edx
; Line 65
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	ecx, DWORD PTR _FillInt$8351[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pInt$8352[ebp]
	add	edx, 4
	mov	DWORD PTR _pInt$8352[ebp], edx
; Line 66
	mov	eax, DWORD PTR _NumInts$[ebp]
	sub	eax, 4
	mov	DWORD PTR _NumInts$[ebp], eax
; Line 67
	jmp	SHORT $LN6@GUI__memse
$LN4@GUI__memse:
; Line 69
	cmp	DWORD PTR _NumInts$[ebp], 0
	je	SHORT $LN3@GUI__memse
; Line 70
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	ecx, DWORD PTR _FillInt$8351[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pInt$8352[ebp]
	add	edx, 4
	mov	DWORD PTR _pInt$8352[ebp], edx
; Line 71
	mov	eax, DWORD PTR _NumInts$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumInts$[ebp], eax
; Line 72
	jmp	SHORT $LN4@GUI__memse
$LN3@GUI__memse:
; Line 73
	mov	eax, DWORD PTR _pInt$8352[ebp]
	mov	DWORD PTR _p$[ebp], eax
$LN2@GUI__memse:
; Line 76
	cmp	DWORD PTR _NumBytes$[ebp], 0
	je	SHORT $LN13@GUI__memse
; Line 77
	mov	eax, DWORD PTR _p$[ebp]
	mov	cl, BYTE PTR _Fill$[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _p$[ebp]
	add	edx, 1
	mov	DWORD PTR _p$[ebp], edx
; Line 78
	mov	eax, DWORD PTR _NumBytes$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 79
	jmp	SHORT $LN2@GUI__memse
$LN13@GUI__memse:
; Line 80
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__memset ENDP
_TEXT	ENDS
END
