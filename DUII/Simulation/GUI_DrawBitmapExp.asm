; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawBitmapExp.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawBitmapExp
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_SetDrawMode:PROC
EXTRN	_LCD_GetpPalConvTable:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawbitmapexp.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawBitmapExp
_TEXT	SEGMENT
tv71 = -236						; size = 4
_r$8358 = -36						; size = 8
_pTrans$ = -20						; size = 4
_PrevDraw$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_XSize$ = 16						; size = 4
_YSize$ = 20						; size = 4
_XMul$ = 24						; size = 4
_YMul$ = 28						; size = 4
_BitsPerPixel$ = 32					; size = 4
_BytesPerLine$ = 36					; size = 4
_pData$ = 40						; size = 4
_pPal$ = 44						; size = 4
_GUI_DrawBitmapExp PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 42
	mov	eax, DWORD PTR _pPal$[ebp]
	push	eax
	call	_LCD_GetpPalConvTable
	add	esp, 4
	mov	DWORD PTR _pTrans$[ebp], eax
; Line 43
	cmp	DWORD PTR _pPal$[ebp], 0
	je	SHORT $LN7@GUI_DrawBi
	mov	eax, DWORD PTR _pPal$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	test	ecx, ecx
	je	SHORT $LN7@GUI_DrawBi
	mov	DWORD PTR tv71[ebp], 2
	jmp	SHORT $LN8@GUI_DrawBi
$LN7@GUI_DrawBi:
	mov	DWORD PTR tv71[ebp], 0
$LN8@GUI_DrawBi:
	mov	edx, DWORD PTR tv71[ebp]
	push	edx
	call	_GUI_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _PrevDraw$[ebp], eax
; Line 45
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 48
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _r$8358[ebp], ax
; Line 49
	mov	eax, DWORD PTR _XSize$[ebp]
	imul	eax, DWORD PTR _XMul$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _r$8358[ebp+4], dx
; Line 50
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _r$8358[ebp+2], ax
; Line 51
	mov	eax, DWORD PTR _YSize$[ebp]
	imul	eax, DWORD PTR _YMul$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	WORD PTR _r$8358[ebp+6], dx
; Line 52
	lea	eax, DWORD PTR _r$8358[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@GUI_DrawBi
$LN3@GUI_DrawBi:
; Line 55
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _YMul$[ebp]
	push	ecx
	mov	edx, DWORD PTR _XMul$[ebp]
	push	edx
	mov	eax, DWORD PTR _YSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _XSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 57
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawBi
$LN4@GUI_DrawBi:
; Line 60
	mov	eax, DWORD PTR _PrevDraw$[ebp]
	push	eax
	call	_GUI_SetDrawMode
	add	esp, 4
; Line 62
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_DrawBi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@GUI_DrawBi:
	DD	1
	DD	$LN10@GUI_DrawBi
$LN10@GUI_DrawBi:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN9@GUI_DrawBi
$LN9@GUI_DrawBi:
	DB	114					; 00000072H
	DB	0
_GUI_DrawBitmapExp ENDP
_TEXT	ENDS
END
