; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Core.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__pFontDefault
EXTRN	_GUI_Font6x8:BYTE
EXTRN	_LCD_DrawPixel:PROC
EXTRN	_LCD_DrawHLine:PROC
_DATA	SEGMENT
COMM	_GUI_pLCD_APIList:DWORD
COMM	_GUI_pfTimerExec:DWORD
COMM	_WM_pfHandlePID:DWORD
COMM	_GUI_pfDispCharStyle:DWORD
COMM	_GUI_OrgX:WORD
COMM	_GUI_DecChar:BYTE
COMM	_GUI_OrgY:WORD
COMM	_GUI_pUC_API:DWORD
COMM	_GUI_Context:BYTE:060H
_GUI__pFontDefault DD FLAT:_GUI_Font6x8
_DATA	ENDS
CONST	SEGMENT
__HL_APIList DD	FLAT:_LCD_DrawHLine
	DD	FLAT:_LCD_DrawPixel
CONST	ENDS
PUBLIC	_GUI_SetDefaultFont
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_core.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_SetDefaultFont
_TEXT	SEGMENT
_pFont$ = 8						; size = 4
_GUI_SetDefaultFont PROC				; COMDAT
; Line 110
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR _GUI__pFontDefault, eax
; Line 112
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SetDefaultFont ENDP
_TEXT	ENDS
PUBLIC	_GUI_ClearRect
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_LCD_FillRect:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_ClearRect
_TEXT	SEGMENT
_r$ = -24						; size = 8
_PrevDraw$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_GUI_ClearRect PROC					; COMDAT
; Line 118
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 124
	push	4
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _PrevDraw$[ebp], eax
; Line 126
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 128
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 129
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 130
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 131
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 132
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@GUI_ClearR
$LN3@GUI_ClearR:
; Line 134
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 136
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_ClearR
$LN4@GUI_ClearR:
; Line 138
	mov	eax, DWORD PTR _PrevDraw$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 140
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_ClearR
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN9@GUI_ClearR:
	DD	1
	DD	$LN8@GUI_ClearR
$LN8@GUI_ClearR:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@GUI_ClearR
$LN7@GUI_ClearR:
	DB	114					; 00000072H
	DB	0
_GUI_ClearRect ENDP
_TEXT	ENDS
PUBLIC	_GUI_Clear
EXTRN	_GUI_GotoXY:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_Clear
_TEXT	SEGMENT
_GUI_Clear PROC						; COMDAT
; Line 146
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	push	0
	push	0
	call	_GUI_GotoXY
	add	esp, 8
; Line 148
	push	4095					; 00000fffH
	push	4095					; 00000fffH
	push	-4095					; fffff001H
	push	-4095					; fffff001H
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_Clear ENDP
_TEXT	ENDS
PUBLIC	_GUI__Config
EXTRN	_LCD_X_Config:PROC
EXTRN	_GUI_X_Config:PROC
_BSS	SEGMENT
?Done@?1??GUI__Config@@9@9 DD 01H DUP (?)		; `GUI__Config'::`2'::Done
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GUI__Config
_TEXT	SEGMENT
_GUI__Config PROC					; COMDAT
; Line 155
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 157
	cmp	DWORD PTR ?Done@?1??GUI__Config@@9@9, 0
	jne	SHORT $LN2@GUI__Confi
; Line 158
	mov	DWORD PTR ?Done@?1??GUI__Config@@9@9, 1
; Line 159
	call	_GUI_X_Config
; Line 160
	call	_LCD_X_Config
$LN2@GUI__Confi:
; Line 162
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__Config ENDP
_TEXT	ENDS
PUBLIC	_GUI_Init
EXTRN	_WM_Init:PROC
EXTRN	_GUI_SetOrg:PROC
EXTRN	_LCD_Init:PROC
EXTRN	_GUI_X_Init:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_Init
_TEXT	SEGMENT
_r$ = -8						; size = 4
_GUI_Init PROC						; COMDAT
; Line 171
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 174
	call	_GUI__Config
; Line 176
	mov	BYTE PTR _GUI_DecChar, 46		; 0000002eH
; Line 177
	call	_GUI_X_Init
; Line 179
	push	OFFSET _GUI_Context
	call	__InitContext
	add	esp, 4
; Line 181
	call	_LCD_Init
	mov	DWORD PTR _r$[ebp], eax
; Line 182
	push	0
	push	0
	call	_GUI_SetOrg
	add	esp, 8
; Line 184
	call	_WM_Init
; Line 203
	mov	eax, DWORD PTR _r$[ebp]
; Line 204
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_Init ENDP
_TEXT	ENDS
EXTRN	_GUI_UC_None:BYTE
EXTRN	_LCD_SetColor:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_WM_GetDesktopWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __InitContext
_TEXT	SEGMENT
_pContext$ = 8						; size = 4
__InitContext PROC					; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
$LN4@InitContex:
; Line 68
	cmp	DWORD PTR _GUI_Context+72, 0
	jne	SHORT $LN2@InitContex
	jmp	SHORT $LN4@InitContex
$LN2@InitContex:
; Line 72
	cmp	DWORD PTR _GUI__pFontDefault, 0
	jne	SHORT $LN1@InitContex
	jmp	SHORT $LN2@InitContex
$LN1@InitContex:
; Line 77
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+20], OFFSET _GUI_Context+8
; Line 78
	mov	eax, DWORD PTR _pContext$[ebp]
	add	eax, 8
	mov	esi, esp
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+88], OFFSET __HL_APIList
; Line 80
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	ecx, DWORD PTR _GUI__pFontDefault
	mov	DWORD PTR [eax+28], ecx
; Line 81
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+20], OFFSET _GUI_Context+8
; Line 82
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	BYTE PTR [eax+24], 1
; Line 87
	call	_WM_GetDesktopWindow
	mov	ecx, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 92
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	BYTE PTR [eax+92], 3
; Line 93
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+48], 268435455		; 0fffffffH
; Line 94
	mov	eax, DWORD PTR _pContext$[ebp]
	mov	DWORD PTR [eax+52], 268435455		; 0fffffffH
; Line 95
	push	0
	call	_LCD_SetBkColor
	add	esp, 4
; Line 96
	push	16777215				; 00ffffffH
	call	_LCD_SetColor
	add	esp, 4
; Line 97
	mov	DWORD PTR _GUI_pUC_API, OFFSET _GUI_UC_None
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__InitContext ENDP
_TEXT	ENDS
END
