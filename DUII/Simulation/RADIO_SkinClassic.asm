; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\RADIO_SkinClassic.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_RADIO__SkinClassic
CONST	SEGMENT
_RADIO__SkinClassic DD FLAT:__Paint
	DD	FLAT:__Create
	DD	FLAT:__SkinPrivate
CONST	ENDS
_DATA	SEGMENT
__SkinPrivate DD FLAT:__GetButtonSize
	ORG $+4
_DATA	ENDS
EXTRN	_GUI_DrawFocusRect:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_WM_GetHasTrans:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	_GUI_GetFontInfo:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_WM__IsEnabled:PROC
EXTRN	_WIDGET__GetClientRect:PROC
EXTRN	_RADIO_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\radio_skinclassic.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
tv156 = -416						; size = 4
_FocusBorder$ = -213					; size = 1
_CHeight$ = -201					; size = 1
_SpaceAbove$ = -189					; size = 1
_Height$ = -180						; size = 4
_Sel$ = -168						; size = 4
_FontDistY$ = -156					; size = 4
_HasFocus$ = -144					; size = 4
_y$ = -132						; size = 4
_i$ = -120						; size = 4
_rFocus$ = -108						; size = 8
_r$ = -92						; size = 8
_Rect$ = -76						; size = 8
_FontInfo$ = -60					; size = 6
_pText$ = -44						; size = 4
_pBmCheck$ = -32					; size = 4
_pBmRadio$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 45
	xor	eax, eax
	mov	WORD PTR _rFocus$[ebp], ax
	xor	eax, eax
	mov	DWORD PTR _rFocus$[ebp+2], eax
	mov	WORD PTR _rFocus$[ebp+6], ax
; Line 49
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 50
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+100]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 51
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	movzx	edx, WORD PTR [ecx+2]
	add	edx, 4
	mov	DWORD PTR _Height$[ebp], edx
; Line 53
	lea	eax, DWORD PTR _rFocus$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__GetClientRect
	add	esp, 8
; Line 54
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _HasFocus$[ebp], ecx
; Line 55
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+72]
	mov	DWORD PTR _pBmRadio$[ebp], edx
; Line 56
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _pBmCheck$[ebp], ecx
; Line 57
	mov	eax, DWORD PTR _pBmRadio$[ebp]
	movzx	ecx, WORD PTR [eax]
	add	ecx, 3
	mov	WORD PTR _rFocus$[ebp+4], cx
; Line 58
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+104]
	sub	ecx, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	movzx	eax, WORD PTR [edx+102]
	imul	ecx, eax
	mov	edx, DWORD PTR _Height$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	mov	WORD PTR _rFocus$[ebp+6], ax
; Line 61
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 62
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 63
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 66
	lea	eax, DWORD PTR _FontInfo$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	push	edx
	call	_GUI_GetFontInfo
	add	esp, 8
; Line 67
	call	_GUI_GetFontDistY
	mov	DWORD PTR _FontDistY$[ebp], eax
; Line 68
	mov	al, BYTE PTR _FontInfo$[ebp+4]
	mov	BYTE PTR _CHeight$[ebp], al
; Line 69
	movzx	eax, BYTE PTR _FontInfo$[ebp+2]
	movzx	ecx, BYTE PTR _CHeight$[ebp]
	sub	eax, ecx
	mov	BYTE PTR _SpaceAbove$[ebp], al
; Line 70
	mov	eax, DWORD PTR _pBmRadio$[ebp]
	movzx	ecx, WORD PTR [eax]
	add	ecx, 6
	mov	WORD PTR _Rect$[ebp], cx
; Line 71
	movzx	eax, BYTE PTR _CHeight$[ebp]
	cmp	eax, DWORD PTR _Height$[ebp]
	jg	SHORT $LN16@Paint
	movzx	ecx, BYTE PTR _CHeight$[ebp]
	mov	eax, DWORD PTR _Height$[ebp]
	sub	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR tv156[ebp], eax
	jmp	SHORT $LN17@Paint
$LN16@Paint:
	mov	DWORD PTR tv156[ebp], 0
$LN17@Paint:
	mov	dx, WORD PTR tv156[ebp]
	mov	WORD PTR _Rect$[ebp+2], dx
; Line 72
	movsx	eax, WORD PTR _Rect$[ebp+2]
	movzx	ecx, BYTE PTR _CHeight$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 73
	xor	eax, eax
	cmp	DWORD PTR _FontDistY$[ebp], 12		; 0000000cH
	setg	al
	add	eax, 2
	mov	BYTE PTR _FocusBorder$[ebp], al
; Line 74
	movsx	eax, WORD PTR _Rect$[ebp+2]
	movzx	ecx, BYTE PTR _FocusBorder$[ebp]
	cmp	eax, ecx
	jge	SHORT $LN13@Paint
; Line 75
	mov	al, BYTE PTR _Rect$[ebp+2]
	mov	BYTE PTR _FocusBorder$[ebp], al
$LN13@Paint:
; Line 81
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetHasTrans
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN12@Paint
; Line 84
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+56], 268435455		; 0fffffffH
	je	SHORT $LN11@Paint
; Line 85
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 86
	jmp	SHORT $LN10@Paint
$LN11@Paint:
; Line 87
	push	12632256				; 00c0c0c0H
	call	_LCD_SetBkColor
	add	esp, 4
$LN10@Paint:
; Line 89
	call	_GUI_Clear
$LN12@Paint:
; Line 93
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN9@Paint
$LN8@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN9@Paint:
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+104]
	cmp	DWORD PTR _i$[ebp], ecx
	jge	$LN7@Paint
; Line 94
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+102]
	imul	ecx, DWORD PTR _i$[ebp]
	mov	DWORD PTR _y$[ebp], ecx
; Line 96
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 97
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 2
	push	eax
	push	2
	mov	ecx, DWORD PTR _pBmRadio$[ebp]
	push	ecx
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 99
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _i$[ebp]
	jne	SHORT $LN6@Paint
; Line 101
	mov	eax, DWORD PTR _pBmRadio$[ebp]
	movzx	eax, WORD PTR [eax+2]
	mov	ecx, DWORD PTR _pBmCheck$[ebp]
	movzx	edx, WORD PTR [ecx+2]
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _y$[ebp]
	lea	edx, DWORD PTR [eax+ecx+2]
	push	edx
	mov	eax, DWORD PTR _pBmRadio$[ebp]
	movzx	eax, WORD PTR [eax]
	mov	ecx, DWORD PTR _pBmCheck$[ebp]
	movzx	edx, WORD PTR [ecx]
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	eax, 2
	push	eax
	mov	eax, DWORD PTR _pBmCheck$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
$LN6@Paint:
; Line 103
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+96]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pText$[ebp], eax
; Line 106
	cmp	DWORD PTR _pText$[ebp], 0
	je	$LN5@Paint
; Line 107
	mov	eax, DWORD PTR _pText$[ebp]
	movzx	ecx, BYTE PTR [eax]
	test	ecx, ecx
	je	$LN4@Paint
; Line 108
	mov	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _r$[ebp+4], ecx
; Line 109
	movsx	esi, WORD PTR _r$[ebp]
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	lea	ecx, DWORD PTR [esi+eax-2]
	mov	WORD PTR _r$[ebp+4], cx
; Line 110
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	push	0
	lea	ecx, DWORD PTR _r$[ebp]
	push	ecx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 111
	movsx	eax, WORD PTR _r$[ebp+2]
	movzx	ecx, BYTE PTR _SpaceAbove$[ebp]
	sub	eax, ecx
	push	eax
	movsx	edx, WORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 113
	cmp	DWORD PTR _HasFocus$[ebp], 0
	je	SHORT $LN4@Paint
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+100]
	cmp	ecx, DWORD PTR _i$[ebp]
	je	SHORT $LN2@Paint
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+106]
	test	ecx, ecx
	je	SHORT $LN4@Paint
$LN2@Paint:
; Line 114
	movzx	eax, BYTE PTR _FocusBorder$[ebp]
	neg	eax
	push	eax
	lea	ecx, DWORD PTR _r$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rFocus$[ebp]
	push	edx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
$LN4@Paint:
; Line 117
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$[ebp], 0
$LN5@Paint:
; Line 119
	jmp	$LN8@Paint
$LN7@Paint:
; Line 122
	cmp	DWORD PTR _HasFocus$[ebp], 0
	je	SHORT $LN1@Paint
; Line 123
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 124
	push	0
	lea	eax, DWORD PTR _rFocus$[ebp]
	push	eax
	call	_GUI_DrawFocusRect
	add	esp, 8
$LN1@Paint:
; Line 126
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 127
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN23@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN23@Paint:
	DD	4
	DD	$LN22@Paint
$LN22@Paint:
	DD	-60					; ffffffc4H
	DD	6
	DD	$LN18@Paint
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN19@Paint
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN20@Paint
	DD	-108					; ffffff94H
	DD	8
	DD	$LN21@Paint
$LN21@Paint:
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN20@Paint:
	DB	114					; 00000072H
	DB	0
$LN19@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN18@Paint:
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__Paint	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 133
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 135
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _hObj$[ebp], eax
; Line 136
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Create ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetButtonSize
_TEXT	SEGMENT
_ButtonSize$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetButtonSize PROC					; COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 146
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 147
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	movzx	edx, WORD PTR [ecx+2]
	mov	DWORD PTR _ButtonSize$[ebp], edx
; Line 148
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 149
	mov	eax, DWORD PTR _ButtonSize$[ebp]
; Line 150
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetButtonSize ENDP
_TEXT	ENDS
PUBLIC	_RADIO_SetSkinClassic
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RADIO_SetSkinClassic
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_RADIO_SetSkinClassic PROC				; COMDAT
; Line 186
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 189
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_RADIO_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 190
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+92], OFFSET _RADIO__SkinClassic
; Line 191
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 192
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 193
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RADIO_SetSkinClassic ENDP
_TEXT	ENDS
PUBLIC	_RADIO_SetDefaultSkinClassic
EXTRN	_RADIO__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RADIO_SetDefaultSkinClassic
_TEXT	SEGMENT
_RADIO_SetDefaultSkinClassic PROC			; COMDAT
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 200
	mov	DWORD PTR _RADIO__pSkinDefault, OFFSET _RADIO__SkinClassic
; Line 201
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_RADIO_SetDefaultSkinClassic ENDP
_TEXT	ENDS
END
