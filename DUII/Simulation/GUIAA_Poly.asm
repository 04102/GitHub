; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Antialias\GUIAA_Poly.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_AA_FillPolygon
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_WM__GetOrgY_AA:PROC
EXTRN	_WM__GetOrgX_AA:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\antialias\guiaa_poly.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_AA_FillPolygon
_TEXT	SEGMENT
_pfFillPolygonAA$ = -20					; size = 4
_pDevice$ = -8						; size = 4
_pPoints$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x0$ = 16						; size = 4
_y0$ = 20						; size = 4
_GUI_AA_FillPolygon PROC				; COMDAT
; Line 101
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 107
	call	_WM__GetOrgX_AA
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
	call	_WM__GetOrgY_AA
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
; Line 108
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@GUI_AA_Fil
$LN5@GUI_AA_Fil:
; Line 110
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	DWORD PTR _pDevice$[ebp], ecx
; Line 111
	mov	esi, esp
	push	18					; 00000012H
	lea	eax, DWORD PTR _pDevice$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+36]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _pfFillPolygonAA$[ebp], eax
; Line 112
	cmp	DWORD PTR _pfFillPolygonAA$[ebp], 0
	je	SHORT $LN2@GUI_AA_Fil
; Line 113
	mov	esi, esp
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDevice$[ebp]
	push	ecx
	call	DWORD PTR _pfFillPolygonAA$[ebp]
	add	esp, 20					; 00000014H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 114
	jmp	SHORT $LN4@GUI_AA_Fil
$LN2@GUI_AA_Fil:
; Line 115
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _pPoints$[ebp]
	push	eax
	call	__FillPolygonAA
	add	esp, 16					; 00000010H
$LN4@GUI_AA_Fil:
; Line 118
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN5@GUI_AA_Fil
$LN7@GUI_AA_Fil:
; Line 121
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_AA_Fil
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@GUI_AA_Fil:
	DD	1
	DD	$LN10@GUI_AA_Fil
$LN10@GUI_AA_Fil:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN9@GUI_AA_Fil
$LN9@GUI_AA_Fil:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	118					; 00000076H
	DB	105					; 00000069H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	0
_GUI_AA_FillPolygon ENDP
_TEXT	ENDS
EXTRN	_GUI_AA_Exit:PROC
EXTRN	_GL_FillPolygon:PROC
EXTRN	_GUI_AA_Init:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __FillPolygonAA
_TEXT	SEGMENT
tv67 = -268						; size = 4
_PosFactor$ = -68					; size = 4
_paPoint_x$ = -56					; size = 4
_x1$ = -44						; size = 4
_x0$ = -32						; size = 4
_Stat$ = -20						; size = 4
_i$ = -8						; size = 4
_paPoint$ = 8						; size = 4
_NumPoints$ = 12					; size = 4
_x$ = 16						; size = 4
_y$ = 20						; size = 4
__FillPolygonAA PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-268]
	mov	ecx, 67					; 00000043H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 45
	movzx	eax, BYTE PTR _GUI_Context+93
	test	eax, eax
	je	SHORT $LN19@FillPolygo
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN20@FillPolygo
$LN19@FillPolygo:
	movzx	ecx, BYTE PTR _GUI_Context+92
	mov	DWORD PTR tv67[ebp], ecx
$LN20@FillPolygo:
	mov	edx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _PosFactor$[ebp], edx
; Line 49
	mov	eax, DWORD PTR _paPoint$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	DWORD PTR _x1$[ebp], ecx
	mov	edx, DWORD PTR _x1$[ebp]
	mov	DWORD PTR _x0$[ebp], edx
; Line 50
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN16@FillPolygo
$LN15@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN16@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	SHORT $LN14@FillPolygo
; Line 51
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _paPoint$[ebp]
	movsx	edx, WORD PTR [ecx+eax*4]
	mov	DWORD PTR _paPoint_x$[ebp], edx
; Line 52
	mov	eax, DWORD PTR _paPoint_x$[ebp]
	cmp	eax, DWORD PTR _x0$[ebp]
	jge	SHORT $LN13@FillPolygo
; Line 53
	mov	eax, DWORD PTR _paPoint_x$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
$LN13@FillPolygo:
; Line 55
	mov	eax, DWORD PTR _paPoint_x$[ebp]
	cmp	eax, DWORD PTR _x1$[ebp]
	jle	SHORT $LN12@FillPolygo
; Line 56
	mov	eax, DWORD PTR _paPoint_x$[ebp]
	mov	DWORD PTR _x1$[ebp], eax
$LN12@FillPolygo:
; Line 58
	jmp	SHORT $LN15@FillPolygo
$LN14@FillPolygo:
; Line 59
	movzx	eax, BYTE PTR _GUI_Context+93
	test	eax, eax
	jne	SHORT $LN11@FillPolygo
; Line 60
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GUI_AA_Init
	add	esp, 8
	mov	DWORD PTR _Stat$[ebp], eax
; Line 61
	jmp	SHORT $LN10@FillPolygo
$LN11@FillPolygo:
; Line 62
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movzx	ecx, BYTE PTR _GUI_Context+92
	cdq
	idiv	ecx
	push	eax
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	movzx	ecx, BYTE PTR _GUI_Context+92
	cdq
	idiv	ecx
	push	eax
	call	_GUI_AA_Init
	add	esp, 8
	mov	DWORD PTR _Stat$[ebp], eax
$LN10@FillPolygo:
; Line 64
	cmp	DWORD PTR _Stat$[ebp], 0
	jne	$LN9@FillPolygo
; Line 68
	movzx	eax, BYTE PTR _GUI_Context+93
	test	eax, eax
	jne	SHORT $LN8@FillPolygo
; Line 69
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN7@FillPolygo
$LN6@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	SHORT $LN8@FillPolygo
; Line 70
	movzx	eax, BYTE PTR _GUI_Context+92
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _paPoint$[ebp]
	movsx	ecx, WORD PTR [edx+ecx*4]
	imul	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _paPoint$[ebp]
	mov	WORD PTR [eax+edx*4], cx
; Line 71
	movzx	eax, BYTE PTR _GUI_Context+92
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _paPoint$[ebp]
	movsx	ecx, WORD PTR [edx+ecx*4+2]
	imul	ecx, eax
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _paPoint$[ebp]
	mov	WORD PTR [eax+edx*4+2], cx
; Line 72
	jmp	SHORT $LN6@FillPolygo
$LN8@FillPolygo:
; Line 74
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _PosFactor$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	imul	ecx, DWORD PTR _PosFactor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _NumPoints$[ebp]
	push	edx
	mov	eax, DWORD PTR _paPoint$[ebp]
	push	eax
	call	_GL_FillPolygon
	add	esp, 16					; 00000010H
; Line 78
	movzx	eax, BYTE PTR _GUI_Context+93
	test	eax, eax
	jne	SHORT $LN9@FillPolygo
; Line 79
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@FillPolygo
$LN2@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@FillPolygo:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumPoints$[ebp]
	jge	SHORT $LN9@FillPolygo
; Line 80
	movzx	ecx, BYTE PTR _GUI_Context+92
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _paPoint$[ebp]
	movsx	eax, WORD PTR [eax+edx*4]
	cdq
	idiv	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _paPoint$[ebp]
	mov	WORD PTR [edx+ecx*4], ax
; Line 81
	movzx	ecx, BYTE PTR _GUI_Context+92
	mov	edx, DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _paPoint$[ebp]
	movsx	eax, WORD PTR [eax+edx*4+2]
	cdq
	idiv	ecx
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _paPoint$[ebp]
	mov	WORD PTR [edx+ecx*4+2], ax
; Line 82
	jmp	SHORT $LN2@FillPolygo
$LN9@FillPolygo:
; Line 88
	call	_GUI_AA_Exit
; Line 89
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__FillPolygonAA ENDP
_TEXT	ENDS
END
