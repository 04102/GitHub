; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\VehicleSettingsScreens.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_CameraSetupPaint
PUBLIC	_DisplayCameraSetupSelection
PUBLIC	_WeightSelectionPaint
PUBLIC	_DisplayWeightSelection
PUBLIC	_InputsSelectionPaint
PUBLIC	_RSDisplayInputsSelection
PUBLIC	_GearRatioPaint
PUBLIC	_DisplayGearRatio
PUBLIC	_CarMetricsSelectionPaint
PUBLIC	_DisplayCarMetricsSelection
PUBLIC	_TachSelectionPaint
PUBLIC	_DisplayTachSelection
PUBLIC	_testCamera
PUBLIC	_VehicleSettingsScreenList
PUBLIC	_NewCameras
PUBLIC	_TimeRect
PUBLIC	_DistRect
PUBLIC	_RPMRect
PUBLIC	_Digits
EXTRN	_BUTTON_CreateIndirect:PROC
EXTRN	_TEXT_CreateIndirect:PROC
EXTRN	_FRAMEWIN_CreateIndirect:PROC
_DATA	SEGMENT
COMM	_hCylindersSlider:DWORD
COMM	_hOnesWheel:DWORD
COMM	_hBtnNone:DWORD
COMM	_hTraqdashCam:DWORD
COMM	_hCameraDelayTimer:DWORD
COMM	_hBtnMini:DWORD
COMM	_hNumCylsBtn:DWORD
COMM	_hRollSlider:DWORD
COMM	_hShowRPMCheck:DWORD
COMM	_hRedlineSlider:DWORD
COMM	_hCameraSelection:DWORD
COMM	_ones:DWORD
COMM	_hCameraDelay:DWORD
COMM	_hCurrentRPMBtn:DWORD
COMM	_hWindSlider:DWORD
COMM	_hVehicleSettingMainScreen:DWORD
COMM	_hCameraList:DWORD
COMM	_tenths:DWORD
COMM	_hRedlineBtn:DWORD
COMM	_hYellowBtn:DWORD
COMM	_hShowSpeedCheck:DWORD
COMM	_hYellowSlider:DWORD
COMM	_hTenthsWheel:DWORD
COMM	_hBtnMobius:DWORD
COMM	_hBtnPrimeX:DWORD
COMM	_hAeroGripScreen:DWORD
_DATA	ENDS
_BSS	SEGMENT
_testCamera DD	01H DUP (?)
_BSS	ENDS
CONST	SEGMENT
_TimeRect DW	064H
	DW	03cH
	DW	0ebH
	DW	050H
_DistRect DW	064H
	DW	067H
	DW	0ebH
	DW	07bH
_RPMRect DW	064H
	DW	092H
	DW	0ebH
	DW	0a6H
_InvalidTachResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20736
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20737
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20738
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20739
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20740
	DW	01H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20741
	DW	02H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_InvalidGearResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20743
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20744
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20745
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20746
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20747
	DW	01H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20748
	DW	02H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_InvalidWeightResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20750
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20751
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20752
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20753
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20754
	DW	01H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20755
	DW	02H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_NoGearsResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20757
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20758
	DW	00H
	DW	00H
	DW	014H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20759
	DW	00H
	DW	00H
	DW	03cH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20760
	DW	02H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20761
	DW	01H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_GoProWarningResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20763
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20764
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20765
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20766
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20767
	DW	02H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20768
	DW	01H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_SURev370WarningResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20770
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20771
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20772
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20773
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20774
	DW	02H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20775
	DW	01H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_ChangedCameraResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20777
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20778
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20779
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20780
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20781
	DW	01H
	DW	023H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20782
	DW	02H
	DW	0c3H
	DW	073H
	DW	078H
	DW	03cH
	ORG $+6
_ResetCameraResources DD FLAT:_FRAMEWIN_CreateIndirect
	DD	FLAT:$SG20784
	DW	00H
	DW	032H
	DW	014H
	DW	0168H
	DW	0dcH
	DW	00H
	DD	00H
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20785
	DW	00H
	DW	00H
	DW	0aH
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20786
	DW	00H
	DW	00H
	DW	028H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_TEXT_CreateIndirect
	DD	FLAT:$SG20787
	DW	00H
	DW	00H
	DW	046H
	DW	015eH
	DW	01eH
	DW	02H
	ORG $+4
	DD	FLAT:_BUTTON_CreateIndirect
	DD	FLAT:$SG20788
	DW	01H
	DW	091H
	DW	073H
	DW	064H
	DW	03cH
	ORG $+6
CONST	ENDS
_DATA	SEGMENT
_VehicleSettingsScreenList DD 00H
	DD	FLAT:_DisplayTachSelection
	DD	FLAT:_TachSelectionPaint
	DD	01H
	DD	FLAT:_DisplayCarMetricsSelection
	DD	FLAT:_CarMetricsSelectionPaint
	DD	02H
	DD	FLAT:_DisplayGearRatio
	DD	FLAT:_GearRatioPaint
	DD	03H
	DD	FLAT:_RSDisplayInputsSelection
	DD	FLAT:_InputsSelectionPaint
	DD	04H
	DD	FLAT:_DisplayWeightSelection
	DD	FLAT:_WeightSelectionPaint
	DD	05H
	DD	FLAT:_DisplayCameraSetupSelection
	DD	FLAT:_CameraSetupPaint
	DD	0ffffffffH
	DD	00H
	DD	00H
$SG20041 DB	'None', 00H
	ORG $+3
$SG20042 DB	'None', 00H
	ORG $+3
$SG20043 DB	'Mobius', 00H
	ORG $+1
$SG20044 DB	'TraqData USB', 00H
	ORG $+3
$SG20045 DB	'Replay Mini', 00H
$SG20046 DB	'TraqData USB', 00H
	ORG $+3
$SG20047 DB	'Replay Prime X', 00H
	ORG $+1
$SG20048 DB	'TraqData USB', 00H
	ORG $+3
$SG20049 DB	'Replay XD1080', 00H
	ORG $+2
$SG20050 DB	'TraqData USB', 00H
	ORG $+3
$SG20051 DB	'Replay XD1080', 00H
	ORG $+2
$SG20052 DB	'TraqData HD2', 00H
	ORG $+3
$SG20053 DB	'GoPro HERO1 & 2', 00H
$SG20054 DB	'TraqData/Sync Pro', 00H
	ORG $+2
$SG20055 DB	'GoPro HERO1 & 2', 00H
$SG20056 DB	'TraqData HD2', 00H
	ORG $+3
$SG20057 DB	'Sony HD', 00H
$SG20058 DB	'TraqData HD', 00H
$SG20059 DB	'RaceCam HD', 00H
	ORG $+1
$SG20060 DB	'TraqData HD', 00H
$SG20061 DB	'ChaseCam SD LANC', 00H
	ORG $+3
$SG20062 DB	'TraqData HD', 00H
_NewCameras DD	FLAT:$SG20041
	DD	FLAT:$SG20042
	DB	00H
	ORG $+3
	DD	FLAT:$SG20043
	DD	FLAT:$SG20044
	DB	0eH
	ORG $+3
	DD	FLAT:$SG20045
	DD	FLAT:$SG20046
	DB	0cH
	ORG $+3
	DD	FLAT:$SG20047
	DD	FLAT:$SG20048
	DB	0dH
	ORG $+3
	DD	FLAT:$SG20049
	DD	FLAT:$SG20050
	DB	0aH
	ORG $+3
	DD	FLAT:$SG20051
	DD	FLAT:$SG20052
	DB	09H
	ORG $+3
	DD	FLAT:$SG20053
	DD	FLAT:$SG20054
	DB	0bH
	ORG $+3
	DD	FLAT:$SG20055
	DD	FLAT:$SG20056
	DB	08H
	ORG $+3
	DD	FLAT:$SG20057
	DD	FLAT:$SG20058
	DB	01H
	ORG $+3
	DD	FLAT:$SG20059
	DD	FLAT:$SG20060
	DB	02H
	ORG $+3
	DD	FLAT:$SG20061
	DD	FLAT:$SG20062
	DB	04H
	ORG $+3
	DD	00H
	DD	00H
	DB	00H
	ORG $+3
_tempCameraIndex DD 0ffffffffH
$SG20296 DB	'%u', 00H
	ORG $+1
$SG20300 DB	'%u', 00H
	ORG $+1
$SG20304 DB	'%u', 00H
	ORG $+1
$SG20319 DB	'%u', 00H
	ORG $+1
$SG20320 DB	'Current RPM', 00H
$SG20321 DB	'Max RPM', 00H
$SG20322 DB	'Redline Start', 00H
	ORG $+2
$SG20323 DB	'Warning Start', 00H
	ORG $+2
$SG20324 DB	'Engine Cylinders', 00H
	ORG $+3
$SG20336 DB	'Weight in kilos', 00H
$SG20338 DB	'Weight in pounds', 00H
	ORG $+3
$SG20361 DB	'ANALOG', 00H
	ORG $+1
$SG20362 DB	'DIGITAL', 00H
$SG20367 DB	'Enter Tire Size', 00H
$SG20368 DB	'Enter Diff Ratio', 00H
	ORG $+3
$SG20369 DB	'Enter Trans Ratios', 00H
	ORG $+1
$SG20370 DB	'Gearing Help', 00H
	ORG $+3
$SG20383 DB	'%u/%u*%u', 00H
	ORG $+3
$SG20386 DB	'Gearing Disabled', 00H
	ORG $+3
$SG20388 DB	'%.2f', 00H
	ORG $+3
$SG20389 DB	'Transmission Ratios', 00H
$SG20390 DB	'1st:', 00H
	ORG $+3
$SG20391 DB	'2nd:', 00H
	ORG $+3
$SG20392 DB	'3rd:', 00H
	ORG $+3
$SG20393 DB	'4th:', 00H
	ORG $+3
$SG20394 DB	'5th:', 00H
	ORG $+3
$SG20395 DB	'6th:', 00H
	ORG $+3
$SG20396 DB	'7th:', 00H
	ORG $+3
$SG20397 DB	'8th:', 00H
	ORG $+3
$SG20398 DB	'%.2f', 00H
	ORG $+3
$SG20399 DB	'%.2f', 00H
	ORG $+3
$SG20400 DB	'%.2f', 00H
	ORG $+3
$SG20401 DB	'%.2f', 00H
	ORG $+3
$SG20402 DB	'%.2f', 00H
	ORG $+3
$SG20403 DB	'%.2f', 00H
	ORG $+3
$SG20404 DB	'%.2f', 00H
	ORG $+3
$SG20405 DB	'%.2f', 00H
	ORG $+3
$SG20453 DB	'Drag Coefficient (Cd) x Frontal Area (m^2)', 00H
	ORG $+1
$SG20454 DB	'Tire Friction Crr Rolling Resistance', 00H
	ORG $+3
$SG20455 DB	'%0.03f', 00H
	ORG $+1
$SG20456 DB	'%0.03f', 00H
	ORG $+1
$SG20457 DB	'Vehicle: %s', 00H
$SG20464 DB	'Reset Total Time', 00H
	ORG $+3
$SG20465 DB	'Reset Total Distance', 00H
	ORG $+3
$SG20466 DB	'Reset Max RPM', 00H
	ORG $+2
$SG20467 DB	'Aero/Grip', 00H
	ORG $+2
$SG20468 DB	'Reset All', 00H
	ORG $+2
$SG20485 DB	'Total Time:', 00H
$SG20486 DB	'Total Distance:', 00H
$SG20487 DB	'Max RPM:', 00H
	ORG $+3
$SG20488 DB	'Aero (Cd)', 00H
	ORG $+2
$SG20489 DB	'Grip (Crr)', 00H
	ORG $+1
$SG20490 DB	'%0.03f', 00H
	ORG $+1
$SG20491 DB	'%0.03f', 00H
	ORG $+1
$SG20499 DB	'%u hr', 00H
	ORG $+2
$SG20502 DB	'%0.1f hr', 00H
	ORG $+3
$SG20503 DB	'%0.2f hr', 00H
	ORG $+3
$SG20511 DB	'%u mi', 00H
	ORG $+2
$SG20513 DB	'%0.1f mi', 00H
	ORG $+3
$SG20514 DB	'%0.2f mi', 00H
	ORG $+3
$SG20518 DB	'%u km', 00H
	ORG $+2
$SG20520 DB	'%0.1f km', 00H
	ORG $+3
$SG20521 DB	'%0.2f km', 00H
	ORG $+3
$SG20526 DB	'%u', 00H
	ORG $+1
$SG20544 DB	'TraqDash USB Port', 00H
	ORG $+2
$SG20545 DB	'Sensor Unit Box', 00H
$SG20546 DB	'Test Camera(s)', 00H
	ORG $+1
$SG20551 DB	'Camera Connection', 00H
	ORG $+2
$SG20553 DB	'Camera Settings', 00H
$SG20554 DB	'TraqDash USB Port', 00H
	ORG $+2
$SG20555 DB	'Sensor Unit Camera Box', 00H
	ORG $+1
$SG20557 DB	'%s', 00H
	ORG $+1
$SG20559 DB	'%s (%u.%usec)', 00H
	ORG $+2
$SG20561 DB	'TraqDash USB Camera', 00H
$SG20562 DB	'Not Supported', 00H
	ORG $+2
$SG20564 DB	'Camera(s) Active', 00H
	ORG $+3
$SG20566 DB	'Camera(s) Not Active', 00H
	ORG $+3
$SG20582 DB	'Selected Camera(s)', 0aH, 'SU: ', 00H
$SG20583 DB	0aH, 'USB: ', 00H
	ORG $+1
$SG20585 DB	'USB Camera', 00H
	ORG $+1
$SG20587 DB	'None', 00H
	ORG $+3
$SG20588 DB	0aH, 0aH, 00H
	ORG $+1
$SG20600 DB	'Mobius', 00H
	ORG $+1
$SG20603 DB	'Replay Prime-X', 00H
	ORG $+1
$SG20606 DB	'Replay Mini', 00H
$SG20608 DB	'None selected', 00H
	ORG $+2
$SG20621 DB	'Mobius', 00H
	ORG $+1
$SG20622 DB	'Prime-X', 00H
$SG20623 DB	'Mini', 00H
	ORG $+3
$SG20624 DB	'None', 00H
	ORG $+3
$SG20625 DB	'Custom Sync Time', 00H
	ORG $+3
$SG20661 DB	'Select Camera', 00H
	ORG $+2
$SG20662 DB	'Current Settings', 00H
	ORG $+3
$SG20663 DB	'TraqDash USB Port', 00H
	ORG $+2
$SG20664 DB	'%s', 00H
	ORG $+1
$SG20666 DB	'No Camera Enabled', 00H
	ORG $+2
$SG20669 DB	'%u.%usec', 00H
	ORG $+3
$SG20670 DB	'Custom Sync Time', 00H
	ORG $+3
$SG20671 DB	'Default Sync Time', 00H
	ORG $+2
$SG20736 DB	'Settings Warning', 00H
	ORG $+3
$SG20737 DB	'Invalid tachometer configuration.', 00H
	ORG $+2
$SG20738 DB	'Would you like to go back or', 00H
	ORG $+3
$SG20739 DB	'have us auto-fix the data?', 00H
	ORG $+1
$SG20740 DB	'Go Back', 00H
$SG20741 DB	'Auto-Fix', 00H
	ORG $+3
$SG20743 DB	'Settings Warning', 00H
	ORG $+3
$SG20744 DB	'Invalid Gear Ratios.', 00H
	ORG $+3
$SG20745 DB	'Would you like to go back or', 00H
	ORG $+3
$SG20746 DB	'have us auto-fix the data?', 00H
	ORG $+1
$SG20747 DB	'Go Back', 00H
$SG20748 DB	'Auto-Fix', 00H
	ORG $+3
$SG20750 DB	'Settings Warning', 00H
	ORG $+3
$SG20751 DB	'Invalid vehicle weight.', 00H
$SG20752 DB	'Would you like to go back or', 00H
	ORG $+3
$SG20753 DB	'have us auto-fix the data?', 00H
	ORG $+1
$SG20754 DB	'Go Back', 00H
$SG20755 DB	'Auto-Fix', 00H
	ORG $+3
$SG20757 DB	'Settings Warning', 00H
	ORG $+3
$SG20758 DB	'You entered a diff ratio of 0.00.', 00H
	ORG $+2
$SG20759 DB	'This will disable gear calculations.', 00H
	ORG $+3
$SG20760 DB	'Go Back', 00H
$SG20761 DB	'Confirm', 00H
$SG20763 DB	'Settings Warning', 00H
	ORG $+3
$SG20764 DB	'GoPro HD and Replay XD cameras', 00H
	ORG $+1
$SG20765 DB	'require Sensor Unit firmware', 00H
	ORG $+3
$SG20766 DB	'version 3.40 or newer.', 00H
	ORG $+1
$SG20767 DB	'Go Back', 00H
$SG20768 DB	'OK', 00H
	ORG $+1
$SG20770 DB	'Settings Warning', 00H
	ORG $+3
$SG20771 DB	'Cameras connected to a TraqData', 00H
$SG20772 DB	'USB module require Sensor Unit', 00H
	ORG $+1
$SG20773 DB	'firmware version 3.70 or newer.', 00H
$SG20774 DB	'Go Back', 00H
$SG20775 DB	'OK', 00H
	ORG $+1
$SG20777 DB	'Settings Warning', 00H
	ORG $+3
$SG20778 DB	'You have changed camera selection', 00H
	ORG $+2
$SG20779 DB	'which requires a power cycle.', 00H
	ORG $+2
$SG20780 DB	'Would you like to power down now?', 00H
	ORG $+2
$SG20781 DB	'YES', 00H
$SG20782 DB	'NO', 00H
	ORG $+1
$SG20784 DB	'Settings Warning', 00H
	ORG $+3
$SG20785 DB	'The camera you had selected', 00H
$SG20786 DB	'is no longer supported. Your', 00H
	ORG $+3
$SG20787 DB	'selection has been disabled.', 00H
	ORG $+3
$SG20788 DB	'OK', 00H
	ORG $+1
$SG20811 DB	'Disabled', 00H
	ORG $+3
$SG20813 DB	'%0.1f', 0aH, '%s', 00H
	ORG $+3
$SG20829 DB	'Disabled', 00H
	ORG $+3
$SG20841 DB	'Camera', 00H
	ORG $+1
$SG20842 DB	'Interface', 00H
	ORG $+2
$SG20870 DB	'0', 00H
	ORG $+2
$SG20871 DB	'1', 00H
	ORG $+2
$SG20872 DB	'2', 00H
	ORG $+2
$SG20873 DB	'3', 00H
	ORG $+2
$SG20874 DB	'4', 00H
	ORG $+2
$SG20875 DB	'5', 00H
	ORG $+2
$SG20876 DB	'6', 00H
	ORG $+2
$SG20877 DB	'7', 00H
	ORG $+2
$SG20878 DB	'8', 00H
	ORG $+2
$SG20879 DB	'9', 00H
	ORG $+2
_Digits	DD	FLAT:$SG20870
	DD	FLAT:$SG20871
	DD	FLAT:$SG20872
	DD	FLAT:$SG20873
	DD	FLAT:$SG20874
	DD	FLAT:$SG20875
	DD	FLAT:$SG20876
	DD	FLAT:$SG20877
	DD	FLAT:$SG20878
	DD	FLAT:$SG20879
	DD	00H
$SG20911 DB	'Sync Time', 00H
	ORG $+2
$SG20912 DB	'seconds', 00H
$SG20913 DB	'.', 00H
_DATA	ENDS
PUBLIC	_Display_VehicleSettingMainScreen
EXTRN	_ResetNewScreen:PROC
EXTRN	_hScreenTimer:DWORD
EXTRN	_WM_CreateTimer:PROC
EXTRN	_bmCamera:BYTE
EXTRN	_bmWeight:BYTE
EXTRN	_bmInputs:BYTE
EXTRN	_bmGearRatio:BYTE
EXTRN	_bmCarMetricsButton:BYTE
EXTRN	_BUTTON_SetBitmap:PROC
EXTRN	_bmTach:BYTE
EXTRN	_BUTTON_CreateEx:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindow:PROC
EXTRN	_SetScreenType:PROC
EXTRN	_screen_scrolling:DWORD
EXTRN	_WM_DeleteWindow:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\vehiclesettingsscreens.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _Display_VehicleSettingMainScreen
_TEXT	SEGMENT
_hButton$ = -8						; size = 4
_hPrev$ = 8						; size = 4
_Display_VehicleSettingMainScreen PROC			; COMDAT
; Line 322
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 325
	cmp	DWORD PTR _hPrev$[ebp], 0
	je	SHORT $LN2@Display_Ve
; Line 326
	mov	eax, DWORD PTR _hPrev$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@Display_Ve:
; Line 328
	mov	DWORD PTR _screen_scrolling, 2
; Line 333
	push	8
	call	_SetScreenType
	add	esp, 4
; Line 335
	push	0
	push	OFFSET _VehicleSettingMainScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hVehicleSettingMainScreen, eax
	cmp	DWORD PTR _hVehicleSettingMainScreen, 0
	jg	SHORT $LN1@Display_Ve
; Line 336
	call	_SystemError
$LN1@Display_Ve:
; Line 338
	push	2049					; 00000801H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	38					; 00000026H
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 339
	push	OFFSET _bmTach
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 341
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	38					; 00000026H
	push	177					; 000000b1H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 342
	push	OFFSET _bmCarMetricsButton
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 344
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	38					; 00000026H
	push	324					; 00000144H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 345
	push	OFFSET _bmGearRatio
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 347
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	156					; 0000009cH
	push	30					; 0000001eH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 348
	push	OFFSET _bmInputs
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 350
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	156					; 0000009cH
	push	177					; 000000b1H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 351
	push	OFFSET _bmWeight
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 353
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	push	115					; 00000073H
	push	127					; 0000007fH
	push	156					; 0000009cH
	push	324					; 00000144H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hButton$[ebp], eax
; Line 354
	push	OFFSET _bmCamera
	push	0
	mov	eax, DWORD PTR _hButton$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 356
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 357
	call	_ResetNewScreen
; Line 358
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_Display_VehicleSettingMainScreen ENDP
_TEXT	ENDS
EXTRN	_WM_DefaultProc:PROC
EXTRN	_DisplayNewScreenList:PROC
EXTRN	_WM_GetId:PROC
EXTRN	_DrawSignalStrength:PROC
EXTRN	_bmleftarrow:BYTE
EXTRN	_bmVehicleSettingsText:BYTE
EXTRN	_GUI_DrawBitmap:PROC
EXTRN	_bmBackground:BYTE
EXTRN	_WM_InvalidateRect:PROC
EXTRN	_BannerRect:QWORD
EXTRN	_WM_RestartTimer:PROC
_BSS	SEGMENT
_clickedOnVSMScreen DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _VehicleSettingMainScreenCallback
_TEXT	SEGMENT
tv86 = -220						; size = 4
tv84 = -220						; size = 4
tv64 = -220						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_VehicleSettingMainScreenCallback PROC			; COMDAT
; Line 360
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 363
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN12@VehicleSet
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN11@VehicleSet
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN14@VehicleSet
	jmp	$LN1@VehicleSet
$LN14@VehicleSet:
; Line 366
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN13@VehicleSet
; Line 368
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 369
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	call	_WM_InvalidateRect
	add	esp, 8
$LN13@VehicleSet:
; Line 371
	jmp	$LN17@VehicleSet
$LN12@VehicleSet:
; Line 374
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 375
	push	1
	push	60					; 0000003cH
	push	OFFSET _bmVehicleSettingsText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 376
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 377
	call	_DrawSignalStrength
; Line 378
	jmp	$LN17@VehicleSet
$LN11@VehicleSet:
; Line 381
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 382
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 383
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv84[ebp], eax
	cmp	DWORD PTR tv84[ebp], 1
	je	SHORT $LN8@VehicleSet
	cmp	DWORD PTR tv84[ebp], 2
	je	SHORT $LN7@VehicleSet
	jmp	SHORT $LN9@VehicleSet
$LN8@VehicleSet:
; Line 386
	mov	DWORD PTR _clickedOnVSMScreen, 1
; Line 387
	jmp	SHORT $LN9@VehicleSet
$LN7@VehicleSet:
; Line 390
	cmp	DWORD PTR _clickedOnVSMScreen, 0
	je	SHORT $LN9@VehicleSet
; Line 391
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	cmp	DWORD PTR tv86[ebp], 2049		; 00000801H
	jl	SHORT $LN9@VehicleSet
	cmp	DWORD PTR tv86[ebp], 2054		; 00000806H
	jle	SHORT $LN3@VehicleSet
	jmp	SHORT $LN9@VehicleSet
$LN3@VehicleSet:
; Line 399
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	sub	ecx, 2049				; 00000801H
	push	ecx
	push	7
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
$LN9@VehicleSet:
; Line 406
	jmp	SHORT $LN17@VehicleSet
$LN1@VehicleSet:
; Line 409
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN17@VehicleSet:
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_VehicleSettingMainScreenCallback ENDP
_TEXT	ENDS
PUBLIC	_GetVehicleSettingMainWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetVehicleSettingMainWindowHandle
_TEXT	SEGMENT
_GetVehicleSettingMainWindowHandle PROC			; COMDAT
; Line 414
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 415
	mov	eax, DWORD PTR _hVehicleSettingMainScreen
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetVehicleSettingMainWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetVehicleSettingMainWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetVehicleSettingMainWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetVehicleSettingMainWindowHandle PROC			; COMDAT
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 420
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hVehicleSettingMainScreen, eax
; Line 421
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetVehicleSettingMainWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_GetVehicleSettingsWindowHandle
_BSS	SEGMENT
_hVehicleSettingsScreens DD 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _GetVehicleSettingsWindowHandle
_TEXT	SEGMENT
_GetVehicleSettingsWindowHandle PROC			; COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 431
	mov	eax, DWORD PTR _hVehicleSettingsScreens
; Line 432
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetVehicleSettingsWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_SetVehicleSettingsWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetVehicleSettingsWindowHandle
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_SetVehicleSettingsWindowHandle PROC			; COMDAT
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 436
	mov	eax, DWORD PTR _hWin$[ebp]
	mov	DWORD PTR _hVehicleSettingsScreens, eax
; Line 437
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetVehicleSettingsWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_TestCameras
PUBLIC	_CreateCameraSelection
PUBLIC	_CreateTraqdashCamScreen
PUBLIC	_UpdateAll
PUBLIC	_CreateAeroGripScreen
PUBLIC	_UpdateRPM
PUBLIC	_UpdateTime
PUBLIC	__real@00000000
PUBLIC	_SetNumCylsButtonText
PUBLIC	_SetYellowButtonText
PUBLIC	_SetRedlineButtonText
PUBLIC	__real@400d1889
PUBLIC	_VehicleSettingsIgnoreNextKeyRelease
PUBLIC	_VehicleSettingsScreensCallback
EXTRN	_DataValues:BYTE
EXTRN	_BUTTON_SetBitmapEx:PROC
EXTRN	_bmGreenCheck:BYTE
EXTRN	_pressingbutton_semaphore:DWORD
EXTRN	_IndexToCylinders:PROC
EXTRN	_CylindersToIndex:PROC
EXTRN	_SLIDER_SetValue:PROC
EXTRN	_SLIDER_GetValue:PROC
EXTRN	_vehicleData:BYTE
EXTRN	_sysData:BYTE
EXTRN	_LISTWHEEL_SetSel:PROC
EXTRN	_LISTWHEEL_GetPos:PROC
EXTRN	_abs:PROC
EXTRN	_LISTWHEEL_GetVelocity:PROC
EXTRN	_GetLastScreen:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font32_ASCII:BYTE
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GetScreenType:PROC
EXTRN	_SetUserMode:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
_BSS	SEGMENT
_clickedOnVSScreen DD 01H DUP (?)
_yellowFirstTime DB 01H DUP (?)
	ALIGN	4

_redFirstTime DB 01H DUP (?)
	ALIGN	4

_hWeightWheel3 DD 01H DUP (?)
_hWeightWheel2 DD 01H DUP (?)
_hWeightWheel1 DD 01H DUP (?)
_BSS	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT __real@400d1889
CONST	SEGMENT
__real@400d1889 DD 0400d1889r			; 2.20462
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _VehicleSettingsScreensCallback
_TEXT	SEGMENT
tv251 = -304						; size = 4
tv244 = -304						; size = 4
tv190 = -304						; size = 4
tv129 = -304						; size = 4
tv90 = -304						; size = 4
tv64 = -304						; size = 4
_temp$20194 = -104					; size = 4
_temp$20188 = -92					; size = 4
_temp$20182 = -80					; size = 4
_oldPos$ = -68						; size = 4
_newPos$ = -56						; size = 4
_temp$ = -44						; size = 4
_Sel$ = -32						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_VehicleSettingsScreensCallback PROC			; COMDAT
; Line 441
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 447
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	jg	SHORT $LN87@VehicleSet@2
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	$LN71@VehicleSet@2
	cmp	DWORD PTR tv64[ebp], 1
	je	$LN74@VehicleSet@2
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN73@VehicleSet@2
	jmp	$LN1@VehicleSet@2
$LN87@VehicleSet@2:
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN80@VehicleSet@2
	jmp	$LN1@VehicleSet@2
$LN80@VehicleSet@2:
; Line 450
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN79@VehicleSet@2
; Line 452
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 453
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN75@VehicleSet@2
$LN79@VehicleSet@2:
; Line 455
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hCameraDelayTimer
	jne	SHORT $LN75@VehicleSet@2
; Line 457
	cmp	DWORD PTR _testCamera, 0
	je	SHORT $LN76@VehicleSet@2
; Line 458
	push	16					; 00000010H
	call	_SetUserMode
	add	esp, 4
; Line 459
	jmp	SHORT $LN75@VehicleSet@2
$LN76@VehicleSet@2:
; Line 460
	push	1
	call	_SetUserMode
	add	esp, 4
$LN75@VehicleSet@2:
; Line 462
	jmp	$LN81@VehicleSet@2
$LN74@VehicleSet@2:
; Line 466
	call	_VehicleSettingsIgnoreNextKeyRelease
; Line 467
	jmp	$LN81@VehicleSet@2
$LN73@VehicleSet@2:
; Line 470
	call	_GetScreenType
	cmp	eax, 7
	jne	SHORT $LN72@VehicleSet@2
; Line 472
	call	_GUI_Clear
; Line 473
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 474
	push	OFFSET _GUI_Font32_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 477
	mov	esi, esp
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	push	7
	call	_GetLastScreen
	add	esp, 4
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _VehicleSettingsScreenList[eax+8]
	call	ecx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 478
	call	_DrawSignalStrength
$LN72@VehicleSet@2:
; Line 480
	jmp	$LN81@VehicleSet@2
$LN71@VehicleSet@2:
; Line 483
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 484
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 485
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv90[ebp], eax
	mov	ecx, DWORD PTR tv90[ebp]
	sub	ecx, 1
	mov	DWORD PTR tv90[ebp], ecx
	cmp	DWORD PTR tv90[ebp], 4
	ja	$LN69@VehicleSet@2
	mov	edx, DWORD PTR tv90[ebp]
	jmp	DWORD PTR $LN89@VehicleSet@2[edx*4]
$LN68@VehicleSet@2:
; Line 488
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetVelocity
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 1
	jg	$LN65@VehicleSet@2
; Line 490
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv129[ebp], eax
	cmp	DWORD PTR tv129[ebp], 609		; 00000261H
	je	SHORT $LN64@VehicleSet@2
	cmp	DWORD PTR tv129[ebp], 610		; 00000262H
	je	$LN61@VehicleSet@2
	cmp	DWORD PTR tv129[ebp], 611		; 00000263H
	je	$LN58@VehicleSet@2
	jmp	$LN65@VehicleSet@2
$LN64@VehicleSet@2:
; Line 496
	mov	eax, DWORD PTR _hWeightWheel1
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	esi, DWORD PTR _Sel$[ebp]
	imul	esi, 1000				; 000003e8H
	mov	ecx, DWORD PTR _hWeightWheel2
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 100				; 00000064H
	add	esi, eax
	mov	edx, DWORD PTR _hWeightWheel3
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 10					; 0000000aH
	add	esi, eax
	mov	DWORD PTR _temp$20182[ebp], esi
; Line 497
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 498
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN63@VehicleSet@2
; Line 499
	fild	DWORD PTR _temp$20182[ebp]
	fmul	DWORD PTR __real@400d1889
	call	__ftol2_sse
	mov	DWORD PTR _vehicleData+104, eax
	jmp	SHORT $LN62@VehicleSet@2
$LN63@VehicleSet@2:
; Line 500
	mov	eax, DWORD PTR _temp$20182[ebp]
	mov	DWORD PTR _vehicleData+104, eax
$LN62@VehicleSet@2:
; Line 502
	jmp	$LN65@VehicleSet@2
$LN61@VehicleSet@2:
; Line 508
	mov	eax, DWORD PTR _hWeightWheel2
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	ecx, DWORD PTR _hWeightWheel3
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	esi, eax
	imul	esi, 10					; 0000000aH
	mov	edi, DWORD PTR _Sel$[ebp]
	imul	edi, 100				; 00000064H
	mov	edx, DWORD PTR _hWeightWheel1
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 1000				; 000003e8H
	add	eax, edi
	add	eax, esi
	mov	DWORD PTR _temp$20188[ebp], eax
; Line 509
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 510
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN60@VehicleSet@2
; Line 511
	fild	DWORD PTR _temp$20188[ebp]
	fmul	DWORD PTR __real@400d1889
	call	__ftol2_sse
	mov	DWORD PTR _vehicleData+104, eax
	jmp	SHORT $LN59@VehicleSet@2
$LN60@VehicleSet@2:
; Line 512
	mov	eax, DWORD PTR _temp$20188[ebp]
	mov	DWORD PTR _vehicleData+104, eax
$LN59@VehicleSet@2:
; Line 514
	jmp	$LN65@VehicleSet@2
$LN58@VehicleSet@2:
; Line 520
	mov	eax, DWORD PTR _hWeightWheel3
	push	eax
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _Sel$[ebp], eax
	mov	esi, DWORD PTR _Sel$[ebp]
	imul	esi, 10					; 0000000aH
	mov	ecx, DWORD PTR _hWeightWheel2
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	edi, eax
	imul	edi, 100				; 00000064H
	mov	edx, DWORD PTR _hWeightWheel1
	push	edx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	imul	eax, 1000				; 000003e8H
	add	eax, edi
	add	eax, esi
	mov	DWORD PTR _temp$20194[ebp], eax
; Line 521
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 522
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN57@VehicleSet@2
; Line 523
	fild	DWORD PTR _temp$20194[ebp]
	fmul	DWORD PTR __real@400d1889
	call	__ftol2_sse
	mov	DWORD PTR _vehicleData+104, eax
	jmp	SHORT $LN56@VehicleSet@2
$LN57@VehicleSet@2:
; Line 524
	mov	eax, DWORD PTR _temp$20194[ebp]
	mov	DWORD PTR _vehicleData+104, eax
$LN56@VehicleSet@2:
$LN65@VehicleSet@2:
; Line 529
	jmp	$LN69@VehicleSet@2
$LN55@VehicleSet@2:
; Line 532
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv190[ebp], eax
	cmp	DWORD PTR tv190[ebp], 304		; 00000130H
	je	SHORT $LN52@VehicleSet@2
	cmp	DWORD PTR tv190[ebp], 305		; 00000131H
	je	$LN43@VehicleSet@2
	cmp	DWORD PTR tv190[ebp], 306		; 00000132H
	je	$LN32@VehicleSet@2
	jmp	$LN53@VehicleSet@2
$LN52@VehicleSet@2:
; Line 535
	mov	eax, DWORD PTR _vehicleData+36
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _oldPos$[ebp], eax
; Line 536
	mov	DWORD PTR _newPos$[ebp], -1
; Line 537
	mov	eax, DWORD PTR _hRedlineSlider
	push	eax
	call	_SLIDER_GetValue
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _temp$[ebp], eax
	jns	SHORT $LN51@VehicleSet@2
; Line 539
	mov	DWORD PTR _temp$[ebp], 0
; Line 540
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
; Line 542
	jmp	SHORT $LN45@VehicleSet@2
$LN51@VehicleSet@2:
; Line 544
	mov	eax, DWORD PTR _temp$[ebp]
	imul	eax, 500				; 000001f4H
	mov	DWORD PTR _temp$[ebp], eax
; Line 545
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+32
	jge	SHORT $LN49@VehicleSet@2
; Line 547
	mov	eax, DWORD PTR _vehicleData+32
	mov	DWORD PTR _temp$[ebp], eax
; Line 548
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _newPos$[ebp], eax
	jmp	SHORT $LN47@VehicleSet@2
$LN49@VehicleSet@2:
; Line 550
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+20
	jle	SHORT $LN47@VehicleSet@2
; Line 552
	mov	eax, DWORD PTR _vehicleData+36
	mov	DWORD PTR _temp$[ebp], eax
; Line 553
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
$LN47@VehicleSet@2:
; Line 555
	movzx	eax, BYTE PTR _redFirstTime
	test	eax, eax
	jne	SHORT $LN46@VehicleSet@2
; Line 557
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _vehicleData+36, eax
; Line 558
	call	_SetRedlineButtonText
	jmp	SHORT $LN45@VehicleSet@2
$LN46@VehicleSet@2:
; Line 560
	mov	BYTE PTR _redFirstTime, 0
$LN45@VehicleSet@2:
; Line 563
	cmp	DWORD PTR _newPos$[ebp], -1
	je	SHORT $LN44@VehicleSet@2
; Line 564
	mov	eax, DWORD PTR _newPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRedlineSlider
	push	ecx
	call	_SLIDER_SetValue
	add	esp, 8
$LN44@VehicleSet@2:
; Line 565
	jmp	$LN53@VehicleSet@2
$LN43@VehicleSet@2:
; Line 567
	mov	eax, DWORD PTR _vehicleData+32
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _oldPos$[ebp], eax
; Line 568
	mov	DWORD PTR _newPos$[ebp], -1
; Line 569
	mov	eax, DWORD PTR _hYellowSlider
	push	eax
	call	_SLIDER_GetValue
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _temp$[ebp], eax
	jns	SHORT $LN42@VehicleSet@2
; Line 571
	mov	DWORD PTR _temp$[ebp], 0
; Line 572
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
; Line 574
	jmp	$LN34@VehicleSet@2
$LN42@VehicleSet@2:
; Line 576
	mov	eax, DWORD PTR _temp$[ebp]
	imul	eax, 500				; 000001f4H
	mov	DWORD PTR _temp$[ebp], eax
; Line 577
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+36
	jle	SHORT $LN40@VehicleSet@2
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+20
	jle	SHORT $LN40@VehicleSet@2
; Line 579
	mov	eax, DWORD PTR _vehicleData+32
	mov	DWORD PTR _temp$[ebp], eax
; Line 580
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
	jmp	SHORT $LN36@VehicleSet@2
$LN40@VehicleSet@2:
; Line 582
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+36
	jle	SHORT $LN38@VehicleSet@2
; Line 584
	mov	eax, DWORD PTR _vehicleData+36
	mov	DWORD PTR _temp$[ebp], eax
; Line 585
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _newPos$[ebp], eax
	jmp	SHORT $LN36@VehicleSet@2
$LN38@VehicleSet@2:
; Line 587
	mov	eax, DWORD PTR _temp$[ebp]
	cmp	eax, DWORD PTR _vehicleData+24
	jge	SHORT $LN36@VehicleSet@2
; Line 589
	mov	eax, DWORD PTR _vehicleData+24
	mov	DWORD PTR _temp$[ebp], eax
; Line 590
	mov	eax, DWORD PTR _temp$[ebp]
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _newPos$[ebp], eax
$LN36@VehicleSet@2:
; Line 592
	movzx	eax, BYTE PTR _yellowFirstTime
	test	eax, eax
	jne	SHORT $LN35@VehicleSet@2
; Line 594
	mov	eax, DWORD PTR _temp$[ebp]
	mov	DWORD PTR _vehicleData+32, eax
; Line 595
	call	_SetYellowButtonText
	jmp	SHORT $LN34@VehicleSet@2
$LN35@VehicleSet@2:
; Line 597
	mov	BYTE PTR _yellowFirstTime, 0
$LN34@VehicleSet@2:
; Line 599
	cmp	DWORD PTR _newPos$[ebp], -1
	je	SHORT $LN33@VehicleSet@2
; Line 600
	mov	eax, DWORD PTR _newPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hYellowSlider
	push	ecx
	call	_SLIDER_SetValue
	add	esp, 8
$LN33@VehicleSet@2:
; Line 601
	jmp	$LN53@VehicleSet@2
$LN32@VehicleSet@2:
; Line 603
	movzx	eax, BYTE PTR _vehicleData+13
	push	eax
	call	_CylindersToIndex
	add	esp, 4
	movzx	ecx, al
	add	ecx, 1
	mov	DWORD PTR _oldPos$[ebp], ecx
; Line 604
	mov	DWORD PTR _newPos$[ebp], -1
; Line 605
	mov	eax, DWORD PTR _hCylindersSlider
	push	eax
	call	_SLIDER_GetValue
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _temp$[ebp], eax
	jns	SHORT $LN31@VehicleSet@2
; Line 607
	mov	DWORD PTR _temp$[ebp], 0
; Line 608
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
; Line 610
	jmp	SHORT $LN28@VehicleSet@2
$LN31@VehicleSet@2:
; Line 612
	cmp	DWORD PTR _temp$[ebp], 10		; 0000000aH
	jle	SHORT $LN29@VehicleSet@2
; Line 613
	mov	eax, DWORD PTR _oldPos$[ebp]
	mov	DWORD PTR _newPos$[ebp], eax
; Line 614
	jmp	SHORT $LN28@VehicleSet@2
$LN29@VehicleSet@2:
; Line 616
	movzx	eax, BYTE PTR _temp$[ebp]
	push	eax
	call	_IndexToCylinders
	add	esp, 4
	mov	BYTE PTR _vehicleData+13, al
; Line 617
	call	_SetNumCylsButtonText
$LN28@VehicleSet@2:
; Line 620
	cmp	DWORD PTR _newPos$[ebp], 0
	jle	SHORT $LN27@VehicleSet@2
; Line 621
	mov	eax, DWORD PTR _newPos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hCylindersSlider
	push	ecx
	call	_SLIDER_SetValue
	add	esp, 8
$LN27@VehicleSet@2:
$LN53@VehicleSet@2:
; Line 624
	jmp	$LN69@VehicleSet@2
$LN26@VehicleSet@2:
; Line 627
	mov	DWORD PTR _clickedOnVSScreen, 1
; Line 628
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv244[ebp], eax
	cmp	DWORD PTR tv244[ebp], 611		; 00000263H
	jg	SHORT $LN85@VehicleSet@2
	cmp	DWORD PTR tv244[ebp], 608		; 00000260H
	jge	SHORT $LN23@VehicleSet@2
	cmp	DWORD PTR tv244[ebp], 304		; 00000130H
	jl	SHORT $LN21@VehicleSet@2
	cmp	DWORD PTR tv244[ebp], 306		; 00000132H
	jle	SHORT $LN22@VehicleSet@2
	jmp	SHORT $LN21@VehicleSet@2
$LN85@VehicleSet@2:
	jmp	SHORT $LN21@VehicleSet@2
$LN23@VehicleSet@2:
; Line 634
	mov	DWORD PTR _pressingbutton_semaphore, 1
; Line 635
	jmp	SHORT $LN24@VehicleSet@2
$LN22@VehicleSet@2:
; Line 640
	mov	DWORD PTR _screen_scrolling, 0
; Line 641
	jmp	SHORT $LN24@VehicleSet@2
$LN21@VehicleSet@2:
; Line 644
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN24@VehicleSet@2:
; Line 647
	jmp	$LN69@VehicleSet@2
$LN20@VehicleSet@2:
; Line 650
	mov	DWORD PTR _pressingbutton_semaphore, 0
; Line 651
	cmp	DWORD PTR _clickedOnVSScreen, 0
	jne	SHORT $LN19@VehicleSet@2
; Line 652
	jmp	$LN69@VehicleSet@2
$LN19@VehicleSet@2:
; Line 654
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv251[ebp], eax
	cmp	DWORD PTR tv251[ebp], 2053		; 00000805H
	jg	SHORT $LN86@VehicleSet@2
	cmp	DWORD PTR tv251[ebp], 2050		; 00000802H
	jge	SHORT $LN15@VehicleSet@2
	cmp	DWORD PTR tv251[ebp], 304		; 00000130H
	jl	$LN17@VehicleSet@2
	cmp	DWORD PTR tv251[ebp], 306		; 00000132H
	jle	$LN10@VehicleSet@2
	jmp	$LN17@VehicleSet@2
$LN86@VehicleSet@2:
	mov	ecx, DWORD PTR tv251[ebp]
	sub	ecx, 2054				; 00000806H
	mov	DWORD PTR tv251[ebp], ecx
	cmp	DWORD PTR tv251[ebp], 24		; 00000018H
	ja	$LN17@VehicleSet@2
	mov	edx, DWORD PTR tv251[ebp]
	movzx	eax, BYTE PTR $LN88@VehicleSet@2[edx]
	jmp	DWORD PTR $LN90@VehicleSet@2[eax*4]
; Line 657
	jmp	$LN17@VehicleSet@2
$LN15@VehicleSet@2:
; Line 663
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	_GetScreenID
	add	esp, 4
	push	eax
	push	14					; 0000000eH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 664
	jmp	$LN17@VehicleSet@2
$LN14@VehicleSet@2:
; Line 671
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	_GetScreenID
	add	esp, 4
	push	eax
	push	9
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 672
	jmp	$LN17@VehicleSet@2
$LN13@VehicleSet@2:
; Line 680
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	mov	ecx, DWORD PTR _Id$[ebp]
	push	ecx
	call	_GetScreenID
	add	esp, 4
	push	eax
	push	10					; 0000000aH
	call	_DisplayNewScreenList
	add	esp, 12					; 0000000cH
; Line 681
	jmp	$LN17@VehicleSet@2
$LN12@VehicleSet@2:
; Line 684
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hShowSpeedCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
; Line 685
	push	0
	push	0
	mov	eax, DWORD PTR _hShowRPMCheck
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 686
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 687
	jmp	$LN17@VehicleSet@2
$LN11@VehicleSet@2:
; Line 690
	push	15					; 0000000fH
	push	15					; 0000000fH
	push	OFFSET _bmGreenCheck
	push	0
	mov	eax, DWORD PTR _hShowRPMCheck
	push	eax
	call	_BUTTON_SetBitmapEx
	add	esp, 20					; 00000014H
; Line 691
	push	0
	push	0
	mov	eax, DWORD PTR _hShowSpeedCheck
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 692
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 693
	jmp	$LN17@VehicleSet@2
$LN10@VehicleSet@2:
; Line 698
	mov	DWORD PTR _screen_scrolling, 1
; Line 699
	jmp	$LN17@VehicleSet@2
$LN9@VehicleSet@2:
; Line 702
	fldz
	fstp	DWORD PTR _sysData+196
; Line 703
	call	_UpdateTime
; Line 704
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 705
	jmp	$LN17@VehicleSet@2
$LN8@VehicleSet@2:
; Line 708
	fldz
	fstp	DWORD PTR _sysData+192
; Line 709
	call	_UpdateTime
; Line 710
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 711
	jmp	$LN17@VehicleSet@2
$LN7@VehicleSet@2:
; Line 714
	mov	DWORD PTR _sysData+188, 0
; Line 715
	mov	DWORD PTR _DataValues+544, 0
; Line 716
	call	_UpdateRPM
; Line 717
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 718
	jmp	$LN17@VehicleSet@2
$LN6@VehicleSet@2:
; Line 721
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_CreateAeroGripScreen
	add	esp, 4
; Line 722
	jmp	SHORT $LN17@VehicleSet@2
$LN5@VehicleSet@2:
; Line 725
	fldz
	fstp	DWORD PTR _sysData+196
; Line 726
	fldz
	fstp	DWORD PTR _sysData+192
; Line 727
	mov	DWORD PTR _sysData+188, 0
; Line 728
	call	_UpdateAll
; Line 729
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 730
	jmp	SHORT $LN17@VehicleSet@2
$LN4@VehicleSet@2:
; Line 733
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_CreateTraqdashCamScreen
	add	esp, 4
; Line 734
	jmp	SHORT $LN17@VehicleSet@2
$LN3@VehicleSet@2:
; Line 737
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_CreateCameraSelection
	add	esp, 4
; Line 738
	jmp	SHORT $LN17@VehicleSet@2
$LN2@VehicleSet@2:
; Line 741
	xor	eax, eax
	cmp	DWORD PTR _testCamera, 0
	sete	al
	mov	DWORD PTR _testCamera, eax
	mov	ecx, DWORD PTR _testCamera
	push	ecx
	call	_TestCameras
	add	esp, 4
; Line 742
	mov	eax, DWORD PTR _hVehicleSettingsScreens
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN17@VehicleSet@2:
$LN69@VehicleSet@2:
; Line 747
	jmp	SHORT $LN81@VehicleSet@2
$LN1@VehicleSet@2:
; Line 750
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN81@VehicleSet@2:
; Line 752
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN89@VehicleSet@2:
	DD	$LN26@VehicleSet@2
	DD	$LN20@VehicleSet@2
	DD	$LN69@VehicleSet@2
	DD	$LN68@VehicleSet@2
	DD	$LN55@VehicleSet@2
$LN90@VehicleSet@2:
	DD	$LN14@VehicleSet@2
	DD	$LN13@VehicleSet@2
	DD	$LN11@VehicleSet@2
	DD	$LN12@VehicleSet@2
	DD	$LN9@VehicleSet@2
	DD	$LN8@VehicleSet@2
	DD	$LN7@VehicleSet@2
	DD	$LN6@VehicleSet@2
	DD	$LN5@VehicleSet@2
	DD	$LN4@VehicleSet@2
	DD	$LN3@VehicleSet@2
	DD	$LN2@VehicleSet@2
	DD	$LN17@VehicleSet@2
$LN88@VehicleSet@2:
	DB	0
	DB	0
	DB	0
	DB	12					; 0000000cH
	DB	0
	DB	0
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	1
	DB	2
	DB	3
	DB	12					; 0000000cH
	DB	12					; 0000000cH
	DB	4
	DB	5
	DB	6
	DB	7
	DB	8
	DB	9
	DB	12					; 0000000cH
	DB	10					; 0000000aH
	DB	11					; 0000000bH
_VehicleSettingsScreensCallback ENDP
_TEXT	ENDS
PUBLIC	_GetTDCam
PUBLIC	_GetSUCam
EXTRN	_notifyGPSSimChange:PROC
EXTRN	_gpsSimulate:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TestCameras
_TEXT	SEGMENT
_turnOn$ = 8						; size = 4
_TestCameras PROC					; COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 756
	movzx	eax, BYTE PTR _gpsSimulate
	cmp	DWORD PTR _turnOn$[ebp], eax
	je	SHORT $LN3@TestCamera
	call	_GetSUCam
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@TestCamera
	mov	eax, OFFSET _GetTDCam
	test	eax, eax
	je	SHORT $LN3@TestCamera
; Line 757
	mov	al, BYTE PTR _turnOn$[ebp]
	mov	BYTE PTR _gpsSimulate, al
	movzx	ecx, BYTE PTR _gpsSimulate
	push	ecx
	call	_notifyGPSSimChange
	add	esp, 4
$LN3@TestCamera:
; Line 762
	cmp	DWORD PTR _turnOn$[ebp], 0
	je	SHORT $LN2@TestCamera
; Line 763
	push	16					; 00000010H
	call	_SetUserMode
	add	esp, 4
; Line 764
	jmp	SHORT $LN4@TestCamera
$LN2@TestCamera:
; Line 765
	push	1
	call	_SetUserMode
	add	esp, 4
$LN4@TestCamera:
; Line 766
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TestCameras ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetScreenID
_TEXT	SEGMENT
tv64 = -196						; size = 4
_Id$ = 8						; size = 4
_GetScreenID PROC					; COMDAT
; Line 769
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 770
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 2050				; 00000802H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	ja	SHORT $LN1@GetScreenI
	mov	edx, DWORD PTR tv64[ebp]
	jmp	DWORD PTR $LN21@GetScreenI[edx*4]
$LN16@GetScreenI:
; Line 772
	xor	eax, eax
	jmp	SHORT $LN19@GetScreenI
$LN15@GetScreenI:
; Line 773
	mov	eax, 1
	jmp	SHORT $LN19@GetScreenI
$LN14@GetScreenI:
; Line 774
	mov	eax, 2
	jmp	SHORT $LN19@GetScreenI
$LN13@GetScreenI:
; Line 775
	mov	eax, 3
	jmp	SHORT $LN19@GetScreenI
$LN12@GetScreenI:
; Line 776
	xor	eax, eax
	jmp	SHORT $LN19@GetScreenI
$LN11@GetScreenI:
; Line 777
	mov	eax, 1
	jmp	SHORT $LN19@GetScreenI
$LN10@GetScreenI:
; Line 778
	mov	eax, 2
	jmp	SHORT $LN19@GetScreenI
$LN9@GetScreenI:
; Line 779
	mov	eax, 3
	jmp	SHORT $LN19@GetScreenI
$LN8@GetScreenI:
; Line 780
	mov	eax, 4
	jmp	SHORT $LN19@GetScreenI
$LN7@GetScreenI:
; Line 781
	xor	eax, eax
	jmp	SHORT $LN19@GetScreenI
$LN6@GetScreenI:
; Line 782
	mov	eax, 1
	jmp	SHORT $LN19@GetScreenI
$LN5@GetScreenI:
; Line 783
	mov	eax, 2
	jmp	SHORT $LN19@GetScreenI
$LN4@GetScreenI:
; Line 784
	mov	eax, 3
	jmp	SHORT $LN19@GetScreenI
$LN3@GetScreenI:
; Line 785
	mov	eax, 4
	jmp	SHORT $LN19@GetScreenI
$LN2@GetScreenI:
; Line 786
	mov	eax, 5
	jmp	SHORT $LN19@GetScreenI
$LN1@GetScreenI:
; Line 787
	xor	eax, eax
$LN19@GetScreenI:
; Line 789
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@GetScreenI:
	DD	$LN16@GetScreenI
	DD	$LN15@GetScreenI
	DD	$LN14@GetScreenI
	DD	$LN13@GetScreenI
	DD	$LN12@GetScreenI
	DD	$LN11@GetScreenI
	DD	$LN10@GetScreenI
	DD	$LN1@GetScreenI
	DD	$LN9@GetScreenI
	DD	$LN8@GetScreenI
	DD	$LN7@GetScreenI
	DD	$LN6@GetScreenI
	DD	$LN5@GetScreenI
	DD	$LN4@GetScreenI
	DD	$LN3@GetScreenI
	DD	$LN2@GetScreenI
_GetScreenID ENDP
_TEXT	ENDS
PUBLIC	_ResetSliderParams
PUBLIC	__$ArrayPad$
EXTRN	_SLIDER_SetRange:PROC
EXTRN	_SLIDER_SetNumTicks:PROC
EXTRN	_SLIDER_CreateEx:PROC
EXTRN	_BUTTON_SetText:PROC
EXTRN	_sprintf:PROC
EXTRN	_BUTTON_SetTextColor:PROC
EXTRN	_bmSmallBlackButton:BYTE
EXTRN	_BUTTON_SetDefaultTextColor:PROC
EXTRN	_BUTTON_SetDefaultFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayTachSelection
_TEXT	SEGMENT
_hBtn$ = -40						; size = 4
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_DisplayTachSelection PROC				; COMDAT
; Line 793
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 797
	push	OFFSET _GUI_Font24B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 798
	push	0
	push	65280					; 0000ff00H
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 799
	push	1
	push	65280					; 0000ff00H
	call	_BUTTON_SetDefaultTextColor
	add	esp, 8
; Line 801
	push	2054					; 00000806H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	34					; 00000022H
	push	87					; 00000057H
	push	162					; 000000a2H
	push	375					; 00000177H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hYellowBtn, eax
; Line 802
	push	OFFSET _bmSmallBlackButton
	push	0
	mov	eax, DWORD PTR _hYellowBtn
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 804
	push	2055					; 00000807H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	34					; 00000022H
	push	87					; 00000057H
	push	107					; 0000006bH
	push	375					; 00000177H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hRedlineBtn, eax
; Line 805
	push	OFFSET _bmSmallBlackButton
	push	0
	mov	eax, DWORD PTR _hRedlineBtn
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 807
	push	0
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	34					; 00000022H
	push	87					; 00000057H
	push	52					; 00000034H
	push	175					; 000000afH
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hCurrentRPMBtn, eax
; Line 808
	push	OFFSET _bmSmallBlackButton
	push	0
	mov	eax, DWORD PTR _hCurrentRPMBtn
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 809
	push	65280					; 0000ff00H
	push	2
	mov	eax, DWORD PTR _hCurrentRPMBtn
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 811
	push	2056					; 00000808H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	34					; 00000022H
	push	87					; 00000057H
	push	217					; 000000d9H
	push	375					; 00000177H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hNumCylsBtn, eax
; Line 812
	push	OFFSET _bmSmallBlackButton
	push	0
	mov	eax, DWORD PTR _hNumCylsBtn
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 815
	push	2059					; 0000080bH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	34					; 00000022H
	push	87					; 00000057H
	push	52					; 00000034H
	push	375					; 00000177H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 816
	push	OFFSET _bmSmallBlackButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 818
	mov	eax, DWORD PTR _vehicleData+20
	push	eax
	push	OFFSET $SG20296
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 819
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBtn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 821
	mov	BYTE PTR _yellowFirstTime, 1
	mov	al, BYTE PTR _yellowFirstTime
	mov	BYTE PTR _redFirstTime, al
; Line 822
	push	304					; 00000130H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	32					; 00000020H
	push	316					; 0000013cH
	push	117					; 00000075H
	push	54					; 00000036H
	call	_SLIDER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hRedlineSlider, eax
; Line 823
	push	0
	mov	eax, DWORD PTR _hRedlineSlider
	push	eax
	call	_SLIDER_SetNumTicks
	add	esp, 8
; Line 824
	push	305					; 00000131H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	32					; 00000020H
	push	316					; 0000013cH
	push	172					; 000000acH
	push	54					; 00000036H
	call	_SLIDER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hYellowSlider, eax
; Line 825
	push	0
	mov	eax, DWORD PTR _hYellowSlider
	push	eax
	call	_SLIDER_SetNumTicks
	add	esp, 8
; Line 826
	push	306					; 00000132H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	32					; 00000020H
	push	316					; 0000013cH
	push	227					; 000000e3H
	push	54					; 00000036H
	call	_SLIDER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hCylindersSlider, eax
; Line 827
	push	0
	mov	eax, DWORD PTR _hCylindersSlider
	push	eax
	call	_SLIDER_SetNumTicks
	add	esp, 8
; Line 828
	push	12					; 0000000cH
	push	0
	mov	eax, DWORD PTR _hCylindersSlider
	push	eax
	call	_SLIDER_SetRange
	add	esp, 12					; 0000000cH
; Line 829
	movzx	eax, BYTE PTR _vehicleData+13
	push	eax
	call	_CylindersToIndex
	add	esp, 4
	movzx	ecx, al
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _hCylindersSlider
	push	edx
	call	_SLIDER_SetValue
	add	esp, 8
; Line 831
	call	_ResetSliderParams
; Line 832
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@DisplayTac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@DisplayTac:
	DD	1
	DD	$LN4@DisplayTac
$LN4@DisplayTac:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@DisplayTac
$LN3@DisplayTac:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_DisplayTachSelection ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetRedlineButtonText
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_SetRedlineButtonText PROC				; COMDAT
; Line 835
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 838
	mov	eax, DWORD PTR _vehicleData+36
	push	eax
	push	OFFSET $SG20300
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 839
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hRedlineBtn
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 840
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetRedline
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@SetRedline:
	DD	1
	DD	$LN4@SetRedline
$LN4@SetRedline:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@SetRedline
$LN3@SetRedline:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetRedlineButtonText ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetYellowButtonText
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_SetYellowButtonText PROC				; COMDAT
; Line 843
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 846
	mov	eax, DWORD PTR _vehicleData+32
	push	eax
	push	OFFSET $SG20304
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 847
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hYellowBtn
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 848
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@SetYellowB
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@SetYellowB:
	DD	1
	DD	$LN4@SetYellowB
$LN4@SetYellowB:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@SetYellowB
$LN3@SetYellowB:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetYellowButtonText ENDP
_TEXT	ENDS
EXTRN	_GetCylindersText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetNumCylsButtonText
_TEXT	SEGMENT
_SetNumCylsButtonText PROC				; COMDAT
; Line 851
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 852
	call	_GetCylindersText
	push	eax
	mov	eax, DWORD PTR _hNumCylsBtn
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 853
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetNumCylsButtonText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _ResetSliderParams
_TEXT	SEGMENT
_end$ = -20						; size = 4
_range$ = -8						; size = 4
_ResetSliderParams PROC					; COMDAT
; Line 857
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 861
	mov	eax, DWORD PTR _vehicleData+20
	mov	DWORD PTR _end$[ebp], eax
; Line 862
	mov	eax, DWORD PTR _vehicleData+36
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN3@ResetSlide
; Line 863
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _vehicleData+36, eax
$LN3@ResetSlide:
; Line 864
	mov	eax, DWORD PTR _vehicleData+32
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN2@ResetSlide
; Line 865
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _vehicleData+32, eax
$LN2@ResetSlide:
; Line 866
	mov	eax, DWORD PTR _vehicleData+24
	cmp	eax, DWORD PTR _end$[ebp]
	jle	SHORT $LN1@ResetSlide
; Line 867
	mov	eax, DWORD PTR _end$[ebp]
	mov	DWORD PTR _vehicleData+24, eax
$LN1@ResetSlide:
; Line 869
	mov	eax, DWORD PTR _vehicleData+20
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 2
	mov	DWORD PTR _range$[ebp], eax
; Line 870
	mov	eax, DWORD PTR _range$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hRedlineSlider
	push	ecx
	call	_SLIDER_SetRange
	add	esp, 12					; 0000000cH
; Line 871
	mov	eax, DWORD PTR _range$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _hYellowSlider
	push	ecx
	call	_SLIDER_SetRange
	add	esp, 12					; 0000000cH
; Line 873
	mov	eax, DWORD PTR _vehicleData+36
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	push	eax
	mov	edx, DWORD PTR _hRedlineSlider
	push	edx
	call	_SLIDER_SetValue
	add	esp, 8
; Line 874
	mov	eax, DWORD PTR _vehicleData+32
	cdq
	mov	ecx, 500				; 000001f4H
	idiv	ecx
	add	eax, 1
	push	eax
	mov	edx, DWORD PTR _hYellowSlider
	push	edx
	call	_SLIDER_SetValue
	add	esp, 8
; Line 876
	call	_SetRedlineButtonText
; Line 877
	call	_SetYellowButtonText
; Line 878
	call	_SetNumCylsButtonText
; Line 879
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ResetSliderParams ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_bmTachSliderGreen:BYTE
EXTRN	_bmTachSliderYellow:BYTE
EXTRN	_bmTachSliderRed:BYTE
EXTRN	_GUI_Font20B_ASCII:BYTE
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_FillRoundedRect:PROC
EXTRN	_GUI_DrawRoundedFrame:PROC
EXTRN	_GetValue:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_bmTachSetup:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TachSelectionPaint
_TEXT	SEGMENT
$T21058 = -248						; size = 8
_rpm$20318 = -40					; size = 4
_scratch$20317 = -28					; size = 20
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_TachSelectionPaint PROC				; COMDAT
; Line 882
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 883
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 884
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTachSetup
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 886
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 887
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 888
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 894
	push	53					; 00000035H
	call	_GetValue
	add	esp, 4
	mov	DWORD PTR $T21058[ebp], eax
	mov	DWORD PTR $T21058[ebp+4], edx
	mov	eax, DWORD PTR $T21058[ebp]
	mov	DWORD PTR _rpm$20318[ebp], eax
; Line 895
	mov	eax, DWORD PTR _rpm$20318[ebp]
	push	eax
	push	OFFSET $SG20319
	lea	ecx, DWORD PTR _scratch$20317[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 896
	lea	eax, DWORD PTR _scratch$20317[ebp]
	push	eax
	mov	ecx, DWORD PTR _hCurrentRPMBtn
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 901
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 902
	push	2
	push	5
	push	262					; 00000106H
	push	470					; 000001d6H
	push	40					; 00000028H
	push	10					; 0000000aH
	call	_GUI_DrawRoundedFrame
	add	esp, 24					; 00000018H
; Line 903
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 904
	push	5
	push	260					; 00000104H
	push	468					; 000001d4H
	push	42					; 0000002aH
	push	12					; 0000000cH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 906
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 907
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 908
	push	96					; 00000060H
	push	470					; 000001d6H
	push	96					; 00000060H
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 909
	push	151					; 00000097H
	push	470					; 000001d6H
	push	151					; 00000097H
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 910
	push	206					; 000000ceH
	push	470					; 000001d6H
	push	206					; 000000ceH
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 912
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 913
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 914
	push	58					; 0000003aH
	push	40					; 00000028H
	push	OFFSET $SG20320
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 915
	push	58					; 0000003aH
	push	273					; 00000111H
	push	OFFSET $SG20321
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 916
	push	OFFSET _GUI_Font20B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 917
	push	100					; 00000064H
	push	40					; 00000028H
	push	OFFSET $SG20322
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 918
	push	155					; 0000009bH
	push	40					; 00000028H
	push	OFFSET $SG20323
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 919
	push	210					; 000000d2H
	push	40					; 00000028H
	push	OFFSET $SG20324
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 921
	push	126					; 0000007eH
	push	70					; 00000046H
	push	OFFSET _bmTachSliderRed
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 922
	push	181					; 000000b5H
	push	70					; 00000046H
	push	OFFSET _bmTachSliderYellow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 923
	push	236					; 000000ecH
	push	70					; 00000046H
	push	OFFSET _bmTachSliderGreen
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 925
	push	229					; 000000e5H
	push	0
	push	0
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 926
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@TachSelect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@TachSelect:
	DD	1
	DD	$LN4@TachSelect
$LN4@TachSelect:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@TachSelect
$LN3@TachSelect:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_TachSelectionPaint ENDP
_TEXT	ENDS
PUBLIC	__real@3ee83d43
EXTRN	_DisplayTripleListScreen:PROC
EXTRN	_ZeroThroughNine:BYTE
EXTRN	_ZeroThroughNinty:BYTE
;	COMDAT __real@3ee83d43
CONST	SEGMENT
__real@3ee83d43 DD 03ee83d43r			; 0.453592
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _DisplayWeightSelection
_TEXT	SEGMENT
_pText$ = -56						; size = 4
_weight$ = -44						; size = 4
_units$ = -32						; size = 4
_hundreds$ = -20					; size = 4
_thousands$ = -8					; size = 4
_hParent$ = 8						; size = 4
_DisplayWeightSelection PROC				; COMDAT
; Line 931
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 938
	cmp	DWORD PTR _sysData+100, 1
	jne	SHORT $LN2@DisplayWei
; Line 940
	fild	DWORD PTR _vehicleData+104
	fmul	DWORD PTR __real@3ee83d43
	call	__ftol2_sse
	mov	DWORD PTR _weight$[ebp], eax
; Line 941
	mov	DWORD PTR _pText$[ebp], OFFSET $SG20336
; Line 943
	jmp	SHORT $LN1@DisplayWei
$LN2@DisplayWei:
; Line 945
	mov	eax, DWORD PTR _vehicleData+104
	mov	DWORD PTR _weight$[ebp], eax
; Line 946
	mov	DWORD PTR _pText$[ebp], OFFSET $SG20338
$LN1@DisplayWei:
; Line 949
	mov	eax, DWORD PTR _weight$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	DWORD PTR _thousands$[ebp], eax
; Line 950
	mov	eax, DWORD PTR _weight$[ebp]
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	mov	eax, edx
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	DWORD PTR _hundreds$[ebp], eax
; Line 951
	mov	eax, DWORD PTR _weight$[ebp]
	cdq
	mov	ecx, 100				; 00000064H
	idiv	ecx
	mov	eax, edx
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _units$[ebp], eax
; Line 958
	push	0
	push	0
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _units$[ebp]
	push	ecx
	push	OFFSET _hWeightWheel3
	push	611					; 00000263H
	push	OFFSET _ZeroThroughNinty
	mov	edx, DWORD PTR _hundreds$[ebp]
	push	edx
	push	OFFSET _hWeightWheel2
	push	610					; 00000262H
	push	OFFSET _ZeroThroughNine
	mov	eax, DWORD PTR _thousands$[ebp]
	push	eax
	push	OFFSET _hWeightWheel1
	push	609					; 00000261H
	push	OFFSET _ZeroThroughNine
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	call	_DisplayTripleListScreen
	add	esp, 64					; 00000040H
; Line 959
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayWeightSelection ENDP
_TEXT	ENDS
PUBLIC	_DisplayInputsSelection
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _RSDisplayInputsSelection
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_RSDisplayInputsSelection PROC				; COMDAT
; Line 962
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 963
	push	2065					; 00000811H
	push	2063					; 0000080fH
	push	2062					; 0000080eH
	push	2064					; 00000810H
	push	2061					; 0000080dH
	push	2060					; 0000080cH
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_DisplayInputsSelection
	add	esp, 28					; 0000001cH
; Line 964
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_RSDisplayInputsSelection ENDP
_TEXT	ENDS
PUBLIC	_SetDigitalColorAndText
PUBLIC	_SetAnalogColorAndText
EXTRN	_BUTTON_SetFont:PROC
EXTRN	_InputCleanUpKeyboards:PROC
_BSS	SEGMENT
_hDigital5 DD	01H DUP (?)
_hAnalog3 DD	01H DUP (?)
_hAnalog2 DD	01H DUP (?)
_hDigital4 DD	01H DUP (?)
_hAnalog1 DD	01H DUP (?)
_hAnalog0 DD	01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _DisplayInputsSelection
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_idA0$ = 12						; size = 4
_idA1$ = 16						; size = 4
_idD4$ = 20						; size = 4
_idA2$ = 24						; size = 4
_idA3$ = 28						; size = 4
_idD5$ = 32						; size = 4
_DisplayInputsSelection PROC				; COMDAT
; Line 967
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 968
	call	_InputCleanUpKeyboards
; Line 970
	mov	eax, DWORD PTR _idA0$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	45					; 0000002dH
	push	36					; 00000024H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalog0, eax
; Line 971
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hAnalog0
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 972
	push	0
	push	0
	mov	eax, DWORD PTR _hAnalog0
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 973
	push	0
	mov	eax, DWORD PTR _hAnalog0
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 975
	mov	eax, DWORD PTR _idA1$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	45					; 0000002dH
	push	180					; 000000b4H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalog1, eax
; Line 976
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hAnalog1
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 977
	push	0
	push	0
	mov	eax, DWORD PTR _hAnalog1
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 978
	push	1
	mov	eax, DWORD PTR _hAnalog1
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 980
	mov	eax, DWORD PTR _idD4$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	45					; 0000002dH
	push	324					; 00000144H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hDigital4, eax
; Line 981
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hDigital4
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 982
	push	0
	push	0
	mov	eax, DWORD PTR _hDigital4
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 983
	push	0
	mov	eax, DWORD PTR _hDigital4
	push	eax
	call	_SetDigitalColorAndText
	add	esp, 8
; Line 985
	mov	eax, DWORD PTR _idA2$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	155					; 0000009bH
	push	36					; 00000024H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalog2, eax
; Line 986
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hAnalog2
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 987
	push	0
	push	0
	mov	eax, DWORD PTR _hAnalog2
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 988
	push	2
	mov	eax, DWORD PTR _hAnalog2
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 990
	mov	eax, DWORD PTR _idA3$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	155					; 0000009bH
	push	180					; 000000b4H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hAnalog3, eax
; Line 991
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hAnalog3
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 992
	push	0
	push	0
	mov	eax, DWORD PTR _hAnalog3
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 993
	push	3
	mov	eax, DWORD PTR _hAnalog3
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 995
	mov	eax, DWORD PTR _idD5$[ebp]
	push	eax
	push	0
	push	2
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	push	78					; 0000004eH
	push	121					; 00000079H
	push	155					; 0000009bH
	push	324					; 00000144H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hDigital5, eax
; Line 996
	push	OFFSET _GUI_Font24B_ASCII
	mov	eax, DWORD PTR _hDigital5
	push	eax
	call	_BUTTON_SetFont
	add	esp, 8
; Line 997
	push	0
	push	0
	mov	eax, DWORD PTR _hDigital5
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 998
	push	1
	mov	eax, DWORD PTR _hDigital5
	push	eax
	call	_SetDigitalColorAndText
	add	esp, 8
; Line 999
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayInputsSelection ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_DispStringInRectEx:PROC
EXTRN	_LCD_APIListCCW:QWORD
EXTRN	_bmInputText:BYTE
EXTRN	_bmInputsBackground:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _InputsSelectionPaint
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_hParent$ = 8						; size = 4
_InputsSelectionPaint PROC				; COMDAT
; Line 1002
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1005
	push	0
	push	0
	push	OFFSET _bmInputsBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1006
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmInputText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1008
	mov	eax, 3
	mov	WORD PTR _Rect$[ebp], ax
; Line 1009
	xor	eax, eax
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 1010
	mov	eax, 23					; 00000017H
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 1011
	mov	eax, 272				; 00000110H
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 1012
	push	OFFSET _GUI_Font20B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1013
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1014
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1019
	push	OFFSET _LCD_APIListCCW
	push	6
	push	2
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	push	OFFSET $SG20361
	call	_GUI_DispStringInRectEx
	add	esp, 20					; 00000014H
; Line 1021
	mov	eax, 457				; 000001c9H
	mov	WORD PTR _Rect$[ebp], ax
; Line 1022
	xor	eax, eax
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 1023
	mov	eax, 477				; 000001ddH
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 1024
	mov	eax, 272				; 00000110H
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 1025
	push	16776960				; 00ffff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 1030
	push	OFFSET _LCD_APIListCCW
	push	20					; 00000014H
	push	2
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	push	OFFSET $SG20362
	call	_GUI_DispStringInRectEx
	add	esp, 20					; 00000014H
; Line 1033
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 1034
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1035
	push	127					; 0000007fH
	push	98					; 00000062H
	push	OFFSET _vehicleData+120
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1036
	push	127					; 0000007fH
	push	242					; 000000f2H
	push	OFFSET _vehicleData+184
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1037
	push	127					; 0000007fH
	push	386					; 00000182H
	push	OFFSET _vehicleData+376
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1039
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1040
	push	125					; 0000007dH
	push	96					; 00000060H
	push	OFFSET _vehicleData+120
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1041
	push	125					; 0000007dH
	push	240					; 000000f0H
	push	OFFSET _vehicleData+184
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1042
	push	125					; 0000007dH
	push	384					; 00000180H
	push	OFFSET _vehicleData+376
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1043
	push	235					; 000000ebH
	push	96					; 00000060H
	push	OFFSET _vehicleData+248
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1044
	push	235					; 000000ebH
	push	240					; 000000f0H
	push	OFFSET _vehicleData+312
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1045
	push	235					; 000000ebH
	push	384					; 00000180H
	push	OFFSET _vehicleData+423
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1048
	push	0
	mov	eax, DWORD PTR _hAnalog0
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 1049
	push	1
	mov	eax, DWORD PTR _hAnalog1
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 1050
	push	2
	mov	eax, DWORD PTR _hAnalog2
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 1051
	push	3
	mov	eax, DWORD PTR _hAnalog3
	push	eax
	call	_SetAnalogColorAndText
	add	esp, 8
; Line 1052
	push	0
	mov	eax, DWORD PTR _hDigital4
	push	eax
	call	_SetDigitalColorAndText
	add	esp, 8
; Line 1053
	push	1
	mov	eax, DWORD PTR _hDigital5
	push	eax
	call	_SetDigitalColorAndText
	add	esp, 8
; Line 1055
	push	229					; 000000e5H
	push	0
	push	3
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1056
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@InputsSele
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@InputsSele:
	DD	1
	DD	$LN4@InputsSele
$LN4@InputsSele:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@InputsSele
$LN3@InputsSele:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_InputsSelectionPaint ENDP
_TEXT	ENDS
EXTRN	_bmBlueButton:BYTE
EXTRN	_bmRedButton:BYTE
EXTRN	_bmYellowButton:BYTE
EXTRN	_bmGreenButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayGearRatio
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayGearRatio PROC					; COMDAT
; Line 1060
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1063
	push	2050					; 00000802H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	83					; 00000053H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1064
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1065
	push	OFFSET $SG20367
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1066
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1068
	push	2051					; 00000803H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	129					; 00000081H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1069
	push	OFFSET _bmYellowButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1070
	push	OFFSET $SG20368
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1071
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1073
	push	2052					; 00000804H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	174					; 000000aeH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1074
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1075
	push	OFFSET $SG20369
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1076
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1078
	push	2053					; 00000805H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	218					; 000000daH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1079
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1080
	push	OFFSET $SG20370
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1081
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1082
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayGearRatio ENDP
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
EXTRN	_strcpy:PROC
EXTRN	_GetTireCircumferenceString:PROC
EXTRN	_GUI_Font24_ASCII:BYTE
EXTRN	_GUI_DrawRoundedRect:PROC
EXTRN	_bmGearing:BYTE
EXTRN	_bmBackgroundWithPanel:BYTE
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _GearRatioPaint
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_GearRatioPaint PROC					; COMDAT
; Line 1093
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1096
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1097
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmGearing
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1100
	push	5
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	51					; 00000033H
	push	27					; 0000001bH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1101
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1102
	push	5
	push	255					; 000000ffH
	push	245					; 000000f5H
	push	51					; 00000033H
	push	27					; 0000001bH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1104
	push	5
	push	253					; 000000fdH
	push	243					; 000000f3H
	push	53					; 00000035H
	push	29					; 0000001dH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1105
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 1106
	push	5
	push	253					; 000000fdH
	push	243					; 000000f3H
	push	53					; 00000035H
	push	29					; 0000001dH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1109
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1110
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1111
	push	81					; 00000051H
	push	230					; 000000e6H
	push	81					; 00000051H
	push	42					; 0000002aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1113
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1114
	push	111					; 0000006fH
	push	230					; 000000e6H
	push	111					; 0000006fH
	push	42					; 0000002aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1115
	push	141					; 0000008dH
	push	230					; 000000e6H
	push	141					; 0000008dH
	push	42					; 0000002aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1119
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1120
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 1121
	movzx	eax, BYTE PTR _vehicleData+100
	test	eax, eax
	je	SHORT $LN4@GearRatioP
; Line 1122
	mov	eax, DWORD PTR _vehicleData+92
	push	eax
	mov	ecx, DWORD PTR _vehicleData+96
	push	ecx
	mov	edx, DWORD PTR _vehicleData+88
	push	edx
	push	OFFSET $SG20383
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 20					; 00000014H
	jmp	SHORT $LN3@GearRatioP
$LN4@GearRatioP:
; Line 1123
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	push	1
	call	_GetTireCircumferenceString
	add	esp, 8
$LN3@GearRatioP:
; Line 1124
	push	55					; 00000037H
	push	136					; 00000088H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1127
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1128
	fld	DWORD PTR _vehicleData+80
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@GearRatioP
; Line 1129
	push	OFFSET $SG20386
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN1@GearRatioP
$LN2@GearRatioP:
; Line 1130
	fld	DWORD PTR _vehicleData+80
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20388
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN1@GearRatioP:
; Line 1131
	push	85					; 00000055H
	push	136					; 00000088H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1135
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1136
	push	115					; 00000073H
	push	136					; 00000088H
	push	OFFSET $SG20389
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1139
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1140
	push	151					; 00000097H
	push	42					; 0000002aH
	push	OFFSET $SG20390
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1141
	push	176					; 000000b0H
	push	42					; 0000002aH
	push	OFFSET $SG20391
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1142
	push	201					; 000000c9H
	push	42					; 0000002aH
	push	OFFSET $SG20392
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1143
	push	226					; 000000e2H
	push	42					; 0000002aH
	push	OFFSET $SG20393
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1144
	push	151					; 00000097H
	push	143					; 0000008fH
	push	OFFSET $SG20394
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1145
	push	176					; 000000b0H
	push	143					; 0000008fH
	push	OFFSET $SG20395
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1146
	push	201					; 000000c9H
	push	143					; 0000008fH
	push	OFFSET $SG20396
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1147
	push	226					; 000000e2H
	push	143					; 0000008fH
	push	OFFSET $SG20397
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1150
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1151
	fld	DWORD PTR _vehicleData+48
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20398
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1152
	push	151					; 00000097H
	push	89					; 00000059H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1153
	fld	DWORD PTR _vehicleData+52
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20399
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1154
	push	176					; 000000b0H
	push	89					; 00000059H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1155
	fld	DWORD PTR _vehicleData+56
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20400
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1156
	push	201					; 000000c9H
	push	89					; 00000059H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1157
	fld	DWORD PTR _vehicleData+60
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20401
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1158
	push	226					; 000000e2H
	push	89					; 00000059H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1159
	fld	DWORD PTR _vehicleData+64
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20402
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1160
	push	151					; 00000097H
	push	183					; 000000b7H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1161
	fld	DWORD PTR _vehicleData+68
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20403
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1162
	push	176					; 000000b0H
	push	183					; 000000b7H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1163
	fld	DWORD PTR _vehicleData+72
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20404
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1164
	push	201					; 000000c9H
	push	183					; 000000b7H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1165
	fld	DWORD PTR _vehicleData+76
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20405
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1166
	push	226					; 000000e2H
	push	183					; 000000b7H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1168
	push	229					; 000000e5H
	push	0
	push	2
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1169
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GearRatioP
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@GearRatioP:
	DD	1
	DD	$LN8@GearRatioP
$LN8@GearRatioP:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN7@GearRatioP
$LN7@GearRatioP:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_GearRatioPaint ENDP
_TEXT	ENDS
EXTRN	_bmVehicleWeight:BYTE
EXTRN	_bmNarrowSpinner:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WeightSelectionPaint
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_WeightSelectionPaint PROC				; COMDAT
; Line 1172
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1173
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1174
	push	49					; 00000031H
	push	225					; 000000e1H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1175
	push	49					; 00000031H
	push	304					; 00000130H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1176
	push	49					; 00000031H
	push	383					; 0000017fH
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1178
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmVehicleWeight
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1179
	push	229					; 000000e5H
	push	0
	push	4
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1180
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WeightSelectionPaint ENDP
_TEXT	ENDS
PUBLIC	_GetAeroGripWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetAeroGripWindowHandle
_TEXT	SEGMENT
_GetAeroGripWindowHandle PROC				; COMDAT
; Line 1188
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1189
	mov	eax, DWORD PTR _hAeroGripScreen
; Line 1190
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetAeroGripWindowHandle ENDP
_TEXT	ENDS
PUBLIC	__real@447a0000
PUBLIC	_AeroGripScreenCallback
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _CreateAeroGripScreen
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_CreateAeroGripScreen PROC				; COMDAT
; Line 1193
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1194
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN2@CreateAero
; Line 1195
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@CreateAero:
; Line 1197
	push	32					; 00000020H
	call	_SetScreenType
	add	esp, 4
; Line 1199
	push	0
	push	OFFSET _AeroGripScreenCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hAeroGripScreen, eax
	cmp	DWORD PTR _hAeroGripScreen, 0
	jg	SHORT $LN1@CreateAero
; Line 1200
	call	_SystemError
$LN1@CreateAero:
; Line 1202
	push	307					; 00000133H
	push	0
	push	2
	mov	eax, DWORD PTR _hAeroGripScreen
	push	eax
	push	32					; 00000020H
	push	375					; 00000177H
	push	69					; 00000045H
	push	14					; 0000000eH
	call	_SLIDER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hWindSlider, eax
; Line 1203
	push	1000					; 000003e8H
	push	0
	mov	eax, DWORD PTR _hWindSlider
	push	eax
	call	_SLIDER_SetRange
	add	esp, 12					; 0000000cH
; Line 1204
	push	0
	mov	eax, DWORD PTR _hWindSlider
	push	eax
	call	_SLIDER_SetNumTicks
	add	esp, 8
; Line 1206
	push	308					; 00000134H
	push	0
	push	2
	mov	eax, DWORD PTR _hAeroGripScreen
	push	eax
	push	32					; 00000020H
	push	375					; 00000177H
	push	144					; 00000090H
	push	14					; 0000000eH
	call	_SLIDER_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hRollSlider, eax
; Line 1207
	push	1000					; 000003e8H
	push	0
	mov	eax, DWORD PTR _hRollSlider
	push	eax
	call	_SLIDER_SetRange
	add	esp, 12					; 0000000cH
; Line 1208
	push	0
	mov	eax, DWORD PTR _hRollSlider
	push	eax
	call	_SLIDER_SetNumTicks
	add	esp, 8
; Line 1213
	fld	DWORD PTR _vehicleData+108
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	mov	eax, DWORD PTR _hWindSlider
	push	eax
	call	_SLIDER_SetValue
	add	esp, 8
; Line 1214
	fld	DWORD PTR _vehicleData+112
	fmul	DWORD PTR __real@447a0000
	call	__ftol2_sse
	push	eax
	mov	eax, DWORD PTR _hRollSlider
	push	eax
	call	_SLIDER_SetValue
	add	esp, 8
; Line 1216
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hAeroGripScreen
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 1217
	call	_ResetNewScreen
; Line 1218
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateAeroGripScreen ENDP
_TEXT	ENDS
PUBLIC	_AeroGripScreenPaint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AeroGripScreenCallback
_TEXT	SEGMENT
tv148 = -220						; size = 4
tv144 = -220						; size = 4
tv76 = -220						; size = 4
tv75 = -220						; size = 4
tv64 = -220						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_AeroGripScreenCallback PROC				; COMDAT
; Line 1222
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1225
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	jg	SHORT $LN18@AeroGripSc
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	SHORT $LN9@AeroGripSc
	cmp	DWORD PTR tv64[ebp], 1
	je	SHORT $LN11@AeroGripSc
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN10@AeroGripSc
	jmp	$LN1@AeroGripSc
$LN18@AeroGripSc:
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN13@AeroGripSc
	jmp	$LN1@AeroGripSc
$LN13@AeroGripSc:
; Line 1228
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN12@AeroGripSc
; Line 1230
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 1231
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN12@AeroGripSc:
; Line 1233
	jmp	$LN14@AeroGripSc
$LN11@AeroGripSc:
; Line 1237
	call	_VehicleSettingsIgnoreNextKeyRelease
; Line 1238
	jmp	$LN14@AeroGripSc
$LN10@AeroGripSc:
; Line 1241
	call	_AeroGripScreenPaint
; Line 1242
	call	_DrawSignalStrength
; Line 1243
	jmp	$LN14@AeroGripSc
$LN9@AeroGripSc:
; Line 1246
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 1247
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 1248
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	cmp	DWORD PTR tv75[ebp], 5
	je	SHORT $LN6@AeroGripSc
	jmp	$LN7@AeroGripSc
$LN6@AeroGripSc:
; Line 1251
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	cmp	DWORD PTR tv76[ebp], 307		; 00000133H
	je	SHORT $LN3@AeroGripSc
	cmp	DWORD PTR tv76[ebp], 308		; 00000134H
	je	SHORT $LN2@AeroGripSc
	jmp	SHORT $LN4@AeroGripSc
$LN3@AeroGripSc:
; Line 1254
	mov	eax, DWORD PTR _hWindSlider
	push	eax
	call	_SLIDER_GetValue
	add	esp, 4
	mov	DWORD PTR tv144[ebp], eax
	fild	DWORD PTR tv144[ebp]
	fdiv	DWORD PTR __real@447a0000
	fstp	DWORD PTR _vehicleData+108
; Line 1255
	mov	eax, DWORD PTR _hAeroGripScreen
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1256
	jmp	SHORT $LN4@AeroGripSc
$LN2@AeroGripSc:
; Line 1258
	mov	eax, DWORD PTR _hRollSlider
	push	eax
	call	_SLIDER_GetValue
	add	esp, 4
	mov	DWORD PTR tv148[ebp], eax
	fild	DWORD PTR tv148[ebp]
	fdiv	DWORD PTR __real@447a0000
	fstp	DWORD PTR _vehicleData+112
; Line 1259
	mov	eax, DWORD PTR _hAeroGripScreen
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN4@AeroGripSc:
$LN7@AeroGripSc:
; Line 1264
	jmp	SHORT $LN14@AeroGripSc
$LN1@AeroGripSc:
; Line 1267
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN14@AeroGripSc:
; Line 1269
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_AeroGripScreenCallback ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_bmSliderGreen:BYTE
EXTRN	_bmSliderBlue:BYTE
EXTRN	_bmAeroandTire:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AeroGripScreenPaint
_TEXT	SEGMENT
_scratch$ = -48						; size = 40
__$ArrayPad$ = -4					; size = 4
_AeroGripScreenPaint PROC				; COMDAT
; Line 1272
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1275
	push	0
	push	0
	push	OFFSET _bmBackground
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1276
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmAeroandTire
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1279
	push	5
	push	250					; 000000faH
	push	460					; 000001ccH
	push	40					; 00000028H
	push	10					; 0000000aH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1280
	push	5
	push	250					; 000000faH
	push	460					; 000001ccH
	push	40					; 00000028H
	push	10					; 0000000aH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1282
	push	4
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1283
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1284
	push	45					; 0000002dH
	push	230					; 000000e6H
	push	OFFSET $SG20453
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1285
	push	120					; 00000078H
	push	230					; 000000e6H
	push	OFFSET $SG20454
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1288
	fld	DWORD PTR _vehicleData+108
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20455
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1289
	push	74					; 0000004aH
	push	420					; 000001a4H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1290
	fld	DWORD PTR _vehicleData+112
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20456
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1291
	push	150					; 00000096H
	push	420					; 000001a4H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1293
	push	OFFSET _sysData+143
	push	OFFSET $SG20457
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1294
	push	210					; 000000d2H
	push	240					; 000000f0H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1296
	push	80					; 00000050H
	push	30					; 0000001eH
	push	OFFSET _bmSliderBlue
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1297
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1298
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1299
	push	115					; 00000073H
	push	460					; 000001ccH
	push	115					; 00000073H
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1301
	push	155					; 0000009bH
	push	30					; 0000001eH
	push	OFFSET _bmSliderGreen
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1302
	push	190					; 000000beH
	push	460					; 000001ccH
	push	190					; 000000beH
	push	10					; 0000000aH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1304
	push	229					; 000000e5H
	push	0
	push	1
	call	_GetNavigationArrow
	add	esp, 4
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1305
	push	0
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1307
	push	OFFSET _GUI_Font24B_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 1308
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@AeroGripSc@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@AeroGripSc@2:
	DD	1
	DD	$LN4@AeroGripSc@2
$LN4@AeroGripSc@2:
	DD	-48					; ffffffd0H
	DD	40					; 00000028H
	DD	$LN3@AeroGripSc@2
$LN3@AeroGripSc@2:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_AeroGripScreenPaint ENDP
_TEXT	ENDS
EXTRN	_bmOrangeButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayCarMetricsSelection
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayCarMetricsSelection PROC			; COMDAT
; Line 1313
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1316
	push	2070					; 00000816H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	48					; 00000030H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1317
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1318
	push	OFFSET $SG20464
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1319
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1320
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1321
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1323
	push	2071					; 00000817H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	91					; 0000005bH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1324
	push	OFFSET _bmYellowButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1325
	push	OFFSET $SG20465
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1326
	push	0
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1327
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1328
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1330
	push	2072					; 00000818H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	134					; 00000086H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1331
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1332
	push	OFFSET $SG20466
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1333
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1334
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1335
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1337
	push	2073					; 00000819H
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	177					; 000000b1H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1338
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1339
	push	OFFSET $SG20467
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1340
	push	0
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1341
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1342
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1344
	push	2074					; 0000081aH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	220					; 000000dcH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1345
	push	OFFSET _bmOrangeButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1346
	push	OFFSET $SG20468
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1347
	push	0
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1348
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1349
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1350
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayCarMetricsSelection ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_GUI_Font20_ASCII:BYTE
EXTRN	_bmCarMetricsBanner:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CarMetricsSelectionPaint
_TEXT	SEGMENT
_scratch$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_CarMetricsSelectionPaint PROC				; COMDAT
; Line 1366
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1369
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1370
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmCarMetricsBanner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1372
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1375
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1376
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1377
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1379
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1380
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 1381
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1384
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1385
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1386
	push	88					; 00000058H
	push	225					; 000000e1H
	push	88					; 00000058H
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1387
	push	131					; 00000083H
	push	225					; 000000e1H
	push	131					; 00000083H
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1388
	push	174					; 000000aeH
	push	225					; 000000e1H
	push	174					; 000000aeH
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1391
	push	60					; 0000003cH
	push	37					; 00000025H
	push	OFFSET $SG20485
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1392
	push	103					; 00000067H
	push	37					; 00000025H
	push	OFFSET $SG20486
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1393
	push	146					; 00000092H
	push	37					; 00000025H
	push	OFFSET $SG20487
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1394
	push	189					; 000000bdH
	push	37					; 00000025H
	push	OFFSET $SG20488
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1395
	push	189					; 000000bdH
	push	160					; 000000a0H
	push	OFFSET $SG20489
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 1398
	call	_UpdateAll
; Line 1401
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 1402
	fld	DWORD PTR _vehicleData+108
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20490
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1403
	push	220					; 000000dcH
	push	75					; 0000004bH
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1406
	fld	DWORD PTR _vehicleData+112
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20491
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1407
	push	220					; 000000dcH
	push	200					; 000000c8H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1409
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1410
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CarMetrics
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@CarMetrics:
	DD	1
	DD	$LN4@CarMetrics
$LN4@CarMetrics:
	DD	-20					; ffffffecH
	DD	10					; 0000000aH
	DD	$LN3@CarMetrics
$LN3@CarMetrics:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_CarMetricsSelectionPaint ENDP
_TEXT	ENDS
PUBLIC	_UpdateDistance
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpdateAll
_TEXT	SEGMENT
_UpdateAll PROC						; COMDAT
; Line 1414
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1415
	call	_UpdateTime
; Line 1416
	call	_UpdateDistance
; Line 1417
	call	_UpdateRPM
; Line 1418
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateAll ENDP
_TEXT	ENDS
PUBLIC	__real@40ac200000000000
PUBLIC	__real@470ca000
PUBLIC	__real@48afc800
PUBLIC	__$ArrayPad$
EXTRN	_GUI_DispStringInRect:PROC
;	COMDAT __real@40ac200000000000
CONST	SEGMENT
__real@40ac200000000000 DQ 040ac200000000000r	; 3600
CONST	ENDS
;	COMDAT __real@470ca000
CONST	SEGMENT
__real@470ca000 DD 0470ca000r			; 36000
CONST	ENDS
;	COMDAT __real@48afc800
CONST	SEGMENT
__real@48afc800 DD 048afc800r			; 360000
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _UpdateTime
_TEXT	SEGMENT
tv76 = -228						; size = 4
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_UpdateTime PROC					; COMDAT
; Line 1422
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1425
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1427
	fld	DWORD PTR __real@48afc800
	fcomp	DWORD PTR _sysData+196
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@UpdateTime
; Line 1428
	fld	DWORD PTR _sysData+196
	call	__ftol2_sse
	cdq
	mov	ecx, 3600				; 00000e10H
	idiv	ecx
	push	eax
	push	OFFSET $SG20499
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@UpdateTime
$LN2@UpdateTime:
; Line 1429
	fld	DWORD PTR __real@470ca000
	fcomp	DWORD PTR _sysData+196
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN5@UpdateTime
	mov	DWORD PTR tv76[ebp], OFFSET $SG20502
	jmp	SHORT $LN6@UpdateTime
$LN5@UpdateTime:
	mov	DWORD PTR tv76[ebp], OFFSET $SG20503
$LN6@UpdateTime:
	fld	DWORD PTR _sysData+196
	fdiv	QWORD PTR __real@40ac200000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR tv76[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN1@UpdateTime:
; Line 1431
	push	16744576				; 00ff8080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1432
	push	1
	push	OFFSET _TimeRect
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 1433
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@UpdateTime
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@UpdateTime:
	DD	1
	DD	$LN8@UpdateTime
$LN8@UpdateTime:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN7@UpdateTime
$LN7@UpdateTime:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_UpdateTime ENDP
_TEXT	ENDS
PUBLIC	__real@40c3880000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@47c35000
PUBLIC	__real@40cf6eb333333333
PUBLIC	__real@4099255c28f5c28f
PUBLIC	__real@481d2980
PUBLIC	__$ArrayPad$
;	COMDAT __real@40c3880000000000
CONST	SEGMENT
__real@40c3880000000000 DQ 040c3880000000000r	; 10000
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@47c35000
CONST	SEGMENT
__real@47c35000 DD 047c35000r			; 100000
CONST	ENDS
;	COMDAT __real@40cf6eb333333333
CONST	SEGMENT
__real@40cf6eb333333333 DQ 040cf6eb333333333r	; 16093.4
CONST	ENDS
;	COMDAT __real@4099255c28f5c28f
CONST	SEGMENT
__real@4099255c28f5c28f DQ 04099255c28f5c28fr	; 1609.34
CONST	ENDS
;	COMDAT __real@481d2980
CONST	SEGMENT
__real@481d2980 DD 0481d2980r			; 160934
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _UpdateDistance
_TEXT	SEGMENT
tv128 = -228						; size = 4
tv80 = -228						; size = 4
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_UpdateDistance PROC					; COMDAT
; Line 1437
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1440
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1442
	cmp	DWORD PTR _sysData+100, 0
	jne	$LN6@UpdateDist
; Line 1444
	fld	DWORD PTR __real@481d2980
	fcomp	DWORD PTR _sysData+192
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN5@UpdateDist
; Line 1445
	fld	DWORD PTR _sysData+192
	fdiv	QWORD PTR __real@4099255c28f5c28f
	call	__ftol2_sse
	push	eax
	push	OFFSET $SG20511
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN4@UpdateDist
$LN5@UpdateDist:
; Line 1446
	fld	DWORD PTR _sysData+192
	fcomp	QWORD PTR __real@40cf6eb333333333
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN9@UpdateDist
	mov	DWORD PTR tv80[ebp], OFFSET $SG20513
	jmp	SHORT $LN10@UpdateDist
$LN9@UpdateDist:
	mov	DWORD PTR tv80[ebp], OFFSET $SG20514
$LN10@UpdateDist:
	fld	DWORD PTR _sysData+192
	fdiv	QWORD PTR __real@4099255c28f5c28f
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR tv80[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN4@UpdateDist:
; Line 1448
	jmp	$LN1@UpdateDist
$LN6@UpdateDist:
; Line 1450
	fld	DWORD PTR __real@47c35000
	fcomp	DWORD PTR _sysData+192
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN2@UpdateDist
; Line 1451
	fld	DWORD PTR _sysData+192
	fdiv	QWORD PTR __real@408f400000000000
	call	__ftol2_sse
	push	eax
	push	OFFSET $SG20518
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@UpdateDist
$LN2@UpdateDist:
; Line 1452
	fld	DWORD PTR _sysData+192
	fcomp	QWORD PTR __real@40c3880000000000
	fnstsw	ax
	test	ah, 1
	jne	SHORT $LN11@UpdateDist
	mov	DWORD PTR tv128[ebp], OFFSET $SG20520
	jmp	SHORT $LN12@UpdateDist
$LN11@UpdateDist:
	mov	DWORD PTR tv128[ebp], OFFSET $SG20521
$LN12@UpdateDist:
	fld	DWORD PTR _sysData+192
	fdiv	QWORD PTR __real@408f400000000000
	sub	esp, 8
	fstp	QWORD PTR [esp]
	mov	eax, DWORD PTR tv128[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
$LN1@UpdateDist:
; Line 1455
	push	65535					; 0000ffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1456
	push	1
	push	OFFSET _DistRect
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 1457
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@UpdateDist
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@UpdateDist:
	DD	1
	DD	$LN14@UpdateDist
$LN14@UpdateDist:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN13@UpdateDist
$LN13@UpdateDist:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_UpdateDistance ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _UpdateRPM
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_UpdateRPM PROC						; COMDAT
; Line 1461
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1464
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1466
	mov	eax, DWORD PTR _sysData+188
	push	eax
	push	OFFSET $SG20526
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1467
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1468
	push	1
	push	OFFSET _RPMRect
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 1469
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@UpdateRPM
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@UpdateRPM:
	DD	1
	DD	$LN4@UpdateRPM
$LN4@UpdateRPM:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN3@UpdateRPM
$LN3@UpdateRPM:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_UpdateRPM ENDP
_TEXT	ENDS
EXTRN	_unsavedSysData:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _DisplayCameraSetupSelection
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hParent$ = 8						; size = 4
_DisplayCameraSetupSelection PROC			; COMDAT
; Line 1484
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1487
	cmp	DWORD PTR _unsavedSysData+108, 135	; 00000087H
	jbe	$LN1@DisplayCam
; Line 1489
	push	2075					; 0000081bH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	99					; 00000063H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1490
	push	OFFSET _bmBlueButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1491
	push	OFFSET $SG20544
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1492
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1493
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1494
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
$LN1@DisplayCam:
; Line 1497
	push	2077					; 0000081dH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	152					; 00000098H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1498
	push	OFFSET _bmRedButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1499
	push	OFFSET $SG20545
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1500
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1501
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1502
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1504
	push	2078					; 0000081eH
	push	0
	push	2
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	216					; 000000d8H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1505
	push	OFFSET _bmGreenButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1506
	push	OFFSET $SG20546
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1507
	push	0
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1508
	push	0
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1509
	push	0
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1510
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_DisplayCameraSetupSelection ENDP
_TEXT	ENDS
PUBLIC	_GetCameraName
PUBLIC	_GetTraqdashCameraName
PUBLIC	__$ArrayPad$
EXTRN	_bmCameraSetupBanner:BYTE
_BSS	SEGMENT
_newTDCameraSelection DB 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _CameraSetupPaint
_TEXT	SEGMENT
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_hParent$ = 8						; size = 4
_CameraSetupPaint PROC					; COMDAT
; Line 1514
	push	ebp
	mov	ebp, esp
	sub	esp, 236				; 000000ecH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-236]
	mov	ecx, 59					; 0000003bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1517
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1518
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmCameraSetupBanner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1520
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1523
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1524
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1525
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1527
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1528
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 1529
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1532
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1533
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1536
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1537
	push	60					; 0000003cH
	push	359					; 00000167H
	push	OFFSET $SG20551
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1539
	cmp	DWORD PTR _unsavedSysData+108, 135	; 00000087H
	jbe	$LN6@CameraSetu
; Line 1542
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1543
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1544
	push	120					; 00000078H
	push	225					; 000000e1H
	push	120					; 00000078H
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1545
	push	190					; 000000beH
	push	225					; 000000e1H
	push	190					; 000000beH
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1548
	push	203					; 000000cbH
	push	449					; 000001c1H
	push	203					; 000000cbH
	push	269					; 0000010dH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1551
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1552
	push	60					; 0000003cH
	push	136					; 00000088H
	push	OFFSET $SG20553
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1553
	push	95					; 0000005fH
	push	136					; 00000088H
	push	OFFSET $SG20554
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1554
	push	165					; 000000a5H
	push	136					; 00000088H
	push	OFFSET $SG20555
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1556
	push	16744576				; 00ff8080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1557
	movzx	eax, BYTE PTR _newTDCameraSelection
	test	eax, eax
	jne	SHORT $LN5@CameraSetu
; Line 1558
	push	0
	call	_GetTraqdashCameraName
	add	esp, 4
	push	eax
	push	OFFSET $SG20557
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1559
	jmp	SHORT $LN4@CameraSetu
$LN5@CameraSetu:
; Line 1560
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	edx
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	eax
	push	0
	call	_GetTraqdashCameraName
	add	esp, 4
	push	eax
	push	OFFSET $SG20559
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H
$LN4@CameraSetu:
; Line 1561
	push	125					; 0000007dH
	push	136					; 00000088H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1563
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1564
	push	195					; 000000c3H
	push	136					; 00000088H
	call	_GetCameraName
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1566
	jmp	SHORT $LN3@CameraSetu
$LN6@CameraSetu:
; Line 1569
	push	174					; 000000aeH
	push	225					; 000000e1H
	push	174					; 000000aeH
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1572
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1573
	push	70					; 00000046H
	push	135					; 00000087H
	push	OFFSET $SG20561
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1574
	push	96					; 00000060H
	push	135					; 00000087H
	push	OFFSET $SG20562
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN3@CameraSetu:
; Line 1578
	push	65280					; 0000ff00H
	call	_GUI_SetColor
	add	esp, 4
; Line 1579
	cmp	DWORD PTR _testCamera, 0
	je	SHORT $LN2@CameraSetu
; Line 1580
	push	230					; 000000e6H
	push	136					; 00000088H
	push	OFFSET $SG20564
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@CameraSetu
$LN2@CameraSetu:
; Line 1581
	push	230					; 000000e6H
	push	136					; 00000088H
	push	OFFSET $SG20566
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN1@CameraSetu:
; Line 1583
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1584
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@CameraSetu
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 236				; 000000ecH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@CameraSetu:
	DD	1
	DD	$LN10@CameraSetu
$LN10@CameraSetu:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN9@CameraSetu
$LN9@CameraSetu:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_CameraSetupPaint ENDP
_TEXT	ENDS
PUBLIC	_CustomDelay
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CustomDelay
_TEXT	SEGMENT
_CustomDelay PROC					; COMDAT
; Line 1587
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1588
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN10@CustomDela
; Line 1590
	movzx	eax, BYTE PTR _vehicleData+12
	cmp	eax, 168				; 000000a8H
	jne	SHORT $LN9@CustomDela
; Line 1591
	xor	eax, eax
	jmp	SHORT $LN11@CustomDela
$LN9@CustomDela:
; Line 1593
	jmp	SHORT $LN8@CustomDela
$LN10@CustomDela:
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN7@CustomDela
; Line 1595
	movzx	eax, BYTE PTR _vehicleData+12
	cmp	eax, 198				; 000000c6H
	jne	SHORT $LN6@CustomDela
; Line 1596
	xor	eax, eax
	jmp	SHORT $LN11@CustomDela
$LN6@CustomDela:
; Line 1598
	jmp	SHORT $LN8@CustomDela
$LN7@CustomDela:
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 96					; 00000060H
	jne	SHORT $LN4@CustomDela
; Line 1600
	movzx	eax, BYTE PTR _vehicleData+12
	cmp	eax, 198				; 000000c6H
	jne	SHORT $LN3@CustomDela
; Line 1601
	xor	eax, eax
	jmp	SHORT $LN11@CustomDela
$LN3@CustomDela:
; Line 1603
	jmp	SHORT $LN8@CustomDela
$LN4@CustomDela:
	movzx	eax, BYTE PTR _newTDCameraSelection
	test	eax, eax
	jne	SHORT $LN8@CustomDela
; Line 1604
	xor	eax, eax
	jmp	SHORT $LN11@CustomDela
$LN8@CustomDela:
; Line 1606
	mov	eax, 1
$LN11@CustomDela:
; Line 1607
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_CustomDelay ENDP
_TEXT	ENDS
PUBLIC	_GetFullCameraText
EXTRN	_strcat:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetFullCameraText
_TEXT	SEGMENT
_pBuffer$ = 8						; size = 4
_GetFullCameraText PROC					; COMDAT
; Line 1610
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1611
	push	OFFSET $SG20582
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 1612
	call	_GetCameraName
	push	eax
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1614
	push	OFFSET $SG20583
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1615
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 128				; 00000080H
	je	SHORT $LN2@GetFullCam
; Line 1616
	push	OFFSET $SG20585
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1617
	jmp	SHORT $LN1@GetFullCam
$LN2@GetFullCam:
; Line 1618
	push	OFFSET $SG20587
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
$LN1@GetFullCam:
; Line 1620
	push	OFFSET $SG20588
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	call	_strcat
	add	esp, 8
; Line 1621
	mov	eax, DWORD PTR _pBuffer$[ebp]
; Line 1622
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetFullCameraText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetCameraName
_TEXT	SEGMENT
_i$ = -8						; size = 4
_GetCameraName PROC					; COMDAT
; Line 1625
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1626
	mov	DWORD PTR _i$[ebp], 0
$LN3@GetCameraN:
; Line 1627
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	cmp	DWORD PTR _NewCameras[eax], 0
	je	SHORT $LN2@GetCameraN
; Line 1630
	call	_GetSUCam
	movzx	eax, al
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	movzx	edx, BYTE PTR _NewCameras[ecx+8]
	cmp	eax, edx
	jne	SHORT $LN1@GetCameraN
; Line 1631
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	eax, DWORD PTR _NewCameras[eax]
	jmp	SHORT $LN4@GetCameraN
$LN1@GetCameraN:
; Line 1633
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 1634
	jmp	SHORT $LN3@GetCameraN
$LN2@GetCameraN:
; Line 1635
	mov	eax, DWORD PTR _NewCameras
$LN4@GetCameraN:
; Line 1636
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GetCameraName ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetTraqdashCameraName
_TEXT	SEGMENT
_length$ = 8						; size = 4
_GetTraqdashCameraName PROC				; COMDAT
; Line 1639
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1640
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN6@GetTraqdas
; Line 1641
	mov	eax, OFFSET $SG20600
	jmp	SHORT $LN7@GetTraqdas
	jmp	SHORT $LN5@GetTraqdas
$LN6@GetTraqdas:
; Line 1642
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN4@GetTraqdas
; Line 1647
	mov	eax, OFFSET $SG20603
	jmp	SHORT $LN7@GetTraqdas
	jmp	SHORT $LN5@GetTraqdas
$LN4@GetTraqdas:
; Line 1649
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 96					; 00000060H
	jne	SHORT $LN2@GetTraqdas
; Line 1650
	mov	eax, OFFSET $SG20606
	jmp	SHORT $LN7@GetTraqdas
	jmp	SHORT $LN5@GetTraqdas
$LN2@GetTraqdas:
; Line 1652
	mov	BYTE PTR _newTDCameraSelection, 0
$LN5@GetTraqdas:
; Line 1653
	mov	eax, OFFSET $SG20608
$LN7@GetTraqdas:
; Line 1654
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTraqdashCameraName ENDP
_TEXT	ENDS
PUBLIC	_VehicleSettingsPopUp
PUBLIC	_ValidateCameraData
EXTRN	_DisplaySplashScreen1:PROC
_BSS	SEGMENT
	ALIGN	4

_originalSUCameraSelection DB 01H DUP (?)
	ALIGN	4

_newSUCameraSelection DB 01H DUP (?)
	ALIGN	4

_originalTDCameraSelection DB 01H DUP (?)
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT _ValidateCameraData
_TEXT	SEGMENT
_ValidateCameraData PROC				; COMDAT
; Line 1657
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1662
	movzx	eax, BYTE PTR _vehicleData+116
	and	eax, 224				; 000000e0H
	mov	BYTE PTR _newTDCameraSelection, al
	mov	cl, BYTE PTR _newTDCameraSelection
	mov	BYTE PTR _originalTDCameraSelection, cl
; Line 1663
	movzx	eax, BYTE PTR _vehicleData+116
	and	eax, 31					; 0000001fH
	mov	BYTE PTR _newSUCameraSelection, al
	mov	cl, BYTE PTR _newSUCameraSelection
	mov	BYTE PTR _originalSUCameraSelection, cl
; Line 1669
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 3
	je	SHORT $LN3@ValidateCa
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 5
	je	SHORT $LN3@ValidateCa
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 6
	je	SHORT $LN3@ValidateCa
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 7
	jne	SHORT $LN5@ValidateCa
$LN3@ValidateCa:
; Line 1674
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 128				; 00000080H
	je	SHORT $LN2@ValidateCa
; Line 1675
	mov	BYTE PTR _vehicleData+116, 17		; 00000011H
; Line 1676
	jmp	SHORT $LN1@ValidateCa
$LN2@ValidateCa:
; Line 1677
	mov	BYTE PTR _vehicleData+116, 0
$LN1@ValidateCa:
; Line 1679
	push	7
	call	_VehicleSettingsPopUp
	add	esp, 4
; Line 1681
	call	_DisplaySplashScreen1
; Line 1684
	movzx	eax, BYTE PTR _vehicleData+116
	and	eax, 224				; 000000e0H
	mov	BYTE PTR _newTDCameraSelection, al
	mov	cl, BYTE PTR _newTDCameraSelection
	mov	BYTE PTR _originalTDCameraSelection, cl
; Line 1685
	movzx	eax, BYTE PTR _vehicleData+116
	and	eax, 31					; 0000001fH
	mov	BYTE PTR _newSUCameraSelection, al
	mov	cl, BYTE PTR _newSUCameraSelection
	mov	BYTE PTR _originalSUCameraSelection, cl
$LN5@ValidateCa:
; Line 1688
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateCameraData ENDP
_TEXT	ENDS
PUBLIC	_SetCameraButtonColors
EXTRN	_bmGrayButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateTraqdashCamScreen
_TEXT	SEGMENT
_hBtn$ = -8						; size = 4
_hParent$ = 8						; size = 4
_CreateTraqdashCamScreen PROC				; COMDAT
; Line 1692
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1695
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN2@CreateTraq
; Line 1696
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN2@CreateTraq:
; Line 1698
	push	35					; 00000023H
	call	_SetScreenType
	add	esp, 4
; Line 1700
	push	0
	push	OFFSET _TraqdashCamCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hTraqdashCam, eax
	cmp	DWORD PTR _hTraqdashCam, 0
	jg	SHORT $LN1@CreateTraq
; Line 1701
	call	_SystemError
$LN1@CreateTraq:
; Line 1703
	push	OFFSET _GUI_Font20_ASCII
	call	_BUTTON_SetDefaultFont
	add	esp, 4
; Line 1705
	push	2079					; 0000081fH
	push	0
	push	2
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	91					; 0000005bH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtnMobius, eax
; Line 1706
	push	OFFSET $SG20621
	mov	eax, DWORD PTR _hBtnMobius
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1707
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtnMobius
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1708
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtnMobius
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1709
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtnMobius
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1711
	push	2080					; 00000820H
	push	0
	push	2
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	91					; 0000005bH
	push	361					; 00000169H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtnPrimeX, eax
; Line 1712
	push	OFFSET $SG20622
	mov	eax, DWORD PTR _hBtnPrimeX
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1713
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtnPrimeX
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1714
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtnPrimeX
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1715
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtnPrimeX
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1717
	push	2081					; 00000821H
	push	0
	push	2
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	134					; 00000086H
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtnMini, eax
; Line 1718
	push	OFFSET $SG20623
	mov	eax, DWORD PTR _hBtnMini
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1719
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtnMini
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1720
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtnMini
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1721
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtnMini
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1723
	push	2082					; 00000822H
	push	0
	push	2
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	push	39					; 00000027H
	push	97					; 00000061H
	push	134					; 00000086H
	push	361					; 00000169H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtnNone, eax
; Line 1724
	push	OFFSET $SG20624
	mov	eax, DWORD PTR _hBtnNone
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1725
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtnNone
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1726
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtnNone
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1727
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtnNone
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1729
	call	_SetCameraButtonColors
; Line 1731
	push	2083					; 00000823H
	push	0
	push	2
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	push	39					; 00000027H
	push	202					; 000000caH
	push	220					; 000000dcH
	push	258					; 00000102H
	call	_BUTTON_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hBtn$[ebp], eax
; Line 1732
	push	OFFSET _bmGrayButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1733
	push	OFFSET $SG20625
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
; Line 1734
	push	16777215				; 00ffffffH
	push	2
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1735
	push	16777215				; 00ffffffH
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1736
	push	16777215				; 00ffffffH
	push	1
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetTextColor
	add	esp, 12					; 0000000cH
; Line 1738
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 1739
	call	_ResetNewScreen
; Line 1740
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateTraqdashCamScreen ENDP
_TEXT	ENDS
EXTRN	_bmMediumBlueButtonDark:BYTE
EXTRN	_bmMediumBlueButton:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetCameraButtonColors
_TEXT	SEGMENT
tv84 = -196						; size = 4
tv78 = -196						; size = 4
tv72 = -196						; size = 4
tv66 = -196						; size = 4
_SetCameraButtonColors PROC				; COMDAT
; Line 1743
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1744
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 32					; 00000020H
	jne	SHORT $LN3@SetCameraB
	mov	DWORD PTR tv66[ebp], OFFSET _bmMediumBlueButton
	jmp	SHORT $LN4@SetCameraB
$LN3@SetCameraB:
	mov	DWORD PTR tv66[ebp], OFFSET _bmMediumBlueButtonDark
$LN4@SetCameraB:
	mov	ecx, DWORD PTR tv66[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hBtnMobius
	push	edx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1745
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 64					; 00000040H
	jne	SHORT $LN5@SetCameraB
	mov	DWORD PTR tv72[ebp], OFFSET _bmMediumBlueButton
	jmp	SHORT $LN6@SetCameraB
$LN5@SetCameraB:
	mov	DWORD PTR tv72[ebp], OFFSET _bmMediumBlueButtonDark
$LN6@SetCameraB:
	mov	ecx, DWORD PTR tv72[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hBtnPrimeX
	push	edx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1746
	movzx	eax, BYTE PTR _newTDCameraSelection
	cmp	eax, 96					; 00000060H
	jne	SHORT $LN7@SetCameraB
	mov	DWORD PTR tv78[ebp], OFFSET _bmMediumBlueButton
	jmp	SHORT $LN8@SetCameraB
$LN7@SetCameraB:
	mov	DWORD PTR tv78[ebp], OFFSET _bmMediumBlueButtonDark
$LN8@SetCameraB:
	mov	ecx, DWORD PTR tv78[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hBtnMini
	push	edx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1747
	movzx	eax, BYTE PTR _newTDCameraSelection
	test	eax, eax
	jne	SHORT $LN9@SetCameraB
	mov	DWORD PTR tv84[ebp], OFFSET _bmMediumBlueButton
	jmp	SHORT $LN10@SetCameraB
$LN9@SetCameraB:
	mov	DWORD PTR tv84[ebp], OFFSET _bmMediumBlueButtonDark
$LN10@SetCameraB:
	mov	ecx, DWORD PTR tv84[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR _hBtnNone
	push	edx
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 1748
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetCameraButtonColors ENDP
_TEXT	ENDS
PUBLIC	_GetTraqdashCamWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetTraqdashCamWindowHandle
_TEXT	SEGMENT
_GetTraqdashCamWindowHandle PROC			; COMDAT
; Line 1751
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1752
	mov	eax, DWORD PTR _hTraqdashCam
; Line 1753
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTraqdashCamWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_CreateCameraDelay
PUBLIC	_TraqdashCamPaint
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TraqdashCamCallback
_TEXT	SEGMENT
tv76 = -220						; size = 4
tv75 = -220						; size = 4
tv64 = -220						; size = 4
_Id$ = -20						; size = 4
_NCode$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_TraqdashCamCallback PROC				; COMDAT
; Line 1757
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1760
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	SHORT $LN13@TraqdashCa
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	SHORT $LN12@TraqdashCa
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN15@TraqdashCa
	jmp	$LN1@TraqdashCa
$LN15@TraqdashCa:
; Line 1763
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN14@TraqdashCa
; Line 1765
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 1766
	push	OFFSET _BannerRect
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_InvalidateRect
	add	esp, 8
$LN14@TraqdashCa:
; Line 1768
	jmp	$LN18@TraqdashCa
$LN13@TraqdashCa:
; Line 1771
	call	_TraqdashCamPaint
; Line 1772
	jmp	$LN18@TraqdashCa
$LN12@TraqdashCa:
; Line 1775
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 1776
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 1777
	mov	eax, DWORD PTR _NCode$[ebp]
	mov	DWORD PTR tv75[ebp], eax
	cmp	DWORD PTR tv75[ebp], 1
	je	SHORT $LN9@TraqdashCa
	jmp	$LN10@TraqdashCa
$LN9@TraqdashCa:
; Line 1780
	mov	eax, DWORD PTR _Id$[ebp]
	mov	DWORD PTR tv76[ebp], eax
	mov	ecx, DWORD PTR tv76[ebp]
	sub	ecx, 2079				; 0000081fH
	mov	DWORD PTR tv76[ebp], ecx
	cmp	DWORD PTR tv76[ebp], 4
	ja	$LN10@TraqdashCa
	mov	edx, DWORD PTR tv76[ebp]
	jmp	DWORD PTR $LN20@TraqdashCa[edx*4]
$LN6@TraqdashCa:
; Line 1783
	mov	BYTE PTR _newTDCameraSelection, 32	; 00000020H
; Line 1784
	mov	BYTE PTR _vehicleData+12, 168		; 000000a8H
; Line 1785
	call	_SetCameraButtonColors
; Line 1786
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1787
	jmp	SHORT $LN10@TraqdashCa
$LN5@TraqdashCa:
; Line 1790
	mov	BYTE PTR _newTDCameraSelection, 64	; 00000040H
; Line 1791
	mov	BYTE PTR _vehicleData+12, 198		; 000000c6H
; Line 1792
	call	_SetCameraButtonColors
; Line 1793
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1794
	jmp	SHORT $LN10@TraqdashCa
$LN4@TraqdashCa:
; Line 1797
	mov	BYTE PTR _newTDCameraSelection, 96	; 00000060H
; Line 1798
	mov	BYTE PTR _vehicleData+12, 198		; 000000c6H
; Line 1799
	call	_SetCameraButtonColors
; Line 1800
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1801
	jmp	SHORT $LN10@TraqdashCa
$LN3@TraqdashCa:
; Line 1804
	mov	BYTE PTR _newTDCameraSelection, 0
; Line 1805
	call	_SetCameraButtonColors
; Line 1806
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 1807
	jmp	SHORT $LN10@TraqdashCa
$LN2@TraqdashCa:
; Line 1810
	mov	eax, DWORD PTR _hTraqdashCam
	push	eax
	call	_CreateCameraDelay
	add	esp, 4
$LN10@TraqdashCa:
; Line 1815
	jmp	SHORT $LN18@TraqdashCa
$LN1@TraqdashCa:
; Line 1818
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN18@TraqdashCa:
; Line 1820
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN20@TraqdashCa:
	DD	$LN6@TraqdashCa
	DD	$LN5@TraqdashCa
	DD	$LN4@TraqdashCa
	DD	$LN3@TraqdashCa
	DD	$LN2@TraqdashCa
_TraqdashCamCallback ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_bmTraqdashCamBanner:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _TraqdashCamPaint
_TEXT	SEGMENT
tv178 = -240						; size = 4
_scratch$ = -40						; size = 30
__$ArrayPad$ = -4					; size = 4
_TraqdashCamPaint PROC					; COMDAT
; Line 1824
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1827
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1828
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmTraqdashCamBanner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1830
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 1833
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1834
	push	8421504					; 00808080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1835
	push	5
	push	257					; 00000101H
	push	245					; 000000f5H
	push	48					; 00000030H
	push	27					; 0000001bH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1837
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 1838
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 1839
	push	5
	push	255					; 000000ffH
	push	243					; 000000f3H
	push	50					; 00000032H
	push	29					; 0000001dH
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 1842
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1843
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1844
	push	60					; 0000003cH
	push	359					; 00000167H
	push	OFFSET $SG20661
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1845
	push	60					; 0000003cH
	push	136					; 00000088H
	push	OFFSET $SG20662
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1846
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1847
	push	95					; 0000005fH
	push	136					; 00000088H
	push	OFFSET $SG20663
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1850
	push	2
	call	_GUI_SetPenSize
	add	esp, 4
; Line 1851
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 1852
	push	120					; 00000078H
	push	225					; 000000e1H
	push	120					; 00000078H
	push	47					; 0000002fH
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 1854
	push	16744576				; 00ff8080H
	call	_GUI_SetColor
	add	esp, 4
; Line 1855
	push	1
	call	_GetTraqdashCameraName
	add	esp, 4
	push	eax
	push	OFFSET $SG20664
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 1856
	push	125					; 0000007dH
	push	136					; 00000088H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1858
	movzx	eax, BYTE PTR _newTDCameraSelection
	test	eax, eax
	jne	SHORT $LN3@TraqdashCa@2
; Line 1860
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 1861
	push	225					; 000000e1H
	push	136					; 00000088H
	push	OFFSET $SG20666
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1863
	jmp	$LN2@TraqdashCa@2
$LN3@TraqdashCa@2:
; Line 1865
	call	_CustomDelay
	test	eax, eax
	je	SHORT $LN1@TraqdashCa@2
; Line 1866
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
$LN1@TraqdashCa@2:
; Line 1867
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	edx
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	push	eax
	push	OFFSET $SG20669
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 1868
	push	200					; 000000c8H
	push	136					; 00000088H
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 1870
	call	_CustomDelay
	test	eax, eax
	je	SHORT $LN6@TraqdashCa@2
	mov	DWORD PTR tv178[ebp], OFFSET $SG20670
	jmp	SHORT $LN7@TraqdashCa@2
$LN6@TraqdashCa@2:
	mov	DWORD PTR tv178[ebp], OFFSET $SG20671
$LN7@TraqdashCa@2:
	push	225					; 000000e1H
	push	136					; 00000088H
	mov	eax, DWORD PTR tv178[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN2@TraqdashCa@2:
; Line 1873
	call	_DrawSignalStrength
; Line 1874
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 1875
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@TraqdashCa@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@TraqdashCa@2:
	DD	1
	DD	$LN9@TraqdashCa@2
$LN9@TraqdashCa@2:
	DD	-40					; ffffffd8H
	DD	30					; 0000001eH
	DD	$LN8@TraqdashCa@2
$LN8@TraqdashCa@2:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_TraqdashCamPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetNavigationArrow
_TEXT	SEGMENT
_screen$ = 8						; size = 4
_GetNavigationArrow PROC				; COMDAT
; Line 1879
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1880
	mov	eax, OFFSET _bmleftarrow
; Line 1881
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetNavigationArrow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _VehicleSettingsIgnoreNextKeyRelease
_TEXT	SEGMENT
_VehicleSettingsIgnoreNextKeyRelease PROC		; COMDAT
; Line 1884
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1885
	mov	DWORD PTR _clickedOnVSScreen, 0
; Line 1886
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_VehicleSettingsIgnoreNextKeyRelease ENDP
_TEXT	ENDS
PUBLIC	_AutoFixWeight
PUBLIC	_AutoFixGears
PUBLIC	_AutoFixTach
PUBLIC	_ValidateVehicleData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidateVehicleData
_TEXT	SEGMENT
_ValidateVehicleData PROC				; COMDAT
; Line 1889
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1892
	mov	eax, DWORD PTR _vehicleData+24
	cmp	eax, DWORD PTR _vehicleData+32
	jg	SHORT $LN17@ValidateVe
	mov	eax, DWORD PTR _vehicleData+32
	cmp	eax, DWORD PTR _vehicleData+36
	jg	SHORT $LN17@ValidateVe
	mov	eax, DWORD PTR _vehicleData+36
	cmp	eax, DWORD PTR _vehicleData+20
	jle	SHORT $LN15@ValidateVe
$LN17@ValidateVe:
; Line 1894
	push	1
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN16@ValidateVe
; Line 1895
	xor	eax, eax
	jmp	$LN19@ValidateVe
	jmp	SHORT $LN15@ValidateVe
$LN16@ValidateVe:
; Line 1896
	call	_AutoFixTach
$LN15@ValidateVe:
; Line 1901
	fld	DWORD PTR _vehicleData+80
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN4@ValidateVe
; Line 1909
	fld	DWORD PTR _vehicleData+48
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	$LN12@ValidateVe
	fld	DWORD PTR _vehicleData+52
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN11@ValidateVe
	fld	DWORD PTR _vehicleData+52
	fcomp	DWORD PTR _vehicleData+48
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	$LN12@ValidateVe
$LN11@ValidateVe:
	fld	DWORD PTR _vehicleData+56
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN10@ValidateVe
	fld	DWORD PTR _vehicleData+56
	fcomp	DWORD PTR _vehicleData+52
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	$LN12@ValidateVe
$LN10@ValidateVe:
	fld	DWORD PTR _vehicleData+60
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN9@ValidateVe
	fld	DWORD PTR _vehicleData+60
	fcomp	DWORD PTR _vehicleData+56
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	$LN12@ValidateVe
$LN9@ValidateVe:
	fld	DWORD PTR _vehicleData+64
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN8@ValidateVe
	fld	DWORD PTR _vehicleData+64
	fcomp	DWORD PTR _vehicleData+60
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN12@ValidateVe
$LN8@ValidateVe:
	fld	DWORD PTR _vehicleData+68
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN7@ValidateVe
	fld	DWORD PTR _vehicleData+68
	fcomp	DWORD PTR _vehicleData+64
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN12@ValidateVe
$LN7@ValidateVe:
	fld	DWORD PTR _vehicleData+72
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN6@ValidateVe
	fld	DWORD PTR _vehicleData+72
	fcomp	DWORD PTR _vehicleData+68
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN12@ValidateVe
$LN6@ValidateVe:
	fld	DWORD PTR _vehicleData+76
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN4@ValidateVe
	fld	DWORD PTR _vehicleData+76
	fcomp	DWORD PTR _vehicleData+72
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN4@ValidateVe
$LN12@ValidateVe:
; Line 1911
	push	2
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN5@ValidateVe
; Line 1912
	xor	eax, eax
	jmp	SHORT $LN19@ValidateVe
	jmp	SHORT $LN4@ValidateVe
$LN5@ValidateVe:
; Line 1913
	call	_AutoFixGears
$LN4@ValidateVe:
; Line 1916
	fild	DWORD PTR _vehicleData+104
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@ValidateVe
; Line 1918
	push	3
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN2@ValidateVe
; Line 1919
	xor	eax, eax
	jmp	SHORT $LN19@ValidateVe
	jmp	SHORT $LN1@ValidateVe
$LN2@ValidateVe:
; Line 1920
	call	_AutoFixWeight
$LN1@ValidateVe:
; Line 1923
	mov	eax, 1
$LN19@ValidateVe:
; Line 1924
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateVehicleData ENDP
_TEXT	ENDS
PUBLIC	_UpdateCameraVariables
PUBLIC	_ValidateCamera
EXTRN	_SIM_Powerkey_CB:PROC
EXTRN	_WriteUserDataEvent:PROC
EXTRN	_suData:BYTE
EXTRN	_notifyCameraChange:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidateCamera
_TEXT	SEGMENT
_ValidateCamera PROC					; COMDAT
; Line 1935
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1936
	cmp	DWORD PTR _tempCameraIndex, -1
	je	SHORT $LN15@ValidateCa@2
; Line 1937
	mov	eax, DWORD PTR _tempCameraIndex
	imul	eax, 12					; 0000000cH
	mov	cl, BYTE PTR _NewCameras[eax+8]
	mov	BYTE PTR _newSUCameraSelection, cl
$LN15@ValidateCa@2:
; Line 1940
	movzx	eax, BYTE PTR _newSUCameraSelection
	movzx	ecx, BYTE PTR _originalSUCameraSelection
	cmp	eax, ecx
	jne	SHORT $LN14@ValidateCa@2
	movzx	eax, BYTE PTR _newTDCameraSelection
	movzx	ecx, BYTE PTR _originalTDCameraSelection
	cmp	eax, ecx
	jne	SHORT $LN14@ValidateCa@2
; Line 1941
	mov	eax, 1
	jmp	$LN16@ValidateCa@2
$LN14@ValidateCa@2:
; Line 1944
	movzx	eax, BYTE PTR _newSUCameraSelection
	movzx	ecx, BYTE PTR _newTDCameraSelection
	or	eax, ecx
	mov	BYTE PTR _vehicleData+116, al
; Line 1947
	call	_notifyCameraChange
; Line 1950
	movzx	eax, BYTE PTR _newSUCameraSelection
	test	eax, eax
	je	$LN13@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	movzx	ecx, BYTE PTR _originalSUCameraSelection
	cmp	eax, ecx
	je	$LN13@ValidateCa@2
; Line 1956
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 14					; 0000000eH
	je	SHORT $LN11@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 12					; 0000000cH
	je	SHORT $LN11@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN11@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 10					; 0000000aH
	jne	SHORT $LN12@ValidateCa@2
$LN11@ValidateCa@2:
; Line 1958
	movzx	eax, BYTE PTR _suData+12
	test	eax, eax
	je	SHORT $LN9@ValidateCa@2
	movzx	eax, WORD PTR _suData+20
	cmp	eax, 370				; 00000172H
	jge	SHORT $LN10@ValidateCa@2
$LN9@ValidateCa@2:
; Line 1959
	push	8
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN10@ValidateCa@2
; Line 1961
	call	_UpdateCameraVariables
; Line 1962
	xor	eax, eax
	jmp	$LN16@ValidateCa@2
$LN10@ValidateCa@2:
; Line 1965
	jmp	SHORT $LN7@ValidateCa@2
$LN12@ValidateCa@2:
; Line 1967
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 8
	je	SHORT $LN5@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 11					; 0000000bH
	je	SHORT $LN5@ValidateCa@2
	movzx	eax, BYTE PTR _newSUCameraSelection
	cmp	eax, 9
	jne	SHORT $LN7@ValidateCa@2
$LN5@ValidateCa@2:
; Line 1969
	movzx	eax, BYTE PTR _suData+12
	test	eax, eax
	je	SHORT $LN3@ValidateCa@2
	movzx	eax, WORD PTR _suData+20
	cmp	eax, 340				; 00000154H
	jge	SHORT $LN7@ValidateCa@2
$LN3@ValidateCa@2:
; Line 1970
	push	5
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN7@ValidateCa@2
; Line 1972
	call	_UpdateCameraVariables
; Line 1973
	xor	eax, eax
	jmp	SHORT $LN16@ValidateCa@2
$LN7@ValidateCa@2:
; Line 1978
	mov	BYTE PTR _vehicleData+419, 0
; Line 1979
	push	6
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 1
	jne	SHORT $LN13@ValidateCa@2
; Line 1981
	push	2
	call	_WriteUserDataEvent
	add	esp, 4
; Line 1983
	push	0
	push	7
	call	_SIM_Powerkey_CB
	add	esp, 8
; Line 1987
	call	_UpdateCameraVariables
; Line 1988
	xor	eax, eax
	jmp	SHORT $LN16@ValidateCa@2
$LN13@ValidateCa@2:
; Line 1992
	call	_UpdateCameraVariables
; Line 1993
	mov	eax, 1
$LN16@ValidateCa@2:
; Line 1994
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateCamera ENDP
_TEXT	ENDS
PUBLIC	_ValidateDiffRatio
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ValidateDiffRatio
_TEXT	SEGMENT
_ValidateDiffRatio PROC					; COMDAT
; Line 1998
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1999
	fld	DWORD PTR _vehicleData+80
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@ValidateDi
; Line 2001
	push	4
	call	_VehicleSettingsPopUp
	add	esp, 4
	cmp	eax, 2
	jne	SHORT $LN1@ValidateDi
; Line 2002
	xor	eax, eax
	jmp	SHORT $LN3@ValidateDi
$LN1@ValidateDi:
; Line 2004
	mov	eax, 1
$LN3@ValidateDi:
; Line 2005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ValidateDiffRatio ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_iSort:PROC
EXTRN	_SetDefaultTach:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _AutoFixTach
_TEXT	SEGMENT
_i$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_AutoFixTach PROC					; COMDAT
; Line 2008
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2011
	mov	eax, DWORD PTR _vehicleData+24
	mov	DWORD PTR _i$[ebp], eax
; Line 2012
	mov	eax, DWORD PTR _vehicleData+32
	mov	DWORD PTR _i$[ebp+4], eax
; Line 2013
	mov	eax, DWORD PTR _vehicleData+36
	mov	DWORD PTR _i$[ebp+8], eax
; Line 2014
	mov	eax, DWORD PTR _vehicleData+20
	mov	DWORD PTR _i$[ebp+12], eax
; Line 2017
	fild	DWORD PTR _i$[ebp]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@AutoFixTac
	fild	DWORD PTR _i$[ebp+4]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@AutoFixTac
	fild	DWORD PTR _i$[ebp+8]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jnp	SHORT $LN1@AutoFixTac
	fild	DWORD PTR _i$[ebp+12]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN2@AutoFixTac
$LN1@AutoFixTac:
; Line 2019
	call	_SetDefaultTach
; Line 2020
	jmp	SHORT $LN3@AutoFixTac
$LN2@AutoFixTac:
; Line 2024
	push	4
	lea	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_iSort
	add	esp, 8
; Line 2027
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _vehicleData+24, eax
; Line 2028
	mov	eax, DWORD PTR _i$[ebp+4]
	mov	DWORD PTR _vehicleData+32, eax
; Line 2029
	mov	eax, DWORD PTR _i$[ebp+8]
	mov	DWORD PTR _vehicleData+36, eax
; Line 2030
	mov	eax, DWORD PTR _i$[ebp+12]
	mov	DWORD PTR _vehicleData+20, eax
$LN3@AutoFixTac:
; Line 2031
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@AutoFixTac
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@AutoFixTac:
	DD	1
	DD	$LN6@AutoFixTac
$LN6@AutoFixTac:
	DD	-24					; ffffffe8H
	DD	16					; 00000010H
	DD	$LN5@AutoFixTac
$LN5@AutoFixTac:
	DB	105					; 00000069H
	DB	0
_AutoFixTach ENDP
_TEXT	ENDS
PUBLIC	__real@40833333
PUBLIC	__$ArrayPad$
EXTRN	_fSort:PROC
EXTRN	_SetDefaultGears:PROC
;	COMDAT __real@40833333
CONST	SEGMENT
__real@40833333 DD 040833333r			; 4.1
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT _AutoFixGears
_TEXT	SEGMENT
_temp$ = -64						; size = 4
_f$ = -52						; size = 32
_i$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_AutoFixGears PROC					; COMDAT
; Line 2034
	push	ebp
	mov	ebp, esp
	sub	esp, 260				; 00000104H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-260]
	mov	ecx, 65					; 00000041H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2039
	fld	DWORD PTR _vehicleData+80
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN4@AutoFixGea
; Line 2040
	fld	DWORD PTR __real@40833333
	fstp	DWORD PTR _vehicleData+80
$LN4@AutoFixGea:
; Line 2043
	fldz
	fstp	DWORD PTR _temp$[ebp]
; Line 2044
	mov	DWORD PTR _i$[ebp], 0
$LN3@AutoFixGea:
; Line 2045
	cmp	DWORD PTR _i$[ebp], 8
	jge	SHORT $LN2@AutoFixGea
; Line 2046
	mov	eax, DWORD PTR _i$[ebp]
	fld	DWORD PTR _temp$[ebp]
	fadd	DWORD PTR _vehicleData[eax*4+48]
	fstp	DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	mov	DWORD PTR _i$[ebp], ecx
	jmp	SHORT $LN3@AutoFixGea
$LN2@AutoFixGea:
; Line 2048
	fld	DWORD PTR _temp$[ebp]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN1@AutoFixGea
; Line 2050
	call	_SetDefaultGears
; Line 2051
	jmp	$LN5@AutoFixGea
$LN1@AutoFixGea:
; Line 2056
	fld	DWORD PTR _vehicleData+76
	fstp	DWORD PTR _f$[ebp]
; Line 2057
	fld	DWORD PTR _vehicleData+72
	fstp	DWORD PTR _f$[ebp+4]
; Line 2058
	fld	DWORD PTR _vehicleData+68
	fstp	DWORD PTR _f$[ebp+8]
; Line 2059
	fld	DWORD PTR _vehicleData+64
	fstp	DWORD PTR _f$[ebp+12]
; Line 2060
	fld	DWORD PTR _vehicleData+60
	fstp	DWORD PTR _f$[ebp+16]
; Line 2061
	fld	DWORD PTR _vehicleData+56
	fstp	DWORD PTR _f$[ebp+20]
; Line 2062
	fld	DWORD PTR _vehicleData+52
	fstp	DWORD PTR _f$[ebp+24]
; Line 2063
	fld	DWORD PTR _vehicleData+48
	fstp	DWORD PTR _f$[ebp+28]
; Line 2066
	push	8
	lea	eax, DWORD PTR _f$[ebp]
	push	eax
	call	_fSort
	add	esp, 8
; Line 2069
	fld	DWORD PTR _f$[ebp]
	fstp	DWORD PTR _vehicleData+76
; Line 2070
	fld	DWORD PTR _f$[ebp+4]
	fstp	DWORD PTR _vehicleData+72
; Line 2071
	fld	DWORD PTR _f$[ebp+8]
	fstp	DWORD PTR _vehicleData+68
; Line 2072
	fld	DWORD PTR _f$[ebp+12]
	fstp	DWORD PTR _vehicleData+64
; Line 2073
	fld	DWORD PTR _f$[ebp+16]
	fstp	DWORD PTR _vehicleData+60
; Line 2074
	fld	DWORD PTR _f$[ebp+20]
	fstp	DWORD PTR _vehicleData+56
; Line 2075
	fld	DWORD PTR _f$[ebp+24]
	fstp	DWORD PTR _vehicleData+52
; Line 2076
	fld	DWORD PTR _f$[ebp+28]
	fstp	DWORD PTR _vehicleData+48
$LN5@AutoFixGea:
; Line 2077
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@AutoFixGea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 260				; 00000104H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@AutoFixGea:
	DD	1
	DD	$LN8@AutoFixGea
$LN8@AutoFixGea:
	DD	-52					; ffffffccH
	DD	32					; 00000020H
	DD	$LN7@AutoFixGea
$LN7@AutoFixGea:
	DB	102					; 00000066H
	DB	0
_AutoFixGears ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _AutoFixWeight
_TEXT	SEGMENT
_AutoFixWeight PROC					; COMDAT
; Line 2080
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2081
	mov	DWORD PTR _vehicleData+104, 3000	; 00000bb8H
; Line 2082
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_AutoFixWeight ENDP
_TEXT	ENDS
EXTRN	_GUI_ExecDialogBox:PROC
EXTRN	_popupCallback:PROC
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_systemSettingsPopupScreen:DWORD
EXTRN	_SetPopupDefaults:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _VehicleSettingsPopUp
_TEXT	SEGMENT
tv65 = -196						; size = 4
_screen$ = 8						; size = 4
_VehicleSettingsPopUp PROC				; COMDAT
; Line 2157
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2158
	push	1
	call	_SetPopupDefaults
	add	esp, 4
; Line 2160
	mov	eax, DWORD PTR _screen$[ebp]
	mov	DWORD PTR _systemSettingsPopupScreen, eax
	mov	ecx, DWORD PTR _systemSettingsPopupScreen
	mov	DWORD PTR tv65[ebp], ecx
	mov	edx, DWORD PTR tv65[ebp]
	sub	edx, 1
	mov	DWORD PTR tv65[ebp], edx
	cmp	DWORD PTR tv65[ebp], 7
	ja	$LN9@VehicleSet@3
	mov	eax, DWORD PTR tv65[ebp]
	jmp	DWORD PTR $LN13@VehicleSet@3[eax*4]
$LN8@VehicleSet@3:
; Line 2163
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _InvalidTachResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	$LN11@VehicleSet@3
$LN7@VehicleSet@3:
; Line 2165
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _InvalidGearResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	$LN11@VehicleSet@3
$LN6@VehicleSet@3:
; Line 2167
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _InvalidWeightResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	$LN11@VehicleSet@3
$LN5@VehicleSet@3:
; Line 2169
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _NoGearsResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	$LN11@VehicleSet@3
$LN4@VehicleSet@3:
; Line 2171
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _GoProWarningResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	SHORT $LN11@VehicleSet@3
$LN3@VehicleSet@3:
; Line 2173
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _ChangedCameraResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	SHORT $LN11@VehicleSet@3
$LN2@VehicleSet@3:
; Line 2175
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	5
	push	OFFSET _ResetCameraResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	SHORT $LN11@VehicleSet@3
$LN1@VehicleSet@3:
; Line 2177
	push	10					; 0000000aH
	push	10					; 0000000aH
	call	_WM_GetDesktopWindow
	push	eax
	push	OFFSET _popupCallback
	push	6
	push	OFFSET _SURev370WarningResources
	call	_GUI_ExecDialogBox
	add	esp, 24					; 00000018H
	jmp	SHORT $LN11@VehicleSet@3
$LN9@VehicleSet@3:
; Line 2180
	xor	eax, eax
$LN11@VehicleSet@3:
; Line 2181
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@VehicleSet@3:
	DD	$LN8@VehicleSet@3
	DD	$LN7@VehicleSet@3
	DD	$LN6@VehicleSet@3
	DD	$LN5@VehicleSet@3
	DD	$LN4@VehicleSet@3
	DD	$LN3@VehicleSet@3
	DD	$LN2@VehicleSet@3
	DD	$LN1@VehicleSet@3
_VehicleSettingsPopUp ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_bmGreenInputButton:BYTE
EXTRN	_bmRedInputButton:BYTE
EXTRN	_InAlarm:PROC
EXTRN	_bmBrownInputButton:BYTE
EXTRN	_GetAnalogInput:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetAnalogColorAndText
_TEXT	SEGMENT
_scratch$ = -28						; size = 20
__$ArrayPad$ = -4					; size = 4
_hBtn$ = 8						; size = 4
_index$ = 12						; size = 4
_SetAnalogColorAndText PROC				; COMDAT
; Line 2184
	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 2187
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _vehicleData[eax+147]
	test	ecx, ecx
	jne	SHORT $LN7@SetAnalogC
; Line 2188
	push	OFFSET $SG20811
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN6@SetAnalogC
$LN7@SetAnalogC:
; Line 2189
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 6
	add	eax, OFFSET _vehicleData+137
	push	eax
	mov	ecx, DWORD PTR _index$[ebp]
	push	ecx
	push	1
	call	_GetAnalogInput
	fstp	QWORD PTR [esp]
	push	OFFSET $SG20813
	lea	edx, DWORD PTR _scratch$[ebp]
	push	edx
	call	_sprintf
	add	esp, 20					; 00000014H
$LN6@SetAnalogC:
; Line 2190
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBtn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
; Line 2193
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _vehicleData[eax+147]
	test	ecx, ecx
	je	SHORT $LN4@SetAnalogC
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _vehicleData[eax+148]
	cmp	ecx, 2
	je	SHORT $LN5@SetAnalogC
	mov	eax, DWORD PTR _index$[ebp]
	shl	eax, 6
	movzx	ecx, BYTE PTR _vehicleData[eax+149]
	cmp	ecx, 1
	je	SHORT $LN5@SetAnalogC
$LN4@SetAnalogC:
; Line 2194
	push	OFFSET _bmBrownInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN1@SetAnalogC
$LN5@SetAnalogC:
; Line 2196
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	call	_InAlarm
	add	esp, 4
	test	eax, eax
	je	SHORT $LN2@SetAnalogC
; Line 2197
	push	OFFSET _bmRedInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 2198
	jmp	SHORT $LN1@SetAnalogC
$LN2@SetAnalogC:
; Line 2199
	push	OFFSET _bmGreenInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN1@SetAnalogC:
; Line 2200
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@SetAnalogC
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN12@SetAnalogC:
	DD	1
	DD	$LN11@SetAnalogC
$LN11@SetAnalogC:
	DD	-28					; ffffffe4H
	DD	20					; 00000014H
	DD	$LN10@SetAnalogC
$LN10@SetAnalogC:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
_SetAnalogColorAndText ENDP
_TEXT	ENDS
EXTRN	_GetDigitalText:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetDigitalColorAndText
_TEXT	SEGMENT
_hBtn$ = 8						; size = 4
_index$ = 12						; size = 4
_SetDigitalColorAndText PROC				; COMDAT
; Line 2203
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2204
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 47					; 0000002fH
	movzx	ecx, BYTE PTR _vehicleData[eax+419]
	test	ecx, ecx
	jne	SHORT $LN6@SetDigital
; Line 2205
	push	OFFSET _bmBrownInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN5@SetDigital
$LN6@SetDigital:
; Line 2207
	mov	eax, DWORD PTR _index$[ebp]
	add	eax, 4
	push	eax
	call	_InAlarm
	add	esp, 4
	test	eax, eax
	je	SHORT $LN4@SetDigital
; Line 2208
	push	OFFSET _bmRedInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
; Line 2209
	jmp	SHORT $LN5@SetDigital
$LN4@SetDigital:
; Line 2210
	push	OFFSET _bmGreenInputButton
	push	0
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetBitmap
	add	esp, 12					; 0000000cH
$LN5@SetDigital:
; Line 2212
	mov	eax, DWORD PTR _index$[ebp]
	imul	eax, 47					; 0000002fH
	movzx	ecx, BYTE PTR _vehicleData[eax+419]
	test	ecx, ecx
	jne	SHORT $LN2@SetDigital
; Line 2213
	push	OFFSET $SG20829
	mov	eax, DWORD PTR _hBtn$[ebp]
	push	eax
	call	_BUTTON_SetText
	add	esp, 8
	jmp	SHORT $LN7@SetDigital
$LN2@SetDigital:
; Line 2214
	mov	eax, DWORD PTR _index$[ebp]
	push	eax
	push	1
	call	_GetDigitalText
	add	esp, 8
	push	eax
	mov	ecx, DWORD PTR _hBtn$[ebp]
	push	ecx
	call	_BUTTON_SetText
	add	esp, 8
$LN7@SetDigital:
; Line 2215
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SetDigitalColorAndText ENDP
_TEXT	ENDS
PUBLIC	_GetCameraSelectionWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetCameraSelectionWindowHandle
_TEXT	SEGMENT
_GetCameraSelectionWindowHandle PROC			; COMDAT
; Line 2221
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2222
	mov	eax, DWORD PTR _hCameraSelection
; Line 2223
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetCameraSelectionWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_CameraSelectionCallback
EXTRN	_LISTVIEW_SetLFreeBorder:PROC
EXTRN	_LISTVIEW_SetSort:PROC
EXTRN	_LISTVIEW_EnableSort:PROC
EXTRN	_LISTVIEW_SetCompareFunc:PROC
EXTRN	_LISTVIEW_CompareText:PROC
EXTRN	_LISTVIEW_SetBkColor:PROC
EXTRN	_SCROLLBAR_SetWidth:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_LISTVIEW_SetSelUnsorted:PROC
EXTRN	_LISTVIEW_AddRow:PROC
EXTRN	_HEADER_SetHeight:PROC
EXTRN	_HEADER_SetTextAlign:PROC
EXTRN	_HEADER_SetFont:PROC
EXTRN	_LISTVIEW_GetHeader:PROC
EXTRN	_LISTVIEW_SetRowHeight:PROC
EXTRN	_LISTVIEW_SetFont:PROC
EXTRN	_LISTVIEW_SetAutoScrollV:PROC
EXTRN	_LISTVIEW_AddColumn:PROC
EXTRN	_WM_SetFocus:PROC
EXTRN	_LISTVIEW_CreateEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateCameraSelection
_TEXT	SEGMENT
_pDest$20846 = -48					; size = 8
_selectionIndex$ = -32					; size = 4
_i$ = -20						; size = 4
_hHeader$ = -8						; size = 4
_hParent$ = 8						; size = 4
_CreateCameraSelection PROC				; COMDAT
; Line 2226
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2230
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN6@CreateCame
; Line 2231
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN6@CreateCame:
; Line 2233
	push	33					; 00000021H
	call	_SetScreenType
	add	esp, 4
; Line 2235
	push	0
	push	OFFSET _CameraSelectionCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hCameraSelection, eax
	cmp	DWORD PTR _hCameraSelection, 0
	jg	SHORT $LN5@CreateCame
; Line 2236
	call	_SystemError
$LN5@CreateCame:
; Line 2238
	push	608					; 00000260H
	push	0
	push	2
	mov	eax, DWORD PTR _hCameraSelection
	push	eax
	push	205					; 000000cdH
	push	430					; 000001aeH
	push	50					; 00000032H
	push	30					; 0000001eH
	call	_LISTVIEW_CreateEx
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hCameraList, eax
; Line 2239
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_WM_SetFocus
	add	esp, 4
; Line 2240
	push	14					; 0000000eH
	push	OFFSET $SG20841
	push	200					; 000000c8H
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_AddColumn
	add	esp, 16					; 00000010H
; Line 2241
	push	14					; 0000000eH
	push	OFFSET $SG20842
	push	200					; 000000c8H
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_AddColumn
	add	esp, 16					; 00000010H
; Line 2242
	push	1
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetAutoScrollV
	add	esp, 8
; Line 2243
	push	OFFSET _GUI_Font20_ASCII
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetFont
	add	esp, 8
; Line 2244
	push	30					; 0000001eH
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetRowHeight
	add	esp, 8
; Line 2246
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_GetHeader
	add	esp, 4
	mov	DWORD PTR _hHeader$[ebp], eax
	push	OFFSET _GUI_Font20_ASCII
	mov	ecx, DWORD PTR _hHeader$[ebp]
	push	ecx
	call	_HEADER_SetFont
	add	esp, 8
; Line 2247
	push	14					; 0000000eH
	push	0
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_SetTextAlign
	add	esp, 12					; 0000000cH
; Line 2248
	push	14					; 0000000eH
	push	1
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_SetTextAlign
	add	esp, 12					; 0000000cH
; Line 2249
	push	25					; 00000019H
	mov	eax, DWORD PTR _hHeader$[ebp]
	push	eax
	call	_HEADER_SetHeight
	add	esp, 8
; Line 2251
	mov	DWORD PTR _i$[ebp], 0
; Line 2252
	mov	DWORD PTR _selectionIndex$[ebp], -1
$LN4@CreateCame:
; Line 2253
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	cmp	DWORD PTR _NewCameras[eax], 0
	je	SHORT $LN3@CreateCame
; Line 2257
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _NewCameras[eax]
	mov	DWORD PTR _pDest$20846[ebp], ecx
; Line 2258
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _NewCameras[eax+4]
	mov	DWORD PTR _pDest$20846[ebp+4], ecx
; Line 2261
	movzx	eax, BYTE PTR _originalSUCameraSelection
	mov	ecx, DWORD PTR _i$[ebp]
	imul	ecx, 12					; 0000000cH
	movzx	edx, BYTE PTR _NewCameras[ecx+8]
	cmp	eax, edx
	jne	SHORT $LN2@CreateCame
; Line 2262
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _selectionIndex$[ebp], eax
$LN2@CreateCame:
; Line 2264
	lea	eax, DWORD PTR _pDest$20846[ebp]
	push	eax
	mov	ecx, DWORD PTR _hCameraList
	push	ecx
	call	_LISTVIEW_AddRow
	add	esp, 8
; Line 2265
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
; Line 2266
	jmp	SHORT $LN4@CreateCame
$LN3@CreateCame:
; Line 2267
	cmp	DWORD PTR _selectionIndex$[ebp], -1
	jne	SHORT $LN1@CreateCame
; Line 2270
	mov	DWORD PTR _selectionIndex$[ebp], 0
$LN1@CreateCame:
; Line 2273
	mov	eax, DWORD PTR _selectionIndex$[ebp]
	mov	DWORD PTR _tempCameraIndex, eax
; Line 2274
	mov	eax, DWORD PTR _selectionIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hCameraList
	push	ecx
	call	_LISTVIEW_SetSelUnsorted
	add	esp, 8
; Line 2277
	push	35					; 00000023H
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	push	eax
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 2278
	push	16737599				; 00ff653fH
	push	2
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetBkColor
	add	esp, 12					; 0000000cH
; Line 2280
	push	OFFSET _LISTVIEW_CompareText
	push	0
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetCompareFunc
	add	esp, 12					; 0000000cH
; Line 2281
	push	OFFSET _LISTVIEW_CompareText
	push	1
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetCompareFunc
	add	esp, 12					; 0000000cH
; Line 2282
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_EnableSort
	add	esp, 4
; Line 2283
	push	0
	push	0
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetSort
	add	esp, 12					; 0000000cH
; Line 2286
	push	35					; 00000023H
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_SetLFreeBorder
	add	esp, 8
; Line 2288
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hCameraSelection
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 2289
	call	_ResetNewScreen
; Line 2290
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@CreateCame
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@CreateCame:
	DD	1
	DD	$LN10@CreateCame
$LN10@CreateCame:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN9@CreateCame
$LN9@CreateCame:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	0
_CreateCameraSelection ENDP
_TEXT	ENDS
EXTRN	_bmCameraText:BYTE
EXTRN	_LISTVIEW_GetSelUnsorted:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CameraSelectionCallback
_TEXT	SEGMENT
tv64 = -220						; size = 4
_NCode$ = -20						; size = 4
_Id$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_CameraSelectionCallback PROC				; COMDAT
; Line 2294
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2297
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN2@CameraSele
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	SHORT $LN5@CameraSele
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN7@CameraSele
	jmp	$LN1@CameraSele
$LN7@CameraSele:
; Line 2300
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN6@CameraSele
; Line 2302
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 2303
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN6@CameraSele:
; Line 2305
	jmp	$LN10@CameraSele
$LN5@CameraSele:
; Line 2308
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _NCode$[ebp], ecx
; Line 2309
	cmp	DWORD PTR _NCode$[ebp], 1
	jne	SHORT $LN4@CameraSele
; Line 2311
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 2312
	cmp	DWORD PTR _Id$[ebp], 608		; 00000260H
	jne	SHORT $LN4@CameraSele
; Line 2314
	mov	eax, DWORD PTR _hCameraList
	push	eax
	call	_LISTVIEW_GetSelUnsorted
	add	esp, 4
	mov	DWORD PTR _tempCameraIndex, eax
$LN4@CameraSele:
; Line 2322
	jmp	SHORT $LN10@CameraSele
$LN2@CameraSele:
; Line 2325
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2326
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmCameraText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2327
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2328
	call	_DrawSignalStrength
; Line 2329
	jmp	SHORT $LN10@CameraSele
$LN1@CameraSele:
; Line 2332
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN10@CameraSele:
; Line 2334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CameraSelectionCallback ENDP
_TEXT	ENDS
PUBLIC	_GetCameraDelayWindowHandle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GetCameraDelayWindowHandle
_TEXT	SEGMENT
_GetCameraDelayWindowHandle PROC			; COMDAT
; Line 2340
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2341
	mov	eax, DWORD PTR _hCameraDelay
; Line 2342
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetCameraDelayWindowHandle ENDP
_TEXT	ENDS
PUBLIC	_CameraDelayCallback
EXTRN	_LISTWHEEL_SetPos:PROC
EXTRN	_LISTWHEEL_SetTextAlign:PROC
EXTRN	_LISTWHEEL_SetFont:PROC
EXTRN	_LISTWHEEL_SetSnapPosition:PROC
EXTRN	_LISTWHEEL_SetLineHeight:PROC
EXTRN	_LISTWHEEL_CreateEx:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CreateCameraDelay
_TEXT	SEGMENT
_hParent$ = 8						; size = 4
_CreateCameraDelay PROC					; COMDAT
; Line 2360
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2361
	cmp	DWORD PTR _hParent$[ebp], 0
	je	SHORT $LN8@CreateCame@2
; Line 2362
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN8@CreateCame@2:
; Line 2364
	push	34					; 00000022H
	call	_SetScreenType
	add	esp, 4
; Line 2366
	push	0
	push	OFFSET _CameraDelayCallback
	push	8194					; 00002002H
	push	272					; 00000110H
	push	480					; 000001e0H
	push	0
	push	0
	call	_WM_CreateWindow
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hCameraDelay, eax
	cmp	DWORD PTR _hCameraDelay, 0
	jg	SHORT $LN7@CreateCame@2
; Line 2367
	call	_SystemError
$LN7@CreateCame@2:
; Line 2369
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _ones, eax
; Line 2370
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 127				; 0000007fH
	cdq
	mov	ecx, 10					; 0000000aH
	idiv	ecx
	mov	DWORD PTR _tenths, edx
; Line 2373
	push	OFFSET _Digits
	push	609					; 00000261H
	push	0
	push	3
	mov	eax, DWORD PTR _hCameraDelay
	push	eax
	push	208					; 000000d0H
	push	69					; 00000045H
	push	50					; 00000032H
	push	225					; 000000e1H
	call	_LISTWHEEL_CreateEx
	add	esp, 36					; 00000024H
	mov	DWORD PTR _hOnesWheel, eax
; Line 2374
	push	41					; 00000029H
	mov	eax, DWORD PTR _hOnesWheel
	push	eax
	call	_LISTWHEEL_SetLineHeight
	add	esp, 8
; Line 2375
	push	87					; 00000057H
	mov	eax, DWORD PTR _hOnesWheel
	push	eax
	call	_LISTWHEEL_SetSnapPosition
	add	esp, 8
; Line 2376
	push	OFFSET _GUI_Font24_ASCII
	mov	eax, DWORD PTR _hOnesWheel
	push	eax
	call	_LISTWHEEL_SetFont
	add	esp, 8
; Line 2377
	push	2
	mov	eax, DWORD PTR _hOnesWheel
	push	eax
	call	_LISTWHEEL_SetTextAlign
	add	esp, 8
; Line 2378
	cmp	DWORD PTR _ones, 0
	jge	SHORT $LN6@CreateCame@2
; Line 2379
	mov	DWORD PTR _ones, 0
	jmp	SHORT $LN5@CreateCame@2
$LN6@CreateCame@2:
; Line 2380
	cmp	DWORD PTR _ones, 9
	jle	SHORT $LN5@CreateCame@2
; Line 2381
	mov	DWORD PTR _ones, 9
$LN5@CreateCame@2:
; Line 2382
	mov	eax, DWORD PTR _ones
	push	eax
	mov	ecx, DWORD PTR _hOnesWheel
	push	ecx
	call	_LISTWHEEL_SetPos
	add	esp, 8
; Line 2383
	mov	eax, DWORD PTR _ones
	push	eax
	mov	ecx, DWORD PTR _hOnesWheel
	push	ecx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 2386
	push	OFFSET _Digits
	push	610					; 00000262H
	push	0
	push	3
	mov	eax, DWORD PTR _hCameraDelay
	push	eax
	push	208					; 000000d0H
	push	69					; 00000045H
	push	50					; 00000032H
	push	304					; 00000130H
	call	_LISTWHEEL_CreateEx
	add	esp, 36					; 00000024H
	mov	DWORD PTR _hTenthsWheel, eax
; Line 2387
	push	41					; 00000029H
	mov	eax, DWORD PTR _hTenthsWheel
	push	eax
	call	_LISTWHEEL_SetLineHeight
	add	esp, 8
; Line 2388
	push	87					; 00000057H
	mov	eax, DWORD PTR _hTenthsWheel
	push	eax
	call	_LISTWHEEL_SetSnapPosition
	add	esp, 8
; Line 2389
	push	OFFSET _GUI_Font24_ASCII
	mov	eax, DWORD PTR _hTenthsWheel
	push	eax
	call	_LISTWHEEL_SetFont
	add	esp, 8
; Line 2390
	push	2
	mov	eax, DWORD PTR _hTenthsWheel
	push	eax
	call	_LISTWHEEL_SetTextAlign
	add	esp, 8
; Line 2391
	cmp	DWORD PTR _tenths, 0
	jge	SHORT $LN3@CreateCame@2
; Line 2392
	mov	DWORD PTR _tenths, 0
	jmp	SHORT $LN2@CreateCame@2
$LN3@CreateCame@2:
; Line 2393
	cmp	DWORD PTR _tenths, 9
	jle	SHORT $LN2@CreateCame@2
; Line 2394
	mov	DWORD PTR _tenths, 9
$LN2@CreateCame@2:
; Line 2395
	mov	eax, DWORD PTR _tenths
	push	eax
	mov	ecx, DWORD PTR _hTenthsWheel
	push	ecx
	call	_LISTWHEEL_SetPos
	add	esp, 8
; Line 2396
	mov	eax, DWORD PTR _tenths
	push	eax
	mov	ecx, DWORD PTR _hTenthsWheel
	push	ecx
	call	_LISTWHEEL_SetSel
	add	esp, 8
; Line 2398
	push	0
	push	125					; 0000007dH
	push	0
	mov	eax, DWORD PTR _hCameraDelay
	push	eax
	call	_WM_CreateTimer
	add	esp, 16					; 00000010H
	mov	DWORD PTR _hScreenTimer, eax
; Line 2399
	call	_ResetNewScreen
; Line 2400
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CreateCameraDelay ENDP
_TEXT	ENDS
PUBLIC	_SetCameraDelay
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SetCameraDelay
_TEXT	SEGMENT
_SetCameraDelay PROC					; COMDAT
; Line 2403
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2404
	movzx	eax, BYTE PTR _vehicleData+12
	and	eax, 128				; 00000080H
	mov	ecx, DWORD PTR _ones
	imul	ecx, 10					; 0000000aH
	add	eax, DWORD PTR _tenths
	add	ecx, eax
	mov	BYTE PTR _vehicleData+12, cl
; Line 2405
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SetCameraDelay ENDP
_TEXT	ENDS
EXTRN	_GUI_FontD32:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _CameraDelayCallback
_TEXT	SEGMENT
tv64 = -208						; size = 4
_Id$ = -8						; size = 4
_pMsg$ = 8						; size = 4
_CameraDelayCallback PROC				; COMDAT
; Line 2408
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2411
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN2@CameraDela
	cmp	DWORD PTR tv64[ebp], 38			; 00000026H
	je	SHORT $LN8@CameraDela
	cmp	DWORD PTR tv64[ebp], 275		; 00000113H
	je	SHORT $LN10@CameraDela
	jmp	$LN1@CameraDela
$LN10@CameraDela:
; Line 2414
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	ecx, DWORD PTR _hScreenTimer
	jne	SHORT $LN9@CameraDela
; Line 2416
	push	125					; 0000007dH
	mov	eax, DWORD PTR _hScreenTimer
	push	eax
	call	_WM_RestartTimer
	add	esp, 8
; Line 2417
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	_WM_InvalidateWindow
	add	esp, 4
$LN9@CameraDela:
; Line 2419
	jmp	$LN13@CameraDela
$LN8@CameraDela:
; Line 2422
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_WM_GetId
	add	esp, 4
	mov	DWORD PTR _Id$[ebp], eax
; Line 2423
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 4
	jne	$LN7@CameraDela
; Line 2424
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetVelocity
	add	esp, 4
	push	eax
	call	_abs
	add	esp, 4
	cmp	eax, 1
	jg	SHORT $LN7@CameraDela
; Line 2426
	cmp	DWORD PTR _Id$[ebp], 609		; 00000261H
	jne	SHORT $LN5@CameraDela
; Line 2427
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _ones, eax
	mov	edx, DWORD PTR _ones
	push	edx
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_SetSel
	add	esp, 8
	jmp	SHORT $LN7@CameraDela
$LN5@CameraDela:
; Line 2428
	cmp	DWORD PTR _Id$[ebp], 610		; 00000262H
	jne	SHORT $LN7@CameraDela
; Line 2429
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_GetPos
	add	esp, 4
	mov	DWORD PTR _tenths, eax
	mov	edx, DWORD PTR _tenths
	push	edx
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_LISTWHEEL_SetSel
	add	esp, 8
$LN7@CameraDela:
; Line 2431
	jmp	$LN13@CameraDela
$LN2@CameraDela:
; Line 2434
	push	0
	push	0
	push	OFFSET _bmBackgroundWithPanel
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2435
	push	50					; 00000032H
	push	225					; 000000e1H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2436
	push	50					; 00000032H
	push	304					; 00000130H
	push	OFFSET _bmNarrowSpinner
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2437
	push	0
	push	60					; 0000003cH
	push	OFFSET _bmCameraText
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2438
	push	229					; 000000e5H
	push	0
	push	OFFSET _bmleftarrow
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 2440
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 2441
	push	OFFSET _GUI_Font24_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 2442
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 2443
	push	135					; 00000087H
	push	120					; 00000078H
	push	OFFSET $SG20911
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 2444
	push	135					; 00000087H
	push	380					; 0000017cH
	push	OFFSET $SG20912
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 2445
	push	OFFSET _GUI_FontD32
	call	_GUI_SetFont
	add	esp, 4
; Line 2446
	push	120					; 00000078H
	push	299					; 0000012bH
	push	OFFSET $SG20913
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 2447
	call	_DrawSignalStrength
; Line 2448
	jmp	SHORT $LN13@CameraDela
$LN1@CameraDela:
; Line 2451
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN13@CameraDela:
; Line 2453
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_CameraDelayCallback ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _UpdateCameraVariables
_TEXT	SEGMENT
_UpdateCameraVariables PROC				; COMDAT
; Line 2459
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2460
	mov	al, BYTE PTR _newSUCameraSelection
	mov	BYTE PTR _originalSUCameraSelection, al
; Line 2461
	mov	al, BYTE PTR _newTDCameraSelection
	mov	BYTE PTR _originalTDCameraSelection, al
; Line 2462
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_UpdateCameraVariables ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetSUCam
_TEXT	SEGMENT
_GetSUCam PROC						; COMDAT
; Line 2470
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2471
	mov	al, BYTE PTR _newSUCameraSelection
; Line 2472
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetSUCam ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _GetTDCam
_TEXT	SEGMENT
_GetTDCam PROC						; COMDAT
; Line 2475
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 2476
	mov	al, BYTE PTR _newTDCameraSelection
; Line 2477
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GetTDCam ENDP
_TEXT	ENDS
END
