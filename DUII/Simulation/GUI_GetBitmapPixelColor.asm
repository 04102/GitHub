; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_GetBitmapPixelColor.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_GetBitmapPixelColor
EXTRN	_GUI_GetBitmapPixelIndex:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_getbitmappixelcolor.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_GetBitmapPixelColor
_TEXT	SEGMENT
_Index$ = -8						; size = 4
_pBMP$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_GUI_GetBitmapPixelColor PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 36
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pBMP$[ebp]
	push	edx
	call	_GUI_GetBitmapPixelIndex
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Index$[ebp], eax
; Line 37
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	movzx	edx, BYTE PTR [ecx+4]
	test	edx, edx
	je	SHORT $LN1@GUI_GetBit
	cmp	DWORD PTR _Index$[ebp], 0
	jne	SHORT $LN1@GUI_GetBit
; Line 38
	mov	eax, 268435455				; 0fffffffH
	jmp	SHORT $LN2@GUI_GetBit
$LN1@GUI_GetBit:
; Line 40
	mov	eax, DWORD PTR _pBMP$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+8]
	mov	eax, DWORD PTR _Index$[ebp]
	mov	eax, DWORD PTR [edx+eax*4]
$LN2@GUI_GetBit:
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_GetBitmapPixelColor ENDP
_TEXT	ENDS
END
