; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Antialias\GUIAA_Char4Ext.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUIPROP_AA4_EXT_DispChar
EXTRN	_GUI_AA__DrawCharAA4:PROC
EXTRN	_GUI_pLCD_APIList:DWORD
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	_GUIPROP_EXT__FindChar:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\antialias\guiaa_char4ext.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUIPROP_AA4_EXT_DispChar
_TEXT	SEGMENT
_pCharInfo$ = -56					; size = 4
_pPropExt$ = -44					; size = 4
_OldDrawMode$ = -32					; size = 4
_DrawMode$ = -20					; size = 4
_BytesPerLine$ = -8					; size = 4
_c$ = 8							; size = 2
_GUIPROP_AA4_EXT_DispChar PROC				; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	movsx	eax, WORD PTR _GUI_Context+42
	mov	DWORD PTR _DrawMode$[ebp], eax
; Line 44
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	mov	edx, DWORD PTR [ecx+28]
	push	edx
	call	_GUIPROP_EXT__FindChar
	add	esp, 8
	mov	DWORD PTR _pPropExt$[ebp], eax
; Line 45
	cmp	DWORD PTR _pPropExt$[ebp], 0
	je	$LN4@GUIPROP_AA
; Line 46
	movzx	eax, WORD PTR _c$[ebp]
	mov	ecx, DWORD PTR _pPropExt$[ebp]
	movzx	edx, WORD PTR [ecx]
	sub	eax, edx
	imul	eax, 12					; 0000000cH
	mov	ecx, DWORD PTR _pPropExt$[ebp]
	add	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 47
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax]
	add	ecx, 1
	sar	ecx, 1
	mov	DWORD PTR _BytesPerLine$[ebp], ecx
; Line 48
	mov	eax, DWORD PTR _DrawMode$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _OldDrawMode$[ebp], eax
; Line 50
	cmp	DWORD PTR _GUI_pLCD_APIList, 0
	je	SHORT $LN2@GUIPROP_AA
; Line 60
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine$[ebp]
	push	edx
	push	4
	push	1
	push	1
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+36
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movsx	eax, BYTE PTR [edx+3]
	add	ecx, eax
	push	ecx
	movsx	ecx, WORD PTR _GUI_Context+34
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movsx	eax, BYTE PTR [edx+2]
	add	ecx, eax
	push	ecx
	mov	ecx, DWORD PTR _GUI_pLCD_APIList
	mov	edx, DWORD PTR [ecx]
	call	edx
	add	esp, 40					; 00000028H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 61
	jmp	SHORT $LN1@GUIPROP_AA
$LN2@GUIPROP_AA:
; Line 70
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine$[ebp]
	push	edx
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+1]
	push	ecx
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movzx	eax, BYTE PTR [edx]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+36
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movsx	eax, BYTE PTR [edx+3]
	add	ecx, eax
	push	ecx
	movsx	ecx, WORD PTR _GUI_Context+34
	mov	edx, DWORD PTR _pCharInfo$[ebp]
	movsx	eax, BYTE PTR [edx+2]
	add	ecx, eax
	push	ecx
	call	_GUI_AA__DrawCharAA4
	add	esp, 24					; 00000018H
$LN1@GUIPROP_AA:
; Line 72
	mov	eax, DWORD PTR _OldDrawMode$[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 73
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	movzx	ecx, BYTE PTR [eax+4]
	movsx	edx, WORD PTR _GUI_Context+34
	add	edx, ecx
	mov	WORD PTR _GUI_Context+34, dx
$LN4@GUIPROP_AA:
; Line 75
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIPROP_AA4_EXT_DispChar ENDP
_TEXT	ENDS
END
