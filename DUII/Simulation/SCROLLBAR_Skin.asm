; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\SCROLLBAR_Skin.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

EXTRN	_SCROLLBAR__DefaultProps:BYTE
_DATA	SEGMENT
__Skin	DD	FLAT:__Paint
	DD	FLAT:__Create
	DD	FLAT:_SCROLLBAR__DefaultProps+12
_DATA	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WIDGET__GetClientRect:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_SCROLLBAR_LockH:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\scrollbar_skin.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
_pWidget$ = -152					; size = 4
_ItemInfo$ = -140					; size = 32
_SkinInfo$ = -100					; size = 8
_pfDrawSkin$ = -84					; size = 4
_Pos$ = -72						; size = 36
_RectClient$ = -28					; size = 8
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 125
	push	ebp
	mov	ebp, esp
	sub	esp, 348				; 0000015cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-348]
	mov	ecx, 87					; 00000057H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 137
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_SCROLLBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 138
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR _pWidget$[ebp], eax
; Line 139
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _pfDrawSkin$[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _SkinInfo$[ebp+4], ecx
; Line 141
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _SkinInfo$[ebp], ecx
; Line 142
	lea	eax, DWORD PTR _Pos$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CalcPositions
	add	esp, 8
; Line 143
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 147
	lea	eax, DWORD PTR _RectClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWidget$[ebp]
	push	ecx
	call	_WIDGET__GetClientRect
	add	esp, 8
; Line 151
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 152
	movsx	eax, WORD PTR _RectClient$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 153
	movsx	eax, WORD PTR _RectClient$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 154
	lea	eax, DWORD PTR _SkinInfo$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 158
	mov	DWORD PTR _ItemInfo$[ebp+4], 6
; Line 159
	mov	eax, DWORD PTR _Pos$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 160
	mov	eax, DWORD PTR _Pos$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 161
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 165
	mov	DWORD PTR _ItemInfo$[ebp+4], 14		; 0000000eH
; Line 166
	mov	eax, DWORD PTR _Pos$[ebp+4]
	add	eax, 1
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 167
	mov	eax, DWORD PTR _Pos$[ebp+8]
	sub	eax, 1
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 168
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 169
	mov	DWORD PTR _ItemInfo$[ebp+4], 15		; 0000000fH
; Line 170
	mov	eax, DWORD PTR _Pos$[ebp+12]
	add	eax, 1
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 171
	mov	eax, DWORD PTR _Pos$[ebp+16]
	sub	eax, 1
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 172
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 176
	mov	DWORD PTR _ItemInfo$[ebp+4], 17		; 00000011H
; Line 177
	mov	eax, DWORD PTR _Pos$[ebp+8]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 178
	mov	eax, DWORD PTR _Pos$[ebp+12]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 179
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 183
	mov	DWORD PTR _ItemInfo$[ebp+4], 7
; Line 184
	mov	eax, DWORD PTR _Pos$[ebp+16]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 185
	mov	eax, DWORD PTR _Pos$[ebp+20]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 186
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 190
	mov	eax, DWORD PTR _Pos$[ebp+20]
	cmp	eax, DWORD PTR _Pos$[ebp+24]
	je	SHORT $LN2@Paint
; Line 191
	mov	DWORD PTR _ItemInfo$[ebp+4], 10		; 0000000aH
; Line 192
	mov	eax, DWORD PTR _Pos$[ebp+20]
	add	eax, 1
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 193
	mov	eax, DWORD PTR _Pos$[ebp+24]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 194
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Paint:
; Line 196
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 348				; 0000015cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@Paint:
	DD	4
	DD	$LN8@Paint
$LN8@Paint:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN4@Paint
	DD	-72					; ffffffb8H
	DD	36					; 00000024H
	DD	$LN5@Paint
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN6@Paint
	DD	-140					; ffffff74H
	DD	32					; 00000020H
	DD	$LN7@Paint
$LN7@Paint:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN6@Paint:
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@Paint:
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	0
$LN4@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI__DivideRound32:PROC
EXTRN	_SCROLLBAR__Rect2VRect:PROC
EXTRN	_GUI_MoveRect:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetWindowRectEx:PROC
EXTRN	_WM_GetScrollbarV:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcPositions
_TEXT	SEGMENT
tv76 = -416						; size = 4
_y0$ = -216						; size = 4
_x0$ = -204						; size = 4
_rSub$ = -192						; size = 8
_r$ = -176						; size = 8
_hWin$ = -160						; size = 4
_xSizeThumbArea$ = -148					; size = 4
_NumItems$ = -136					; size = 4
_ThumbSize$ = -124					; size = 4
_xSizeMoveable$ = -112					; size = 4
_xSize$ = -100						; size = 4
_xSizeButton$ = -88					; size = 4
_ItemInfo$ = -76					; size = 32
_SkinInfo$ = -36					; size = 8
_pfDrawSkin$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pPos$ = 12						; size = 4
__CalcPositions PROC					; COMDAT
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 416				; 000001a0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-416]
	mov	ecx, 104				; 00000068H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 52
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_SCROLLBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 53
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _r$[ebp], ecx
	mov	DWORD PTR _r$[ebp+4], edx
; Line 54
	movsx	eax, WORD PTR _r$[ebp]
	mov	DWORD PTR _x0$[ebp], eax
; Line 55
	movsx	eax, WORD PTR _r$[ebp+2]
	mov	DWORD PTR _y0$[ebp], eax
; Line 56
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	je	SHORT $LN11@CalcPositi
	movsx	edx, WORD PTR _r$[ebp+6]
	mov	DWORD PTR tv76[ebp], edx
	jmp	SHORT $LN12@CalcPositi
$LN11@CalcPositi:
	movsx	eax, WORD PTR _r$[ebp+4]
	mov	DWORD PTR tv76[ebp], eax
$LN12@CalcPositi:
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR [ecx+24], edx
; Line 60
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _SkinInfo$[ebp], ecx
; Line 61
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _pfDrawSkin$[ebp], ecx
; Line 62
	mov	DWORD PTR _ItemInfo$[ebp+4], 23		; 00000017H
; Line 63
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 64
	movsx	eax, WORD PTR _r$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 65
	movsx	eax, WORD PTR _r$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 66
	movsx	eax, WORD PTR _r$[ebp+4]
	mov	DWORD PTR _ItemInfo$[ebp+20], eax
; Line 67
	movsx	eax, WORD PTR _r$[ebp+6]
	mov	DWORD PTR _ItemInfo$[ebp+24], eax
; Line 68
	lea	eax, DWORD PTR _SkinInfo$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 69
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _xSizeButton$[ebp], eax
; Line 73
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+52]
	cmp	ecx, 255				; 000000ffH
	jne	SHORT $LN8@CalcPositi
; Line 74
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 75
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN8@CalcPositi
; Line 76
	lea	eax, DWORD PTR _rSub$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 77
	movsx	eax, WORD PTR _r$[ebp+4]
	movsx	ecx, WORD PTR _rSub$[ebp+4]
	cmp	eax, ecx
	jne	SHORT $LN8@CalcPositi
; Line 78
	movsx	eax, WORD PTR _rSub$[ebp]
	sub	eax, 1
	mov	WORD PTR _r$[ebp+4], ax
$LN8@CalcPositi:
; Line 82
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+52]
	cmp	ecx, 254				; 000000feH
	jne	SHORT $LN5@CalcPositi
; Line 83
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 84
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN5@CalcPositi
; Line 85
	lea	eax, DWORD PTR _rSub$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 86
	movsx	eax, WORD PTR _r$[ebp+6]
	movsx	ecx, WORD PTR _rSub$[ebp+6]
	cmp	eax, ecx
	jne	SHORT $LN5@CalcPositi
; Line 87
	movsx	eax, WORD PTR _rSub$[ebp+2]
	sub	eax, 1
	mov	WORD PTR _r$[ebp+6], ax
$LN5@CalcPositi:
; Line 94
	mov	eax, DWORD PTR _y0$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	neg	ecx
	push	ecx
	lea	edx, DWORD PTR _r$[ebp]
	push	edx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 98
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_SCROLLBAR__Rect2VRect
	add	esp, 8
; Line 99
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _NumItems$[ebp], ecx
; Line 100
	movsx	eax, WORD PTR _r$[ebp+4]
	movsx	ecx, WORD PTR _r$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xSize$[ebp], eax
; Line 101
	mov	eax, DWORD PTR _xSizeButton$[ebp]
	shl	eax, 1
	mov	ecx, DWORD PTR _xSize$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _xSizeThumbArea$[ebp], ecx
; Line 102
	mov	eax, DWORD PTR _NumItems$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _xSizeThumbArea$[ebp]
	imul	edx, DWORD PTR [ecx+88]
	push	edx
	call	_GUI__DivideRound32
	add	esp, 8
	mov	DWORD PTR _ThumbSize$[ebp], eax
; Line 103
	cmp	DWORD PTR _ThumbSize$[ebp], 6
	jge	SHORT $LN2@CalcPositi
; Line 104
	mov	DWORD PTR _ThumbSize$[ebp], 6
$LN2@CalcPositi:
; Line 106
	mov	eax, DWORD PTR _ThumbSize$[ebp]
	cmp	eax, DWORD PTR _xSizeThumbArea$[ebp]
	jle	SHORT $LN1@CalcPositi
; Line 107
	mov	eax, DWORD PTR _xSizeThumbArea$[ebp]
	mov	DWORD PTR _ThumbSize$[ebp], eax
$LN1@CalcPositi:
; Line 109
	mov	eax, DWORD PTR _xSizeThumbArea$[ebp]
	sub	eax, DWORD PTR _ThumbSize$[ebp]
	mov	DWORD PTR _xSizeMoveable$[ebp], eax
; Line 110
	movsx	eax, WORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 111
	mov	eax, DWORD PTR _xSizeButton$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [ecx+4], eax
; Line 112
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 113
	mov	eax, DWORD PTR _xSize$[ebp]
	sub	eax, DWORD PTR _xSizeButton$[ebp]
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 114
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	esi, DWORD PTR [eax+4]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _NumItems$[ebp]
	sub	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xSizeMoveable$[ebp]
	imul	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI__DivideRound32
	add	esp, 8
	lea	edx, DWORD PTR [esi+eax+1]
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [eax+8], edx
; Line 115
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _ThumbSize$[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	ecx, DWORD PTR _pPos$[ebp]
	mov	DWORD PTR [ecx+12], eax
; Line 116
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	ecx, DWORD PTR _xSizeMoveable$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 117
	mov	eax, DWORD PTR _pPos$[ebp]
	mov	ecx, DWORD PTR _ThumbSize$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 118
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 119
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN18@CalcPositi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 416				; 000001a0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN18@CalcPositi:
	DD	4
	DD	$LN17@CalcPositi
$LN17@CalcPositi:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN13@CalcPositi
	DD	-76					; ffffffb4H
	DD	32					; 00000020H
	DD	$LN14@CalcPositi
	DD	-176					; ffffff50H
	DD	8
	DD	$LN15@CalcPositi
	DD	-192					; ffffff40H
	DD	8
	DD	$LN16@CalcPositi
$LN16@CalcPositi:
	DB	114					; 00000072H
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	0
$LN15@CalcPositi:
	DB	114					; 00000072H
	DB	0
$LN14@CalcPositi:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN13@CalcPositi:
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__CalcPositions ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_ItemInfo$ = -76					; size = 32
_pfDrawSkin$ = -36					; size = 4
_pObj$ = -24						; size = 4
_SkinInfo$ = -12					; size = 8
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 272				; 00000110H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-272]
	mov	ecx, 68					; 00000044H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 211
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_SCROLLBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 212
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _pfDrawSkin$[ebp], ecx
; Line 213
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 8
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	DWORD PTR _SkinInfo$[ebp], ecx
; Line 214
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+76], OFFSET __CalcPositions
; Line 215
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 219
	mov	DWORD PTR _ItemInfo$[ebp+4], 0
; Line 220
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 221
	lea	eax, DWORD PTR _SkinInfo$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+28], eax
; Line 222
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawSkin$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 223
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Create
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 272				; 00000110H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@Create:
	DD	2
	DD	$LN5@Create
$LN5@Create:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@Create
	DD	-76					; ffffffb4H
	DD	32					; 00000020H
	DD	$LN4@Create
$LN4@Create:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN3@Create:
	DB	83					; 00000053H
	DB	107					; 0000006bH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__Create ENDP
_TEXT	ENDS
PUBLIC	_SCROLLBAR_SetSkin
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_SetHasTrans:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SCROLLBAR_SetSkin
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pfDrawSkin$ = 12					; size = 4
_SCROLLBAR_SetSkin PROC					; COMDAT
; Line 251
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 255
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_SCROLLBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 259
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+72], OFFSET __Skin
; Line 260
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+76], OFFSET __CalcPositions
; Line 264
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pfDrawSkin$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 265
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 269
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_SetHasTrans
	add	esp, 4
; Line 270
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 272
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_SCROLLBAR_SetSkin ENDP
_TEXT	ENDS
PUBLIC	_SCROLLBAR_SetDefaultSkin
EXTRN	_SCROLLBAR__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _SCROLLBAR_SetDefaultSkin
_TEXT	SEGMENT
_pfDrawSkin$ = 8					; size = 4
_SCROLLBAR_SetDefaultSkin PROC				; COMDAT
; Line 278
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 279
	mov	DWORD PTR _SCROLLBAR__pSkinDefault, OFFSET __Skin
; Line 280
	mov	eax, DWORD PTR _pfDrawSkin$[ebp]
	mov	DWORD PTR _SCROLLBAR__DefaultProps+12, eax
; Line 281
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_SCROLLBAR_SetDefaultSkin ENDP
_TEXT	ENDS
END
