; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DrawRoundedFrame.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_DrawRoundedFrame
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_DrawRoundedRect:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_drawroundedframe.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DrawRoundedFrame
_TEXT	SEGMENT
_Rect$8654 = -12					; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_w$ = 28						; size = 4
_GUI_DrawRoundedFrame PROC				; COMDAT
; Line 129
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 130
	cmp	DWORD PTR _w$[ebp], 1
	jne	SHORT $LN6@GUI_DrawRo
; Line 131
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 132
	jmp	$LN7@GUI_DrawRo
$LN6@GUI_DrawRo:
; Line 138
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 139
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 140
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$8654[ebp], ax
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _Rect$8654[ebp+4], ax
; Line 141
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$8654[ebp+2], ax
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _Rect$8654[ebp+6], ax
; Line 142
	lea	eax, DWORD PTR _Rect$8654[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN7@GUI_DrawRo
$LN3@GUI_DrawRo:
; Line 144
	mov	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	__DrawRoundedFrame
	add	esp, 24					; 00000018H
; Line 146
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawRo
$LN7@GUI_DrawRo:
; Line 150
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GUI_DrawRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN11@GUI_DrawRo:
	DD	1
	DD	$LN10@GUI_DrawRo
$LN10@GUI_DrawRo:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN9@GUI_DrawRo
$LN9@GUI_DrawRo:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_DrawRoundedFrame ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_GUI__sqrt32:PROC
EXTRN	_sqrt:PROC
EXTRN	__fltused:DWORD
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawRoundedFrame
_TEXT	SEGMENT
tv197 = -316						; size = 4
_xe$ = -116						; size = 4
_xs$ = -104						; size = 4
_d$ = -92						; size = 4
_c1$ = -80						; size = 4
_c0$ = -68						; size = 4
_ye$ = -56						; size = 4
_y$ = -44						; size = 4
_i$ = -32						; size = 4
_rr1$ = -20						; size = 4
_rr0$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_w$ = 28						; size = 4
__DrawRoundedFrame PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 81
	cmp	DWORD PTR _w$[ebp], 1
	jge	SHORT $LN8@DrawRounde
; Line 82
	jmp	$LN6@DrawRounde
; Line 83
	jmp	$LN6@DrawRounde
$LN8@DrawRounde:
; Line 84
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _r$[ebp]
	shl	ecx, 1
	cmp	eax, ecx
	jl	$LN6@DrawRounde
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _r$[ebp]
	shl	ecx, 1
	cmp	eax, ecx
	jl	$LN6@DrawRounde
; Line 85
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _rr0$[ebp], eax
; Line 86
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	mov	ecx, DWORD PTR _r$[ebp]
	sub	ecx, DWORD PTR _w$[ebp]
	imul	eax, ecx
	mov	DWORD PTR _rr1$[ebp], eax
; Line 87
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 88
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN5@DrawRounde
$LN4@DrawRounde:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _y$[ebp], ecx
$LN5@DrawRounde:
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN3@DrawRounde
; Line 89
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _rr0$[ebp]
	sub	ecx, eax
	mov	DWORD PTR tv197[ebp], ecx
	fild	DWORD PTR tv197[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sqrt
	add	esp, 8
	call	__ftol2_sse
	mov	DWORD PTR _c0$[ebp], eax
; Line 90
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN2@DrawRounde
; Line 91
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _rr1$[ebp]
	sub	ecx, eax
	push	ecx
	call	_GUI__sqrt32
	add	esp, 4
	mov	DWORD PTR _c1$[ebp], eax
; Line 92
	mov	eax, DWORD PTR _c0$[ebp]
	sub	eax, DWORD PTR _c1$[ebp]
	mov	DWORD PTR _d$[ebp], eax
; Line 93
	jmp	SHORT $LN1@DrawRounde
$LN2@DrawRounde:
; Line 94
	mov	eax, DWORD PTR _c0$[ebp]
	mov	DWORD PTR _d$[ebp], eax
$LN1@DrawRounde:
; Line 96
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _c0$[ebp]
	mov	DWORD PTR _xs$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _d$[ebp]
	mov	ecx, DWORD PTR _xs$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _xe$[ebp], edx
; Line 98
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _ye$[ebp], eax
; Line 99
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ye$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xs$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 100
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _ye$[ebp], ecx
; Line 101
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ye$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xs$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 102
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _c0$[ebp]
	mov	DWORD PTR _xe$[ebp], eax
; Line 103
	mov	eax, DWORD PTR _xe$[ebp]
	sub	eax, DWORD PTR _d$[ebp]
	add	eax, 1
	mov	DWORD PTR _xs$[ebp], eax
; Line 104
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _ye$[ebp], eax
; Line 105
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xs$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 106
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _ye$[ebp], ecx
; Line 107
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ye$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xs$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 108
	jmp	$LN4@DrawRounde
$LN3@DrawRounde:
; Line 109
	mov	eax, DWORD PTR _w$[ebp]
	mov	ecx, DWORD PTR _y0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR _r$[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 110
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	sub	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	sub	edx, DWORD PTR _w$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 111
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp]
	mov	edx, DWORD PTR _x0$[ebp]
	lea	eax, DWORD PTR [edx+ecx-1]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR _r$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 112
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	add	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	add	eax, 1
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN6@DrawRounde:
; Line 117
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawRoundedFrame ENDP
_TEXT	ENDS
END
