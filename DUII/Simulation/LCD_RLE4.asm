; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD_RLE4.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_BitmapMethodsRLE4
CONST	SEGMENT
_GUI_BitmapMethodsRLE4 DD FLAT:__DrawBitmap_RLE4
	DD	00H
	ORG $+4
CONST	ENDS
EXTRN	_LCD_SetPixelIndex:PROC
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_SetColorIndex:PROC
EXTRN	_LCD_GetpPalConvTable:PROC
EXTRN	_LCD_pColorIndex:DWORD
EXTRN	_LCD_pBkColorIndex:DWORD
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd_rle4.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DrawBitmap_RLE4
_TEXT	SEGMENT
tv228 = -356						; size = 4
tv214 = -356						; size = 4
tv187 = -356						; size = 4
tv130 = -356						; size = 4
tv171 = -353						; size = 1
_Index$8388 = -153					; size = 1
_xi1$8377 = -144					; size = 4
_Data$8372 = -129					; size = 1
_Cmd$8371 = -117					; size = 1
_IsMagnified$ = -105					; size = 1
_yL$ = -96						; size = 4
_xL$ = -84						; size = 4
_y$ = -72						; size = 4
_xi$ = -60						; size = 4
_PixelIndex$ = -48					; size = 4
_aColorIndex$ = -36					; size = 8
_NoTrans$ = -17						; size = 1
_pTrans$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_pPixel$ = 24						; size = 4
_pLogPal$ = 28						; size = 4
_xMag$ = 32						; size = 4
_yMag$ = 36						; size = 4
__DrawBitmap_RLE4 PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 356				; 00000164H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-356]
	mov	ecx, 89					; 00000059H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	DWORD PTR _pTrans$[ebp], 0
; Line 40
	movzx	eax, BYTE PTR _GUI_Context+16
	and	eax, 2
	neg	eax
	sbb	eax, eax
	add	eax, 1
	mov	BYTE PTR _NoTrans$[ebp], al
; Line 45
	mov	eax, DWORD PTR _yMag$[ebp]
	or	eax, DWORD PTR _xMag$[ebp]
	sub	eax, 1
	neg	eax
	sbb	eax, eax
	neg	eax
	mov	BYTE PTR _IsMagnified$[ebp], al
; Line 46
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _aColorIndex$[ebp], ecx
; Line 47
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _aColorIndex$[ebp+4], ecx
; Line 49
	cmp	DWORD PTR _pLogPal$[ebp], 0
	je	SHORT $LN29@DrawBitmap
	mov	eax, DWORD PTR _pLogPal$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN29@DrawBitmap
; Line 50
	mov	eax, DWORD PTR _pLogPal$[ebp]
	push	eax
	call	_LCD_GetpPalConvTable
	add	esp, 4
	mov	DWORD PTR _pTrans$[ebp], eax
	cmp	DWORD PTR _pTrans$[ebp], 0
	jne	SHORT $LN29@DrawBitmap
; Line 51
	jmp	$LN30@DrawBitmap
$LN29@DrawBitmap:
; Line 55
	cmp	DWORD PTR _yMag$[ebp], 1
	jne	SHORT $LN27@DrawBitmap
; Line 56
	movsx	eax, WORD PTR _GUI_Context+14
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	cmp	DWORD PTR _ysize$[ebp], eax
	jle	SHORT $LN27@DrawBitmap
; Line 57
	movsx	eax, WORD PTR _GUI_Context+14
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	mov	DWORD PTR _ysize$[ebp], eax
$LN27@DrawBitmap:
; Line 60
	mov	DWORD PTR _xi$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0
$LN25@DrawBitmap:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ysize$[ebp]
	jge	$LN24@DrawBitmap
; Line 62
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Cmd$8371[ebp], cl
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, 1
	mov	DWORD PTR _pPixel$[ebp], edx
; Line 63
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Data$8372[ebp], cl
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, 1
	mov	DWORD PTR _pPixel$[ebp], edx
; Line 64
	movzx	eax, BYTE PTR _Cmd$8371[ebp]
	test	eax, eax
	je	$LN13@DrawBitmap
; Line 65
	cmp	DWORD PTR _pTrans$[ebp], 0
	je	SHORT $LN32@DrawBitmap
	movzx	eax, BYTE PTR _Data$8372[ebp]
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv130[ebp], edx
	jmp	SHORT $LN33@DrawBitmap
$LN32@DrawBitmap:
	movzx	eax, BYTE PTR _Data$8372[ebp]
	mov	DWORD PTR tv130[ebp], eax
$LN33@DrawBitmap:
	mov	ecx, DWORD PTR tv130[ebp]
	push	ecx
	call	_LCD_SetColorIndex
	add	esp, 4
$LN22@DrawBitmap:
; Line 66
	movzx	eax, BYTE PTR _Cmd$8371[ebp]
	test	eax, eax
	je	$LN21@DrawBitmap
; Line 67
	movzx	eax, BYTE PTR _Cmd$8371[ebp]
	add	eax, DWORD PTR _xi$[ebp]
	mov	DWORD PTR _xi1$8377[ebp], eax
; Line 68
	mov	eax, DWORD PTR _xi1$8377[ebp]
	cmp	eax, DWORD PTR _xsize$[ebp]
	jl	SHORT $LN20@DrawBitmap
; Line 69
	mov	eax, DWORD PTR _xsize$[ebp]
	mov	DWORD PTR _xi1$8377[ebp], eax
$LN20@DrawBitmap:
; Line 70
	mov	eax, DWORD PTR _xi1$8377[ebp]
	sub	eax, DWORD PTR _xi$[ebp]
	movzx	ecx, BYTE PTR _Cmd$8371[ebp]
	sub	ecx, eax
	mov	BYTE PTR _Cmd$8371[ebp], cl
; Line 71
	movzx	eax, BYTE PTR _Data$8372[ebp]
	test	eax, eax
	jne	SHORT $LN18@DrawBitmap
	movzx	eax, BYTE PTR _NoTrans$[ebp]
	test	eax, eax
	je	SHORT $LN19@DrawBitmap
$LN18@DrawBitmap:
; Line 72
	movzx	eax, BYTE PTR _IsMagnified$[ebp]
	test	eax, eax
	je	SHORT $LN17@DrawBitmap
; Line 73
	mov	eax, DWORD PTR _xMag$[ebp]
	imul	eax, DWORD PTR _xi$[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _xL$[ebp], eax
; Line 74
	mov	eax, DWORD PTR _yMag$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yL$[ebp], eax
; Line 75
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _yL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _xi1$8377[ebp]
	sub	eax, DWORD PTR _xi$[ebp]
	imul	eax, DWORD PTR _xMag$[ebp]
	mov	ecx, DWORD PTR _xL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _yL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xL$[ebp]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 76
	jmp	SHORT $LN19@DrawBitmap
$LN17@DrawBitmap:
; Line 77
	mov	eax, DWORD PTR _x0$[ebp]
	mov	ecx, DWORD PTR _xi1$8377[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _xi$[ebp]
	push	ecx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN19@DrawBitmap:
; Line 80
	mov	eax, DWORD PTR _xi1$8377[ebp]
	mov	DWORD PTR _xi$[ebp], eax
; Line 81
	mov	eax, DWORD PTR _xi1$8377[ebp]
	cmp	eax, DWORD PTR _xsize$[ebp]
	jne	SHORT $LN15@DrawBitmap
; Line 82
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
; Line 83
	mov	DWORD PTR _xi$[ebp], 0
$LN15@DrawBitmap:
; Line 85
	jmp	$LN22@DrawBitmap
$LN21@DrawBitmap:
; Line 86
	jmp	$LN14@DrawBitmap
$LN13@DrawBitmap:
; Line 87
	mov	al, BYTE PTR _Data$8372[ebp]
	mov	BYTE PTR tv171[ebp], al
	mov	cl, BYTE PTR _Data$8372[ebp]
	sub	cl, 1
	mov	BYTE PTR _Data$8372[ebp], cl
	movzx	edx, BYTE PTR tv171[ebp]
	test	edx, edx
	je	$LN14@DrawBitmap
; Line 88
	mov	eax, DWORD PTR _pPixel$[ebp]
	mov	cl, BYTE PTR [eax]
	mov	BYTE PTR _Index$8388[ebp], cl
	mov	edx, DWORD PTR _pPixel$[ebp]
	add	edx, 1
	mov	DWORD PTR _pPixel$[ebp], edx
; Line 89
	movzx	eax, BYTE PTR _Index$8388[ebp]
	sar	eax, 4
	test	eax, eax
	jne	SHORT $LN10@DrawBitmap
	movzx	eax, BYTE PTR _NoTrans$[ebp]
	test	eax, eax
	je	$LN11@DrawBitmap
$LN10@DrawBitmap:
; Line 90
	cmp	DWORD PTR _pTrans$[ebp], 0
	je	SHORT $LN34@DrawBitmap
	movzx	eax, BYTE PTR _Index$8388[ebp]
	sar	eax, 4
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv187[ebp], edx
	jmp	SHORT $LN35@DrawBitmap
$LN34@DrawBitmap:
	movzx	eax, BYTE PTR _Index$8388[ebp]
	sar	eax, 4
	mov	DWORD PTR tv187[ebp], eax
$LN35@DrawBitmap:
	mov	ecx, DWORD PTR tv187[ebp]
	mov	DWORD PTR _PixelIndex$[ebp], ecx
; Line 91
	movzx	eax, BYTE PTR _IsMagnified$[ebp]
	test	eax, eax
	je	SHORT $LN9@DrawBitmap
; Line 92
	mov	eax, DWORD PTR _PixelIndex$[ebp]
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 93
	mov	eax, DWORD PTR _xMag$[ebp]
	imul	eax, DWORD PTR _xi$[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _xL$[ebp], eax
; Line 94
	mov	eax, DWORD PTR _yMag$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yL$[ebp], eax
; Line 95
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _yL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _xMag$[ebp]
	mov	ecx, DWORD PTR _xL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _yL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xL$[ebp]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 96
	jmp	SHORT $LN11@DrawBitmap
$LN9@DrawBitmap:
; Line 97
	mov	eax, DWORD PTR _PixelIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR _xi$[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
$LN11@DrawBitmap:
; Line 100
	mov	eax, DWORD PTR _xi$[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$[ebp], eax
	mov	ecx, DWORD PTR _xi$[ebp]
	cmp	ecx, DWORD PTR _xsize$[ebp]
	jl	SHORT $LN7@DrawBitmap
; Line 101
	mov	DWORD PTR _xi$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN7@DrawBitmap:
; Line 103
	movzx	eax, BYTE PTR _Data$8372[ebp]
	mov	cl, BYTE PTR _Data$8372[ebp]
	sub	cl, 1
	mov	BYTE PTR _Data$8372[ebp], cl
	test	eax, eax
	jne	SHORT $LN36@DrawBitmap
	mov	DWORD PTR tv214[ebp], 1
	jmp	SHORT $LN37@DrawBitmap
$LN36@DrawBitmap:
	mov	DWORD PTR tv214[ebp], 0
$LN37@DrawBitmap:
	cmp	DWORD PTR tv214[ebp], 0
	je	SHORT $LN6@DrawBitmap
; Line 104
	jmp	$LN14@DrawBitmap
$LN6@DrawBitmap:
; Line 105
	movzx	eax, BYTE PTR _Index$8388[ebp]
	and	eax, 15					; 0000000fH
	jne	SHORT $LN4@DrawBitmap
	movzx	eax, BYTE PTR _NoTrans$[ebp]
	test	eax, eax
	je	$LN5@DrawBitmap
$LN4@DrawBitmap:
; Line 106
	cmp	DWORD PTR _pTrans$[ebp], 0
	je	SHORT $LN38@DrawBitmap
	movzx	eax, BYTE PTR _Index$8388[ebp]
	and	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _pTrans$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR tv228[ebp], edx
	jmp	SHORT $LN39@DrawBitmap
$LN38@DrawBitmap:
	movzx	eax, BYTE PTR _Index$8388[ebp]
	and	eax, 15					; 0000000fH
	mov	DWORD PTR tv228[ebp], eax
$LN39@DrawBitmap:
	mov	ecx, DWORD PTR tv228[ebp]
	mov	DWORD PTR _PixelIndex$[ebp], ecx
; Line 107
	movzx	eax, BYTE PTR _IsMagnified$[ebp]
	test	eax, eax
	je	SHORT $LN3@DrawBitmap
; Line 108
	mov	eax, DWORD PTR _PixelIndex$[ebp]
	push	eax
	call	_LCD_SetColorIndex
	add	esp, 4
; Line 109
	mov	eax, DWORD PTR _xMag$[ebp]
	imul	eax, DWORD PTR _xi$[ebp]
	add	eax, DWORD PTR _x0$[ebp]
	mov	DWORD PTR _xL$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _yMag$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _yL$[ebp], eax
; Line 111
	mov	eax, DWORD PTR _yMag$[ebp]
	mov	ecx, DWORD PTR _yL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _xMag$[ebp]
	mov	ecx, DWORD PTR _xL$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	push	edx
	mov	eax, DWORD PTR _yL$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xL$[ebp]
	push	ecx
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
; Line 112
	jmp	SHORT $LN5@DrawBitmap
$LN3@DrawBitmap:
; Line 113
	mov	eax, DWORD PTR _PixelIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR _xi$[ebp]
	push	edx
	call	_LCD_SetPixelIndex
	add	esp, 12					; 0000000cH
$LN5@DrawBitmap:
; Line 116
	mov	eax, DWORD PTR _xi$[ebp]
	add	eax, 1
	mov	DWORD PTR _xi$[ebp], eax
	mov	ecx, DWORD PTR _xi$[ebp]
	cmp	ecx, DWORD PTR _xsize$[ebp]
	jl	SHORT $LN1@DrawBitmap
; Line 117
	mov	DWORD PTR _xi$[ebp], 0
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN1@DrawBitmap:
; Line 119
	jmp	$LN13@DrawBitmap
$LN14@DrawBitmap:
; Line 121
	jmp	$LN25@DrawBitmap
$LN24@DrawBitmap:
; Line 122
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR _aColorIndex$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 123
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _aColorIndex$[ebp+4]
	mov	DWORD PTR [eax], ecx
$LN30@DrawBitmap:
; Line 124
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN42@DrawBitmap
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 356				; 00000164H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN42@DrawBitmap:
	DD	1
	DD	$LN41@DrawBitmap
$LN41@DrawBitmap:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN40@DrawBitmap
$LN40@DrawBitmap:
	DB	97					; 00000061H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
__DrawBitmap_RLE4 ENDP
_TEXT	ENDS
END
