; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\GUI_ARRAY_DeleteItem.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_ARRAY_DeleteItem
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ALLOC_FreePtr:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\gui_array_deleteitem.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_ARRAY_DeleteItem
_TEXT	SEGMENT
_NumItems$10365 = -56					; size = 4
_i$ = -44						; size = 4
_pa$ = -32						; size = 4
_ha$ = -20						; size = 4
_pThis$ = -8						; size = 4
_hArray$ = 8						; size = 4
_Index$ = 12						; size = 4
_GUI_ARRAY_DeleteItem PROC				; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 53
	mov	eax, DWORD PTR _hArray$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pThis$[ebp], eax
; Line 54
	mov	eax, DWORD PTR _pThis$[ebp]
	movzx	ecx, WORD PTR [eax]
	cmp	DWORD PTR _Index$[ebp], ecx
	jae	$LN5@GUI_ARRAY_
; Line 55
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _ha$[ebp], ecx
; Line 56
	cmp	DWORD PTR _ha$[ebp], 0
	je	SHORT $LN5@GUI_ARRAY_
; Line 59
	mov	eax, DWORD PTR _ha$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pa$[ebp], eax
; Line 61
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pa$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	push	edx
	call	_GUI_ALLOC_FreePtr
	add	esp, 4
; Line 63
	mov	eax, DWORD PTR _pThis$[ebp]
	mov	cx, WORD PTR [eax]
	sub	cx, 1
	mov	edx, DWORD PTR _pThis$[ebp]
	mov	WORD PTR [edx], cx
	mov	eax, DWORD PTR _pThis$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _NumItems$10365[ebp], ecx
; Line 64
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@GUI_ARRAY_
$LN2@GUI_ARRAY_:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@GUI_ARRAY_:
	mov	eax, DWORD PTR _NumItems$10365[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jg	SHORT $LN1@GUI_ARRAY_
; Line 65
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pa$[ebp]
	mov	edx, DWORD PTR _i$[ebp]
	mov	esi, DWORD PTR _pa$[ebp]
	mov	edx, DWORD PTR [esi+edx*4+4]
	mov	DWORD PTR [ecx+eax*4], edx
; Line 66
	jmp	SHORT $LN2@GUI_ARRAY_
$LN1@GUI_ARRAY_:
; Line 67
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pa$[ebp], 0
$LN5@GUI_ARRAY_:
; Line 71
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pThis$[ebp], 0
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_ARRAY_DeleteItem ENDP
_TEXT	ENDS
END
