; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_XY2PTR.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG8345	DB	'GUI_MEMDEV__XY2PTR: parameters out of bounds', 00H
_DATA	ENDS
PUBLIC	_GUI_MEMDEV__XY2PTR
EXTRN	_GUI_ErrorOut2:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_xy2ptr.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV__XY2PTR
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_pDev$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_GUI_MEMDEV__XY2PTR PROC				; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	mov	eax, DWORD PTR _GUI_Context+76
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pDev$[ebp], eax
; Line 39
	mov	eax, DWORD PTR _pDev$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData$[ebp], eax
; Line 41
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR _pDev$[ebp]
	movsx	eax, WORD PTR [edx+8]
	add	ecx, eax
	xor	edx, edx
	cmp	DWORD PTR _x$[ebp], ecx
	setge	dl
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	xor	eax, eax
	cmp	DWORD PTR _x$[ebp], ecx
	setl	al
	or	edx, eax
	mov	ecx, DWORD PTR _pDev$[ebp]
	movsx	eax, WORD PTR [ecx+6]
	mov	ecx, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [ecx+10]
	add	eax, ecx
	xor	ecx, ecx
	cmp	DWORD PTR _y$[ebp], eax
	setge	cl
	or	edx, ecx
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	xor	eax, eax
	cmp	DWORD PTR _y$[ebp], ecx
	setl	al
	or	edx, eax
	je	SHORT $LN1@GUI_MEMDEV
; Line 42
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	push	OFFSET $SG8345
	call	_GUI_ErrorOut2
	add	esp, 12					; 0000000cH
$LN1@GUI_MEMDEV:
; Line 45
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, ecx
	mov	eax, DWORD PTR _pDev$[ebp]
	imul	edx, DWORD PTR [eax+12]
	add	edx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pData$[ebp], edx
; Line 46
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+4]
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	shr	ecx, 3
	imul	eax, ecx
	add	eax, DWORD PTR _pData$[ebp]
; Line 47
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV__XY2PTR ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV__XY2PTREx
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV__XY2PTREx
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_pDev$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_GUI_MEMDEV__XY2PTREx PROC				; COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 54
	mov	eax, DWORD PTR _pDev$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData$[ebp], eax
; Line 55
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	imul	ecx, DWORD PTR [eax+12]
	add	ecx, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pData$[ebp], ecx
; Line 56
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	shr	ecx, 3
	mov	eax, ecx
	imul	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _pData$[ebp]
; Line 57
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV__XY2PTREx ENDP
_TEXT	ENDS
END
