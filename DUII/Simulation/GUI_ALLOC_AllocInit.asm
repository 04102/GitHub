; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_ALLOC_AllocInit.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_ALLOC_AllocInit
EXTRN	_GUI__memset:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_ALLOC_AllocNoInit:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_alloc_allocinit.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_ALLOC_AllocInit
_TEXT	SEGMENT
_pMem$9169 = -20					; size = 4
_hMem$ = -8						; size = 4
_pInitData$ = 8						; size = 4
_Size$ = 12						; size = 4
_GUI_ALLOC_AllocInit PROC				; COMDAT
; Line 42
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 45
	cmp	DWORD PTR _Size$[ebp], 0
	jne	SHORT $LN4@GUI_ALLOC_
; Line 46
	xor	eax, eax
	jmp	SHORT $LN5@GUI_ALLOC_
$LN4@GUI_ALLOC_:
; Line 48
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR _hMem$[ebp], eax
; Line 49
	cmp	DWORD PTR _hMem$[ebp], 0
	je	SHORT $LN3@GUI_ALLOC_
; Line 51
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pMem$9169[ebp], eax
; Line 52
	cmp	DWORD PTR _pInitData$[ebp], 0
	je	SHORT $LN2@GUI_ALLOC_
; Line 53
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pInitData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pMem$9169[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 54
	jmp	SHORT $LN3@GUI_ALLOC_
$LN2@GUI_ALLOC_:
; Line 55
	mov	eax, DWORD PTR _Size$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pMem$9169[ebp]
	push	ecx
	call	_GUI__memset
	add	esp, 12					; 0000000cH
$LN3@GUI_ALLOC_:
; Line 59
	mov	eax, DWORD PTR _hMem$[ebp]
$LN5@GUI_ALLOC_:
; Line 60
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_ALLOC_AllocInit ENDP
_TEXT	ENDS
END
