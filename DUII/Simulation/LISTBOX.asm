; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\LISTBOX.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LISTBOX_DefaultProps
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_LISTBOX_DefaultProps DD FLAT:_GUI_Font13_1
	DW	0aH
	ORG $+2
	DD	0ffffffH
	DD	0808080H
	DD	0ff0000H
	DD	0c0c0c0H
	DD	00H
	DD	0ffffffH
	DD	0ffffffH
	DD	0808080H
	DD	0fffffffH
	DD	0fffffffH
	DD	0fffffffH
	DW	00H
	ORG $+2
$SG13135 DB	'LISTBOX.c: Wrong handle type or Object not init''ed', 00H
_DATA	ENDS
PUBLIC	_LISTBOX_UpdateScrollers
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\listbox.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LISTBOX_UpdateScrollers
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_LISTBOX_UpdateScrollers PROC				; COMDAT
; Line 509
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 510
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
; Line 511
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__CalcScrollParas
	add	esp, 4
; Line 512
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_UpdateScrollers ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__GetNumItems
PUBLIC	_LISTBOX_LockH
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcScrollParas
_TEXT	SEGMENT
_pObj$ = -36						; size = 4
_Rect$ = -24						; size = 8
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
__CalcScrollParas PROC					; COMDAT
; Line 456
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 460
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 462
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [ecx+64], eax
; Line 463
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumVisItems
	add	esp, 4
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 465
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 466
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetContentsSizeX
	add	esp, 4
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [ecx+76], eax
; Line 467
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+84], eax
; Line 468
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__UpdateScrollPos
	add	esp, 4
	mov	DWORD PTR _r$[ebp], eax
; Line 469
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 470
	mov	eax, DWORD PTR _r$[ebp]
; Line 471
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@CalcScroll
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@CalcScroll:
	DD	1
	DD	$LN4@CalcScroll
$LN4@CalcScroll:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@CalcScroll
$LN3@CalcScroll:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__CalcScrollParas ENDP
_TEXT	ENDS
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __GetContentsSizeX
_TEXT	SEGMENT
_pOldFont$12811 = -104					; size = 4
_pFont$ = -92						; size = 4
_ItemArray$ = -80					; size = 4
_xSize$ = -68						; size = 4
_NumItems$ = -56					; size = 4
_i$ = -44						; size = 4
_pItem$ = -32						; size = 4
_pObj$ = -20						; size = 4
_ContentSizeX$ = -8					; size = 4
_hObj$ = 8						; size = 4
__GetContentsSizeX PROC					; COMDAT
; Line 205
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 213
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 214
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 215
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 216
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 217
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+158]
	mov	DWORD PTR _ContentSizeX$[ebp], ecx
; Line 218
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 219
	cmp	DWORD PTR _ContentSizeX$[ebp], 0
	jne	$LN9@GetContent
; Line 220
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN8@GetContent
$LN7@GetContent:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN8@GetContent:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	$LN9@GetContent
; Line 221
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 222
	cmp	DWORD PTR _pItem$[ebp], 0
	jne	SHORT $LN5@GetContent
; Line 223
	jmp	SHORT $LN7@GetContent
$LN5@GetContent:
; Line 225
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax]
	mov	DWORD PTR _xSize$[ebp], ecx
; Line 226
	cmp	DWORD PTR _xSize$[ebp], 0
	jne	SHORT $LN4@GetContent
; Line 228
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$12811[ebp], eax
; Line 229
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 230
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	push	24					; 00000018H
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CallOwnerDraw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _xSize$[ebp], eax
; Line 231
	mov	eax, DWORD PTR _pOldFont$12811[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 232
	cmp	DWORD PTR _xSize$[ebp], 0
	je	SHORT $LN3@GetContent
; Line 233
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 234
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR _xSize$[ebp]
	mov	WORD PTR [eax], cx
; Line 235
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN3@GetContent:
; Line 237
	jmp	SHORT $LN2@GetContent
$LN4@GetContent:
; Line 238
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN2@GetContent:
; Line 240
	mov	eax, DWORD PTR _ContentSizeX$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	SHORT $LN1@GetContent
; Line 241
	mov	eax, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR _ContentSizeX$[ebp], eax
$LN1@GetContent:
; Line 243
	jmp	$LN7@GetContent
$LN9@GetContent:
; Line 245
	mov	eax, DWORD PTR _ContentSizeX$[ebp]
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetContentsSizeX ENDP
_TEXT	ENDS
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CallOwnerDraw
_TEXT	SEGMENT
$T13519 = -273						; size = 1
_r$ = -72						; size = 4
_pfDrawItem$ = -60					; size = 4
_pObj$ = -48						; size = 4
_ItemInfo$ = -36					; size = 32
_hObj$ = 8						; size = 4
_Cmd$ = 12						; size = 4
_ItemIndex$ = 16					; size = 4
__CallOwnerDraw PROC					; COMDAT
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T13519[ebp], 0
; Line 143
	mov	eax, DWORD PTR _Cmd$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+4], eax
; Line 144
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 145
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+8], eax
; Line 146
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 147
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 148
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 149
	cmp	DWORD PTR _pfDrawItem$[ebp], 0
	je	SHORT $LN1@CallOwnerD
; Line 150
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawItem$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR $T13519[ebp], 1
	mov	DWORD PTR _r$[ebp], eax
$LN1@CallOwnerD:
; Line 152
	cmp	BYTE PTR $T13519[ebp], 0
	jne	SHORT $LN4@CallOwnerD
	push	OFFSET $LN5@CallOwnerD
	call	__RTC_UninitUse
	add	esp, 4
$LN4@CallOwnerD:
	mov	eax, DWORD PTR _r$[ebp]
; Line 153
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@CallOwnerD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN8@CallOwnerD:
	DD	1
	DD	$LN7@CallOwnerD
$LN7@CallOwnerD:
	DD	-36					; ffffffdcH
	DD	32					; 00000020H
	DD	$LN6@CallOwnerD
$LN6@CallOwnerD:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN5@CallOwnerD:
	DB	114					; 00000072H
	DB	0
__CallOwnerDraw ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumVisItems
_TEXT	SEGMENT
_DistY$12878 = -68					; size = 4
_ySize$12877 = -56					; size = 4
_i$12876 = -44						; size = 4
_r$ = -32						; size = 4
_NumItems$ = -20					; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetNumVisItems PROC					; COMDAT
; Line 349
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 351
	mov	DWORD PTR _r$[ebp], 1
; Line 352
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 353
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 354
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 355
	cmp	DWORD PTR _NumItems$[ebp], 1
	jle	SHORT $LN6@GetNumVisI
; Line 356
	mov	DWORD PTR _DistY$12878[ebp], 0
; Line 357
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetYSize
	add	esp, 4
	mov	DWORD PTR _ySize$12877[ebp], eax
; Line 358
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$12876[ebp], eax
	jmp	SHORT $LN5@GetNumVisI
$LN4@GetNumVisI:
	mov	eax, DWORD PTR _i$12876[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$12876[ebp], eax
$LN5@GetNumVisI:
	cmp	DWORD PTR _i$12876[ebp], 0
	jl	SHORT $LN3@GetNumVisI
; Line 359
	mov	eax, DWORD PTR _i$12876[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	add	eax, DWORD PTR _DistY$12878[ebp]
	mov	DWORD PTR _DistY$12878[ebp], eax
; Line 360
	mov	eax, DWORD PTR _DistY$12878[ebp]
	cmp	eax, DWORD PTR _ySize$12877[ebp]
	jle	SHORT $LN2@GetNumVisI
; Line 361
	jmp	SHORT $LN3@GetNumVisI
$LN2@GetNumVisI:
; Line 363
	jmp	SHORT $LN4@GetNumVisI
$LN3@GetNumVisI:
; Line 364
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, DWORD PTR _i$12876[ebp]
	sub	eax, 1
	mov	DWORD PTR _r$[ebp], eax
; Line 365
	cmp	DWORD PTR _r$[ebp], 1
	jge	SHORT $LN6@GetNumVisI
; Line 366
	mov	eax, 1
	jmp	SHORT $LN7@GetNumVisI
$LN6@GetNumVisI:
; Line 369
	mov	eax, DWORD PTR _r$[ebp]
$LN7@GetNumVisI:
; Line 370
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetNumVisItems ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetYSize
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_hObj$ = 8						; size = 4
__GetYSize PROC						; COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 161
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 162
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	add	eax, 1
; Line 163
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetYSize
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetYSize:
	DD	1
	DD	$LN4@GetYSize
$LN4@GetYSize:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetYSize
$LN3@GetYSize:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetYSize ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemSizeY
_TEXT	SEGMENT
_pOldFont$12783 = -68					; size = 4
_pFont$ = -56						; size = 4
_ItemArray$ = -44					; size = 4
_pItem$ = -32						; size = 4
_pObj$ = -20						; size = 4
_ySize$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetItemSizeY PROC					; COMDAT
; Line 169
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 175
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 176
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 177
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 178
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 179
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 180
	cmp	DWORD PTR _pItem$[ebp], 0
	jne	SHORT $LN4@GetItemSiz
; Line 181
	xor	eax, eax
	jmp	$LN5@GetItemSiz
$LN4@GetItemSiz:
; Line 183
	mov	eax, DWORD PTR _pItem$[ebp]
	movzx	ecx, WORD PTR [eax+2]
	mov	DWORD PTR _ySize$[ebp], ecx
; Line 184
	cmp	DWORD PTR _ySize$[ebp], 0
	jne	SHORT $LN3@GetItemSiz
; Line 186
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$12783[ebp], eax
; Line 187
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 188
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	push	25					; 00000019H
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__CallOwnerDraw
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ySize$[ebp], eax
; Line 189
	mov	eax, DWORD PTR _pOldFont$12783[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 190
	cmp	DWORD PTR _ySize$[ebp], 0
	je	SHORT $LN2@GetItemSiz
; Line 191
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 192
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR _ySize$[ebp]
	mov	WORD PTR [eax+2], cx
; Line 193
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN2@GetItemSiz:
; Line 195
	jmp	SHORT $LN1@GetItemSiz
$LN3@GetItemSiz:
; Line 196
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN1@GetItemSiz:
; Line 198
	mov	eax, DWORD PTR _ySize$[ebp]
$LN5@GetItemSiz:
; Line 199
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemSizeY ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WIDGET__SetScrollState:PROC
EXTRN	_WM_CheckScrollBounds:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __UpdateScrollPos
_TEXT	SEGMENT
_r$ = -88						; size = 4
_IsPartiallyVis$ = -76					; size = 4
_PrevScrollStateV$ = -64				; size = 4
_pObj$ = -52						; size = 4
_ScrollStateH$ = -40					; size = 12
_ScrollStateV$ = -20					; size = 12
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__UpdateScrollPos PROC					; COMDAT
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 284				; 0000011cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-284]
	mov	ecx, 71					; 00000047H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 429
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__IsPartiallyVis
	add	esp, 4
	mov	DWORD PTR _IsPartiallyVis$[ebp], eax
; Line 430
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 431
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _PrevScrollStateV$[ebp], ecx
; Line 432
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	test	ecx, ecx
	jl	SHORT $LN3@UpdateScro
; Line 434
	cmp	DWORD PTR _IsPartiallyVis$[ebp], 0
	je	SHORT $LN2@UpdateScro
; Line 435
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+72]
	sub	eax, 1
	sub	ecx, eax
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+68], ecx
$LN2@UpdateScro:
; Line 438
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	edx, DWORD PTR _pObj$[ebp]
	cmp	ecx, DWORD PTR [edx+68]
	jge	SHORT $LN3@UpdateScro
; Line 439
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+68], ecx
$LN3@UpdateScro:
; Line 442
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 443
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 444
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 64					; 00000040H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 445
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 76					; 0000004cH
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateH$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateH$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateH$[ebp+8], eax
; Line 446
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 447
	lea	eax, DWORD PTR _ScrollStateH$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ScrollStateV$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	_WIDGET__SetScrollState
	add	esp, 12					; 0000000cH
; Line 448
	mov	eax, DWORD PTR _ScrollStateV$[ebp+4]
	sub	eax, DWORD PTR _PrevScrollStateV$[ebp]
	mov	DWORD PTR _r$[ebp], eax
; Line 449
	mov	eax, DWORD PTR _r$[ebp]
; Line 450
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@UpdateScro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 284				; 0000011cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN9@UpdateScro:
	DD	2
	DD	$LN8@UpdateScro
$LN8@UpdateScro:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN6@UpdateScro
	DD	-40					; ffffffd8H
	DD	12					; 0000000cH
	DD	$LN7@UpdateScro
$LN7@UpdateScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	72					; 00000048H
	DB	0
$LN6@UpdateScro:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
__UpdateScrollPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsPartiallyVis
_TEXT	SEGMENT
_y$ = -56						; size = 4
_ScrollPosV$ = -44					; size = 4
_NumItems$ = -32					; size = 4
_Index$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__IsPartiallyVis PROC					; COMDAT
; Line 321
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 324
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 325
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	DWORD PTR _Index$[ebp], ecx
; Line 326
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 327
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollPosV$[ebp], ecx
; Line 328
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 329
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN3@IsPartiall
; Line 330
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _ScrollPosV$[ebp]
	jl	SHORT $LN3@IsPartiall
; Line 331
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	DWORD PTR _y$[ebp], eax
; Line 332
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	add	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 333
	mov	eax, DWORD PTR _ScrollPosV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	edx, DWORD PTR _y$[ebp]
	sub	edx, eax
	mov	DWORD PTR _y$[ebp], edx
; Line 334
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetYSize
	add	esp, 4
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN3@IsPartiall
; Line 335
	mov	eax, 1
	jmp	SHORT $LN4@IsPartiall
$LN3@IsPartiall:
; Line 339
	xor	eax, eax
$LN4@IsPartiall:
; Line 340
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsPartiallyVis ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemPosY
_TEXT	SEGMENT
_ItemArray$ = -80					; size = 4
_pItem$ = -68						; size = 4
_PosY$ = -56						; size = 4
_i$ = -44						; size = 4
_NumItems$ = -32					; size = 4
_pObj$ = -20						; size = 4
_ScrollPosV$ = -8					; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
__GetItemPosY PROC					; COMDAT
; Line 252
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 264
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 265
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollPosV$[ebp], ecx
; Line 266
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 267
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 268
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 269
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN11@GetItemPos
; Line 270
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _ScrollPosV$[ebp]
	jl	$LN11@GetItemPos
; Line 274
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 275
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _PosY$[ebp], ecx
; Line 276
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 280
	cmp	DWORD PTR _PosY$[ebp], 0
	jge	$LN9@GetItemPos
; Line 284
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _i$[ebp], eax
$LN8@GetItemPos:
; Line 285
	mov	eax, DWORD PTR _i$[ebp]
	sub	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	js	SHORT $LN7@GetItemPos
; Line 286
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 287
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _PosY$[ebp], ecx
; Line 288
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 289
	cmp	DWORD PTR _PosY$[ebp], 0
	jl	SHORT $LN6@GetItemPos
; Line 290
	jmp	SHORT $LN7@GetItemPos
$LN6@GetItemPos:
; Line 292
	jmp	SHORT $LN8@GetItemPos
$LN7@GetItemPos:
; Line 296
	cmp	DWORD PTR _PosY$[ebp], 0
	jge	SHORT $LN5@GetItemPos
; Line 297
	mov	DWORD PTR _i$[ebp], 0
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _PosY$[ebp], eax
$LN5@GetItemPos:
; Line 299
	cmp	DWORD PTR _Index$[ebp], 0
	je	SHORT $LN4@GetItemPos
$LN3@GetItemPos:
; Line 301
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	add	eax, DWORD PTR _PosY$[ebp]
	mov	DWORD PTR _PosY$[ebp], eax
; Line 302
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR _Index$[ebp]
	jb	SHORT $LN3@GetItemPos
$LN4@GetItemPos:
; Line 307
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 308
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR _PosY$[ebp]
	mov	DWORD PTR [eax+4], ecx
; Line 309
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN9@GetItemPos:
; Line 311
	mov	eax, DWORD PTR _PosY$[ebp]
	jmp	SHORT $LN12@GetItemPos
$LN11@GetItemPos:
; Line 314
	or	eax, -1
$LN12@GetItemPos:
; Line 315
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetItemPosY ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__SetScrollbarColor
PUBLIC	_LISTBOX__SetScrollbarWidth
EXTRN	_WM_SetScrollbarH:PROC
EXTRN	_WM_SetScrollbarV:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __ManageAutoScroll
_TEXT	SEGMENT
_xSizeContents$12936 = -60				; size = 4
_xSize$12935 = -48					; size = 4
_Rect$12934 = -36					; size = 8
_pObj$ = -20						; size = 4
_IsRequired$ = -5					; size = 1
_hObj$ = 8						; size = 4
__ManageAutoScroll PROC					; COMDAT
; Line 477
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 480
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 481
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+154]
	and	ecx, 2
	je	SHORT $LN3@ManageAuto
; Line 482
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumVisItems
	add	esp, 4
	mov	esi, eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__GetNumItems
	add	esp, 4
	cmp	esi, eax
	sbb	edx, edx
	neg	edx
	mov	BYTE PTR _IsRequired$[ebp], dl
; Line 483
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 484
	movzx	eax, BYTE PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarV
	add	esp, 8
; Line 485
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
$LN3@ManageAuto:
; Line 487
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+154]
	and	ecx, 1
	je	SHORT $LN2@ManageAuto
; Line 490
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetContentsSizeX
	add	esp, 4
	mov	DWORD PTR _xSizeContents$12936[ebp], eax
; Line 491
	lea	eax, DWORD PTR _Rect$12934[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 492
	movsx	eax, WORD PTR _Rect$12934[ebp+4]
	movsx	ecx, WORD PTR _Rect$12934[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xSize$12935[ebp], eax
; Line 493
	mov	eax, DWORD PTR _xSizeContents$12936[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _xSize$12935[ebp]
	setg	cl
	mov	BYTE PTR _IsRequired$[ebp], cl
; Line 494
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 495
	movzx	eax, BYTE PTR _IsRequired$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarH
	add	esp, 8
; Line 496
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
$LN2@ManageAuto:
; Line 498
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+155]
	test	ecx, ecx
	je	SHORT $LN1@ManageAuto
; Line 499
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__SetScrollbarWidth
	add	esp, 8
$LN1@ManageAuto:
; Line 501
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__SetScrollbarColor
	add	esp, 8
; Line 502
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 503
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN8@ManageAuto
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN8@ManageAuto:
	DD	1
	DD	$LN7@ManageAuto
$LN7@ManageAuto:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN6@ManageAuto
$LN6@ManageAuto:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__ManageAutoScroll ENDP
_TEXT	ENDS
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_LISTBOX_LockH PROC					; COMDAT
; Line 855
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 856
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 857
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@LISTBOX_Lo
; Line 858
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+148], 1279873858		; 4c495342H
	je	SHORT $LN2@LISTBOX_Lo
; Line 859
	push	OFFSET $SG13135
	call	_GUI_ErrorOut
	add	esp, 4
; Line 860
	xor	eax, eax
	jmp	SHORT $LN3@LISTBOX_Lo
$LN2@LISTBOX_Lo:
; Line 863
	mov	eax, DWORD PTR _p$[ebp]
$LN3@LISTBOX_Lo:
; Line 864
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_LockH ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_GetNumItems:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__GetNumItems
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_LISTBOX__GetNumItems PROC				; COMDAT
; Line 874
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 875
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
; Line 876
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__GetNumItems ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__GetpStringLocked
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__GetpStringLocked
_TEXT	SEGMENT
_pItem$ = -32						; size = 4
_s$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_LISTBOX__GetpStringLocked PROC				; COMDAT
; Line 885
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 887
	mov	DWORD PTR _s$[ebp], 0
; Line 889
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 890
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 891
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 892
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN1@LISTBOX__G
; Line 893
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 9
	mov	DWORD PTR _s$[ebp], eax
$LN1@LISTBOX__G:
; Line 895
	mov	eax, DWORD PTR _s$[ebp]
; Line 896
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__GetpStringLocked ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__InvalidateItemSize
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__InvalidateItemSize
_TEXT	SEGMENT
_pItem$ = -8						; size = 4
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_LISTBOX__InvalidateItemSize PROC			; COMDAT
; Line 902
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 904
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 905
	cmp	DWORD PTR _pItem$[ebp], 0
	je	SHORT $LN1@LISTBOX__I
; Line 906
	xor	eax, eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [ecx], ax
; Line 907
	xor	eax, eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	mov	WORD PTR [ecx+2], ax
$LN1@LISTBOX__I:
; Line 909
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 910
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__InvalidateItemSize ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__InvalidateInsideArea
EXTRN	_WM_InvalidateRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__InvalidateInsideArea
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_hObj$ = 8						; size = 4
_LISTBOX__InvalidateInsideArea PROC			; COMDAT
; Line 916
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 918
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 919
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 920
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@LISTBOX__I@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@LISTBOX__I@2:
	DD	1
	DD	$LN4@LISTBOX__I@2
$LN4@LISTBOX__I@2:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@LISTBOX__I@2
$LN3@LISTBOX__I@2:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTBOX__InvalidateInsideArea ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__InvalidateItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__InvalidateItem
_TEXT	SEGMENT
_pObj$ = -60						; size = 4
_Rect$ = -48						; size = 8
_ScrollPosV$ = -32					; size = 4
_ItemPosY$ = -20					; size = 4
_ItemDistY$ = -8					; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
_LISTBOX__InvalidateItem PROC				; COMDAT
; Line 926
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 931
	cmp	DWORD PTR _Sel$[ebp], 0
	jl	$LN3@LISTBOX__I@3
; Line 932
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	DWORD PTR _ItemPosY$[ebp], eax
; Line 933
	cmp	DWORD PTR _ItemPosY$[ebp], 0
	jl	$LN3@LISTBOX__I@3
; Line 934
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 935
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollPosV$[ebp], ecx
; Line 936
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 937
	mov	eax, DWORD PTR _ScrollPosV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	DWORD PTR _ScrollPosV$[ebp], eax
; Line 938
	mov	eax, DWORD PTR _ItemPosY$[ebp]
	sub	eax, DWORD PTR _ScrollPosV$[ebp]
	mov	DWORD PTR _ItemPosY$[ebp], eax
; Line 939
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	mov	DWORD PTR _ItemDistY$[ebp], eax
; Line 940
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 941
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _ItemPosY$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 942
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	ecx, DWORD PTR _ItemDistY$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _Rect$[ebp+6], dx
; Line 943
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN3@LISTBOX__I@3:
; Line 946
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LISTBOX__I@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@LISTBOX__I@3:
	DD	1
	DD	$LN6@LISTBOX__I@3
$LN6@LISTBOX__I@3:
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN5@LISTBOX__I@3
$LN5@LISTBOX__I@3:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTBOX__InvalidateItem ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__InvalidateItemAndBelow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__InvalidateItemAndBelow
_TEXT	SEGMENT
_pObj$ = -48						; size = 4
_Rect$ = -36						; size = 8
_ScrollPosV$ = -20					; size = 4
_ItemPosY$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
_LISTBOX__InvalidateItemAndBelow PROC			; COMDAT
; Line 952
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 957
	cmp	DWORD PTR _Sel$[ebp], 0
	jl	SHORT $LN3@LISTBOX__I@4
; Line 958
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	DWORD PTR _ItemPosY$[ebp], eax
; Line 959
	cmp	DWORD PTR _ItemPosY$[ebp], 0
	jl	SHORT $LN3@LISTBOX__I@4
; Line 960
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 961
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollPosV$[ebp], ecx
; Line 962
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 963
	mov	eax, DWORD PTR _ScrollPosV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemPosY
	add	esp, 8
	mov	DWORD PTR _ScrollPosV$[ebp], eax
; Line 964
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 965
	movsx	eax, WORD PTR _Rect$[ebp+2]
	add	eax, DWORD PTR _ItemPosY$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 966
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
$LN3@LISTBOX__I@4:
; Line 969
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LISTBOX__I@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@LISTBOX__I@4:
	DD	1
	DD	$LN6@LISTBOX__I@4
$LN6@LISTBOX__I@4:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN5@LISTBOX__I@4
$LN5@LISTBOX__I@4:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_LISTBOX__InvalidateItemAndBelow ENDP
_TEXT	ENDS
EXTRN	_SCROLLBAR_SetWidth:PROC
EXTRN	_WM_GetDialogItem:PROC
EXTRN	_SCROLLBAR_GetDefaultWidth:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__SetScrollbarWidth
_TEXT	SEGMENT
_Width$ = -32						; size = 4
_hBarV$ = -20						; size = 4
_hBarH$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_LISTBOX__SetScrollbarWidth PROC			; COMDAT
; Line 975
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 978
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+155]
	mov	DWORD PTR _Width$[ebp], ecx
; Line 979
	cmp	DWORD PTR _Width$[ebp], 0
	jne	SHORT $LN1@LISTBOX__S
; Line 980
	call	_SCROLLBAR_GetDefaultWidth
	mov	DWORD PTR _Width$[ebp], eax
$LN1@LISTBOX__S:
; Line 982
	push	255					; 000000ffH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hBarH$[ebp], eax
; Line 983
	push	254					; 000000feH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hBarV$[ebp], eax
; Line 984
	mov	eax, DWORD PTR _Width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBarH$[ebp]
	push	ecx
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 985
	mov	eax, DWORD PTR _Width$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBarV$[ebp]
	push	ecx
	call	_SCROLLBAR_SetWidth
	add	esp, 8
; Line 986
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__SetScrollbarWidth ENDP
_TEXT	ENDS
EXTRN	_SCROLLBAR_SetColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__SetScrollbarColor
_TEXT	SEGMENT
_i$ = -32						; size = 4
_hBarV$ = -20						; size = 4
_hBarH$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
_LISTBOX__SetScrollbarColor PROC			; COMDAT
; Line 992
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 995
	push	255					; 000000ffH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hBarH$[ebp], eax
; Line 996
	push	254					; 000000feH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hBarV$[ebp], eax
; Line 997
	cmp	DWORD PTR _hBarH$[ebp], 0
	jne	SHORT $LN5@LISTBOX__S@2
	cmp	DWORD PTR _hBarV$[ebp], 0
	je	SHORT $LN7@LISTBOX__S@2
$LN5@LISTBOX__S@2:
; Line 998
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@LISTBOX__S@2
$LN3@LISTBOX__S@2:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@LISTBOX__S@2:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN7@LISTBOX__S@2
; Line 999
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [ecx+eax*4+128], 268435455	; 0fffffffH
	je	SHORT $LN1@LISTBOX__S@2
; Line 1000
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBarH$[ebp]
	push	ecx
	call	_SCROLLBAR_SetColor
	add	esp, 12					; 0000000cH
; Line 1001
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+128]
	push	edx
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hBarV$[ebp]
	push	ecx
	call	_SCROLLBAR_SetColor
	add	esp, 12					; 0000000cH
$LN1@LISTBOX__S@2:
; Line 1003
	jmp	SHORT $LN3@LISTBOX__S@2
$LN7@LISTBOX__S@2:
; Line 1005
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__SetScrollbarColor ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX__AddSize
EXTRN	_GUI_GetStringDistX:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX__AddSize
_TEXT	SEGMENT
_SizeX$ = -32						; size = 4
_pItem$ = -20						; size = 4
_pOldFont$ = -8						; size = 4
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_LISTBOX__AddSize PROC					; COMDAT
; Line 1011
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1016
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1017
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$[ebp], eax
; Line 1018
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 9
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _SizeX$[ebp], eax
; Line 1019
	mov	eax, DWORD PTR _pOldFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 1020
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	cx, WORD PTR _SizeX$[ebp]
	mov	WORD PTR [eax], cx
; Line 1021
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1022
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+158]
	cmp	ecx, DWORD PTR _SizeX$[ebp]
	jge	SHORT $LN2@LISTBOX__A
; Line 1023
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR _SizeX$[ebp]
	mov	WORD PTR [eax+158], cx
$LN2@LISTBOX__A:
; Line 1025
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX__AddSize ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX_OwnerDraw
EXTRN	_GUI_DrawFocusRect:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	_WM_GetInsideRect:PROC
EXTRN	_GUI_ARRAY_GethItem:PROC
EXTRN	_GUI_GetYDistOfFont:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_OwnerDraw
_TEXT	SEGMENT
tv218 = -440						; size = 4
tv65 = -440						; size = 4
_rFocus$13268 = -240					; size = 8
_Rect$13263 = -224					; size = 8
_IsSelected$13252 = -205				; size = 1
_IsDisabled$13251 = -193				; size = 1
_ColorIndex$13250 = -184				; size = 4
_s$13249 = -172						; size = 4
_ItemIndex$13248 = -160					; size = 4
_FontDistY$13247 = -148					; size = 4
_rText$13246 = -136					; size = 8
_r$13245 = -120						; size = 8
_hItem$13244 = -104					; size = 4
_pItem$13243 = -92					; size = 4
_pObj$13242 = -80					; size = 4
_pObj$13239 = -68					; size = 4
_r$13238 = -56						; size = 4
_DistX$13234 = -44					; size = 4
_s$13233 = -32						; size = 4
_pOldFont$13232 = -20					; size = 4
_pObj$13231 = -8					; size = 4
_pDrawItemInfo$ = 8					; size = 4
_LISTBOX_OwnerDraw PROC					; COMDAT
; Line 1037
	push	ebp
	mov	ebp, esp
	sub	esp, 440				; 000001b8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-440]
	mov	ecx, 110				; 0000006eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1038
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv65[ebp], ecx
	cmp	DWORD PTR tv65[ebp], 1
	je	$LN17@LISTBOX_Ow
	cmp	DWORD PTR tv65[ebp], 24			; 00000018H
	je	SHORT $LN19@LISTBOX_Ow
	cmp	DWORD PTR tv65[ebp], 25			; 00000019H
	je	SHORT $LN18@LISTBOX_Ow
	jmp	$LN20@LISTBOX_Ow
$LN19@LISTBOX_Ow:
; Line 1044
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13231[ebp], eax
; Line 1045
	mov	eax, DWORD PTR _pObj$13231[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
	mov	DWORD PTR _pOldFont$13232[ebp], eax
; Line 1046
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13231[ebp], 0
; Line 1047
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	_LISTBOX__GetpStringLocked
	add	esp, 8
	mov	DWORD PTR _s$13233[ebp], eax
; Line 1048
	mov	eax, DWORD PTR _s$13233[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _DistX$13234[ebp], eax
; Line 1049
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$13233[ebp], 0
; Line 1050
	mov	eax, DWORD PTR _pOldFont$13232[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 1051
	mov	eax, DWORD PTR _DistX$13234[ebp]
	jmp	$LN22@LISTBOX_Ow
$LN18@LISTBOX_Ow:
; Line 1056
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13239[ebp], eax
; Line 1057
	mov	eax, DWORD PTR _pObj$13239[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_GUI_GetYDistOfFont
	add	esp, 4
	mov	edx, DWORD PTR _pObj$13239[ebp]
	movzx	ecx, WORD PTR [edx+156]
	add	eax, ecx
	mov	DWORD PTR _r$13238[ebp], eax
; Line 1058
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13239[ebp], 0
; Line 1059
	mov	eax, DWORD PTR _r$13238[ebp]
	jmp	$LN22@LISTBOX_Ow
$LN17@LISTBOX_Ow:
; Line 1072
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _ItemIndex$13248[ebp], ecx
; Line 1073
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13242[ebp], eax
; Line 1074
	mov	eax, DWORD PTR _ItemIndex$13248[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13242[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hItem$13244[ebp], eax
; Line 1075
	mov	eax, DWORD PTR _hItem$13244[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$13243[ebp], eax
; Line 1076
	lea	eax, DWORD PTR _r$13245[ebp]
	push	eax
	call	_WM_GetInsideRect
	add	esp, 4
; Line 1077
	call	_GUI_GetFontDistY
	mov	DWORD PTR _FontDistY$13247[ebp], eax
; Line 1079
	mov	eax, DWORD PTR _pItem$13243[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 2
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	BYTE PTR _IsDisabled$13251[ebp], cl
; Line 1080
	mov	eax, DWORD PTR _pItem$13243[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	mov	BYTE PTR _IsSelected$13252[ebp], cl
; Line 1081
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movzx	ecx, BYTE PTR [eax+154]
	and	ecx, 4
	je	SHORT $LN16@LISTBOX_Ow
; Line 1082
	movzx	eax, BYTE PTR _IsDisabled$13251[ebp]
	test	eax, eax
	je	SHORT $LN15@LISTBOX_Ow
; Line 1083
	mov	DWORD PTR _ColorIndex$13250[ebp], 3
; Line 1084
	jmp	SHORT $LN14@LISTBOX_Ow
$LN15@LISTBOX_Ow:
; Line 1085
	movzx	eax, BYTE PTR _IsSelected$13252[ebp]
	neg	eax
	sbb	eax, eax
	and	eax, 2
	mov	DWORD PTR _ColorIndex$13250[ebp], eax
$LN14@LISTBOX_Ow:
; Line 1087
	jmp	SHORT $LN13@LISTBOX_Ow
$LN16@LISTBOX_Ow:
; Line 1088
	movzx	eax, BYTE PTR _IsDisabled$13251[ebp]
	test	eax, eax
	je	SHORT $LN12@LISTBOX_Ow
; Line 1089
	mov	DWORD PTR _ColorIndex$13250[ebp], 3
; Line 1090
	jmp	SHORT $LN13@LISTBOX_Ow
$LN12@LISTBOX_Ow:
; Line 1091
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movsx	ecx, WORD PTR [eax+152]
	cmp	DWORD PTR _ItemIndex$13248[ebp], ecx
	jne	SHORT $LN10@LISTBOX_Ow
; Line 1092
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movzx	ecx, WORD PTR [eax+54]
	and	ecx, 1
	neg	ecx
	sbb	ecx, ecx
	neg	ecx
	add	ecx, 1
	mov	DWORD PTR _ColorIndex$13250[ebp], ecx
; Line 1093
	jmp	SHORT $LN13@LISTBOX_Ow
$LN10@LISTBOX_Ow:
; Line 1094
	mov	DWORD PTR _ColorIndex$13250[ebp], 0
$LN13@LISTBOX_Ow:
; Line 1099
	mov	eax, DWORD PTR _ColorIndex$13250[ebp]
	mov	ecx, DWORD PTR _pObj$13242[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+96]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 1100
	mov	eax, DWORD PTR _ColorIndex$13250[ebp]
	mov	ecx, DWORD PTR _pObj$13242[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+112]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 1101
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 1102
	call	_GUI_Clear
; Line 1103
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _rText$13246[ebp+2], cx
; Line 1104
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 1
	mov	WORD PTR _rText$13246[ebp], cx
; Line 1105
	movsx	eax, WORD PTR _rText$13246[ebp+2]
	mov	ecx, DWORD PTR _pItem$13243[ebp]
	movzx	edx, WORD PTR [ecx+2]
	lea	eax, DWORD PTR [eax+edx-1]
	mov	WORD PTR _rText$13246[ebp+6], ax
; Line 1106
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movsx	ecx, WORD PTR [eax+140]
	and	ecx, 3
	je	SHORT $LN8@LISTBOX_Ow
; Line 1108
	lea	eax, DWORD PTR _Rect$13263[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 1109
	movsx	eax, WORD PTR _rText$13246[ebp]
	movsx	ecx, WORD PTR _Rect$13263[ebp+4]
	add	eax, ecx
	movsx	edx, WORD PTR _Rect$13263[ebp]
	sub	eax, edx
	mov	ecx, DWORD PTR _pObj$13242[ebp]
	mov	edx, DWORD PTR [ecx+48]
	sub	eax, DWORD PTR [edx]
	mov	WORD PTR _rText$13246[ebp+4], ax
; Line 1110
	jmp	SHORT $LN7@LISTBOX_Ow
$LN8@LISTBOX_Ow:
; Line 1111
	movsx	eax, WORD PTR _rText$13246[ebp]
	mov	ecx, DWORD PTR _pItem$13243[ebp]
	movzx	edx, WORD PTR [ecx]
	lea	eax, DWORD PTR [eax+edx-1]
	mov	WORD PTR _rText$13246[ebp+4], ax
$LN7@LISTBOX_Ow:
; Line 1113
	mov	eax, DWORD PTR _ItemIndex$13248[ebp]
	push	eax
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	_LISTBOX__GetpStringLocked
	add	esp, 8
	mov	DWORD PTR _s$13249[ebp], eax
; Line 1114
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13243[ebp], 0
; Line 1115
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movsx	ecx, WORD PTR [eax+140]
	push	ecx
	lea	edx, DWORD PTR _rText$13246[ebp]
	push	edx
	mov	eax, DWORD PTR _s$13249[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 1116
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$13249[ebp], 0
; Line 1118
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movzx	ecx, BYTE PTR [eax+154]
	and	ecx, 4
	je	$LN6@LISTBOX_Ow
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movsx	ecx, WORD PTR [eax+152]
	cmp	DWORD PTR _ItemIndex$13248[ebp], ecx
	jne	$LN6@LISTBOX_Ow
; Line 1120
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+12]
	mov	WORD PTR _rFocus$13268[ebp], cx
; Line 1121
	mov	ax, WORD PTR _r$13245[ebp+4]
	mov	WORD PTR _rFocus$13268[ebp+4], ax
; Line 1122
	mov	eax, DWORD PTR _pObj$13242[ebp]
	movsx	ecx, WORD PTR [eax+140]
	and	ecx, 12					; 0000000cH
	mov	DWORD PTR tv218[ebp], ecx
	je	SHORT $LN3@LISTBOX_Ow
	cmp	DWORD PTR tv218[ebp], 4
	je	SHORT $LN1@LISTBOX_Ow
	cmp	DWORD PTR tv218[ebp], 12		; 0000000cH
	je	SHORT $LN2@LISTBOX_Ow
	jmp	$LN4@LISTBOX_Ow
$LN3@LISTBOX_Ow:
; Line 1124
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _rFocus$13268[ebp+2], cx
; Line 1125
	mov	eax, DWORD PTR _pDrawItemInfo$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR _FontDistY$13247[ebp]
	lea	eax, DWORD PTR [ecx+edx-1]
	mov	WORD PTR _rFocus$13268[ebp+6], ax
; Line 1126
	jmp	$LN4@LISTBOX_Ow
$LN2@LISTBOX_Ow:
; Line 1128
	mov	eax, DWORD PTR _GUI_Context+56
	movsx	eax, WORD PTR [eax+6]
	mov	ecx, DWORD PTR _GUI_Context+56
	movsx	edx, WORD PTR [ecx+2]
	sub	eax, edx
	sub	eax, DWORD PTR _FontDistY$13247[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _pDrawItemInfo$[ebp]
	add	eax, DWORD PTR [ecx+16]
	mov	WORD PTR _rFocus$13268[ebp+2], ax
; Line 1129
	movsx	eax, WORD PTR _rFocus$13268[ebp+2]
	mov	ecx, DWORD PTR _FontDistY$13247[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _rFocus$13268[ebp+6], dx
; Line 1130
	jmp	SHORT $LN4@LISTBOX_Ow
$LN1@LISTBOX_Ow:
; Line 1132
	mov	eax, DWORD PTR _GUI_Context+56
	movsx	ecx, WORD PTR [eax+6]
	mov	edx, DWORD PTR _GUI_Context+56
	movsx	eax, WORD PTR [edx+2]
	sub	ecx, eax
	mov	edx, DWORD PTR _pDrawItemInfo$[ebp]
	add	ecx, DWORD PTR [edx+16]
	mov	WORD PTR _rFocus$13268[ebp+6], cx
; Line 1133
	movsx	eax, WORD PTR _rFocus$13268[ebp+6]
	sub	eax, DWORD PTR _FontDistY$13247[ebp]
	add	eax, 1
	mov	WORD PTR _rFocus$13268[ebp+2], ax
$LN4@LISTBOX_Ow:
; Line 1136
	mov	eax, DWORD PTR _ColorIndex$13250[ebp]
	mov	ecx, DWORD PTR _pObj$13242[ebp]
	mov	edx, 16777215				; 00ffffffH
	sub	edx, DWORD PTR [ecx+eax*4+96]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 1137
	push	0
	lea	eax, DWORD PTR _rFocus$13268[ebp]
	push	eax
	call	_GUI_DrawFocusRect
	add	esp, 8
$LN6@LISTBOX_Ow:
; Line 1139
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13242[ebp], 0
; Line 1140
	xor	eax, eax
	jmp	SHORT $LN22@LISTBOX_Ow
$LN20@LISTBOX_Ow:
; Line 1143
	xor	eax, eax
$LN22@LISTBOX_Ow:
; Line 1144
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN29@LISTBOX_Ow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 440				; 000001b8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN29@LISTBOX_Ow:
	DD	4
	DD	$LN28@LISTBOX_Ow
$LN28@LISTBOX_Ow:
	DD	-120					; ffffff88H
	DD	8
	DD	$LN24@LISTBOX_Ow
	DD	-136					; ffffff78H
	DD	8
	DD	$LN25@LISTBOX_Ow
	DD	-224					; ffffff20H
	DD	8
	DD	$LN26@LISTBOX_Ow
	DD	-240					; ffffff10H
	DD	8
	DD	$LN27@LISTBOX_Ow
$LN27@LISTBOX_Ow:
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	117					; 00000075H
	DB	115					; 00000073H
	DB	0
$LN26@LISTBOX_Ow:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN25@LISTBOX_Ow:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN24@LISTBOX_Ow:
	DB	114					; 00000072H
	DB	0
_LISTBOX_OwnerDraw ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX_AddKey
PUBLIC	_LISTBOX_SetSel
PUBLIC	__$ArrayPad$
PUBLIC	_LISTBOX_Callback
EXTRN	_WM_DefaultProc:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM_IsWindow:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetScrollState:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_WIDGET_HandleActive:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_Callback
_TEXT	SEGMENT
tv76 = -304						; size = 4
tv74 = -304						; size = 4
_Key$13317 = -104					; size = 4
_Sel$13308 = -92					; size = 4
_pInfo$13305 = -80					; size = 4
_Msg$ = -68						; size = 16
_ScrollState$ = -44					; size = 12
_pObj$ = -24						; size = 4
_hObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_LISTBOX_Callback PROC					; COMDAT
; Line 1150
	push	ebp
	mov	ebp, esp
	sub	esp, 304				; 00000130H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-304]
	mov	ecx, 76					; 0000004cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1155
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 1157
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN26@LISTBOX_Ca
; Line 1159
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax], 30			; 0000001eH
	jne	SHORT $LN25@LISTBOX_Ca
; Line 1160
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN25@LISTBOX_Ca
; Line 1161
	push	11					; 0000000bH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
$LN25@LISTBOX_Ca:
; Line 1164
	jmp	$LN27@LISTBOX_Ca
$LN26@LISTBOX_Ca:
; Line 1166
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv74[ebp]
	sub	edx, 5
	mov	DWORD PTR tv74[ebp], edx
	cmp	DWORD PTR tv74[ebp], 33			; 00000021H
	ja	$LN22@LISTBOX_Ca
	mov	eax, DWORD PTR tv74[ebp]
	movzx	ecx, BYTE PTR $LN29@LISTBOX_Ca[eax]
	jmp	DWORD PTR $LN34@LISTBOX_Ca[ecx*4]
$LN21@LISTBOX_Ca:
; Line 1168
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv76[ebp], ecx
	cmp	DWORD PTR tv76[ebp], 5
	je	SHORT $LN18@LISTBOX_Ca
	cmp	DWORD PTR tv76[ebp], 6
	je	$LN14@LISTBOX_Ca
	jmp	$LN19@LISTBOX_Ca
$LN18@LISTBOX_Ca:
; Line 1170
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN17@LISTBOX_Ca
; Line 1171
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 1172
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1173
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+68], ecx
; Line 1174
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1175
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
; Line 1176
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
	jmp	SHORT $LN16@LISTBOX_Ca
$LN17@LISTBOX_Ca:
; Line 1177
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN16@LISTBOX_Ca
; Line 1178
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 1179
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1180
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+80], ecx
; Line 1181
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1182
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
; Line 1183
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
$LN16@LISTBOX_Ca:
; Line 1185
	jmp	SHORT $LN19@LISTBOX_Ca
$LN14@LISTBOX_Ca:
; Line 1192
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
$LN19@LISTBOX_Ca:
; Line 1195
	jmp	$LN22@LISTBOX_Ca
$LN13@LISTBOX_Ca:
; Line 1197
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnPaint
	add	esp, 8
; Line 1198
	jmp	$LN22@LISTBOX_Ca
$LN12@LISTBOX_Ca:
; Line 1201
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pInfo$13305[ebp], ecx
; Line 1202
	mov	eax, DWORD PTR _pInfo$13305[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	je	SHORT $LN11@LISTBOX_Ca
; Line 1204
	mov	eax, DWORD PTR _pInfo$13305[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pInfo$13305[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemFromPos
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Sel$13308[ebp], eax
; Line 1205
	cmp	DWORD PTR _Sel$13308[ebp], 0
	jl	SHORT $LN10@LISTBOX_Ca
; Line 1206
	mov	eax, DWORD PTR _Sel$13308[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ToggleMultiSel
	add	esp, 8
; Line 1207
	mov	eax, DWORD PTR _Sel$13308[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_SetSel
	add	esp, 8
; Line 1208
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
$LN10@LISTBOX_Ca:
; Line 1210
	jmp	$LN27@LISTBOX_Ca
$LN11@LISTBOX_Ca:
; Line 1213
	jmp	$LN22@LISTBOX_Ca
$LN9@LISTBOX_Ca:
; Line 1215
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 1216
	jmp	$LN27@LISTBOX_Ca
$LN8@LISTBOX_Ca:
; Line 1219
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnMouseOver
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN7@LISTBOX_Ca
; Line 1220
	jmp	$LN27@LISTBOX_Ca
$LN7@LISTBOX_Ca:
; Line 1221
	jmp	$LN22@LISTBOX_Ca
$LN6@LISTBOX_Ca:
; Line 1224
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__FreeAttached
	add	esp, 4
; Line 1225
	jmp	$LN22@LISTBOX_Ca
$LN5@LISTBOX_Ca:
; Line 1227
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	cmp	DWORD PTR [ecx+4], 0
	jle	SHORT $LN4@LISTBOX_Ca
; Line 1229
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _Key$13317[ebp], edx
; Line 1230
	mov	eax, DWORD PTR _Key$13317[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_AddKey
	add	esp, 8
	test	eax, eax
	je	SHORT $LN4@LISTBOX_Ca
; Line 1231
	jmp	SHORT $LN27@LISTBOX_Ca
$LN4@LISTBOX_Ca:
; Line 1235
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Msg$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _Msg$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _Msg$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _Msg$[ebp+12], edx
; Line 1236
	mov	DWORD PTR _Msg$[ebp], 33		; 00000021H
; Line 1237
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SendToOwner
	add	esp, 8
; Line 1238
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_IsWindow
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN2@LISTBOX_Ca
; Line 1239
	jmp	SHORT $LN27@LISTBOX_Ca
$LN2@LISTBOX_Ca:
; Line 1241
	jmp	SHORT $LN22@LISTBOX_Ca
$LN1@LISTBOX_Ca:
; Line 1243
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 1244
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN22@LISTBOX_Ca:
; Line 1247
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN27@LISTBOX_Ca:
; Line 1248
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN33@LISTBOX_Ca
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 304				; 00000130H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN33@LISTBOX_Ca:
	DD	2
	DD	$LN32@LISTBOX_Ca
$LN32@LISTBOX_Ca:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN30@LISTBOX_Ca
	DD	-68					; ffffffbcH
	DD	16					; 00000010H
	DD	$LN31@LISTBOX_Ca
$LN31@LISTBOX_Ca:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
$LN30@LISTBOX_Ca:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN34@LISTBOX_Ca:
	DD	$LN1@LISTBOX_Ca
	DD	$LN6@LISTBOX_Ca
	DD	$LN9@LISTBOX_Ca
	DD	$LN5@LISTBOX_Ca
	DD	$LN13@LISTBOX_Ca
	DD	$LN8@LISTBOX_Ca
	DD	$LN12@LISTBOX_Ca
	DD	$LN21@LISTBOX_Ca
	DD	$LN22@LISTBOX_Ca
$LN29@LISTBOX_Ca:
	DB	0
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	1
	DB	2
	DB	8
	DB	3
	DB	4
	DB	5
	DB	6
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	8
	DB	7
_LISTBOX_Callback ENDP
_TEXT	ENDS
EXTRN	_WM__SendMessage:PROC
EXTRN	_WM_GetParent:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __NotifyOwner
_TEXT	SEGMENT
tv74 = -244						; size = 4
_pObj$ = -44						; size = 4
_hOwner$ = -32						; size = 4
_Msg$ = -20						; size = 16
_hObj$ = 8						; size = 4
_Notification$ = 12					; size = 4
__NotifyOwner PROC					; COMDAT
; Line 380
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 381
	mov	DWORD PTR _Msg$[ebp], 0
	xor	eax, eax
	mov	DWORD PTR _Msg$[ebp+4], eax
	mov	DWORD PTR _Msg$[ebp+8], eax
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 384
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 385
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN3@NotifyOwne
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR tv74[ebp], edx
	jmp	SHORT $LN4@NotifyOwne
$LN3@NotifyOwne:
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR tv74[ebp], eax
$LN4@NotifyOwne:
	mov	ecx, DWORD PTR tv74[ebp]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 386
	mov	DWORD PTR _Msg$[ebp], 38		; 00000026H
; Line 387
	mov	eax, DWORD PTR _Notification$[ebp]
	mov	DWORD PTR _Msg$[ebp+12], eax
; Line 388
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _Msg$[ebp+8], eax
; Line 389
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 390
	lea	eax, DWORD PTR _Msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 391
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@NotifyOwne
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@NotifyOwne:
	DD	1
	DD	$LN6@NotifyOwne
$LN6@NotifyOwne:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN5@NotifyOwne
$LN5@NotifyOwne:
	DB	77					; 0000004dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
__NotifyOwner ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SendToOwner
_TEXT	SEGMENT
tv71 = -220						; size = 4
_pObj$ = -20						; size = 4
_hOwner$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__SendToOwner PROC					; COMDAT
; Line 401
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 404
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 405
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+144], 0
	je	SHORT $LN3@SendToOwne
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+144]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN4@SendToOwne
$LN3@SendToOwne:
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetParent
	add	esp, 4
	mov	DWORD PTR tv71[ebp], eax
$LN4@SendToOwne:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 406
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 407
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 408
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hOwner$[ebp]
	push	ecx
	call	_WM__SendMessage
	add	esp, 8
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SendToOwner ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __FreeAttached
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__FreeAttached PROC					; COMDAT
; Line 568
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 570
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 571
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 572
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 573
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__FreeAttached ENDP
_TEXT	ENDS
EXTRN	_WIDGET__EFFECT_DrawDown:PROC
EXTRN	_GUI_ClearRectEx:PROC
EXTRN	_WM_GetHasTrans:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_GUI__IntersectRect:PROC
EXTRN	_GUI_MoveRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_BackColor$ = -168					; size = 4
_pfDrawItem$ = -156					; size = 4
_ScrollStateV$ = -144					; size = 4
_i$ = -132						; size = 4
_NumItems$ = -120					; size = 4
_ItemDistY$ = -108					; size = 4
_ClipRect$ = -96					; size = 8
_RectItem$ = -80					; size = 8
_RectInside$ = -64					; size = 8
_ItemInfo$ = -48					; size = 32
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnPaint PROC						; COMDAT
; Line 579
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 587
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 588
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	mov	DWORD PTR _BackColor$[ebp], ecx
; Line 589
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	mov	DWORD PTR _pfDrawItem$[ebp], ecx
; Line 590
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
; Line 591
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 592
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 594
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _ClipRect$[ebp], edx
	mov	DWORD PTR _ClipRect$[ebp+4], eax
; Line 595
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	neg	ecx
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	movsx	eax, WORD PTR [edx]
	neg	eax
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 596
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 597
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI__IntersectRect
	add	esp, 8
; Line 598
	mov	ax, WORD PTR _ClipRect$[ebp]
	mov	WORD PTR _RectItem$[ebp], ax
; Line 599
	mov	ax, WORD PTR _ClipRect$[ebp+4]
	mov	WORD PTR _RectItem$[ebp+4], ax
; Line 601
	mov	DWORD PTR _ItemInfo$[ebp+4], 1
; Line 602
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp], eax
; Line 603
	movsx	eax, WORD PTR _RectInside$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	sub	eax, DWORD PTR [ecx+80]
	mov	DWORD PTR _ItemInfo$[ebp+12], eax
; Line 604
	movsx	eax, WORD PTR _RectInside$[ebp+2]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 605
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 607
	mov	eax, DWORD PTR _ScrollStateV$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN7@OnPaint
$LN6@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN7@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	$LN5@OnPaint
; Line 608
	mov	ax, WORD PTR _ItemInfo$[ebp+16]
	mov	WORD PTR _RectItem$[ebp+2], ax
; Line 610
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	movsx	ecx, WORD PTR _ClipRect$[ebp+6]
	cmp	eax, ecx
	jle	SHORT $LN4@OnPaint
; Line 611
	jmp	SHORT $LN5@OnPaint
$LN4@OnPaint:
; Line 613
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	mov	DWORD PTR _ItemDistY$[ebp], eax
; Line 614
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	mov	ecx, DWORD PTR _ItemDistY$[ebp]
	lea	edx, DWORD PTR [eax+ecx-1]
	mov	WORD PTR _RectItem$[ebp+6], dx
; Line 616
	movsx	eax, WORD PTR _RectItem$[ebp+6]
	movsx	ecx, WORD PTR _ClipRect$[ebp+2]
	cmp	eax, ecx
	jl	SHORT $LN3@OnPaint
; Line 618
	lea	eax, DWORD PTR _RectItem$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 620
	mov	eax, DWORD PTR _i$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+8], eax
; Line 622
	cmp	DWORD PTR _pfDrawItem$[ebp], 0
	je	SHORT $LN3@OnPaint
; Line 623
	mov	esi, esp
	lea	eax, DWORD PTR _ItemInfo$[ebp]
	push	eax
	call	DWORD PTR _pfDrawItem$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN3@OnPaint:
; Line 626
	mov	eax, DWORD PTR _ItemInfo$[ebp+16]
	add	eax, DWORD PTR _ItemDistY$[ebp]
	mov	DWORD PTR _ItemInfo$[ebp+16], eax
; Line 627
	jmp	$LN6@OnPaint
$LN5@OnPaint:
; Line 628
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 631
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetHasTrans
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN1@OnPaint
; Line 635
	mov	ax, WORD PTR _ItemInfo$[ebp+16]
	mov	WORD PTR _RectItem$[ebp+2], ax
; Line 636
	mov	ax, WORD PTR _RectInside$[ebp+6]
	mov	WORD PTR _RectItem$[ebp+6], ax
; Line 637
	mov	eax, DWORD PTR _BackColor$[ebp]
	push	eax
	call	_LCD_SetBkColor
	add	esp, 4
; Line 638
	lea	eax, DWORD PTR _RectItem$[ebp]
	push	eax
	call	_GUI_ClearRectEx
	add	esp, 4
$LN1@OnPaint:
; Line 641
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 642
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_WIDGET__EFFECT_DrawDown
	add	esp, 4
; Line 643
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 644
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@OnPaint:
	DD	4
	DD	$LN14@OnPaint
$LN14@OnPaint:
	DD	-48					; ffffffd0H
	DD	32					; 00000020H
	DD	$LN10@OnPaint
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN11@OnPaint
	DD	-80					; ffffffb0H
	DD	8
	DD	$LN12@OnPaint
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN13@OnPaint
$LN13@OnPaint:
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN12@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN11@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN10@OnPaint:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__OnPaint ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __ToggleMultiSel
_TEXT	SEGMENT
_pItem$13018 = -56					; size = 4
_hItem$13016 = -44					; size = 4
_ItemArray$ = -32					; size = 4
_Flags$ = -17						; size = 1
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
__ToggleMultiSel PROC					; COMDAT
; Line 650
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 654
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 655
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 656
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cl, BYTE PTR [eax+154]
	mov	BYTE PTR _Flags$[ebp], cl
; Line 657
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 658
	movzx	eax, BYTE PTR _Flags$[ebp]
	and	eax, 4
	je	SHORT $LN5@ToggleMult
; Line 659
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hItem$13016[ebp], eax
; Line 660
	cmp	DWORD PTR _hItem$13016[ebp], 0
	je	SHORT $LN5@ToggleMult
; Line 661
	mov	eax, DWORD PTR _hItem$13016[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$13018[ebp], eax
; Line 662
	mov	eax, DWORD PTR _pItem$13018[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 2
	jne	SHORT $LN2@ToggleMult
; Line 663
	mov	eax, DWORD PTR _pItem$13018[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	xor	ecx, 1
	mov	edx, DWORD PTR _pItem$13018[ebp]
	mov	BYTE PTR [edx+8], cl
; Line 664
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13018[ebp], 0
; Line 665
	push	4
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
; Line 666
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItem
	add	esp, 8
; Line 667
	jmp	SHORT $LN5@ToggleMult
$LN2@ToggleMult:
; Line 668
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13018[ebp], 0
$LN5@ToggleMult:
; Line 672
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__ToggleMultiSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetItemFromPos
_TEXT	SEGMENT
_y0$13042 = -96						; size = 4
_i$13041 = -84						; size = 4
_Rect$ = -72						; size = 8
_ItemSize$ = -56					; size = 4
_ScrollStateV$ = -44					; size = 4
_NumItems$ = -32					; size = 4
_Sel$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
__GetItemFromPos PROC					; COMDAT
; Line 678
	push	ebp
	mov	ebp, esp
	sub	esp, 292				; 00000124H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-292]
	mov	ecx, 73					; 00000049H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 680
	mov	DWORD PTR _Sel$[ebp], -1
; Line 684
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 685
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
; Line 686
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 687
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 688
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 689
	movsx	eax, WORD PTR _Rect$[ebp]
	cmp	DWORD PTR _x$[ebp], eax
	jl	SHORT $LN6@GetItemFro
	movsx	eax, WORD PTR _Rect$[ebp+2]
	cmp	DWORD PTR _y$[ebp], eax
	jl	SHORT $LN6@GetItemFro
; Line 690
	movsx	eax, WORD PTR _Rect$[ebp+4]
	cmp	DWORD PTR _x$[ebp], eax
	jg	SHORT $LN6@GetItemFro
	movsx	eax, WORD PTR _Rect$[ebp+6]
	cmp	DWORD PTR _y$[ebp], eax
	jg	SHORT $LN6@GetItemFro
; Line 691
	movsx	eax, WORD PTR _Rect$[ebp+2]
	mov	DWORD PTR _y0$13042[ebp], eax
; Line 692
	mov	eax, DWORD PTR _ScrollStateV$[ebp]
	mov	DWORD PTR _i$13041[ebp], eax
	jmp	SHORT $LN4@GetItemFro
$LN3@GetItemFro:
	mov	eax, DWORD PTR _i$13041[ebp]
	add	eax, 1
	mov	DWORD PTR _i$13041[ebp], eax
$LN4@GetItemFro:
	mov	eax, DWORD PTR _i$13041[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN6@GetItemFro
; Line 693
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _y0$13042[ebp]
	jl	SHORT $LN1@GetItemFro
; Line 694
	mov	eax, DWORD PTR _i$13041[ebp]
	mov	DWORD PTR _Sel$[ebp], eax
$LN1@GetItemFro:
; Line 696
	mov	eax, DWORD PTR _i$13041[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemSizeY
	add	esp, 8
	mov	DWORD PTR _ItemSize$[ebp], eax
; Line 697
	mov	eax, DWORD PTR _y0$13042[ebp]
	add	eax, DWORD PTR _ItemSize$[ebp]
	mov	DWORD PTR _y0$13042[ebp], eax
; Line 698
	jmp	SHORT $LN3@GetItemFro
$LN6@GetItemFro:
; Line 701
	mov	eax, DWORD PTR _Sel$[ebp]
; Line 702
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@GetItemFro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 292				; 00000124H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN11@GetItemFro:
	DD	1
	DD	$LN10@GetItemFro
$LN10@GetItemFro:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN9@GetItemFro
$LN9@GetItemFro:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__GetItemFromPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnTouch
_TEXT	SEGMENT
_pState$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 708
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 709
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 710
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	je	SHORT $LN3@OnTouch
; Line 711
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN2@OnTouch
; Line 712
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
$LN2@OnTouch:
; Line 714
	jmp	SHORT $LN4@OnTouch
$LN3@OnTouch:
; Line 715
	push	3
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
$LN4@OnTouch:
; Line 717
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnMouseOver
_TEXT	SEGMENT
_pState$ = -68						; size = 4
_hOwner$ = -56						; size = 4
_pObj$ = -44						; size = 4
_NumVisItems$ = -32					; size = 4
_Sel$ = -20						; size = 4
_ScrollStateV$ = -8					; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnMouseOver PROC					; COMDAT
; Line 724
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 730
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 731
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 732
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
; Line 733
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+144]
	mov	DWORD PTR _hOwner$[ebp], ecx
; Line 734
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 735
	cmp	DWORD PTR _hOwner$[ebp], 0
	je	SHORT $LN4@OnMouseOve
; Line 736
	cmp	DWORD PTR _pState$[ebp], 0
	je	SHORT $LN4@OnMouseOve
; Line 737
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pState$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetItemFromPos
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Sel$[ebp], eax
; Line 738
	cmp	DWORD PTR _Sel$[ebp], 0
	jl	SHORT $LN4@OnMouseOve
; Line 739
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumVisItems
	add	esp, 4
	mov	DWORD PTR _NumVisItems$[ebp], eax
; Line 740
	mov	eax, DWORD PTR _ScrollStateV$[ebp]
	add	eax, DWORD PTR _NumVisItems$[ebp]
	cmp	DWORD PTR _Sel$[ebp], eax
	jge	SHORT $LN4@OnMouseOve
; Line 741
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_SetSel
	add	esp, 8
$LN4@OnMouseOve:
; Line 746
	xor	eax, eax
; Line 747
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnMouseOver ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX_SetText
PUBLIC	_LISTBOX_CreateEx
EXTRN	_WM_DeleteWindow:PROC
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_CreateEx
_TEXT	SEGMENT
_pObj$13346 = -32					; size = 4
_ItemArray$13345 = -20					; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_ppText$ = 40						; size = 4
_LISTBOX_CreateEx PROC					; COMDAT
; Line 1256
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1258
	mov	eax, DWORD PTR _ExFlags$[ebp]
	mov	DWORD PTR _ExFlags$[ebp], eax
; Line 1261
	push	112					; 00000070H
	push	OFFSET _LISTBOX_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 1262
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN4@LISTBOX_Cr
; Line 1265
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _ItemArray$13345[ebp], eax
; Line 1266
	cmp	DWORD PTR _ItemArray$13345[ebp], 0
	je	$LN3@LISTBOX_Cr
; Line 1267
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13346[ebp], eax
; Line 1269
	mov	eax, DWORD PTR _pObj$13346[ebp]
	mov	ecx, DWORD PTR _ItemArray$13345[ebp]
	mov	DWORD PTR [eax+56], ecx
; Line 1271
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13346[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 1272
	mov	eax, DWORD PTR _pObj$13346[ebp]
	mov	DWORD PTR [eax+148], 1279873858		; 4c495342H
; Line 1273
	mov	edi, DWORD PTR _pObj$13346[ebp]
	add	edi, 88					; 00000058H
	mov	ecx, 14					; 0000000eH
	mov	esi, OFFSET _LISTBOX_DefaultProps
	rep movsd
; Line 1274
	mov	eax, DWORD PTR _pObj$13346[ebp]
	mov	DWORD PTR [eax+60], OFFSET _LISTBOX_OwnerDraw
; Line 1275
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13346[ebp], 0
; Line 1276
	cmp	DWORD PTR _ppText$[ebp], 0
	je	SHORT $LN2@LISTBOX_Cr
; Line 1279
	mov	eax, DWORD PTR _ppText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_SetText
	add	esp, 8
$LN2@LISTBOX_Cr:
; Line 1281
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 1282
	jmp	SHORT $LN4@LISTBOX_Cr
$LN3@LISTBOX_Cr:
; Line 1283
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_DeleteWindow
	add	esp, 4
$LN4@LISTBOX_Cr:
; Line 1287
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 1288
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_CreateEx ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX_InvalidateItem
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_InvalidateItem
_TEXT	SEGMENT
_NumItems$ = -44					; size = 4
_i$ = -32						; size = 4
_pObj$ = -20						; size = 4
_pItem$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_LISTBOX_InvalidateItem PROC				; COMDAT
; Line 1294
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1299
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN9@LISTBOX_In
; Line 1301
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1302
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 1303
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	$LN7@LISTBOX_In
; Line 1304
	cmp	DWORD PTR _Index$[ebp], 0
	jge	$LN6@LISTBOX_In
; Line 1305
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN5@LISTBOX_In
$LN4@LISTBOX_In:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@LISTBOX_In:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN3@LISTBOX_In
; Line 1306
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemSize
	add	esp, 8
; Line 1307
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1308
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 1309
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1310
	jmp	SHORT $LN4@LISTBOX_In
$LN3@LISTBOX_In:
; Line 1311
	xor	eax, eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	WORD PTR [ecx+158], ax
; Line 1312
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1313
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 1314
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
; Line 1315
	jmp	SHORT $LN2@LISTBOX_In
$LN6@LISTBOX_In:
; Line 1316
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemSize
	add	esp, 8
; Line 1317
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1318
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 1319
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemAndBelow
	add	esp, 8
$LN2@LISTBOX_In:
; Line 1321
	jmp	SHORT $LN9@LISTBOX_In
$LN7@LISTBOX_In:
; Line 1322
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN9@LISTBOX_In:
; Line 1326
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_InvalidateItem ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_AddKey
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
_LISTBOX_AddKey PROC					; COMDAT
; Line 1335
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1336
	mov	DWORD PTR _r$[ebp], 0
; Line 1337
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@LISTBOX_Ad
; Line 1339
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__AddKey
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
$LN1@LISTBOX_Ad:
; Line 1342
	mov	eax, DWORD PTR _r$[ebp]
; Line 1343
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_AddKey ENDP
_TEXT	ENDS
PUBLIC	_LISTBOX_DecSel
PUBLIC	_LISTBOX_IncSel
PUBLIC	_LISTBOX_GetSel
EXTRN	_WM_SetScrollValue:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __AddKey
_TEXT	SEGMENT
tv64 = -220						; size = 4
_r$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
__AddKey PROC						; COMDAT
; Line 804
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 807
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	mov	ecx, DWORD PTR tv64[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR tv64[ebp], ecx
	cmp	DWORD PTR tv64[ebp], 16			; 00000010H
	ja	$LN2@AddKey
	mov	edx, DWORD PTR tv64[ebp]
	movzx	eax, BYTE PTR $LN14@AddKey[edx]
	jmp	DWORD PTR $LN15@AddKey[eax*4]
$LN9@AddKey:
; Line 809
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_GetSel
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__ToggleMultiSel
	add	esp, 8
; Line 810
	mov	eax, 1
	jmp	$LN12@AddKey
$LN8@AddKey:
; Line 812
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 813
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+92]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+80]
	push	ecx
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 76					; 0000004cH
	push	eax
	call	_WM_SetScrollValue
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 814
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 815
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN7@AddKey
; Line 816
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 817
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
$LN7@AddKey:
; Line 819
	mov	eax, 1
	jmp	$LN12@AddKey
$LN6@AddKey:
; Line 821
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 822
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, WORD PTR [eax+92]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+80]
	sub	eax, ecx
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	add	ecx, 76					; 0000004cH
	push	ecx
	call	_WM_SetScrollValue
	add	esp, 8
	mov	DWORD PTR _r$[ebp], eax
; Line 823
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 824
	cmp	DWORD PTR _r$[ebp], 0
	je	SHORT $LN5@AddKey
; Line 825
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 826
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
$LN5@AddKey:
; Line 828
	mov	eax, 1
	jmp	SHORT $LN12@AddKey
$LN4@AddKey:
; Line 830
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_IncSel
	add	esp, 4
; Line 831
	mov	eax, 1
	jmp	SHORT $LN12@AddKey
$LN3@AddKey:
; Line 833
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_DecSel
	add	esp, 4
; Line 834
	mov	eax, 1
	jmp	SHORT $LN12@AddKey
$LN2@AddKey:
; Line 836
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	call	__IsAlphaNum
	add	esp, 4
	test	eax, eax
	je	SHORT $LN10@AddKey
; Line 837
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SelectByKey
	add	esp, 8
; Line 838
	mov	eax, 1
	jmp	SHORT $LN12@AddKey
$LN10@AddKey:
; Line 841
	xor	eax, eax
$LN12@AddKey:
; Line 842
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN15@AddKey:
	DD	$LN6@AddKey
	DD	$LN3@AddKey
	DD	$LN8@AddKey
	DD	$LN4@AddKey
	DD	$LN9@AddKey
	DD	$LN2@AddKey
$LN14@AddKey:
	DB	0
	DB	1
	DB	2
	DB	3
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	5
	DB	4
__AddKey ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __IsAlphaNum
_TEXT	SEGMENT
_Key$ = 8						; size = 4
__IsAlphaNum PROC					; COMDAT
; Line 529
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 530
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	call	__Tolower
	add	esp, 4
	mov	DWORD PTR _Key$[ebp], eax
; Line 531
	cmp	DWORD PTR _Key$[ebp], 97		; 00000061H
	jl	SHORT $LN2@IsAlphaNum
	cmp	DWORD PTR _Key$[ebp], 122		; 0000007aH
	jg	SHORT $LN2@IsAlphaNum
; Line 532
	mov	eax, 1
	jmp	SHORT $LN3@IsAlphaNum
$LN2@IsAlphaNum:
; Line 534
	cmp	DWORD PTR _Key$[ebp], 48		; 00000030H
	jl	SHORT $LN1@IsAlphaNum
	cmp	DWORD PTR _Key$[ebp], 57		; 00000039H
	jg	SHORT $LN1@IsAlphaNum
; Line 535
	mov	eax, 1
	jmp	SHORT $LN3@IsAlphaNum
$LN1@IsAlphaNum:
; Line 537
	xor	eax, eax
$LN3@IsAlphaNum:
; Line 538
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__IsAlphaNum ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Tolower
_TEXT	SEGMENT
_Key$ = 8						; size = 4
__Tolower PROC						; COMDAT
; Line 518
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 519
	cmp	DWORD PTR _Key$[ebp], 65		; 00000041H
	jl	SHORT $LN1@Tolower
	cmp	DWORD PTR _Key$[ebp], 90		; 0000005aH
	jg	SHORT $LN1@Tolower
; Line 520
	mov	eax, DWORD PTR _Key$[ebp]
	add	eax, 32					; 00000020H
	mov	DWORD PTR _Key$[ebp], eax
$LN1@Tolower:
; Line 522
	mov	eax, DWORD PTR _Key$[ebp]
; Line 523
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Tolower ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SelectByKey
_TEXT	SEGMENT
_FirstChar$12968 = -56					; size = 4
_s$12967 = -44						; size = 4
_pObj$ = -32						; size = 4
_NumItems$ = -20					; size = 4
_i$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Key$ = 12						; size = 4
__SelectByKey PROC					; COMDAT
; Line 544
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-252]
	mov	ecx, 63					; 0000003fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 547
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 548
	mov	eax, DWORD PTR _Key$[ebp]
	push	eax
	call	__Tolower
	add	esp, 4
	mov	DWORD PTR _Key$[ebp], eax
; Line 549
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 550
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 551
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN4@SelectByKe
$LN3@SelectByKe:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@SelectByKe:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN5@SelectByKe
; Line 554
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__GetpStringLocked
	add	esp, 8
	mov	DWORD PTR _s$12967[ebp], eax
; Line 555
	mov	eax, DWORD PTR _s$12967[ebp]
	movzx	ecx, BYTE PTR [eax]
	push	ecx
	call	__Tolower
	add	esp, 4
	mov	DWORD PTR _FirstChar$12968[ebp], eax
; Line 556
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _s$12967[ebp], 0
; Line 557
	mov	eax, DWORD PTR _FirstChar$12968[ebp]
	cmp	eax, DWORD PTR _Key$[ebp]
	jne	SHORT $LN1@SelectByKe
; Line 558
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_SetSel
	add	esp, 8
; Line 559
	jmp	SHORT $LN5@SelectByKe
$LN1@SelectByKe:
; Line 561
	jmp	SHORT $LN3@SelectByKe
$LN5@SelectByKe:
; Line 562
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SelectByKey ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_LISTBOX_AddString
EXTRN	_strcpy:PROC
EXTRN	_GUI_ARRAY_AddItem:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LISTBOX_AddString
_TEXT	SEGMENT
_ItemIndex$ = -68					; size = 4
_Item$ = -56						; size = 12
_pItem$ = -36						; size = 4
_pObj$ = -24						; size = 4
_ItemArray$ = -12					; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_s$ = 12						; size = 4
_LISTBOX_AddString PROC					; COMDAT
; Line 1349
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 1353
	xor	eax, eax
	mov	WORD PTR _Item$[ebp], ax
	xor	eax, eax
	mov	WORD PTR _Item$[ebp+2], ax
	xor	eax, eax
	mov	DWORD PTR _Item$[ebp+4], eax
	mov	DWORD PTR _Item$[ebp+8], eax
; Line 1356
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN3@LISTBOX_Ad@2
	cmp	DWORD PTR _s$[ebp], 0
	je	$LN3@LISTBOX_Ad@2
; Line 1358
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1359
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 1360
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1361
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	add	eax, 12					; 0000000cH
	push	eax
	lea	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ItemArray$[ebp]
	push	edx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	$LN3@LISTBOX_Ad@2
; Line 1362
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	sub	eax, 1
	mov	DWORD PTR _ItemIndex$[ebp], eax
; Line 1363
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 1364
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	DWORD PTR [eax+4], -1
; Line 1365
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 9
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 1366
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 1367
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1368
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItemSize
	add	esp, 8
; Line 1369
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_LISTBOX__AddSize
	add	esp, 8
; Line 1370
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 1371
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
; Line 1372
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItem
	add	esp, 8
$LN3@LISTBOX_Ad@2:
; Line 1376
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@LISTBOX_Ad@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@LISTBOX_Ad@2:
	DD	1
	DD	$LN6@LISTBOX_Ad@2
$LN6@LISTBOX_Ad@2:
	DD	-56					; ffffffc8H
	DD	12					; 0000000cH
	DD	$LN5@LISTBOX_Ad@2
$LN5@LISTBOX_Ad@2:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_LISTBOX_AddString ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_SetText
_TEXT	SEGMENT
_s$13405 = -20						; size = 4
_i$13404 = -8						; size = 4
_hObj$ = 8						; size = 4
_ppText$ = 12						; size = 4
_LISTBOX_SetText PROC					; COMDAT
; Line 1382
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1383
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN6@LISTBOX_Se
; Line 1387
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_InvalidateItem
	add	esp, 8
; Line 1388
	cmp	DWORD PTR _ppText$[ebp], 0
	je	SHORT $LN6@LISTBOX_Se
; Line 1389
	mov	DWORD PTR _i$13404[ebp], 0
	jmp	SHORT $LN3@LISTBOX_Se
$LN2@LISTBOX_Se:
	mov	eax, DWORD PTR _i$13404[ebp]
	add	eax, 1
	mov	DWORD PTR _i$13404[ebp], eax
$LN3@LISTBOX_Se:
	mov	eax, DWORD PTR _i$13404[ebp]
	mov	ecx, DWORD PTR _ppText$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _s$13405[ebp], edx
	cmp	DWORD PTR _s$13405[ebp], 0
	je	SHORT $LN6@LISTBOX_Se
; Line 1390
	mov	eax, DWORD PTR _s$13405[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_AddString
	add	esp, 8
; Line 1391
	jmp	SHORT $LN2@LISTBOX_Se
$LN6@LISTBOX_Se:
; Line 1395
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_SetText ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_SetSel
_TEXT	SEGMENT
tv71 = -256						; size = 4
_OldSel$13428 = -56					; size = 4
_pItem$13423 = -44					; size = 4
_hItem$13421 = -32					; size = 4
_MaxSel$13417 = -20					; size = 4
_pObj$13416 = -8					; size = 4
_hObj$ = 8						; size = 4
_NewSel$ = 12						; size = 4
_LISTBOX_SetSel PROC					; COMDAT
; Line 1401
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1402
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN11@LISTBOX_Se@2
; Line 1406
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$13416[ebp], eax
; Line 1407
	mov	eax, DWORD PTR _pObj$13416[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _MaxSel$13417[ebp], eax
; Line 1408
	cmp	DWORD PTR _MaxSel$13417[ebp], 0
	je	SHORT $LN13@LISTBOX_Se@2
	mov	eax, DWORD PTR _MaxSel$13417[ebp]
	sub	eax, 1
	mov	DWORD PTR tv71[ebp], eax
	jmp	SHORT $LN14@LISTBOX_Se@2
$LN13@LISTBOX_Se@2:
	mov	DWORD PTR tv71[ebp], 0
$LN14@LISTBOX_Se@2:
	mov	ecx, DWORD PTR tv71[ebp]
	mov	DWORD PTR _MaxSel$13417[ebp], ecx
; Line 1409
	mov	eax, DWORD PTR _NewSel$[ebp]
	cmp	eax, DWORD PTR _MaxSel$13417[ebp]
	jle	SHORT $LN9@LISTBOX_Se@2
; Line 1410
	mov	eax, DWORD PTR _MaxSel$13417[ebp]
	mov	DWORD PTR _NewSel$[ebp], eax
$LN9@LISTBOX_Se@2:
; Line 1412
	cmp	DWORD PTR _NewSel$[ebp], 0
	jge	SHORT $LN8@LISTBOX_Se@2
; Line 1413
	mov	DWORD PTR _NewSel$[ebp], -1
; Line 1414
	jmp	SHORT $LN7@LISTBOX_Se@2
$LN8@LISTBOX_Se@2:
; Line 1415
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$13416[ebp]
	mov	edx, DWORD PTR [ecx+56]
	push	edx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hItem$13421[ebp], eax
; Line 1416
	cmp	DWORD PTR _hItem$13421[ebp], 0
	je	SHORT $LN7@LISTBOX_Se@2
; Line 1417
	mov	eax, DWORD PTR _hItem$13421[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$13423[ebp], eax
; Line 1418
	mov	eax, DWORD PTR _pItem$13423[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 2
	je	SHORT $LN5@LISTBOX_Se@2
; Line 1419
	mov	DWORD PTR _NewSel$[ebp], -1
$LN5@LISTBOX_Se@2:
; Line 1421
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13423[ebp], 0
$LN7@LISTBOX_Se@2:
; Line 1424
	mov	eax, DWORD PTR _pObj$13416[ebp]
	movsx	ecx, WORD PTR [eax+152]
	cmp	DWORD PTR _NewSel$[ebp], ecx
	je	SHORT $LN4@LISTBOX_Se@2
; Line 1426
	mov	eax, DWORD PTR _pObj$13416[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	DWORD PTR _OldSel$13428[ebp], ecx
; Line 1427
	mov	eax, DWORD PTR _pObj$13416[ebp]
	mov	cx, WORD PTR _NewSel$[ebp]
	mov	WORD PTR [eax+152], cx
; Line 1428
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13416[ebp], 0
; Line 1429
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__UpdateScrollPos
	add	esp, 4
	test	eax, eax
	je	SHORT $LN3@LISTBOX_Se@2
; Line 1430
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
; Line 1431
	jmp	SHORT $LN2@LISTBOX_Se@2
$LN3@LISTBOX_Se@2:
; Line 1432
	mov	eax, DWORD PTR _OldSel$13428[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItem
	add	esp, 8
; Line 1433
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX__InvalidateItem
	add	esp, 8
$LN2@LISTBOX_Se@2:
; Line 1435
	push	4
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__NotifyOwner
	add	esp, 8
; Line 1436
	jmp	SHORT $LN11@LISTBOX_Se@2
$LN4@LISTBOX_Se@2:
; Line 1437
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$13416[ebp], 0
$LN11@LISTBOX_Se@2:
; Line 1441
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_SetSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_GetSel
_TEXT	SEGMENT
_pObj$ = -20						; size = 4
_r$ = -8						; size = 4
_hObj$ = 8						; size = 4
_LISTBOX_GetSel PROC					; COMDAT
; Line 1447
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1448
	mov	DWORD PTR _r$[ebp], -1
; Line 1450
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@LISTBOX_Ge
; Line 1452
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 1453
	mov	eax, DWORD PTR _pObj$[ebp]
	movsx	ecx, WORD PTR [eax+152]
	mov	DWORD PTR _r$[ebp], ecx
; Line 1454
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@LISTBOX_Ge:
; Line 1457
	mov	eax, DWORD PTR _r$[ebp]
; Line 1458
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_GetSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_IncSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_LISTBOX_IncSel PROC					; COMDAT
; Line 1464
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1465
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@LISTBOX_In@2
; Line 1467
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
$LN2@LISTBOX_In@2:
; Line 1470
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_IncSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __MoveSel
_TEXT	SEGMENT
_PrevScrollStateV$13102 = -92				; size = 4
_pItem$13096 = -80					; size = 4
_hItem$13092 = -68					; size = 4
_ItemArray$ = -56					; size = 4
_pObj$ = -44						; size = 4
_NumItems$ = -32					; size = 4
_NewSel$ = -20						; size = 4
_Index$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Dir$ = 12						; size = 4
__MoveSel PROC						; COMDAT
; Line 756
	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 757
	mov	DWORD PTR _NewSel$[ebp], -1
; Line 760
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_GetSel
	add	esp, 4
	mov	DWORD PTR _Index$[ebp], eax
; Line 761
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 762
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 763
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_LISTBOX__GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 764
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN10@MoveSel:
; Line 767
	mov	eax, DWORD PTR _Index$[ebp]
	add	eax, DWORD PTR _Dir$[ebp]
	mov	DWORD PTR _Index$[ebp], eax
; Line 768
	js	SHORT $LN6@MoveSel
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jl	SHORT $LN7@MoveSel
$LN6@MoveSel:
; Line 769
	jmp	SHORT $LN8@MoveSel
$LN7@MoveSel:
; Line 771
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GethItem
	add	esp, 8
	mov	DWORD PTR _hItem$13092[ebp], eax
; Line 772
	cmp	DWORD PTR _hItem$13092[ebp], 0
	je	SHORT $LN9@MoveSel
; Line 774
	mov	eax, DWORD PTR _hItem$13092[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pItem$13096[ebp], eax
; Line 775
	mov	eax, DWORD PTR _pItem$13096[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	and	ecx, 2
	jne	SHORT $LN4@MoveSel
; Line 776
	mov	eax, DWORD PTR _Index$[ebp]
	mov	DWORD PTR _NewSel$[ebp], eax
$LN4@MoveSel:
; Line 778
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$13096[ebp], 0
$LN9@MoveSel:
; Line 780
	cmp	DWORD PTR _NewSel$[ebp], 0
	jl	SHORT $LN10@MoveSel
$LN8@MoveSel:
; Line 781
	cmp	DWORD PTR _NewSel$[ebp], 0
	jl	SHORT $LN3@MoveSel
; Line 782
	mov	eax, DWORD PTR _NewSel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_LISTBOX_SetSel
	add	esp, 8
; Line 783
	jmp	SHORT $LN11@MoveSel
$LN3@MoveSel:
; Line 785
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 786
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	DWORD PTR _PrevScrollStateV$13102[ebp], ecx
; Line 787
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	add	ecx, DWORD PTR _Dir$[ebp]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+68], ecx
; Line 788
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 64					; 00000040H
	push	eax
	call	_WM_CheckScrollBounds
	add	esp, 4
; Line 789
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _PrevScrollStateV$13102[ebp]
	cmp	ecx, DWORD PTR [eax+68]
	je	SHORT $LN1@MoveSel
; Line 790
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX__InvalidateInsideArea
	add	esp, 4
$LN1@MoveSel:
; Line 792
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 793
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_LISTBOX_UpdateScrollers
	add	esp, 4
$LN11@MoveSel:
; Line 795
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__MoveSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _LISTBOX_DecSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_LISTBOX_DecSel PROC					; COMDAT
; Line 1476
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 1477
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@LISTBOX_De
; Line 1479
	push	-1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__MoveSel
	add	esp, 8
$LN2@LISTBOX_De:
; Line 1482
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LISTBOX_DecSel ENDP
_TEXT	ENDS
END
