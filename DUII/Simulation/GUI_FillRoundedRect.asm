; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_FillRoundedRect.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_FillRoundedRect
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_fillroundedrect.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_FillRoundedRect
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_GUI_FillRoundedRect PROC				; COMDAT
; Line 90
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 96
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 97
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x1$[ebp], eax
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y1$[ebp], eax
; Line 98
	mov	ax, WORD PTR _x0$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
	mov	ax, WORD PTR _x1$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 99
	mov	ax, WORD PTR _y0$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
	mov	ax, WORD PTR _y1$[ebp]
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 100
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_FillRo
$LN3@GUI_FillRo:
; Line 102
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	__FillRoundedRect
	add	esp, 20					; 00000014H
; Line 104
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_FillRo
$LN5@GUI_FillRo:
; Line 107
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_FillRo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GUI_FillRo:
	DD	1
	DD	$LN8@GUI_FillRo
$LN8@GUI_FillRo:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI_FillRo
$LN7@GUI_FillRo:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_FillRoundedRect ENDP
_TEXT	ENDS
EXTRN	_LCD_FillRect:PROC
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_GUI__sqrt32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __FillRoundedRect
_TEXT	SEGMENT
_xe$ = -68						; size = 4
_xs$ = -56						; size = 4
_x$ = -44						; size = 4
_y$ = -32						; size = 4
_i$ = -20						; size = 4
_rr$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
__FillRoundedRect PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _r$[ebp]
	shl	ecx, 1
	cmp	eax, ecx
	jl	$LN5@FillRounde
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _x0$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _r$[ebp]
	shl	ecx, 1
	cmp	eax, ecx
	jl	$LN5@FillRounde
; Line 65
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _rr$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _y0$[ebp]
	mov	DWORD PTR _i$[ebp], eax
	jmp	SHORT $LN3@FillRounde
$LN2@FillRounde:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	sub	ecx, 1
	mov	DWORD PTR _y$[ebp], ecx
$LN3@FillRounde:
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	cmp	DWORD PTR _i$[ebp], eax
	jg	SHORT $LN1@FillRounde
; Line 68
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _rr$[ebp]
	sub	ecx, eax
	push	ecx
	call	_GUI__sqrt32
	add	esp, 4
	mov	DWORD PTR _x$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _xs$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _x1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _xe$[ebp], eax
; Line 71
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xs$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 72
	mov	eax, DWORD PTR _xe$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	sub	ecx, DWORD PTR _y0$[ebp]
	mov	edx, DWORD PTR _y1$[ebp]
	sub	edx, ecx
	push	edx
	mov	eax, DWORD PTR _xs$[ebp]
	push	eax
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 73
	jmp	SHORT $LN2@FillRounde
$LN1@FillRounde:
; Line 74
	mov	eax, DWORD PTR _y1$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _i$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_LCD_FillRect
	add	esp, 16					; 00000010H
$LN5@FillRounde:
; Line 78
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__FillRoundedRect ENDP
_TEXT	ENDS
PUBLIC	_GUI_FillRoundedFrame
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_FillRoundedFrame
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_x1$ = 16						; size = 4
_y1$ = 20						; size = 4
_r$ = 24						; size = 4
_w$ = 28						; size = 4
_GUI_FillRoundedFrame PROC				; COMDAT
; Line 113
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 114
	mov	eax, DWORD PTR _r$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, DWORD PTR _w$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x1$[ebp]
	sub	edx, DWORD PTR _w$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _w$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _w$[ebp]
	push	ecx
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_FillRoundedFrame ENDP
_TEXT	ENDS
END
