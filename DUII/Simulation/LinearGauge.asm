; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\LinearGauge.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG15978 DB	'%.2f', 00H
	ORG $+3
$SG15979 DB	'%.2f', 00H
	ORG $+3
$SG16021 DB	'0', 00H
	ORG $+2
$SG16025 DB	'%0.0f', 00H
	ORG $+2
$SG16029 DB	'%0.0f', 00H
	ORG $+2
$SG16033 DB	'%0.1f', 00H
	ORG $+2
$SG16037 DB	'%0.2f', 00H
	ORG $+2
$SG16039 DB	'%0.2f', 00H
CONST	ENDS
PUBLIC	??0LinearGauge@@QAE@HHHHMMHMHMPAD0HJ_N@Z	; LinearGauge::LinearGauge
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\duii\lineargauge.cpp
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0LinearGauge@@QAE@HHHHMMHMHMPAD0HJ_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_xSize$ = 16						; size = 4
_ySize$ = 20						; size = 4
_inMinValue$ = 24					; size = 4
_inMaxValue$ = 28					; size = 4
_inUseLowerRed$ = 32					; size = 4
_inLowerRed$ = 36					; size = 4
_inUseUpperRed$ = 40					; size = 4
_inUpperRed$ = 44					; size = 4
_inName$ = 48						; size = 4
_inUnits$ = 52						; size = 4
_Multiplier$ = 56					; size = 4
_hParent$ = 60						; size = 4
_inEnabled$ = 64					; size = 1
??0LinearGauge@@QAE@HHHHMMHMHMPAD0HJ_N@Z PROC		; LinearGauge::LinearGauge, COMDAT
; _this$ = ecx
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 34
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _hParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _ySize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, DWORD PTR _xSize$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	jg	SHORT $LN1@LinearGaug
; Line 36
	call	_SystemError
; Line 37
	jmp	$LN2@LinearGaug
$LN1@LinearGaug:
; Line 41
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+8], ecx
; Line 42
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+12], ecx
; Line 43
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _xSize$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+16], eax
; Line 44
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, DWORD PTR _ySize$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], eax
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _inMinValue$[ebp]
	fstp	DWORD PTR [eax+36]
; Line 46
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _inMaxValue$[ebp]
	fstp	DWORD PTR [eax+40]
; Line 47
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inUseLowerRed$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 48
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inUseUpperRed$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 49
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _inLowerRed$[ebp]
	fstp	DWORD PTR [eax+52]
; Line 50
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _inUpperRed$[ebp]
	fstp	DWORD PTR [eax+56]
; Line 51
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+24], 0
; Line 52
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inName$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 53
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _inUnits$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _inEnabled$[ebp]
	mov	BYTE PTR [eax+68], cl
$LN2@LinearGaug:
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	60					; 0000003cH
??0LinearGauge@@QAE@HHHHMMHMHMPAD0HJ_N@Z ENDP		; LinearGauge::LinearGauge
_TEXT	ENDS
PUBLIC	??1LinearGauge@@QAE@XZ				; LinearGauge::~LinearGauge
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1LinearGauge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1LinearGauge@@QAE@XZ PROC				; LinearGauge::~LinearGauge, COMDAT
; _this$ = ecx
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??1LinearGauge@@QAE@XZ ENDP				; LinearGauge::~LinearGauge
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	?CreateGaugeBackground@LinearGauge@@AAEXXZ	; LinearGauge::CreateGaugeBackground
EXTRN	_GUI_DrawGradientV:PROC
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_sprintf:PROC
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font20_ASCII:BYTE
EXTRN	_GUI_DrawRect:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__ftol2_sse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?CreateGaugeBackground@LinearGauge@@AAEXXZ
_TEXT	SEGMENT
tv375 = -364						; size = 4
_temp$15991 = -164					; size = 4
_temp$15985 = -152					; size = 4
_upperRedRect$ = -140					; size = 8
_lowerRedRect$ = -124					; size = 8
_greenRect$ = -108					; size = 8
_totalScaleSize$ = -92					; size = 4
_xEndWBorder$ = -80					; size = 4
_xStartWBorder$ = -68					; size = 4
_scratch$ = -56						; size = 20
_rect$ = -28						; size = 8
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateGaugeBackground@LinearGauge@@AAEXXZ PROC		; LinearGauge::CreateGaugeBackground, COMDAT
; _this$ = ecx
; Line 74
	push	ebp
	mov	ebp, esp
	sub	esp, 364				; 0000016cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-364]
	mov	ecx, 91					; 0000005bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 80
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 82
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 65					; 00000041H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 30					; 0000001eH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 83
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 64					; 00000040H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+16]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	add	edx, 31					; 0000001fH
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawRect
	add	esp, 16					; 00000010H
; Line 86
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+28], 0
	je	SHORT $LN10@CreateGaug
; Line 88
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 40					; 00000028H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	sub	ecx, DWORD PTR [eax+8]
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	push	ecx
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN10@CreateGaug:
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN9@CreateGaug
; Line 90
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	sub	ecx, 20					; 00000014H
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	sub	ecx, DWORD PTR [eax+8]
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+8]
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+32]
	push	ecx
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN9@CreateGaug:
; Line 93
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+8]
	mov	WORD PTR _rect$[ebp], cx
; Line 94
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+16]
	mov	WORD PTR _rect$[ebp+4], cx
; Line 95
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 5
	mov	WORD PTR _rect$[ebp+2], cx
; Line 96
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 40					; 00000028H
	mov	WORD PTR _rect$[ebp+6], cx
; Line 99
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+36]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15978
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 100
	push	0
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG15979
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 102
	push	1
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	lea	ecx, DWORD PTR _scratch$[ebp]
	push	ecx
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 105
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	fsub	DWORD PTR [ecx+36]
	fstp	DWORD PTR _totalScaleSize$[ebp]
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+16]
	sub	edx, DWORD PTR [ecx+8]
	sub	edx, 4
	mov	DWORD PTR tv375[ebp], edx
	fild	DWORD PTR tv375[ebp]
	fdiv	DWORD PTR _totalScaleSize$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+60]
; Line 112
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 2
	mov	DWORD PTR _xStartWBorder$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 2
	mov	DWORD PTR _xEndWBorder$[ebp], ecx
; Line 115
	mov	ax, WORD PTR _xStartWBorder$[ebp]
	mov	WORD PTR _lowerRedRect$[ebp], ax
	mov	cx, WORD PTR _lowerRedRect$[ebp]
	mov	WORD PTR _greenRect$[ebp], cx
; Line 116
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 32					; 00000020H
	mov	WORD PTR _upperRedRect$[ebp+2], cx
	mov	dx, WORD PTR _upperRedRect$[ebp+2]
	mov	WORD PTR _lowerRedRect$[ebp+2], dx
	mov	ax, WORD PTR _lowerRedRect$[ebp+2]
	mov	WORD PTR _greenRect$[ebp+2], ax
; Line 117
	mov	ax, WORD PTR _xEndWBorder$[ebp]
	mov	WORD PTR _upperRedRect$[ebp+4], ax
	mov	cx, WORD PTR _upperRedRect$[ebp+4]
	mov	WORD PTR _greenRect$[ebp+4], cx
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 63					; 0000003fH
	mov	WORD PTR _upperRedRect$[ebp+6], cx
	mov	dx, WORD PTR _upperRedRect$[ebp+6]
	mov	WORD PTR _lowerRedRect$[ebp+6], dx
	mov	ax, WORD PTR _lowerRedRect$[ebp+6]
	mov	WORD PTR _greenRect$[ebp+6], ax
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	$LN8@CreateGaug
; Line 125
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+52]
	fsub	DWORD PTR [ecx+36]
	mov	edx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [edx+60]
	call	__ftol2_sse
	add	eax, DWORD PTR _xStartWBorder$[ebp]
	mov	DWORD PTR _temp$15985[ebp], eax
; Line 126
	mov	eax, DWORD PTR _temp$15985[ebp]
	cmp	eax, DWORD PTR _xStartWBorder$[ebp]
	jge	SHORT $LN7@CreateGaug
; Line 127
	mov	eax, DWORD PTR _xStartWBorder$[ebp]
	mov	DWORD PTR _temp$15985[ebp], eax
	jmp	SHORT $LN5@CreateGaug
$LN7@CreateGaug:
; Line 128
	mov	eax, DWORD PTR _temp$15985[ebp]
	cmp	eax, DWORD PTR _xEndWBorder$[ebp]
	jle	SHORT $LN5@CreateGaug
; Line 129
	mov	eax, DWORD PTR _xEndWBorder$[ebp]
	mov	DWORD PTR _temp$15985[ebp], eax
$LN5@CreateGaug:
; Line 130
	mov	ax, WORD PTR _temp$15985[ebp]
	mov	WORD PTR _greenRect$[ebp], ax
	mov	cx, WORD PTR _greenRect$[ebp]
	mov	WORD PTR _lowerRedRect$[ebp+4], cx
; Line 131
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -4210497				; ffbfc0bfH
	add	ecx, 4210752				; 00404040H
	push	ecx
	movsx	edx, WORD PTR _lowerRedRect$[ebp+6]
	push	edx
	movsx	eax, WORD PTR _lowerRedRect$[ebp+4]
	push	eax
	movsx	ecx, WORD PTR _lowerRedRect$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _lowerRedRect$[ebp]
	push	edx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
$LN8@CreateGaug:
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	$LN4@CreateGaug
; Line 139
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+40]
	fsub	DWORD PTR [ecx+56]
	mov	edx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [edx+60]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _xEndWBorder$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _temp$15991[ebp], ecx
; Line 140
	mov	eax, DWORD PTR _temp$15991[ebp]
	cmp	eax, DWORD PTR _xStartWBorder$[ebp]
	jge	SHORT $LN3@CreateGaug
; Line 141
	mov	eax, DWORD PTR _xStartWBorder$[ebp]
	mov	DWORD PTR _temp$15991[ebp], eax
	jmp	SHORT $LN1@CreateGaug
$LN3@CreateGaug:
; Line 142
	mov	eax, DWORD PTR _temp$15991[ebp]
	cmp	eax, DWORD PTR _xEndWBorder$[ebp]
	jle	SHORT $LN1@CreateGaug
; Line 143
	mov	eax, DWORD PTR _xEndWBorder$[ebp]
	mov	DWORD PTR _temp$15991[ebp], eax
$LN1@CreateGaug:
; Line 144
	mov	ax, WORD PTR _temp$15991[ebp]
	mov	WORD PTR _greenRect$[ebp+4], ax
	mov	cx, WORD PTR _greenRect$[ebp+4]
	mov	WORD PTR _upperRedRect$[ebp], cx
; Line 145
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -4210497				; ffbfc0bfH
	add	ecx, 4210752				; 00404040H
	push	ecx
	movsx	edx, WORD PTR _upperRedRect$[ebp+6]
	push	edx
	movsx	eax, WORD PTR _upperRedRect$[ebp+4]
	push	eax
	movsx	ecx, WORD PTR _upperRedRect$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _upperRedRect$[ebp]
	push	edx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
$LN4@CreateGaug:
; Line 149
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	neg	ecx
	sbb	ecx, ecx
	and	ecx, -7303536				; ff908e90H
	add	ecx, 7368816				; 00707070H
	push	ecx
	movsx	edx, WORD PTR _greenRect$[ebp+6]
	push	edx
	movsx	eax, WORD PTR _greenRect$[ebp+4]
	push	eax
	movsx	ecx, WORD PTR _greenRect$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _greenRect$[ebp]
	push	edx
	call	_GUI_DrawGradientV
	add	esp, 24					; 00000018H
; Line 150
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@CreateGaug
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 364				; 0000016cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN19@CreateGaug:
	DD	5
	DD	$LN18@CreateGaug
$LN18@CreateGaug:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN13@CreateGaug
	DD	-56					; ffffffc8H
	DD	20					; 00000014H
	DD	$LN14@CreateGaug
	DD	-108					; ffffff94H
	DD	8
	DD	$LN15@CreateGaug
	DD	-124					; ffffff84H
	DD	8
	DD	$LN16@CreateGaug
	DD	-140					; ffffff74H
	DD	8
	DD	$LN17@CreateGaug
$LN17@CreateGaug:
	DB	117					; 00000075H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN16@CreateGaug:
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN15@CreateGaug:
	DB	103					; 00000067H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN14@CreateGaug:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
$LN13@CreateGaug:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
?CreateGaugeBackground@LinearGauge@@AAEXXZ ENDP		; LinearGauge::CreateGaugeBackground
_TEXT	ENDS
PUBLIC	__real@bfb999999999999a
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@bff0000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@c024000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@c059000000000000
PUBLIC	__real@408f400000000000
PUBLIC	__real@0000000000000000
PUBLIC	__$ArrayPad$
PUBLIC	?SetValue@LinearGauge@@QAEXM@Z			; LinearGauge::SetValue
EXTRN	_GUI_Font16_ASCII:BYTE
EXTRN	_strcpy:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_FillCircle:PROC
;	COMDAT __real@bfb999999999999a
CONST	SEGMENT
__real@bfb999999999999a DQ 0bfb999999999999ar	; -0.1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@c024000000000000
CONST	SEGMENT
__real@c024000000000000 DQ 0c024000000000000r	; -10
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@c059000000000000
CONST	SEGMENT
__real@c059000000000000 DQ 0c059000000000000r	; -100
CONST	ENDS
;	COMDAT __real@408f400000000000
CONST	SEGMENT
__real@408f400000000000 DQ 0408f400000000000r	; 1000
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?SetValue@LinearGauge@@QAEXM@Z
_TEXT	SEGMENT
_scratch$ = -100					; size = 20
_startblack$ = -72					; size = 4
_start2$ = -60						; size = 4
_start1$ = -48						; size = 4
_startm$ = -36						; size = 4
_x$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_dValue$ = 8						; size = 4
?SetValue@LinearGauge@@QAEXM@Z PROC			; LinearGauge::SetValue, COMDAT
; _this$ = ecx
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 160
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dValue$[ebp]
	fstp	DWORD PTR [eax+4]
; Line 165
	mov	eax, DWORD PTR _this$[ebp]
	mov	esi, DWORD PTR [eax+16]
	sub	esi, 2
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+40]
	fsub	DWORD PTR [edx+4]
	mov	eax, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [eax+60]
	call	__ftol2_sse
	sub	esi, eax
	mov	DWORD PTR _x$[ebp], esi
; Line 168
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	cmp	DWORD PTR _x$[ebp], ecx
	jge	SHORT $LN27@SetValue
; Line 169
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	add	ecx, 1
	mov	DWORD PTR _x$[ebp], ecx
	jmp	SHORT $LN25@SetValue
$LN27@SetValue:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	cmp	DWORD PTR _x$[ebp], ecx
	jle	SHORT $LN25@SetValue
; Line 171
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	sub	ecx, 1
	mov	DWORD PTR _x$[ebp], ecx
$LN25@SetValue:
; Line 173
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	$LN18@SetValue
; Line 178
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 179
	push	29					; 0000001dH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 181
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 182
	push	27					; 0000001bH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 184
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+44], 0
	je	SHORT $LN21@SetValue
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+52]
	fcomp	DWORD PTR _dValue$[ebp]
	fnstsw	ax
	test	ah, 1
	je	SHORT $LN22@SetValue
$LN21@SetValue:
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+48], 0
	je	$LN23@SetValue
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+56]
	fcomp	DWORD PTR _dValue$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	$LN23@SetValue
$LN22@SetValue:
; Line 186
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN20@SetValue
; Line 188
	push	128					; 00000080H
	call	_GUI_SetColor
	add	esp, 4
; Line 189
	push	25					; 00000019H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 190
	push	160					; 000000a0H
	call	_GUI_SetColor
	add	esp, 4
; Line 191
	push	23					; 00000017H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 192
	push	192					; 000000c0H
	call	_GUI_SetColor
	add	esp, 4
; Line 193
	push	21					; 00000015H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
$LN20@SetValue:
; Line 195
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 197
	jmp	$LN18@SetValue
$LN23@SetValue:
; Line 199
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN18@SetValue
; Line 201
	push	24576					; 00006000H
	call	_GUI_SetColor
	add	esp, 4
; Line 202
	push	25					; 00000019H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 203
	push	36864					; 00009000H
	call	_GUI_SetColor
	add	esp, 4
; Line 204
	push	23					; 00000017H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 205
	push	45056					; 0000b000H
	call	_GUI_SetColor
	add	esp, 4
; Line 206
	push	21					; 00000015H
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 6
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 207
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
$LN18@SetValue:
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	SHORT $LN17@SetValue
; Line 214
	mov	DWORD PTR _start2$[ebp], 3
	mov	eax, DWORD PTR _start2$[ebp]
	mov	DWORD PTR _start1$[ebp], eax
	mov	ecx, DWORD PTR _start1$[ebp]
	mov	DWORD PTR _startm$[ebp], ecx
; Line 215
	mov	DWORD PTR _startblack$[ebp], 3
; Line 217
	jmp	SHORT $LN16@SetValue
$LN17@SetValue:
; Line 219
	mov	DWORD PTR _startm$[ebp], -5		; fffffffbH
; Line 220
	mov	DWORD PTR _start1$[ebp], -4		; fffffffcH
; Line 221
	mov	DWORD PTR _start2$[ebp], -3		; fffffffdH
; Line 222
	mov	DWORD PTR _startblack$[ebp], -2		; fffffffeH
$LN16@SetValue:
; Line 225
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 226
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 67					; 00000043H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _startblack$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 3
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 227
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 67					; 00000043H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, 3
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _startblack$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 3
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 228
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 67					; 00000043H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _startblack$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 4
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 229
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 67					; 00000043H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, 4
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _startblack$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 4
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 232
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 233
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 70					; 00000046H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _startm$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 234
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 69					; 00000045H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _start1$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 235
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 69					; 00000045H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _start1$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 1
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 236
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 68					; 00000044H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	sub	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _start2$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, 2
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 237
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	add	ecx, 68					; 00000044H
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, 2
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR _start2$[ebp]
	lea	eax, DWORD PTR [ecx+edx+30]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	add	ecx, 2
	push	ecx
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 239
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+68]
	test	ecx, ecx
	je	$LN15@SetValue
; Line 242
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 243
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 246
	fld	DWORD PTR _dValue$[ebp]
	fldz
	fucompp
	fnstsw	ax
	test	ah, 68					; 00000044H
	jp	SHORT $LN14@SetValue
; Line 247
	push	OFFSET $SG16021
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	$LN1@SetValue
$LN14@SetValue:
; Line 248
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@408f400000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN11@SetValue
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@c059000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN12@SetValue
$LN11@SetValue:
; Line 250
	fld	DWORD PTR _dValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG16025
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 251
	push	OFFSET _GUI_Font16_ASCII
	call	_GUI_SetFont
	add	esp, 4
	jmp	$LN1@SetValue
$LN12@SetValue:
; Line 253
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@4059000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN8@SetValue
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@c024000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@SetValue
$LN8@SetValue:
; Line 254
	fld	DWORD PTR _dValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG16029
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	$LN1@SetValue
$LN9@SetValue:
; Line 255
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@4024000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN5@SetValue
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@bff0000000000000
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN6@SetValue
$LN5@SetValue:
; Line 256
	fld	DWORD PTR _dValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG16033
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
	jmp	SHORT $LN1@SetValue
$LN6@SetValue:
; Line 257
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@3ff0000000000000
	fnstsw	ax
	test	ah, 65					; 00000041H
	je	SHORT $LN2@SetValue
	fld	DWORD PTR _dValue$[ebp]
	fcomp	QWORD PTR __real@bfb999999999999a
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@SetValue
$LN2@SetValue:
; Line 258
	fld	DWORD PTR _dValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG16037
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 259
	jmp	SHORT $LN1@SetValue
$LN3@SetValue:
; Line 265
	fld	DWORD PTR _dValue$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	push	OFFSET $SG16039
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_sprintf
	add	esp, 16					; 00000010H
$LN1@SetValue:
; Line 268
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 269
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 2
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	add	edx, 2
	push	edx
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
; Line 270
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 271
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	sub	ecx, 4
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	lea	eax, DWORD PTR _scratch$[ebp]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN15@SetValue:
; Line 273
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN32@SetValue
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN32@SetValue:
	DD	1
	DD	$LN31@SetValue
$LN31@SetValue:
	DD	-100					; ffffff9cH
	DD	20					; 00000014H
	DD	$LN30@SetValue
$LN30@SetValue:
	DB	115					; 00000073H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	99					; 00000063H
	DB	104					; 00000068H
	DB	0
?SetValue@LinearGauge@@QAEXM@Z ENDP			; LinearGauge::SetValue
_TEXT	ENDS
PUBLIC	?DrawBackground@LinearGauge@@QAEXXZ		; LinearGauge::DrawBackground
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawBackground@LinearGauge@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DrawBackground@LinearGauge@@QAEXXZ PROC		; LinearGauge::DrawBackground, COMDAT
; _this$ = ecx
; Line 283
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 284
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateGaugeBackground@LinearGauge@@AAEXXZ ; LinearGauge::CreateGaugeBackground
; Line 285
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawBackground@LinearGauge@@QAEXXZ ENDP		; LinearGauge::DrawBackground
_TEXT	ENDS
END
