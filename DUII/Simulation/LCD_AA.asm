; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\LCD_AA.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_AA_MixColors
EXTRN	_GUI__MixColors:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\lcd_aa.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _LCD_AA_MixColors
_TEXT	SEGMENT
_r$ = -8						; size = 4
_Color$ = 8						; size = 4
_BkColor$ = 12						; size = 4
_Intens$ = 16						; size = 1
_LCD_AA_MixColors PROC					; COMDAT
; Line 84
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 87
	movzx	eax, BYTE PTR _Intens$[ebp]
	imul	eax, 17					; 00000011H
	push	eax
	mov	ecx, DWORD PTR _BkColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Color$[ebp]
	push	edx
	call	_GUI__MixColors
	add	esp, 12					; 0000000cH
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _r$[ebp], eax
; Line 88
	mov	eax, DWORD PTR _r$[ebp]
; Line 105
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_AA_MixColors ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetPixelAA
EXTRN	_LCD_Color2Index:PROC
EXTRN	_LCD_GetPixelColor:PROC
EXTRN	_LCD_Index2Color:PROC
EXTRN	_LCD_pColorIndex:DWORD
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetPixelAA
_TEXT	SEGMENT
_BkColor$8373 = -20					; size = 4
_Color$8372 = -8					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Intens$ = 16						; size = 1
_LCD_SetPixelAA PROC					; COMDAT
; Line 111
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 112
	movzx	eax, BYTE PTR _Intens$[ebp]
	test	eax, eax
	jne	SHORT $LN7@LCD_SetPix
; Line 113
	jmp	$LN8@LCD_SetPix
$LN7@LCD_SetPix:
; Line 115
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN6@LCD_SetPix
	jmp	$LN8@LCD_SetPix
$LN6@LCD_SetPix:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN5@LCD_SetPix
	jmp	$LN8@LCD_SetPix
$LN5@LCD_SetPix:
; Line 116
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN4@LCD_SetPix
	jmp	$LN8@LCD_SetPix
$LN4@LCD_SetPix:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN3@LCD_SetPix
	jmp	$LN8@LCD_SetPix
$LN3@LCD_SetPix:
; Line 117
	movzx	eax, BYTE PTR _Intens$[ebp]
	cmp	eax, 15					; 0000000fH
	jl	SHORT $LN2@LCD_SetPix
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 119
	jmp	$LN8@LCD_SetPix
$LN2@LCD_SetPix:
; Line 121
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$8372[ebp], eax
; Line 122
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_LCD_GetPixelColor
	add	esp, 8
	mov	DWORD PTR _BkColor$8373[ebp], eax
; Line 123
	movzx	eax, BYTE PTR _Intens$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BkColor$8373[ebp]
	push	ecx
	mov	edx, DWORD PTR _Color$8372[ebp]
	push	edx
	call	_LCD_AA_MixColors
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Color$8372[ebp], eax
; Line 124
	mov	eax, DWORD PTR _Color$8372[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@LCD_SetPix:
; Line 126
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetPixelAA ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetPixelAA_Xor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetPixelAA_Xor
_TEXT	SEGMENT
_BkColor$ = -20						; size = 4
_Color$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Intens$ = 16						; size = 1
_LCD_SetPixelAA_Xor PROC				; COMDAT
; Line 132
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 134
	movzx	eax, BYTE PTR _Intens$[ebp]
	test	eax, eax
	jne	SHORT $LN5@LCD_SetPix@2
; Line 135
	jmp	$LN6@LCD_SetPix@2
$LN5@LCD_SetPix@2:
; Line 137
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN4@LCD_SetPix@2
	jmp	$LN6@LCD_SetPix@2
$LN4@LCD_SetPix@2:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN3@LCD_SetPix@2
	jmp	$LN6@LCD_SetPix@2
$LN3@LCD_SetPix@2:
; Line 138
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN2@LCD_SetPix@2
	jmp	$LN6@LCD_SetPix@2
$LN2@LCD_SetPix@2:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN1@LCD_SetPix@2
	jmp	$LN6@LCD_SetPix@2
$LN1@LCD_SetPix@2:
; Line 139
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_LCD_GetPixelColor
	add	esp, 8
	mov	DWORD PTR _BkColor$[ebp], eax
; Line 140
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$[ebp], eax
; Line 141
	movzx	eax, BYTE PTR _Intens$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BkColor$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Color$[ebp]
	push	edx
	call	__MixColorsXor
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Color$[ebp], eax
; Line 142
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@LCD_SetPix@2:
; Line 143
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetPixelAA_Xor ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __MixColorsXor
_TEXT	SEGMENT
_bc$ = -32						; size = 4
_gc$ = -20						; size = 4
_rc$ = -8						; size = 4
_Color$ = 8						; size = 4
_BkColor$ = 12						; size = 4
_Intens$ = 16						; size = 1
__MixColorsXor PROC					; COMDAT
; Line 62
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 255				; 000000ffH
	movzx	ecx, BYTE PTR _Intens$[ebp]
	imul	eax, ecx
	xor	edx, edx
	mov	ecx, 15					; 0000000fH
	div	ecx
	mov	DWORD PTR _rc$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 65280				; 0000ff00H
	movzx	ecx, BYTE PTR _Intens$[ebp]
	imul	eax, ecx
	xor	edx, edx
	mov	ecx, 15					; 0000000fH
	div	ecx
	mov	DWORD PTR _gc$[ebp], eax
; Line 66
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 16711680				; 00ff0000H
	movzx	ecx, BYTE PTR _Intens$[ebp]
	imul	eax, ecx
	xor	edx, edx
	mov	ecx, 15					; 0000000fH
	div	ecx
	mov	DWORD PTR _bc$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _BkColor$[ebp]
	mov	DWORD PTR _Color$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _Color$[ebp]
	xor	eax, DWORD PTR _rc$[ebp]
	mov	DWORD PTR _Color$[ebp], eax
; Line 69
	mov	eax, DWORD PTR _Color$[ebp]
	xor	eax, DWORD PTR _gc$[ebp]
	mov	DWORD PTR _Color$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _Color$[ebp]
	xor	eax, DWORD PTR _bc$[ebp]
	mov	DWORD PTR _Color$[ebp], eax
; Line 71
	mov	eax, DWORD PTR _Color$[ebp]
; Line 72
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__MixColorsXor ENDP
_TEXT	ENDS
PUBLIC	_LCD_SetPixelAA_NoTrans
EXTRN	_LCD_pBkColorIndex:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _LCD_SetPixelAA_NoTrans
_TEXT	SEGMENT
_ColorMixed$8406 = -44					; size = 4
_ColorBk$8405 = -32					; size = 4
_Color$8404 = -20					; size = 4
_Index$8403 = -8					; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Intens$ = 16						; size = 1
_LCD_SetPixelAA_NoTrans PROC				; COMDAT
; Line 149
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 150
	movsx	eax, WORD PTR _GUI_Context+10
	cmp	DWORD PTR _y$[ebp], eax
	jge	SHORT $LN8@LCD_SetPix@3
	jmp	$LN9@LCD_SetPix@3
$LN8@LCD_SetPix@3:
	movsx	eax, WORD PTR _GUI_Context+14
	cmp	DWORD PTR _y$[ebp], eax
	jle	SHORT $LN7@LCD_SetPix@3
	jmp	$LN9@LCD_SetPix@3
$LN7@LCD_SetPix@3:
; Line 151
	movsx	eax, WORD PTR _GUI_Context+8
	cmp	DWORD PTR _x$[ebp], eax
	jge	SHORT $LN6@LCD_SetPix@3
	jmp	$LN9@LCD_SetPix@3
$LN6@LCD_SetPix@3:
	movsx	eax, WORD PTR _GUI_Context+12
	cmp	DWORD PTR _x$[ebp], eax
	jle	SHORT $LN5@LCD_SetPix@3
	jmp	$LN9@LCD_SetPix@3
$LN5@LCD_SetPix@3:
; Line 152
	movzx	eax, BYTE PTR _Intens$[ebp]
	test	eax, eax
	jne	SHORT $LN4@LCD_SetPix@3
; Line 153
	mov	esi, esp
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	$LN9@LCD_SetPix@3
$LN4@LCD_SetPix@3:
; Line 154
	movzx	eax, BYTE PTR _Intens$[ebp]
	cmp	eax, 15					; 0000000fH
	jne	SHORT $LN2@LCD_SetPix@3
; Line 155
	mov	esi, esp
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _GUI_Context+17
	mov	edx, DWORD PTR _GUI_Context[ecx*4+72]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	mov	edx, DWORD PTR [ecx+12]
	mov	eax, DWORD PTR [edx+24]
	call	eax
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 156
	jmp	$LN9@LCD_SetPix@3
$LN2@LCD_SetPix@3:
; Line 159
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$8404[ebp], eax
; Line 160
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	_LCD_Index2Color
	add	esp, 4
	mov	DWORD PTR _ColorBk$8405[ebp], eax
; Line 161
	movzx	eax, BYTE PTR _Intens$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ColorBk$8405[ebp]
	push	ecx
	mov	edx, DWORD PTR _Color$8404[ebp]
	push	edx
	call	_LCD_AA_MixColors
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _ColorMixed$8406[ebp], eax
; Line 162
	mov	eax, DWORD PTR _ColorMixed$8406[ebp]
	push	eax
	call	_LCD_Color2Index
	add	esp, 4
	mov	DWORD PTR _Index$8403[ebp], eax
; Line 163
	mov	esi, esp
	mov	eax, DWORD PTR _Index$8403[ebp]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	movzx	eax, BYTE PTR _GUI_Context+17
	mov	ecx, DWORD PTR _GUI_Context[eax*4+72]
	push	ecx
	movzx	edx, BYTE PTR _GUI_Context+17
	mov	eax, DWORD PTR _GUI_Context[edx*4+72]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx+24]
	call	edx
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN9@LCD_SetPix@3:
; Line 165
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_LCD_SetPixelAA_NoTrans ENDP
_TEXT	ENDS
END
