; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\ConvertColor\GUICC_822216.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_LCD_API_ColorConv_822216
CONST	SEGMENT
_LCD_API_ColorConv_822216 DD FLAT:__Color2Index_822216
	DD	FLAT:__Index2Color_822216
	DD	FLAT:__GetIndexMask_822216
CONST	ENDS
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\convertcolor\guicc_822216.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Color2Index_822216
_TEXT	SEGMENT
_Alpha$ = -44						; size = 4
_b$ = -32						; size = 4
_g$ = -20						; size = 4
_r$ = -8						; size = 4
_Color$ = 8						; size = 4
__Color2Index_822216 PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _r$[ebp], eax
; Line 40
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 65280				; 0000ff00H
	shr	eax, 8
	mov	DWORD PTR _g$[ebp], eax
; Line 41
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, 16711680				; 00ff0000H
	shr	eax, 16					; 00000010H
	mov	DWORD PTR _b$[ebp], eax
; Line 43
	mov	eax, DWORD PTR _Color$[ebp]
	and	eax, -16777216				; ff000000H
	shr	eax, 24					; 00000018H
	xor	eax, 255				; 000000ffH
	xor	edx, edx
	mov	ecx, 17					; 00000011H
	div	ecx
	mov	DWORD PTR _Alpha$[ebp], eax
; Line 44
	mov	eax, DWORD PTR _r$[ebp]
	cmp	eax, DWORD PTR _g$[ebp]
	jne	SHORT $LN1@Color2Inde
	mov	eax, DWORD PTR _g$[ebp]
	cmp	eax, DWORD PTR _b$[ebp]
	jne	SHORT $LN1@Color2Inde
; Line 46
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 5
	mov	ecx, DWORD PTR _Alpha$[ebp]
	shl	ecx, 4
	or	eax, ecx
	jmp	SHORT $LN2@Color2Inde
$LN1@Color2Inde:
; Line 49
	mov	eax, DWORD PTR _r$[ebp]
	shr	eax, 7
	mov	DWORD PTR _r$[ebp], eax
; Line 50
	mov	eax, DWORD PTR _g$[ebp]
	shr	eax, 7
	mov	DWORD PTR _g$[ebp], eax
; Line 51
	mov	eax, DWORD PTR _b$[ebp]
	shr	eax, 7
	mov	DWORD PTR _b$[ebp], eax
; Line 53
	mov	eax, DWORD PTR _g$[ebp]
	shl	eax, 1
	or	eax, DWORD PTR _r$[ebp]
	mov	ecx, DWORD PTR _b$[ebp]
	shl	ecx, 2
	or	eax, ecx
	or	eax, 8
	mov	edx, DWORD PTR _Alpha$[ebp]
	shl	edx, 4
	or	eax, edx
$LN2@Color2Inde:
; Line 54
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Color2Index_822216 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Index2Color_822216
_TEXT	SEGMENT
_Alpha$ = -44						; size = 4
_b$ = -32						; size = 4
_g$ = -20						; size = 4
_r$ = -8						; size = 4
_Index$ = 8						; size = 4
__Index2Color_822216 PROC				; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 64
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 240				; 000000f0H
	shr	eax, 4
	xor	eax, 15					; 0000000fH
	imul	eax, 17					; 00000011H
	shl	eax, 24					; 00000018H
	mov	DWORD PTR _Alpha$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 8
	jne	SHORT $LN1@Index2Colo
; Line 67
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 7
	mov	DWORD PTR _Index$[ebp], eax
; Line 68
	mov	eax, DWORD PTR _Index$[ebp]
	imul	eax, 36					; 00000024H
	mov	ecx, DWORD PTR _Index$[ebp]
	shr	ecx, 1
	add	eax, ecx
	imul	eax, 65793				; 00010101H
	or	eax, DWORD PTR _Alpha$[ebp]
	jmp	SHORT $LN2@Index2Colo
$LN1@Index2Colo:
; Line 71
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 1
	neg	eax
	sbb	eax, eax
	and	eax, 255				; 000000ffH
	mov	DWORD PTR _r$[ebp], eax
; Line 72
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 2
	neg	eax
	sbb	eax, eax
	and	eax, 65280				; 0000ff00H
	mov	DWORD PTR _g$[ebp], eax
; Line 73
	mov	eax, DWORD PTR _Index$[ebp]
	and	eax, 4
	neg	eax
	sbb	eax, eax
	and	eax, 16711680				; 00ff0000H
	mov	DWORD PTR _b$[ebp], eax
; Line 75
	mov	eax, DWORD PTR _Alpha$[ebp]
	or	eax, DWORD PTR _r$[ebp]
	or	eax, DWORD PTR _g$[ebp]
	or	eax, DWORD PTR _b$[ebp]
$LN2@Index2Colo:
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Index2Color_822216 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetIndexMask_822216
_TEXT	SEGMENT
__GetIndexMask_822216 PROC				; COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 83
	mov	eax, 255				; 000000ffH
; Line 84
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__GetIndexMask_822216 ENDP
_TEXT	ENDS
END
