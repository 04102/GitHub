; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\PROGBAR_SkinClassic.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_PROGBAR__SkinClassic
CONST	SEGMENT
_PROGBAR__SkinClassic DD FLAT:__Paint
	DD	FLAT:__Create
	ORG $+4
CONST	ENDS
EXTRN	_WIDGET__EFFECT_DrawDownRect:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_PROGBAR__GetTextRect:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_PROGBAR__GetTextLocked:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_PROGBAR__Value2Pos:PROC
EXTRN	_GUI__ReduceRect:PROC
EXTRN	_WM_GetClientRect:PROC
EXTRN	_PROGBAR_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_UninitUse:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\progbar_skinclassic.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
$T10409 = -309						; size = 1
_Pos$ = -108						; size = 4
_tm$ = -96						; size = 4
_pText$ = -84						; size = 4
_rText$ = -72						; size = 8
_rClient$ = -56						; size = 8
_rInside$ = -40						; size = 8
_r$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 54
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T10409[ebp], 0
; Line 60
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 61
	lea	eax, DWORD PTR _rClient$[ebp]
	push	eax
	call	_WM_GetClientRect
	add	esp, 4
; Line 62
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	push	edx
	lea	eax, DWORD PTR _rClient$[ebp]
	push	eax
	lea	ecx, DWORD PTR _rInside$[ebp]
	push	ecx
	call	_GUI__ReduceRect
	add	esp, 12					; 0000000cH
; Line 63
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	_PROGBAR__Value2Pos
	add	esp, 8
	mov	DWORD PTR _Pos$[ebp], eax
; Line 64
	mov	eax, DWORD PTR _pObj$[ebp]
	movzx	ecx, BYTE PTR [eax+112]
	and	ecx, 1
	je	SHORT $LN3@Paint
; Line 68
	mov	eax, DWORD PTR _rInside$[ebp]
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _rInside$[ebp+4]
	mov	DWORD PTR _r$[ebp+4], ecx
; Line 69
	mov	ax, WORD PTR _Pos$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 70
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 71
	push	0
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__DrawPart
	add	esp, 20					; 00000014H
; Line 75
	mov	eax, DWORD PTR _rInside$[ebp]
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _rInside$[ebp+4]
	mov	DWORD PTR _r$[ebp+4], ecx
; Line 76
	mov	eax, DWORD PTR _Pos$[ebp]
	sub	eax, 1
	mov	WORD PTR _r$[ebp+6], ax
; Line 77
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 78
	push	0
	push	0
	push	0
	push	1
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__DrawPart
	add	esp, 20					; 00000014H
; Line 79
	jmp	$LN2@Paint
$LN3@Paint:
; Line 80
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	_PROGBAR__GetTextLocked
	add	esp, 4
	mov	DWORD PTR _pText$[ebp], eax
; Line 81
	cmp	DWORD PTR _pText$[ebp], 0
	je	SHORT $LN1@Paint
; Line 82
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 83
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	mov	BYTE PTR $T10409[ebp], 1
	lea	ecx, DWORD PTR _rText$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	call	_PROGBAR__GetTextRect
	add	esp, 12					; 0000000cH
$LN1@Paint:
; Line 85
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
	mov	DWORD PTR _tm$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _rInside$[ebp]
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _rInside$[ebp+4]
	mov	DWORD PTR _r$[ebp+4], ecx
; Line 90
	mov	eax, DWORD PTR _Pos$[ebp]
	sub	eax, 1
	mov	WORD PTR _r$[ebp+4], ax
; Line 91
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 92
	cmp	BYTE PTR $T10409[ebp], 0
	jne	SHORT $LN6@Paint
	push	OFFSET $LN7@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN6@Paint:
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	movsx	ecx, WORD PTR _rText$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _rText$[ebp]
	push	edx
	push	0
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__DrawPart
	add	esp, 20					; 00000014H
; Line 96
	mov	eax, DWORD PTR _rInside$[ebp]
	mov	DWORD PTR _r$[ebp], eax
	mov	ecx, DWORD PTR _rInside$[ebp+4]
	mov	DWORD PTR _r$[ebp+4], ecx
; Line 97
	mov	ax, WORD PTR _Pos$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 98
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 99
	cmp	BYTE PTR $T10409[ebp], 0
	jne	SHORT $LN8@Paint
	push	OFFSET $LN7@Paint
	call	__RTC_UninitUse
	add	esp, 4
$LN8@Paint:
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	movsx	ecx, WORD PTR _rText$[ebp+2]
	push	ecx
	movsx	edx, WORD PTR _rText$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	call	__DrawPart
	add	esp, 20					; 00000014H
; Line 100
	mov	eax, DWORD PTR _tm$[ebp]
	push	eax
	call	_GUI_SetTextMode
	add	esp, 4
; Line 101
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pText$[ebp], 0
$LN2@Paint:
; Line 103
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 104
	lea	eax, DWORD PTR _rClient$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__EFFECT_DrawDownRect
	add	esp, 8
; Line 105
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 106
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN13@Paint:
	DD	4
	DD	$LN12@Paint
$LN12@Paint:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN7@Paint
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN9@Paint
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN10@Paint
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN11@Paint
$LN11@Paint:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN10@Paint:
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
$LN9@Paint:
	DB	114					; 00000072H
	DB	0
$LN7@Paint:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI_DispString:PROC
EXTRN	_GUI_GotoXY:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_LCD_SetBkColor:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawPart
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_xText$ = 16						; size = 4
_yText$ = 20						; size = 4
_pText$ = 24						; size = 4
__DrawPart PROC						; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 41
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+88]
	push	edx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 42
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+96]
	push	edx
	call	_LCD_SetColor
	add	esp, 4
; Line 43
	call	_GUI_Clear
; Line 44
	cmp	DWORD PTR _pText$[ebp], 0
	je	SHORT $LN2@DrawPart
; Line 45
	mov	eax, DWORD PTR _yText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xText$[ebp]
	push	ecx
	call	_GUI_GotoXY
	add	esp, 8
; Line 46
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
$LN2@DrawPart:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawPart ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 112
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 114
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _hObj$[ebp], eax
; Line 115
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Create ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_SetSkinClassic
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_SetSkinClassic
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_PROGBAR_SetSkinClassic PROC				; COMDAT
; Line 142
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 145
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_PROGBAR_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 146
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+108], OFFSET _PROGBAR__SkinClassic
; Line 147
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 148
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_SetSkinClassic ENDP
_TEXT	ENDS
PUBLIC	_PROGBAR_SetDefaultSkinClassic
EXTRN	_PROGBAR__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _PROGBAR_SetDefaultSkinClassic
_TEXT	SEGMENT
_PROGBAR_SetDefaultSkinClassic PROC			; COMDAT
; Line 155
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 156
	mov	DWORD PTR _PROGBAR__pSkinDefault, OFFSET _PROGBAR__SkinClassic
; Line 157
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PROGBAR_SetDefaultSkinClassic ENDP
_TEXT	ENDS
END
