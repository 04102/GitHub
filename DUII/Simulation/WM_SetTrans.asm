; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_SetTrans.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_SetHasTrans
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_WM__TransWindowCnt:DWORD
EXTRN	_WM_ValidateWindow:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_settrans.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_SetHasTrans
_TEXT	SEGMENT
_pWin$ = -8						; size = 4
_hWin$ = 8						; size = 4
_WM_SetHasTrans PROC					; COMDAT
; Line 40
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 43
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@WM_SetHasT
; Line 44
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 48
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 1
	jne	SHORT $LN3@WM_SetHasT
; Line 52
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 56
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	or	ecx, 1
	mov	edx, DWORD PTR _pWin$[ebp]
	mov	DWORD PTR [edx+40], ecx
; Line 57
	mov	eax, DWORD PTR _WM__TransWindowCnt
	add	eax, 1
	mov	DWORD PTR _WM__TransWindowCnt, eax
; Line 61
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN3@WM_SetHasT:
; Line 65
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetHasTrans ENDP
_TEXT	ENDS
PUBLIC	_WM_ClrHasTrans
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_ClrHasTrans
_TEXT	SEGMENT
_pWin$ = -8						; size = 4
_hWin$ = 8						; size = 4
_WM_ClrHasTrans PROC					; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 74
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@WM_ClrHasT
; Line 75
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 79
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 1
	je	SHORT $LN3@WM_ClrHasT
; Line 80
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, -2					; fffffffeH
	mov	edx, DWORD PTR _pWin$[ebp]
	mov	DWORD PTR [edx+40], ecx
; Line 81
	mov	eax, DWORD PTR _WM__TransWindowCnt
	sub	eax, 1
	mov	DWORD PTR _WM__TransWindowCnt, eax
; Line 82
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN3@WM_ClrHasT:
; Line 86
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_ClrHasTrans ENDP
_TEXT	ENDS
PUBLIC	_WM_GetHasTrans
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_GetHasTrans
_TEXT	SEGMENT
_pWin$ = -20						; size = 4
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_WM_GetHasTrans PROC					; COMDAT
; Line 92
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	DWORD PTR _r$[ebp], 0
; Line 96
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN1@WM_GetHasT
; Line 97
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$[ebp], eax
; Line 98
	mov	eax, DWORD PTR _pWin$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 1
	mov	DWORD PTR _r$[ebp], ecx
$LN1@WM_GetHasT:
; Line 101
	mov	eax, DWORD PTR _r$[ebp]
; Line 102
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_GetHasTrans ENDP
_TEXT	ENDS
END
