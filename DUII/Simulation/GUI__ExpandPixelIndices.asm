; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI__ExpandPixelIndices.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI__ExpandPixelIndices
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui__expandpixelindices.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI__ExpandPixelIndices
_TEXT	SEGMENT
tv67 = -244						; size = 4
_pSrc$8361 = -44					; size = 4
_pSrc$8355 = -32					; size = 4
_pDest$ = -20						; size = 4
_BytesPerPixel$ = -8					; size = 4
_pBuffer$ = 8						; size = 4
_NumPixels$ = 12					; size = 4
_BitsPerPixel$ = 16					; size = 4
_GUI__ExpandPixelIndices PROC				; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$[ebp], eax
; Line 40
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jg	SHORT $LN15@GUI__Expan
; Line 41
	mov	DWORD PTR _BytesPerPixel$[ebp], 1
	jmp	SHORT $LN14@GUI__Expan
$LN15@GUI__Expan:
; Line 42
	cmp	DWORD PTR _BitsPerPixel$[ebp], 16	; 00000010H
	jg	SHORT $LN13@GUI__Expan
; Line 43
	mov	DWORD PTR _BytesPerPixel$[ebp], 2
; Line 44
	jmp	SHORT $LN14@GUI__Expan
$LN13@GUI__Expan:
; Line 45
	mov	DWORD PTR _BytesPerPixel$[ebp], 4
$LN14@GUI__Expan:
; Line 47
	cmp	DWORD PTR _BytesPerPixel$[ebp], 4
	jge	$LN16@GUI__Expan
; Line 49
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN4@GUI__Expan
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN8@GUI__Expan
	jmp	$LN16@GUI__Expan
$LN8@GUI__Expan:
; Line 52
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pSrc$8355[ebp], eax
; Line 53
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pSrc$8355[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pSrc$8355[ebp], edx
; Line 54
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pDest$[ebp], edx
$LN7@GUI__Expan:
; Line 56
	mov	eax, DWORD PTR _pSrc$8355[ebp]
	sub	eax, 2
	mov	DWORD PTR _pSrc$8355[ebp], eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _pDest$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$8355[ebp]
	movzx	eax, WORD PTR [edx]
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 57
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN7@GUI__Expan
; Line 59
	jmp	SHORT $LN16@GUI__Expan
$LN4@GUI__Expan:
; Line 62
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pSrc$8361[ebp], eax
; Line 63
	mov	eax, DWORD PTR _pSrc$8361[ebp]
	add	eax, DWORD PTR _NumPixels$[ebp]
	mov	DWORD PTR _pSrc$8361[ebp], eax
; Line 64
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pDest$[ebp], edx
$LN3@GUI__Expan:
; Line 66
	mov	eax, DWORD PTR _pSrc$8361[ebp]
	sub	eax, 1
	mov	DWORD PTR _pSrc$8361[ebp], eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _pDest$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$8361[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 67
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN3@GUI__Expan
$LN16@GUI__Expan:
; Line 83
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__ExpandPixelIndices ENDP
_TEXT	ENDS
PUBLIC	_GUI__ExpandPixelIndicesEx
EXTRN	__RTC_CheckEsp:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI__ExpandPixelIndicesEx
_TEXT	SEGMENT
tv67 = -244						; size = 4
_pSrc$8394 = -44					; size = 4
_pSrc$8388 = -32					; size = 4
_pDest$ = -20						; size = 4
_BytesPerPixel$ = -8					; size = 4
_pBuffer$ = 8						; size = 4
_NumPixels$ = 12					; size = 4
_BitsPerPixel$ = 16					; size = 4
_pfIndex2Color$ = 20					; size = 4
_GUI__ExpandPixelIndicesEx PROC				; COMDAT
; Line 89
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 93
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$[ebp], eax
; Line 94
	cmp	DWORD PTR _BitsPerPixel$[ebp], 8
	jg	SHORT $LN15@GUI__Expan@2
; Line 95
	mov	DWORD PTR _BytesPerPixel$[ebp], 1
	jmp	SHORT $LN14@GUI__Expan@2
$LN15@GUI__Expan@2:
; Line 96
	cmp	DWORD PTR _BitsPerPixel$[ebp], 16	; 00000010H
	jg	SHORT $LN13@GUI__Expan@2
; Line 97
	mov	DWORD PTR _BytesPerPixel$[ebp], 2
; Line 98
	jmp	SHORT $LN14@GUI__Expan@2
$LN13@GUI__Expan@2:
; Line 99
	mov	DWORD PTR _BytesPerPixel$[ebp], 4
$LN14@GUI__Expan@2:
; Line 101
	cmp	DWORD PTR _BytesPerPixel$[ebp], 4
	jge	$LN16@GUI__Expan@2
; Line 103
	mov	eax, DWORD PTR _BytesPerPixel$[ebp]
	mov	DWORD PTR tv67[ebp], eax
	cmp	DWORD PTR tv67[ebp], 1
	je	SHORT $LN4@GUI__Expan@2
	cmp	DWORD PTR tv67[ebp], 2
	je	SHORT $LN8@GUI__Expan@2
	jmp	$LN16@GUI__Expan@2
$LN8@GUI__Expan@2:
; Line 106
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pSrc$8388[ebp], eax
; Line 107
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pSrc$8388[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	DWORD PTR _pSrc$8388[ebp], edx
; Line 108
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pDest$[ebp], edx
$LN7@GUI__Expan@2:
; Line 110
	mov	eax, DWORD PTR _pSrc$8388[ebp]
	sub	eax, 2
	mov	DWORD PTR _pSrc$8388[ebp], eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _pDest$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$8388[ebp]
	movzx	eax, WORD PTR [edx]
	mov	esi, esp
	push	eax
	call	DWORD PTR _pfIndex2Color$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 111
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN7@GUI__Expan@2
; Line 113
	jmp	SHORT $LN16@GUI__Expan@2
$LN4@GUI__Expan@2:
; Line 116
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pSrc$8394[ebp], eax
; Line 117
	mov	eax, DWORD PTR _pSrc$8394[ebp]
	add	eax, DWORD PTR _NumPixels$[ebp]
	mov	DWORD PTR _pSrc$8394[ebp], eax
; Line 118
	mov	eax, DWORD PTR _NumPixels$[ebp]
	mov	ecx, DWORD PTR _pDest$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pDest$[ebp], edx
$LN3@GUI__Expan@2:
; Line 120
	mov	eax, DWORD PTR _pSrc$8394[ebp]
	sub	eax, 1
	mov	DWORD PTR _pSrc$8394[ebp], eax
	mov	ecx, DWORD PTR _pDest$[ebp]
	sub	ecx, 4
	mov	DWORD PTR _pDest$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$8394[ebp]
	movzx	eax, BYTE PTR [edx]
	mov	esi, esp
	push	eax
	call	DWORD PTR _pfIndex2Color$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	ecx, DWORD PTR _pDest$[ebp]
	mov	DWORD PTR [ecx], eax
; Line 121
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN3@GUI__Expan@2
$LN16@GUI__Expan@2:
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI__ExpandPixelIndicesEx ENDP
_TEXT	ENDS
END
