; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\HEADER_SkinClassic.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_HEADER__SkinClassic
CONST	SEGMENT
_HEADER__SkinClassic DD FLAT:__Paint
	DD	FLAT:__Create
	ORG $+4
CONST	ENDS
EXTRN	_GUI_DispStringInRect:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_HEADER__DefaultBorderV:DWORD
EXTRN	_HEADER__DefaultBorderH:DWORD
EXTRN	_WIDGET__EFFECT_DrawUpRect:PROC
EXTRN	_GUI_DRAW__Draw:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_DRAW__GetYSize:PROC
EXTRN	_GUI_DRAW__GetXSize:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_GetClientRect:PROC
EXTRN	_GUI_Clear:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	_HEADER_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\header_skinclassic.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __Paint
_TEXT	SEGMENT
tv156 = -388						; size = 4
tv141 = -388						; size = 4
tv88 = -388						; size = 4
_yOff$10591 = -188					; size = 4
_xOff$10590 = -176					; size = 4
_pColumn$10587 = -164					; size = 4
_Subtract$10586 = -152					; size = 4
_hDrawObj$ = -140					; size = 4
_ArrowPos$ = -128					; size = 4
_ArrowSize$ = -116					; size = 4
_EffectSize$ = -104					; size = 4
_NumItems$ = -92					; size = 4
_xPos$ = -80						; size = 4
_i$ = -68						; size = 4
_RectNonFixedArea$ = -56				; size = 8
_RectItem$ = -40					; size = 8
_Rect$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__Paint	PROC						; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 388				; 00000184H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-388]
	mov	ecx, 97					; 00000061H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 62
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 63
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+92]
	neg	ecx
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 64
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 65
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR _EffectSize$[ebp], edx
; Line 66
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	push	ecx
	call	_LCD_SetBkColor
	add	esp, 4
; Line 67
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+56]
	push	ecx
	call	_GUI_SetFont
	add	esp, 4
; Line 68
	call	_GUI_Clear
; Line 69
	lea	eax, DWORD PTR _RectNonFixedArea$[ebp]
	push	eax
	call	_GUI_GetClientRect
	add	esp, 4
; Line 70
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN17@Paint
$LN16@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN17@Paint:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jae	$LN15@Paint
; Line 71
	mov	DWORD PTR _Subtract$10586[ebp], 0
; Line 73
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$10587[ebp], eax
; Line 74
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_GUI_GetClientRect
	add	esp, 4
; Line 75
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+108]
	jae	SHORT $LN20@Paint
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+92]
	mov	DWORD PTR tv88[ebp], eax
	jmp	SHORT $LN21@Paint
$LN20@Paint:
	mov	DWORD PTR tv88[ebp], 0
$LN21@Paint:
	mov	ecx, DWORD PTR _xPos$[ebp]
	add	ecx, DWORD PTR tv88[ebp]
	mov	DWORD PTR _xPos$[ebp], ecx
; Line 76
	mov	ax, WORD PTR _xPos$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 77
	movsx	eax, WORD PTR _Rect$[ebp]
	mov	ecx, DWORD PTR _pColumn$10587[ebp]
	add	eax, DWORD PTR [ecx]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 78
	mov	eax, DWORD PTR _Rect$[ebp]
	mov	DWORD PTR _RectItem$[ebp], eax
	mov	ecx, DWORD PTR _Rect$[ebp+4]
	mov	DWORD PTR _RectItem$[ebp+4], ecx
; Line 79
	movsx	eax, WORD PTR _RectItem$[ebp+6]
	movsx	ecx, WORD PTR _RectItem$[ebp+2]
	sub	eax, ecx
	mov	edx, DWORD PTR _EffectSize$[ebp]
	shl	edx, 1
	sub	eax, edx
	cdq
	mov	ecx, 3
	idiv	ecx
	sub	eax, 1
	mov	DWORD PTR _ArrowSize$[ebp], eax
; Line 80
	movsx	eax, WORD PTR _RectItem$[ebp+4]
	sub	eax, 4
	sub	eax, DWORD PTR _ArrowSize$[ebp]
	mov	DWORD PTR _ArrowPos$[ebp], eax
; Line 81
	lea	eax, DWORD PTR _RectNonFixedArea$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 82
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	$LN14@Paint
; Line 83
	mov	DWORD PTR _xOff$10590[ebp], 0
	mov	DWORD PTR _yOff$10591[ebp], 0
; Line 84
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 3
	mov	DWORD PTR tv141[ebp], ecx
	cmp	DWORD PTR tv141[ebp], 1
	je	SHORT $LN11@Paint
	cmp	DWORD PTR tv141[ebp], 2
	je	SHORT $LN10@Paint
	jmp	SHORT $LN12@Paint
$LN11@Paint:
; Line 86
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_DRAW__GetXSize
	add	esp, 4
	mov	edx, DWORD PTR _pColumn$10587[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, eax
	mov	DWORD PTR _xOff$10590[ebp], ecx
; Line 87
	jmp	SHORT $LN12@Paint
$LN10@Paint:
; Line 89
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	mov	ecx, DWORD PTR [eax+8]
	push	ecx
	call	_GUI_DRAW__GetXSize
	add	esp, 4
	mov	edx, DWORD PTR _pColumn$10587[ebp]
	mov	ecx, DWORD PTR [edx]
	sub	ecx, eax
	mov	eax, ecx
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _xOff$10590[ebp], eax
$LN12@Paint:
; Line 92
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 12					; 0000000cH
	mov	DWORD PTR tv156[ebp], ecx
	cmp	DWORD PTR tv156[ebp], 4
	je	SHORT $LN7@Paint
	cmp	DWORD PTR tv156[ebp], 12		; 0000000cH
	je	SHORT $LN6@Paint
	jmp	SHORT $LN8@Paint
$LN7@Paint:
; Line 94
	movsx	esi, WORD PTR _Rect$[ebp+6]
	movsx	eax, WORD PTR _Rect$[ebp+2]
	sub	esi, eax
	add	esi, 1
	mov	ecx, DWORD PTR _pColumn$10587[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_GUI_DRAW__GetYSize
	add	esp, 4
	sub	esi, eax
	mov	DWORD PTR _yOff$10591[ebp], esi
; Line 95
	jmp	SHORT $LN8@Paint
$LN6@Paint:
; Line 97
	movsx	esi, WORD PTR _Rect$[ebp+6]
	movsx	eax, WORD PTR _Rect$[ebp+2]
	sub	esi, eax
	add	esi, 1
	mov	ecx, DWORD PTR _pColumn$10587[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_GUI_DRAW__GetYSize
	add	esp, 4
	sub	esi, eax
	mov	eax, esi
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	DWORD PTR _yOff$10591[ebp], eax
$LN8@Paint:
; Line 100
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 101
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _hDrawObj$[ebp], ecx
; Line 102
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$10587[ebp], 0
; Line 103
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 104
	mov	eax, DWORD PTR _yOff$10591[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPos$[ebp]
	add	ecx, DWORD PTR _xOff$10590[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	mov	eax, DWORD PTR _hDrawObj$[ebp]
	push	eax
	call	_GUI_DRAW__Draw
	add	esp, 16					; 00000010H
; Line 105
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 106
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	push	edx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pColumn$10587[ebp], eax
; Line 107
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
$LN14@Paint:
; Line 109
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__EFFECT_DrawUpRect
	add	esp, 8
; Line 110
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, DWORD PTR _xPos$[ebp]
	mov	DWORD PTR _xPos$[ebp], eax
; Line 111
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _HEADER__DefaultBorderH
	movsx	ecx, WORD PTR _Rect$[ebp]
	add	ecx, eax
	mov	WORD PTR _Rect$[ebp], cx
; Line 112
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _HEADER__DefaultBorderH
	movsx	ecx, WORD PTR _Rect$[ebp+4]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+4], cx
; Line 113
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _HEADER__DefaultBorderV
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	add	ecx, eax
	mov	WORD PTR _Rect$[ebp+2], cx
; Line 114
	mov	eax, DWORD PTR _EffectSize$[ebp]
	add	eax, DWORD PTR _HEADER__DefaultBorderV
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	sub	ecx, eax
	mov	WORD PTR _Rect$[ebp+6], cx
; Line 115
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 116
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	cmp	ecx, DWORD PTR _i$[ebp]
	jne	SHORT $LN5@Paint
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	movsx	ecx, WORD PTR [eax+4]
	and	ecx, 3
	cmp	ecx, 1
	jne	SHORT $LN5@Paint
; Line 117
	mov	eax, DWORD PTR _ArrowSize$[ebp]
	lea	ecx, DWORD PTR [eax+eax+1]
	mov	DWORD PTR _Subtract$10586[ebp], ecx
$LN5@Paint:
; Line 119
	movsx	eax, WORD PTR _Rect$[ebp+4]
	sub	eax, DWORD PTR _Subtract$10586[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 120
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 121
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	movsx	ecx, WORD PTR [eax+4]
	push	ecx
	lea	edx, DWORD PTR _Rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _pColumn$10587[ebp]
	add	eax, 12					; 0000000cH
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 122
	movsx	eax, WORD PTR _Rect$[ebp+4]
	add	eax, DWORD PTR _Subtract$10586[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 123
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+100]
	cmp	ecx, DWORD PTR _i$[ebp]
	jne	SHORT $LN4@Paint
; Line 124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	push	ecx
	call	_LCD_SetColor
	add	esp, 4
; Line 125
	lea	eax, DWORD PTR _RectNonFixedArea$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 126
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+104], 0
	jne	SHORT $LN3@Paint
; Line 127
	push	1
	mov	eax, DWORD PTR _ArrowSize$[ebp]
	push	eax
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	movsx	edx, WORD PTR _Rect$[ebp+2]
	sub	ecx, edx
	sar	ecx, 1
	push	ecx
	mov	eax, DWORD PTR _ArrowPos$[ebp]
	push	eax
	call	__DrawTriangle
	add	esp, 16					; 00000010H
; Line 128
	jmp	SHORT $LN2@Paint
$LN3@Paint:
; Line 129
	push	-1
	mov	eax, DWORD PTR _ArrowSize$[ebp]
	push	eax
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	movsx	edx, WORD PTR _Rect$[ebp+2]
	sub	ecx, edx
	sar	ecx, 1
	add	ecx, DWORD PTR _ArrowSize$[ebp]
	push	ecx
	mov	eax, DWORD PTR _ArrowPos$[ebp]
	push	eax
	call	__DrawTriangle
	add	esp, 16					; 00000010H
$LN2@Paint:
; Line 131
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
$LN4@Paint:
; Line 133
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	cmp	ecx, DWORD PTR [eax+108]
	jae	SHORT $LN1@Paint
; Line 134
	movsx	eax, WORD PTR _RectItem$[ebp+4]
	add	eax, 1
	mov	WORD PTR _RectNonFixedArea$[ebp], ax
; Line 135
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, DWORD PTR [eax+92]
	mov	DWORD PTR _xPos$[ebp], ecx
$LN1@Paint:
; Line 137
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pColumn$10587[ebp], 0
; Line 138
	jmp	$LN16@Paint
$LN15@Paint:
; Line 139
	push	0
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 140
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_GUI_GetClientRect
	add	esp, 4
; Line 141
	mov	ax, WORD PTR _xPos$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 142
	mov	eax, 4095				; 00000fffH
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 143
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__EFFECT_DrawUpRect
	add	esp, 8
; Line 144
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 145
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN26@Paint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN26@Paint:
	DD	3
	DD	$LN25@Paint
$LN25@Paint:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN22@Paint
	DD	-40					; ffffffd8H
	DD	8
	DD	$LN23@Paint
	DD	-56					; ffffffc8H
	DD	8
	DD	$LN24@Paint
$LN24@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	70					; 00000046H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
$LN23@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN22@Paint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__Paint	ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawHLine:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __DrawTriangle
_TEXT	SEGMENT
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Size$ = 16						; size = 4
_Inc$ = 20						; size = 4
__DrawTriangle PROC					; COMDAT
; Line 39
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 40
	jmp	SHORT $LN3@DrawTriang
$LN2@DrawTriang:
	mov	eax, DWORD PTR _Size$[ebp]
	sub	eax, 1
	mov	DWORD PTR _Size$[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _Inc$[ebp]
	mov	DWORD PTR _y$[ebp], ecx
$LN3@DrawTriang:
	cmp	DWORD PTR _Size$[ebp], 0
	jl	SHORT $LN4@DrawTriang
; Line 41
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _Size$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	sub	ecx, DWORD PTR _Size$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	call	_GUI_DrawHLine
	add	esp, 12					; 0000000cH
; Line 42
	jmp	SHORT $LN2@DrawTriang
$LN4@DrawTriang:
; Line 43
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__DrawTriangle ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __Create
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
__Create PROC						; COMDAT
; Line 151
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 153
	mov	eax, DWORD PTR _hObj$[ebp]
	mov	DWORD PTR _hObj$[ebp], eax
; Line 154
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__Create ENDP
_TEXT	ENDS
PUBLIC	_HEADER_SetSkinClassic
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HEADER_SetSkinClassic
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_HEADER_SetSkinClassic PROC				; COMDAT
; Line 177
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 180
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_HEADER_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+76], OFFSET _HEADER__SkinClassic
; Line 182
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 183
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 184
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_HEADER_SetSkinClassic ENDP
_TEXT	ENDS
PUBLIC	_HEADER_SetDefaultSkinClassic
EXTRN	_HEADER__pSkinDefault:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _HEADER_SetDefaultSkinClassic
_TEXT	SEGMENT
_HEADER_SetDefaultSkinClassic PROC			; COMDAT
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 191
	mov	DWORD PTR _HEADER__pSkinDefault, OFFSET _HEADER__SkinClassic
; Line 192
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_HEADER_SetDefaultSkinClassic ENDP
_TEXT	ENDS
END
