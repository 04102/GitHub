; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_UserData.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_WM_GetUserData
EXTRN	_memcpy:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_userdata.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_GetUserData
_TEXT	SEGMENT
_pWin$10277 = -8					; size = 4
_hWin$ = 8						; size = 4
_pDest$ = 12						; size = 4
_NumBytes$ = 16						; size = 4
_WM_GetUserData PROC					; COMDAT
; Line 67
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 68
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN1@WM_GetUser
; Line 70
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__CalcNumBytes
	add	esp, 8
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 72
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$10277[ebp], eax
; Line 73
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pWin$10277[ebp]
	add	ecx, 48					; 00000030H
	push	ecx
	mov	edx, DWORD PTR _pDest$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@WM_GetUser:
; Line 76
	mov	eax, DWORD PTR _NumBytes$[ebp]
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_GetUserData ENDP
_TEXT	ENDS
EXTRN	_GUI_ALLOC_GetSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __CalcNumBytes
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_NumBytes$ = 12						; size = 4
__CalcNumBytes PROC					; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 47
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_GUI_ALLOC_GetSize
	add	esp, 4
	sub	eax, 48					; 00000030H
	push	eax
	call	_Min
	add	esp, 8
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcNumBytes ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT _Min
_TEXT	SEGMENT
tv65 = -196						; size = 4
_v0$ = 8						; size = 4
_v1$ = 12						; size = 4
_Min	PROC						; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 39
	mov	eax, DWORD PTR _v0$[ebp]
	cmp	eax, DWORD PTR _v1$[ebp]
	jge	SHORT $LN3@Min
	mov	ecx, DWORD PTR _v0$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
	jmp	SHORT $LN4@Min
$LN3@Min:
	mov	edx, DWORD PTR _v1$[ebp]
	mov	DWORD PTR tv65[ebp], edx
$LN4@Min:
	mov	eax, DWORD PTR tv65[ebp]
; Line 40
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_Min	ENDP
_TEXT	ENDS
PUBLIC	_WM_SetUserData
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_SetUserData
_TEXT	SEGMENT
_pWin$10287 = -8					; size = 4
_hWin$ = 8						; size = 4
_pSrc$ = 12						; size = 4
_NumBytes$ = 16						; size = 4
_WM_SetUserData PROC					; COMDAT
; Line 88
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 89
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN1@WM_SetUser
; Line 91
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__CalcNumBytes
	add	esp, 8
	mov	DWORD PTR _NumBytes$[ebp], eax
; Line 93
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pWin$10287[ebp], eax
; Line 94
	mov	eax, DWORD PTR _NumBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pSrc$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pWin$10287[ebp]
	add	edx, 48					; 00000030H
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@WM_SetUser:
; Line 97
	mov	eax, DWORD PTR _NumBytes$[ebp]
; Line 98
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_SetUserData ENDP
_TEXT	ENDS
END
