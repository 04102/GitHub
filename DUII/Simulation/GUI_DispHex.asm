; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispHex.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispHex
EXTRN	_GUI_DispString:PROC
EXTRN	_GUI_AddHex:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_disphex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispHex
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_GUI_DispHex PROC					; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 37
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 38
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	call	_GUI_AddHex
	add	esp, 12					; 0000000cH
; Line 39
	lea	eax, DWORD PTR _ac$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
; Line 40
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_DispHe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GUI_DispHe:
	DD	2
	DD	$LN5@GUI_DispHe
$LN5@GUI_DispHe:
	DD	-20					; ffffffecH
	DD	9
	DD	$LN3@GUI_DispHe
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@GUI_DispHe
$LN4@GUI_DispHe:
	DB	115					; 00000073H
	DB	0
$LN3@GUI_DispHe:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispHex ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispHexAt
EXTRN	_GUI_DispStringAt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispHexAt
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 9
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
_Len$ = 20						; size = 1
_GUI_DispHexAt PROC					; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 48
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 49
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	call	_GUI_AddHex
	add	esp, 12					; 0000000cH
; Line 50
	movsx	eax, WORD PTR _y$[ebp]
	push	eax
	movsx	ecx, WORD PTR _x$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ac$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 51
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_DispHe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN6@GUI_DispHe@2:
	DD	2
	DD	$LN5@GUI_DispHe@2
$LN5@GUI_DispHe@2:
	DD	-20					; ffffffecH
	DD	9
	DD	$LN3@GUI_DispHe@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@GUI_DispHe@2
$LN4@GUI_DispHe@2:
	DB	115					; 00000073H
	DB	0
$LN3@GUI_DispHe@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispHexAt ENDP
_TEXT	ENDS
END
