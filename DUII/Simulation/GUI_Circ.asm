; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Circ.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GL_DrawCircle
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_circ.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GL_DrawCircle
_TEXT	SEGMENT
_y$ = -44						; size = 4
_sqmax$ = -32						; size = 4
_imax$ = -20						; size = 4
_i$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GL_DrawCircle PROC					; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 65
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, 707				; 000002c3H
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _imax$[ebp], eax
; Line 66
	mov	ecx, DWORD PTR _r$[ebp]
	imul	ecx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR _r$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	DWORD PTR _sqmax$[ebp], ecx
; Line 67
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _y$[ebp], eax
; Line 68
	push	0
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_Draw8Point
	add	esp, 16					; 00000010H
; Line 69
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN4@GL_DrawCir
$LN3@GL_DrawCir:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN4@GL_DrawCir:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _imax$[ebp]
	jg	SHORT $LN5@GL_DrawCir
; Line 70
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	imul	ecx, DWORD PTR _y$[ebp]
	add	eax, ecx
	cmp	eax, DWORD PTR _sqmax$[ebp]
	jle	SHORT $LN1@GL_DrawCir
; Line 71
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_Draw8Point
	add	esp, 16					; 00000010H
; Line 72
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN1@GL_DrawCir:
; Line 74
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_Draw8Point
	add	esp, 16					; 00000010H
; Line 75
	jmp	SHORT $LN3@GL_DrawCir
$LN5@GL_DrawCir:
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_DrawCircle ENDP
_TEXT	ENDS
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _Draw8Point
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xoff$ = 16						; size = 4
_yoff$ = 20						; size = 4
_Draw8Point PROC					; COMDAT
; Line 37
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 38
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _yoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _xoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 39
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _yoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _xoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _xoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _yoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 41
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _xoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _yoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 42
	cmp	DWORD PTR _yoff$[ebp], 0
	je	$LN2@Draw8Point
; Line 43
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _yoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _xoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 44
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _yoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _xoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 45
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _xoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _yoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 46
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _xoff$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _yoff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx+4]
	call	eax
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Draw8Point:
; Line 48
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_Draw8Point ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawCircle
EXTRN	_WM__GetNextIVR:PROC
EXTRN	_WM__InitIVRSearch:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawCircle
_TEXT	SEGMENT
_Rect$ = -12						; size = 8
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GUI_DrawCircle PROC					; COMDAT
; Line 82
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 88
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	WORD PTR _Rect$[ebp], ax
; Line 90
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	mov	WORD PTR _Rect$[ebp+4], ax
; Line 91
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _r$[ebp]
	mov	WORD PTR _Rect$[ebp+2], ax
; Line 92
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	mov	WORD PTR _Rect$[ebp+6], ax
; Line 93
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_DrawCi
$LN3@GUI_DrawCi:
; Line 95
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_DrawCircle
	add	esp, 12					; 0000000cH
; Line 97
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_DrawCi
$LN5@GUI_DrawCi:
; Line 100
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_DrawCi
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN9@GUI_DrawCi:
	DD	1
	DD	$LN8@GUI_DrawCi
$LN8@GUI_DrawCi:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN7@GUI_DrawCi
$LN7@GUI_DrawCi:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_GUI_DrawCircle ENDP
_TEXT	ENDS
PUBLIC	_GL_FillCircle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_FillCircle
_TEXT	SEGMENT
_x$ = -44						; size = 4
_sqmax$ = -32						; size = 4
_imax$ = -20						; size = 4
_i$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GL_FillCircle PROC					; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 111
	mov	eax, DWORD PTR _r$[ebp]
	imul	eax, 707				; 000002c3H
	cdq
	mov	ecx, 1000				; 000003e8H
	idiv	ecx
	add	eax, 1
	mov	DWORD PTR _imax$[ebp], eax
; Line 112
	mov	ecx, DWORD PTR _r$[ebp]
	imul	ecx, DWORD PTR _r$[ebp]
	mov	eax, DWORD PTR _r$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	DWORD PTR _sqmax$[ebp], ecx
; Line 113
	mov	eax, DWORD PTR _r$[ebp]
	mov	DWORD PTR _x$[ebp], eax
; Line 114
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _r$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	sub	edx, DWORD PTR _r$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	mov	DWORD PTR _i$[ebp], 1
	jmp	SHORT $LN5@GL_FillCir
$LN4@GL_FillCir:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN5@GL_FillCir:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _imax$[ebp]
	jg	$LN6@GL_FillCir
; Line 116
	mov	eax, DWORD PTR _i$[ebp]
	imul	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	imul	ecx, DWORD PTR _x$[ebp]
	add	eax, ecx
	cmp	eax, DWORD PTR _sqmax$[ebp]
	jle	SHORT $LN2@GL_FillCir
; Line 120
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _imax$[ebp]
	jle	SHORT $LN1@GL_FillCir
; Line 121
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 122
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _x0$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	esi, esp
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+88
	mov	eax, DWORD PTR [edx]
	call	eax
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@GL_FillCir:
; Line 124
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN2@GL_FillCir:
; Line 129
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	sub	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 130
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _x$[ebp]
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	sub	ecx, DWORD PTR _i$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	sub	edx, DWORD PTR _x$[ebp]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+88
	mov	ecx, DWORD PTR [eax]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 131
	jmp	$LN4@GL_FillCir
$LN6@GL_FillCir:
; Line 132
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_FillCircle ENDP
_TEXT	ENDS
PUBLIC	_GUI_FillCircle
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_FillCircle
_TEXT	SEGMENT
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_r$ = 16						; size = 4
_GUI_FillCircle PROC					; COMDAT
; Line 138
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 141
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 142
	push	0
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_FillCi
$LN3@GUI_FillCi:
; Line 144
	mov	eax, DWORD PTR _r$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_GL_FillCircle
	add	esp, 12					; 0000000cH
; Line 146
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_FillCi
$LN5@GUI_FillCi:
; Line 149
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_FillCircle ENDP
_TEXT	ENDS
PUBLIC	_GL_FillEllipse
EXTRN	_LCD_DrawHLine:PROC
EXTRN	_GUI__sqrt32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_FillEllipse
_TEXT	SEGMENT
_yl$ = -116						; size = 4
_yu$ = -104						; size = 4
_xal$ = -92						; size = 4
_xer$ = -80						; size = 4
_xOld$ = -68						; size = 4
_y$ = -56						; size = 4
_x$ = -44						; size = 4
_yy$ = -32						; size = 4
_ryry$ = -20						; size = 4
_rxrx$ = -8						; size = 4
_xm$ = 8						; size = 4
_ym$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_GL_FillEllipse PROC					; COMDAT
; Line 176
	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 180
	mov	eax, DWORD PTR _ry$[ebp]
	imul	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ryry$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _rx$[ebp]
	imul	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _rxrx$[ebp], eax
; Line 182
	mov	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _xOld$[ebp], eax
; Line 183
	mov	DWORD PTR _y$[ebp], 1
	jmp	SHORT $LN5@GL_FillEll
$LN4@GL_FillEll:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN5@GL_FillEll:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ry$[ebp]
	jg	$LN6@GL_FillEll
; Line 184
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yy$[ebp], eax
; Line 185
	mov	eax, DWORD PTR _yy$[ebp]
	imul	eax, DWORD PTR _rxrx$[ebp]
	xor	edx, edx
	div	DWORD PTR _ryry$[ebp]
	mov	ecx, DWORD PTR _rxrx$[ebp]
	sub	ecx, eax
	push	ecx
	call	_GUI__sqrt32
	add	esp, 4
	mov	DWORD PTR _x$[ebp], eax
; Line 189
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xOld$[ebp]
	je	SHORT $LN2@GL_FillEll
; Line 190
	mov	eax, DWORD PTR _xOld$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xOld$[ebp], eax
$LN2@GL_FillEll:
; Line 192
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, DWORD PTR _xOld$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 193
	mov	eax, DWORD PTR _xm$[ebp]
	add	eax, DWORD PTR _xOld$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 194
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _xOld$[ebp], eax
; Line 195
	mov	eax, DWORD PTR _ym$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _yu$[ebp], eax
; Line 196
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _ym$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yl$[ebp], edx
; Line 197
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xm$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 198
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 202
	cmp	DWORD PTR _y$[ebp], 1
	jle	SHORT $LN1@GL_FillEll
; Line 203
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, 1
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 204
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xm$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN1@GL_FillEll:
; Line 206
	jmp	$LN4@GL_FillEll
$LN6@GL_FillEll:
; Line 207
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GL_FillEllipse ENDP
_TEXT	ENDS
PUBLIC	_GUI_FillEllipse
EXTRN	_GUI_GetPenSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_FillEllipse
_TEXT	SEGMENT
_r$ = -24						; size = 8
_PenSize$ = -5						; size = 1
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_GUI_FillEllipse PROC					; COMDAT
; Line 213
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 218
	call	_GUI_GetPenSize
	mov	BYTE PTR _PenSize$[ebp], al
; Line 222
	movzx	eax, BYTE PTR _PenSize$[ebp]
	add	eax, 1
	sar	eax, 1
	add	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _rx$[ebp], eax
; Line 223
	movzx	eax, BYTE PTR _PenSize$[ebp]
	add	eax, 1
	sar	eax, 1
	add	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ry$[ebp], eax
; Line 226
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 230
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _rx$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 231
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _rx$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 232
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _ry$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 233
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _ry$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 234
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@GUI_FillEl
$LN3@GUI_FillEl:
; Line 236
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_FillEllipse
	add	esp, 16					; 00000010H
; Line 238
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN3@GUI_FillEl
$LN5@GUI_FillEl:
; Line 241
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@GUI_FillEl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@GUI_FillEl:
	DD	1
	DD	$LN8@GUI_FillEl
$LN8@GUI_FillEl:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN7@GUI_FillEl
$LN7@GUI_FillEl:
	DB	114					; 00000072H
	DB	0
_GUI_FillEllipse ENDP
_TEXT	ENDS
PUBLIC	_GL_DrawEllipse
EXTRN	__RTC_UninitUse:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GL_DrawEllipse
_TEXT	SEGMENT
$T8551 = -413						; size = 1
$T8552 = -401						; size = 1
_xi$ = -200						; size = 4
_ryi$ = -188						; size = 4
_rxi$ = -176						; size = 4
_yl$ = -164						; size = 4
_yu$ = -152						; size = 4
_xeli$ = -140						; size = 4
_xari$ = -128						; size = 4
_xal$ = -116						; size = 4
_xer$ = -104						; size = 4
_xOld$ = -92						; size = 4
_y$ = -80						; size = 4
_x$ = -68						; size = 4
_yy$ = -56						; size = 4
_ryryi$ = -44						; size = 4
_rxrxi$ = -32						; size = 4
_ryry$ = -20						; size = 4
_rxrx$ = -8						; size = 4
_xm$ = 8						; size = 4
_ym$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_w$ = 24						; size = 4
_GL_DrawEllipse PROC					; COMDAT
; Line 250
	push	ebp
	mov	ebp, esp
	sub	esp, 420				; 000001a4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-420]
	mov	ecx, 105				; 00000069H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	BYTE PTR $T8551[ebp], 0
	mov	BYTE PTR $T8552[ebp], 0
; Line 254
	mov	eax, DWORD PTR _rx$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	add	eax, 1
	mov	DWORD PTR _rxi$[ebp], eax
; Line 255
	mov	eax, DWORD PTR _ry$[ebp]
	sub	eax, DWORD PTR _w$[ebp]
	add	eax, 1
	mov	DWORD PTR _ryi$[ebp], eax
; Line 256
	mov	eax, DWORD PTR _ry$[ebp]
	imul	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ryry$[ebp], eax
; Line 257
	mov	eax, DWORD PTR _rx$[ebp]
	imul	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _rxrx$[ebp], eax
; Line 258
	mov	eax, DWORD PTR _ryi$[ebp]
	imul	eax, DWORD PTR _ryi$[ebp]
	mov	DWORD PTR _ryryi$[ebp], eax
; Line 259
	mov	eax, DWORD PTR _rxi$[ebp]
	imul	eax, DWORD PTR _rxi$[ebp]
	mov	DWORD PTR _rxrxi$[ebp], eax
; Line 260
	mov	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _xOld$[ebp], eax
; Line 261
	mov	DWORD PTR _y$[ebp], 1
	jmp	SHORT $LN8@GL_DrawEll
$LN7@GL_DrawEll:
	mov	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN8@GL_DrawEll:
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ry$[ebp]
	jg	$LN9@GL_DrawEll
; Line 262
	mov	eax, DWORD PTR _y$[ebp]
	imul	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR _yy$[ebp], eax
; Line 263
	mov	eax, DWORD PTR _ym$[ebp]
	sub	eax, DWORD PTR _y$[ebp]
	add	eax, 1
	mov	DWORD PTR _yu$[ebp], eax
; Line 264
	mov	eax, DWORD PTR _y$[ebp]
	mov	ecx, DWORD PTR _ym$[ebp]
	lea	edx, DWORD PTR [ecx+eax-1]
	mov	DWORD PTR _yl$[ebp], edx
; Line 265
	mov	eax, DWORD PTR _yy$[ebp]
	imul	eax, DWORD PTR _rxrx$[ebp]
	xor	edx, edx
	div	DWORD PTR _ryry$[ebp]
	mov	ecx, DWORD PTR _rxrx$[ebp]
	sub	ecx, eax
	push	ecx
	call	_GUI__sqrt32
	add	esp, 4
	mov	DWORD PTR _x$[ebp], eax
; Line 269
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xOld$[ebp]
	je	SHORT $LN5@GL_DrawEll
; Line 270
	mov	eax, DWORD PTR _xOld$[ebp]
	sub	eax, 1
	mov	DWORD PTR _xOld$[ebp], eax
$LN5@GL_DrawEll:
; Line 272
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, DWORD PTR _xOld$[ebp]
	mov	DWORD PTR _xal$[ebp], eax
; Line 273
	mov	eax, DWORD PTR _xm$[ebp]
	add	eax, DWORD PTR _xOld$[ebp]
	mov	DWORD PTR _xer$[ebp], eax
; Line 274
	mov	eax, DWORD PTR _x$[ebp]
	mov	DWORD PTR _xOld$[ebp], eax
; Line 275
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ryi$[ebp]
	jge	SHORT $LN4@GL_DrawEll
; Line 276
	mov	eax, DWORD PTR _yy$[ebp]
	imul	eax, DWORD PTR _rxrxi$[ebp]
	xor	edx, edx
	div	DWORD PTR _ryryi$[ebp]
	mov	ecx, DWORD PTR _rxrxi$[ebp]
	sub	ecx, eax
	push	ecx
	call	_GUI__sqrt32
	add	esp, 4
	mov	DWORD PTR _xi$[ebp], eax
; Line 277
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, DWORD PTR _xi$[ebp]
	mov	BYTE PTR $T8551[ebp], 1
	mov	DWORD PTR _xeli$[ebp], eax
; Line 278
	mov	eax, DWORD PTR _xm$[ebp]
	add	eax, DWORD PTR _xi$[ebp]
	mov	BYTE PTR $T8552[ebp], 1
	mov	DWORD PTR _xari$[ebp], eax
	jmp	SHORT $LN3@GL_DrawEll
$LN4@GL_DrawEll:
; Line 279
	mov	eax, DWORD PTR _y$[ebp]
	cmp	eax, DWORD PTR _ryi$[ebp]
	jne	SHORT $LN3@GL_DrawEll
; Line 280
	mov	eax, DWORD PTR _xm$[ebp]
	sub	eax, 1
	mov	BYTE PTR $T8551[ebp], 1
	mov	DWORD PTR _xeli$[ebp], eax
; Line 281
	mov	BYTE PTR $T8552[ebp], 1
	mov	eax, DWORD PTR _xm$[ebp]
	mov	DWORD PTR _xari$[ebp], eax
$LN3@GL_DrawEll:
; Line 283
	cmp	BYTE PTR $T8552[ebp], 0
	jne	SHORT $LN11@GL_DrawEll
	push	OFFSET $LN12@GL_DrawEll
	call	__RTC_UninitUse
	add	esp, 4
$LN11@GL_DrawEll:
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xari$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 284
	cmp	BYTE PTR $T8551[ebp], 0
	jne	SHORT $LN13@GL_DrawEll
	push	OFFSET $LN14@GL_DrawEll
	call	__RTC_UninitUse
	add	esp, 4
$LN13@GL_DrawEll:
	mov	eax, DWORD PTR _xeli$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yu$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 288
	cmp	DWORD PTR _y$[ebp], 1
	jle	SHORT $LN1@GL_DrawEll
; Line 289
	cmp	BYTE PTR $T8551[ebp], 0
	jne	SHORT $LN15@GL_DrawEll
	push	OFFSET $LN14@GL_DrawEll
	call	__RTC_UninitUse
	add	esp, 4
$LN15@GL_DrawEll:
	mov	eax, DWORD PTR _xeli$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xal$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
; Line 290
	cmp	BYTE PTR $T8552[ebp], 0
	jne	SHORT $LN16@GL_DrawEll
	push	OFFSET $LN12@GL_DrawEll
	call	__RTC_UninitUse
	add	esp, 4
$LN16@GL_DrawEll:
	mov	eax, DWORD PTR _xer$[ebp]
	push	eax
	mov	ecx, DWORD PTR _yl$[ebp]
	push	ecx
	mov	edx, DWORD PTR _xari$[ebp]
	push	edx
	call	_LCD_DrawHLine
	add	esp, 12					; 0000000cH
$LN1@GL_DrawEll:
; Line 292
	jmp	$LN7@GL_DrawEll
$LN9@GL_DrawEll:
; Line 293
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 420				; 000001a4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN17@GL_DrawEll:
$LN14@GL_DrawEll:
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	0
$LN12@GL_DrawEll:
	DB	120					; 00000078H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	105					; 00000069H
	DB	0
_GL_DrawEllipse ENDP
_TEXT	ENDS
PUBLIC	_GUI_DrawEllipse
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DrawEllipse
_TEXT	SEGMENT
_r$ = -24						; size = 8
_PenSize$ = -5						; size = 1
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_rx$ = 16						; size = 4
_ry$ = 20						; size = 4
_GUI_DrawEllipse PROC					; COMDAT
; Line 299
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 304
	call	_GUI_GetPenSize
	mov	BYTE PTR _PenSize$[ebp], al
; Line 308
	movzx	eax, BYTE PTR _PenSize$[ebp]
	add	eax, 1
	sar	eax, 1
	add	eax, DWORD PTR _rx$[ebp]
	mov	DWORD PTR _rx$[ebp], eax
; Line 309
	movzx	eax, BYTE PTR _PenSize$[ebp]
	add	eax, 1
	sar	eax, 1
	add	eax, DWORD PTR _ry$[ebp]
	mov	DWORD PTR _ry$[ebp], eax
; Line 310
	movzx	eax, BYTE PTR _PenSize$[ebp]
	cmp	DWORD PTR _rx$[ebp], eax
	jl	SHORT $LN8@GUI_DrawEl
	movzx	eax, BYTE PTR _PenSize$[ebp]
	cmp	DWORD PTR _ry$[ebp], eax
	jge	SHORT $LN9@GUI_DrawEl
$LN8@GUI_DrawEl:
; Line 311
	jmp	$LN10@GUI_DrawEl
$LN9@GUI_DrawEl:
; Line 315
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _GUI_Context+64
	mov	DWORD PTR _x0$[ebp], eax
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _GUI_Context+68
	mov	DWORD PTR _y0$[ebp], eax
; Line 319
	mov	eax, DWORD PTR _x0$[ebp]
	sub	eax, DWORD PTR _rx$[ebp]
	mov	WORD PTR _r$[ebp], ax
; Line 320
	mov	eax, DWORD PTR _x0$[ebp]
	add	eax, DWORD PTR _rx$[ebp]
	mov	WORD PTR _r$[ebp+4], ax
; Line 321
	mov	eax, DWORD PTR _y0$[ebp]
	sub	eax, DWORD PTR _ry$[ebp]
	mov	WORD PTR _r$[ebp+2], ax
; Line 322
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _ry$[ebp]
	mov	WORD PTR _r$[ebp+6], ax
; Line 323
	lea	eax, DWORD PTR _r$[ebp]
	push	eax
	call	_WM__InitIVRSearch
	add	esp, 4
	test	eax, eax
	je	SHORT $LN10@GUI_DrawEl
$LN6@GUI_DrawEl:
; Line 325
	movzx	eax, BYTE PTR _PenSize$[ebp]
	cmp	eax, DWORD PTR _rx$[ebp]
	je	SHORT $LN2@GUI_DrawEl
	movzx	eax, BYTE PTR _PenSize$[ebp]
	cmp	eax, DWORD PTR _ry$[ebp]
	jne	SHORT $LN3@GUI_DrawEl
$LN2@GUI_DrawEl:
; Line 326
	mov	eax, DWORD PTR _ry$[ebp]
	push	eax
	mov	ecx, DWORD PTR _rx$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y0$[ebp]
	push	edx
	mov	eax, DWORD PTR _x0$[ebp]
	push	eax
	call	_GL_FillEllipse
	add	esp, 16					; 00000010H
; Line 327
	jmp	SHORT $LN5@GUI_DrawEl
$LN3@GUI_DrawEl:
; Line 328
	movzx	eax, BYTE PTR _PenSize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ry$[ebp]
	push	ecx
	mov	edx, DWORD PTR _rx$[ebp]
	push	edx
	mov	eax, DWORD PTR _y0$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	push	ecx
	call	_GL_DrawEllipse
	add	esp, 20					; 00000014H
$LN5@GUI_DrawEl:
; Line 331
	call	_WM__GetNextIVR
	test	eax, eax
	jne	SHORT $LN6@GUI_DrawEl
$LN10@GUI_DrawEl:
; Line 334
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@GUI_DrawEl
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@GUI_DrawEl:
	DD	1
	DD	$LN13@GUI_DrawEl
$LN13@GUI_DrawEl:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN12@GUI_DrawEl
$LN12@GUI_DrawEl:
	DB	114					; 00000072H
	DB	0
_GUI_DrawEllipse ENDP
_TEXT	ENDS
END
