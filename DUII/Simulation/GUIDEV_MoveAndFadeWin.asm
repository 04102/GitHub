; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_MoveAndFadeWin.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_MEMDEV_MoveInWindow
EXTRN	_WM_ValidateWindow:PROC
EXTRN	_WM_GetDesktopWindow:PROC
EXTRN	_WM_ShowWindow:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_moveandfadewin.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV_MoveInWindow
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_a180$ = 20						; size = 4
_Period$ = 24						; size = 4
_GUI_MEMDEV_MoveInWindow PROC				; COMDAT
; Line 474
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 481
	push	OFFSET __CalcParaMoveIn
	mov	eax, DWORD PTR _Period$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a180$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__MoveWindow
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 485
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ShowWindow
	add	esp, 4
; Line 486
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 487
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 492
	mov	eax, DWORD PTR _r$[ebp]
; Line 493
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_MoveInWindow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcParaMoveIn
_TEXT	SEGMENT
_pParaIn$ = 8						; size = 4
_pParaOut$ = 12						; size = 4
__CalcParaMoveIn PROC					; COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 92
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR [eax]
	imul	ecx, 1000				; 000003e8H
	mov	edx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	edx, DWORD PTR [edx+8]
	imul	edx, DWORD PTR [eax]
	imul	edx, 1000				; 000003e8H
	mov	esi, DWORD PTR _pParaIn$[ebp]
	mov	eax, edx
	cdq
	idiv	DWORD PTR [esi+4]
	sub	ecx, eax
	mov	eax, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 93
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx+4], eax
; Line 94
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR [edx+12]
	sub	ecx, eax
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 95
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR [edx+16]
	sub	ecx, eax
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx+12], ecx
; Line 96
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcParaMoveIn ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_GUI_MEMDEV_Delete:PROC
EXTRN	_WM_Activate:PROC
EXTRN	_GUI_MEMDEV_Write:PROC
EXTRN	_WM_Deactivate:PROC
EXTRN	_GUI_MEMDEV__Rotate:PROC
EXTRN	_memcpy:PROC
EXTRN	_GUI_X_Delay:PROC
EXTRN	_GUI_GetTime:PROC
EXTRN	_GUI_MEMDEV_GetDataPtr:PROC
EXTRN	_GUI_MEMDEV_CreateFixed:PROC
EXTRN	_GUI_MEMDEV_DEVICE_32:BYTE
EXTRN	_LCD_API_ColorConv_888:BYTE
EXTRN	_LCD_GetYSize:PROC
EXTRN	_LCD_GetXSize:PROC
EXTRN	_WM_GetWindowRectEx:PROC
EXTRN	_WM_SelectWindow:PROC
EXTRN	_WM_HideWindow:PROC
EXTRN	_GUI_MEMDEV_GetWindowDevice:PROC
EXTRN	_GUI_MEMDEV_CreateStatic:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __MoveWindow
_TEXT	SEGMENT
tv144 = -448						; size = 4
_ParaOut$ = -248					; size = 16
_ParaIn$ = -224						; size = 20
_r$ = -196						; size = 4
_TimeUsed$ = -184					; size = 4
_TimeDiff$ = -172					; size = 4
_TimeNow$ = -160					; size = 4
_TimeStart$ = -148					; size = 4
_MemSizeBk$ = -136					; size = 4
_pDst$ = -124						; size = 4
_pBk$ = -112						; size = 4
_Rect$ = -100						; size = 8
_my$ = -84						; size = 4
_mx$ = -72						; size = 4
_ySize$ = -60						; size = 4
_xSize$ = -48						; size = 4
_hMemBk$ = -36						; size = 4
_hMemDst$ = -24						; size = 4
_hMemWin$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hWin$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_a180$ = 20						; size = 4
_Period$ = 24						; size = 4
_pfCalcPara$ = 28					; size = 4
__MoveWindow PROC					; COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 448				; 000001c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-448]
	mov	ecx, 112				; 00000070H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 174
	mov	eax, DWORD PTR _a180$[ebp]
	mov	DWORD PTR _ParaIn$[ebp], eax
; Line 175
	mov	eax, DWORD PTR _Period$[ebp]
	mov	DWORD PTR _ParaIn$[ebp+4], eax
; Line 180
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ShowWindow
	add	esp, 4
; Line 184
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_CreateStatic
	add	esp, 4
; Line 188
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetWindowDevice
	add	esp, 4
	mov	DWORD PTR _hMemWin$[ebp], eax
; Line 192
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_HideWindow
	add	esp, 4
; Line 193
	cmp	DWORD PTR _hMemWin$[ebp], 0
	je	$LN10@MoveWindow
; Line 197
	call	_WM_GetDesktopWindow
	push	eax
	call	_GUI_MEMDEV_CreateStatic
	add	esp, 4
; Line 201
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_SelectWindow
	add	esp, 4
; Line 205
	call	_WM_GetDesktopWindow
	push	eax
	call	_GUI_MEMDEV_GetWindowDevice
	add	esp, 4
	mov	DWORD PTR _hMemBk$[ebp], eax
; Line 206
	cmp	DWORD PTR _hMemBk$[ebp], 0
	je	$LN9@MoveWindow
; Line 210
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 214
	call	_LCD_GetXSize
	mov	DWORD PTR _xSize$[ebp], eax
; Line 215
	call	_LCD_GetYSize
	mov	DWORD PTR _ySize$[ebp], eax
; Line 218
	push	OFFSET _LCD_API_ColorConv_888
	push	OFFSET _GUI_MEMDEV_DEVICE_32
	push	1
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	push	0
	push	0
	call	_GUI_MEMDEV_CreateFixed
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hMemDst$[ebp], eax
; Line 219
	cmp	DWORD PTR _hMemDst$[ebp], 0
	je	$LN8@MoveWindow
; Line 223
	mov	eax, DWORD PTR _xSize$[ebp]
	imul	eax, DWORD PTR _ySize$[ebp]
	shl	eax, 2
	mov	DWORD PTR _MemSizeBk$[ebp], eax
; Line 227
	mov	eax, DWORD PTR _hMemBk$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetDataPtr
	add	esp, 4
	mov	DWORD PTR _pBk$[ebp], eax
; Line 228
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetDataPtr
	add	esp, 4
	mov	DWORD PTR _pDst$[ebp], eax
; Line 232
	movsx	eax, WORD PTR _Rect$[ebp]
	movsx	ecx, WORD PTR _Rect$[ebp+4]
	add	eax, ecx
	sar	eax, 1
	mov	DWORD PTR _mx$[ebp], eax
; Line 233
	movsx	eax, WORD PTR _Rect$[ebp+2]
	movsx	ecx, WORD PTR _Rect$[ebp+6]
	add	eax, ecx
	sar	eax, 1
	mov	DWORD PTR _my$[ebp], eax
; Line 237
	mov	eax, DWORD PTR _x$[ebp]
	sub	eax, DWORD PTR _mx$[ebp]
	mov	DWORD PTR _ParaIn$[ebp+12], eax
; Line 238
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, DWORD PTR _my$[ebp]
	mov	DWORD PTR _ParaIn$[ebp+16], eax
; Line 242
	call	_GUI_GetTime
	mov	DWORD PTR _TimeStart$[ebp], eax
; Line 243
	push	10					; 0000000aH
	call	_GUI_X_Delay
	add	esp, 4
$LN7@MoveWindow:
; Line 248
	call	_GUI_GetTime
	mov	DWORD PTR _TimeNow$[ebp], eax
; Line 249
	mov	eax, DWORD PTR _TimeNow$[ebp]
	sub	eax, DWORD PTR _TimeStart$[ebp]
	mov	DWORD PTR _TimeDiff$[ebp], eax
; Line 250
	mov	eax, DWORD PTR _TimeDiff$[ebp]
	cmp	eax, DWORD PTR _Period$[ebp]
	jle	SHORT $LN13@MoveWindow
	mov	ecx, DWORD PTR _Period$[ebp]
	mov	DWORD PTR tv144[ebp], ecx
	jmp	SHORT $LN14@MoveWindow
$LN13@MoveWindow:
	mov	edx, DWORD PTR _TimeDiff$[ebp]
	mov	DWORD PTR tv144[ebp], edx
$LN14@MoveWindow:
	mov	eax, DWORD PTR tv144[ebp]
	mov	DWORD PTR _ParaIn$[ebp+8], eax
; Line 254
	mov	esi, esp
	lea	eax, DWORD PTR _ParaOut$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ParaIn$[ebp]
	push	ecx
	call	DWORD PTR _pfCalcPara$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 258
	mov	eax, DWORD PTR _MemSizeBk$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pBk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDst$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH
; Line 265
	push	16777215				; 00ffffffH
	mov	eax, DWORD PTR _ParaOut$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR _ParaOut$[ebp]
	push	ecx
	movsx	edx, WORD PTR _Rect$[ebp+2]
	add	edx, DWORD PTR _ParaOut$[ebp+12]
	push	edx
	movsx	eax, WORD PTR _Rect$[ebp]
	add	eax, DWORD PTR _ParaOut$[ebp+8]
	push	eax
	mov	ecx, DWORD PTR _hMemDst$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMemWin$[ebp]
	push	edx
	call	_GUI_MEMDEV__Rotate
	add	esp, 28					; 0000001cH
; Line 269
	call	_WM_Deactivate
; Line 270
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	call	_GUI_MEMDEV_Write
	add	esp, 4
; Line 271
	call	_WM_Activate
; Line 275
	call	_GUI_GetTime
	sub	eax, DWORD PTR _TimeNow$[ebp]
	mov	DWORD PTR _TimeUsed$[ebp], eax
; Line 276
	cmp	DWORD PTR _TimeUsed$[ebp], 10		; 0000000aH
	jge	SHORT $LN6@MoveWindow
; Line 277
	mov	eax, 10					; 0000000aH
	sub	eax, DWORD PTR _TimeUsed$[ebp]
	push	eax
	call	_GUI_X_Delay
	add	esp, 4
$LN6@MoveWindow:
; Line 279
	mov	eax, DWORD PTR _TimeStart$[ebp]
	add	eax, DWORD PTR _Period$[ebp]
	cmp	DWORD PTR _TimeNow$[ebp], eax
	jl	$LN7@MoveWindow
; Line 283
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 284
	mov	DWORD PTR _r$[ebp], 0
; Line 285
	jmp	SHORT $LN3@MoveWindow
$LN8@MoveWindow:
; Line 286
	mov	DWORD PTR _r$[ebp], 1
$LN3@MoveWindow:
; Line 288
	mov	eax, DWORD PTR _hMemBk$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 289
	jmp	SHORT $LN2@MoveWindow
$LN9@MoveWindow:
; Line 290
	mov	DWORD PTR _r$[ebp], 1
$LN2@MoveWindow:
; Line 292
	mov	eax, DWORD PTR _hMemWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 293
	jmp	SHORT $LN1@MoveWindow
$LN10@MoveWindow:
; Line 294
	mov	DWORD PTR _r$[ebp], 1
$LN1@MoveWindow:
; Line 299
	call	_WM_GetDesktopWindow
	push	eax
	call	__RemoveStaticDevice
	add	esp, 4
; Line 303
	mov	eax, DWORD PTR _r$[ebp]
; Line 304
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN19@MoveWindow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 448				; 000001c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN19@MoveWindow:
	DD	3
	DD	$LN18@MoveWindow
$LN18@MoveWindow:
	DD	-100					; ffffff9cH
	DD	8
	DD	$LN15@MoveWindow
	DD	-224					; ffffff20H
	DD	20					; 00000014H
	DD	$LN16@MoveWindow
	DD	-248					; ffffff08H
	DD	16					; 00000010H
	DD	$LN17@MoveWindow
$LN17@MoveWindow:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	79					; 0000004fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	0
$LN16@MoveWindow:
	DB	80					; 00000050H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	0
$LN15@MoveWindow:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__MoveWindow ENDP
_TEXT	ENDS
EXTRN	_WM_GetNextSibling:PROC
EXTRN	_WM_GetFirstChild:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __RemoveStaticDevice
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hWin$ = 8						; size = 4
__RemoveStaticDevice PROC				; COMDAT
; Line 119
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 122
	cmp	DWORD PTR _hWin$[ebp], 0
	je	$LN6@RemoveStat
; Line 123
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 124
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, 65536				; 00010000H
	je	SHORT $LN4@RemoveStat
; Line 125
	mov	eax, DWORD PTR _pObj$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN3@RemoveStat
; Line 126
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+36]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 127
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+36], 0
$LN3@RemoveStat:
; Line 129
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+40]
	and	ecx, -65537				; fffeffffH
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [edx+40], ecx
$LN4@RemoveStat:
; Line 131
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 132
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetFirstChild
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
$LN2@RemoveStat:
; Line 133
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN6@RemoveStat
; Line 134
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	__RemoveStaticDevice
	add	esp, 4
; Line 135
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_GetNextSibling
	add	esp, 4
	mov	DWORD PTR _hWin$[ebp], eax
; Line 136
	jmp	SHORT $LN2@RemoveStat
$LN6@RemoveStat:
; Line 138
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__RemoveStaticDevice ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV_MoveOutWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV_MoveOutWindow
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_a180$ = 20						; size = 4
_Period$ = 24						; size = 4
_GUI_MEMDEV_MoveOutWindow PROC				; COMDAT
; Line 499
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 506
	push	OFFSET __CalcParaMoveOut
	mov	eax, DWORD PTR _Period$[ebp]
	push	eax
	mov	ecx, DWORD PTR _a180$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__MoveWindow
	add	esp, 24					; 00000018H
	mov	DWORD PTR _r$[ebp], eax
; Line 510
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_HideWindow
	add	esp, 4
; Line 511
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 516
	mov	eax, DWORD PTR _r$[ebp]
; Line 517
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_MoveOutWindow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcParaMoveOut
_TEXT	SEGMENT
_pParaIn$ = 8						; size = 4
_pParaOut$ = 12						; size = 4
__CalcParaMoveOut PROC					; COMDAT
; Line 105
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 106
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR [ecx]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx], eax
; Line 107
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, 1000				; 000003e8H
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, 1000				; 000003e8H
	sub	edx, eax
	mov	eax, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [eax+4], edx
; Line 108
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR [ecx+12]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx+8], eax
; Line 109
	mov	eax, DWORD PTR _pParaIn$[ebp]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	mov	eax, DWORD PTR [eax+8]
	imul	eax, DWORD PTR [ecx+16]
	mov	ecx, DWORD PTR _pParaIn$[ebp]
	cdq
	idiv	DWORD PTR [ecx+4]
	mov	edx, DWORD PTR _pParaOut$[ebp]
	mov	DWORD PTR [edx+12], eax
; Line 110
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcParaMoveOut ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV_FadeInWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV_FadeInWindow
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_Period$ = 12						; size = 4
_GUI_MEMDEV_FadeInWindow PROC				; COMDAT
; Line 523
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 530
	push	OFFSET __CalcParaFadeIn
	mov	eax, DWORD PTR _Period$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__FadeWindow
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 534
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ShowWindow
	add	esp, 4
; Line 535
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 540
	mov	eax, DWORD PTR _r$[ebp]
; Line 541
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_FadeInWindow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcParaFadeIn
_TEXT	SEGMENT
tv67 = -208						; size = 4
_Intens$ = -8						; size = 4
_Period$ = 8						; size = 4
_TimeUsed$ = 12						; size = 4
__CalcParaFadeIn PROC					; COMDAT
; Line 313
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 316
	mov	eax, DWORD PTR _TimeUsed$[ebp]
	imul	eax, 255				; 000000ffH
	cdq
	idiv	DWORD PTR _Period$[ebp]
	mov	DWORD PTR _Intens$[ebp], eax
; Line 317
	cmp	DWORD PTR _Intens$[ebp], 255		; 000000ffH
	jle	SHORT $LN3@CalcParaFa
	mov	DWORD PTR tv67[ebp], 255		; 000000ffH
	jmp	SHORT $LN4@CalcParaFa
$LN3@CalcParaFa:
	mov	eax, DWORD PTR _Intens$[ebp]
	mov	DWORD PTR tv67[ebp], eax
$LN4@CalcParaFa:
	mov	ecx, DWORD PTR tv67[ebp]
	mov	DWORD PTR _Intens$[ebp], ecx
; Line 318
	mov	eax, DWORD PTR _Intens$[ebp]
; Line 319
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcParaFadeIn ENDP
_TEXT	ENDS
EXTRN	_GUI_MEMDEV__FadeDeviceEx:PROC
EXTRN	_GUI_MEMDEV_GetYPos:PROC
EXTRN	_GUI_MEMDEV_GetXPos:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __FadeWindow
_TEXT	SEGMENT
tv140 = -368						; size = 4
_yPosWin$ = -168					; size = 4
_xPosWin$ = -156					; size = 4
_r$ = -144						; size = 4
_Intens$ = -132						; size = 4
_TimeUsed$ = -120					; size = 4
_TimeDiff$ = -108					; size = 4
_TimeNow$ = -96						; size = 4
_TimeStart$ = -84					; size = 4
_Rect$ = -72						; size = 8
_ySize$ = -56						; size = 4
_xSize$ = -44						; size = 4
_hMemBk$ = -32						; size = 4
_hMemDst$ = -20						; size = 4
_hMemWin$ = -8						; size = 4
_hWin$ = 8						; size = 4
_Period$ = 12						; size = 4
_pfCalcPara$ = 16					; size = 4
__FadeWindow PROC					; COMDAT
; Line 351
	push	ebp
	mov	ebp, esp
	sub	esp, 368				; 00000170H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-368]
	mov	ecx, 92					; 0000005cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 362
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_ShowWindow
	add	esp, 4
; Line 366
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_CreateStatic
	add	esp, 4
; Line 370
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetWindowDevice
	add	esp, 4
	mov	DWORD PTR _hMemWin$[ebp], eax
; Line 374
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_HideWindow
	add	esp, 4
; Line 375
	cmp	DWORD PTR _hMemWin$[ebp], 0
	je	$LN10@FadeWindow
; Line 376
	mov	eax, DWORD PTR _hMemWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetXPos
	add	esp, 4
	mov	DWORD PTR _xPosWin$[ebp], eax
; Line 377
	mov	eax, DWORD PTR _hMemWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_GetYPos
	add	esp, 4
	mov	DWORD PTR _yPosWin$[ebp], eax
; Line 381
	call	_WM_GetDesktopWindow
	push	eax
	call	_GUI_MEMDEV_CreateStatic
	add	esp, 4
; Line 385
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_SelectWindow
	add	esp, 4
; Line 389
	call	_WM_GetDesktopWindow
	push	eax
	call	_GUI_MEMDEV_GetWindowDevice
	add	esp, 4
	mov	DWORD PTR _hMemBk$[ebp], eax
; Line 390
	cmp	DWORD PTR _hMemBk$[ebp], 0
	je	$LN9@FadeWindow
; Line 394
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	_WM_GetWindowRectEx
	add	esp, 8
; Line 398
	movsx	eax, WORD PTR _Rect$[ebp+4]
	movsx	ecx, WORD PTR _Rect$[ebp]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _xSize$[ebp], eax
; Line 399
	movsx	eax, WORD PTR _Rect$[ebp+6]
	movsx	ecx, WORD PTR _Rect$[ebp+2]
	sub	eax, ecx
	add	eax, 1
	mov	DWORD PTR _ySize$[ebp], eax
; Line 402
	push	OFFSET _LCD_API_ColorConv_888
	push	OFFSET _GUI_MEMDEV_DEVICE_32
	push	1
	mov	eax, DWORD PTR _ySize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	movsx	edx, WORD PTR _Rect$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _Rect$[ebp]
	push	eax
	call	_GUI_MEMDEV_CreateFixed
	add	esp, 28					; 0000001cH
	mov	DWORD PTR _hMemDst$[ebp], eax
; Line 403
	cmp	DWORD PTR _hMemDst$[ebp], 0
	je	$LN8@FadeWindow
; Line 407
	call	_GUI_GetTime
	mov	DWORD PTR _TimeStart$[ebp], eax
; Line 408
	push	10					; 0000000aH
	call	_GUI_X_Delay
	add	esp, 4
$LN7@FadeWindow:
; Line 413
	call	_GUI_GetTime
	mov	DWORD PTR _TimeNow$[ebp], eax
; Line 414
	mov	eax, DWORD PTR _TimeNow$[ebp]
	sub	eax, DWORD PTR _TimeStart$[ebp]
	mov	DWORD PTR _TimeDiff$[ebp], eax
; Line 415
	mov	eax, DWORD PTR _TimeDiff$[ebp]
	cmp	eax, DWORD PTR _Period$[ebp]
	jle	SHORT $LN13@FadeWindow
	mov	ecx, DWORD PTR _Period$[ebp]
	mov	DWORD PTR tv140[ebp], ecx
	jmp	SHORT $LN14@FadeWindow
$LN13@FadeWindow:
	mov	edx, DWORD PTR _TimeDiff$[ebp]
	mov	DWORD PTR tv140[ebp], edx
$LN14@FadeWindow:
	mov	eax, DWORD PTR tv140[ebp]
	mov	DWORD PTR _TimeDiff$[ebp], eax
; Line 419
	mov	esi, esp
	mov	eax, DWORD PTR _TimeDiff$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Period$[ebp]
	push	ecx
	call	DWORD PTR _pfCalcPara$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Intens$[ebp], eax
; Line 423
	mov	eax, DWORD PTR _yPosWin$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xPosWin$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _Intens$[ebp]
	push	edx
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hMemBk$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hMemWin$[ebp]
	push	edx
	call	_GUI_MEMDEV__FadeDeviceEx
	add	esp, 24					; 00000018H
; Line 427
	call	_WM_Deactivate
; Line 428
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	call	_GUI_MEMDEV_Write
	add	esp, 4
; Line 429
	call	_WM_Activate
; Line 433
	call	_GUI_GetTime
	sub	eax, DWORD PTR _TimeNow$[ebp]
	mov	DWORD PTR _TimeUsed$[ebp], eax
; Line 434
	cmp	DWORD PTR _TimeUsed$[ebp], 10		; 0000000aH
	jge	SHORT $LN6@FadeWindow
; Line 435
	mov	eax, 10					; 0000000aH
	sub	eax, DWORD PTR _TimeUsed$[ebp]
	push	eax
	call	_GUI_X_Delay
	add	esp, 4
$LN6@FadeWindow:
; Line 437
	mov	eax, DWORD PTR _TimeStart$[ebp]
	add	eax, DWORD PTR _Period$[ebp]
	cmp	DWORD PTR _TimeNow$[ebp], eax
	jl	$LN7@FadeWindow
; Line 441
	mov	eax, DWORD PTR _hMemDst$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 442
	mov	DWORD PTR _r$[ebp], 0
; Line 443
	jmp	SHORT $LN3@FadeWindow
$LN8@FadeWindow:
; Line 444
	mov	DWORD PTR _r$[ebp], 1
$LN3@FadeWindow:
; Line 446
	mov	eax, DWORD PTR _hMemBk$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 447
	jmp	SHORT $LN2@FadeWindow
$LN9@FadeWindow:
; Line 448
	mov	DWORD PTR _r$[ebp], 1
$LN2@FadeWindow:
; Line 450
	mov	eax, DWORD PTR _hMemWin$[ebp]
	push	eax
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 451
	jmp	SHORT $LN1@FadeWindow
$LN10@FadeWindow:
; Line 452
	mov	DWORD PTR _r$[ebp], 1
$LN1@FadeWindow:
; Line 457
	call	_WM_GetDesktopWindow
	push	eax
	call	__RemoveStaticDevice
	add	esp, 4
; Line 461
	mov	eax, DWORD PTR _r$[ebp]
; Line 462
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@FadeWindow
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 368				; 00000170H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@FadeWindow:
	DD	1
	DD	$LN16@FadeWindow
$LN16@FadeWindow:
	DD	-72					; ffffffb8H
	DD	8
	DD	$LN15@FadeWindow
$LN15@FadeWindow:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__FadeWindow ENDP
_TEXT	ENDS
PUBLIC	_GUI_MEMDEV_FadeOutWindow
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_MEMDEV_FadeOutWindow
_TEXT	SEGMENT
_r$ = -8						; size = 4
_hWin$ = 8						; size = 4
_Period$ = 12						; size = 4
_GUI_MEMDEV_FadeOutWindow PROC				; COMDAT
; Line 547
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 554
	push	OFFSET __CalcParaFadeOut
	mov	eax, DWORD PTR _Period$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWin$[ebp]
	push	ecx
	call	__FadeWindow
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _r$[ebp], eax
; Line 558
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_HideWindow
	add	esp, 4
; Line 559
	call	_WM_GetDesktopWindow
	push	eax
	call	_WM_ValidateWindow
	add	esp, 4
; Line 564
	mov	eax, DWORD PTR _r$[ebp]
; Line 565
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_MEMDEV_FadeOutWindow ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __CalcParaFadeOut
_TEXT	SEGMENT
tv68 = -208						; size = 4
_Intens$ = -8						; size = 4
_Period$ = 8						; size = 4
_TimeUsed$ = 12						; size = 4
__CalcParaFadeOut PROC					; COMDAT
; Line 328
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 331
	mov	eax, DWORD PTR _TimeUsed$[ebp]
	imul	eax, 255				; 000000ffH
	cdq
	idiv	DWORD PTR _Period$[ebp]
	mov	ecx, 255				; 000000ffH
	sub	ecx, eax
	mov	DWORD PTR _Intens$[ebp], ecx
; Line 332
	jns	SHORT $LN3@CalcParaFa@2
	mov	DWORD PTR tv68[ebp], 0
	jmp	SHORT $LN4@CalcParaFa@2
$LN3@CalcParaFa@2:
	mov	eax, DWORD PTR _Intens$[ebp]
	mov	DWORD PTR tv68[ebp], eax
$LN4@CalcParaFa@2:
	mov	ecx, DWORD PTR tv68[ebp]
	mov	DWORD PTR _Intens$[ebp], ecx
; Line 333
	mov	eax, DWORD PTR _Intens$[ebp]
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__CalcParaFadeOut ENDP
_TEXT	ENDS
PUBLIC	_GUIDEV_MoveAndFadeWin_C
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUIDEV_MoveAndFadeWin_C
_TEXT	SEGMENT
_GUIDEV_MoveAndFadeWin_C PROC				; COMDAT
; Line 570
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUIDEV_MoveAndFadeWin_C ENDP
_TEXT	ENDS
END
