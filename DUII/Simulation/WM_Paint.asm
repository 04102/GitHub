; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\WM\WM_Paint.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG9436	DB	'Function may not be called from within a paint event', 00H
_DATA	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_WM_Update
EXTRN	_LCD_SetBkColor:PROC
EXTRN	_LCD_SetColor:PROC
EXTRN	_GUI_RestoreContext:PROC
EXTRN	_WM__Paint:PROC
EXTRN	_GUI_SaveContext_W:PROC
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_WM__PaintCallbackCnt:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\wm\wm_paint.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WM_Update
_TEXT	SEGMENT
_Context$ = -104					; size = 96
__$ArrayPad$ = -4					; size = 4
_hWin$ = 8						; size = 4
_WM_Update PROC						; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 300				; 0000012cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-300]
	mov	ecx, 75					; 0000004bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 41
	movzx	eax, BYTE PTR _WM__PaintCallbackCnt
	test	eax, eax
	je	SHORT $LN2@WM_Update
	push	OFFSET $SG9436
	call	_GUI_ErrorOut
	add	esp, 4
$LN2@WM_Update:
; Line 42
	cmp	DWORD PTR _hWin$[ebp], 0
	je	SHORT $LN3@WM_Update
; Line 44
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_SaveContext_W
	add	esp, 4
; Line 45
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM__Paint
	add	esp, 4
; Line 46
	lea	eax, DWORD PTR _Context$[ebp]
	push	eax
	call	_GUI_RestoreContext
	add	esp, 4
; Line 51
	mov	eax, DWORD PTR _Context$[ebp+48]
	push	eax
	call	_LCD_SetColor
	add	esp, 4
; Line 52
	mov	eax, DWORD PTR _Context$[ebp+52]
	push	eax
	call	_LCD_SetBkColor
	add	esp, 4
$LN3@WM_Update:
; Line 54
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@WM_Update
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 300				; 0000012cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN7@WM_Update:
	DD	1
	DD	$LN6@WM_Update
$LN6@WM_Update:
	DD	-104					; ffffff98H
	DD	96					; 00000060H
	DD	$LN5@WM_Update
$LN5@WM_Update:
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
_WM_Update ENDP
_TEXT	ENDS
PUBLIC	_WM_Paint
EXTRN	_WM_InvalidateWindow:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _WM_Paint
_TEXT	SEGMENT
_hWin$ = 8						; size = 4
_WM_Paint PROC						; COMDAT
; Line 60
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 61
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 62
	mov	eax, DWORD PTR _hWin$[ebp]
	push	eax
	call	_WM_Update
	add	esp, 4
; Line 63
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_WM_Paint ENDP
_TEXT	ENDS
END
