; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_DispStringInRectEx.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
COMM	_GUI_RectDispString:QWORD
_DATA	ENDS
PUBLIC	_GUI_DispStringInRectEx
EXTRN	_GUI__DispStringInRect:PROC
EXTRN	_GUI__IntersectRects:PROC
EXTRN	_WM_SetUserClipRect:PROC
EXTRN	_GUI_DispStringInRectMax:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_dispstringinrectex.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispStringInRectEx
_TEXT	SEGMENT
_rText$9140 = -52					; size = 8
_rClip$9139 = -36					; size = 8
_pOldClipRect$9137 = -20				; size = 4
_pLCD_ApiOld$ = -8					; size = 4
_s$ = 8							; size = 4
_pRect$ = 12						; size = 4
_TextAlign$ = 16					; size = 4
_MaxLen$ = 20						; size = 4
_pLCD_Api$ = 24						; size = 4
_GUI_DispStringInRectEx PROC				; COMDAT
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 72
	cmp	DWORD PTR _pLCD_Api$[ebp], 0
	jne	SHORT $LN4@GUI_DispSt
; Line 74
	mov	eax, DWORD PTR _MaxLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TextAlign$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_DispStringInRectMax
	add	esp, 16					; 00000010H
; Line 75
	jmp	$LN5@GUI_DispSt
$LN4@GUI_DispSt:
; Line 79
	mov	DWORD PTR _pOldClipRect$9137[ebp], 0
; Line 81
	xor	eax, eax
	mov	WORD PTR _rText$9140[ebp], ax
	xor	eax, eax
	mov	DWORD PTR _rText$9140[ebp+2], eax
	mov	WORD PTR _rText$9140[ebp+6], ax
; Line 84
	cmp	DWORD PTR _pRect$[ebp], 0
	je	SHORT $LN2@GUI_DispSt
; Line 85
	mov	eax, DWORD PTR _pRect$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _rText$9140[ebp], ecx
	mov	DWORD PTR _rText$9140[ebp+4], edx
; Line 86
	mov	eax, DWORD PTR _rText$9140[ebp]
	mov	DWORD PTR _GUI_RectDispString, eax
	mov	ecx, DWORD PTR _rText$9140[ebp+4]
	mov	DWORD PTR _GUI_RectDispString+4, ecx
; Line 88
	mov	eax, DWORD PTR _pRect$[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
	mov	DWORD PTR _pOldClipRect$9137[ebp], eax
; Line 89
	cmp	DWORD PTR _pOldClipRect$9137[ebp], 0
	je	SHORT $LN2@GUI_DispSt
; Line 90
	mov	eax, DWORD PTR _pOldClipRect$9137[ebp]
	push	eax
	mov	ecx, DWORD PTR _pRect$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rClip$9139[ebp]
	push	edx
	call	_GUI__IntersectRects
	add	esp, 12					; 0000000cH
; Line 91
	lea	eax, DWORD PTR _rClip$9139[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
$LN2@GUI_DispSt:
; Line 99
	mov	eax, DWORD PTR _pLCD_Api$[ebp]
	push	eax
	call	__SetRotation
	add	esp, 4
	mov	DWORD PTR _pLCD_ApiOld$[ebp], eax
; Line 100
	mov	esi, esp
	lea	eax, DWORD PTR _rText$9140[ebp]
	push	eax
	mov	ecx, DWORD PTR _pLCD_Api$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	call	edx
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 101
	mov	eax, DWORD PTR _MaxLen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _TextAlign$[ebp]
	push	ecx
	lea	edx, DWORD PTR _rText$9140[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI__DispStringInRect
	add	esp, 16					; 00000010H
; Line 104
	mov	eax, DWORD PTR _pOldClipRect$9137[ebp]
	push	eax
	call	_WM_SetUserClipRect
	add	esp, 4
; Line 108
	mov	eax, DWORD PTR _pLCD_ApiOld$[ebp]
	push	eax
	call	__SetRotation
	add	esp, 4
$LN5@GUI_DispSt:
; Line 111
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GUI_DispSt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@GUI_DispSt:
	DD	2
	DD	$LN9@GUI_DispSt
$LN9@GUI_DispSt:
	DD	-36					; ffffffdcH
	DD	8
	DD	$LN7@GUI_DispSt
	DD	-52					; ffffffccH
	DD	8
	DD	$LN8@GUI_DispSt
$LN8@GUI_DispSt:
	DB	114					; 00000072H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	0
$LN7@GUI_DispSt:
	DB	114					; 00000072H
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	0
_GUI_DispStringInRectEx ENDP
_TEXT	ENDS
EXTRN	_GUI_Context:BYTE
EXTRN	_GUI_pLCD_APIList:DWORD
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetRotation
_TEXT	SEGMENT
_pLCD_ApiOld$ = -8					; size = 4
_pLCD_Api$ = 8						; size = 4
__SetRotation PROC					; COMDAT
; Line 46
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 49
	mov	eax, DWORD PTR _GUI_pLCD_APIList
	mov	DWORD PTR _pLCD_ApiOld$[ebp], eax
; Line 50
	cmp	DWORD PTR _pLCD_Api$[ebp], 0
	je	SHORT $LN2@SetRotatio
; Line 51
	mov	DWORD PTR _GUI_Context+20, 0
; Line 52
	jmp	SHORT $LN1@SetRotatio
$LN2@SetRotatio:
; Line 53
	mov	DWORD PTR _GUI_Context+20, OFFSET _GUI_Context+8
$LN1@SetRotatio:
; Line 55
	mov	eax, DWORD PTR _pLCD_Api$[ebp]
	mov	DWORD PTR _GUI_pLCD_APIList, eax
; Line 57
	mov	eax, DWORD PTR _pLCD_ApiOld$[ebp]
; Line 58
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
__SetRotation ENDP
_TEXT	ENDS
END
