; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_SIF.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG8394	DB	'ID of downloaded font wrong!', 00H
_DATA	ENDS
PUBLIC	_GUI_SIF__GetNumCharAreas
EXTRN	_GUI__Read16:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_sif.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_SIF__GetNumCharAreas
_TEXT	SEGMENT
_pData$ = -20						; size = 4
_NumCharAreas$ = -8					; size = 2
_pFont$ = 8						; size = 4
_GUI_SIF__GetNumCharAreas PROC				; COMDAT
; Line 41
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 44
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 14					; 0000000eH
	mov	DWORD PTR _pData$[ebp], ecx
; Line 45
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _NumCharAreas$[ebp], ax
; Line 46
	movzx	eax, WORD PTR _NumCharAreas$[ebp]
; Line 47
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_SIF__G
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@GUI_SIF__G:
	DD	1
	DD	$LN4@GUI_SIF__G
$LN4@GUI_SIF__G:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN3@GUI_SIF__G
$LN3@GUI_SIF__G:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_GUI_SIF__GetNumCharAreas ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF__GetpCharInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF__GetpCharInfo
_TEXT	SEGMENT
_CharArea$8358 = -44					; size = 4
_NumCharAreas$ = -32					; size = 4
_pCharInfo$ = -20					; size = 4
_pCharArea$ = -8					; size = 4
_pFont$ = 8						; size = 4
_c$ = 12						; size = 2
_SizeOfCharInfo$ = 16					; size = 4
_GUI_SIF__GetpCharInfo PROC				; COMDAT
; Line 53
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 56
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SIF__GetNumCharAreas
	add	esp, 4
	mov	DWORD PTR _NumCharAreas$[ebp], eax
; Line 58
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 16					; 00000010H
	mov	DWORD PTR _pCharArea$[ebp], ecx
; Line 60
	mov	eax, DWORD PTR _NumCharAreas$[ebp]
	mov	ecx, DWORD PTR _pCharArea$[ebp]
	lea	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _pCharInfo$[ebp], edx
$LN4@GUI_SIF__G@2:
; Line 63
	lea	eax, DWORD PTR _pCharArea$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharArea$8358[ebp], ax
; Line 64
	lea	eax, DWORD PTR _pCharArea$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharArea$8358[ebp+2], ax
; Line 65
	movzx	eax, WORD PTR _c$[ebp]
	movzx	ecx, WORD PTR _CharArea$8358[ebp]
	cmp	eax, ecx
	jl	SHORT $LN1@GUI_SIF__G@2
	movzx	eax, WORD PTR _c$[ebp]
	movzx	ecx, WORD PTR _CharArea$8358[ebp+2]
	cmp	eax, ecx
	jg	SHORT $LN1@GUI_SIF__G@2
; Line 66
	movzx	eax, WORD PTR _c$[ebp]
	movzx	ecx, WORD PTR _CharArea$8358[ebp]
	sub	eax, ecx
	imul	eax, DWORD PTR _SizeOfCharInfo$[ebp]
	add	eax, DWORD PTR _pCharInfo$[ebp]
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	jmp	SHORT $LN5@GUI_SIF__G@2
$LN1@GUI_SIF__G@2:
; Line 69
	movzx	eax, WORD PTR _CharArea$8358[ebp+2]
	movzx	ecx, WORD PTR _CharArea$8358[ebp]
	sub	eax, ecx
	add	eax, 1
	imul	eax, DWORD PTR _SizeOfCharInfo$[ebp]
	add	eax, DWORD PTR _pCharInfo$[ebp]
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 70
	mov	eax, DWORD PTR _NumCharAreas$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumCharAreas$[ebp], eax
	jne	SHORT $LN4@GUI_SIF__G@2
; Line 71
	xor	eax, eax
$LN5@GUI_SIF__G@2:
; Line 72
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GUI_SIF__G@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@GUI_SIF__G@2:
	DD	2
	DD	$LN9@GUI_SIF__G@2
$LN9@GUI_SIF__G@2:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN7@GUI_SIF__G@2
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN8@GUI_SIF__G@2
$LN8@GUI_SIF__G@2:
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
$LN7@GUI_SIF__G@2:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	0
_GUI_SIF__GetpCharInfo ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF__GetCharDistX
EXTRN	_GUI_Context:BYTE
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF__GetCharDistX
_TEXT	SEGMENT
_DistX$ = -20						; size = 2
_pCharInfo$ = -8					; size = 4
_c$ = 8							; size = 2
_GUI_SIF__GetCharDistX PROC				; COMDAT
; Line 78
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 80
	xor	eax, eax
	mov	WORD PTR _DistX$[ebp], ax
; Line 81
	push	12					; 0000000cH
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 82
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	je	SHORT $LN1@GUI_SIF__G@3
; Line 83
	mov	eax, DWORD PTR _pCharInfo$[ebp]
	add	eax, 2
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 84
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _DistX$[ebp], ax
$LN1@GUI_SIF__G@3:
; Line 86
	movzx	eax, WORD PTR _DistX$[ebp]
; Line 87
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_SIF__G@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@GUI_SIF__G@3:
	DD	1
	DD	$LN5@GUI_SIF__G@3
$LN5@GUI_SIF__G@3:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GUI_SIF__G@3
$LN4@GUI_SIF__G@3:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
_GUI_SIF__GetCharDistX ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF__GetFontInfo
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF__GetFontInfo
_TEXT	SEGMENT
_pData$ = -8						; size = 4
_pFont$ = 8						; size = 4
_pfi$ = 12						; size = 4
_GUI_SIF__GetFontInfo PROC				; COMDAT
; Line 93
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 95
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, 4
	mov	DWORD PTR _pData$[ebp], ecx
; Line 96
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+2], al
; Line 97
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+3], al
; Line 98
	lea	eax, DWORD PTR _pData$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	BYTE PTR [ecx+4], al
; Line 99
	mov	eax, 1
	mov	ecx, DWORD PTR _pfi$[ebp]
	mov	WORD PTR [ecx], ax
; Line 100
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GUI_SIF__G@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GUI_SIF__G@4:
	DD	1
	DD	$LN4@GUI_SIF__G@4
$LN4@GUI_SIF__G@4:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN3@GUI_SIF__G@4
$LN3@GUI_SIF__G@4:
	DB	112					; 00000070H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
_GUI_SIF__GetFontInfo ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF__IsInFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF__IsInFont
_TEXT	SEGMENT
_pCharInfo$ = -8					; size = 4
_pFont$ = 8						; size = 4
_c$ = 12						; size = 2
_GUI_SIF__IsInFont PROC					; COMDAT
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 108
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR _pFont$[ebp], eax
; Line 109
	push	12					; 0000000cH
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 110
	xor	eax, eax
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	setne	al
; Line 111
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SIF__IsInFont ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF_CreateFont
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI__Read32:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF_CreateFont
_TEXT	SEGMENT
_ID$ = -20						; size = 4
_pSrc$ = -8						; size = 4
_pFontData$ = 8						; size = 4
_pFont$ = 12						; size = 4
_pFontType$ = 16					; size = 4
_GUI_SIF_CreateFont PROC				; COMDAT
; Line 123
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 124
	mov	eax, DWORD PTR _pFontData$[ebp]
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 127
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontData$[ebp]
	mov	DWORD PTR [eax+28], ecx
; Line 129
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read32
	add	esp, 4
	mov	DWORD PTR _ID$[ebp], eax
; Line 130
	cmp	DWORD PTR _ID$[ebp], 1346983239		; 50495547H
	je	SHORT $LN1@GUI_SIF_Cr
; Line 131
	push	OFFSET $SG8394
	call	_GUI_ErrorOut
	add	esp, 4
; Line 132
	jmp	$LN2@GUI_SIF_Cr
$LN1@GUI_SIF_Cr:
; Line 135
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [ecx+24], al
; Line 136
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [ecx+25], al
; Line 137
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [ecx+32], al
; Line 138
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [ecx+33], al
; Line 139
	lea	eax, DWORD PTR _pSrc$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [ecx+34], al
; Line 141
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [eax+26], 1
; Line 142
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	BYTE PTR [eax+27], 1
; Line 144
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 145
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax+4], edx
; Line 146
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	mov	DWORD PTR [eax+8], edx
; Line 147
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx+12]
	mov	DWORD PTR [eax+12], edx
; Line 148
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
; Line 149
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	ecx, DWORD PTR _pFontType$[ebp]
	mov	edx, DWORD PTR [ecx+20]
	mov	DWORD PTR [eax+20], edx
; Line 151
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
$LN2@GUI_SIF_Cr:
; Line 152
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_SIF_Cr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GUI_SIF_Cr:
	DD	1
	DD	$LN5@GUI_SIF_Cr
$LN5@GUI_SIF_Cr:
	DD	-8					; fffffff8H
	DD	4
	DD	$LN4@GUI_SIF_Cr
$LN4@GUI_SIF_Cr:
	DB	112					; 00000070H
	DB	83					; 00000053H
	DB	114					; 00000072H
	DB	99					; 00000063H
	DB	0
_GUI_SIF_CreateFont ENDP
_TEXT	ENDS
PUBLIC	_GUI_SIF_DeleteFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_SIF_DeleteFont
_TEXT	SEGMENT
_pFont$ = 8						; size = 4
_GUI_SIF_DeleteFont PROC				; COMDAT
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 159
	mov	eax, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR _pFont$[ebp], eax
; Line 160
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_SIF_DeleteFont ENDP
_TEXT	ENDS
END
