; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\DUII\gauge.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG16238 DB	'%d', 00H
	ORG $+1
$SG16254 DB	'%.0f', 00H
	ORG $+3
$SG16257 DB	'%.1f', 00H
	ORG $+3
$SG16259 DB	'%.2f', 00H
	ORG $+3
$SG16264 DB	'%s x%d', 00H
	ORG $+1
$SG16314 DB	'%.0f', 00H
	ORG $+3
$SG16317 DB	'%.1f', 00H
	ORG $+3
$SG16319 DB	'%.2f', 00H
CONST	ENDS
PUBLIC	?CreateGaugeBackground@Gauge@@AAEXXZ		; Gauge::CreateGaugeBackground
PUBLIC	__real@4066800000000000
PUBLIC	__real@400921fb5444261e
PUBLIC	?SetPrecision@Gauge@@QAEXH@Z			; Gauge::SetPrecision
PUBLIC	__real@3fe0000000000000
PUBLIC	??0Gauge@@QAE@HHHMMPAD00PAVAlarm@@MMHHDJPBUGUI_BITMAP@@@Z ; Gauge::Gauge
EXTRN	_GUI_MEMDEV_Create:PROC
EXTRN	_SystemError:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
EXTRN	??0ControlBase@@QAE@HHPAD0PAVAlarm@@@Z:PROC	; ControlBase::ControlBase
EXTRN	__fltused:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__ftol2_sse:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT __real@4066800000000000
; File c:\duii\duii\gauge.cpp
CONST	SEGMENT
__real@4066800000000000 DQ 04066800000000000r	; 180
CONST	ENDS
;	COMDAT __real@400921fb5444261e
CONST	SEGMENT
__real@400921fb5444261e DQ 0400921fb5444261er	; 3.14159
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT ??0Gauge@@QAE@HHHMMPAD00PAVAlarm@@MMHHDJPBUGUI_BITMAP@@@Z
_TEXT	SEGMENT
tv285 = -208						; size = 4
tv253 = -208						; size = 4
tv248 = -208						; size = 4
tv243 = -208						; size = 4
tv238 = -208						; size = 4
tv75 = -208						; size = 4
_this$ = -8						; size = 4
_x$ = 8							; size = 4
_y$ = 12						; size = 4
_Radius$ = 16						; size = 4
_MinValue$ = 20						; size = 4
_MaxValue$ = 24						; size = 4
_Name$ = 28						; size = 4
_Units$ = 32						; size = 4
_pInputNum$ = 36					; size = 4
_AlarmList$ = 40					; size = 4
_MajorTicRange$ = 44					; size = 4
_MinorTicRange$ = 48					; size = 4
_Precision$ = 52					; size = 4
_Multiplier$ = 56					; size = 4
_showMultiplier$ = 60					; size = 1
__hParent$ = 64						; size = 4
__pBitmap$ = 68						; size = 4
??0Gauge@@QAE@HHHMMPAD00PAVAlarm@@MMHHDJPBUGUI_BITMAP@@@Z PROC ; Gauge::Gauge, COMDAT
; _this$ = ecx
; Line 22
	push	ebp
	mov	ebp, esp
	sub	esp, 208				; 000000d0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-208]
	mov	ecx, 52					; 00000034H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _AlarmList$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Units$[ebp]
	push	ecx
	mov	edx, DWORD PTR _Name$[ebp]
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0ControlBase@@QAE@HHPAD0PAVAlarm@@@Z	; ControlBase::ControlBase
; Line 25
	push	0
	push	0
	push	0
	mov	eax, DWORD PTR __hParent$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Radius$[ebp]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _Radius$[ebp]
	shl	edx, 1
	push	edx
	mov	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR tv75[ebp], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR [edx+248], eax
	cmp	DWORD PTR tv75[ebp], 0
	jg	SHORT $LN4@Gauge
; Line 26
	call	_SystemError
$LN4@Gauge:
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _x$[ebp]
	mov	DWORD PTR [eax+112], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _y$[ebp]
	mov	DWORD PTR [eax+116], ecx
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __pBitmap$[ebp]
	mov	DWORD PTR [eax+184], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Radius$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 39
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	add	ecx, DWORD PTR _Radius$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+120], ecx
; Line 40
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+116]
	add	ecx, DWORD PTR _Radius$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+124], ecx
; Line 43
	fld	DWORD PTR _MaxValue$[ebp]
	fcomp	DWORD PTR _MinValue$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN3@Gauge
; Line 45
	fld	DWORD PTR _MinValue$[ebp]
	fsub	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR tv238[ebp], eax
	fild	DWORD PTR tv238[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+72]
; Line 46
	fld	DWORD PTR _MaxValue$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR tv243[ebp], eax
	fild	DWORD PTR tv243[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+68]
; Line 48
	jmp	SHORT $LN2@Gauge
$LN3@Gauge:
; Line 50
	fld	DWORD PTR _MinValue$[ebp]
	fadd	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR tv248[ebp], eax
	fild	DWORD PTR tv248[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+72]
; Line 51
	fld	DWORD PTR _MaxValue$[ebp]
	fsub	QWORD PTR __real@3fe0000000000000
	call	__ftol2_sse
	mov	DWORD PTR tv253[ebp], eax
	fild	DWORD PTR tv253[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [eax+68]
$LN2@Gauge:
; Line 54
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Multiplier$[ebp]
	mov	DWORD PTR [eax+156], ecx
; Line 55
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _showMultiplier$[ebp]
	mov	BYTE PTR [eax+160], cl
; Line 56
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+156], 1
	jge	SHORT $LN1@Gauge
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+156], 1
$LN1@Gauge:
; Line 59
	mov	eax, DWORD PTR _Precision$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?SetPrecision@Gauge@@QAEXH@Z		; Gauge::SetPrecision
; Line 62
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _MajorTicRange$[ebp]
	fstp	DWORD PTR [eax+104]
; Line 63
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _MinorTicRange$[ebp]
	fstp	DWORD PTR [eax+108]
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Name$[ebp]
	mov	DWORD PTR [eax+84], ecx
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Units$[ebp]
	mov	DWORD PTR [eax+88], ecx
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pInputNum$[ebp]
	mov	DWORD PTR [eax+96], ecx
; Line 69
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+132], 45			; 0000002dH
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+136], 270		; 0000010eH
; Line 72
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], -1
; Line 74
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+136]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	mov	ecx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [ecx+176]
; Line 77
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	fsub	DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	sub	ecx, DWORD PTR [eax+132]
	mov	DWORD PTR tv285[ebp], ecx
	fidiv	DWORD PTR tv285[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	fstp	DWORD PTR [edx+172]
; Line 79
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [ecx+72]
	fstp	DWORD PTR [eax+180]
; Line 81
	mov	eax, DWORD PTR _this$[ebp]
	mov	BYTE PTR [eax+161], 1
; Line 83
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateGaugeBackground@Gauge@@AAEXXZ	; Gauge::CreateGaugeBackground
; Line 86
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+212], eax
; Line 87
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 208				; 000000d0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	64					; 00000040H
??0Gauge@@QAE@HHHMMPAD00PAVAlarm@@MMHHDJPBUGUI_BITMAP@@@Z ENDP ; Gauge::Gauge
_TEXT	ENDS
PUBLIC	??1Gauge@@QAE@XZ				; Gauge::~Gauge
EXTRN	_GUI_MEMDEV_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Gauge@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Gauge@@QAE@XZ PROC					; Gauge::~Gauge, COMDAT
; _this$ = ecx
; Line 96
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 97
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 98
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
; Line 99
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Gauge@@QAE@XZ ENDP					; Gauge::~Gauge
_TEXT	ENDS
PUBLIC	__real@4000000000000000
PUBLIC	__real@3ffc000000000000
PUBLIC	__real@4004000000000000
PUBLIC	__real@41200000
PUBLIC	__real@42c80000
PUBLIC	__real@40c00000
PUBLIC	__real@bf800000
PUBLIC	__real@3fb1eb851eb851ec
PUBLIC	__real@3fb999999999999a
PUBLIC	?sin@@YAMM@Z					; sin
PUBLIC	?cos@@YAMM@Z					; cos
PUBLIC	__real@3fe0000218def417
PUBLIC	__real@41c80000
PUBLIC	__real@42c20000
PUBLIC	__real@41100000
PUBLIC	__real@4071000000000000
PUBLIC	__real@447a0000
PUBLIC	__real@3fc3333333333333
PUBLIC	__$ArrayPad$
EXTRN	_GUI_SelectLCD:PROC
EXTRN	_GUI_DispStringHCenterAt:PROC
EXTRN	_GUI_Font16B_ASCII:BYTE
EXTRN	_GUI_DrawRoundedRect:PROC
EXTRN	_bmDefaultGauge:BYTE
EXTRN	_strcpy:PROC
EXTRN	_GUI_Font20_ASCII:BYTE
EXTRN	_GUI_DispStringAt:PROC
EXTRN	_GUI_GetFontDistY:PROC
EXTRN	_GUI_GetStringDistX:PROC
EXTRN	_sprintf:PROC
EXTRN	_GUI_DrawLine:PROC
EXTRN	_GUI_GetPenSize:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_Font24B_ASCII:BYTE
EXTRN	_GUI_DrawArc:PROC
EXTRN	_GUI_GetColor:PROC
EXTRN	_GUI_DrawBitmapEx:PROC
EXTRN	_GUI_SetPenSize:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_MEMDEV_Select:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3ffc000000000000
CONST	SEGMENT
__real@3ffc000000000000 DQ 03ffc000000000000r	; 1.75
CONST	ENDS
;	COMDAT __real@4004000000000000
CONST	SEGMENT
__real@4004000000000000 DQ 04004000000000000r	; 2.5
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@42c80000
CONST	SEGMENT
__real@42c80000 DD 042c80000r			; 100
CONST	ENDS
;	COMDAT __real@40c00000
CONST	SEGMENT
__real@40c00000 DD 040c00000r			; 6
CONST	ENDS
;	COMDAT __real@bf800000
CONST	SEGMENT
__real@bf800000 DD 0bf800000r			; -1
CONST	ENDS
;	COMDAT __real@3fb1eb851eb851ec
CONST	SEGMENT
__real@3fb1eb851eb851ec DQ 03fb1eb851eb851ecr	; 0.07
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fe0000218def417
CONST	SEGMENT
__real@3fe0000218def417 DQ 03fe0000218def417r	; 0.500001
CONST	ENDS
;	COMDAT __real@41c80000
CONST	SEGMENT
__real@41c80000 DD 041c80000r			; 25
CONST	ENDS
;	COMDAT __real@42c20000
CONST	SEGMENT
__real@42c20000 DD 042c20000r			; 97
CONST	ENDS
;	COMDAT __real@41100000
CONST	SEGMENT
__real@41100000 DD 041100000r			; 9
CONST	ENDS
;	COMDAT __real@4071000000000000
CONST	SEGMENT
__real@4071000000000000 DQ 04071000000000000r	; 272
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@3fc3333333333333
CONST	SEGMENT
__real@3fc3333333333333 DQ 03fc3333333333333r	; 0.15
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CreateGaugeBackground@Gauge@@AAEXXZ
_TEXT	SEGMENT
tv1042 = -628						; size = 4
tv899 = -628						; size = 4
tv891 = -628						; size = 4
tv857 = -628						; size = 4
tv783 = -628						; size = 4
_fMax$16251 = -428					; size = 4
_kmcMag$16208 = -416					; size = 4
_iArcRadius$16207 = -404				; size = 4
_temp$16206 = -392					; size = 4
_iAlarmEndAngle$16205 = -380				; size = 4
_iAlarmStartAngle$16204 = -368				; size = 4
_pAlarm$16203 = -356					; size = 4
_OldColor$ = -344					; size = 4
_strPrecision$ = -332					; size = 20
_str$ = -304						; size = 20
_range$ = -276						; size = 4
_dValuePerDeg$ = -264					; size = 4
_Mag$ = -252						; size = 4
_dTemp$ = -240						; size = 4
_radians$ = -228					; size = 4
_angle$ = -216						; size = 4
_dSin$ = -204						; size = 4
_dCos$ = -192						; size = 4
_iNeedleWidth$ = -180					; size = 4
_txt_height$ = -168					; size = 4
_txt_length$ = -156					; size = 4
_y2$ = -144						; size = 4
_x2$ = -132						; size = 4
_y1$ = -120						; size = 4
_x1$ = -108						; size = 4
_radius$ = -96						; size = 4
_iTemp$ = -84						; size = 4
_TicLength$ = -72					; size = 4
_MinorTicCount$ = -60					; size = 4
_value$ = -48						; size = 4
_TicCount$ = -36					; size = 4
_i$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
?CreateGaugeBackground@Gauge@@AAEXXZ PROC		; Gauge::CreateGaugeBackground, COMDAT
; _this$ = ecx
; Line 108
	push	ebp
	mov	ebp, esp
	sub	esp, 628				; 00000274H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-628]
	mov	ecx, 157				; 0000009dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 117
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+76], 0
	jle	SHORT $LN30@CreateGaug
; Line 118
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_GUI_MEMDEV_Delete
	add	esp, 4
$LN30@CreateGaug:
; Line 120
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+128]
	shl	eax, 1
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+116]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+112]
	push	ecx
	call	_GUI_MEMDEV_Create
	add	esp, 16					; 00000010H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], eax
; Line 121
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_GUI_MEMDEV_Select
	add	esp, 4
; Line 124
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 126
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 127
	push	1
	call	_GUI_SetPenSize
	add	esp, 4
; Line 129
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+128]
	fmul	QWORD PTR __real@3fc3333333333333
	fsubp	ST(1), ST(0)
	call	__ftol2_sse
	mov	DWORD PTR _radius$[ebp], eax
; Line 130
	fld	DWORD PTR __real@447a0000
	fstp	DWORD PTR _Mag$[ebp]
; Line 131
	fld	DWORD PTR _Mag$[ebp]
	fdiv	DWORD PTR __real@447a0000
	mov	eax, DWORD PTR _this$[ebp]
	fimul	DWORD PTR [eax+128]
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	sub	ecx, DWORD PTR _iTemp$[ebp]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 133
	fld	DWORD PTR _Mag$[ebp]
	fdiv	DWORD PTR __real@447a0000
	mov	eax, DWORD PTR _this$[ebp]
	fimul	DWORD PTR [eax+128]
	call	__ftol2_sse
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 134
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	sub	ecx, DWORD PTR _iTemp$[ebp]
	mov	DWORD PTR _y1$[ebp], ecx
; Line 135
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], 0
	je	SHORT $LN29@CreateGaug
; Line 136
	fld	DWORD PTR _Mag$[ebp]
	call	__ftol2_sse
	push	eax
	fld	DWORD PTR _Mag$[ebp]
	call	__ftol2_sse
	push	eax
	push	0
	push	0
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+184]
	push	eax
	call	_GUI_DrawBitmapEx
	add	esp, 28					; 0000001cH
$LN29@CreateGaug:
; Line 138
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+136]
	mov	ecx, DWORD PTR _this$[ebp]
	fisub	DWORD PTR [ecx+132]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [edx+68]
	fsub	DWORD PTR [eax+72]
	fdivp	ST(1), ST(0)
	fstp	DWORD PTR _dValuePerDeg$[ebp]
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	$LN28@CreateGaug
; Line 144
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _pAlarm$16203[ebp], ecx
; Line 148
	call	_GUI_GetColor
	mov	DWORD PTR _OldColor$[ebp], eax
; Line 150
	push	10					; 0000000aH
	call	_GUI_SetPenSize
	add	esp, 4
$LN27@CreateGaug:
; Line 151
	cmp	DWORD PTR _pAlarm$16203[ebp], 0
	je	$LN26@CreateGaug
; Line 153
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN25@CreateGaug
; Line 155
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+8]
	fsub	DWORD PTR [ecx+72]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	sub	ecx, eax
	mov	DWORD PTR _iAlarmStartAngle$16204[ebp], ecx
; Line 156
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+4]
	fsub	DWORD PTR [ecx+72]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	sub	ecx, eax
	mov	DWORD PTR _iAlarmEndAngle$16205[ebp], ecx
; Line 157
	mov	eax, DWORD PTR _iAlarmStartAngle$16204[ebp]
	cmp	eax, DWORD PTR _iAlarmEndAngle$16205[ebp]
	jle	SHORT $LN24@CreateGaug
; Line 161
	mov	eax, DWORD PTR _iAlarmStartAngle$16204[ebp]
	mov	DWORD PTR _temp$16206[ebp], eax
; Line 162
	mov	eax, DWORD PTR _iAlarmEndAngle$16205[ebp]
	mov	DWORD PTR _iAlarmStartAngle$16204[ebp], eax
; Line 163
	mov	eax, DWORD PTR _temp$16206[ebp]
	mov	DWORD PTR _iAlarmEndAngle$16205[ebp], eax
$LN24@CreateGaug:
; Line 170
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	shl	ecx, 1
	mov	DWORD PTR tv783[ebp], ecx
	fild	DWORD PTR tv783[ebp]
	fdiv	QWORD PTR __real@4071000000000000
	fstp	DWORD PTR _kmcMag$16208[ebp]
; Line 173
	fld	DWORD PTR _Mag$[ebp]
	fdiv	DWORD PTR __real@447a0000
	fmul	DWORD PTR __real@41100000
	call	__ftol2_sse
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 174
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	mov	ecx, DWORD PTR [eax+16]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 175
	fld	DWORD PTR __real@42c20000
	fmul	DWORD PTR _kmcMag$16208[ebp]
	fld	DWORD PTR _Mag$[ebp]
	fdiv	DWORD PTR __real@447a0000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	mov	DWORD PTR _iArcRadius$16207[ebp], eax
; Line 176
	mov	eax, DWORD PTR _iAlarmEndAngle$16205[ebp]
	push	eax
	mov	ecx, DWORD PTR _iAlarmStartAngle$16204[ebp]
	push	ecx
	mov	edx, DWORD PTR _iArcRadius$16207[ebp]
	push	edx
	mov	eax, DWORD PTR _iArcRadius$16207[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_GUI_DrawArc
	add	esp, 24					; 00000018H
; Line 179
	fld	DWORD PTR _Mag$[ebp]
	fdiv	DWORD PTR __real@447a0000
	fmul	DWORD PTR __real@41c80000
	call	__ftol2_sse
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 180
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	mov	ecx, DWORD PTR [eax+12]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 181
	mov	eax, DWORD PTR _iAlarmEndAngle$16205[ebp]
	push	eax
	mov	ecx, DWORD PTR _iAlarmStartAngle$16204[ebp]
	push	ecx
	mov	edx, DWORD PTR _iArcRadius$16207[ebp]
	sub	edx, 17					; 00000011H
	push	edx
	mov	eax, DWORD PTR _iArcRadius$16207[ebp]
	sub	eax, 17					; 00000011H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	call	_GUI_DrawArc
	add	esp, 24					; 00000018H
$LN25@CreateGaug:
; Line 183
	mov	eax, DWORD PTR _pAlarm$16203[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pAlarm$16203[ebp], ecx
; Line 184
	jmp	$LN27@CreateGaug
$LN26@CreateGaug:
; Line 185
	push	1
	call	_GUI_SetPenSize
	add	esp, 4
; Line 186
	mov	eax, DWORD PTR _OldColor$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
$LN28@CreateGaug:
; Line 191
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	fsub	DWORD PTR [ecx+72]
	fstp	DWORD PTR _range$[ebp]
; Line 194
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _range$[ebp]
	fdiv	DWORD PTR [eax+108]
	fadd	QWORD PTR __real@3fe0000218def417
	call	__ftol2_sse
	mov	DWORD PTR _TicCount$[ebp], eax
; Line 195
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+104]
	fdiv	DWORD PTR [ecx+108]
	call	__ftol2_sse
	mov	DWORD PTR _MinorTicCount$[ebp], eax
; Line 198
	push	OFFSET _GUI_Font24B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 200
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN23@CreateGaug
$LN22@CreateGaug:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN23@CreateGaug:
	mov	eax, DWORD PTR _TicCount$[ebp]
	add	eax, 1
	cmp	DWORD PTR _i$[ebp], eax
	jge	$LN21@CreateGaug
; Line 202
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+136]
	fild	DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [ecx+108]
	call	__ftol2_sse
	mov	DWORD PTR tv857[ebp], eax
	fild	DWORD PTR tv857[ebp]
	fmul	DWORD PTR _dValuePerDeg$[ebp]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _angle$[ebp]
; Line 204
	fld	DWORD PTR _angle$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 206
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 207
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 209
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _MinorTicCount$[ebp]
	test	edx, edx
	jne	SHORT $LN20@CreateGaug
; Line 211
	push	3
	call	_GUI_SetPenSize
	add	esp, 4
; Line 212
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	fmul	QWORD PTR __real@3fb999999999999a
	call	__ftol2_sse
	mov	DWORD PTR _TicLength$[ebp], eax
; Line 213
	cmp	DWORD PTR _TicLength$[ebp], 15		; 0000000fH
	jge	SHORT $LN19@CreateGaug
; Line 214
	mov	DWORD PTR _TicLength$[ebp], 15		; 0000000fH
$LN19@CreateGaug:
; Line 216
	jmp	SHORT $LN17@CreateGaug
$LN20@CreateGaug:
; Line 218
	push	1
	call	_GUI_SetPenSize
	add	esp, 4
; Line 219
	fild	DWORD PTR _radius$[ebp]
	fmul	QWORD PTR __real@3fb1eb851eb851ec
	call	__ftol2_sse
	mov	DWORD PTR _TicLength$[ebp], eax
; Line 220
	cmp	DWORD PTR _TicLength$[ebp], 12		; 0000000cH
	jge	SHORT $LN17@CreateGaug
; Line 221
	mov	DWORD PTR _TicLength$[ebp], 12		; 0000000cH
$LN17@CreateGaug:
; Line 224
	fild	DWORD PTR _radius$[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+120]
	mov	DWORD PTR _x1$[ebp], eax
; Line 225
	fild	DWORD PTR _radius$[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+124]
	mov	DWORD PTR _y1$[ebp], eax
; Line 226
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR tv891[ebp], eax
	fild	DWORD PTR tv891[ebp]
	fmul	DWORD PTR _dCos$[ebp]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+120]
	mov	DWORD PTR _x2$[ebp], eax
; Line 227
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, DWORD PTR _TicLength$[ebp]
	mov	DWORD PTR tv899[ebp], eax
	fild	DWORD PTR tv899[ebp]
	fmul	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+124]
	mov	DWORD PTR _y2$[ebp], eax
; Line 229
	call	_GUI_GetPenSize
	movzx	eax, al
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 230
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 231
	mov	eax, DWORD PTR _iTemp$[ebp]
	add	eax, 2
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 232
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 233
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 234
	movzx	eax, BYTE PTR _iTemp$[ebp]
	push	eax
	call	_GUI_SetPenSize
	add	esp, 4
; Line 235
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 237
	mov	eax, DWORD PTR _i$[ebp]
	cdq
	idiv	DWORD PTR _MinorTicCount$[ebp]
	test	edx, edx
	jne	$LN16@CreateGaug
; Line 239
	fild	DWORD PTR _i$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fmul	DWORD PTR [eax+108]
	mov	ecx, DWORD PTR _this$[ebp]
	fadd	DWORD PTR [ecx+72]
	call	__ftol2_sse
	mov	DWORD PTR _value$[ebp], eax
; Line 240
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _value$[ebp]
	cdq
	idiv	DWORD PTR [ecx+156]
	push	eax
	push	OFFSET $SG16238
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_sprintf
	add	esp, 12					; 0000000cH
; Line 241
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _txt_length$[ebp], eax
; Line 242
	call	_GUI_GetFontDistY
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 245
	fild	DWORD PTR _radius$[ebp]
	fisub	DWORD PTR _TicLength$[ebp]
	fild	DWORD PTR _radius$[ebp]
	fdiv	DWORD PTR __real@40c00000
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _dTemp$[ebp]
; Line 246
	fld	DWORD PTR _dCos$[ebp]
	fmul	DWORD PTR _dTemp$[ebp]
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+120]
	mov	DWORD PTR _x1$[ebp], eax
; Line 247
	fld	DWORD PTR _dSin$[ebp]
	fmul	DWORD PTR _dTemp$[ebp]
	fmul	DWORD PTR __real@bf800000
	call	__ftol2_sse
	mov	ecx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [ecx+124]
	mov	DWORD PTR _y1$[ebp], eax
; Line 250
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _x1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _x1$[ebp], ecx
; Line 251
	mov	eax, DWORD PTR _txt_height$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _y1$[ebp]
	sub	ecx, eax
	mov	DWORD PTR _y1$[ebp], ecx
; Line 253
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 254
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	add	ecx, 1
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 255
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 256
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
$LN16@CreateGaug:
; Line 258
	jmp	$LN22@CreateGaug
$LN21@CreateGaug:
; Line 261
	mov	eax, DWORD PTR _radius$[ebp]
	cdq
	mov	ecx, 20					; 00000014H
	idiv	ecx
	mov	DWORD PTR _iNeedleWidth$[ebp], eax
; Line 262
	cmp	DWORD PTR _iNeedleWidth$[ebp], 5
	jge	SHORT $LN15@CreateGaug
; Line 263
	mov	DWORD PTR _iNeedleWidth$[ebp], 5
$LN15@CreateGaug:
; Line 265
	cmp	DWORD PTR _iNeedleWidth$[ebp], 10	; 0000000aH
	jle	SHORT $LN14@CreateGaug
; Line 266
	mov	DWORD PTR _iNeedleWidth$[ebp], 10	; 0000000aH
$LN14@CreateGaug:
; Line 268
	mov	eax, DWORD PTR _radius$[ebp]
	imul	eax, -1
	cdq
	mov	ecx, 15					; 0000000fH
	idiv	ecx
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 269
	cmp	DWORD PTR _iTemp$[ebp], -10		; fffffff6H
	jle	SHORT $LN13@CreateGaug
	mov	DWORD PTR _iTemp$[ebp], -10		; fffffff6H
$LN13@CreateGaug:
; Line 271
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+188], ax
; Line 272
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _iTemp$[ebp]
	mov	WORD PTR [eax+190], cx
; Line 273
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+188]
	sub	ecx, DWORD PTR _iNeedleWidth$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+192], cx
; Line 274
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+194], ax
; Line 275
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+188]
	mov	eax, DWORD PTR _iNeedleWidth$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	sub	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+196], cx
; Line 276
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+198], ax
; Line 277
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+200], ax
; Line 278
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 15					; 0000000fH
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+202], ax
; Line 279
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+188]
	mov	eax, DWORD PTR _iNeedleWidth$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+204], cx
; Line 280
	mov	eax, DWORD PTR _radius$[ebp]
	sub	eax, 40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+206], ax
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+188]
	add	ecx, DWORD PTR _iNeedleWidth$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+208], cx
; Line 282
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+210], ax
; Line 284
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 286
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+161]
	cmp	ecx, 1
	jne	$LN12@CreateGaug
; Line 289
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	fstp	DWORD PTR _fMax$16251[ebp]
; Line 290
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@42c80000
	fcomp	DWORD PTR [eax+68]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN11@CreateGaug
; Line 291
	push	OFFSET $SG16254
	lea	eax, DWORD PTR _strPrecision$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN8@CreateGaug
$LN11@CreateGaug:
; Line 292
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@41200000
	fcomp	DWORD PTR [eax+68]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN9@CreateGaug
; Line 293
	push	OFFSET $SG16257
	lea	eax, DWORD PTR _strPrecision$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 294
	jmp	SHORT $LN8@CreateGaug
$LN9@CreateGaug:
; Line 295
	push	OFFSET $SG16259
	lea	eax, DWORD PTR _strPrecision$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN8@CreateGaug:
; Line 297
	fld	DWORD PTR _fMax$16251[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	eax, DWORD PTR _strPrecision$[ebp]
	push	eax
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 298
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR tv1042[ebp], eax
	fild	DWORD PTR tv1042[ebp]
	fmul	QWORD PTR __real@4004000000000000
	call	__ftol2_sse
	mov	DWORD PTR _txt_length$[ebp], eax
; Line 299
	call	_GUI_GetFontDistY
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _txt_length$[ebp]
	mov	DWORD PTR [eax+152], ecx
; Line 305
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+184], OFFSET _bmDefaultGauge
	jne	$LN7@CreateGaug
; Line 307
	mov	eax, DWORD PTR _radius$[ebp]
	shl	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	add	ecx, eax
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	sub	ecx, eax
	add	ecx, 20					; 00000014H
	mov	DWORD PTR _x1$[ebp], ecx
; Line 308
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	add	ecx, 12					; 0000000cH
	mov	DWORD PTR _y1$[ebp], ecx
; Line 309
	mov	eax, DWORD PTR _radius$[ebp]
	shl	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	add	ecx, eax
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	lea	edx, DWORD PTR [ecx+eax+20]
	mov	DWORD PTR _x2$[ebp], edx
; Line 310
	mov	eax, DWORD PTR _txt_height$[ebp]
	mov	ecx, DWORD PTR _y1$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _y2$[ebp], edx
; Line 312
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+240], ax
; Line 313
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+242], ax
; Line 314
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+244], ax
; Line 315
	mov	eax, DWORD PTR _y2$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+246], ax
; Line 317
	jmp	$LN6@CreateGaug
$LN7@CreateGaug:
; Line 319
	mov	eax, DWORD PTR _radius$[ebp]
	shl	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	add	ecx, eax
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	sub	ecx, eax
	sub	ecx, 10					; 0000000aH
	mov	DWORD PTR _x1$[ebp], ecx
; Line 320
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _y1$[ebp], ecx
; Line 321
	mov	eax, DWORD PTR _radius$[ebp]
	shl	eax, 1
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	add	ecx, eax
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	and	edx, 3
	add	eax, edx
	sar	eax, 2
	add	ecx, eax
	mov	DWORD PTR _x2$[ebp], ecx
; Line 322
	mov	eax, DWORD PTR _txt_height$[ebp]
	mov	ecx, DWORD PTR _y1$[ebp]
	lea	edx, DWORD PTR [ecx+eax+2]
	mov	DWORD PTR _y2$[ebp], edx
; Line 324
	mov	eax, DWORD PTR _x1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+240], ax
; Line 325
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+242], ax
; Line 326
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+244], ax
; Line 327
	mov	eax, DWORD PTR _y2$[ebp]
	sub	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+246], ax
$LN6@CreateGaug:
; Line 330
	push	5
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawRoundedRect
	add	esp, 20					; 00000014H
; Line 332
	mov	eax, DWORD PTR _x2$[ebp]
	sub	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+164], eax
; Line 333
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+168], eax
$LN12@CreateGaug:
; Line 337
	push	OFFSET _GUI_Font16B_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+156], 1
	jle	SHORT $LN5@CreateGaug
; Line 345
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+156]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+88]
	push	eax
	push	OFFSET $SG16264
	lea	ecx, DWORD PTR _str$[ebp]
	push	ecx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 347
	jmp	SHORT $LN4@CreateGaug
$LN5@CreateGaug:
; Line 349
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_strcpy
	add	esp, 8
$LN4@CreateGaug:
; Line 352
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _txt_length$[ebp], eax
; Line 353
	call	_GUI_GetFontDistY
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 354
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	sub	edx, eax
	mov	DWORD PTR _x2$[ebp], edx
; Line 355
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	edx, DWORD PTR _txt_height$[ebp]
	lea	eax, DWORD PTR [ecx+edx*2+4]
	mov	DWORD PTR _y2$[ebp], eax
; Line 357
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 360
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+160]
	test	ecx, ecx
	je	SHORT $LN3@CreateGaug
; Line 361
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	edx, DWORD PTR _txt_height$[ebp]
	lea	eax, DWORD PTR [ecx+edx+10]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+240]
	add	edx, 5
	push	edx
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
$LN3@CreateGaug:
; Line 363
	mov	eax, DWORD PTR _txt_height$[ebp]
	mov	DWORD PTR _iTemp$[ebp], eax
; Line 367
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	push	ecx
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _txt_length$[ebp], eax
; Line 368
	call	_GUI_GetFontDistY
	mov	DWORD PTR _txt_height$[ebp], eax
; Line 369
	mov	eax, DWORD PTR _txt_length$[ebp]
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+120]
	sub	edx, eax
	mov	DWORD PTR _x1$[ebp], edx
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+124]
	fild	DWORD PTR _txt_height$[ebp]
	fmul	QWORD PTR __real@3ffc000000000000
	fsubp	ST(1), ST(0)
	fsub	QWORD PTR __real@4000000000000000
	call	__ftol2_sse
	mov	DWORD PTR _y1$[ebp], eax
; Line 373
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+84], 0
	je	SHORT $LN2@CreateGaug
; Line 374
	mov	eax, DWORD PTR _y1$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+84]
	push	eax
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
$LN2@CreateGaug:
; Line 375
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+96]
	movzx	edx, BYTE PTR [ecx]
	test	edx, edx
	je	SHORT $LN1@CreateGaug
; Line 376
	push	170					; 000000aaH
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+96]
	push	eax
	call	_GUI_DispStringHCenterAt
	add	esp, 12					; 0000000cH
$LN1@CreateGaug:
; Line 378
	push	1
	call	_GUI_SetPenSize
	add	esp, 4
; Line 379
	call	_GUI_SelectLCD
; Line 380
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN36@CreateGaug
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 628				; 00000274H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN36@CreateGaug:
	DD	2
	DD	$LN35@CreateGaug
$LN35@CreateGaug:
	DD	-304					; fffffed0H
	DD	20					; 00000014H
	DD	$LN33@CreateGaug
	DD	-332					; fffffeb4H
	DD	20					; 00000014H
	DD	$LN34@CreateGaug
$LN34@CreateGaug:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	105					; 00000069H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	111					; 0000006fH
	DB	110					; 0000006eH
	DB	0
$LN33@CreateGaug:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?CreateGaugeBackground@Gauge@@AAEXXZ ENDP		; Gauge::CreateGaugeBackground
_TEXT	ENDS
PUBLIC	_cosf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cos@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?cos@@YAMM@Z PROC					; cos, COMDAT
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
; Line 512
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_cosf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?cos@@YAMM@Z ENDP					; cos
_TEXT	ENDS
EXTRN	_cos:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _cosf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_cosf	PROC						; COMDAT
; Line 410
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_cos
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_cosf	ENDP
_TEXT	ENDS
PUBLIC	_sinf
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sin@@YAMM@Z
_TEXT	SEGMENT
__X$ = 8						; size = 4
?sin@@YAMM@Z PROC					; sin, COMDAT
; Line 538
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	push	ecx
	fld	DWORD PTR __X$[ebp]
	fstp	DWORD PTR [esp]
	call	_sinf
	add	esp, 4
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sin@@YAMM@Z ENDP					; sin
_TEXT	ENDS
EXTRN	_sin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _sinf
_TEXT	SEGMENT
tv73 = -196						; size = 4
__X$ = 8						; size = 4
_sinf	PROC						; COMDAT
; Line 430
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	fld	DWORD PTR __X$[ebp]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	call	_sin
	add	esp, 8
	fstp	DWORD PTR tv73[ebp]
	fld	DWORD PTR tv73[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_sinf	ENDP
_TEXT	ENDS
PUBLIC	?SetValue@Gauge@@QAEXM@Z			; Gauge::SetValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?SetValue@Gauge@@QAEXM@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_dValue$ = 8						; size = 4
?SetValue@Gauge@@QAEXM@Z PROC				; Gauge::SetValue, COMDAT
; _this$ = ecx
; File c:\duii\duii\gauge.cpp
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 390
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dValue$[ebp]
	fstp	DWORD PTR [eax+180]
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetValue@Gauge@@QAEXM@Z ENDP				; Gauge::SetValue
_TEXT	ENDS
PUBLIC	?ShowDigital@Gauge@@QAEX_N@Z			; Gauge::ShowDigital
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?ShowDigital@Gauge@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Show$ = 8						; size = 1
?ShowDigital@Gauge@@QAEX_N@Z PROC			; Gauge::ShowDigital, COMDAT
; _this$ = ecx
; Line 400
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 401
	mov	eax, DWORD PTR _this$[ebp]
	mov	cl, BYTE PTR _Show$[ebp]
	mov	BYTE PTR [eax+161], cl
; Line 403
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CreateGaugeBackground@Gauge@@AAEXXZ	; Gauge::CreateGaugeBackground
; Line 404
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ShowDigital@Gauge@@QAEX_N@Z ENDP			; Gauge::ShowDigital
_TEXT	ENDS
PUBLIC	?GetValue@Gauge@@QAEMXZ				; Gauge::GetValue
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetValue@Gauge@@QAEMXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?GetValue@Gauge@@QAEMXZ PROC				; Gauge::GetValue, COMDAT
; _this$ = ecx
; Line 407
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 408
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+180]
; Line 409
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?GetValue@Gauge@@QAEMXZ ENDP				; Gauge::GetValue
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT ?SetPrecision@Gauge@@QAEXH@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_Precision$ = 8						; size = 4
?SetPrecision@Gauge@@QAEXH@Z PROC			; Gauge::SetPrecision, COMDAT
; _this$ = ecx
; Line 412
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 413
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _Precision$[ebp]
	mov	DWORD PTR [eax+148], ecx
; Line 414
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
?SetPrecision@Gauge@@QAEXH@Z ENDP			; Gauge::SetPrecision
_TEXT	ENDS
PUBLIC	?CommonDraw@Gauge@@AAEX_N@Z			; Gauge::CommonDraw
PUBLIC	?DrawControl@Gauge@@QAEXXZ			; Gauge::DrawControl
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawControl@Gauge@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DrawControl@Gauge@@QAEXXZ PROC				; Gauge::DrawControl, COMDAT
; _this$ = ecx
; Line 423
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 424
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommonDraw@Gauge@@AAEX_N@Z		; Gauge::CommonDraw
; Line 425
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawControl@Gauge@@QAEXXZ ENDP				; Gauge::DrawControl
_TEXT	ENDS
PUBLIC	?DrawToMemArea@Gauge@@QAEJXZ			; Gauge::DrawToMemArea
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?DrawToMemArea@Gauge@@QAEJXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?DrawToMemArea@Gauge@@QAEJXZ PROC			; Gauge::DrawToMemArea, COMDAT
; _this$ = ecx
; Line 428
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
; Line 429
	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	call	?CommonDraw@Gauge@@AAEX_N@Z		; Gauge::CommonDraw
; Line 430
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+212]
; Line 431
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?DrawToMemArea@Gauge@@QAEJXZ ENDP			; Gauge::DrawToMemArea
_TEXT	ENDS
PUBLIC	__real@bff0000000000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3fc999999999999a
PUBLIC	__$ArrayPad$
EXTRN	_GUI_FillCircle:PROC
EXTRN	_GUI_FillRoundedRect:PROC
EXTRN	_GUI_MEMDEV_Write:PROC
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fc999999999999a
CONST	SEGMENT
__real@3fc999999999999a DQ 03fc999999999999ar	; 0.2
; Function compile flags: /Odtp /RTCsu /ZI
CONST	ENDS
;	COMDAT ?CommonDraw@Gauge@@AAEX_N@Z
_TEXT	SEGMENT
_Color$16312 = -216					; size = 4
_BkColor$16311 = -204					; size = 4
_pAlarm$ = -192						; size = 4
_strFormat$ = -180					; size = 5
_str$ = -164						; size = 10
_txt_width$ = -144					; size = 4
_y2$ = -132						; size = 4
_x2$ = -120						; size = 4
_y1$ = -108						; size = 4
_x1$ = -96						; size = 4
_dVal$ = -84						; size = 4
_dCos$ = -72						; size = 4
_dSin$ = -60						; size = 4
_degrees$ = -48						; size = 4
_dValue$ = -36						; size = 4
_radians$ = -24						; size = 4
_this$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_toMemArea$ = 8						; size = 1
?CommonDraw@Gauge@@AAEX_N@Z PROC			; Gauge::CommonDraw, COMDAT
; _this$ = ecx
; Line 434
	push	ebp
	mov	ebp, esp
	sub	esp, 412				; 0000019cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-412]
	mov	ecx, 103				; 00000067H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx
; Line 441
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 443
	movzx	eax, BYTE PTR _toMemArea$[ebp]
	test	eax, eax
	je	SHORT $LN21@CommonDraw
; Line 444
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+212]
	push	ecx
	call	_GUI_MEMDEV_Select
	add	esp, 4
$LN21@CommonDraw:
; Line 447
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	push	ecx
	call	_GUI_MEMDEV_Write
	add	esp, 4
; Line 450
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, BYTE PTR [eax+161]
	cmp	ecx, 1
	jne	$LN20@CommonDraw
; Line 454
	push	OFFSET _GUI_Font20_ASCII
	call	_GUI_SetFont
	add	esp, 4
; Line 456
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@42c80000
	fcomp	DWORD PTR [eax+68]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN19@CommonDraw
; Line 457
	push	OFFSET $SG16314
	lea	eax, DWORD PTR _strFormat$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
	jmp	SHORT $LN16@CommonDraw
$LN19@CommonDraw:
; Line 458
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR __real@41200000
	fcomp	DWORD PTR [eax+68]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN17@CommonDraw
; Line 459
	push	OFFSET $SG16317
	lea	eax, DWORD PTR _strFormat$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
; Line 460
	jmp	SHORT $LN16@CommonDraw
$LN17@CommonDraw:
; Line 461
	push	OFFSET $SG16319
	lea	eax, DWORD PTR _strFormat$[ebp]
	push	eax
	call	_strcpy
	add	esp, 8
$LN16@CommonDraw:
; Line 463
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+180]
	sub	esp, 8
	fstp	QWORD PTR [esp]
	lea	ecx, DWORD PTR _strFormat$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_sprintf
	add	esp, 16					; 00000010H
; Line 464
	lea	eax, DWORD PTR _str$[ebp]
	push	eax
	call	_GUI_GetStringDistX
	add	esp, 4
	mov	DWORD PTR _txt_width$[ebp], eax
; Line 466
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+164]
	sub	ecx, DWORD PTR _txt_width$[ebp]
	mov	DWORD PTR _x1$[ebp], ecx
; Line 467
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+168]
	mov	DWORD PTR _y1$[ebp], ecx
; Line 469
	mov	DWORD PTR _BkColor$16311[ebp], 0
; Line 470
	mov	DWORD PTR _Color$16312[ebp], 16777215	; 00ffffffH
; Line 472
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+64], 0
	je	$LN13@CommonDraw
; Line 474
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+64]
	mov	DWORD PTR _pAlarm$[ebp], ecx
$LN14@CommonDraw:
; Line 475
	cmp	DWORD PTR _pAlarm$[ebp], 0
	je	$LN13@CommonDraw
; Line 477
	mov	eax, DWORD PTR _pAlarm$[ebp]
	movzx	ecx, BYTE PTR [eax]
	cmp	ecx, 1
	jne	$LN12@CommonDraw
; Line 479
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pAlarm$[ebp]
	fld	DWORD PTR [ecx+4]
	fcomp	DWORD PTR [eax+180]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jp	SHORT $LN9@CommonDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pAlarm$[ebp]
	fld	DWORD PTR [ecx+8]
	fcomp	DWORD PTR [eax+180]
	fnstsw	ax
	test	ah, 1
	je	SHORT $LN10@CommonDraw
$LN9@CommonDraw:
	mov	eax, DWORD PTR _pAlarm$[ebp]
	cmp	DWORD PTR [eax+20], 3
	jne	SHORT $LN8@CommonDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pAlarm$[ebp]
	fld	DWORD PTR [ecx+8]
	fcomp	DWORD PTR [eax+180]
	fnstsw	ax
	test	ah, 5
	jnp	SHORT $LN10@CommonDraw
$LN8@CommonDraw:
	mov	eax, DWORD PTR _pAlarm$[ebp]
	cmp	DWORD PTR [eax+20], 2
	jne	SHORT $LN11@CommonDraw
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pAlarm$[ebp]
	fld	DWORD PTR [ecx+4]
	fcomp	DWORD PTR [eax+180]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN11@CommonDraw
$LN10@CommonDraw:
; Line 482
	mov	eax, DWORD PTR _pAlarm$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _BkColor$16311[ebp], ecx
; Line 483
	mov	DWORD PTR _Color$16312[ebp], 0
; Line 484
	jmp	SHORT $LN13@CommonDraw
; Line 486
	jmp	SHORT $LN7@CommonDraw
$LN11@CommonDraw:
; Line 488
	mov	DWORD PTR _BkColor$16311[ebp], 0
; Line 489
	mov	DWORD PTR _Color$16312[ebp], 16777215	; 00ffffffH
$LN7@CommonDraw:
; Line 492
	jmp	SHORT $LN6@CommonDraw
$LN12@CommonDraw:
; Line 494
	mov	DWORD PTR _BkColor$16311[ebp], 0
; Line 495
	mov	DWORD PTR _Color$16312[ebp], 16777215	; 00ffffffH
$LN6@CommonDraw:
; Line 497
	mov	eax, DWORD PTR _pAlarm$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	mov	DWORD PTR _pAlarm$[ebp], ecx
; Line 498
	jmp	$LN14@CommonDraw
$LN13@CommonDraw:
; Line 500
	mov	eax, DWORD PTR _BkColor$16311[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 501
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+246]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	movsx	eax, WORD PTR [edx+244]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	movsx	edx, WORD PTR [ecx+242]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	movsx	ecx, WORD PTR [eax+240]
	push	ecx
	call	_GUI_FillRoundedRect
	add	esp, 20					; 00000014H
; Line 502
	mov	eax, DWORD PTR _Color$16312[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 503
	mov	eax, DWORD PTR _y1$[ebp]
	add	eax, 1
	push	eax
	mov	ecx, DWORD PTR _x1$[ebp]
	push	ecx
	lea	edx, DWORD PTR _str$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
$LN20@CommonDraw:
; Line 506
	push	16777215				; 00ffffffH
	call	_GUI_SetColor
	add	esp, 4
; Line 508
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+156]
	mov	ecx, DWORD PTR _this$[ebp]
	fdivr	DWORD PTR [ecx+180]
	fstp	DWORD PTR _dVal$[ebp]
; Line 511
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+72]
	fsub	DWORD PTR [ecx+108]
	fcomp	DWORD PTR _dVal$[ebp]
	fnstsw	ax
	test	ah, 65					; 00000041H
	jne	SHORT $LN5@CommonDraw
; Line 512
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+72]
	fsub	DWORD PTR [ecx+108]
	fstp	DWORD PTR _dValue$[ebp]
	jmp	SHORT $LN2@CommonDraw
$LN5@CommonDraw:
; Line 513
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	fadd	DWORD PTR [ecx+108]
	fcomp	DWORD PTR _dVal$[ebp]
	fnstsw	ax
	test	ah, 5
	jp	SHORT $LN3@CommonDraw
; Line 514
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+68]
	fadd	DWORD PTR [ecx+108]
	fstp	DWORD PTR _dValue$[ebp]
; Line 515
	jmp	SHORT $LN2@CommonDraw
$LN3@CommonDraw:
; Line 516
	mov	eax, DWORD PTR _this$[ebp]
	fld	DWORD PTR [eax+180]
	fstp	DWORD PTR _dValue$[ebp]
$LN2@CommonDraw:
; Line 518
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+136]
	mov	ecx, DWORD PTR _this$[ebp]
	fld	DWORD PTR _dValue$[ebp]
	fsub	DWORD PTR [ecx+72]
	mov	edx, DWORD PTR _this$[ebp]
	fdiv	DWORD PTR [edx+172]
	fsubp	ST(1), ST(0)
	fstp	DWORD PTR _degrees$[ebp]
; Line 519
	fld	DWORD PTR _degrees$[ebp]
	fmul	QWORD PTR __real@400921fb5444261e
	fdiv	QWORD PTR __real@4066800000000000
	fstp	DWORD PTR _radians$[ebp]
; Line 521
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?cos@@YAMM@Z				; cos
	add	esp, 4
	fstp	DWORD PTR _dCos$[ebp]
; Line 522
	push	ecx
	fld	DWORD PTR _radians$[ebp]
	fstp	DWORD PTR [esp]
	call	?sin@@YAMM@Z				; sin
	add	esp, 4
	fstp	DWORD PTR _dSin$[ebp]
; Line 524
	push	0
	call	_GUI_SetColor
	add	esp, 4
; Line 525
	push	6
	call	_GUI_SetPenSize
	add	esp, 4
; Line 526
	fld	DWORD PTR _dCos$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+128]
	fmul	QWORD PTR __real@3fc999999999999a
	fsubp	ST(1), ST(0)
	fadd	QWORD PTR __real@3ff0000000000000
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+120]
	mov	DWORD PTR _x1$[ebp], eax
; Line 527
	fld	DWORD PTR _dSin$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+128]
	fmul	QWORD PTR __real@3fc999999999999a
	fsubp	ST(1), ST(0)
	fadd	QWORD PTR __real@3ff0000000000000
	fmulp	ST(1), ST(0)
	fmul	QWORD PTR __real@bff0000000000000
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+124]
	mov	DWORD PTR _y1$[ebp], eax
; Line 528
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+120]
	mov	DWORD PTR _x2$[ebp], ecx
; Line 529
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	mov	DWORD PTR _y2$[ebp], ecx
; Line 530
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 532
	push	4
	call	_GUI_SetPenSize
	add	esp, 4
; Line 533
	push	255					; 000000ffH
	call	_GUI_SetColor
	add	esp, 4
; Line 534
	fld	DWORD PTR _dCos$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+128]
	fmul	QWORD PTR __real@3fc999999999999a
	fsubp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+120]
	mov	DWORD PTR _x1$[ebp], eax
; Line 535
	fld	DWORD PTR _dSin$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	fild	DWORD PTR [eax+128]
	mov	ecx, DWORD PTR _this$[ebp]
	fild	DWORD PTR [ecx+128]
	fmul	QWORD PTR __real@3fc999999999999a
	fsubp	ST(1), ST(0)
	fmulp	ST(1), ST(0)
	fmul	QWORD PTR __real@bff0000000000000
	call	__ftol2_sse
	mov	edx, DWORD PTR _this$[ebp]
	add	eax, DWORD PTR [edx+124]
	mov	DWORD PTR _y1$[ebp], eax
; Line 536
	mov	eax, DWORD PTR _y2$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x2$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y1$[ebp]
	push	edx
	mov	eax, DWORD PTR _x1$[ebp]
	push	eax
	call	_GUI_DrawLine
	add	esp, 16					; 00000010H
; Line 538
	push	13882323				; 00d3d3d3H
	call	_GUI_SetColor
	add	esp, 4
; Line 539
	push	5
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+120]
	push	eax
	call	_GUI_FillCircle
	add	esp, 12					; 0000000cH
; Line 541
	movzx	eax, BYTE PTR _toMemArea$[ebp]
	test	eax, eax
	je	SHORT $LN1@CommonDraw
; Line 542
	call	_GUI_SelectLCD
$LN1@CommonDraw:
; Line 543
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN27@CommonDraw
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 412				; 0000019cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	2
$LN27@CommonDraw:
	DD	2
	DD	$LN26@CommonDraw
$LN26@CommonDraw:
	DD	-164					; ffffff5cH
	DD	10					; 0000000aH
	DD	$LN24@CommonDraw
	DD	-180					; ffffff4cH
	DD	5
	DD	$LN25@CommonDraw
$LN25@CommonDraw:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	70					; 00000046H
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	0
$LN24@CommonDraw:
	DB	115					; 00000073H
	DB	116					; 00000074H
	DB	114					; 00000072H
	DB	0
?CommonDraw@Gauge@@AAEX_N@Z ENDP			; Gauge::CommonDraw
_TEXT	ENDS
END
