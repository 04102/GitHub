; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Widget\ICONVIEW.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_ICONVIEW__DefaultProps
EXTRN	_GUI_Font13_1:BYTE
_DATA	SEGMENT
_ICONVIEW__DefaultProps DD FLAT:_GUI_Font13_1
	DD	0ffffffH
	DD	0ff000000H
	DD	0c0c0c0H
	DD	0ffffffH
	DD	0ffffffH
	DD	0808080H
	DD	05H
	DD	05H
	DD	05H
	DD	05H
	DD	06H
$SG11169 DB	'ICONVIEW.c: Wrong handle type or Object not init''ed', 00H
_DATA	ENDS
PUBLIC	_ICONVIEW_LockH
EXTRN	_GUI_ErrorOut:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\widget\iconview.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _ICONVIEW_LockH
_TEXT	SEGMENT
_p$ = -8						; size = 4
_h$ = 8							; size = 4
_ICONVIEW_LockH PROC					; COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 129
	mov	eax, DWORD PTR _h$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _p$[ebp], eax
; Line 130
	cmp	DWORD PTR _p$[ebp], 0
	je	SHORT $LN2@ICONVIEW_L
; Line 131
	mov	eax, DWORD PTR _p$[ebp]
	cmp	DWORD PTR [eax+148], 1229147982		; 49434f4eH
	je	SHORT $LN2@ICONVIEW_L
; Line 132
	push	OFFSET $SG11169
	call	_GUI_ErrorOut
	add	esp, 4
; Line 133
	xor	eax, eax
	jmp	SHORT $LN3@ICONVIEW_L
$LN2@ICONVIEW_L:
; Line 136
	mov	eax, DWORD PTR _p$[ebp]
$LN3@ICONVIEW_L:
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_LockH ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ICONVIEW_Callback
EXTRN	_WM_NotifyParent:PROC
EXTRN	_WM_InvalidateWindow:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_WM_GetScrollbarH:PROC
EXTRN	_WM_GetScrollState:PROC
EXTRN	_WM_GetScrollbarV:PROC
EXTRN	_WIDGET_HandleActive:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_Callback
_TEXT	SEGMENT
tv80 = -244						; size = 4
tv69 = -244						; size = 4
_ScrollState$ = -44					; size = 12
_pObj$ = -24						; size = 4
_hObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_pMsg$ = 8						; size = 4
_ICONVIEW_Callback PROC					; COMDAT
; Line 591
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 595
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR _hObj$[ebp], ecx
; Line 597
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WIDGET_HandleActive
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN16@ICONVIEW_C
; Line 598
	jmp	$LN17@ICONVIEW_C
$LN16@ICONVIEW_C:
; Line 600
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv69[ebp], ecx
	mov	edx, DWORD PTR tv69[ebp]
	sub	edx, 11					; 0000000bH
	mov	DWORD PTR tv69[ebp], edx
	cmp	DWORD PTR tv69[ebp], 27			; 0000001bH
	ja	$LN17@ICONVIEW_C
	mov	eax, DWORD PTR tv69[ebp]
	movzx	ecx, BYTE PTR $LN19@ICONVIEW_C[eax]
	jmp	DWORD PTR $LN23@ICONVIEW_C[ecx*4]
$LN13@ICONVIEW_C:
; Line 602
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__OnDelete
	add	esp, 4
; Line 603
	jmp	$LN17@ICONVIEW_C
$LN12@ICONVIEW_C:
; Line 605
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnPaint
	add	esp, 8
; Line 606
	jmp	$LN17@ICONVIEW_C
$LN11@ICONVIEW_C:
; Line 608
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnTouch
	add	esp, 8
; Line 609
	jmp	$LN17@ICONVIEW_C
$LN10@ICONVIEW_C:
; Line 611
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnPidStateChange
	add	esp, 8
; Line 612
	jmp	$LN17@ICONVIEW_C
$LN9@ICONVIEW_C:
; Line 614
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__OnKey
	add	esp, 8
; Line 615
	jmp	$LN17@ICONVIEW_C
$LN8@ICONVIEW_C:
; Line 617
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR tv80[ebp], ecx
	cmp	DWORD PTR tv80[ebp], 5
	je	SHORT $LN5@ICONVIEW_C
	cmp	DWORD PTR tv80[ebp], 6
	je	$LN1@ICONVIEW_C
	jmp	$LN17@ICONVIEW_C
$LN5@ICONVIEW_C:
; Line 619
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 620
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN4@ICONVIEW_C
; Line 621
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 622
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+60], ecx
	jmp	SHORT $LN3@ICONVIEW_C
$LN4@ICONVIEW_C:
; Line 623
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarH
	add	esp, 4
	mov	ecx, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [ecx+8], eax
	jne	SHORT $LN3@ICONVIEW_C
; Line 624
	lea	eax, DWORD PTR _ScrollState$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pMsg$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	call	_WM_GetScrollState
	add	esp, 8
; Line 625
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ScrollState$[ebp+4]
	mov	DWORD PTR [eax+72], ecx
$LN3@ICONVIEW_C:
; Line 627
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 628
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
; Line 629
	push	10					; 0000000aH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 630
	jmp	SHORT $LN17@ICONVIEW_C
$LN1@ICONVIEW_C:
; Line 637
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
$LN17@ICONVIEW_C:
; Line 642
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN22@ICONVIEW_C
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN22@ICONVIEW_C:
	DD	1
	DD	$LN21@ICONVIEW_C
$LN21@ICONVIEW_C:
	DD	-44					; ffffffd4H
	DD	12					; 0000000cH
	DD	$LN20@ICONVIEW_C
$LN20@ICONVIEW_C:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	0
$LN23@ICONVIEW_C:
	DD	$LN13@ICONVIEW_C
	DD	$LN11@ICONVIEW_C
	DD	$LN9@ICONVIEW_C
	DD	$LN12@ICONVIEW_C
	DD	$LN10@ICONVIEW_C
	DD	$LN8@ICONVIEW_C
	DD	$LN17@ICONVIEW_C
$LN19@ICONVIEW_C:
	DB	0
	DB	1
	DB	6
	DB	2
	DB	3
	DB	6
	DB	4
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	6
	DB	5
_ICONVIEW_Callback ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WM__IsEnabled:PROC
EXTRN	_GUI_ARRAY_GetpItemLocked:PROC
EXTRN	_GUI_FillRect:PROC
EXTRN	_GUI_SetColor:PROC
EXTRN	_WM_GetFocussedWindow:PROC
EXTRN	_GUI_SetFont:PROC
EXTRN	_GUI_SetTextMode:PROC
EXTRN	_GUI_ARRAY_GetNumItems:PROC
EXTRN	_GUI_ClearRect:PROC
EXTRN	_GUI_SetBkColor:PROC
EXTRN	_WM_GetHasTrans:PROC
EXTRN	_GUI__IntersectRect:PROC
EXTRN	_WM_GetInsideRectExScrollbar:PROC
EXTRN	_GUI_MoveRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnPaint
_TEXT	SEGMENT
_ScrollStateV$ = -272					; size = 12
_pFont$ = -252						; size = 4
_ItemArray$ = -240					; size = 4
_aTextColor$ = -228					; size = 12
_BkColor_SEL$ = -208					; size = 4
_BkColor_BK$ = -196					; size = 4
_i$ = -184						; size = 4
_Sel$ = -172						; size = 4
_pfDrawImage$ = -160					; size = 4
_pData$ = -148						; size = 4
_pItem$ = -136						; size = 4
_RectWin$ = -124					; size = 8
_ClipRect$ = -108					; size = 8
_RectItem$ = -92					; size = 8
_RectInside$ = -76					; size = 8
_ItemsPerLine$ = -60					; size = 4
_ItemIndex$ = -48					; size = 4
_ColorIndex$ = -36					; size = 4
_NumItems$ = -24					; size = 4
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnPaint PROC						; COMDAT
; Line 223
	push	ebp
	mov	ebp, esp
	sub	esp, 468				; 000001d4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-468]
	mov	ecx, 117				; 00000075H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 238
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 239
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 240
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _BkColor_BK$[ebp], ecx
; Line 241
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+88]
	mov	DWORD PTR _BkColor_SEL$[ebp], ecx
; Line 242
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 243
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _RectWin$[ebp], ecx
	mov	DWORD PTR _RectWin$[ebp+4], edx
; Line 244
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	DWORD PTR _pFont$[ebp], ecx
; Line 245
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 246
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN18@OnPaint
$LN17@OnPaint:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN18@OnPaint:
	cmp	DWORD PTR _i$[ebp], 3
	jae	SHORT $LN16@OnPaint
; Line 247
	mov	eax, DWORD PTR _i$[ebp]
	mov	ecx, DWORD PTR _i$[ebp]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+ecx*4+96]
	mov	DWORD PTR _aTextColor$[ebp+eax*4], ecx
; Line 248
	jmp	SHORT $LN17@OnPaint
$LN16@OnPaint:
; Line 249
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 252
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR _ClipRect$[ebp], edx
	mov	DWORD PTR _ClipRect$[ebp+4], eax
; Line 253
	movsx	eax, WORD PTR _RectWin$[ebp+2]
	neg	eax
	push	eax
	movsx	ecx, WORD PTR _RectWin$[ebp]
	neg	ecx
	push	ecx
	lea	edx, DWORD PTR _ClipRect$[ebp]
	push	edx
	call	_GUI_MoveRect
	add	esp, 12					; 0000000cH
; Line 254
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 255
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ClipRect$[ebp]
	push	ecx
	call	_GUI__IntersectRect
	add	esp, 8
; Line 257
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetHasTrans
	add	esp, 4
	test	eax, eax
	jne	SHORT $LN15@OnPaint
; Line 258
	mov	eax, DWORD PTR _BkColor_BK$[ebp]
	push	eax
	call	_GUI_SetBkColor
	add	esp, 4
; Line 259
	movsx	eax, WORD PTR _ClipRect$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _ClipRect$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _ClipRect$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _ClipRect$[ebp]
	push	eax
	call	_GUI_ClearRect
	add	esp, 16					; 00000010H
$LN15@OnPaint:
; Line 263
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 264
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumItemsPerLine
	add	esp, 4
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 265
	push	2
	call	_GUI_SetTextMode
	add	esp, 4
; Line 266
	mov	eax, DWORD PTR _pFont$[ebp]
	push	eax
	call	_GUI_SetFont
	add	esp, 4
; Line 267
	mov	eax, DWORD PTR _ScrollStateV$[ebp+4]
	imul	eax, DWORD PTR _ItemsPerLine$[ebp]
	mov	DWORD PTR _ItemIndex$[ebp], eax
$LN14@OnPaint:
; Line 268
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	$LN19@OnPaint
; Line 269
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetRelRectFromIndex
	add	esp, 12					; 0000000cH
; Line 270
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	movsx	ecx, WORD PTR _ClipRect$[ebp+6]
	cmp	eax, ecx
	jle	SHORT $LN12@OnPaint
; Line 271
	jmp	$LN19@OnPaint
$LN12@OnPaint:
; Line 276
	movsx	eax, WORD PTR _RectItem$[ebp+6]
	movsx	ecx, WORD PTR _ClipRect$[ebp+2]
	cmp	eax, ecx
	jl	$LN11@OnPaint
	movsx	eax, WORD PTR _RectItem$[ebp+2]
	movsx	ecx, WORD PTR _ClipRect$[ebp+6]
	cmp	eax, ecx
	jg	$LN11@OnPaint
	movsx	eax, WORD PTR _RectItem$[ebp+4]
	movsx	ecx, WORD PTR _ClipRect$[ebp]
	cmp	eax, ecx
	jl	$LN11@OnPaint
	movsx	eax, WORD PTR _RectItem$[ebp]
	movsx	ecx, WORD PTR _ClipRect$[ebp+4]
	cmp	eax, ecx
	jg	$LN11@OnPaint
; Line 278
	call	_WM_GetFocussedWindow
	cmp	eax, DWORD PTR _hObj$[ebp]
	jne	SHORT $LN10@OnPaint
; Line 279
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _ItemIndex$[ebp]
	jne	SHORT $LN10@OnPaint
; Line 280
	mov	eax, DWORD PTR _BkColor_SEL$[ebp]
	and	eax, -16777216				; ff000000H
	je	SHORT $LN8@OnPaint
; Line 281
	mov	eax, DWORD PTR _BkColor_SEL$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectItem$[ebp]
	push	ecx
	call	__LightRect
	add	esp, 8
; Line 282
	jmp	SHORT $LN10@OnPaint
$LN8@OnPaint:
; Line 283
	mov	eax, DWORD PTR _BkColor_SEL$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 284
	movsx	eax, WORD PTR _RectItem$[ebp+6]
	push	eax
	movsx	ecx, WORD PTR _RectItem$[ebp+4]
	push	ecx
	movsx	edx, WORD PTR _RectItem$[ebp+2]
	push	edx
	movsx	eax, WORD PTR _RectItem$[ebp]
	push	eax
	call	_GUI_FillRect
	add	esp, 16					; 00000010H
$LN10@OnPaint:
; Line 289
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 291
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@OnPaint
; Line 292
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _pData$[ebp], ecx
; Line 293
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _pfDrawImage$[ebp], ecx
; Line 294
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 295
	mov	esi, esp
	mov	eax, DWORD PTR _pData$[ebp]
	push	eax
	lea	ecx, DWORD PTR _RectItem$[ebp]
	push	ecx
	call	DWORD PTR _pfDrawImage$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 296
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
$LN6@OnPaint:
; Line 299
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM__IsEnabled
	add	esp, 4
	test	eax, eax
	je	SHORT $LN5@OnPaint
; Line 300
	mov	eax, DWORD PTR _Sel$[ebp]
	cmp	eax, DWORD PTR _ItemIndex$[ebp]
	jne	SHORT $LN4@OnPaint
; Line 301
	mov	DWORD PTR _ColorIndex$[ebp], 1
; Line 302
	jmp	SHORT $LN3@OnPaint
$LN4@OnPaint:
; Line 303
	mov	DWORD PTR _ColorIndex$[ebp], 0
$LN3@OnPaint:
; Line 305
	jmp	SHORT $LN2@OnPaint
$LN5@OnPaint:
; Line 306
	mov	DWORD PTR _ColorIndex$[ebp], 2
$LN2@OnPaint:
; Line 308
	mov	eax, DWORD PTR _ColorIndex$[ebp]
	mov	ecx, DWORD PTR _aTextColor$[ebp+eax*4]
	push	ecx
	call	_GUI_SetColor
	add	esp, 4
; Line 310
	mov	eax, DWORD PTR _pItem$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@OnPaint
; Line 311
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 312
	mov	eax, DWORD PTR _pItem$[ebp]
	add	eax, 16					; 00000010H
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _RectItem$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	push	edx
	mov	eax, DWORD PTR _pItem$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	call	ecx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 313
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@OnPaint:
; Line 315
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
$LN11@OnPaint:
; Line 317
	mov	eax, DWORD PTR _ItemIndex$[ebp]
	add	eax, 1
	mov	DWORD PTR _ItemIndex$[ebp], eax
; Line 318
	jmp	$LN14@OnPaint
$LN19@OnPaint:
; Line 319
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN28@OnPaint
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 468				; 000001d4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN28@OnPaint:
	DD	6
	DD	$LN27@OnPaint
$LN27@OnPaint:
	DD	-76					; ffffffb4H
	DD	8
	DD	$LN21@OnPaint
	DD	-92					; ffffffa4H
	DD	8
	DD	$LN22@OnPaint
	DD	-108					; ffffff94H
	DD	8
	DD	$LN23@OnPaint
	DD	-124					; ffffff84H
	DD	8
	DD	$LN24@OnPaint
	DD	-228					; ffffff1cH
	DD	12					; 0000000cH
	DD	$LN25@OnPaint
	DD	-272					; fffffef0H
	DD	12					; 0000000cH
	DD	$LN26@OnPaint
$LN26@OnPaint:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
$LN25@OnPaint:
	DB	97					; 00000061H
	DB	84					; 00000054H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	116					; 00000074H
	DB	67					; 00000043H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	0
$LN24@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	87					; 00000057H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	0
$LN23@OnPaint:
	DB	67					; 00000043H
	DB	108					; 0000006cH
	DB	105					; 00000069H
	DB	112					; 00000070H
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN22@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
$LN21@OnPaint:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__OnPaint ENDP
_TEXT	ENDS
EXTRN	_GUI_FillRectEx:PROC
EXTRN	_GUI_SetAlpha:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __LightRect
_TEXT	SEGMENT
_Alpha$ = -17						; size = 1
_Color$ = -8						; size = 4
_pRectItem$ = 8						; size = 4
_AlphaColor$ = 12					; size = 4
__LightRect PROC					; COMDAT
; Line 144
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 147
	mov	eax, DWORD PTR _AlphaColor$[ebp]
	and	eax, 16777215				; 00ffffffH
	mov	DWORD PTR _Color$[ebp], eax
; Line 148
	mov	eax, DWORD PTR _AlphaColor$[ebp]
	shr	eax, 24					; 00000018H
	mov	BYTE PTR _Alpha$[ebp], al
; Line 149
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	_GUI_SetColor
	add	esp, 4
; Line 150
	movzx	eax, BYTE PTR _Alpha$[ebp]
	push	eax
	call	_GUI_SetAlpha
	add	esp, 4
; Line 151
	mov	eax, DWORD PTR _pRectItem$[ebp]
	push	eax
	call	_GUI_FillRectEx
	add	esp, 4
; Line 152
	push	0
	call	_GUI_SetAlpha
	add	esp, 4
; Line 153
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__LightRect ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumItemsPerLine
_TEXT	SEGMENT
_ItemsPerLine$ = -36					; size = 4
_RectInside$ = -24					; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__GetNumItemsPerLine PROC				; COMDAT
; Line 159
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 163
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 164
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 165
	movsx	eax, WORD PTR _RectInside$[ebp+4]
	movsx	ecx, WORD PTR _RectInside$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	lea	eax, DWORD PTR [eax+ecx+1]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+116]
	cdq
	idiv	ecx
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 166
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 167
	mov	eax, DWORD PTR _ItemsPerLine$[ebp]
; Line 168
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetNumItem
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GetNumItem:
	DD	1
	DD	$LN4@GetNumItem
$LN4@GetNumItem:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@GetNumItem
$LN3@GetNumItem:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__GetNumItemsPerLine ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetRelRectFromIndex
_TEXT	SEGMENT
_Col$ = -60						; size = 4
_Row$ = -48						; size = 4
_ItemsPerLine$ = -36					; size = 4
_RectInside$ = -24					; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
_Index$ = 16						; size = 4
__GetRelRectFromIndex PROC				; COMDAT
; Line 202
	push	ebp
	mov	ebp, esp
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-256]
	mov	ecx, 64					; 00000040H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 207
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 208
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumItemsPerLine
	add	esp, 4
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 209
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 210
	mov	eax, DWORD PTR _Index$[ebp]
	cdq
	idiv	DWORD PTR _ItemsPerLine$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	sub	eax, DWORD PTR [ecx+60]
	mov	DWORD PTR _Row$[ebp], eax
; Line 211
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Row$[ebp]
	add	ecx, DWORD PTR [eax+60]
	imul	ecx, DWORD PTR _ItemsPerLine$[ebp]
	mov	edx, DWORD PTR _Index$[ebp]
	sub	edx, ecx
	mov	DWORD PTR _Col$[ebp], edx
; Line 212
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+132]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+116]
	imul	ecx, DWORD PTR _Col$[ebp]
	mov	eax, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx], cx
; Line 213
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+136]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+120]
	imul	ecx, DWORD PTR _Row$[ebp]
	mov	eax, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+2], cx
; Line 214
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+132]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+4], cx
; Line 215
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [edx+136]
	lea	ecx, DWORD PTR [ecx+eax-1]
	mov	edx, DWORD PTR _pRect$[ebp]
	mov	WORD PTR [edx+6], cx
; Line 216
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 217
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetRelRect
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 256				; 00000100H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@GetRelRect:
	DD	1
	DD	$LN4@GetRelRect
$LN4@GetRelRect:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN3@GetRelRect
$LN3@GetRelRect:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__GetRelRectFromIndex ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_WM_SetScrollState:PROC
EXTRN	_WM_GetDialogItem:PROC
EXTRN	_WM_SetScrollbarV:PROC
_BSS	SEGMENT
?IsActive@?1??_ManageAutoScroll@@9@9 DD 01H DUP (?)	; `_ManageAutoScroll'::`2'::IsActive
; Function compile flags: /Odtp /RTCsu /ZI
_BSS	ENDS
;	COMDAT __ManageAutoScroll
_TEXT	SEGMENT
_hScroll$11293 = -120					; size = 4
_hWin$11289 = -108					; size = 4
_Flags$ = -96						; size = 2
_NumVisLines$ = -84					; size = 4
_NumLines$ = -72					; size = 4
_IsRequiredV$ = -60					; size = 4
_Rect$ = -48						; size = 8
_ScrollStateV$ = -32					; size = 12
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
__ManageAutoScroll PROC					; COMDAT
; Line 325
	push	ebp
	mov	ebp, esp
	sub	esp, 316				; 0000013cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-316]
	mov	ecx, 79					; 0000004fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 334
	cmp	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 0
	jne	$LN8@ManageAuto
; Line 335
	mov	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 1
; Line 336
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 337
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumLines
	add	esp, 8
	mov	DWORD PTR _NumLines$[ebp], eax
; Line 338
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumVisLines
	add	esp, 8
	mov	DWORD PTR _NumVisLines$[ebp], eax
; Line 339
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _ScrollStateV$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _ScrollStateV$[ebp+4], edx
	mov	eax, DWORD PTR [eax+8]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 340
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR [eax+144]
	mov	WORD PTR _Flags$[ebp], cx
; Line 341
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 342
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 346
	mov	eax, DWORD PTR _NumLines$[ebp]
	xor	ecx, ecx
	cmp	eax, DWORD PTR _NumVisLines$[ebp]
	setg	cl
	mov	DWORD PTR _IsRequiredV$[ebp], ecx
; Line 347
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	je	SHORT $LN7@ManageAuto
; Line 348
	mov	eax, DWORD PTR _NumLines$[ebp]
	mov	DWORD PTR _ScrollStateV$[ebp], eax
; Line 349
	mov	eax, DWORD PTR _NumVisLines$[ebp]
	mov	DWORD PTR _ScrollStateV$[ebp+8], eax
; Line 350
	jmp	SHORT $LN6@ManageAuto
$LN7@ManageAuto:
; Line 351
	mov	DWORD PTR _ScrollStateV$[ebp+4], 0
$LN6@ManageAuto:
; Line 353
	movzx	eax, WORD PTR _Flags$[ebp]
	and	eax, 2
	je	SHORT $LN5@ManageAuto
; Line 354
	mov	eax, DWORD PTR _IsRequiredV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_SetScrollbarV
	add	esp, 8
; Line 355
	jmp	SHORT $LN4@ManageAuto
$LN5@ManageAuto:
; Line 357
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetScrollbarV
	add	esp, 4
	mov	DWORD PTR _hWin$11289[ebp], eax
; Line 358
	cmp	DWORD PTR _hWin$11289[ebp], 0
	je	SHORT $LN4@ManageAuto
; Line 359
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	jne	SHORT $LN4@ManageAuto
; Line 360
	mov	DWORD PTR _ScrollStateV$[ebp], 1
; Line 361
	mov	DWORD PTR _ScrollStateV$[ebp+8], 1
; Line 362
	mov	DWORD PTR _IsRequiredV$[ebp], 1
$LN4@ManageAuto:
; Line 369
	cmp	DWORD PTR _IsRequiredV$[ebp], 0
	je	SHORT $LN1@ManageAuto
; Line 371
	push	254					; 000000feH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hScroll$11293[ebp], eax
; Line 372
	lea	eax, DWORD PTR _ScrollStateV$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hScroll$11293[ebp]
	push	ecx
	call	_WM_SetScrollState
	add	esp, 8
$LN1@ManageAuto:
; Line 374
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 375
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	mov	ecx, DWORD PTR _ScrollStateV$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _ScrollStateV$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _ScrollStateV$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
; Line 376
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN8@ManageAuto:
; Line 378
	mov	DWORD PTR ?IsActive@?1??_ManageAutoScroll@@9@9, 0
; Line 379
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN14@ManageAuto
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 316				; 0000013cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN14@ManageAuto:
	DD	2
	DD	$LN13@ManageAuto
$LN13@ManageAuto:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN11@ManageAuto
	DD	-48					; ffffffd0H
	DD	8
	DD	$LN12@ManageAuto
$LN12@ManageAuto:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
$LN11@ManageAuto:
	DB	83					; 00000053H
	DB	99					; 00000063H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	108					; 0000006cH
	DB	108					; 0000006cH
	DB	83					; 00000053H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	86					; 00000056H
	DB	0
__ManageAutoScroll ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumLines
_TEXT	SEGMENT
_NumItems$ = -48					; size = 4
_NumLines$ = -36					; size = 4
_ItemsPerLine$ = -24					; size = 4
_RectInside$ = -12					; size = 8
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__GetNumLines PROC					; COMDAT
; Line 174
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 179
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 180
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumItemsPerLine
	add	esp, 4
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 181
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 182
	mov	eax, DWORD PTR _ItemsPerLine$[ebp]
	mov	ecx, DWORD PTR _NumItems$[ebp]
	lea	eax, DWORD PTR [ecx+eax-1]
	cdq
	idiv	DWORD PTR _ItemsPerLine$[ebp]
	mov	DWORD PTR _NumLines$[ebp], eax
; Line 183
	mov	eax, DWORD PTR _NumLines$[ebp]
; Line 184
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetNumLine
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@GetNumLine:
	DD	1
	DD	$LN4@GetNumLine
$LN4@GetNumLine:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetNumLine
$LN3@GetNumLine:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__GetNumLines ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetNumVisLines
_TEXT	SEGMENT
_NumVisLines$ = -24					; size = 4
_RectInside$ = -12					; size = 8
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__GetNumVisLines PROC					; COMDAT
; Line 190
	push	ebp
	mov	ebp, esp
	sub	esp, 220				; 000000dcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-220]
	mov	ecx, 55					; 00000037H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 193
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 194
	movsx	eax, WORD PTR _RectInside$[ebp+6]
	movsx	ecx, WORD PTR _RectInside$[ebp+2]
	sub	eax, ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+120]
	lea	eax, DWORD PTR [eax+ecx+1]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+136]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+120]
	cdq
	idiv	ecx
	mov	DWORD PTR _NumVisLines$[ebp], eax
; Line 195
	mov	eax, DWORD PTR _NumVisLines$[ebp]
; Line 196
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetNumVisL
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 220				; 000000dcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@GetNumVisL:
	DD	1
	DD	$LN4@GetNumVisL
$LN4@GetNumVisL:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@GetNumVisL
$LN3@GetNumVisL:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
__GetNumVisLines ENDP
_TEXT	ENDS
EXTRN	_WM_DefaultProc:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnKey
_TEXT	SEGMENT
tv86 = -296						; size = 4
_RectInside$ = -96					; size = 8
_ItemsPerLine$ = -80					; size = 4
_NumItems$ = -68					; size = 4
_Key$ = -56						; size = 4
_SelNew$ = -44						; size = 4
_SelOld$ = -32						; size = 4
_pInfo$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnKey	PROC						; COMDAT
; Line 435
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 440
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pInfo$[ebp], ecx
; Line 441
	mov	eax, DWORD PTR _pInfo$[ebp]
	cmp	DWORD PTR [eax+4], 0
	jne	SHORT $LN16@OnKey
; Line 442
	jmp	$LN17@OnKey
$LN16@OnKey:
; Line 444
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 445
	lea	eax, DWORD PTR _RectInside$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_GetInsideRectExScrollbar
	add	esp, 8
; Line 446
	movsx	eax, WORD PTR _RectInside$[ebp+4]
	movsx	ecx, WORD PTR _RectInside$[ebp]
	sub	eax, ecx
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+116]
	lea	eax, DWORD PTR [eax+ecx+1]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [edx+132]
	mov	edx, DWORD PTR _pObj$[ebp]
	add	ecx, DWORD PTR [edx+116]
	cdq
	idiv	ecx
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 447
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 448
	mov	eax, DWORD PTR _pInfo$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Key$[ebp], ecx
; Line 449
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _SelNew$[ebp], ecx
	mov	edx, DWORD PTR _SelNew$[ebp]
	mov	DWORD PTR _SelOld$[ebp], edx
; Line 450
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 451
	cmp	DWORD PTR _SelOld$[ebp], 0
	jge	SHORT $LN15@OnKey
; Line 452
	mov	DWORD PTR _SelOld$[ebp], 0
$LN15@OnKey:
; Line 454
	mov	eax, DWORD PTR _Key$[ebp]
	mov	DWORD PTR tv86[ebp], eax
	mov	ecx, DWORD PTR tv86[ebp]
	sub	ecx, 16					; 00000010H
	mov	DWORD PTR tv86[ebp], ecx
	cmp	DWORD PTR tv86[ebp], 8
	ja	SHORT $LN2@OnKey
	mov	edx, DWORD PTR tv86[ebp]
	jmp	DWORD PTR $LN22@OnKey[edx*4]
$LN12@OnKey:
; Line 456
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _SelOld$[ebp], eax
	jge	SHORT $LN11@OnKey
; Line 457
	mov	eax, DWORD PTR _SelOld$[ebp]
	add	eax, 1
	mov	DWORD PTR _SelNew$[ebp], eax
$LN11@OnKey:
; Line 459
	jmp	SHORT $LN13@OnKey
$LN10@OnKey:
; Line 461
	cmp	DWORD PTR _SelOld$[ebp], 0
	jle	SHORT $LN9@OnKey
; Line 462
	mov	eax, DWORD PTR _SelOld$[ebp]
	sub	eax, 1
	mov	DWORD PTR _SelNew$[ebp], eax
$LN9@OnKey:
; Line 464
	jmp	SHORT $LN13@OnKey
$LN8@OnKey:
; Line 466
	mov	eax, DWORD PTR _SelOld$[ebp]
	add	eax, DWORD PTR _ItemsPerLine$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jge	SHORT $LN7@OnKey
; Line 467
	mov	eax, DWORD PTR _SelOld$[ebp]
	add	eax, DWORD PTR _ItemsPerLine$[ebp]
	mov	DWORD PTR _SelNew$[ebp], eax
$LN7@OnKey:
; Line 469
	jmp	SHORT $LN13@OnKey
$LN6@OnKey:
; Line 471
	mov	eax, DWORD PTR _SelOld$[ebp]
	cmp	eax, DWORD PTR _ItemsPerLine$[ebp]
	jl	SHORT $LN5@OnKey
; Line 472
	mov	eax, DWORD PTR _SelOld$[ebp]
	sub	eax, DWORD PTR _ItemsPerLine$[ebp]
	mov	DWORD PTR _SelNew$[ebp], eax
$LN5@OnKey:
; Line 474
	jmp	SHORT $LN13@OnKey
$LN4@OnKey:
; Line 476
	mov	DWORD PTR _SelNew$[ebp], 0
; Line 477
	jmp	SHORT $LN13@OnKey
$LN3@OnKey:
; Line 479
	mov	eax, DWORD PTR _NumItems$[ebp]
	sub	eax, 1
	mov	DWORD PTR _SelNew$[ebp], eax
; Line 480
	jmp	SHORT $LN13@OnKey
$LN2@OnKey:
; Line 482
	mov	eax, DWORD PTR _pMsg$[ebp]
	push	eax
	call	_WM_DefaultProc
	add	esp, 4
$LN13@OnKey:
; Line 484
	mov	eax, DWORD PTR _SelOld$[ebp]
	cmp	eax, DWORD PTR _SelNew$[ebp]
	je	SHORT $LN17@OnKey
; Line 485
	mov	eax, DWORD PTR _SelNew$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN17@OnKey:
; Line 487
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@OnKey
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN21@OnKey:
	DD	1
	DD	$LN20@OnKey
$LN20@OnKey:
	DD	-96					; ffffffa0H
	DD	8
	DD	$LN19@OnKey
$LN19@OnKey:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
	npad	1
$LN22@OnKey:
	DD	$LN10@OnKey
	DD	$LN6@OnKey
	DD	$LN12@OnKey
	DD	$LN8@OnKey
	DD	$LN2@OnKey
	DD	$LN2@OnKey
	DD	$LN2@OnKey
	DD	$LN4@OnKey
	DD	$LN3@OnKey
__OnKey	ENDP
_TEXT	ENDS
EXTRN	_WM_InvalidateRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __SetSel
_TEXT	SEGMENT
_SelOld$ = -36						; size = 4
_Rect$ = -24						; size = 8
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
__SetSel PROC						; COMDAT
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-232]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 415
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 416
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _SelOld$[ebp], ecx
; Line 417
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	cmp	ecx, DWORD PTR _Sel$[ebp]
	je	$LN2@SetSel
; Line 418
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Sel$[ebp]
	mov	DWORD PTR [eax+140], ecx
; Line 419
	mov	eax, DWORD PTR _SelOld$[ebp]
	push	eax
	lea	ecx, DWORD PTR _Rect$[ebp]
	push	ecx
	mov	edx, DWORD PTR _hObj$[ebp]
	push	edx
	call	__GetRelRectFromIndex
	add	esp, 12					; 0000000cH
; Line 420
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 421
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	push	ecx
	lea	edx, DWORD PTR _Rect$[ebp]
	push	edx
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetRelRectFromIndex
	add	esp, 12					; 0000000cH
; Line 422
	lea	eax, DWORD PTR _Rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	_WM_InvalidateRect
	add	esp, 8
; Line 423
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__UpdateScrollPos
	add	esp, 8
; Line 424
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 425
	push	4
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
; Line 426
	jmp	SHORT $LN3@SetSel
$LN2@SetSel:
; Line 427
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN3@SetSel:
; Line 429
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@SetSel
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 232				; 000000e8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@SetSel:
	DD	1
	DD	$LN6@SetSel
$LN6@SetSel:
	DD	-24					; ffffffe8H
	DD	8
	DD	$LN5@SetSel
$LN5@SetSel:
	DB	82					; 00000052H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
__SetSel ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __UpdateScrollPos
_TEXT	SEGMENT
_NumVisLines$ = -44					; size = 4
_CurrentLine$ = -32					; size = 4
_ItemsPerLine$ = -20					; size = 4
_hScroll$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pObj$ = 12						; size = 4
__UpdateScrollPos PROC					; COMDAT
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-240]
	mov	ecx, 60					; 0000003cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 390
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumItemsPerLine
	add	esp, 4
	mov	DWORD PTR _ItemsPerLine$[ebp], eax
; Line 391
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	eax, DWORD PTR [eax+140]
	cdq
	idiv	DWORD PTR _ItemsPerLine$[ebp]
	mov	DWORD PTR _CurrentLine$[ebp], eax
; Line 392
	mov	eax, DWORD PTR _pObj$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetNumVisLines
	add	esp, 8
	mov	DWORD PTR _NumVisLines$[ebp], eax
; Line 393
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	add	ecx, DWORD PTR _NumVisLines$[ebp]
	cmp	DWORD PTR _CurrentLine$[ebp], ecx
	jl	SHORT $LN3@UpdateScro
; Line 394
	mov	eax, DWORD PTR _CurrentLine$[ebp]
	sub	eax, DWORD PTR _NumVisLines$[ebp]
	add	eax, 1
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [ecx+60], eax
; Line 395
	push	254					; 000000feH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 396
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_WM_SetScrollState
	add	esp, 8
; Line 397
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
	jmp	SHORT $LN2@UpdateScro
$LN3@UpdateScro:
; Line 398
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+60]
	cmp	ecx, DWORD PTR _CurrentLine$[ebp]
	jle	SHORT $LN2@UpdateScro
; Line 399
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _CurrentLine$[ebp]
	mov	DWORD PTR [eax+60], ecx
; Line 400
	push	254					; 000000feH
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_GetDialogItem
	add	esp, 8
	mov	DWORD PTR _hScroll$[ebp], eax
; Line 401
	mov	eax, DWORD PTR _pObj$[ebp]
	add	eax, 56					; 00000038H
	push	eax
	mov	ecx, DWORD PTR _hScroll$[ebp]
	push	ecx
	call	_WM_SetScrollState
	add	esp, 8
; Line 402
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@UpdateScro:
; Line 404
	xor	eax, eax
; Line 405
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__UpdateScrollPos ENDP
_TEXT	ENDS
EXTRN	_GUI_ARRAY_Delete:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT __OnDelete
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
__OnDelete PROC						; COMDAT
; Line 493
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 495
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 496
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_ARRAY_Delete
	add	esp, 4
; Line 497
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 498
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnDelete ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnPidStateChange
_TEXT	SEGMENT
_pState$ = -20						; size = 4
_Index$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnPidStateChange PROC					; COMDAT
; Line 532
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 535
	mov	eax, DWORD PTR _pMsg$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _pState$[ebp], ecx
; Line 536
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	test	ecx, ecx
	jne	SHORT $LN4@OnPidState
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	cmp	ecx, 1
	jne	SHORT $LN4@OnPidState
; Line 537
	mov	eax, DWORD PTR _pState$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR _pState$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__GetIndexFromPos
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _Index$[ebp], eax
; Line 538
	cmp	DWORD PTR _Index$[ebp], 0
	jl	SHORT $LN3@OnPidState
; Line 539
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN3@OnPidState:
; Line 541
	push	1
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
	jmp	SHORT $LN5@OnPidState
$LN4@OnPidState:
; Line 542
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+9]
	cmp	ecx, 1
	jne	SHORT $LN5@OnPidState
	mov	eax, DWORD PTR _pState$[ebp]
	movzx	ecx, BYTE PTR [eax+8]
	test	ecx, ecx
	jne	SHORT $LN5@OnPidState
; Line 543
	push	2
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN5@OnPidState:
; Line 545
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnPidStateChange ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __GetIndexFromPos
_TEXT	SEGMENT
_NumItems$ = -80					; size = 4
_Index$ = -68						; size = 4
_NumItemsPerLine$ = -56					; size = 4
_Skip$ = -44						; size = 4
_Col$ = -32						; size = 4
_Row$ = -20						; size = 4
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_xPos$ = 12						; size = 4
_yPos$ = 16						; size = 4
__GetIndexFromPos PROC					; COMDAT
; Line 504
	push	ebp
	mov	ebp, esp
	sub	esp, 276				; 00000114H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-276]
	mov	ecx, 69					; 00000045H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 506
	mov	DWORD PTR _Skip$[ebp], 0
; Line 508
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 509
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	push	ecx
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _NumItems$[ebp], eax
; Line 510
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__GetNumItemsPerLine
	add	esp, 4
	mov	DWORD PTR _NumItemsPerLine$[ebp], eax
; Line 511
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _yPos$[ebp]
	sub	ecx, DWORD PTR [eax+112]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	esi, DWORD PTR [edx+136]
	mov	eax, DWORD PTR _pObj$[ebp]
	add	esi, DWORD PTR [eax+120]
	mov	eax, ecx
	cdq
	idiv	esi
	mov	DWORD PTR _Row$[ebp], eax
; Line 512
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xPos$[ebp]
	sub	ecx, DWORD PTR [eax+108]
	mov	edx, DWORD PTR _pObj$[ebp]
	mov	esi, DWORD PTR [edx+132]
	mov	eax, DWORD PTR _pObj$[ebp]
	add	esi, DWORD PTR [eax+116]
	mov	eax, ecx
	cdq
	idiv	esi
	mov	DWORD PTR _Col$[ebp], eax
; Line 513
	mov	eax, DWORD PTR _Col$[ebp]
	cmp	eax, DWORD PTR _NumItemsPerLine$[ebp]
	jle	SHORT $LN4@GetIndexFr
; Line 514
	mov	DWORD PTR _Skip$[ebp], 1
$LN4@GetIndexFr:
; Line 516
	cmp	DWORD PTR _Skip$[ebp], 0
	jne	SHORT $LN3@GetIndexFr
; Line 517
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _Row$[ebp]
	add	ecx, DWORD PTR [eax+60]
	imul	ecx, DWORD PTR _NumItemsPerLine$[ebp]
	add	ecx, DWORD PTR _Col$[ebp]
	mov	DWORD PTR _Index$[ebp], ecx
; Line 518
	mov	eax, DWORD PTR _Index$[ebp]
	cmp	eax, DWORD PTR _NumItems$[ebp]
	jle	SHORT $LN2@GetIndexFr
; Line 519
	mov	DWORD PTR _Index$[ebp], -1
$LN2@GetIndexFr:
; Line 521
	jmp	SHORT $LN1@GetIndexFr
$LN3@GetIndexFr:
; Line 522
	mov	DWORD PTR _Index$[ebp], -1
$LN1@GetIndexFr:
; Line 524
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 525
	mov	eax, DWORD PTR _Index$[ebp]
; Line 526
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 276				; 00000114H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__GetIndexFromPos ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __OnTouch
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_pMsg$ = 12						; size = 4
__OnTouch PROC						; COMDAT
; Line 551
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 552
	mov	eax, DWORD PTR _pMsg$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN2@OnTouch
; Line 553
	push	3
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_NotifyParent
	add	esp, 8
$LN2@OnTouch:
; Line 555
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__OnTouch ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_CreateEx
EXTRN	_WIDGET_Effect_None:BYTE
EXTRN	_WIDGET__Init:PROC
EXTRN	_GUI_ARRAY_Create:PROC
EXTRN	_WM_CreateWindowAsChild:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_CreateEx
_TEXT	SEGMENT
_ItemArray$ = -32					; size = 4
_pObj$ = -20						; size = 4
_hObj$ = -8						; size = 4
_x0$ = 8						; size = 4
_y0$ = 12						; size = 4
_xsize$ = 16						; size = 4
_ysize$ = 20						; size = 4
_hParent$ = 24						; size = 4
_WinFlags$ = 28						; size = 4
_ExFlags$ = 32						; size = 4
_Id$ = 36						; size = 4
_xSizeItems$ = 40					; size = 4
_ySizeItems$ = 44					; size = 4
_ICONVIEW_CreateEx PROC					; COMDAT
; Line 648
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 654
	push	104					; 00000068H
	push	OFFSET _ICONVIEW_Callback
	mov	eax, DWORD PTR _WinFlags$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hParent$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ysize$[ebp]
	push	edx
	mov	eax, DWORD PTR _xsize$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	push	edx
	call	_WM_CreateWindowAsChild
	add	esp, 32					; 00000020H
	mov	DWORD PTR _hObj$[ebp], eax
; Line 655
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN1@ICONVIEW_C@2
; Line 656
	call	_GUI_ARRAY_Create
	mov	DWORD PTR _ItemArray$[ebp], eax
; Line 657
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 659
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	mov	DWORD PTR [eax+128], ecx
; Line 661
	push	16					; 00000010H
	mov	eax, DWORD PTR _Id$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pObj$[ebp]
	push	ecx
	call	_WIDGET__Init
	add	esp, 12					; 0000000cH
; Line 662
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+48], OFFSET _WIDGET_Effect_None
; Line 664
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+148], 1229147982		; 49434f4eH
; Line 665
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	DWORD PTR [eax+140], -1
; Line 666
	mov	edi, DWORD PTR _pObj$[ebp]
	add	edi, 80					; 00000050H
	mov	ecx, 12					; 0000000cH
	mov	esi, OFFSET _ICONVIEW__DefaultProps
	rep movsd
; Line 667
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _xSizeItems$[ebp]
	mov	DWORD PTR [eax+132], ecx
; Line 668
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _ySizeItems$[ebp]
	mov	DWORD PTR [eax+136], ecx
; Line 669
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	cx, WORD PTR _ExFlags$[ebp]
	mov	WORD PTR [eax+144], cx
; Line 670
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 671
	push	0
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__SetSel
	add	esp, 8
$LN1@ICONVIEW_C@2:
; Line 674
	mov	eax, DWORD PTR _hObj$[ebp]
; Line 675
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_CreateEx ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_ICONVIEW_AddBitmapItem
EXTRN	_strcpy:PROC
EXTRN	_GUI_ARRAY_AddItem:PROC
EXTRN	_strlen:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_AddBitmapItem
_TEXT	SEGMENT
_r$ = -100						; size = 4
_Len$ = -88						; size = 4
_Index$ = -76						; size = 4
_ItemArray$ = -64					; size = 4
_pItem$ = -52						; size = 4
_Item$ = -40						; size = 20
_pObj$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hObj$ = 8						; size = 4
_pBitmap$ = 12						; size = 4
_pText$ = 16						; size = 4
_ICONVIEW_AddBitmapItem PROC				; COMDAT
; Line 681
	push	ebp
	mov	ebp, esp
	sub	esp, 296				; 00000128H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-296]
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 687
	mov	DWORD PTR _r$[ebp], 1
; Line 688
	cmp	DWORD PTR _hObj$[ebp], 0
	je	$LN2@ICONVIEW_A
; Line 690
	mov	DWORD PTR _Item$[ebp], OFFSET _ICONVIEW__DrawBitmap
; Line 691
	mov	DWORD PTR _Item$[ebp+4], OFFSET _ICONVIEW__DrawText
; Line 692
	mov	eax, DWORD PTR _pBitmap$[ebp]
	mov	DWORD PTR _Item$[ebp+8], eax
; Line 693
	mov	DWORD PTR _Item$[ebp+12], 0
; Line 694
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 695
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+128]
	mov	DWORD PTR _ItemArray$[ebp], ecx
; Line 696
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 697
	mov	eax, DWORD PTR _ItemArray$[ebp]
	push	eax
	call	_GUI_ARRAY_GetNumItems
	add	esp, 4
	mov	DWORD PTR _Index$[ebp], eax
; Line 698
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	call	_strlen
	add	esp, 4
	mov	DWORD PTR _Len$[ebp], eax
; Line 699
	mov	eax, DWORD PTR _Len$[ebp]
	add	eax, 21					; 00000015H
	push	eax
	lea	ecx, DWORD PTR _Item$[ebp]
	push	ecx
	mov	edx, DWORD PTR _ItemArray$[ebp]
	push	edx
	call	_GUI_ARRAY_AddItem
	add	esp, 12					; 0000000cH
	test	eax, eax
	jne	SHORT $LN1@ICONVIEW_A
; Line 700
	mov	eax, DWORD PTR _Index$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ItemArray$[ebp]
	push	ecx
	call	_GUI_ARRAY_GetpItemLocked
	add	esp, 8
	mov	DWORD PTR _pItem$[ebp], eax
; Line 701
	mov	eax, DWORD PTR _pText$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pItem$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	_strcpy
	add	esp, 8
; Line 702
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pItem$[ebp], 0
; Line 703
	mov	DWORD PTR _r$[ebp], 0
$LN1@ICONVIEW_A:
; Line 705
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	__ManageAutoScroll
	add	esp, 4
$LN2@ICONVIEW_A:
; Line 708
	mov	eax, DWORD PTR _r$[ebp]
; Line 709
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@ICONVIEW_A
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 296				; 00000128H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@ICONVIEW_A:
	DD	1
	DD	$LN6@ICONVIEW_A
$LN6@ICONVIEW_A:
	DD	-40					; ffffffd8H
	DD	20					; 00000014H
	DD	$LN5@ICONVIEW_A
$LN5@ICONVIEW_A:
	DB	73					; 00000049H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	0
_ICONVIEW_AddBitmapItem ENDP
_TEXT	ENDS
EXTRN	_GUI_DrawBitmap:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW__DrawBitmap
_TEXT	SEGMENT
_pBitmap$ = -8						; size = 4
_pRect$ = 8						; size = 4
_pData$ = 12						; size = 4
_ICONVIEW__DrawBitmap PROC				; COMDAT
; Line 567
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 569
	mov	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pBitmap$[ebp], eax
; Line 570
	mov	eax, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [eax+2]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	ecx, WORD PTR [edx]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	eax, WORD PTR [edx+4]
	mov	edx, DWORD PTR _pRect$[ebp]
	movsx	edx, WORD PTR [edx]
	sub	eax, edx
	add	eax, 1
	mov	edx, DWORD PTR _pBitmap$[ebp]
	movzx	edx, WORD PTR [edx]
	sub	eax, edx
	cdq
	sub	eax, edx
	sar	eax, 1
	add	ecx, eax
	push	ecx
	mov	eax, DWORD PTR _pBitmap$[ebp]
	push	eax
	call	_GUI_DrawBitmap
	add	esp, 12					; 0000000cH
; Line 571
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW__DrawBitmap ENDP
_TEXT	ENDS
EXTRN	_GUI_DispStringInRect:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW__DrawText
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
_pRect$ = 12						; size = 4
_s$ = 16						; size = 4
_ICONVIEW__DrawText PROC				; COMDAT
; Line 577
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 578
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	mov	edx, DWORD PTR _pRect$[ebp]
	push	edx
	mov	eax, DWORD PTR _s$[ebp]
	push	eax
	call	_GUI_DispStringInRect
	add	esp, 12					; 0000000cH
; Line 579
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW__DrawText ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_SetBkColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_SetBkColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_ICONVIEW_SetBkColor PROC				; COMDAT
; Line 715
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 717
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN4@ICONVIEW_S
; Line 719
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 720
	cmp	DWORD PTR _Index$[ebp], 3
	jae	SHORT $LN2@ICONVIEW_S
; Line 721
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+84]
	cmp	edx, DWORD PTR _Color$[ebp]
	je	SHORT $LN2@ICONVIEW_S
; Line 722
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+84], edx
; Line 723
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@ICONVIEW_S:
; Line 726
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN4@ICONVIEW_S:
; Line 729
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_SetBkColor ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_SetTextColor
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_SetTextColor
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_Index$ = 12						; size = 4
_Color$ = 16						; size = 4
_ICONVIEW_SetTextColor PROC				; COMDAT
; Line 735
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 737
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN4@ICONVIEW_S@2
; Line 739
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 740
	cmp	DWORD PTR _Index$[ebp], 3
	jae	SHORT $LN2@ICONVIEW_S@2
; Line 741
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4+96]
	cmp	edx, DWORD PTR _Color$[ebp]
	je	SHORT $LN2@ICONVIEW_S@2
; Line 742
	mov	eax, DWORD PTR _Index$[ebp]
	mov	ecx, DWORD PTR _pObj$[ebp]
	mov	edx, DWORD PTR _Color$[ebp]
	mov	DWORD PTR [ecx+eax*4+96], edx
; Line 743
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@ICONVIEW_S@2:
; Line 746
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN4@ICONVIEW_S@2:
; Line 749
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_SetTextColor ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_SetFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_SetFont
_TEXT	SEGMENT
_pObj$ = -8						; size = 4
_hObj$ = 8						; size = 4
_pFont$ = 12						; size = 4
_ICONVIEW_SetFont PROC					; COMDAT
; Line 755
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 757
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@ICONVIEW_S@3
; Line 759
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 760
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR _pFont$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 761
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
; Line 762
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_WM_InvalidateWindow
	add	esp, 4
$LN2@ICONVIEW_S@3:
; Line 765
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_SetFont ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_GetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_GetSel
_TEXT	SEGMENT
_pObj$ = -20						; size = 4
_Sel$ = -8						; size = 4
_hObj$ = 8						; size = 4
_ICONVIEW_GetSel PROC					; COMDAT
; Line 771
	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 772
	mov	DWORD PTR _Sel$[ebp], 0
; Line 774
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN1@ICONVIEW_G
; Line 776
	mov	eax, DWORD PTR _hObj$[ebp]
	push	eax
	call	_ICONVIEW_LockH
	add	esp, 4
	mov	DWORD PTR _pObj$[ebp], eax
; Line 777
	mov	eax, DWORD PTR _pObj$[ebp]
	mov	ecx, DWORD PTR [eax+140]
	mov	DWORD PTR _Sel$[ebp], ecx
; Line 778
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pObj$[ebp], 0
$LN1@ICONVIEW_G:
; Line 781
	mov	eax, DWORD PTR _Sel$[ebp]
; Line 782
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_GetSel ENDP
_TEXT	ENDS
PUBLIC	_ICONVIEW_SetSel
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _ICONVIEW_SetSel
_TEXT	SEGMENT
_hObj$ = 8						; size = 4
_Sel$ = 12						; size = 4
_ICONVIEW_SetSel PROC					; COMDAT
; Line 788
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 789
	cmp	DWORD PTR _hObj$[ebp], 0
	je	SHORT $LN2@ICONVIEW_S@4
; Line 791
	mov	eax, DWORD PTR _Sel$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hObj$[ebp]
	push	ecx
	call	__SetSel
	add	esp, 8
$LN2@ICONVIEW_S@4:
; Line 794
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_ICONVIEW_SetSel ENDP
_TEXT	ENDS
END
