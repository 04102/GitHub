; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_SIF_PropFrm.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_SIF_APIList_Prop_Frm
EXTRN	_GUI_SIF__IsInFont_ExtFrm:PROC
EXTRN	_GUI_SIF__GetFontInfo_ExtFrm:PROC
EXTRN	_GUI_SIF__GetCharDistX_ExtFrm:PROC
CONST	SEGMENT
_GUI_SIF_APIList_Prop_Frm DD FLAT:__DispChar
	DD	FLAT:_GUI_SIF__GetCharDistX_ExtFrm
	DD	FLAT:_GUI_SIF__GetFontInfo_ExtFrm
	DD	FLAT:_GUI_SIF__IsInFont_ExtFrm
	ORG $+8
CONST	ENDS
PUBLIC	__$ArrayPad$
EXTRN	_LCD_pColorIndex:DWORD
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_LCD_pBkColorIndex:DWORD
EXTRN	_LCD_SetDrawMode:PROC
EXTRN	_GUI__Read32:PROC
EXTRN	_GUI__Read16:PROC
EXTRN	_GUI_SIF__GetpCharInfo:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_sif_propfrm.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT __DispChar
_TEXT	SEGMENT
_CharInfo$8346 = -84					; size = 16
_OldIndex$8345 = -60					; size = 4
_OldDrawMode$8344 = -48					; size = 4
_pData$ = -36						; size = 4
_pCharInfo$ = -24					; size = 4
_BytesPerLine$ = -9					; size = 1
__$ArrayPad$ = -4					; size = 4
_c$ = 8							; size = 2
__DispChar PROC						; COMDAT
; Line 35
	push	ebp
	mov	ebp, esp
	sub	esp, 280				; 00000118H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-280]
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 38
	push	16					; 00000010H
	movzx	eax, WORD PTR _c$[ebp]
	push	eax
	mov	ecx, DWORD PTR _GUI_Context+28
	push	ecx
	call	_GUI_SIF__GetpCharInfo
	add	esp, 12					; 0000000cH
	mov	DWORD PTR _pCharInfo$[ebp], eax
; Line 39
	cmp	DWORD PTR _pCharInfo$[ebp], 0
	je	$LN2@DispChar
; Line 43
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8346[ebp], ax
; Line 44
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8346[ebp+2], ax
; Line 45
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8346[ebp+4], ax
; Line 46
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8346[ebp+6], ax
; Line 47
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
	mov	WORD PTR _CharInfo$8346[ebp+8], ax
; Line 48
	movzx	eax, WORD PTR _CharInfo$8346[ebp]
	add	eax, 7
	sar	eax, 3
	mov	BYTE PTR _BytesPerLine$[ebp], al
; Line 49
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read16
	add	esp, 4
; Line 50
	lea	eax, DWORD PTR _pCharInfo$[ebp]
	push	eax
	call	_GUI__Read32
	add	esp, 4
	mov	DWORD PTR _CharInfo$8346[ebp+12], eax
; Line 51
	mov	eax, DWORD PTR _GUI_Context+28
	mov	ecx, DWORD PTR [eax+28]
	add	ecx, DWORD PTR _CharInfo$8346[ebp+12]
	mov	DWORD PTR _pData$[ebp], ecx
; Line 52
	movsx	eax, WORD PTR _GUI_Context+42
	and	eax, 4
	or	eax, 2
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
	mov	DWORD PTR _OldDrawMode$8344[ebp], eax
; Line 61
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _BytesPerLine$[ebp]
	push	edx
	push	1
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+27]
	push	ecx
	mov	edx, DWORD PTR _GUI_Context+28
	movzx	eax, BYTE PTR [edx+26]
	push	eax
	movzx	ecx, WORD PTR _CharInfo$8346[ebp+2]
	push	ecx
	movzx	edx, WORD PTR _CharInfo$8346[ebp]
	push	edx
	movsx	eax, WORD PTR _GUI_Context+36
	movsx	ecx, WORD PTR _CharInfo$8346[ebp+6]
	add	eax, ecx
	push	eax
	movsx	edx, WORD PTR _GUI_Context+34
	movsx	eax, WORD PTR _CharInfo$8346[ebp+4]
	add	edx, eax
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 62
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _OldIndex$8345[ebp], ecx
; Line 63
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _LCD_pBkColorIndex
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [eax], edx
; Line 72
	mov	eax, DWORD PTR _LCD_pBkColorIndex
	push	eax
	movzx	ecx, BYTE PTR _BytesPerLine$[ebp]
	movzx	edx, WORD PTR _CharInfo$8346[ebp+2]
	imul	ecx, edx
	add	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	movzx	eax, BYTE PTR _BytesPerLine$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _GUI_Context+28
	movzx	edx, BYTE PTR [ecx+27]
	push	edx
	mov	eax, DWORD PTR _GUI_Context+28
	movzx	ecx, BYTE PTR [eax+26]
	push	ecx
	movzx	edx, WORD PTR _CharInfo$8346[ebp+2]
	push	edx
	movzx	eax, WORD PTR _CharInfo$8346[ebp]
	push	eax
	movsx	ecx, WORD PTR _GUI_Context+36
	movsx	edx, WORD PTR _CharInfo$8346[ebp+6]
	add	ecx, edx
	push	ecx
	movsx	eax, WORD PTR _GUI_Context+34
	movsx	ecx, WORD PTR _CharInfo$8346[ebp+4]
	add	eax, ecx
	push	eax
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 73
	mov	eax, DWORD PTR _LCD_pColorIndex
	mov	ecx, DWORD PTR _OldIndex$8345[ebp]
	mov	DWORD PTR [eax], ecx
; Line 74
	mov	eax, DWORD PTR _OldDrawMode$8344[ebp]
	push	eax
	call	_LCD_SetDrawMode
	add	esp, 4
; Line 75
	movzx	eax, WORD PTR _CharInfo$8346[ebp+8]
	movsx	ecx, WORD PTR _GUI_Context+34
	add	ecx, eax
	mov	WORD PTR _GUI_Context+34, cx
$LN2@DispChar:
; Line 77
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@DispChar
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@DispChar:
	DD	2
	DD	$LN6@DispChar
$LN6@DispChar:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN4@DispChar
	DD	-84					; ffffffacH
	DD	16					; 00000010H
	DD	$LN5@DispChar
$LN5@DispChar:
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
$LN4@DispChar:
	DB	112					; 00000070H
	DB	67					; 00000043H
	DB	104					; 00000068H
	DB	97					; 00000061H
	DB	114					; 00000072H
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	102					; 00000066H
	DB	111					; 0000006fH
	DB	0
__DispChar ENDP
_TEXT	ENDS
END
