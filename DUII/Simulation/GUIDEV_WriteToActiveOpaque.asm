; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\MemDev\GUIDEV_WriteToActiveOpaque.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG10042 DB	'GUI_MEMDEV__WriteToActiveAt: This color depth currently '
	DB	'not supported', 00H
_DATA	ENDS
PUBLIC	_GUI_MEMDEV__WriteToActiveOpaque
EXTRN	_GUI_Warn:PROC
EXTRN	_GUI_ALLOC_Free:PROC
EXTRN	_GUI_GetpfColor2IndexEx:PROC
EXTRN	_GUI_ALLOC_AllocNoInit:PROC
EXTRN	_GUI_ALLOC_UnlockH:PROC
EXTRN	_GUI_GetpfIndex2ColorEx:PROC
EXTRN	_GUI_Context:BYTE
EXTRN	_LCD_GetBitsPerPixel:PROC
EXTRN	_LCD_DrawBitmap:PROC
EXTRN	_GUI_ALLOC_h2p:PROC
EXTRN	_GUI_ALLOC_LockH:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\memdev\guidev_writetoactiveopaque.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_MEMDEV__WriteToActiveOpaque
_TEXT	SEGMENT
tv306 = -572						; size = 4
tv238 = -572						; size = 4
_Index$10035 = -372					; size = 4
_pDest$10034 = -360					; size = 4
_Index$10028 = -348					; size = 2
_pDest$10027 = -336					; size = 4
_Index$10021 = -321					; size = 1
_pDest$10020 = -312					; size = 4
_pfColor2Index$ = -300					; size = 4
_pfIndex2Color_DST$ = -288				; size = 4
_pfIndex2Color_DEV$ = -276				; size = 4
_hBuffer$ = -264					; size = 4
_Color$ = -252						; size = 4
_pBuffer$ = -240					; size = 4
_pSrc$ = -228						; size = 4
_pData$ = -216						; size = 4
_BytesPerPixel_Device$ = -204				; size = 4
_BytesPerPixel_Layer$ = -192				; size = 4
_BitsPerPixel_Device$ = -180				; size = 4
_BitsPerPixel_Layer$ = -168				; size = 4
_BytesPerLine_Device$ = -156				; size = 4
_NumPixels$ = -144					; size = 4
_xSizeDevice$ = -132					; size = 4
_xOff$ = -120						; size = 4
_yi$ = -108						; size = 4
_y0$ = -96						; size = 4
_YSize$ = -84						; size = 4
_XSize$ = -72						; size = 4
_pUsage$ = -60						; size = 4
_hUsage$ = -48						; size = 4
_pDev$ = -36						; size = 4
_pTrans$ = -24						; size = 4
_aTrans$ = -12						; size = 8
_hMem$ = 8						; size = 4
_x$ = 12						; size = 4
_y$ = 16						; size = 4
_GUI_MEMDEV__WriteToActiveOpaque PROC			; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 572				; 0000023cH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-572]
	mov	ecx, 143				; 0000008fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	DWORD PTR _aTrans$[ebp], 0
	mov	DWORD PTR _aTrans$[ebp+4], 1
; Line 66
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDev$[ebp], eax
; Line 67
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	mov	DWORD PTR _hUsage$[ebp], ecx
; Line 68
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+10]
	mov	DWORD PTR _YSize$[ebp], ecx
; Line 69
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [eax+12]
	mov	DWORD PTR _BytesPerLine_Device$[ebp], ecx
; Line 70
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	DWORD PTR _BitsPerPixel_Device$[ebp], ecx
; Line 71
	mov	eax, DWORD PTR _pDev$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pData$[ebp], eax
; Line 72
	cmp	DWORD PTR _BitsPerPixel_Device$[ebp], 8
	ja	SHORT $LN47@GUI_MEMDEV
; Line 73
	mov	DWORD PTR _BytesPerPixel_Device$[ebp], 1
	jmp	SHORT $LN46@GUI_MEMDEV
$LN47@GUI_MEMDEV:
; Line 74
	cmp	DWORD PTR _BitsPerPixel_Device$[ebp], 16 ; 00000010H
	ja	SHORT $LN45@GUI_MEMDEV
; Line 75
	mov	DWORD PTR _BytesPerPixel_Device$[ebp], 2
; Line 76
	jmp	SHORT $LN46@GUI_MEMDEV
$LN45@GUI_MEMDEV:
; Line 77
	mov	DWORD PTR _BytesPerPixel_Device$[ebp], 4
$LN46@GUI_MEMDEV:
; Line 79
	cmp	DWORD PTR _BitsPerPixel_Device$[ebp], 1
	jne	SHORT $LN43@GUI_MEMDEV
; Line 80
	lea	eax, DWORD PTR _aTrans$[ebp]
	mov	DWORD PTR _pTrans$[ebp], eax
; Line 81
	jmp	SHORT $LN42@GUI_MEMDEV
$LN43@GUI_MEMDEV:
; Line 82
	mov	DWORD PTR _pTrans$[ebp], 0
$LN42@GUI_MEMDEV:
; Line 84
	cmp	DWORD PTR _hUsage$[ebp], 0
	je	$LN41@GUI_MEMDEV
; Line 85
	mov	eax, DWORD PTR _hUsage$[ebp]
	push	eax
	call	_GUI_ALLOC_h2p
	add	esp, 4
	mov	DWORD PTR _pUsage$[ebp], eax
; Line 86
	mov	DWORD PTR _yi$[ebp], 0
	jmp	SHORT $LN40@GUI_MEMDEV
$LN39@GUI_MEMDEV:
	mov	eax, DWORD PTR _yi$[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$[ebp], eax
$LN40@GUI_MEMDEV:
	mov	eax, DWORD PTR _yi$[ebp]
	cmp	eax, DWORD PTR _YSize$[ebp]
	jge	$LN38@GUI_MEMDEV
; Line 87
	mov	DWORD PTR _xOff$[ebp], 0
; Line 88
	mov	esi, esp
	mov	eax, DWORD PTR _yi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUsage$[ebp]
	push	edx
	mov	eax, DWORD PTR _pUsage$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _XSize$[ebp], eax
; Line 89
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+8]
	cmp	DWORD PTR _XSize$[ebp], ecx
	jne	$LN37@GUI_MEMDEV
; Line 93
	mov	eax, DWORD PTR _yi$[ebp]
	mov	DWORD PTR _y0$[ebp], eax
$LN36@GUI_MEMDEV:
; Line 94
	mov	eax, DWORD PTR _yi$[ebp]
	add	eax, 1
	mov	esi, esp
	push	eax
	lea	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUsage$[ebp]
	push	edx
	mov	eax, DWORD PTR _pUsage$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	cmp	eax, DWORD PTR _XSize$[ebp]
	jne	SHORT $LN35@GUI_MEMDEV
; Line 95
	mov	eax, DWORD PTR _yi$[ebp]
	add	eax, 1
	mov	DWORD PTR _yi$[ebp], eax
; Line 96
	jmp	SHORT $LN36@GUI_MEMDEV
$LN35@GUI_MEMDEV:
; Line 97
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine_Device$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel_Device$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _yi$[ebp]
	sub	ecx, DWORD PTR _y0$[ebp]
	add	ecx, 1
	push	ecx
	mov	edx, DWORD PTR _pDev$[ebp]
	movsx	eax, WORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, DWORD PTR _y0$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 98
	mov	eax, DWORD PTR _yi$[ebp]
	sub	eax, DWORD PTR _y0$[ebp]
	add	eax, 1
	imul	eax, DWORD PTR _BytesPerLine_Device$[ebp]
	add	eax, DWORD PTR _pData$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
; Line 99
	jmp	$LN34@GUI_MEMDEV
$LN37@GUI_MEMDEV:
; Line 103
	cmp	DWORD PTR _BitsPerPixel_Device$[ebp], 1
	jne	$LN29@GUI_MEMDEV
$LN32@GUI_MEMDEV:
; Line 107
	cmp	DWORD PTR _XSize$[ebp], 0
	je	$LN31@GUI_MEMDEV
; Line 108
	mov	eax, DWORD PTR _xOff$[ebp]
	and	eax, 7
	mov	ecx, DWORD PTR _XSize$[ebp]
	lea	edx, DWORD PTR [ecx+eax+7]
	and	edx, -8					; fffffff8H
	mov	DWORD PTR _XSize$[ebp], edx
; Line 109
	mov	eax, DWORD PTR _xOff$[ebp]
	and	eax, -8					; fffffff8H
	mov	DWORD PTR _xOff$[ebp], eax
; Line 110
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xOff$[ebp]
	sar	ecx, 3
	add	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine_Device$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel_Device$[ebp]
	push	eax
	push	1
	push	1
	push	1
	mov	ecx, DWORD PTR _XSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _yi$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _xOff$[ebp]
	push	eax
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 111
	mov	eax, DWORD PTR _xOff$[ebp]
	add	eax, DWORD PTR _XSize$[ebp]
	mov	DWORD PTR _xOff$[ebp], eax
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR _yi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUsage$[ebp]
	push	edx
	mov	eax, DWORD PTR _pUsage$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _XSize$[ebp], eax
; Line 113
	jmp	$LN32@GUI_MEMDEV
$LN31@GUI_MEMDEV:
; Line 114
	jmp	SHORT $LN30@GUI_MEMDEV
$LN29@GUI_MEMDEV:
; Line 115
	cmp	DWORD PTR _XSize$[ebp], 0
	je	SHORT $LN30@GUI_MEMDEV
; Line 116
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xOff$[ebp]
	imul	ecx, DWORD PTR _BytesPerPixel_Device$[ebp]
	add	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine_Device$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel_Device$[ebp]
	push	eax
	push	1
	push	1
	push	1
	mov	ecx, DWORD PTR _XSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _y$[ebp]
	add	edx, DWORD PTR _yi$[ebp]
	push	edx
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, DWORD PTR _xOff$[ebp]
	push	eax
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 117
	mov	eax, DWORD PTR _xOff$[ebp]
	add	eax, DWORD PTR _XSize$[ebp]
	mov	DWORD PTR _xOff$[ebp], eax
; Line 118
	mov	esi, esp
	mov	eax, DWORD PTR _yi$[ebp]
	push	eax
	lea	ecx, DWORD PTR _xOff$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pUsage$[ebp]
	push	edx
	mov	eax, DWORD PTR _pUsage$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+20]
	call	edx
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _XSize$[ebp], eax
; Line 119
	jmp	SHORT $LN29@GUI_MEMDEV
$LN30@GUI_MEMDEV:
; Line 121
	mov	eax, DWORD PTR _pData$[ebp]
	add	eax, DWORD PTR _BytesPerLine_Device$[ebp]
	mov	DWORD PTR _pData$[ebp], eax
$LN34@GUI_MEMDEV:
; Line 123
	jmp	$LN39@GUI_MEMDEV
$LN38@GUI_MEMDEV:
; Line 124
	jmp	$LN27@GUI_MEMDEV
$LN41@GUI_MEMDEV:
; Line 126
	call	_LCD_GetBitsPerPixel
	mov	DWORD PTR _BitsPerPixel_Layer$[ebp], eax
; Line 127
	cmp	DWORD PTR _BitsPerPixel_Layer$[ebp], 8
	ja	SHORT $LN26@GUI_MEMDEV
; Line 128
	mov	DWORD PTR _BytesPerPixel_Layer$[ebp], 1
	jmp	SHORT $LN25@GUI_MEMDEV
$LN26@GUI_MEMDEV:
; Line 129
	cmp	DWORD PTR _BitsPerPixel_Layer$[ebp], 16	; 00000010H
	ja	SHORT $LN24@GUI_MEMDEV
; Line 130
	mov	DWORD PTR _BytesPerPixel_Layer$[ebp], 2
; Line 131
	jmp	SHORT $LN25@GUI_MEMDEV
$LN24@GUI_MEMDEV:
; Line 132
	mov	DWORD PTR _BytesPerPixel_Layer$[ebp], 4
$LN25@GUI_MEMDEV:
; Line 134
	mov	eax, DWORD PTR _pDev$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR [ecx+16]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR _pfIndex2Color_DEV$[ebp], eax
; Line 135
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetpfIndex2ColorEx
	add	esp, 4
	mov	DWORD PTR _pfIndex2Color_DST$[ebp], eax
; Line 136
	mov	eax, DWORD PTR _pfIndex2Color_DEV$[ebp]
	cmp	eax, DWORD PTR _pfIndex2Color_DST$[ebp]
	jne	SHORT $LN22@GUI_MEMDEV
; Line 141
	mov	eax, DWORD PTR _pTrans$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pData$[ebp]
	push	ecx
	mov	edx, DWORD PTR _BytesPerLine_Device$[ebp]
	push	edx
	mov	eax, DWORD PTR _BitsPerPixel_Device$[ebp]
	push	eax
	push	1
	push	1
	mov	ecx, DWORD PTR _YSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pDev$[ebp]
	movsx	eax, WORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
	jmp	$LN27@GUI_MEMDEV
$LN22@GUI_MEMDEV:
; Line 142
	cmp	DWORD PTR _BytesPerPixel_Device$[ebp], 4
	jne	$LN20@GUI_MEMDEV
; Line 146
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+8]
	mov	DWORD PTR _xSizeDevice$[ebp], ecx
; Line 147
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDev$[ebp], 0
; Line 148
	mov	eax, DWORD PTR _BytesPerPixel_Layer$[ebp]
	imul	eax, DWORD PTR _xSizeDevice$[ebp]
	push	eax
	call	_GUI_ALLOC_AllocNoInit
	add	esp, 4
	mov	DWORD PTR _hBuffer$[ebp], eax
; Line 149
	cmp	DWORD PTR _hBuffer$[ebp], 0
	je	$LN19@GUI_MEMDEV
; Line 150
	mov	eax, DWORD PTR _hBuffer$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pBuffer$[ebp], eax
; Line 151
	mov	eax, DWORD PTR _hMem$[ebp]
	push	eax
	call	_GUI_ALLOC_LockH
	add	esp, 4
	mov	DWORD PTR _pDev$[ebp], eax
; Line 152
	mov	eax, DWORD PTR _pDev$[ebp]
	add	eax, 24					; 00000018H
	mov	DWORD PTR _pSrc$[ebp], eax
; Line 153
	movzx	eax, BYTE PTR _GUI_Context+17
	push	eax
	call	_GUI_GetpfColor2IndexEx
	add	esp, 4
	mov	DWORD PTR _pfColor2Index$[ebp], eax
$LN18@GUI_MEMDEV:
; Line 155
	mov	eax, DWORD PTR _pDev$[ebp]
	movsx	ecx, WORD PTR [eax+8]
	mov	DWORD PTR _NumPixels$[ebp], ecx
; Line 156
	mov	eax, DWORD PTR _BytesPerPixel_Layer$[ebp]
	mov	DWORD PTR tv238[ebp], eax
	cmp	DWORD PTR tv238[ebp], 1
	je	SHORT $LN13@GUI_MEMDEV
	cmp	DWORD PTR tv238[ebp], 2
	je	$LN9@GUI_MEMDEV
	cmp	DWORD PTR tv238[ebp], 4
	je	$LN5@GUI_MEMDEV
	jmp	$LN14@GUI_MEMDEV
$LN13@GUI_MEMDEV:
; Line 160
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$10020[ebp], eax
$LN12@GUI_MEMDEV:
; Line 162
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Color$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$[ebp]
	add	edx, 4
	mov	DWORD PTR _pSrc$[ebp], edx
; Line 163
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _Index$10021[ebp], al
; Line 164
	mov	eax, DWORD PTR _pDest$10020[ebp]
	mov	cl, BYTE PTR _Index$10021[ebp]
	mov	BYTE PTR [eax], cl
	mov	edx, DWORD PTR _pDest$10020[ebp]
	add	edx, 1
	mov	DWORD PTR _pDest$10020[ebp], edx
; Line 165
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN12@GUI_MEMDEV
; Line 167
	jmp	$LN14@GUI_MEMDEV
$LN9@GUI_MEMDEV:
; Line 171
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$10027[ebp], eax
$LN8@GUI_MEMDEV:
; Line 173
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Color$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$[ebp]
	add	edx, 4
	mov	DWORD PTR _pSrc$[ebp], edx
; Line 174
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	WORD PTR _Index$10028[ebp], ax
; Line 175
	mov	eax, DWORD PTR _pDest$10027[ebp]
	mov	cx, WORD PTR _Index$10028[ebp]
	mov	WORD PTR [eax], cx
	mov	edx, DWORD PTR _pDest$10027[ebp]
	add	edx, 2
	mov	DWORD PTR _pDest$10027[ebp], edx
; Line 176
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN8@GUI_MEMDEV
; Line 178
	jmp	SHORT $LN14@GUI_MEMDEV
$LN5@GUI_MEMDEV:
; Line 182
	mov	eax, DWORD PTR _pBuffer$[ebp]
	mov	DWORD PTR _pDest$10034[ebp], eax
$LN4@GUI_MEMDEV:
; Line 184
	mov	eax, DWORD PTR _pSrc$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _Color$[ebp], ecx
	mov	edx, DWORD PTR _pSrc$[ebp]
	add	edx, 4
	mov	DWORD PTR _pSrc$[ebp], edx
; Line 185
	mov	esi, esp
	mov	eax, DWORD PTR _Color$[ebp]
	push	eax
	call	DWORD PTR _pfColor2Index$[ebp]
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _Index$10035[ebp], eax
; Line 186
	mov	eax, DWORD PTR _pDest$10034[ebp]
	mov	ecx, DWORD PTR _Index$10035[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _pDest$10034[ebp]
	add	edx, 4
	mov	DWORD PTR _pDest$10034[ebp], edx
; Line 187
	mov	eax, DWORD PTR _NumPixels$[ebp]
	sub	eax, 1
	mov	DWORD PTR _NumPixels$[ebp], eax
	jne	SHORT $LN4@GUI_MEMDEV
$LN14@GUI_MEMDEV:
; Line 194
	mov	eax, DWORD PTR _y$[ebp]
	mov	DWORD PTR tv306[ebp], eax
	mov	ecx, DWORD PTR _y$[ebp]
	add	ecx, 1
	mov	DWORD PTR _y$[ebp], ecx
	mov	edx, DWORD PTR _pTrans$[ebp]
	push	edx
	mov	eax, DWORD PTR _pBuffer$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _BytesPerPixel_Layer$[ebp]
	shl	ecx, 3
	push	ecx
	push	1
	push	1
	push	1
	mov	edx, DWORD PTR _pDev$[ebp]
	movsx	eax, WORD PTR [edx+8]
	push	eax
	mov	ecx, DWORD PTR tv306[ebp]
	push	ecx
	mov	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_LCD_DrawBitmap
	add	esp, 40					; 00000028H
; Line 195
	mov	eax, DWORD PTR _YSize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _YSize$[ebp], eax
	jne	$LN18@GUI_MEMDEV
; Line 196
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pBuffer$[ebp], 0
; Line 197
	mov	eax, DWORD PTR _hBuffer$[ebp]
	push	eax
	call	_GUI_ALLOC_Free
	add	esp, 4
$LN19@GUI_MEMDEV:
; Line 199
	jmp	SHORT $LN27@GUI_MEMDEV
$LN20@GUI_MEMDEV:
; Line 200
	push	OFFSET $SG10042
	call	_GUI_Warn
	add	esp, 4
$LN27@GUI_MEMDEV:
; Line 203
	call	_GUI_ALLOC_UnlockH
	mov	DWORD PTR _pDev$[ebp], 0
; Line 204
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN53@GUI_MEMDEV
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 572				; 0000023cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN53@GUI_MEMDEV:
	DD	2
	DD	$LN52@GUI_MEMDEV
$LN52@GUI_MEMDEV:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN50@GUI_MEMDEV
	DD	-120					; ffffff88H
	DD	4
	DD	$LN51@GUI_MEMDEV
$LN51@GUI_MEMDEV:
	DB	120					; 00000078H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	0
$LN50@GUI_MEMDEV:
	DB	97					; 00000061H
	DB	84					; 00000054H
	DB	114					; 00000072H
	DB	97					; 00000061H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	0
_GUI_MEMDEV__WriteToActiveOpaque ENDP
_TEXT	ENDS
END
