; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_BMP_Serialize.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	_GUI_BMP_SerializeEx
EXTRN	_LCD_GetPixelColor:PROC
EXTRN	_LCD_GetPixelIndex:PROC
EXTRN	_GUI_Index2Color:PROC
EXTRN	_LCD_GetBitsPerPixel:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_bmp_serialize.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_BMP_SerializeEx
_TEXT	SEGMENT
tv76 = -376						; size = 4
tv73 = -376						; size = 4
tv69 = -376						; size = 4
_r$6132 = -176						; size = 4
_g$6131 = -164						; size = 4
_b$6130 = -152						; size = 4
_Color$6129 = -140					; size = 4
_Color16$6128 = -128					; size = 2
_Color$6119 = -116					; size = 4
_FileSize$ = -104					; size = 4
_BitmapOffset$ = -92					; size = 4
_Padding$ = -80						; size = 4
_NumColors$ = -68					; size = 4
_BytesPerLine$ = -56					; size = 4
_BPP$ = -44						; size = 4
_i$ = -32						; size = 4
_y$ = -20						; size = 4
_x$ = -8						; size = 4
_pfSerialize$ = 8					; size = 4
_x0$ = 12						; size = 4
_y0$ = 16						; size = 4
_xSize$ = 20						; size = 4
_ySize$ = 24						; size = 4
_p$ = 28						; size = 4
_GUI_BMP_SerializeEx PROC				; COMDAT
; Line 71
	push	ebp
	mov	ebp, esp
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-376]
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 75
	call	_LCD_GetBitsPerPixel
	mov	DWORD PTR _BPP$[ebp], eax
; Line 76
	cmp	DWORD PTR _BPP$[ebp], 8
	jle	SHORT $LN17@GUI_BMP_Se
	mov	eax, DWORD PTR _xSize$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	DWORD PTR tv69[ebp], ecx
	jmp	SHORT $LN18@GUI_BMP_Se
$LN17@GUI_BMP_Se:
	mov	edx, DWORD PTR _xSize$[ebp]
	add	edx, 3
	mov	DWORD PTR tv69[ebp], edx
$LN18@GUI_BMP_Se:
	mov	eax, DWORD PTR tv69[ebp]
	and	eax, -4					; fffffffcH
	mov	DWORD PTR _BytesPerLine$[ebp], eax
; Line 77
	cmp	DWORD PTR _BPP$[ebp], 8
	jle	SHORT $LN19@GUI_BMP_Se
	mov	DWORD PTR tv73[ebp], 0
	jmp	SHORT $LN20@GUI_BMP_Se
$LN19@GUI_BMP_Se:
	mov	eax, 1
	mov	ecx, DWORD PTR _BPP$[ebp]
	shl	eax, cl
	mov	DWORD PTR tv73[ebp], eax
$LN20@GUI_BMP_Se:
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR _NumColors$[ebp], ecx
; Line 78
	cmp	DWORD PTR _BPP$[ebp], 8
	jle	SHORT $LN21@GUI_BMP_Se
	mov	eax, DWORD PTR _xSize$[ebp]
	shl	eax, 1
	mov	DWORD PTR tv76[ebp], eax
	jmp	SHORT $LN22@GUI_BMP_Se
$LN21@GUI_BMP_Se:
	mov	ecx, DWORD PTR _xSize$[ebp]
	mov	DWORD PTR tv76[ebp], ecx
$LN22@GUI_BMP_Se:
	mov	edx, DWORD PTR _BytesPerLine$[ebp]
	sub	edx, DWORD PTR tv76[ebp]
	mov	DWORD PTR _Padding$[ebp], edx
; Line 82
	mov	eax, DWORD PTR _NumColors$[ebp]
	lea	ecx, DWORD PTR [eax*4+54]
	mov	DWORD PTR _BitmapOffset$[ebp], ecx
; Line 84
	mov	eax, DWORD PTR _ySize$[ebp]
	imul	eax, DWORD PTR _BytesPerLine$[ebp]
	add	eax, DWORD PTR _BitmapOffset$[ebp]
	mov	DWORD PTR _FileSize$[ebp], eax
; Line 85
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	19778					; 00004d42H
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU16
	add	esp, 12					; 0000000cH
; Line 86
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _FileSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 87
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 88
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _BitmapOffset$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 90
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	40					; 00000028H
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 91
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _xSize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 92
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ySize$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 93
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	1
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU16
	add	esp, 12					; 0000000cH
; Line 94
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	xor	ecx, ecx
	cmp	DWORD PTR _BPP$[ebp], 8
	setg	cl
	lea	ecx, DWORD PTR [ecx*8+8]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU16
	add	esp, 12					; 0000000cH
; Line 95
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 96
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 97
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 98
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 99
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _NumColors$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 100
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 102
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN14@GUI_BMP_Se
$LN13@GUI_BMP_Se:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN14@GUI_BMP_Se:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _NumColors$[ebp]
	jge	SHORT $LN12@GUI_BMP_Se
; Line 104
	mov	eax, DWORD PTR _i$[ebp]
	push	eax
	call	_GUI_Index2Color
	add	esp, 4
	mov	DWORD PTR _Color$6119[ebp], eax
; Line 105
	mov	eax, DWORD PTR _Color$6119[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 255				; 000000ffH
	mov	ecx, DWORD PTR _Color$6119[ebp]
	and	ecx, 65280				; 0000ff00H
	or	eax, ecx
	mov	edx, DWORD PTR _Color$6119[ebp]
	and	edx, 255				; 000000ffH
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	DWORD PTR _Color$6119[ebp], eax
; Line 106
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Color$6119[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU32
	add	esp, 12					; 0000000cH
; Line 107
	jmp	SHORT $LN13@GUI_BMP_Se
$LN12@GUI_BMP_Se:
; Line 109
	mov	eax, DWORD PTR _ySize$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
	jmp	SHORT $LN11@GUI_BMP_Se
$LN10@GUI_BMP_Se:
	mov	eax, DWORD PTR _y$[ebp]
	sub	eax, 1
	mov	DWORD PTR _y$[ebp], eax
$LN11@GUI_BMP_Se:
	cmp	DWORD PTR _y$[ebp], 0
	jl	$LN15@GUI_BMP_Se
; Line 110
	mov	DWORD PTR _x$[ebp], 0
	jmp	SHORT $LN8@GUI_BMP_Se
$LN7@GUI_BMP_Se:
	mov	eax, DWORD PTR _x$[ebp]
	add	eax, 1
	mov	DWORD PTR _x$[ebp], eax
$LN8@GUI_BMP_Se:
	mov	eax, DWORD PTR _x$[ebp]
	cmp	eax, DWORD PTR _xSize$[ebp]
	jge	$LN6@GUI_BMP_Se
; Line 111
	cmp	DWORD PTR _BPP$[ebp], 8
	jg	SHORT $LN5@GUI_BMP_Se
; Line 112
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _y0$[ebp]
	add	ecx, DWORD PTR _y$[ebp]
	push	ecx
	mov	edx, DWORD PTR _x0$[ebp]
	add	edx, DWORD PTR _x$[ebp]
	push	edx
	call	_LCD_GetPixelIndex
	add	esp, 8
	push	eax
	call	DWORD PTR _pfSerialize$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 113
	jmp	$LN4@GUI_BMP_Se
$LN5@GUI_BMP_Se:
; Line 115
	mov	eax, DWORD PTR _y0$[ebp]
	add	eax, DWORD PTR _y$[ebp]
	push	eax
	mov	ecx, DWORD PTR _x0$[ebp]
	add	ecx, DWORD PTR _x$[ebp]
	push	ecx
	call	_LCD_GetPixelColor
	add	esp, 8
	mov	DWORD PTR _Color$6129[ebp], eax
; Line 116
	mov	eax, DWORD PTR _Color$6129[ebp]
	shr	eax, 16					; 00000010H
	imul	eax, 31					; 0000001fH
	add	eax, 127				; 0000007fH
	xor	edx, edx
	mov	ecx, 255				; 000000ffH
	div	ecx
	mov	DWORD PTR _b$6130[ebp], eax
; Line 117
	mov	eax, DWORD PTR _Color$6129[ebp]
	shr	eax, 8
	and	eax, 255				; 000000ffH
	imul	eax, 31					; 0000001fH
	add	eax, 127				; 0000007fH
	xor	edx, edx
	mov	ecx, 255				; 000000ffH
	div	ecx
	mov	DWORD PTR _g$6131[ebp], eax
; Line 118
	mov	eax, DWORD PTR _Color$6129[ebp]
	and	eax, 255				; 000000ffH
	imul	eax, 31					; 0000001fH
	add	eax, 127				; 0000007fH
	xor	edx, edx
	mov	ecx, 255				; 000000ffH
	div	ecx
	mov	DWORD PTR _r$6132[ebp], eax
; Line 119
	mov	eax, DWORD PTR _r$6132[ebp]
	shl	eax, 10					; 0000000aH
	mov	ecx, DWORD PTR _g$6131[ebp]
	shl	ecx, 5
	or	eax, ecx
	or	eax, DWORD PTR _b$6130[ebp]
	mov	WORD PTR _Color16$6128[ebp], ax
; Line 120
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	movzx	ecx, WORD PTR _Color16$6128[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU16
	add	esp, 12					; 0000000cH
$LN4@GUI_BMP_Se:
; Line 122
	jmp	$LN7@GUI_BMP_Se
$LN6@GUI_BMP_Se:
; Line 124
	mov	DWORD PTR _i$[ebp], 0
	jmp	SHORT $LN3@GUI_BMP_Se
$LN2@GUI_BMP_Se:
	mov	eax, DWORD PTR _i$[ebp]
	add	eax, 1
	mov	DWORD PTR _i$[ebp], eax
$LN3@GUI_BMP_Se:
	mov	eax, DWORD PTR _i$[ebp]
	cmp	eax, DWORD PTR _Padding$[ebp]
	jge	SHORT $LN1@GUI_BMP_Se
; Line 125
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	push	0
	call	DWORD PTR _pfSerialize$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 126
	jmp	SHORT $LN2@GUI_BMP_Se
$LN1@GUI_BMP_Se:
; Line 127
	jmp	$LN10@GUI_BMP_Se
$LN15@GUI_BMP_Se:
; Line 129
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 376				; 00000178H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_BMP_SerializeEx ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SendU16
_TEXT	SEGMENT
_pfSerialize$ = 8					; size = 4
_Data$ = 12						; size = 2
_p$ = 16						; size = 4
__SendU16 PROC						; COMDAT
; Line 47
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 48
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Data$[ebp]
	push	ecx
	call	DWORD PTR _pfSerialize$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 49
	mov	esi, esp
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	movzx	ecx, WORD PTR _Data$[ebp]
	sar	ecx, 8
	push	ecx
	call	DWORD PTR _pfSerialize$[ebp]
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 50
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SendU16 ENDP
; Function compile flags: /Odtp /RTCsu /ZI
_TEXT	ENDS
;	COMDAT __SendU32
_TEXT	SEGMENT
_pfSerialize$ = 8					; size = 4
_Data$ = 12						; size = 4
_p$ = 16						; size = 4
__SendU32 PROC						; COMDAT
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 57
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	movzx	ecx, WORD PTR _Data$[ebp]
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU16
	add	esp, 12					; 0000000cH
; Line 58
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	mov	ecx, DWORD PTR _Data$[ebp]
	shr	ecx, 16					; 00000010H
	push	ecx
	mov	edx, DWORD PTR _pfSerialize$[ebp]
	push	edx
	call	__SendU16
	add	esp, 12					; 0000000cH
; Line 59
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__SendU32 ENDP
_TEXT	ENDS
PUBLIC	_GUI_BMP_Serialize
EXTRN	_LCD_GetXSize:PROC
EXTRN	_LCD_GetYSize:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_BMP_Serialize
_TEXT	SEGMENT
_pfSerialize$ = 8					; size = 4
_p$ = 12						; size = 4
_GUI_BMP_Serialize PROC					; COMDAT
; Line 135
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 136
	mov	eax, DWORD PTR _p$[ebp]
	push	eax
	call	_LCD_GetYSize
	push	eax
	call	_LCD_GetXSize
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _pfSerialize$[ebp]
	push	ecx
	call	_GUI_BMP_SerializeEx
	add	esp, 24					; 00000018H
; Line 137
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_BMP_Serialize ENDP
_TEXT	ENDS
END
