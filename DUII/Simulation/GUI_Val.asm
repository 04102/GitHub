; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

	TITLE	C:\DUII\Simulation\GUI\Core\GUI_Val.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispDecShift
EXTRN	_GUI_DispString:PROC
EXTRN	_GUI_AddDecShift:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__RTC_CheckEsp:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT rtc$TMZ
; File c:\duii\simulation\gui\core\gui_val.c
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _GUI_DispDecShift
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_Shift$ = 16						; size = 1
_GUI_DispDecShift PROC					; COMDAT
; Line 38
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 40
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 41
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Shift$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _Len$[ebp]
	push	edx
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	_GUI_AddDecShift
	add	esp, 16					; 00000010H
; Line 42
	lea	eax, DWORD PTR _ac$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
; Line 43
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_DispDe
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN6@GUI_DispDe:
	DD	2
	DD	$LN5@GUI_DispDe
$LN5@GUI_DispDe:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@GUI_DispDe
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@GUI_DispDe
$LN4@GUI_DispDe:
	DB	115					; 00000073H
	DB	0
$LN3@GUI_DispDe:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispDecShift ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispSDecShift
EXTRN	_GUI_AddSign:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispSDecShift
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_Shift$ = 16						; size = 1
_GUI_DispSDecShift PROC					; COMDAT
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 51
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 52
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	_GUI_AddSign
	add	esp, 8
	mov	DWORD PTR _v$[ebp], eax
; Line 53
	cmp	DWORD PTR _v$[ebp], 0
	jle	SHORT $LN1@GUI_DispSD
; Line 54
	mov	al, BYTE PTR _Len$[ebp]
	sub	al, 1
	mov	BYTE PTR _Len$[ebp], al
$LN1@GUI_DispSD:
; Line 56
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	movzx	ecx, BYTE PTR _Shift$[ebp]
	push	ecx
	movzx	edx, BYTE PTR _Len$[ebp]
	push	edx
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	_GUI_AddDecShift
	add	esp, 16					; 00000010H
; Line 57
	lea	eax, DWORD PTR _ac$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
; Line 58
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@GUI_DispSD
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@GUI_DispSD:
	DD	2
	DD	$LN6@GUI_DispSD
$LN6@GUI_DispSD:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN4@GUI_DispSD
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN5@GUI_DispSD
$LN5@GUI_DispSD:
	DB	115					; 00000073H
	DB	0
$LN4@GUI_DispSD:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispSDecShift ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispDecMin
EXTRN	_GUI_AddDecMin:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispDecMin
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_GUI_DispDecMin PROC					; COMDAT
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 66
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 67
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	_GUI_AddDecMin
	add	esp, 8
; Line 68
	lea	eax, DWORD PTR _ac$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
; Line 69
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_DispDe@2
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@GUI_DispDe@2:
	DD	2
	DD	$LN5@GUI_DispDe@2
$LN5@GUI_DispDe@2:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@GUI_DispDe@2
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@GUI_DispDe@2
$LN4@GUI_DispDe@2:
	DB	115					; 00000073H
	DB	0
$LN3@GUI_DispDe@2:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispDecMin ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispDecSpace
EXTRN	_GUI_Long2Len:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispDecSpace
_TEXT	SEGMENT
tv71 = -244						; size = 4
_Len$ = -41						; size = 1
_s$ = -32						; size = 4
_ac$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_MaxDigits$ = 12					; size = 1
_GUI_DispDecSpace PROC					; COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 244				; 000000f4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 61					; 0000003dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 77
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 79
	mov	eax, DWORD PTR _v$[ebp]
	push	eax
	call	_GUI_Long2Len
	add	esp, 4
	mov	BYTE PTR _Len$[ebp], al
$LN2@GUI_DispDe@3:
; Line 80
	movzx	eax, BYTE PTR _MaxDigits$[ebp]
	movzx	ecx, BYTE PTR _Len$[ebp]
	mov	dl, BYTE PTR _Len$[ebp]
	add	dl, 1
	mov	BYTE PTR _Len$[ebp], dl
	cmp	ecx, eax
	jge	SHORT $LN5@GUI_DispDe@3
	mov	DWORD PTR tv71[ebp], 1
	jmp	SHORT $LN6@GUI_DispDe@3
$LN5@GUI_DispDe@3:
	mov	DWORD PTR tv71[ebp], 0
$LN6@GUI_DispDe@3:
	cmp	DWORD PTR tv71[ebp], 0
	je	SHORT $LN1@GUI_DispDe@3
; Line 81
	mov	eax, DWORD PTR _s$[ebp]
	mov	BYTE PTR [eax], 32			; 00000020H
	mov	ecx, DWORD PTR _s$[ebp]
	add	ecx, 1
	mov	DWORD PTR _s$[ebp], ecx
; Line 82
	jmp	SHORT $LN2@GUI_DispDe@3
$LN1@GUI_DispDe@3:
; Line 83
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	_GUI_AddDecMin
	add	esp, 8
; Line 84
	lea	eax, DWORD PTR _ac$[ebp]
	push	eax
	call	_GUI_DispString
	add	esp, 4
; Line 85
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@GUI_DispDe@3
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@GUI_DispDe@3:
	DD	2
	DD	$LN9@GUI_DispDe@3
$LN9@GUI_DispDe@3:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN7@GUI_DispDe@3
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN8@GUI_DispDe@3
$LN8@GUI_DispDe@3:
	DB	115					; 00000073H
	DB	0
$LN7@GUI_DispDe@3:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispDecSpace ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispSDec
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispSDec
_TEXT	SEGMENT
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_GUI_DispSDec PROC					; COMDAT
; Line 91
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 92
	push	0
	movzx	eax, BYTE PTR _Len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	_GUI_DispSDecShift
	add	esp, 12					; 0000000cH
; Line 93
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispSDec ENDP
_TEXT	ENDS
PUBLIC	_GUI_DispDec
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispDec
_TEXT	SEGMENT
_v$ = 8							; size = 4
_Len$ = 12						; size = 1
_GUI_DispDec PROC					; COMDAT
; Line 99
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 100
	push	0
	movzx	eax, BYTE PTR _Len$[ebp]
	push	eax
	mov	ecx, DWORD PTR _v$[ebp]
	push	ecx
	call	_GUI_DispDecShift
	add	esp, 12					; 0000000cH
; Line 101
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_GUI_DispDec ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	_GUI_DispDecAt
EXTRN	_GUI_DispStringAt:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT _GUI_DispDecAt
_TEXT	SEGMENT
_s$ = -32						; size = 4
_ac$ = -20						; size = 12
__$ArrayPad$ = -4					; size = 4
_v$ = 8							; size = 4
_x$ = 12						; size = 2
_y$ = 16						; size = 2
_Len$ = 20						; size = 1
_GUI_DispDecAt PROC					; COMDAT
; Line 107
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-228]
	mov	ecx, 57					; 00000039H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 109
	lea	eax, DWORD PTR _ac$[ebp]
	mov	DWORD PTR _s$[ebp], eax
; Line 110
	lea	eax, DWORD PTR _s$[ebp]
	push	eax
	push	0
	movzx	ecx, BYTE PTR _Len$[ebp]
	push	ecx
	mov	edx, DWORD PTR _v$[ebp]
	push	edx
	call	_GUI_AddDecShift
	add	esp, 16					; 00000010H
; Line 111
	movsx	eax, WORD PTR _y$[ebp]
	push	eax
	movsx	ecx, WORD PTR _x$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ac$[ebp]
	push	edx
	call	_GUI_DispStringAt
	add	esp, 12					; 0000000cH
; Line 112
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@GUI_DispDe@4
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@GUI_DispDe@4:
	DD	2
	DD	$LN5@GUI_DispDe@4
$LN5@GUI_DispDe@4:
	DD	-20					; ffffffecH
	DD	12					; 0000000cH
	DD	$LN3@GUI_DispDe@4
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN4@GUI_DispDe@4
$LN4@GUI_DispDe@4:
	DB	115					; 00000073H
	DB	0
$LN3@GUI_DispDe@4:
	DB	97					; 00000061H
	DB	99					; 00000063H
	DB	0
_GUI_DispDecAt ENDP
_TEXT	ENDS
END
