; .\crc.SRC generated from: ..\CommonFiles\crc.c
; COMPILER INVOKED BY:
;        C:\Keil\C51\BIN\C51.EXE ..\CommonFiles\crc.c OPTIMIZE(SIZE) BROWSE MDU_F120 INCDIR(..\..\C51\INC\;..\CommonFiles\;..\SU\) DB OE DEFINE(SENSOR,EXTCLK6,NODEBUG,UBLOX,DISPLAYATTACHED) DEBUG OBJECTEXTEND PRINT(.\crc.lst) SRC(.\crc.SRC)


NAME	CRC

?PR?_crc16?CRC       SEGMENT CODE 
?DT?_crc16?CRC       SEGMENT DATA OVERLAYABLE 
	EXTRN	CODE (crc16_table)
	EXTRN	CODE (?C?PLDIIDATA)
	EXTRN	CODE (?C?CLDPTR)
	PUBLIC	_crc16

	RSEG  ?DT?_crc16?CRC
?_crc16?BYTE:
          p?042:   DS   3
	ORG  3
        lim?043:   DS   3
	ORG  6
        crc?044:   DS   2
; // Part of traqmate.c
; // 3/10/2004
; // Author: BBoyer
; //
; // This file contains the crc calculation routines
; //
; 
; /* 
; 	The following function calculates a 16 bit CRC on the 
; 	data pointed to by and over the number of bytes specified.
; 	The value of the CRC is returned.
; */
; 
; extern code crc16_table[];
; 
; /* crc_calc() -- calculate cumulative crc-16 for buffer */
; unsigned int crc16(unsigned char *buf, unsigned int nbytes)

	RSEG  ?PR?_crc16?CRC
_crc16:
	USING	0
			; SOURCE LINE # 17
;---- Variable 'nbytes?041' assigned to Register 'R4/R5' ----
;---- Variable 'buf?040' assigned to Register 'R1/R2/R3' ----
; {
			; SOURCE LINE # 18
; 	unsigned char *p, *lim;
; 	unsigned int crc;
; 
; 	p = (unsigned char *)buf;
			; SOURCE LINE # 22
	MOV  	p?042,R3
	MOV  	p?042+01H,R2
	MOV  	p?042+02H,R1
; 	lim = p + nbytes;
			; SOURCE LINE # 23
	MOV  	A,R1
	ADD  	A,R5
	MOV  	R1,A
	MOV  	A,R2
	ADDC 	A,R4
	MOV  	lim?043,R3
	MOV  	lim?043+01H,A
	MOV  	lim?043+02H,R1
; 	crc = 0;
			; SOURCE LINE # 24
	CLR  	A
	MOV  	crc?044,A
	MOV  	crc?044+01H,A
?C0001:
; 	while (p < lim) {
			; SOURCE LINE # 25
	CLR  	C
	MOV  	DPH,lim?043+01H
	MOV  	DPL,lim?043+02H
	MOV  	A,p?042+02H
	SUBB 	A,DPL
	MOV  	A,p?042+01H
	SUBB 	A,DPH
?C0004:
	JNC  	?C0002
; 		crc = (crc >> 8 ) ^ crc16_table[(crc & 0xFF) ^ *p++];
			; SOURCE LINE # 26
	MOV  	R0,#LOW (p?042)
	CLR  	A
	MOV  	B,#01H
	LCALL	?C?PLDIIDATA
	LCALL	?C?CLDPTR
	MOV  	R7,A
	MOV  	A,crc?044+01H
	XRL  	A,R7
	ADD  	A,ACC
	MOV  	R7,A
	CLR  	A
	RLC  	A
	MOV  	R6,A
	MOV  	A,#LOW (crc16_table)
	ADD  	A,R7
	MOV  	DPL,A
	MOV  	A,#HIGH (crc16_table)
	ADDC 	A,R6
	MOV  	DPH,A
	MOV  	A,crc?044
	MOV  	R7,A
	CLR  	A
	MOVC 	A,@A+DPTR
	MOV  	crc?044,A
	MOV  	A,#01H
	MOVC 	A,@A+DPTR
	XRL  	A,R7
	MOV  	crc?044+01H,A
; 	}
			; SOURCE LINE # 27
	SJMP 	?C0001
?C0002:
; 	return crc;
			; SOURCE LINE # 28
	MOV  	R6,crc?044
	MOV  	R7,crc?044+01H
; }
			; SOURCE LINE # 29
?C0003:
	RET  	
; END OF _crc16

	END
