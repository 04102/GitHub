C51 COMPILER V8.02   CYGSF                                                                 01/19/2010 13:21:37 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE CYGSF
OBJECT MODULE PLACED IN cygsf.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE cygsf.c OPTIMIZE(SIZE) BROWSE INCDIR(C:\Keil\C51\INC\;C:\Keil\Traqmate\132m
                    -icro\CommonFiles\;C:\Keil\Traqmate\132micro\Superflash\;C:\Keil\Traqmate\132micro\DU\;C:\Keil\Traqmate\132micro\SU) DB O
                    -E DEFINE(DISPLAY,EXTCLK6,NODEBUG) DEBUG OBJECTEXTEND

line level    source

   1          // Part of traqmate.c
   2          // 11/10/2003
   3          // Author: GAStephens
   4          //
   5          // This file contains all the common functions to setup the Cygnal 8051 for use in the 
   6          // traqmate program including the system clock, SPI port, UARTs, timers, and
   7          // crossbar switch. 
   8          
   9          #ifdef DISPLAY
  10          #include <display.h>
  11          #endif
  12          #include <stdlib.h>
  13          
  14          
  15          // simultaneously write and read one unsigned char to SPI (mode 3). Blocking.
  16          unsigned char xferSPI (unsigned char ch) {
  17   1      
  18   1              u08 SFRPAGE_SAVE = SFRPAGE;                     // Save Current SFR page
  19   1              SFRPAGE = SPI0_PAGE;
  20   1      
  21   1              SPI0DAT = ch;
  22   1      
  23   1              // wait for shifting
  24   1              while (!SPIF) ;
  25   1      
  26   1              SPIF = 0;                       // clear the xfer complete flag
  27   1      
  28   1              ch = SPI0DAT;
  29   1              
  30   1              SFRPAGE = SFRPAGE_SAVE;
  31   1      
  32   1              return (ch);
  33   1      }
  34          
  35          //-----------------------------------------------------------------------------
  36          // Initialization Subroutines
  37          //-----------------------------------------------------------------------------
  38          
  39          //-----------------------------------------------------------------------------
  40          // SYSCLK_Init
  41          //-----------------------------------------------------------------------------
  42          //
  43          // This routine initializes the system clock.
  44          //
  45          void SYSCLK_Init (void)
  46          {
  47   1      #ifdef INTCLK
                      int i;                                                                  // software timer
                      u08 SFRPAGE_SAVE = SFRPAGE;                             // Save Current SFR page
              
                      SFRPAGE = CONFIG_PAGE;                                  // set SFR page
                      SFRPGCN = 0x01;                                                 // turn on auto SFR paging for interrupts
              
C51 COMPILER V8.02   CYGSF                                                                 01/19/2010 13:21:37 PAGE 2   

                      OSCICN = 0x83;                                                  // 10000011 set internal oscillator to run at max frequency
                      CLKSEL = 0x00;                                                  // Select the internal osc. as the SYSCLK source
              
                      PLL0CN= 0x00;                                                   // Set internal osc. as PLL source
              
                      SFRPAGE = LEGACY_PAGE;
                      FLSCL   = 0x30;                                                 // Set FLASH read time for 100MHz clk
              
                      SFRPAGE = CONFIG_PAGE;
                      PLL0CN |= 0x01;                                                 // Enable Power to PLL
                      PLL0DIV = 0x01;                                                 // Set Pre-divide value to N (N = 1)
                      PLL0FLT = 0x01;                                                 // 00000001 Set the PLL filter register for
                                                                                                      // a reference clock from 19 - 30 MHz
                                                                                                      // and an output clock from 65-100 MHz
                      PLL0MUL = 0x04;                                                 // Multiply SYSCLK by M (M = 4)
              
                      for (i=0; i < 256; i++) ;                               // Wait at least 5us
                      PLL0CN |= 0x02;                                                 // Enable the PLL
                      while(!(PLL0CN & 0x10));                                // Wait until PLL frequency is locked
                      CLKSEL= 0x02;                                                   // Select PLL as SYSCLK source
              
                      SFRPAGE = SFRPAGE_SAVE;                                 // Restore SFR page
              #else // external clock
  77   1              int i;                                                                  // software timer
  78   1              u08 SFRPAGE_SAVE = SFRPAGE;                             // Save Current SFR page
  79   1      
  80   1              SFRPAGE = CONFIG_PAGE;                                  // set SFR page
  81   1              SFRPGCN = 0x01;                                                 // turn on auto SFR paging for interrupts
  82   1      
  83   1              OSCXCN = 0x67;                              // 01100111 start external oscillator
  84   1      
  85   1              for (i=0; i < 256; i++);                                // XTLVLD blanking interval (>1ms)
  86   1              
  87   1              while (!(OSCXCN & 0x80));                               // Wait for crystal osc. to settle
  88   1      
  89   1              CLKSEL = 0x01;                                                  // Select the external osc. as the SYSCLK source
  90   1              OSCICN = 0x00;                                                  // 00000000 turn off internal osc
  91   1      
  92   1      #ifdef EXTCLK4          // 24.576, no PLL
                      SFRPAGE = LEGACY_PAGE;
                      FLSCL   = 0x00;                                                 // Set FLASH read time for 25MHz clk
              #else // PLL
  96   1              PLL0CN = 0x05;                                                  // external osc src, powered
  97   1      
  98   1              SFRPAGE = LEGACY_PAGE;
  99   1      
 100   1      #ifdef EXTCLK5
                      FLSCL   = 0x10;                                                 // Set FLASH read time for 50MHz clk
              #elif defined EXTCLK6
 103   1              FLSCL   = 0x20;                                                 // Set FLASH read time for 75MHz clk
 104   1      #else
                      FLSCL   = 0x30;                                                 // Set FLASH read time for 100MHz clk
              #endif
 107   1      
 108   1              SFRPAGE = CONFIG_PAGE;
 109   1              PLL0DIV = 0x01;                                                 // Set Pre-divide value to N (N = 1)
 110   1              PLL0FLT = 0x01;                                                 // Set the PLL filter register for
 111   1                                                                                              // a reference clock from 19 - 30 MHz
 112   1                                                                                              // and an output clock from 65 - 100 MHz
 113   1      #ifdef EXTCLK5
                      PLL0MUL = 0x02;                                                 // Multiply SYSCLK by M (M = 2)
              #endif
C51 COMPILER V8.02   CYGSF                                                                 01/19/2010 13:21:37 PAGE 3   

 116   1      #ifdef EXTCLK6
 117   1              PLL0MUL = 0x03;                                                 // Multiply SYSCLK by M (M = 3)
 118   1      #endif
 119   1      #if defined (EXTCLK1) || defined (EXTCLK3)
                      PLL0MUL = 0x04;                                                 // Multiply SYSCLK by M (M = 4)
              #endif
 122   1      #ifdef EXTCLK2
                      PLL0MUL = 0x05;                                                 // Multiply SYSCLK by M (M = 4)
              #endif
 125   1      
 126   1              for (i=0; i < 256; i++) ;                               // Wait at least 5us
 127   1              PLL0CN |= 0x02;                                                 // Enable the PLL
 128   1              while(!(PLL0CN & 0x10));                                // Wait until PLL frequency is locked
 129   1              CLKSEL= 0x02;                                                   // Select PLL as SYSCLK source
 130   1      #endif // PLL
 131   1      
 132   1              SFRPAGE = SFRPAGE_SAVE;                                 // Restore SFR page
 133   1      #endif
 134   1      }
 135          
 136          // This function sets up the Cygnal 8051 for use with SPI
 137          void SPIO_Init(void) {
 138   1              u08 SFRPAGE_SAVE = SFRPAGE;                     // Save Current SFR page
 139   1      
 140   1              SFRPAGE = SPI0_PAGE;
 141   1      
 142   1              // program SPI0
 143   1              SPI0CKR = SPI_CLOCK_DIVIDE;                     // set clock rate
 144   1              SPI0CFG = SPI_CONFIG_VALUE;                     // setup up     configuration register
 145   1              SPIF = 0;                                                       // clear interrupt flag
 146   1              SPIEN = 1;                                                      // enable SPI
 147   1      
 148   1              SFRPAGE = SFRPAGE_SAVE;                         // Restore SFR page
 149   1      }
 150          
 151          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    122    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
